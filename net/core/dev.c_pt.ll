; ModuleID = '/llk/IR_all_yes/net/core/dev.c_pt.bc'
source_filename = "../net/core/dev.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+dev_base_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_base_lock\09\09\09\09"
module asm "\09.long\09__crc_dev_base_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_base_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_base_lock\22\09\09\09\09\09"
module asm "__kstrtabns_dev_base_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_name_in_use\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_name_in_use\09\09\09\09"
module asm "\09.long\09__crc_netdev_name_in_use\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_name_in_use:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_name_in_use\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_name_in_use:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_name_node_alt_create\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_name_node_alt_create\09\09\09\09"
module asm "\09.long\09__crc_netdev_name_node_alt_create\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_name_node_alt_create:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_name_node_alt_create\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_name_node_alt_create:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_name_node_alt_destroy\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_name_node_alt_destroy\09\09\09\09"
module asm "\09.long\09__crc_netdev_name_node_alt_destroy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_name_node_alt_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_name_node_alt_destroy\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_name_node_alt_destroy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+softnet_data\22, \22a\22\09"
module asm "\09.weak\09__crc_softnet_data\09\09\09\09"
module asm "\09.long\09__crc_softnet_data\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_softnet_data:\09\09\09\09\09"
module asm "\09.asciz \09\22softnet_data\22\09\09\09\09\09"
module asm "__kstrtabns_softnet_data:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_add_pack\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_add_pack\09\09\09\09"
module asm "\09.long\09__crc_dev_add_pack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_add_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_add_pack\22\09\09\09\09\09"
module asm "__kstrtabns_dev_add_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__dev_remove_pack\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_remove_pack\09\09\09\09"
module asm "\09.long\09__crc___dev_remove_pack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_remove_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_remove_pack\22\09\09\09\09\09"
module asm "__kstrtabns___dev_remove_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_remove_pack\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_remove_pack\09\09\09\09"
module asm "\09.long\09__crc_dev_remove_pack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_remove_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_remove_pack\22\09\09\09\09\09"
module asm "__kstrtabns_dev_remove_pack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_iflink\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_iflink\09\09\09\09"
module asm "\09.long\09__crc_dev_get_iflink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_iflink:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_iflink\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_iflink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_fill_metadata_dst\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_fill_metadata_dst\09\09\09\09"
module asm "\09.long\09__crc_dev_fill_metadata_dst\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_fill_metadata_dst:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_fill_metadata_dst\22\09\09\09\09\09"
module asm "__kstrtabns_dev_fill_metadata_dst:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_fill_forward_path\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_fill_forward_path\09\09\09\09"
module asm "\09.long\09__crc_dev_fill_forward_path\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_fill_forward_path:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_fill_forward_path\22\09\09\09\09\09"
module asm "__kstrtabns_dev_fill_forward_path:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__dev_get_by_name\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_get_by_name\09\09\09\09"
module asm "\09.long\09__crc___dev_get_by_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_get_by_name\22\09\09\09\09\09"
module asm "__kstrtabns___dev_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_by_name_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_by_name_rcu\09\09\09\09"
module asm "\09.long\09__crc_dev_get_by_name_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_name_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_name_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_name_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_by_name\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_by_name\09\09\09\09"
module asm "\09.long\09__crc_dev_get_by_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__dev_get_by_index\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_get_by_index\09\09\09\09"
module asm "\09.long\09__crc___dev_get_by_index\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_get_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_get_by_index\22\09\09\09\09\09"
module asm "__kstrtabns___dev_get_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_by_index_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_by_index_rcu\09\09\09\09"
module asm "\09.long\09__crc_dev_get_by_index_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_index_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_index_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_index_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_by_index\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_by_index\09\09\09\09"
module asm "\09.long\09__crc_dev_get_by_index\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_index\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_index:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_by_napi_id\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_by_napi_id\09\09\09\09"
module asm "\09.long\09__crc_dev_get_by_napi_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_by_napi_id:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_by_napi_id\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_by_napi_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_getbyhwaddr_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_getbyhwaddr_rcu\09\09\09\09"
module asm "\09.long\09__crc_dev_getbyhwaddr_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_getbyhwaddr_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_getbyhwaddr_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_dev_getbyhwaddr_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_getfirstbyhwtype\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_getfirstbyhwtype\09\09\09\09"
module asm "\09.long\09__crc_dev_getfirstbyhwtype\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_getfirstbyhwtype:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_getfirstbyhwtype\22\09\09\09\09\09"
module asm "__kstrtabns_dev_getfirstbyhwtype:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__dev_get_by_flags\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_get_by_flags\09\09\09\09"
module asm "\09.long\09__crc___dev_get_by_flags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_get_by_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_get_by_flags\22\09\09\09\09\09"
module asm "__kstrtabns___dev_get_by_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_valid_name\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_valid_name\09\09\09\09"
module asm "\09.long\09__crc_dev_valid_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_valid_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_valid_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_valid_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_alloc_name\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_alloc_name\09\09\09\09"
module asm "\09.long\09__crc_dev_alloc_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_alloc_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_alloc_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_alloc_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_set_alias\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_alias\09\09\09\09"
module asm "\09.long\09__crc_dev_set_alias\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_alias\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_alias:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_features_change\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_features_change\09\09\09\09"
module asm "\09.long\09__crc_netdev_features_change\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_features_change:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_features_change\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_features_change:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_state_change\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_state_change\09\09\09\09"
module asm "\09.long\09__crc_netdev_state_change\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_state_change:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_state_change\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_state_change:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__netdev_notify_peers\22, \22a\22\09"
module asm "\09.weak\09__crc___netdev_notify_peers\09\09\09\09"
module asm "\09.long\09__crc___netdev_notify_peers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netdev_notify_peers:\09\09\09\09\09"
module asm "\09.asciz \09\22__netdev_notify_peers\22\09\09\09\09\09"
module asm "__kstrtabns___netdev_notify_peers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_notify_peers\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_notify_peers\09\09\09\09"
module asm "\09.long\09__crc_netdev_notify_peers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_notify_peers:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_notify_peers\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_notify_peers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_open\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_open\09\09\09\09"
module asm "\09.long\09__crc_dev_open\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_open:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_open\22\09\09\09\09\09"
module asm "__kstrtabns_dev_open:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_close_many\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_close_many\09\09\09\09"
module asm "\09.long\09__crc_dev_close_many\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_close_many:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_close_many\22\09\09\09\09\09"
module asm "__kstrtabns_dev_close_many:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_close\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_close\09\09\09\09"
module asm "\09.long\09__crc_dev_close\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_close:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_close\22\09\09\09\09\09"
module asm "__kstrtabns_dev_close:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_disable_lro\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_disable_lro\09\09\09\09"
module asm "\09.long\09__crc_dev_disable_lro\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_disable_lro:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_disable_lro\22\09\09\09\09\09"
module asm "__kstrtabns_dev_disable_lro:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+netdev_cmd_to_name\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_cmd_to_name\09\09\09\09"
module asm "\09.long\09__crc_netdev_cmd_to_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_cmd_to_name:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_cmd_to_name\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_cmd_to_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+register_netdevice_notifier\22, \22a\22\09"
module asm "\09.weak\09__crc_register_netdevice_notifier\09\09\09\09"
module asm "\09.long\09__crc_register_netdevice_notifier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdevice_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdevice_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdevice_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unregister_netdevice_notifier\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_netdevice_notifier\09\09\09\09"
module asm "\09.long\09__crc_unregister_netdevice_notifier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+register_netdevice_notifier_net\22, \22a\22\09"
module asm "\09.weak\09__crc_register_netdevice_notifier_net\09\09\09\09"
module asm "\09.long\09__crc_register_netdevice_notifier_net\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdevice_notifier_net:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdevice_notifier_net\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdevice_notifier_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unregister_netdevice_notifier_net\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_netdevice_notifier_net\09\09\09\09"
module asm "\09.long\09__crc_unregister_netdevice_notifier_net\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_notifier_net:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_notifier_net\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_notifier_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+register_netdevice_notifier_dev_net\22, \22a\22\09"
module asm "\09.weak\09__crc_register_netdevice_notifier_dev_net\09\09\09\09"
module asm "\09.long\09__crc_register_netdevice_notifier_dev_net\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdevice_notifier_dev_net:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdevice_notifier_dev_net\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdevice_notifier_dev_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unregister_netdevice_notifier_dev_net\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_netdevice_notifier_dev_net\09\09\09\09"
module asm "\09.long\09__crc_unregister_netdevice_notifier_dev_net\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_notifier_dev_net:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_notifier_dev_net\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_notifier_dev_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+call_netdevice_notifiers\22, \22a\22\09"
module asm "\09.weak\09__crc_call_netdevice_notifiers\09\09\09\09"
module asm "\09.long\09__crc_call_netdevice_notifiers\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_call_netdevice_notifiers:\09\09\09\09\09"
module asm "\09.asciz \09\22call_netdevice_notifiers\22\09\09\09\09\09"
module asm "__kstrtabns_call_netdevice_notifiers:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+net_inc_ingress_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_net_inc_ingress_queue\09\09\09\09"
module asm "\09.long\09__crc_net_inc_ingress_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_inc_ingress_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22net_inc_ingress_queue\22\09\09\09\09\09"
module asm "__kstrtabns_net_inc_ingress_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+net_dec_ingress_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_net_dec_ingress_queue\09\09\09\09"
module asm "\09.long\09__crc_net_dec_ingress_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_dec_ingress_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22net_dec_ingress_queue\22\09\09\09\09\09"
module asm "__kstrtabns_net_dec_ingress_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+net_inc_egress_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_net_inc_egress_queue\09\09\09\09"
module asm "\09.long\09__crc_net_inc_egress_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_inc_egress_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22net_inc_egress_queue\22\09\09\09\09\09"
module asm "__kstrtabns_net_inc_egress_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+net_dec_egress_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_net_dec_egress_queue\09\09\09\09"
module asm "\09.long\09__crc_net_dec_egress_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_dec_egress_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22net_dec_egress_queue\22\09\09\09\09\09"
module asm "__kstrtabns_net_dec_egress_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+net_enable_timestamp\22, \22a\22\09"
module asm "\09.weak\09__crc_net_enable_timestamp\09\09\09\09"
module asm "\09.long\09__crc_net_enable_timestamp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_enable_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22net_enable_timestamp\22\09\09\09\09\09"
module asm "__kstrtabns_net_enable_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+net_disable_timestamp\22, \22a\22\09"
module asm "\09.weak\09__crc_net_disable_timestamp\09\09\09\09"
module asm "\09.long\09__crc_net_disable_timestamp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_disable_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22net_disable_timestamp\22\09\09\09\09\09"
module asm "__kstrtabns_net_disable_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+is_skb_forwardable\22, \22a\22\09"
module asm "\09.weak\09__crc_is_skb_forwardable\09\09\09\09"
module asm "\09.long\09__crc_is_skb_forwardable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_is_skb_forwardable:\09\09\09\09\09"
module asm "\09.asciz \09\22is_skb_forwardable\22\09\09\09\09\09"
module asm "__kstrtabns_is_skb_forwardable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__dev_forward_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_forward_skb\09\09\09\09"
module asm "\09.long\09__crc___dev_forward_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_forward_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_forward_skb\22\09\09\09\09\09"
module asm "__kstrtabns___dev_forward_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_forward_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_forward_skb\09\09\09\09"
module asm "\09.long\09__crc_dev_forward_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_forward_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_forward_skb\22\09\09\09\09\09"
module asm "__kstrtabns_dev_forward_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_nit_active\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_nit_active\09\09\09\09"
module asm "\09.long\09__crc_dev_nit_active\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_nit_active:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_nit_active\22\09\09\09\09\09"
module asm "__kstrtabns_dev_nit_active:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_queue_xmit_nit\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_queue_xmit_nit\09\09\09\09"
module asm "\09.long\09__crc_dev_queue_xmit_nit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_queue_xmit_nit:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_queue_xmit_nit\22\09\09\09\09\09"
module asm "__kstrtabns_dev_queue_xmit_nit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_txq_to_tc\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_txq_to_tc\09\09\09\09"
module asm "\09.long\09__crc_netdev_txq_to_tc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_txq_to_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_txq_to_tc\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_txq_to_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__netif_set_xps_queue\22, \22a\22\09"
module asm "\09.weak\09__crc___netif_set_xps_queue\09\09\09\09"
module asm "\09.long\09__crc___netif_set_xps_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netif_set_xps_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22__netif_set_xps_queue\22\09\09\09\09\09"
module asm "__kstrtabns___netif_set_xps_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_set_xps_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_set_xps_queue\09\09\09\09"
module asm "\09.long\09__crc_netif_set_xps_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_set_xps_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_set_xps_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netif_set_xps_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_reset_tc\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_reset_tc\09\09\09\09"
module asm "\09.long\09__crc_netdev_reset_tc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_reset_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_reset_tc\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_reset_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_set_tc_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_set_tc_queue\09\09\09\09"
module asm "\09.long\09__crc_netdev_set_tc_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_set_tc_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_set_tc_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_set_tc_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_set_num_tc\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_set_num_tc\09\09\09\09"
module asm "\09.long\09__crc_netdev_set_num_tc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_set_num_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_set_num_tc\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_set_num_tc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_unbind_sb_channel\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_unbind_sb_channel\09\09\09\09"
module asm "\09.long\09__crc_netdev_unbind_sb_channel\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_unbind_sb_channel:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_unbind_sb_channel\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_unbind_sb_channel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_bind_sb_channel_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_bind_sb_channel_queue\09\09\09\09"
module asm "\09.long\09__crc_netdev_bind_sb_channel_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_bind_sb_channel_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_bind_sb_channel_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_bind_sb_channel_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_set_sb_channel\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_set_sb_channel\09\09\09\09"
module asm "\09.long\09__crc_netdev_set_sb_channel\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_set_sb_channel:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_set_sb_channel\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_set_sb_channel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_set_real_num_tx_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_set_real_num_tx_queues\09\09\09\09"
module asm "\09.long\09__crc_netif_set_real_num_tx_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_set_real_num_tx_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_set_real_num_tx_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_set_real_num_tx_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_set_real_num_rx_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_set_real_num_rx_queues\09\09\09\09"
module asm "\09.long\09__crc_netif_set_real_num_rx_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_set_real_num_rx_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_set_real_num_rx_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_set_real_num_rx_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_set_real_num_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_set_real_num_queues\09\09\09\09"
module asm "\09.long\09__crc_netif_set_real_num_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_set_real_num_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_set_real_num_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_set_real_num_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_get_num_default_rss_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_get_num_default_rss_queues\09\09\09\09"
module asm "\09.long\09__crc_netif_get_num_default_rss_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_get_num_default_rss_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_get_num_default_rss_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_get_num_default_rss_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__netif_schedule\22, \22a\22\09"
module asm "\09.weak\09__crc___netif_schedule\09\09\09\09"
module asm "\09.long\09__crc___netif_schedule\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netif_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22__netif_schedule\22\09\09\09\09\09"
module asm "__kstrtabns___netif_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_schedule_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_schedule_queue\09\09\09\09"
module asm "\09.long\09__crc_netif_schedule_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_schedule_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_schedule_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netif_schedule_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_tx_wake_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_tx_wake_queue\09\09\09\09"
module asm "\09.long\09__crc_netif_tx_wake_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_tx_wake_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_tx_wake_queue\22\09\09\09\09\09"
module asm "__kstrtabns_netif_tx_wake_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__dev_kfree_skb_irq\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_kfree_skb_irq\09\09\09\09"
module asm "\09.long\09__crc___dev_kfree_skb_irq\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_kfree_skb_irq:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_kfree_skb_irq\22\09\09\09\09\09"
module asm "__kstrtabns___dev_kfree_skb_irq:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__dev_kfree_skb_any\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_kfree_skb_any\09\09\09\09"
module asm "\09.long\09__crc___dev_kfree_skb_any\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_kfree_skb_any:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_kfree_skb_any\22\09\09\09\09\09"
module asm "__kstrtabns___dev_kfree_skb_any:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_device_detach\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_device_detach\09\09\09\09"
module asm "\09.long\09__crc_netif_device_detach\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_device_detach:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_device_detach\22\09\09\09\09\09"
module asm "__kstrtabns_netif_device_detach:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_device_attach\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_device_attach\09\09\09\09"
module asm "\09.long\09__crc_netif_device_attach\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_device_attach:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_device_attach\22\09\09\09\09\09"
module asm "__kstrtabns_netif_device_attach:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_checksum_help\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_checksum_help\09\09\09\09"
module asm "\09.long\09__crc_skb_checksum_help\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_checksum_help:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_checksum_help\22\09\09\09\09\09"
module asm "__kstrtabns_skb_checksum_help:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_gso_segment\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_gso_segment\09\09\09\09"
module asm "\09.long\09__crc___skb_gso_segment\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_gso_segment:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_gso_segment\22\09\09\09\09\09"
module asm "__kstrtabns___skb_gso_segment:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_rx_csum_fault\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_rx_csum_fault\09\09\09\09"
module asm "\09.long\09__crc_netdev_rx_csum_fault\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_rx_csum_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_rx_csum_fault\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_rx_csum_fault:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+passthru_features_check\22, \22a\22\09"
module asm "\09.weak\09__crc_passthru_features_check\09\09\09\09"
module asm "\09.long\09__crc_passthru_features_check\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_passthru_features_check:\09\09\09\09\09"
module asm "\09.asciz \09\22passthru_features_check\22\09\09\09\09\09"
module asm "__kstrtabns_passthru_features_check:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_skb_features\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_skb_features\09\09\09\09"
module asm "\09.long\09__crc_netif_skb_features\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_skb_features:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_skb_features\22\09\09\09\09\09"
module asm "__kstrtabns_netif_skb_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_csum_hwoffload_help\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_csum_hwoffload_help\09\09\09\09"
module asm "\09.long\09__crc_skb_csum_hwoffload_help\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_csum_hwoffload_help:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_csum_hwoffload_help\22\09\09\09\09\09"
module asm "__kstrtabns_skb_csum_hwoffload_help:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+validate_xmit_skb_list\22, \22a\22\09"
module asm "\09.weak\09__crc_validate_xmit_skb_list\09\09\09\09"
module asm "\09.long\09__crc_validate_xmit_skb_list\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_validate_xmit_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22validate_xmit_skb_list\22\09\09\09\09\09"
module asm "__kstrtabns_validate_xmit_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_loopback_xmit\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_loopback_xmit\09\09\09\09"
module asm "\09.long\09__crc_dev_loopback_xmit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_loopback_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_loopback_xmit\22\09\09\09\09\09"
module asm "__kstrtabns_dev_loopback_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_pick_tx_zero\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_pick_tx_zero\09\09\09\09"
module asm "\09.long\09__crc_dev_pick_tx_zero\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_pick_tx_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_pick_tx_zero\22\09\09\09\09\09"
module asm "__kstrtabns_dev_pick_tx_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_pick_tx_cpu_id\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_pick_tx_cpu_id\09\09\09\09"
module asm "\09.long\09__crc_dev_pick_tx_cpu_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_pick_tx_cpu_id:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_pick_tx_cpu_id\22\09\09\09\09\09"
module asm "__kstrtabns_dev_pick_tx_cpu_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_pick_tx\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_pick_tx\09\09\09\09"
module asm "\09.long\09__crc_netdev_pick_tx\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_pick_tx:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_pick_tx\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_pick_tx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_queue_xmit\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_queue_xmit\09\09\09\09"
module asm "\09.long\09__crc_dev_queue_xmit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_queue_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_queue_xmit\22\09\09\09\09\09"
module asm "__kstrtabns_dev_queue_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_queue_xmit_accel\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_queue_xmit_accel\09\09\09\09"
module asm "\09.long\09__crc_dev_queue_xmit_accel\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_queue_xmit_accel:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_queue_xmit_accel\22\09\09\09\09\09"
module asm "__kstrtabns_dev_queue_xmit_accel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__dev_direct_xmit\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_direct_xmit\09\09\09\09"
module asm "\09.long\09__crc___dev_direct_xmit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_direct_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_direct_xmit\22\09\09\09\09\09"
module asm "__kstrtabns___dev_direct_xmit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_max_backlog\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_max_backlog\09\09\09\09"
module asm "\09.long\09__crc_netdev_max_backlog\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_max_backlog:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_max_backlog\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_max_backlog:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rps_sock_flow_table\22, \22a\22\09"
module asm "\09.weak\09__crc_rps_sock_flow_table\09\09\09\09"
module asm "\09.long\09__crc_rps_sock_flow_table\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rps_sock_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22rps_sock_flow_table\22\09\09\09\09\09"
module asm "__kstrtabns_rps_sock_flow_table:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rps_cpu_mask\22, \22a\22\09"
module asm "\09.weak\09__crc_rps_cpu_mask\09\09\09\09"
module asm "\09.long\09__crc_rps_cpu_mask\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rps_cpu_mask:\09\09\09\09\09"
module asm "\09.asciz \09\22rps_cpu_mask\22\09\09\09\09\09"
module asm "__kstrtabns_rps_cpu_mask:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rps_needed\22, \22a\22\09"
module asm "\09.weak\09__crc_rps_needed\09\09\09\09"
module asm "\09.long\09__crc_rps_needed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rps_needed:\09\09\09\09\09"
module asm "\09.asciz \09\22rps_needed\22\09\09\09\09\09"
module asm "__kstrtabns_rps_needed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rfs_needed\22, \22a\22\09"
module asm "\09.weak\09__crc_rfs_needed\09\09\09\09"
module asm "\09.long\09__crc_rfs_needed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rfs_needed:\09\09\09\09\09"
module asm "\09.asciz \09\22rfs_needed\22\09\09\09\09\09"
module asm "__kstrtabns_rfs_needed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rps_may_expire_flow\22, \22a\22\09"
module asm "\09.weak\09__crc_rps_may_expire_flow\09\09\09\09"
module asm "\09.long\09__crc_rps_may_expire_flow\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rps_may_expire_flow:\09\09\09\09\09"
module asm "\09.asciz \09\22rps_may_expire_flow\22\09\09\09\09\09"
module asm "__kstrtabns_rps_may_expire_flow:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+do_xdp_generic\22, \22a\22\09"
module asm "\09.weak\09__crc_do_xdp_generic\09\09\09\09"
module asm "\09.long\09__crc_do_xdp_generic\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_do_xdp_generic:\09\09\09\09\09"
module asm "\09.asciz \09\22do_xdp_generic\22\09\09\09\09\09"
module asm "__kstrtabns_do_xdp_generic:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_rx\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_rx\09\09\09\09"
module asm "\09.long\09__crc_netif_rx\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_rx:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_rx\22\09\09\09\09\09"
module asm "__kstrtabns_netif_rx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_rx_ni\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_rx_ni\09\09\09\09"
module asm "\09.long\09__crc_netif_rx_ni\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_rx_ni:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_rx_ni\22\09\09\09\09\09"
module asm "__kstrtabns_netif_rx_ni:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_rx_any_context\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_rx_any_context\09\09\09\09"
module asm "\09.long\09__crc_netif_rx_any_context\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_rx_any_context:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_rx_any_context\22\09\09\09\09\09"
module asm "__kstrtabns_netif_rx_any_context:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+br_fdb_test_addr_hook\22, \22a\22\09"
module asm "\09.weak\09__crc_br_fdb_test_addr_hook\09\09\09\09"
module asm "\09.long\09__crc_br_fdb_test_addr_hook\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_br_fdb_test_addr_hook:\09\09\09\09\09"
module asm "\09.asciz \09\22br_fdb_test_addr_hook\22\09\09\09\09\09"
module asm "__kstrtabns_br_fdb_test_addr_hook:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+netdev_is_rx_handler_busy\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_is_rx_handler_busy\09\09\09\09"
module asm "\09.long\09__crc_netdev_is_rx_handler_busy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_is_rx_handler_busy:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_is_rx_handler_busy\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_is_rx_handler_busy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+netdev_rx_handler_register\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_rx_handler_register\09\09\09\09"
module asm "\09.long\09__crc_netdev_rx_handler_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_rx_handler_register:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_rx_handler_register\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_rx_handler_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+netdev_rx_handler_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_rx_handler_unregister\09\09\09\09"
module asm "\09.long\09__crc_netdev_rx_handler_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_rx_handler_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_rx_handler_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_rx_handler_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_receive_skb_core\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_receive_skb_core\09\09\09\09"
module asm "\09.long\09__crc_netif_receive_skb_core\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_receive_skb_core:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_receive_skb_core\22\09\09\09\09\09"
module asm "__kstrtabns_netif_receive_skb_core:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_receive_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_receive_skb\09\09\09\09"
module asm "\09.long\09__crc_netif_receive_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_receive_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_receive_skb\22\09\09\09\09\09"
module asm "__kstrtabns_netif_receive_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_receive_skb_list\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_receive_skb_list\09\09\09\09"
module asm "\09.long\09__crc_netif_receive_skb_list\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_receive_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_receive_skb_list\22\09\09\09\09\09"
module asm "__kstrtabns_netif_receive_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__napi_schedule\22, \22a\22\09"
module asm "\09.weak\09__crc___napi_schedule\09\09\09\09"
module asm "\09.long\09__crc___napi_schedule\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___napi_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22__napi_schedule\22\09\09\09\09\09"
module asm "__kstrtabns___napi_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+napi_schedule_prep\22, \22a\22\09"
module asm "\09.weak\09__crc_napi_schedule_prep\09\09\09\09"
module asm "\09.long\09__crc_napi_schedule_prep\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_schedule_prep:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_schedule_prep\22\09\09\09\09\09"
module asm "__kstrtabns_napi_schedule_prep:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__napi_schedule_irqoff\22, \22a\22\09"
module asm "\09.weak\09__crc___napi_schedule_irqoff\09\09\09\09"
module asm "\09.long\09__crc___napi_schedule_irqoff\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___napi_schedule_irqoff:\09\09\09\09\09"
module asm "\09.asciz \09\22__napi_schedule_irqoff\22\09\09\09\09\09"
module asm "__kstrtabns___napi_schedule_irqoff:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+napi_complete_done\22, \22a\22\09"
module asm "\09.weak\09__crc_napi_complete_done\09\09\09\09"
module asm "\09.long\09__crc_napi_complete_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_complete_done:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_complete_done\22\09\09\09\09\09"
module asm "__kstrtabns_napi_complete_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+napi_busy_loop\22, \22a\22\09"
module asm "\09.weak\09__crc_napi_busy_loop\09\09\09\09"
module asm "\09.long\09__crc_napi_busy_loop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_busy_loop:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_busy_loop\22\09\09\09\09\09"
module asm "__kstrtabns_napi_busy_loop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_set_threaded\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_threaded\09\09\09\09"
module asm "\09.long\09__crc_dev_set_threaded\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_threaded:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_threaded\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_threaded:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_napi_add\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_napi_add\09\09\09\09"
module asm "\09.long\09__crc_netif_napi_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_napi_add:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_napi_add\22\09\09\09\09\09"
module asm "__kstrtabns_netif_napi_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+napi_disable\22, \22a\22\09"
module asm "\09.weak\09__crc_napi_disable\09\09\09\09"
module asm "\09.long\09__crc_napi_disable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_disable\22\09\09\09\09\09"
module asm "__kstrtabns_napi_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+napi_enable\22, \22a\22\09"
module asm "\09.weak\09__crc_napi_enable\09\09\09\09"
module asm "\09.long\09__crc_napi_enable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_enable\22\09\09\09\09\09"
module asm "__kstrtabns_napi_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__netif_napi_del\22, \22a\22\09"
module asm "\09.weak\09__crc___netif_napi_del\09\09\09\09"
module asm "\09.long\09__crc___netif_napi_del\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netif_napi_del:\09\09\09\09\09"
module asm "\09.asciz \09\22__netif_napi_del\22\09\09\09\09\09"
module asm "__kstrtabns___netif_napi_del:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_has_upper_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_has_upper_dev\09\09\09\09"
module asm "\09.long\09__crc_netdev_has_upper_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_has_upper_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_has_upper_dev\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_has_upper_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_has_upper_dev_all_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_has_upper_dev_all_rcu\09\09\09\09"
module asm "\09.long\09__crc_netdev_has_upper_dev_all_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_has_upper_dev_all_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_has_upper_dev_all_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_has_upper_dev_all_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_has_any_upper_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_has_any_upper_dev\09\09\09\09"
module asm "\09.long\09__crc_netdev_has_any_upper_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_has_any_upper_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_has_any_upper_dev\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_has_any_upper_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_master_upper_dev_get\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_master_upper_dev_get\09\09\09\09"
module asm "\09.long\09__crc_netdev_master_upper_dev_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_master_upper_dev_get:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_master_upper_dev_get\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_master_upper_dev_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_adjacent_get_private\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_adjacent_get_private\09\09\09\09"
module asm "\09.long\09__crc_netdev_adjacent_get_private\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_adjacent_get_private:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_adjacent_get_private\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_adjacent_get_private:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_upper_get_next_dev_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_upper_get_next_dev_rcu\09\09\09\09"
module asm "\09.long\09__crc_netdev_upper_get_next_dev_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_upper_get_next_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_upper_get_next_dev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_upper_get_next_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+netdev_walk_all_upper_dev_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_walk_all_upper_dev_rcu\09\09\09\09"
module asm "\09.long\09__crc_netdev_walk_all_upper_dev_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_walk_all_upper_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_walk_all_upper_dev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_walk_all_upper_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_lower_get_next_private\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_lower_get_next_private\09\09\09\09"
module asm "\09.long\09__crc_netdev_lower_get_next_private\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_get_next_private:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_get_next_private\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_get_next_private:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_lower_get_next_private_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_lower_get_next_private_rcu\09\09\09\09"
module asm "\09.long\09__crc_netdev_lower_get_next_private_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_get_next_private_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_get_next_private_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_get_next_private_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_lower_get_next\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_lower_get_next\09\09\09\09"
module asm "\09.long\09__crc_netdev_lower_get_next\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_get_next:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_get_next\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_get_next:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+netdev_walk_all_lower_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_walk_all_lower_dev\09\09\09\09"
module asm "\09.long\09__crc_netdev_walk_all_lower_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_walk_all_lower_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_walk_all_lower_dev\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_walk_all_lower_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_next_lower_dev_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_next_lower_dev_rcu\09\09\09\09"
module asm "\09.long\09__crc_netdev_next_lower_dev_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_next_lower_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_next_lower_dev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_next_lower_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+netdev_walk_all_lower_dev_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_walk_all_lower_dev_rcu\09\09\09\09"
module asm "\09.long\09__crc_netdev_walk_all_lower_dev_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_walk_all_lower_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_walk_all_lower_dev_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_walk_all_lower_dev_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_lower_get_first_private_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_lower_get_first_private_rcu\09\09\09\09"
module asm "\09.long\09__crc_netdev_lower_get_first_private_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_get_first_private_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_get_first_private_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_get_first_private_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_master_upper_dev_get_rcu\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_master_upper_dev_get_rcu\09\09\09\09"
module asm "\09.long\09__crc_netdev_master_upper_dev_get_rcu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_master_upper_dev_get_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_master_upper_dev_get_rcu\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_master_upper_dev_get_rcu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_upper_dev_link\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_upper_dev_link\09\09\09\09"
module asm "\09.long\09__crc_netdev_upper_dev_link\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_upper_dev_link:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_upper_dev_link\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_upper_dev_link:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_master_upper_dev_link\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_master_upper_dev_link\09\09\09\09"
module asm "\09.long\09__crc_netdev_master_upper_dev_link\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_master_upper_dev_link:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_master_upper_dev_link\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_master_upper_dev_link:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_upper_dev_unlink\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_upper_dev_unlink\09\09\09\09"
module asm "\09.long\09__crc_netdev_upper_dev_unlink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_upper_dev_unlink:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_upper_dev_unlink\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_upper_dev_unlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_adjacent_change_prepare\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_adjacent_change_prepare\09\09\09\09"
module asm "\09.long\09__crc_netdev_adjacent_change_prepare\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_adjacent_change_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_adjacent_change_prepare\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_adjacent_change_prepare:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_adjacent_change_commit\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_adjacent_change_commit\09\09\09\09"
module asm "\09.long\09__crc_netdev_adjacent_change_commit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_adjacent_change_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_adjacent_change_commit\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_adjacent_change_commit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_adjacent_change_abort\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_adjacent_change_abort\09\09\09\09"
module asm "\09.long\09__crc_netdev_adjacent_change_abort\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_adjacent_change_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_adjacent_change_abort\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_adjacent_change_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_bonding_info_change\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_bonding_info_change\09\09\09\09"
module asm "\09.long\09__crc_netdev_bonding_info_change\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_bonding_info_change:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_bonding_info_change\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_bonding_info_change:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_get_xmit_slave\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_get_xmit_slave\09\09\09\09"
module asm "\09.long\09__crc_netdev_get_xmit_slave\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_get_xmit_slave:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_get_xmit_slave\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_get_xmit_slave:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_sk_get_lowest_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_sk_get_lowest_dev\09\09\09\09"
module asm "\09.long\09__crc_netdev_sk_get_lowest_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_sk_get_lowest_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_sk_get_lowest_dev\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_sk_get_lowest_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_lower_dev_get_private\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_lower_dev_get_private\09\09\09\09"
module asm "\09.long\09__crc_netdev_lower_dev_get_private\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_dev_get_private:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_dev_get_private\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_dev_get_private:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_lower_state_changed\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_lower_state_changed\09\09\09\09"
module asm "\09.long\09__crc_netdev_lower_state_changed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_lower_state_changed:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_lower_state_changed\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_lower_state_changed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_set_promiscuity\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_promiscuity\09\09\09\09"
module asm "\09.long\09__crc_dev_set_promiscuity\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_promiscuity:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_promiscuity\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_promiscuity:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_set_allmulti\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_allmulti\09\09\09\09"
module asm "\09.long\09__crc_dev_set_allmulti\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_allmulti:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_allmulti\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_allmulti:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_flags\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_flags\09\09\09\09"
module asm "\09.long\09__crc_dev_get_flags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_flags\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_change_flags\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_change_flags\09\09\09\09"
module asm "\09.long\09__crc_dev_change_flags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_change_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_change_flags\22\09\09\09\09\09"
module asm "__kstrtabns_dev_change_flags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__dev_set_mtu\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_set_mtu\09\09\09\09"
module asm "\09.long\09__crc___dev_set_mtu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_set_mtu:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_set_mtu\22\09\09\09\09\09"
module asm "__kstrtabns___dev_set_mtu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_set_mtu\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_mtu\09\09\09\09"
module asm "\09.long\09__crc_dev_set_mtu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_mtu:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_mtu\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_mtu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_set_group\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_group\09\09\09\09"
module asm "\09.long\09__crc_dev_set_group\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_group:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_group\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_group:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_pre_changeaddr_notify\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_pre_changeaddr_notify\09\09\09\09"
module asm "\09.long\09__crc_dev_pre_changeaddr_notify\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_pre_changeaddr_notify:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_pre_changeaddr_notify\22\09\09\09\09\09"
module asm "__kstrtabns_dev_pre_changeaddr_notify:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_set_mac_address\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_mac_address\09\09\09\09"
module asm "\09.long\09__crc_dev_set_mac_address\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_mac_address:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_mac_address\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_mac_address:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_set_mac_address_user\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_set_mac_address_user\09\09\09\09"
module asm "\09.long\09__crc_dev_set_mac_address_user\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_set_mac_address_user:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_set_mac_address_user\22\09\09\09\09\09"
module asm "__kstrtabns_dev_set_mac_address_user:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_mac_address\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_mac_address\09\09\09\09"
module asm "\09.long\09__crc_dev_get_mac_address\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_mac_address:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_mac_address\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_mac_address:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_change_carrier\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_change_carrier\09\09\09\09"
module asm "\09.long\09__crc_dev_change_carrier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_change_carrier:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_change_carrier\22\09\09\09\09\09"
module asm "__kstrtabns_dev_change_carrier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_phys_port_id\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_phys_port_id\09\09\09\09"
module asm "\09.long\09__crc_dev_get_phys_port_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_phys_port_id:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_phys_port_id\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_phys_port_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_phys_port_name\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_phys_port_name\09\09\09\09"
module asm "\09.long\09__crc_dev_get_phys_port_name\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_phys_port_name:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_phys_port_name\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_phys_port_name:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_port_parent_id\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_port_parent_id\09\09\09\09"
module asm "\09.long\09__crc_dev_get_port_parent_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_port_parent_id:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_port_parent_id\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_port_parent_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_port_same_parent_id\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_port_same_parent_id\09\09\09\09"
module asm "\09.long\09__crc_netdev_port_same_parent_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_port_same_parent_id:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_port_same_parent_id\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_port_same_parent_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_change_proto_down\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_change_proto_down\09\09\09\09"
module asm "\09.long\09__crc_dev_change_proto_down\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_change_proto_down:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_change_proto_down\22\09\09\09\09\09"
module asm "__kstrtabns_dev_change_proto_down:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_change_proto_down_reason\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_change_proto_down_reason\09\09\09\09"
module asm "\09.long\09__crc_dev_change_proto_down_reason\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_change_proto_down_reason:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_change_proto_down_reason\22\09\09\09\09\09"
module asm "__kstrtabns_dev_change_proto_down_reason:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_xdp_prog_count\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_xdp_prog_count\09\09\09\09"
module asm "\09.long\09__crc_dev_xdp_prog_count\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_xdp_prog_count:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_xdp_prog_count\22\09\09\09\09\09"
module asm "__kstrtabns_dev_xdp_prog_count:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_update_features\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_update_features\09\09\09\09"
module asm "\09.long\09__crc_netdev_update_features\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_update_features:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_update_features\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_update_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_change_features\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_change_features\09\09\09\09"
module asm "\09.long\09__crc_netdev_change_features\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_change_features:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_change_features\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_change_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_stacked_transfer_operstate\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_stacked_transfer_operstate\09\09\09\09"
module asm "\09.long\09__crc_netif_stacked_transfer_operstate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_stacked_transfer_operstate:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_stacked_transfer_operstate\22\09\09\09\09\09"
module asm "__kstrtabns_netif_stacked_transfer_operstate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netif_tx_stop_all_queues\22, \22a\22\09"
module asm "\09.weak\09__crc_netif_tx_stop_all_queues\09\09\09\09"
module asm "\09.long\09__crc_netif_tx_stop_all_queues\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netif_tx_stop_all_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22netif_tx_stop_all_queues\22\09\09\09\09\09"
module asm "__kstrtabns_netif_tx_stop_all_queues:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+register_netdevice\22, \22a\22\09"
module asm "\09.weak\09__crc_register_netdevice\09\09\09\09"
module asm "\09.long\09__crc_register_netdevice\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdevice:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdevice\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdevice:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+init_dummy_netdev\22, \22a\22\09"
module asm "\09.weak\09__crc_init_dummy_netdev\09\09\09\09"
module asm "\09.long\09__crc_init_dummy_netdev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_init_dummy_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22init_dummy_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_init_dummy_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+register_netdev\22, \22a\22\09"
module asm "\09.weak\09__crc_register_netdev\09\09\09\09"
module asm "\09.long\09__crc_register_netdev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22register_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_register_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_refcnt_read\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_refcnt_read\09\09\09\09"
module asm "\09.long\09__crc_netdev_refcnt_read\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_refcnt_read:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_refcnt_read\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_refcnt_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_stats_to_stats64\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_stats_to_stats64\09\09\09\09"
module asm "\09.long\09__crc_netdev_stats_to_stats64\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_stats_to_stats64:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_stats_to_stats64\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_stats_to_stats64:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+dev_get_stats\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_stats\09\09\09\09"
module asm "\09.long\09__crc_dev_get_stats\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_stats:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_stats\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_stats:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_fetch_sw_netstats\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_fetch_sw_netstats\09\09\09\09"
module asm "\09.long\09__crc_dev_fetch_sw_netstats\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_fetch_sw_netstats:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_fetch_sw_netstats\22\09\09\09\09\09"
module asm "__kstrtabns_dev_fetch_sw_netstats:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+dev_get_tstats64\22, \22a\22\09"
module asm "\09.weak\09__crc_dev_get_tstats64\09\09\09\09"
module asm "\09.long\09__crc_dev_get_tstats64\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_dev_get_tstats64:\09\09\09\09\09"
module asm "\09.asciz \09\22dev_get_tstats64\22\09\09\09\09\09"
module asm "__kstrtabns_dev_get_tstats64:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+netdev_set_default_ethtool_ops\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_set_default_ethtool_ops\09\09\09\09"
module asm "\09.long\09__crc_netdev_set_default_ethtool_ops\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_set_default_ethtool_ops:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_set_default_ethtool_ops\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_set_default_ethtool_ops:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+alloc_netdev_mqs\22, \22a\22\09"
module asm "\09.weak\09__crc_alloc_netdev_mqs\09\09\09\09"
module asm "\09.long\09__crc_alloc_netdev_mqs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_alloc_netdev_mqs:\09\09\09\09\09"
module asm "\09.asciz \09\22alloc_netdev_mqs\22\09\09\09\09\09"
module asm "__kstrtabns_alloc_netdev_mqs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+free_netdev\22, \22a\22\09"
module asm "\09.weak\09__crc_free_netdev\09\09\09\09"
module asm "\09.long\09__crc_free_netdev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_free_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22free_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_free_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+synchronize_net\22, \22a\22\09"
module asm "\09.weak\09__crc_synchronize_net\09\09\09\09"
module asm "\09.long\09__crc_synchronize_net\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_synchronize_net:\09\09\09\09\09"
module asm "\09.asciz \09\22synchronize_net\22\09\09\09\09\09"
module asm "__kstrtabns_synchronize_net:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unregister_netdevice_queue\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_netdevice_queue\09\09\09\09"
module asm "\09.long\09__crc_unregister_netdevice_queue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_queue\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_queue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unregister_netdevice_many\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_netdevice_many\09\09\09\09"
module asm "\09.long\09__crc_unregister_netdevice_many\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdevice_many:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdevice_many\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdevice_many:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+unregister_netdev\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_netdev\09\09\09\09"
module asm "\09.long\09__crc_unregister_netdev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_netdev\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_netdev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__dev_change_net_namespace\22, \22a\22\09"
module asm "\09.weak\09__crc___dev_change_net_namespace\09\09\09\09"
module asm "\09.long\09__crc___dev_change_net_namespace\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___dev_change_net_namespace:\09\09\09\09\09"
module asm "\09.asciz \09\22__dev_change_net_namespace\22\09\09\09\09\09"
module asm "__kstrtabns___dev_change_net_namespace:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_increment_features\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_increment_features\09\09\09\09"
module asm "\09.long\09__crc_netdev_increment_features\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_increment_features:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_increment_features\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_increment_features:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_printk\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_printk\09\09\09\09"
module asm "\09.long\09__crc_netdev_printk\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_printk:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_printk\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_printk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_emerg\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_emerg\09\09\09\09"
module asm "\09.long\09__crc_netdev_emerg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_emerg:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_emerg\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_emerg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_alert\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_alert\09\09\09\09"
module asm "\09.long\09__crc_netdev_alert\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_alert:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_alert\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_alert:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_crit\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_crit\09\09\09\09"
module asm "\09.long\09__crc_netdev_crit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_crit:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_crit\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_crit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_err\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_err\09\09\09\09"
module asm "\09.long\09__crc_netdev_err\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_err:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_err\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_err:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_warn\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_warn\09\09\09\09"
module asm "\09.long\09__crc_netdev_warn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_warn:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_warn\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_warn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_notice\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_notice\09\09\09\09"
module asm "\09.long\09__crc_netdev_notice\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_notice:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_notice\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_notice:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+netdev_info\22, \22a\22\09"
module asm "\09.weak\09__crc_netdev_info\09\09\09\09"
module asm "\09.long\09__crc_netdev_info\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_netdev_info:\09\09\09\09\09"
module asm "\09.asciz \09\22netdev_info\22\09\09\09\09\09"
module asm "__kstrtabns_netdev_info:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.sk_buff_head, %struct.anon.223, [100 x i8], i32, [124 x i8], %struct.__call_single_data, ptr, i32, i32, i32, %struct.sk_buff_head, %struct.napi_struct, [72 x i8] }
%struct.list_head = type { ptr, ptr }
%struct.anon.223 = type { i16, i8 }
%struct.__call_single_data = type { %struct.__call_single_node, ptr, ptr }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.29 }
%struct.llist_node = type { ptr }
%union.anon.29 = type { i32 }
%struct.sk_buff_head = type { %union.anon.89, i32, %struct.spinlock }
%union.anon.89 = type { %struct.anon.90 }
%struct.anon.90 = type { ptr, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.hlist_node = type { ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_notifier_head = type { ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.cpumask = type { [1 x i32] }
%struct.static_key = type { %struct.atomic_t, %union.anon.63 }
%union.anon.63 = type { i32 }
%struct.static_key_false = type { %struct.static_key }
%struct.irq_cpustat_t = type { i32, [124 x i8] }
%struct.bpf_link_ops = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.12, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.12 = type { %struct.anon.13 }
%struct.anon.13 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.215, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.anon.215 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.Qdisc = type { ptr, ptr, i32, i32, ptr, ptr, %struct.hlist_node, i32, i32, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, [64 x i8], %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_sync, %struct.gnet_stats_queue, i32, i32, ptr, %struct.sk_buff_head, [8 x i8], %struct.spinlock, %struct.spinlock, %struct.callback_head, ptr, [28 x i8], [0 x i32] }
%struct.qdisc_skb_head = type { ptr, ptr, i32, %struct.spinlock }
%struct.gnet_stats_basic_sync = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.callback_head = type { ptr, ptr }
%struct.ethtool_ops = type { i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.2 }
%union.anon.2 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.pernet_operations = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, ptr, ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.85, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.185, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.85 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.possible_net_t = type { ptr }
%union.anon.185 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.packet_type = type { i16, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.sk_buff = type { %union.anon.82, %union.anon.186, %union.anon.187, [48 x i8], %union.anon.188, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.190, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { ptr, ptr, %union.anon.84 }
%union.anon.84 = type { ptr }
%union.anon.186 = type { ptr }
%union.anon.187 = type { i64 }
%union.anon.188 = type { %struct.anon.189 }
%struct.anon.189 = type { i32, ptr }
%union.anon.190 = type { %struct.anon.191 }
%struct.anon.191 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.192, i32, i32, i32, i16, i16, %union.anon.194, i32, %union.anon.195, %union.anon.196, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.192 = type { i32 }
%union.anon.194 = type { i32 }
%union.anon.195 = type { i32 }
%union.anon.196 = type { i16 }
%struct.dst_entry = type { ptr, ptr, i32, i32, ptr, ptr, ptr, i16, i16, i16, i16, i32, i32, ptr, %struct.callback_head, i16, i16, i32, %struct.atomic_t, ptr }
%struct.metadata_dst = type { %struct.dst_entry, i32, %union.anon.235 }
%union.anon.235 = type { %struct.ip_tunnel_info }
%struct.ip_tunnel_info = type { %struct.ip_tunnel_key, %struct.dst_cache, i8, i8 }
%struct.ip_tunnel_key = type { i64, %union.anon.167, i16, i8, i8, i32, i16, i16 }
%union.anon.167 = type { %struct.anon.169 }
%struct.anon.169 = type { %struct.in6_addr, %struct.in6_addr }
%struct.in6_addr = type { %union.anon.91 }
%union.anon.91 = type { [4 x i32] }
%struct.dst_cache = type { ptr, i32 }
%struct.net_device_path_ctx = type { ptr, ptr, i32, [2 x %struct.anon.140] }
%struct.anon.140 = type { i16, i16 }
%struct.net_device_path_stack = type { i32, [5 x %struct.net_device_path] }
%struct.net_device_path = type { i32, ptr, %union.anon.141 }
%union.anon.141 = type { %struct.anon.143, [4 x i8] }
%struct.anon.143 = type { i32, i16, i16 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.netdev_notifier_info = type { ptr, ptr }
%struct.va_format = type { ptr, ptr }
%struct.__va_list = type { ptr }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.netdev_notifier_change_info = type { %struct.netdev_notifier_info, i32 }
%struct.netdev_net_notifier = type { %struct.list_head, ptr }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.rps_dev_flow = type { i16, i16, i32 }
%struct.netdev_queue = type { ptr, ptr, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, ptr, [88 x i8], %struct.spinlock, i32, i32, i32, [72 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [116 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [88 x i8] }
%struct.xps_dev_maps = type { %struct.callback_head, i32, i16, [0 x ptr] }
%struct.xps_map = type { i32, i32, %struct.callback_head, [0 x i16] }
%struct.anon.193 = type { i16, i16 }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.208, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.209, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.210, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, ptr }
%struct.sock_common = type { %union.anon.14, %union.anon.16, %union.anon.17, i16, i8, i8, i32, %union.anon.19, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.204, [0 x i32], %union.anon.205, i16, i16, %union.anon.206, %struct.refcount_struct, [0 x i32], %union.anon.207 }
%union.anon.14 = type { i64 }
%union.anon.16 = type { i32 }
%union.anon.17 = type { i32 }
%union.anon.19 = type { %struct.hlist_node }
%struct.atomic64_t = type { i64 }
%union.anon.204 = type { i32 }
%union.anon.205 = type { %struct.hlist_node }
%union.anon.206 = type { i32 }
%union.anon.207 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head, %struct.lockdep_map }
%struct.anon.208 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.209 = type { ptr }
%union.anon.210 = type { ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.sock_cgroup_data = type { ptr, i32, i16 }
%struct.vlan_hdr = type { i16, i16 }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.vlan_ethhdr = type { %union.anon.239, i16, i16, i16 }
%union.anon.239 = type { %struct.anon.240 }
%struct.anon.240 = type { [6 x i8], [6 x i8] }
%struct.tcf_result = type { %union.anon.180 }
%union.anon.180 = type { %struct.anon.181 }
%struct.anon.181 = type { i32, i32 }
%struct.nf_hook_state = type { i8, i8, ptr, ptr, ptr, ptr, ptr }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.udphdr = type { i16, i16, i16, i16 }
%struct.netprio_map = type { %struct.callback_head, i32, [0 x i32] }
%struct.mini_Qdisc = type { ptr, ptr, ptr, ptr, i32 }
%struct.netdev_rx_queue = type { %struct.xdp_rxq_info, ptr, ptr, %struct.kobject, ptr, ptr, ptr, [100 x i8] }
%struct.xdp_rxq_info = type { ptr, i32, i32, %struct.xdp_mem_info, i32, [104 x i8] }
%struct.xdp_mem_info = type { i32, i32 }
%struct.rps_dev_flow_table = type { i32, %struct.callback_head, [0 x %struct.rps_dev_flow] }
%struct.xdp_buff = type { ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.130 }
%union.anon.130 = type { %struct.anon.131 }
%struct.anon.131 = type { %struct.anon.132, [0 x %struct.sock_filter] }
%struct.anon.132 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync, [8 x i8] }
%struct.rps_sock_flow_table = type { i32, [124 x i8], [0 x i32] }
%struct.rps_map = type { i32, %struct.callback_head, [0 x i16] }
%struct.sd_flow_limit = type { i64, i32, i32, [128 x i16], [0 x i8] }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.53, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32 }
%struct.anon.32 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.53 = type { %struct.callback_head }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.netdev_nested_priv = type { i8, ptr }
%struct.netdev_notifier_changeupper_info = type { %struct.netdev_notifier_info, ptr, i8, i8, ptr }
%struct.netdev_notifier_bonding_info = type { %struct.netdev_notifier_info, %struct.netdev_bonding_info }
%struct.netdev_bonding_info = type { %struct.ifslave, %struct.ifbond }
%struct.ifslave = type { i32, [16 x i8], i8, i8, i32 }
%struct.ifbond = type { i32, i32, i32 }
%struct.netdev_notifier_changelowerstate_info = type { %struct.netdev_notifier_info, ptr }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.36 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.36 = type { %struct.callback_head }
%struct.netdev_notifier_info_ext = type { %struct.netdev_notifier_info, %union.anon.243 }
%union.anon.243 = type { i32 }
%struct.netlink_ext_ack = type { ptr, ptr, ptr, [20 x i8], i8 }
%struct.netdev_notifier_pre_changeaddr_info = type { %struct.netdev_notifier_info, ptr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.bpf_link = type { %struct.atomic64_t, i32, i32, ptr, ptr, %struct.work_struct }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, %struct.hlist_node, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.bpf_ksym, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i64, i32, [2 x ptr], [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, %union.anon.129 }
%struct.bpf_ksym = type { i32, i32, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%union.anon.129 = type { %struct.work_struct }
%struct.bpf_link_primer = type { ptr, ptr, i32, i32 }
%struct.nsproxy = type { %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.anon.117 = type { i32, %union.anon.118, i32, i32, %union.anon.119 }
%union.anon.118 = type { i32 }
%union.anon.119 = type { %struct.anon.120 }
%struct.anon.120 = type { i64, i32 }
%struct.bpf_xdp_link = type { %struct.bpf_link, ptr, i32 }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.pcpu_sw_netstats = type { i64, i64, i64, i64, %struct.u64_stats_sync }
%struct.netdev_bpf = type { i32, %union.anon.95 }
%union.anon.95 = type { %struct.anon.96 }
%struct.anon.96 = type { i32, ptr, ptr }
%struct.dsa_port = type { %union.anon.163, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, [6 x i8], i8, i8, ptr, i32, ptr, %struct.devlink_port, ptr, %struct.phylink_config, ptr, ptr, %struct.list_head, ptr, ptr, %struct.mutex, %struct.list_head, %struct.list_head }
%union.anon.163 = type { ptr }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, %struct.spinlock, i32, i32, ptr, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex, ptr }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.137 }
%union.anon.137 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.phylink_config = type { ptr, i32, i8, i8, i8, i8, ptr, [1 x i32], i32 }
%struct.cpu_rmap = type { %struct.kref, i16, i16, ptr, [0 x %struct.anon.184] }
%struct.anon.184 = type { i16, i16 }
%struct.netdev_adjacent = type { ptr, ptr, i8, i8, i16, ptr, %struct.list_head, %struct.callback_head }
%struct.bpf_link_info = type { i32, i32, i32, %union.anon.225 }
%union.anon.225 = type { %struct.anon.226 }
%struct.anon.226 = type { i64, i32 }
%struct.rtnl_link_ops = type { %struct.list_head, ptr, i32, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }

@.str = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"dev_base_lock\00", [18 x i8] zeroinitializer }, align 32
@dev_base_lock = dso_local global { %struct.rwlock_t, [52 x i8] } { %struct.rwlock_t { %struct.arch_rwlock_t zeroinitializer, i32 -558948627, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str, i8 0, i8 3, i8 0, i32 0, i32 0 } }, [52 x i8] zeroinitializer }, align 32
@__kstrtab_dev_base_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_base_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_base_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_base_lock to i32), ptr @__kstrtab_dev_base_lock, ptr @__kstrtabns_dev_base_lock }, section "___ksymtab+dev_base_lock", align 4
@__kstrtab_netdev_name_in_use = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_name_in_use = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_name_in_use = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_name_in_use to i32), ptr @__kstrtab_netdev_name_in_use, ptr @__kstrtabns_netdev_name_in_use }, section "___ksymtab+netdev_name_in_use", align 4
@__kstrtab_netdev_name_node_alt_create = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_name_node_alt_create = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_name_node_alt_create = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_name_node_alt_create to i32), ptr @__kstrtab_netdev_name_node_alt_create, ptr @__kstrtabns_netdev_name_node_alt_create }, section "___ksymtab+netdev_name_node_alt_create", align 4
@__kstrtab_netdev_name_node_alt_destroy = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_name_node_alt_destroy = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_name_node_alt_destroy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_name_node_alt_destroy to i32), ptr @__kstrtab_netdev_name_node_alt_destroy, ptr @__kstrtabns_netdev_name_node_alt_destroy }, section "___ksymtab+netdev_name_node_alt_destroy", align 4
@softnet_data = weak dso_local global %struct.softnet_data zeroinitializer, section ".data..percpu..shared_aligned", align 128
@__kstrtab_softnet_data = external dso_local constant [0 x i8], align 1
@__kstrtabns_softnet_data = external dso_local constant [0 x i8], align 1
@__ksymtab_softnet_data = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @softnet_data to i32), ptr @__kstrtab_softnet_data, ptr @__kstrtabns_softnet_data }, section "___ksymtab+softnet_data", align 4
@ptype_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.89, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@__kstrtab_dev_add_pack = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_add_pack = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_add_pack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_add_pack to i32), ptr @__kstrtab_dev_add_pack, ptr @__kstrtabns_dev_add_pack }, section "___ksymtab+dev_add_pack", align 4
@__dev_remove_pack._entry = internal constant %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str.3, i32 574, ptr null, ptr null }, align 1
@.str.1 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\014dev_remove_pack: %p not found\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__dev_remove_pack\00", [46 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"net/core/dev.c\00", [17 x i8] zeroinitializer }, align 32
@__dev_remove_pack._entry_ptr = internal global ptr @__dev_remove_pack._entry, section ".printk_index", align 4
@__kstrtab___dev_remove_pack = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_remove_pack = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_remove_pack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_remove_pack to i32), ptr @__kstrtab___dev_remove_pack, ptr @__kstrtabns___dev_remove_pack }, section "___ksymtab+__dev_remove_pack", align 4
@__kstrtab_dev_remove_pack = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_remove_pack = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_remove_pack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_remove_pack to i32), ptr @__kstrtab_dev_remove_pack, ptr @__kstrtabns_dev_remove_pack }, section "___ksymtab+dev_remove_pack", align 4
@__kstrtab_dev_get_iflink = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_iflink = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_iflink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_iflink to i32), ptr @__kstrtab_dev_get_iflink, ptr @__kstrtabns_dev_get_iflink }, section "___ksymtab+dev_get_iflink", align 4
@__kstrtab_dev_fill_metadata_dst = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_fill_metadata_dst = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_fill_metadata_dst = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_fill_metadata_dst to i32), ptr @__kstrtab_dev_fill_metadata_dst, ptr @__kstrtabns_dev_fill_metadata_dst }, section "___ksymtab_gpl+dev_fill_metadata_dst", align 4
@dev_fill_forward_path.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_dev_fill_forward_path = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_fill_forward_path = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_fill_forward_path = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_fill_forward_path to i32), ptr @__kstrtab_dev_fill_forward_path, ptr @__kstrtabns_dev_fill_forward_path }, section "___ksymtab_gpl+dev_fill_forward_path", align 4
@__kstrtab___dev_get_by_name = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_get_by_name = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_get_by_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_get_by_name to i32), ptr @__kstrtab___dev_get_by_name, ptr @__kstrtabns___dev_get_by_name }, section "___ksymtab+__dev_get_by_name", align 4
@__kstrtab_dev_get_by_name_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_name_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_name_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_name_rcu to i32), ptr @__kstrtab_dev_get_by_name_rcu, ptr @__kstrtabns_dev_get_by_name_rcu }, section "___ksymtab+dev_get_by_name_rcu", align 4
@__kstrtab_dev_get_by_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_name to i32), ptr @__kstrtab_dev_get_by_name, ptr @__kstrtabns_dev_get_by_name }, section "___ksymtab+dev_get_by_name", align 4
@__kstrtab___dev_get_by_index = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_get_by_index = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_get_by_index = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_get_by_index to i32), ptr @__kstrtab___dev_get_by_index, ptr @__kstrtabns___dev_get_by_index }, section "___ksymtab+__dev_get_by_index", align 4
@dev_get_by_index_rcu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.4 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@__kstrtab_dev_get_by_index_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_index_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_index_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_index_rcu to i32), ptr @__kstrtab_dev_get_by_index_rcu, ptr @__kstrtabns_dev_get_by_index_rcu }, section "___ksymtab+dev_get_by_index_rcu", align 4
@__kstrtab_dev_get_by_index = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_index = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_index = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_index to i32), ptr @__kstrtab_dev_get_by_index, ptr @__kstrtabns_dev_get_by_index }, section "___ksymtab+dev_get_by_index", align 4
@dev_get_by_napi_id.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_dev_get_by_napi_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_by_napi_id = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_by_napi_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_by_napi_id to i32), ptr @__kstrtab_dev_get_by_napi_id, ptr @__kstrtabns_dev_get_by_napi_id }, section "___ksymtab+dev_get_by_napi_id", align 4
@devnet_rename_sem = internal global { %struct.rw_semaphore, [32 x i8] } { %struct.rw_semaphore { %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.93, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.list_head { ptr getelementptr (i8, ptr @devnet_rename_sem, i64 56), ptr getelementptr (i8, ptr @devnet_rename_sem, i64 56) }, ptr @devnet_rename_sem, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.94, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [32 x i8] zeroinitializer }, align 32
@dev_getbyhwaddr_rcu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_dev_getbyhwaddr_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_getbyhwaddr_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_getbyhwaddr_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_getbyhwaddr_rcu to i32), ptr @__kstrtab_dev_getbyhwaddr_rcu, ptr @__kstrtabns_dev_getbyhwaddr_rcu }, section "___ksymtab+dev_getbyhwaddr_rcu", align 4
@dev_getfirstbyhwtype.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_dev_getfirstbyhwtype = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_getfirstbyhwtype = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_getfirstbyhwtype = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_getfirstbyhwtype to i32), ptr @__kstrtab_dev_getfirstbyhwtype, ptr @__kstrtabns_dev_getfirstbyhwtype }, section "___ksymtab+dev_getfirstbyhwtype", align 4
@__dev_get_by_flags.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.5 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"RTNL: assertion failed at %s (%d)\0A\00", [61 x i8] zeroinitializer }, align 32
@__kstrtab___dev_get_by_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_get_by_flags = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_get_by_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_get_by_flags to i32), ptr @__kstrtab___dev_get_by_flags, ptr @__kstrtabns___dev_get_by_flags }, section "___ksymtab+__dev_get_by_flags", align 4
@.str.6 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c".\00", [30 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"..\00", [29 x i8] zeroinitializer }, align 32
@_ctype = external dso_local local_unnamed_addr constant [0 x i8], align 1
@__kstrtab_dev_valid_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_valid_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_valid_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_valid_name to i32), ptr @__kstrtab_dev_valid_name, ptr @__kstrtabns_dev_valid_name }, section "___ksymtab+dev_valid_name", align 4
@__kstrtab_dev_alloc_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_alloc_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_alloc_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_alloc_name to i32), ptr @__kstrtab_dev_alloc_name, ptr @__kstrtabns_dev_alloc_name }, section "___ksymtab+dev_alloc_name", align 4
@dev_change_name.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.8 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"renamed from %s\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"name change rollback failed: %d\0A\00", [63 x i8] zeroinitializer }, align 32
@ifalias_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.95, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @ifalias_mutex, i64 52), ptr getelementptr (i8, ptr @ifalias_mutex, i64 52) }, ptr @ifalias_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.96, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@dev_set_alias.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.10 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"suspicious rcu_dereference_protected() usage\00", [51 x i8] zeroinitializer }, align 32
@__kstrtab_dev_set_alias = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_alias = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_alias = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_alias to i32), ptr @__kstrtab_dev_set_alias, ptr @__kstrtabns_dev_set_alias }, section "___ksymtab+dev_set_alias", align 4
@dev_get_alias.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.11 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_features_change = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_features_change = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_features_change = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_features_change to i32), ptr @__kstrtab_netdev_features_change, ptr @__kstrtabns_netdev_features_change }, section "___ksymtab+netdev_features_change", align 4
@__kstrtab_netdev_state_change = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_state_change = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_state_change = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_state_change to i32), ptr @__kstrtab_netdev_state_change, ptr @__kstrtabns_netdev_state_change }, section "___ksymtab+netdev_state_change", align 4
@__netdev_notify_peers.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab___netdev_notify_peers = external dso_local constant [0 x i8], align 1
@__kstrtabns___netdev_notify_peers = external dso_local constant [0 x i8], align 1
@__ksymtab___netdev_notify_peers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netdev_notify_peers to i32), ptr @__kstrtab___netdev_notify_peers, ptr @__kstrtabns___netdev_notify_peers }, section "___ksymtab+__netdev_notify_peers", align 4
@__kstrtab_netdev_notify_peers = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_notify_peers = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_notify_peers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_notify_peers to i32), ptr @__kstrtab_netdev_notify_peers, ptr @__kstrtabns_netdev_notify_peers }, section "___ksymtab+netdev_notify_peers", align 4
@__kstrtab_dev_open = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_open = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_open = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_open to i32), ptr @__kstrtab_dev_open, ptr @__kstrtabns_dev_open }, section "___ksymtab+dev_open", align 4
@__kstrtab_dev_close_many = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_close_many = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_close_many = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_close_many to i32), ptr @__kstrtab_dev_close_many, ptr @__kstrtabns_dev_close_many }, section "___ksymtab+dev_close_many", align 4
@__kstrtab_dev_close = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_close = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_close = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_close to i32), ptr @__kstrtab_dev_close, ptr @__kstrtabns_dev_close }, section "___ksymtab+dev_close", align 4
@.str.13 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"netdevice: %s%s: failed to disable LRO!\0A\00", [55 x i8] zeroinitializer }, align 32
@__kstrtab_dev_disable_lro = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_disable_lro = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_disable_lro = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_disable_lro to i32), ptr @__kstrtab_dev_disable_lro, ptr @__kstrtabns_dev_disable_lro }, section "___ksymtab+dev_disable_lro", align 4
@.str.14 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NETDEV_UP\00", [22 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"NETDEV_DOWN\00", [20 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"NETDEV_REBOOT\00", [18 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"NETDEV_CHANGE\00", [18 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"NETDEV_REGISTER\00", [16 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"NETDEV_UNREGISTER\00", [46 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"NETDEV_CHANGEMTU\00", [47 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"NETDEV_CHANGEADDR\00", [46 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"NETDEV_GOING_DOWN\00", [46 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"NETDEV_CHANGENAME\00", [46 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"NETDEV_FEAT_CHANGE\00", [45 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"NETDEV_BONDING_FAILOVER\00", [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"NETDEV_PRE_UP\00", [18 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"NETDEV_PRE_TYPE_CHANGE\00", [41 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"NETDEV_POST_TYPE_CHANGE\00", [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"NETDEV_POST_INIT\00", [47 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"NETDEV_RELEASE\00", [17 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"NETDEV_NOTIFY_PEERS\00", [44 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"NETDEV_JOIN\00", [20 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"NETDEV_CHANGEUPPER\00", [45 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"NETDEV_RESEND_IGMP\00", [45 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"NETDEV_PRECHANGEMTU\00", [44 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"NETDEV_CHANGEINFODATA\00", [42 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"NETDEV_BONDING_INFO\00", [44 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"NETDEV_PRECHANGEUPPER\00", [42 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"NETDEV_CHANGELOWERSTATE\00", [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"NETDEV_UDP_TUNNEL_PUSH_INFO\00", [36 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"NETDEV_UDP_TUNNEL_DROP_INFO\00", [36 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"NETDEV_CHANGE_TX_QUEUE_LEN\00", [37 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"NETDEV_CVLAN_FILTER_PUSH_INFO\00", [34 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"NETDEV_CVLAN_FILTER_DROP_INFO\00", [34 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"NETDEV_SVLAN_FILTER_PUSH_INFO\00", [34 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"NETDEV_SVLAN_FILTER_DROP_INFO\00", [34 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"NETDEV_PRE_CHANGEADDR\00", [42 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"UNKNOWN_NETDEV_EVENT\00", [43 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_cmd_to_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_cmd_to_name = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_cmd_to_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_cmd_to_name to i32), ptr @__kstrtab_netdev_cmd_to_name, ptr @__kstrtabns_netdev_cmd_to_name }, section "___ksymtab_gpl+netdev_cmd_to_name", align 4
@pernet_ops_rwsem = external dso_local global %struct.rw_semaphore, align 4
@netdev_chain = internal global { %struct.raw_notifier_head, [28 x i8] } zeroinitializer, align 32
@dev_boot_phase = internal global { i1, [31 x i8] } zeroinitializer, align 32
@net_namespace_list = external dso_local global %struct.list_head, align 4
@__kstrtab_register_netdevice_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdevice_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdevice_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdevice_notifier to i32), ptr @__kstrtab_register_netdevice_notifier, ptr @__kstrtabns_register_netdevice_notifier }, section "___ksymtab+register_netdevice_notifier", align 4
@__kstrtab_unregister_netdevice_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_notifier to i32), ptr @__kstrtab_unregister_netdevice_notifier, ptr @__kstrtabns_unregister_netdevice_notifier }, section "___ksymtab+unregister_netdevice_notifier", align 4
@__kstrtab_register_netdevice_notifier_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdevice_notifier_net = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdevice_notifier_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdevice_notifier_net to i32), ptr @__kstrtab_register_netdevice_notifier_net, ptr @__kstrtabns_register_netdevice_notifier_net }, section "___ksymtab+register_netdevice_notifier_net", align 4
@__kstrtab_unregister_netdevice_notifier_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_notifier_net = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_notifier_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_notifier_net to i32), ptr @__kstrtab_unregister_netdevice_notifier_net, ptr @__kstrtabns_unregister_netdevice_notifier_net }, section "___ksymtab+unregister_netdevice_notifier_net", align 4
@__kstrtab_register_netdevice_notifier_dev_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdevice_notifier_dev_net = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdevice_notifier_dev_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdevice_notifier_dev_net to i32), ptr @__kstrtab_register_netdevice_notifier_dev_net, ptr @__kstrtabns_register_netdevice_notifier_dev_net }, section "___ksymtab+register_netdevice_notifier_dev_net", align 4
@__kstrtab_unregister_netdevice_notifier_dev_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_notifier_dev_net = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_notifier_dev_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_notifier_dev_net to i32), ptr @__kstrtab_unregister_netdevice_notifier_dev_net, ptr @__kstrtabns_unregister_netdevice_notifier_dev_net }, section "___ksymtab+unregister_netdevice_notifier_dev_net", align 4
@__kstrtab_call_netdevice_notifiers = external dso_local constant [0 x i8], align 1
@__kstrtabns_call_netdevice_notifiers = external dso_local constant [0 x i8], align 1
@__ksymtab_call_netdevice_notifiers = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @call_netdevice_notifiers to i32), ptr @__kstrtab_call_netdevice_notifiers, ptr @__kstrtabns_call_netdevice_notifiers }, section "___ksymtab+call_netdevice_notifiers", align 4
@__kstrtab_net_inc_ingress_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_inc_ingress_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_net_inc_ingress_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_inc_ingress_queue to i32), ptr @__kstrtab_net_inc_ingress_queue, ptr @__kstrtabns_net_inc_ingress_queue }, section "___ksymtab_gpl+net_inc_ingress_queue", align 4
@__kstrtab_net_dec_ingress_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_dec_ingress_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_net_dec_ingress_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_dec_ingress_queue to i32), ptr @__kstrtab_net_dec_ingress_queue, ptr @__kstrtabns_net_dec_ingress_queue }, section "___ksymtab_gpl+net_dec_ingress_queue", align 4
@__kstrtab_net_inc_egress_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_inc_egress_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_net_inc_egress_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_inc_egress_queue to i32), ptr @__kstrtab_net_inc_egress_queue, ptr @__kstrtabns_net_inc_egress_queue }, section "___ksymtab_gpl+net_inc_egress_queue", align 4
@__kstrtab_net_dec_egress_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_dec_egress_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_net_dec_egress_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_dec_egress_queue to i32), ptr @__kstrtab_net_dec_egress_queue, ptr @__kstrtabns_net_dec_egress_queue }, section "___ksymtab_gpl+net_dec_egress_queue", align 4
@netstamp_wanted = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@netstamp_needed_deferred = internal global { %struct.atomic_t, [28 x i8] } zeroinitializer, align 32
@netstamp_work = internal global { %struct.work_struct, [52 x i8] } { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @netstamp_work, i64 4), ptr getelementptr (i8, ptr @netstamp_work, i64 4) }, ptr @netstamp_clear, %struct.lockdep_map { ptr @netstamp_work, [2 x ptr] zeroinitializer, ptr @.str.108, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [52 x i8] zeroinitializer }, align 32
@__kstrtab_net_enable_timestamp = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_enable_timestamp = external dso_local constant [0 x i8], align 1
@__ksymtab_net_enable_timestamp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_enable_timestamp to i32), ptr @__kstrtab_net_enable_timestamp, ptr @__kstrtabns_net_enable_timestamp }, section "___ksymtab+net_enable_timestamp", align 4
@__kstrtab_net_disable_timestamp = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_disable_timestamp = external dso_local constant [0 x i8], align 1
@__ksymtab_net_disable_timestamp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_disable_timestamp to i32), ptr @__kstrtab_net_disable_timestamp, ptr @__kstrtabns_net_disable_timestamp }, section "___ksymtab+net_disable_timestamp", align 4
@__kstrtab_is_skb_forwardable = external dso_local constant [0 x i8], align 1
@__kstrtabns_is_skb_forwardable = external dso_local constant [0 x i8], align 1
@__ksymtab_is_skb_forwardable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @is_skb_forwardable to i32), ptr @__kstrtab_is_skb_forwardable, ptr @__kstrtabns_is_skb_forwardable }, section "___ksymtab_gpl+is_skb_forwardable", align 4
@__kstrtab___dev_forward_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_forward_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_forward_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_forward_skb to i32), ptr @__kstrtab___dev_forward_skb, ptr @__kstrtabns___dev_forward_skb }, section "___ksymtab_gpl+__dev_forward_skb", align 4
@__kstrtab_dev_forward_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_forward_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_forward_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_forward_skb to i32), ptr @__kstrtab_dev_forward_skb, ptr @__kstrtabns_dev_forward_skb }, section "___ksymtab_gpl+dev_forward_skb", align 4
@ptype_all = dso_local global %struct.list_head zeroinitializer, section ".data..read_mostly", align 4
@__kstrtab_dev_nit_active = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_nit_active = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_nit_active = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_nit_active to i32), ptr @__kstrtab_dev_nit_active, ptr @__kstrtabns_dev_nit_active }, section "___ksymtab_gpl+dev_nit_active", align 4
@dev_queue_xmit_nit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@dev_queue_xmit_nit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.50, ptr @.str.3, i32 2227, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\012protocol %04x is buggy, dev %s\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"dev_queue_xmit_nit\00", [45 x i8] zeroinitializer }, align 32
@dev_queue_xmit_nit._entry_ptr = internal global ptr @dev_queue_xmit_nit._entry, section ".printk_index", align 4
@__kstrtab_dev_queue_xmit_nit = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_queue_xmit_nit = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_queue_xmit_nit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_queue_xmit_nit to i32), ptr @__kstrtab_dev_queue_xmit_nit, ptr @__kstrtabns_dev_queue_xmit_nit }, section "___ksymtab_gpl+dev_queue_xmit_nit", align 4
@__kstrtab_netdev_txq_to_tc = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_txq_to_tc = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_txq_to_tc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_txq_to_tc to i32), ptr @__kstrtab_netdev_txq_to_tc, ptr @__kstrtabns_netdev_txq_to_tc }, section "___ksymtab+netdev_txq_to_tc", align 4
@xps_map_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.109, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @xps_map_mutex, i64 52), ptr getelementptr (i8, ptr @xps_map_mutex, i64 52) }, ptr @xps_map_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.110, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@__netif_set_xps_queue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@__netif_set_xps_queue.__warned.51 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@xps_needed = internal global %struct.static_key zeroinitializer, section ".data..read_mostly", align 4
@xps_rxqs_needed = internal global %struct.static_key zeroinitializer, section ".data..read_mostly", align 4
@__netif_set_xps_queue.__warned.52 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__netif_set_xps_queue.__warned.53 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__netif_set_xps_queue.__warned.54 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__netif_set_xps_queue.__warned.55 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__netif_set_xps_queue.__warned.56 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab___netif_set_xps_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns___netif_set_xps_queue = external dso_local constant [0 x i8], align 1
@__ksymtab___netif_set_xps_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netif_set_xps_queue to i32), ptr @__kstrtab___netif_set_xps_queue, ptr @__kstrtabns___netif_set_xps_queue }, section "___ksymtab_gpl+__netif_set_xps_queue", align 4
@__kstrtab_netif_set_xps_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_set_xps_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_set_xps_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_set_xps_queue to i32), ptr @__kstrtab_netif_set_xps_queue, ptr @__kstrtabns_netif_set_xps_queue }, section "___ksymtab+netif_set_xps_queue", align 4
@__kstrtab_netdev_reset_tc = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_reset_tc = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_reset_tc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_reset_tc to i32), ptr @__kstrtab_netdev_reset_tc, ptr @__kstrtabns_netdev_reset_tc }, section "___ksymtab+netdev_reset_tc", align 4
@__kstrtab_netdev_set_tc_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_set_tc_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_set_tc_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_set_tc_queue to i32), ptr @__kstrtab_netdev_set_tc_queue, ptr @__kstrtabns_netdev_set_tc_queue }, section "___ksymtab+netdev_set_tc_queue", align 4
@__kstrtab_netdev_set_num_tc = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_set_num_tc = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_set_num_tc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_set_num_tc to i32), ptr @__kstrtab_netdev_set_num_tc, ptr @__kstrtabns_netdev_set_num_tc }, section "___ksymtab+netdev_set_num_tc", align 4
@__kstrtab_netdev_unbind_sb_channel = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_unbind_sb_channel = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_unbind_sb_channel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_unbind_sb_channel to i32), ptr @__kstrtab_netdev_unbind_sb_channel, ptr @__kstrtabns_netdev_unbind_sb_channel }, section "___ksymtab+netdev_unbind_sb_channel", align 4
@__kstrtab_netdev_bind_sb_channel_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_bind_sb_channel_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_bind_sb_channel_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_bind_sb_channel_queue to i32), ptr @__kstrtab_netdev_bind_sb_channel_queue, ptr @__kstrtabns_netdev_bind_sb_channel_queue }, section "___ksymtab+netdev_bind_sb_channel_queue", align 4
@__kstrtab_netdev_set_sb_channel = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_set_sb_channel = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_set_sb_channel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_set_sb_channel to i32), ptr @__kstrtab_netdev_set_sb_channel, ptr @__kstrtabns_netdev_set_sb_channel }, section "___ksymtab+netdev_set_sb_channel", align 4
@netif_set_real_num_tx_queues.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netif_set_real_num_tx_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_set_real_num_tx_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_set_real_num_tx_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_set_real_num_tx_queues to i32), ptr @__kstrtab_netif_set_real_num_tx_queues, ptr @__kstrtabns_netif_set_real_num_tx_queues }, section "___ksymtab+netif_set_real_num_tx_queues", align 4
@netif_set_real_num_rx_queues.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netif_set_real_num_rx_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_set_real_num_rx_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_set_real_num_rx_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_set_real_num_rx_queues to i32), ptr @__kstrtab_netif_set_real_num_rx_queues, ptr @__kstrtabns_netif_set_real_num_rx_queues }, section "___ksymtab+netif_set_real_num_rx_queues", align 4
@__kstrtab_netif_set_real_num_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_set_real_num_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_set_real_num_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_set_real_num_queues to i32), ptr @__kstrtab_netif_set_real_num_queues, ptr @__kstrtabns_netif_set_real_num_queues }, section "___ksymtab+netif_set_real_num_queues", align 4
@__kstrtab_netif_get_num_default_rss_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_get_num_default_rss_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_get_num_default_rss_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_get_num_default_rss_queues to i32), ptr @__kstrtab_netif_get_num_default_rss_queues, ptr @__kstrtabns_netif_get_num_default_rss_queues }, section "___ksymtab+netif_get_num_default_rss_queues", align 4
@__kstrtab___netif_schedule = external dso_local constant [0 x i8], align 1
@__kstrtabns___netif_schedule = external dso_local constant [0 x i8], align 1
@__ksymtab___netif_schedule = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netif_schedule to i32), ptr @__kstrtab___netif_schedule, ptr @__kstrtabns___netif_schedule }, section "___ksymtab+__netif_schedule", align 4
@netif_schedule_queue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_netif_schedule_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_schedule_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_schedule_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_schedule_queue to i32), ptr @__kstrtab_netif_schedule_queue, ptr @__kstrtabns_netif_schedule_queue }, section "___ksymtab+netif_schedule_queue", align 4
@netif_tx_wake_queue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_netif_tx_wake_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_tx_wake_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_tx_wake_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_tx_wake_queue to i32), ptr @__kstrtab_netif_tx_wake_queue, ptr @__kstrtabns_netif_tx_wake_queue }, section "___ksymtab+netif_tx_wake_queue", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__kstrtab___dev_kfree_skb_irq = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_kfree_skb_irq = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_kfree_skb_irq = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_kfree_skb_irq to i32), ptr @__kstrtab___dev_kfree_skb_irq, ptr @__kstrtabns___dev_kfree_skb_irq }, section "___ksymtab+__dev_kfree_skb_irq", align 4
@__kstrtab___dev_kfree_skb_any = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_kfree_skb_any = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_kfree_skb_any = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_kfree_skb_any to i32), ptr @__kstrtab___dev_kfree_skb_any, ptr @__kstrtabns___dev_kfree_skb_any }, section "___ksymtab+__dev_kfree_skb_any", align 4
@__kstrtab_netif_device_detach = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_device_detach = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_device_detach = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_device_detach to i32), ptr @__kstrtab_netif_device_detach, ptr @__kstrtabns_netif_device_detach }, section "___ksymtab+netif_device_detach", align 4
@__kstrtab_netif_device_attach = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_device_attach = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_device_attach = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_device_attach to i32), ptr @__kstrtab_netif_device_attach, ptr @__kstrtabns_netif_device_attach }, section "___ksymtab+netif_device_attach", align 4
@__kstrtab_skb_checksum_help = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_checksum_help = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_checksum_help = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_checksum_help to i32), ptr @__kstrtab_skb_checksum_help, ptr @__kstrtabns_skb_checksum_help }, section "___ksymtab+skb_checksum_help", align 4
@skb_crc32c_csum_help.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@crc32c_csum_stub = external dso_local local_unnamed_addr global ptr, section ".data..read_mostly", align 4
@__kstrtab___skb_gso_segment = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_gso_segment = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_gso_segment = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_gso_segment to i32), ptr @__kstrtab___skb_gso_segment, ptr @__kstrtabns___skb_gso_segment }, section "___ksymtab+__skb_gso_segment", align 4
@netdev_rx_csum_fault.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_rx_csum_fault = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_rx_csum_fault = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_rx_csum_fault = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_rx_csum_fault to i32), ptr @__kstrtab_netdev_rx_csum_fault, ptr @__kstrtabns_netdev_rx_csum_fault }, section "___ksymtab+netdev_rx_csum_fault", align 4
@__kstrtab_passthru_features_check = external dso_local constant [0 x i8], align 1
@__kstrtabns_passthru_features_check = external dso_local constant [0 x i8], align 1
@__ksymtab_passthru_features_check = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @passthru_features_check to i32), ptr @__kstrtab_passthru_features_check, ptr @__kstrtabns_passthru_features_check }, section "___ksymtab+passthru_features_check", align 4
@__kstrtab_netif_skb_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_skb_features = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_skb_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_skb_features to i32), ptr @__kstrtab_netif_skb_features, ptr @__kstrtabns_netif_skb_features }, section "___ksymtab+netif_skb_features", align 4
@__kstrtab_skb_csum_hwoffload_help = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_csum_hwoffload_help = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_csum_hwoffload_help = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_csum_hwoffload_help to i32), ptr @__kstrtab_skb_csum_hwoffload_help, ptr @__kstrtabns_skb_csum_hwoffload_help }, section "___ksymtab+skb_csum_hwoffload_help", align 4
@__kstrtab_validate_xmit_skb_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_validate_xmit_skb_list = external dso_local constant [0 x i8], align 1
@__ksymtab_validate_xmit_skb_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @validate_xmit_skb_list to i32), ptr @__kstrtab_validate_xmit_skb_list, ptr @__kstrtabns_validate_xmit_skb_list }, section "___ksymtab_gpl+validate_xmit_skb_list", align 4
@__kstrtab_dev_loopback_xmit = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_loopback_xmit = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_loopback_xmit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_loopback_xmit to i32), ptr @__kstrtab_dev_loopback_xmit, ptr @__kstrtabns_dev_loopback_xmit }, section "___ksymtab+dev_loopback_xmit", align 4
@__kstrtab_dev_pick_tx_zero = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_pick_tx_zero = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_pick_tx_zero = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_pick_tx_zero to i32), ptr @__kstrtab_dev_pick_tx_zero, ptr @__kstrtabns_dev_pick_tx_zero }, section "___ksymtab+dev_pick_tx_zero", align 4
@__kstrtab_dev_pick_tx_cpu_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_pick_tx_cpu_id = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_pick_tx_cpu_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_pick_tx_cpu_id to i32), ptr @__kstrtab_dev_pick_tx_cpu_id, ptr @__kstrtabns_dev_pick_tx_cpu_id }, section "___ksymtab+dev_pick_tx_cpu_id", align 4
@__kstrtab_netdev_pick_tx = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_pick_tx = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_pick_tx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_pick_tx to i32), ptr @__kstrtab_netdev_pick_tx, ptr @__kstrtabns_netdev_pick_tx }, section "___ksymtab+netdev_pick_tx", align 4
@__kstrtab_dev_queue_xmit = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_queue_xmit = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_queue_xmit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_queue_xmit to i32), ptr @__kstrtab_dev_queue_xmit, ptr @__kstrtabns_dev_queue_xmit }, section "___ksymtab+dev_queue_xmit", align 4
@__kstrtab_dev_queue_xmit_accel = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_queue_xmit_accel = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_queue_xmit_accel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_queue_xmit_accel to i32), ptr @__kstrtab_dev_queue_xmit_accel, ptr @__kstrtabns_dev_queue_xmit_accel }, section "___ksymtab+dev_queue_xmit_accel", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@__kstrtab___dev_direct_xmit = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_direct_xmit = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_direct_xmit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_direct_xmit to i32), ptr @__kstrtab___dev_direct_xmit, ptr @__kstrtabns___dev_direct_xmit }, section "___ksymtab+__dev_direct_xmit", align 4
@netdev_max_backlog = dso_local global i32 1000, section ".data..read_mostly", align 4
@__kstrtab_netdev_max_backlog = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_max_backlog = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_max_backlog = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_max_backlog to i32), ptr @__kstrtab_netdev_max_backlog, ptr @__kstrtabns_netdev_max_backlog }, section "___ksymtab+netdev_max_backlog", align 4
@netdev_tstamp_prequeue = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@netdev_budget = dso_local local_unnamed_addr global i32 300, section ".data..read_mostly", align 4
@netdev_budget_usecs = dso_local local_unnamed_addr global i32 20000, section ".data..read_mostly", align 4
@weight_p = dso_local local_unnamed_addr global i32 64, section ".data..read_mostly", align 4
@dev_weight_rx_bias = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@dev_weight_tx_bias = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@dev_rx_weight = dso_local local_unnamed_addr global i32 64, section ".data..read_mostly", align 4
@dev_tx_weight = dso_local local_unnamed_addr global i32 64, section ".data..read_mostly", align 4
@rps_sock_flow_table = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_rps_sock_flow_table = external dso_local constant [0 x i8], align 1
@__kstrtabns_rps_sock_flow_table = external dso_local constant [0 x i8], align 1
@__ksymtab_rps_sock_flow_table = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rps_sock_flow_table to i32), ptr @__kstrtab_rps_sock_flow_table, ptr @__kstrtabns_rps_sock_flow_table }, section "___ksymtab+rps_sock_flow_table", align 4
@rps_cpu_mask = dso_local global i32 0, section ".data..read_mostly", align 4
@__kstrtab_rps_cpu_mask = external dso_local constant [0 x i8], align 1
@__kstrtabns_rps_cpu_mask = external dso_local constant [0 x i8], align 1
@__ksymtab_rps_cpu_mask = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rps_cpu_mask to i32), ptr @__kstrtab_rps_cpu_mask, ptr @__kstrtabns_rps_cpu_mask }, section "___ksymtab+rps_cpu_mask", align 4
@rps_needed = dso_local global %struct.static_key_false zeroinitializer, section ".data..read_mostly", align 4
@__kstrtab_rps_needed = external dso_local constant [0 x i8], align 1
@__kstrtabns_rps_needed = external dso_local constant [0 x i8], align 1
@__ksymtab_rps_needed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rps_needed to i32), ptr @__kstrtab_rps_needed, ptr @__kstrtabns_rps_needed }, section "___ksymtab+rps_needed", align 4
@rfs_needed = dso_local global %struct.static_key_false zeroinitializer, section ".data..read_mostly", align 4
@__kstrtab_rfs_needed = external dso_local constant [0 x i8], align 1
@__kstrtabns_rfs_needed = external dso_local constant [0 x i8], align 1
@__ksymtab_rfs_needed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rfs_needed to i32), ptr @__kstrtab_rfs_needed, ptr @__kstrtabns_rfs_needed }, section "___ksymtab+rfs_needed", align 4
@rps_may_expire_flow.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_rps_may_expire_flow = external dso_local constant [0 x i8], align 1
@__kstrtabns_rps_may_expire_flow = external dso_local constant [0 x i8], align 1
@__ksymtab_rps_may_expire_flow = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rps_may_expire_flow to i32), ptr @__kstrtab_rps_may_expire_flow, ptr @__kstrtabns_rps_may_expire_flow }, section "___ksymtab+rps_may_expire_flow", align 4
@netdev_flow_limit_table_len = dso_local local_unnamed_addr global i32 4096, section ".data..read_mostly", align 4
@__kstrtab_do_xdp_generic = external dso_local constant [0 x i8], align 1
@__kstrtabns_do_xdp_generic = external dso_local constant [0 x i8], align 1
@__ksymtab_do_xdp_generic = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @do_xdp_generic to i32), ptr @__kstrtab_do_xdp_generic, ptr @__kstrtabns_do_xdp_generic }, section "___ksymtab_gpl+do_xdp_generic", align 4
@__kstrtab_netif_rx = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_rx = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_rx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_rx to i32), ptr @__kstrtab_netif_rx, ptr @__kstrtabns_netif_rx }, section "___ksymtab+netif_rx", align 4
@irq_stat = external dso_local global %struct.irq_cpustat_t, section ".data..percpu..shared_aligned", align 128
@__kstrtab_netif_rx_ni = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_rx_ni = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_rx_ni = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_rx_ni to i32), ptr @__kstrtab_netif_rx_ni, ptr @__kstrtabns_netif_rx_ni }, section "___ksymtab+netif_rx_ni", align 4
@__kstrtab_netif_rx_any_context = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_rx_any_context = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_rx_any_context = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_rx_any_context to i32), ptr @__kstrtab_netif_rx_any_context, ptr @__kstrtabns_netif_rx_any_context }, section "___ksymtab+netif_rx_any_context", align 4
@br_fdb_test_addr_hook = dso_local global ptr null, section ".data..read_mostly", align 4
@__kstrtab_br_fdb_test_addr_hook = external dso_local constant [0 x i8], align 1
@__kstrtabns_br_fdb_test_addr_hook = external dso_local constant [0 x i8], align 1
@__ksymtab_br_fdb_test_addr_hook = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @br_fdb_test_addr_hook to i32), ptr @__kstrtab_br_fdb_test_addr_hook, ptr @__kstrtabns_br_fdb_test_addr_hook }, section "___ksymtab_gpl+br_fdb_test_addr_hook", align 4
@netdev_is_rx_handler_busy.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@netdev_is_rx_handler_busy.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_netdev_is_rx_handler_busy = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_is_rx_handler_busy = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_is_rx_handler_busy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_is_rx_handler_busy to i32), ptr @__kstrtab_netdev_is_rx_handler_busy, ptr @__kstrtabns_netdev_is_rx_handler_busy }, section "___ksymtab_gpl+netdev_is_rx_handler_busy", align 4
@__kstrtab_netdev_rx_handler_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_rx_handler_register = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_rx_handler_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_rx_handler_register to i32), ptr @__kstrtab_netdev_rx_handler_register, ptr @__kstrtabns_netdev_rx_handler_register }, section "___ksymtab_gpl+netdev_rx_handler_register", align 4
@netdev_rx_handler_unregister.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_rx_handler_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_rx_handler_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_rx_handler_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_rx_handler_unregister to i32), ptr @__kstrtab_netdev_rx_handler_unregister, ptr @__kstrtabns_netdev_rx_handler_unregister }, section "___ksymtab_gpl+netdev_rx_handler_unregister", align 4
@__kstrtab_netif_receive_skb_core = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_receive_skb_core = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_receive_skb_core = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_receive_skb_core to i32), ptr @__kstrtab_netif_receive_skb_core, ptr @__kstrtabns_netif_receive_skb_core }, section "___ksymtab+netif_receive_skb_core", align 4
@__kstrtab_netif_receive_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_receive_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_receive_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_receive_skb to i32), ptr @__kstrtab_netif_receive_skb, ptr @__kstrtabns_netif_receive_skb }, section "___ksymtab+netif_receive_skb", align 4
@__kstrtab_netif_receive_skb_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_receive_skb_list = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_receive_skb_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_receive_skb_list to i32), ptr @__kstrtab_netif_receive_skb_list, ptr @__kstrtabns_netif_receive_skb_list }, section "___ksymtab+netif_receive_skb_list", align 4
@__kstrtab___napi_schedule = external dso_local constant [0 x i8], align 1
@__kstrtabns___napi_schedule = external dso_local constant [0 x i8], align 1
@__ksymtab___napi_schedule = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__napi_schedule to i32), ptr @__kstrtab___napi_schedule, ptr @__kstrtabns___napi_schedule }, section "___ksymtab+__napi_schedule", align 4
@__kstrtab_napi_schedule_prep = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_schedule_prep = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_schedule_prep = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_schedule_prep to i32), ptr @__kstrtab_napi_schedule_prep, ptr @__kstrtabns_napi_schedule_prep }, section "___ksymtab+napi_schedule_prep", align 4
@__kstrtab___napi_schedule_irqoff = external dso_local constant [0 x i8], align 1
@__kstrtabns___napi_schedule_irqoff = external dso_local constant [0 x i8], align 1
@__ksymtab___napi_schedule_irqoff = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__napi_schedule_irqoff to i32), ptr @__kstrtab___napi_schedule_irqoff, ptr @__kstrtabns___napi_schedule_irqoff }, section "___ksymtab+__napi_schedule_irqoff", align 4
@napi_complete_done.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_napi_complete_done = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_complete_done = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_complete_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_complete_done to i32), ptr @__kstrtab_napi_complete_done, ptr @__kstrtabns_napi_complete_done }, section "___ksymtab+napi_complete_done", align 4
@__kstrtab_napi_busy_loop = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_busy_loop = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_busy_loop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_busy_loop to i32), ptr @__kstrtab_napi_busy_loop, ptr @__kstrtabns_napi_busy_loop }, section "___ksymtab+napi_busy_loop", align 4
@__kstrtab_dev_set_threaded = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_threaded = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_threaded = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_threaded to i32), ptr @__kstrtab_dev_set_threaded, ptr @__kstrtabns_dev_set_threaded }, section "___ksymtab+dev_set_threaded", align 4
@netif_napi_add.__print_once = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.60 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s() called with weight %d\0A\00", [36 x i8] zeroinitializer }, align 32
@__func__.netif_napi_add = private unnamed_addr constant [15 x i8] c"netif_napi_add\00", align 1
@__kstrtab_netif_napi_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_napi_add = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_napi_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_napi_add to i32), ptr @__kstrtab_netif_napi_add, ptr @__kstrtabns_netif_napi_add }, section "___ksymtab+netif_napi_add", align 4
@__kstrtab_napi_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_disable to i32), ptr @__kstrtab_napi_disable, ptr @__kstrtabns_napi_disable }, section "___ksymtab+napi_disable", align 4
@__kstrtab_napi_enable = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_enable = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_enable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_enable to i32), ptr @__kstrtab_napi_enable, ptr @__kstrtabns_napi_enable }, section "___ksymtab+napi_enable", align 4
@__kstrtab___netif_napi_del = external dso_local constant [0 x i8], align 1
@__kstrtabns___netif_napi_del = external dso_local constant [0 x i8], align 1
@__ksymtab___netif_napi_del = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netif_napi_del to i32), ptr @__kstrtab___netif_napi_del, ptr @__kstrtabns___netif_napi_del }, section "___ksymtab+__netif_napi_del", align 4
@netdev_has_upper_dev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_has_upper_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_has_upper_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_has_upper_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_has_upper_dev to i32), ptr @__kstrtab_netdev_has_upper_dev, ptr @__kstrtabns_netdev_has_upper_dev }, section "___ksymtab+netdev_has_upper_dev", align 4
@__kstrtab_netdev_has_upper_dev_all_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_has_upper_dev_all_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_has_upper_dev_all_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_has_upper_dev_all_rcu to i32), ptr @__kstrtab_netdev_has_upper_dev_all_rcu, ptr @__kstrtabns_netdev_has_upper_dev_all_rcu }, section "___ksymtab+netdev_has_upper_dev_all_rcu", align 4
@netdev_has_any_upper_dev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_has_any_upper_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_has_any_upper_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_has_any_upper_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_has_any_upper_dev to i32), ptr @__kstrtab_netdev_has_any_upper_dev, ptr @__kstrtabns_netdev_has_any_upper_dev }, section "___ksymtab+netdev_has_any_upper_dev", align 4
@netdev_master_upper_dev_get.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_master_upper_dev_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_master_upper_dev_get = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_master_upper_dev_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_master_upper_dev_get to i32), ptr @__kstrtab_netdev_master_upper_dev_get, ptr @__kstrtabns_netdev_master_upper_dev_get }, section "___ksymtab+netdev_master_upper_dev_get", align 4
@__kstrtab_netdev_adjacent_get_private = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_adjacent_get_private = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_adjacent_get_private = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_adjacent_get_private to i32), ptr @__kstrtab_netdev_adjacent_get_private, ptr @__kstrtabns_netdev_adjacent_get_private }, section "___ksymtab+netdev_adjacent_get_private", align 4
@netdev_upper_get_next_dev_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_upper_get_next_dev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_upper_get_next_dev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_upper_get_next_dev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_upper_get_next_dev_rcu to i32), ptr @__kstrtab_netdev_upper_get_next_dev_rcu, ptr @__kstrtabns_netdev_upper_get_next_dev_rcu }, section "___ksymtab+netdev_upper_get_next_dev_rcu", align 4
@__kstrtab_netdev_walk_all_upper_dev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_walk_all_upper_dev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_walk_all_upper_dev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_walk_all_upper_dev_rcu to i32), ptr @__kstrtab_netdev_walk_all_upper_dev_rcu, ptr @__kstrtabns_netdev_walk_all_upper_dev_rcu }, section "___ksymtab_gpl+netdev_walk_all_upper_dev_rcu", align 4
@__kstrtab_netdev_lower_get_next_private = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_get_next_private = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_get_next_private = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_get_next_private to i32), ptr @__kstrtab_netdev_lower_get_next_private, ptr @__kstrtabns_netdev_lower_get_next_private }, section "___ksymtab+netdev_lower_get_next_private", align 4
@netdev_lower_get_next_private_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_lower_get_next_private_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_get_next_private_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_get_next_private_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_get_next_private_rcu to i32), ptr @__kstrtab_netdev_lower_get_next_private_rcu, ptr @__kstrtabns_netdev_lower_get_next_private_rcu }, section "___ksymtab+netdev_lower_get_next_private_rcu", align 4
@__kstrtab_netdev_lower_get_next = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_get_next = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_get_next = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_get_next to i32), ptr @__kstrtab_netdev_lower_get_next, ptr @__kstrtabns_netdev_lower_get_next }, section "___ksymtab+netdev_lower_get_next", align 4
@__kstrtab_netdev_walk_all_lower_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_walk_all_lower_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_walk_all_lower_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_walk_all_lower_dev to i32), ptr @__kstrtab_netdev_walk_all_lower_dev, ptr @__kstrtabns_netdev_walk_all_lower_dev }, section "___ksymtab_gpl+netdev_walk_all_lower_dev", align 4
@__kstrtab_netdev_next_lower_dev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_next_lower_dev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_next_lower_dev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_next_lower_dev_rcu to i32), ptr @__kstrtab_netdev_next_lower_dev_rcu, ptr @__kstrtabns_netdev_next_lower_dev_rcu }, section "___ksymtab+netdev_next_lower_dev_rcu", align 4
@__kstrtab_netdev_walk_all_lower_dev_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_walk_all_lower_dev_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_walk_all_lower_dev_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_walk_all_lower_dev_rcu to i32), ptr @__kstrtab_netdev_walk_all_lower_dev_rcu, ptr @__kstrtabns_netdev_walk_all_lower_dev_rcu }, section "___ksymtab_gpl+netdev_walk_all_lower_dev_rcu", align 4
@__kstrtab_netdev_lower_get_first_private_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_get_first_private_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_get_first_private_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_get_first_private_rcu to i32), ptr @__kstrtab_netdev_lower_get_first_private_rcu, ptr @__kstrtabns_netdev_lower_get_first_private_rcu }, section "___ksymtab+netdev_lower_get_first_private_rcu", align 4
@__kstrtab_netdev_master_upper_dev_get_rcu = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_master_upper_dev_get_rcu = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_master_upper_dev_get_rcu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_master_upper_dev_get_rcu to i32), ptr @__kstrtab_netdev_master_upper_dev_get_rcu, ptr @__kstrtabns_netdev_master_upper_dev_get_rcu }, section "___ksymtab+netdev_master_upper_dev_get_rcu", align 4
@__kstrtab_netdev_upper_dev_link = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_upper_dev_link = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_upper_dev_link = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_upper_dev_link to i32), ptr @__kstrtab_netdev_upper_dev_link, ptr @__kstrtabns_netdev_upper_dev_link }, section "___ksymtab+netdev_upper_dev_link", align 4
@__kstrtab_netdev_master_upper_dev_link = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_master_upper_dev_link = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_master_upper_dev_link = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_master_upper_dev_link to i32), ptr @__kstrtab_netdev_master_upper_dev_link, ptr @__kstrtabns_netdev_master_upper_dev_link }, section "___ksymtab+netdev_master_upper_dev_link", align 4
@__const.netdev_upper_dev_unlink.priv = private unnamed_addr constant { i8, [3 x i8], ptr } { i8 2, [3 x i8] zeroinitializer, ptr null }, align 8
@__kstrtab_netdev_upper_dev_unlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_upper_dev_unlink = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_upper_dev_unlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_upper_dev_unlink to i32), ptr @__kstrtab_netdev_upper_dev_unlink, ptr @__kstrtabns_netdev_upper_dev_unlink }, section "___ksymtab+netdev_upper_dev_unlink", align 4
@__kstrtab_netdev_adjacent_change_prepare = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_adjacent_change_prepare = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_adjacent_change_prepare = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_adjacent_change_prepare to i32), ptr @__kstrtab_netdev_adjacent_change_prepare, ptr @__kstrtabns_netdev_adjacent_change_prepare }, section "___ksymtab+netdev_adjacent_change_prepare", align 4
@__const.netdev_adjacent_change_commit.priv = private unnamed_addr constant { i8, [3 x i8], ptr } { i8 3, [3 x i8] zeroinitializer, ptr null }, align 8
@__kstrtab_netdev_adjacent_change_commit = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_adjacent_change_commit = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_adjacent_change_commit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_adjacent_change_commit to i32), ptr @__kstrtab_netdev_adjacent_change_commit, ptr @__kstrtabns_netdev_adjacent_change_commit }, section "___ksymtab+netdev_adjacent_change_commit", align 4
@__kstrtab_netdev_adjacent_change_abort = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_adjacent_change_abort = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_adjacent_change_abort = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_adjacent_change_abort to i32), ptr @__kstrtab_netdev_adjacent_change_abort, ptr @__kstrtabns_netdev_adjacent_change_abort }, section "___ksymtab+netdev_adjacent_change_abort", align 4
@__kstrtab_netdev_bonding_info_change = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_bonding_info_change = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_bonding_info_change = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_bonding_info_change to i32), ptr @__kstrtab_netdev_bonding_info_change, ptr @__kstrtabns_netdev_bonding_info_change }, section "___ksymtab+netdev_bonding_info_change", align 4
@__kstrtab_netdev_get_xmit_slave = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_get_xmit_slave = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_get_xmit_slave = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_get_xmit_slave to i32), ptr @__kstrtab_netdev_get_xmit_slave, ptr @__kstrtabns_netdev_get_xmit_slave }, section "___ksymtab+netdev_get_xmit_slave", align 4
@__kstrtab_netdev_sk_get_lowest_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_sk_get_lowest_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_sk_get_lowest_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_sk_get_lowest_dev to i32), ptr @__kstrtab_netdev_sk_get_lowest_dev, ptr @__kstrtabns_netdev_sk_get_lowest_dev }, section "___ksymtab+netdev_sk_get_lowest_dev", align 4
@__kstrtab_netdev_lower_dev_get_private = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_dev_get_private = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_dev_get_private = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_dev_get_private to i32), ptr @__kstrtab_netdev_lower_dev_get_private, ptr @__kstrtabns_netdev_lower_dev_get_private }, section "___ksymtab+netdev_lower_dev_get_private", align 4
@netdev_lower_state_changed.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_netdev_lower_state_changed = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_lower_state_changed = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_lower_state_changed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_lower_state_changed to i32), ptr @__kstrtab_netdev_lower_state_changed, ptr @__kstrtabns_netdev_lower_state_changed }, section "___ksymtab+netdev_lower_state_changed", align 4
@__kstrtab_dev_set_promiscuity = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_promiscuity = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_promiscuity = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_promiscuity to i32), ptr @__kstrtab_dev_set_promiscuity, ptr @__kstrtabns_dev_set_promiscuity }, section "___ksymtab+dev_set_promiscuity", align 4
@__kstrtab_dev_set_allmulti = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_allmulti = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_allmulti = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_allmulti to i32), ptr @__kstrtab_dev_set_allmulti, ptr @__kstrtabns_dev_set_allmulti }, section "___ksymtab+dev_set_allmulti", align 4
@__kstrtab_dev_get_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_flags = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_flags to i32), ptr @__kstrtab_dev_get_flags, ptr @__kstrtabns_dev_get_flags }, section "___ksymtab+dev_get_flags", align 4
@__dev_change_flags.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_dev_change_flags = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_change_flags = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_change_flags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_change_flags to i32), ptr @__kstrtab_dev_change_flags, ptr @__kstrtabns_dev_change_flags }, section "___ksymtab+dev_change_flags", align 4
@__kstrtab___dev_set_mtu = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_set_mtu = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_set_mtu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_set_mtu to i32), ptr @__kstrtab___dev_set_mtu, ptr @__kstrtabns___dev_set_mtu }, section "___ksymtab+__dev_set_mtu", align 4
@dev_validate_mtu.__msg = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"mtu less than device minimum\00", [35 x i8] zeroinitializer }, align 32
@dev_validate_mtu.__msg.62 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"mtu greater than device maximum\00", [32 x i8] zeroinitializer }, align 32
@dev_set_mtu._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str.3, i32 8304, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"\013%s: %s\0A\00", [22 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"dev_set_mtu\00", [20 x i8] zeroinitializer }, align 32
@dev_set_mtu._entry_ptr = internal global ptr @dev_set_mtu._entry, section ".printk_index", align 4
@__kstrtab_dev_set_mtu = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_mtu = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_mtu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_mtu to i32), ptr @__kstrtab_dev_set_mtu, ptr @__kstrtabns_dev_set_mtu }, section "___ksymtab+dev_set_mtu", align 4
@.str.65 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"refused to change device tx_queue_len\0A\00", [57 x i8] zeroinitializer }, align 32
@__kstrtab_dev_set_group = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_group = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_group = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_group to i32), ptr @__kstrtab_dev_set_group, ptr @__kstrtabns_dev_set_group }, section "___ksymtab+dev_set_group", align 4
@__kstrtab_dev_pre_changeaddr_notify = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_pre_changeaddr_notify = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_pre_changeaddr_notify = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_pre_changeaddr_notify to i32), ptr @__kstrtab_dev_pre_changeaddr_notify, ptr @__kstrtabns_dev_pre_changeaddr_notify }, section "___ksymtab+dev_pre_changeaddr_notify", align 4
@__kstrtab_dev_set_mac_address = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_mac_address = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_mac_address = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_mac_address to i32), ptr @__kstrtab_dev_set_mac_address, ptr @__kstrtabns_dev_set_mac_address }, section "___ksymtab+dev_set_mac_address", align 4
@dev_addr_sem = internal global { %struct.rw_semaphore, [32 x i8] } { %struct.rw_semaphore { %struct.atomic_t zeroinitializer, %struct.atomic_t zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.179, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.list_head { ptr getelementptr (i8, ptr @dev_addr_sem, i64 56), ptr getelementptr (i8, ptr @dev_addr_sem, i64 56) }, ptr @dev_addr_sem, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.180, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [32 x i8] zeroinitializer }, align 32
@__kstrtab_dev_set_mac_address_user = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_set_mac_address_user = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_set_mac_address_user = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_set_mac_address_user to i32), ptr @__kstrtab_dev_set_mac_address_user, ptr @__kstrtabns_dev_set_mac_address_user }, section "___ksymtab+dev_set_mac_address_user", align 4
@__kstrtab_dev_get_mac_address = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_mac_address = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_mac_address = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_mac_address to i32), ptr @__kstrtab_dev_get_mac_address, ptr @__kstrtabns_dev_get_mac_address }, section "___ksymtab+dev_get_mac_address", align 4
@__kstrtab_dev_change_carrier = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_change_carrier = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_change_carrier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_change_carrier to i32), ptr @__kstrtab_dev_change_carrier, ptr @__kstrtabns_dev_change_carrier }, section "___ksymtab+dev_change_carrier", align 4
@__kstrtab_dev_get_phys_port_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_phys_port_id = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_phys_port_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_phys_port_id to i32), ptr @__kstrtab_dev_get_phys_port_id, ptr @__kstrtabns_dev_get_phys_port_id }, section "___ksymtab+dev_get_phys_port_id", align 4
@__kstrtab_dev_get_phys_port_name = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_phys_port_name = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_phys_port_name = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_phys_port_name to i32), ptr @__kstrtab_dev_get_phys_port_name, ptr @__kstrtabns_dev_get_phys_port_name }, section "___ksymtab+dev_get_phys_port_name", align 4
@__kstrtab_dev_get_port_parent_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_port_parent_id = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_port_parent_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_port_parent_id to i32), ptr @__kstrtab_dev_get_port_parent_id, ptr @__kstrtabns_dev_get_port_parent_id }, section "___ksymtab+dev_get_port_parent_id", align 4
@__kstrtab_netdev_port_same_parent_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_port_same_parent_id = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_port_same_parent_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_port_same_parent_id to i32), ptr @__kstrtab_netdev_port_same_parent_id, ptr @__kstrtabns_netdev_port_same_parent_id }, section "___ksymtab+netdev_port_same_parent_id", align 4
@__kstrtab_dev_change_proto_down = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_change_proto_down = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_change_proto_down = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_change_proto_down to i32), ptr @__kstrtab_dev_change_proto_down, ptr @__kstrtabns_dev_change_proto_down }, section "___ksymtab+dev_change_proto_down", align 4
@__kstrtab_dev_change_proto_down_reason = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_change_proto_down_reason = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_change_proto_down_reason = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_change_proto_down_reason to i32), ptr @__kstrtab_dev_change_proto_down_reason, ptr @__kstrtabns_dev_change_proto_down_reason }, section "___ksymtab+dev_change_proto_down_reason", align 4
@__kstrtab_dev_xdp_prog_count = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_xdp_prog_count = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_xdp_prog_count = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_xdp_prog_count to i32), ptr @__kstrtab_dev_xdp_prog_count, ptr @__kstrtabns_dev_xdp_prog_count }, section "___ksymtab_gpl+dev_xdp_prog_count", align 4
@bpf_xdp_link_lops = internal constant { %struct.bpf_link_ops, [40 x i8] } { %struct.bpf_link_ops { ptr @bpf_xdp_link_release, ptr @bpf_xdp_link_dealloc, ptr @bpf_xdp_link_detach, ptr @bpf_xdp_link_update, ptr @bpf_xdp_link_show_fdinfo, ptr @bpf_xdp_link_fill_link_info }, [40 x i8] zeroinitializer }, align 32
@dev_change_xdp_fd.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.66 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"netdev_unregistering_wq.lock\00", [35 x i8] zeroinitializer }, align 32
@netdev_unregistering_wq = dso_local global { %struct.wait_queue_head, [44 x i8] } { %struct.wait_queue_head { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.66, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @netdev_unregistering_wq, i64 44), ptr getelementptr (i8, ptr @netdev_unregistering_wq, i64 44) } }, [44 x i8] zeroinitializer }, align 32
@__netdev_update_features.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__netdev_update_features.__UNIQUE_ID_ddebug952 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.68, ptr @.str.3, ptr @.str.69, i8 9, i8 25, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.67 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dev\00", [28 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"__netdev_update_features\00", [39 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Features changed: %pNF -> %pNF\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"set_features() failed (%d); wanted %pNF, left %pNF\0A\00", [44 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_update_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_update_features = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_update_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_update_features to i32), ptr @__kstrtab_netdev_update_features, ptr @__kstrtabns_netdev_update_features }, section "___ksymtab+netdev_update_features", align 4
@__kstrtab_netdev_change_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_change_features = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_change_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_change_features to i32), ptr @__kstrtab_netdev_change_features, ptr @__kstrtabns_netdev_change_features }, section "___ksymtab+netdev_change_features", align 4
@__kstrtab_netif_stacked_transfer_operstate = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_stacked_transfer_operstate = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_stacked_transfer_operstate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_stacked_transfer_operstate to i32), ptr @__kstrtab_netif_stacked_transfer_operstate, ptr @__kstrtabns_netif_stacked_transfer_operstate }, section "___ksymtab+netif_stacked_transfer_operstate", align 4
@__kstrtab_netif_tx_stop_all_queues = external dso_local constant [0 x i8], align 1
@__kstrtabns_netif_tx_stop_all_queues = external dso_local constant [0 x i8], align 1
@__ksymtab_netif_tx_stop_all_queues = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netif_tx_stop_all_queues to i32), ptr @__kstrtab_netif_tx_stop_all_queues, ptr @__kstrtabns_netif_tx_stop_all_queues }, section "___ksymtab+netif_tx_stop_all_queues", align 4
@register_netdevice.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@register_netdevice.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.71 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&dev->addr_list_lock\00", [43 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"netdevice: %s%s: Buggy VLAN acceleration in driver!\0A\00", [43 x i8] zeroinitializer }, align 32
@__kstrtab_register_netdevice = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdevice = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdevice = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdevice to i32), ptr @__kstrtab_register_netdevice, ptr @__kstrtabns_register_netdevice }, section "___ksymtab+register_netdevice", align 4
@init_net = external dso_local global %struct.net, align 128
@__kstrtab_init_dummy_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_init_dummy_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_init_dummy_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @init_dummy_netdev to i32), ptr @__kstrtab_init_dummy_netdev, ptr @__kstrtabns_init_dummy_netdev }, section "___ksymtab_gpl+init_dummy_netdev", align 4
@__kstrtab_register_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_register_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_netdev to i32), ptr @__kstrtab_register_netdev, ptr @__kstrtabns_register_netdev }, section "___ksymtab+register_netdev", align 4
@__kstrtab_netdev_refcnt_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_refcnt_read = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_refcnt_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_refcnt_read to i32), ptr @__kstrtab_netdev_refcnt_read, ptr @__kstrtabns_netdev_refcnt_read }, section "___ksymtab+netdev_refcnt_read", align 4
@netdev_unregister_timeout_secs = dso_local local_unnamed_addr global i32 10, section ".data..read_mostly", align 4
@net_unlink_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @net_unlink_list, ptr @net_unlink_list }, [24 x i8] zeroinitializer }, align 32
@net_todo_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @net_todo_list, ptr @net_todo_list }, [24 x i8] zeroinitializer }, align 32
@netdev_run_todo._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.74, ptr @.str.3, i32 9943, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013network todo '%s' but state %d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"netdev_run_todo\00", [16 x i8] zeroinitializer }, align 32
@netdev_run_todo._entry_ptr = internal global ptr @netdev_run_todo._entry, section ".printk_index", align 4
@__kstrtab_netdev_stats_to_stats64 = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_stats_to_stats64 = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_stats_to_stats64 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_stats_to_stats64 to i32), ptr @__kstrtab_netdev_stats_to_stats64, ptr @__kstrtabns_netdev_stats_to_stats64 }, section "___ksymtab+netdev_stats_to_stats64", align 4
@__kstrtab_dev_get_stats = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_stats = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_stats = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_stats to i32), ptr @__kstrtab_dev_get_stats, ptr @__kstrtabns_dev_get_stats }, section "___ksymtab+dev_get_stats", align 4
@__kstrtab_dev_fetch_sw_netstats = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_fetch_sw_netstats = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_fetch_sw_netstats = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_fetch_sw_netstats to i32), ptr @__kstrtab_dev_fetch_sw_netstats, ptr @__kstrtabns_dev_fetch_sw_netstats }, section "___ksymtab_gpl+dev_fetch_sw_netstats", align 4
@__kstrtab_dev_get_tstats64 = external dso_local constant [0 x i8], align 1
@__kstrtabns_dev_get_tstats64 = external dso_local constant [0 x i8], align 1
@__ksymtab_dev_get_tstats64 = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @dev_get_tstats64 to i32), ptr @__kstrtab_dev_get_tstats64, ptr @__kstrtabns_dev_get_tstats64 }, section "___ksymtab_gpl+dev_get_tstats64", align 4
@noop_qdisc = external dso_local global %struct.Qdisc, align 128
@default_ethtool_ops = internal constant { %struct.ethtool_ops, [68 x i8] } zeroinitializer, align 32
@__kstrtab_netdev_set_default_ethtool_ops = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_set_default_ethtool_ops = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_set_default_ethtool_ops = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_set_default_ethtool_ops to i32), ptr @__kstrtab_netdev_set_default_ethtool_ops, ptr @__kstrtabns_netdev_set_default_ethtool_ops }, section "___ksymtab_gpl+netdev_set_default_ethtool_ops", align 4
@alloc_netdev_mqs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.76, ptr @.str.3, i32 10145, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013alloc_netdev: Unable to allocate device with zero queues\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"alloc_netdev_mqs\00", [47 x i8] zeroinitializer }, align 32
@alloc_netdev_mqs._entry_ptr = internal global ptr @alloc_netdev_mqs._entry, section ".printk_index", align 4
@alloc_netdev_mqs._entry.77 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.76, ptr @.str.3, i32 10150, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\013alloc_netdev: Unable to allocate device with zero RX queues\0A\00", [33 x i8] zeroinitializer }, align 32
@alloc_netdev_mqs._entry_ptr.79 = internal global ptr @alloc_netdev_mqs._entry.77, section ".printk_index", align 4
@__kstrtab_alloc_netdev_mqs = external dso_local constant [0 x i8], align 1
@__kstrtabns_alloc_netdev_mqs = external dso_local constant [0 x i8], align 1
@__ksymtab_alloc_netdev_mqs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @alloc_netdev_mqs to i32), ptr @__kstrtab_alloc_netdev_mqs, ptr @__kstrtabns_alloc_netdev_mqs }, section "___ksymtab+alloc_netdev_mqs", align 4
@free_netdev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_free_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_free_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_free_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @free_netdev to i32), ptr @__kstrtab_free_netdev, ptr @__kstrtabns_free_netdev }, section "___ksymtab+free_netdev", align 4
@__kstrtab_synchronize_net = external dso_local constant [0 x i8], align 1
@__kstrtabns_synchronize_net = external dso_local constant [0 x i8], align 1
@__ksymtab_synchronize_net = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @synchronize_net to i32), ptr @__kstrtab_synchronize_net, ptr @__kstrtabns_synchronize_net }, section "___ksymtab+synchronize_net", align 4
@unregister_netdevice_queue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_unregister_netdevice_queue = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_queue = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_queue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_queue to i32), ptr @__kstrtab_unregister_netdevice_queue, ptr @__kstrtabns_unregister_netdevice_queue }, section "___ksymtab+unregister_netdevice_queue", align 4
@unregister_netdevice_many.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@unregister_netdevice_many.__UNIQUE_ID_ddebug965 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.80, ptr @.str.3, ptr @.str.81, i8 10, i8 34, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.80 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"unregister_netdevice_many\00", [38 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"unregister_netdevice: device %s/%p never was registered\0A\00", [39 x i8] zeroinitializer }, align 32
@__kstrtab_unregister_netdevice_many = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdevice_many = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdevice_many = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdevice_many to i32), ptr @__kstrtab_unregister_netdevice_many, ptr @__kstrtabns_unregister_netdevice_many }, section "___ksymtab+unregister_netdevice_many", align 4
@__kstrtab_unregister_netdev = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_netdev = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_netdev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_netdev to i32), ptr @__kstrtab_unregister_netdev, ptr @__kstrtabns_unregister_netdev }, section "___ksymtab+unregister_netdev", align 4
@__dev_change_net_namespace.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab___dev_change_net_namespace = external dso_local constant [0 x i8], align 1
@__kstrtabns___dev_change_net_namespace = external dso_local constant [0 x i8], align 1
@__ksymtab___dev_change_net_namespace = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__dev_change_net_namespace to i32), ptr @__kstrtab___dev_change_net_namespace, ptr @__kstrtabns___dev_change_net_namespace }, section "___ksymtab_gpl+__dev_change_net_namespace", align 4
@__kstrtab_netdev_increment_features = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_increment_features = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_increment_features = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_increment_features to i32), ptr @__kstrtab_netdev_increment_features, ptr @__kstrtabns_netdev_increment_features }, section "___ksymtab+netdev_increment_features", align 4
@.str.82 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@__kstrtab_netdev_printk = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_printk = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_printk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_printk to i32), ptr @__kstrtab_netdev_printk, ptr @__kstrtabns_netdev_printk }, section "___ksymtab+netdev_printk", align 4
@.str.83 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\010\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_emerg = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_emerg = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_emerg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_emerg to i32), ptr @__kstrtab_netdev_emerg, ptr @__kstrtabns_netdev_emerg }, section "___ksymtab+netdev_emerg", align 4
@.str.84 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\011\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_alert = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_alert = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_alert = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_alert to i32), ptr @__kstrtab_netdev_alert, ptr @__kstrtabns_netdev_alert }, section "___ksymtab+netdev_alert", align 4
@.str.85 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\012\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_crit = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_crit = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_crit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_crit to i32), ptr @__kstrtab_netdev_crit, ptr @__kstrtabns_netdev_crit }, section "___ksymtab+netdev_crit", align 4
@__kstrtab_netdev_err = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_err = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_err = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_err to i32), ptr @__kstrtab_netdev_err, ptr @__kstrtabns_netdev_err }, section "___ksymtab+netdev_err", align 4
@.str.86 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_warn = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_warn = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_warn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_warn to i32), ptr @__kstrtab_netdev_warn, ptr @__kstrtabns_netdev_warn }, section "___ksymtab+netdev_warn", align 4
@.str.87 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\015\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_notice = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_notice = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_notice = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_notice to i32), ptr @__kstrtab_netdev_notice, ptr @__kstrtabns_netdev_notice }, section "___ksymtab+netdev_notice", align 4
@.str.88 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_netdev_info = external dso_local constant [0 x i8], align 1
@__kstrtabns_netdev_info = external dso_local constant [0 x i8], align 1
@__ksymtab_netdev_info = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @netdev_info to i32), ptr @__kstrtab_netdev_info, ptr @__kstrtabns_netdev_info }, section "___ksymtab+netdev_info", align 4
@__initcall__kmod_dev__967_11039_net_dev_init4 = internal global ptr @net_dev_init, section ".initcall4.init", align 4
@ptype_base = dso_local global [16 x %struct.list_head] zeroinitializer, section ".data..read_mostly", align 4
@__pcpu_scope_softnet_data = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_softnet_data = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_flush_works = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@flush_works = weak dso_local global %struct.work_struct zeroinitializer, section ".data..percpu", align 4
@.str.89 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ptype_lock\00", [21 x i8] zeroinitializer }, align 32
@dev_fwd_path.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@netdev_name_node_lookup_rcu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.90 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.92 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"devnet_rename_sem.wait_lock\00", [36 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"devnet_rename_sem\00", [46 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.95 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"ifalias_mutex.wait_lock\00", [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"ifalias_mutex\00", [18 x i8] zeroinitializer }, align 32
@__dev_open.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__dev_close_many.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.97 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"(unnamed net_device)\00", [43 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c" (uninitialized)\00", [47 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c" (unregistering)\00", [47 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c" (unregistered)\00", [16 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c" (released)\00", [20 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c" (dummy)\00", [23 x i8] zeroinitializer }, align 32
@netdev_reg_state.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.103 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"include/linux/netdevice.h\00", [38 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: unknown reg_state %d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c" (unknown)\00", [21 x i8] zeroinitializer }, align 32
@call_netdevice_notifiers_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@ingress_needed_key = internal global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } zeroinitializer, align 32
@egress_needed_key = internal global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } zeroinitializer, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.108 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"netstamp_work\00", [18 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"xps_map_mutex.wait_lock\00", [40 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"xps_map_mutex\00", [18 x i8] zeroinitializer }, align 32
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.111 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@xps_copy_dev_maps.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@remove_xps_queue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@clean_xps_maps.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.112 = internal constant { [104 x i8], [56 x i8] } { [104 x i8] c"Number of in use tx queues changed invalidating tc mappings. Priority traffic classification disabled!\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [103 x i8], [57 x i8] } { [103 x i8] c"Number of in use tx queues changed. Priority %i to tc mapping %i is no longer valid. Setting map to 0\0A\00", [57 x i8] zeroinitializer }, align 32
@qdisc_reset_all_tx_gt.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.114 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"include/net/sch_generic.h\00", [38 x i8] zeroinitializer }, align 32
@elfcorehdr_addr = external dso_local local_unnamed_addr global i64, align 8
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@skb_warn_bad_offload.null_features = internal constant { i64, [24 x i8] } zeroinitializer, align 32
@.str.115 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: caps=(%pNF, %pNF)\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/if_vlan.h\00", [40 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"hw csum failure\0A\00", [47 x i8] zeroinitializer }, align 32
@movable_zone = external dso_local local_unnamed_addr global i32, align 4
@__tracepoint_net_dev_start_xmit = external dso_local global %struct.tracepoint, align 4
@.str.118 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/net.h\00", [37 x i8] zeroinitializer }, align 32
@trace_net_dev_start_xmit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_net_dev_xmit = external dso_local global %struct.tracepoint, align 4
@trace_net_dev_xmit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@sk_validate_xmit_skb._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.119, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.sk_validate_xmit_skb = private unnamed_addr constant [21 x i8] c"sk_validate_xmit_skb\00", align 1
@sk_validate_xmit_skb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.120, ptr @__func__.sk_validate_xmit_skb, ptr @.str.121, i32 2780, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\014unencrypted skb with no associated socket - dropping\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"include/net/sock.h\00", [45 x i8] zeroinitializer }, align 32
@sk_validate_xmit_skb._entry_ptr = internal global ptr @sk_validate_xmit_skb._entry, section ".printk_index", align 4
@.str.122 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/skbuff.h\00", [41 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"include/net/dst.h\00", [46 x i8] zeroinitializer }, align 32
@get_xps_queue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@get_xps_queue.__warned.124 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__get_xps_queue_idx.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@skb_tx_hash._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.125, ptr @.str.126, ptr @.str.3, i32 3093, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014%s: invalid qcount, qoffset %u for tc %u\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"skb_tx_hash\00", [20 x i8] zeroinitializer }, align 32
@skb_tx_hash._entry_ptr = internal global ptr @skb_tx_hash._entry, section ".printk_index", align 4
@sk_tx_queue_set.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@netdev_cap_txqueue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.127, ptr @.str.128, ptr @.str.103, i32 3374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\014%s selects TX queue %d, but real number of TX queues is %d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"netdev_cap_txqueue\00", [45 x i8] zeroinitializer }, align 32
@netdev_cap_txqueue._entry_ptr = internal global ptr @netdev_cap_txqueue._entry, section ".printk_index", align 4
@__dev_queue_xmit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__dev_queue_xmit._entry = internal constant %struct.pi_entry { ptr @.str.129, ptr @.str.130, ptr @.str.3, i32 4125, ptr null, ptr null }, align 1
@.str.129 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\012Virtual device %s asks to queue packet!\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__dev_queue_xmit\00", [47 x i8] zeroinitializer }, align 32
@__dev_queue_xmit._entry_ptr = internal global ptr @__dev_queue_xmit._entry, section ".printk_index", align 4
@__dev_queue_xmit._entry.131 = internal constant %struct.pi_entry { ptr @.str.132, ptr @.str.130, ptr @.str.3, i32 4132, ptr null, ptr null }, align 1
@.str.132 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\012Dead loop on virtual device %s, fix it urgently!\0A\00", [44 x i8] zeroinitializer }, align 32
@__dev_queue_xmit._entry_ptr.133 = internal global ptr @__dev_queue_xmit._entry.131, section ".printk_index", align 4
@rcu_bh_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock_bh.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.134 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"rcu_read_lock_bh() used illegally while idle\00", [51 x i8] zeroinitializer }, align 32
@skb_update_prio.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@nf_hooks_needed = external dso_local global [13 x [7 x %struct.static_key]], align 4
@nf_hook_egress.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.135 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"include/linux/netfilter_netdev.h\00", [63 x i8] zeroinitializer }, align 32
@sch_handle_egress.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__seqprop_assert.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@.str.136 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/seqlock.h\00", [40 x i8] zeroinitializer }, align 32
@__tracepoint_net_dev_queue = external dso_local global %struct.tracepoint, align 4
@trace_net_dev_queue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@qdisc_calculate_pkt_len.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_qdisc_enqueue = external dso_local global %struct.tracepoint, align 4
@.str.137 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/trace/events/qdisc.h\00", [35 x i8] zeroinitializer }, align 32
@trace_qdisc_enqueue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_read_unlock_bh.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.138 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"rcu_read_unlock_bh() used illegally while idle\00", [49 x i8] zeroinitializer }, align 32
@net_rand_noise = external dso_local global i32, section ".data..percpu", align 4
@netif_get_rxqueue.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.139 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"%s received packet on queue %u, but number of RX queues is %u\0A\00", [33 x i8] zeroinitializer }, align 32
@bpf_master_redirect_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.140 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/filter.h\00", [41 x i8] zeroinitializer }, align 32
@bpf_stats_enabled_key = external dso_local global %struct.static_key_false, align 4
@__tracepoint_xdp_exception = external dso_local global %struct.tracepoint, align 4
@.str.141 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/xdp.h\00", [37 x i8] zeroinitializer }, align 32
@trace_xdp_exception.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_rx = external dso_local global %struct.tracepoint, align 4
@trace_netif_rx.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_rx_entry = external dso_local global %struct.tracepoint, align 4
@trace_netif_rx_entry.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_rx_exit = external dso_local global %struct.tracepoint, align 4
@trace_netif_rx_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_rx_ni_entry = external dso_local global %struct.tracepoint, align 4
@trace_netif_rx_ni_entry.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_rx_ni_exit = external dso_local global %struct.tracepoint, align 4
@trace_netif_rx_ni_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__netif_receive_skb_core.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__netif_receive_skb_core.__warned.142 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__netif_receive_skb_core.__warned.143 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__netif_receive_skb_core.__warned.144 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_receive_skb = external dso_local global %struct.tracepoint, align 4
@trace_netif_receive_skb.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@generic_xdp_needed_key = internal global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } zeroinitializer, align 32
@sch_handle_ingress.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@nf_hook_ingress.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@deliver_ptype_list_skb.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@netstamp_needed_key = internal global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } zeroinitializer, align 32
@get_rps_cpu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@get_rps_cpu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@get_rps_cpu.__warned.147 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@get_rps_cpu.__warned.148 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@set_rps_cpu.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@skb_flow_limit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@memalloc_socks_key = external dso_local global %struct.static_key_false, align 4
@__tracepoint_netif_receive_skb_entry = external dso_local global %struct.tracepoint, align 4
@trace_netif_receive_skb_entry.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_receive_skb_exit = external dso_local global %struct.tracepoint, align 4
@trace_netif_receive_skb_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_receive_skb_list_entry = external dso_local global %struct.tracepoint, align 4
@trace_netif_receive_skb_list_entry.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_netif_receive_skb_list_exit = external dso_local global %struct.tracepoint, align 4
@trace_netif_receive_skb_list_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@napi_by_id.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@napi_hash = internal global [256 x %struct.hlist_head] zeroinitializer, section ".data..read_mostly", align 4
@__tracepoint_napi_poll = external dso_local global %struct.tracepoint, align 4
@.str.149 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/trace/events/napi.h\00", [36 x i8] zeroinitializer }, align 32
@trace_napi_poll.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.150 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"napi/%s-%d\00", [21 x i8] zeroinitializer }, align 32
@napi_kthread_create._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.152, ptr @.str.3, i32 1367, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013kthread_run failed with err %d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"napi_kthread_create\00", [44 x i8] zeroinitializer }, align 32
@napi_kthread_create._entry_ptr = internal global ptr @napi_kthread_create._entry, section ".printk_index", align 4
@__napi_poll.__print_once = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.156 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"NAPI poll function %pS returned %d, exceeding its budget of %d.\0A\00", [63 x i8] zeroinitializer }, align 32
@__napi_poll.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__napi_poll._entry = internal constant %struct.pi_entry { ptr @.str.157, ptr @.str.158, ptr @.str.3, i32 6413, ptr null, ptr null }, align 1
@.str.157 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\014%s: Budget exhausted after napi rescheduled\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"__napi_poll\00", [20 x i8] zeroinitializer }, align 32
@__napi_poll._entry_ptr = internal global ptr @__napi_poll._entry, section ".printk_index", align 4
@.str.159 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"backlog\00", [24 x i8] zeroinitializer }, align 32
@napi_hash_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.160, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@napi_gen_id = internal global { i32, [28 x i8] } { i32 4, [28 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"napi_hash_lock\00", [17 x i8] zeroinitializer }, align 32
@netdev_next_upper_dev_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__netdev_upper_dev_link.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__netdev_has_upper_dev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__netdev_master_upper_dev_get.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__netdev_adjacent_dev_insert.__UNIQUE_ID_ddebug930 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.161, ptr @.str.3, ptr @.str.162, i8 7, i8 32, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.161 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"__netdev_adjacent_dev_insert\00", [35 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Insert adjacency: dev %s adj_dev %s adj->ref_nr %d\0A\00", [44 x i8] zeroinitializer }, align 32
@__netdev_adjacent_dev_insert.__UNIQUE_ID_ddebug931 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.161, ptr @.str.3, ptr @.str.163, i8 7, i8 36, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.163 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"Insert adjacency: dev %s adj_dev %s adj->ref_nr %d; dev_hold on %s\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"master\00", [25 x i8] zeroinitializer }, align 32
@__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug932 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.165, ptr @.str.3, ptr @.str.166, i8 7, i8 46, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.165 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"__netdev_adjacent_dev_remove\00", [35 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Remove adjacency: dev %s adj_dev %s ref_nr %d\0A\00", [49 x i8] zeroinitializer }, align 32
@__netdev_adjacent_dev_remove._entry = internal constant %struct.pi_entry { ptr @.str.167, ptr @.str.165, ptr @.str.3, i32 7359, ptr null, ptr null }, align 1
@.str.167 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\013Adjacency does not exist for device %s from %s\0A\00", [46 x i8] zeroinitializer }, align 32
@__netdev_adjacent_dev_remove._entry_ptr = internal global ptr @__netdev_adjacent_dev_remove._entry, section ".printk_index", align 4
@__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug933 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.165, ptr @.str.3, ptr @.str.168, i8 7, i8 49, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.168 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"adjacency: %s to %s ref_nr - %d = %d\0A\00", [58 x i8] zeroinitializer }, align 32
@__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug934 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.165, ptr @.str.3, ptr @.str.169, i8 7, i8 53, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.169 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"adjacency: dev_put for %s, because link removed from %s to %s\0A\00", [33 x i8] zeroinitializer }, align 32
@__netdev_upper_dev_unlink.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.170 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"upper_%s\00", [23 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"lower_%s\00", [23 x i8] zeroinitializer }, align 32
@__dev_set_promiscuity.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.172 = internal constant { [98 x i8], [62 x i8] } { [98 x i8] c"promiscuity touches roof, set promiscuity failed. promiscuity feature of device might be broken.\0A\00", [62 x i8] zeroinitializer }, align 32
@__dev_set_promiscuity._entry = internal constant %struct.pi_entry { ptr @.str.173, ptr @.str.174, ptr @.str.3, i32 7933, ptr null, ptr null }, align 1
@.str.173 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016device %s %s promiscuous mode\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"__dev_set_promiscuity\00", [42 x i8] zeroinitializer }, align 32
@__dev_set_promiscuity._entry_ptr = internal global ptr @__dev_set_promiscuity._entry, section ".printk_index", align 4
@.str.175 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"entered\00", [24 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"left\00", [27 x i8] zeroinitializer }, align 32
@audit_enabled = external dso_local local_unnamed_addr global i32, align 4
@.str.177 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"dev=%s prom=%d old_prom=%d auid=%u uid=%u gid=%u ses=%u\00", [40 x i8] zeroinitializer }, align 32
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@__dev_set_allmulti.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.178 = internal constant { [89 x i8], [39 x i8] } { [89 x i8] c"allmulti touches roof, set allmulti failed. allmulti feature of device might be broken.\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"dev_addr_sem.wait_lock\00", [41 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"dev_addr_sem\00", [19 x i8] zeroinitializer }, align 32
@dev_xdp_detach_link.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@generic_xdp_install.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.181 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"netdevice: %s%s: failed to disable GRO_HW!\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ifindex:\09%u\0A\00", [19 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@dev_xdp_attach.__msg = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Invalid XDP flags for BPF link attachment\00", [54 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.183 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Only one XDP mode flag can be set\00", [62 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.184 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"More than one program loaded, unset mode is ambiguous\00", [42 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.185 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"XDP_FLAGS_REPLACE is not specified\00", [61 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.186 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Can't replace active BPF XDP link\00", [62 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.187 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"Cannot attach when an upper device already has a program\00", [39 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.188 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Can't replace active XDP program with BPF link\00", [49 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.189 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Active program does not match expected\00", [57 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.190 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"XDP program already attached\00", [35 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.191 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"Native and generic XDP can't be active at the same time\00", [40 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.192 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"Using device-bound program without HW_MODE flag is not supported\00", [63 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.193 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"BPF_XDP_DEVMAP programs can not be attached to a device\00", [40 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.194 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"BPF_XDP_CPUMAP programs can not be attached to a device\00", [40 x i8] zeroinitializer }, align 32
@dev_xdp_attach.__msg.195 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Underlying driver does not support XDP in native mode\00", [42 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"mixed HW and IP checksum settings.\0A\00", [60 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug941 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.198, i8 8, i8 -3, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.197 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"netdev_fix_features\00", [44 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Dropping TSO features since no SG feature.\0A\00", [52 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug942 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.199, i8 8, i8 -2, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.199 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Dropping TSO features since no CSUM feature.\0A\00", [50 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug943 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.200, i8 9, i8 0, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.200 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Dropping TSO6 features since no CSUM feature.\0A\00", [49 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug944 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.201, i8 9, i8 4, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.201 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Dropping NETIF_F_GSO since no SG feature.\0A\00", [53 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug945 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.202, i8 9, i8 6, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.202 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"Dropping partially supported GSO features since no GSO partial.\0A\00", [63 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug946 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.203, i8 9, i8 8, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.203 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"Dropping NETIF_F_GRO_HW since no RXCSUM feature.\0A\00", [46 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug947 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.204, i8 9, i8 10, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.204 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Dropping LRO feature since RX-FCS is requested.\0A\00", [47 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug948 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.205, i8 9, i8 12, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.205 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Dropping HW-GRO feature since RX-FCS is requested.\0A\00", [44 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug949 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.206, i8 9, i8 13, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.206 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Dropping LRO feature since HW-GRO is requested.\0A\00", [47 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug950 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.207, i8 9, i8 16, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.207 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"Dropping TLS TX HW offload feature since no CSUM feature.\0A\00", [37 x i8] zeroinitializer }, align 32
@netdev_fix_features.__UNIQUE_ID_ddebug951 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.197, ptr @.str.3, ptr @.str.208, i8 9, i8 17, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.208 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"Dropping TLS RX HW offload feature since no RXCSUM feature.\0A\00", [35 x i8] zeroinitializer }, align 32
@netdev_sync_upper_features.__UNIQUE_ID_ddebug939 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.209, ptr @.str.3, ptr @.str.210, i8 8, i8 -14, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.209 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"netdev_sync_upper_features\00", [37 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Dropping feature %pNF, upper dev %s has it off.\0A\00", [47 x i8] zeroinitializer }, align 32
@netdev_sync_lower_features.__UNIQUE_ID_ddebug940 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.67, ptr @.str.211, ptr @.str.3, ptr @.str.212, i8 8, i8 -9, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.211 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"netdev_sync_lower_features\00", [37 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Disabling feature %pNF on lower dev %s.\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"netdevice: %s%s: failed to disable %pNF on %s!\0A\00", [48 x i8] zeroinitializer }, align 32
@udp_tunnel_get_rx_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.214 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/net/udp_tunnel.h\00", [39 x i8] zeroinitializer }, align 32
@udp_tunnel_drop_rx_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@vlan_get_rx_ctag_filter_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@vlan_drop_rx_ctag_filter_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@vlan_get_rx_stag_filter_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@vlan_drop_rx_stag_filter_info.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@netdev_lock_name = internal constant { [57 x ptr], [60 x i8] } { [57 x ptr] [ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271], [60 x i8] zeroinitializer }, align 32
@netdev_addr_lock_key = internal global { [57 x %struct.lock_class_key], [120 x i8] } zeroinitializer, align 32
@netdev_lock_type = internal constant { [57 x i16], [46 x i8] } { [57 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 15, i16 19, i16 23, i16 24, i16 27, i16 32, i16 256, i16 257, i16 258, i16 259, i16 260, i16 264, i16 270, i16 271, i16 272, i16 512, i16 513, i16 516, i16 517, i16 518, i16 768, i16 769, i16 770, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 777, i16 778, i16 779, i16 780, i16 781, i16 782, i16 783, i16 784, i16 785, i16 786, i16 787, i16 801, i16 802, i16 803, i16 820, i16 821, i16 804, i16 -1, i16 -2], [46 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_NETROM\00", [19 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_ETHER\00", [20 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_EETHER\00", [19 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_AX25\00", [21 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_PRONET\00", [19 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_CHAOS\00", [20 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"_xmit_IEEE802\00", [18 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_ARCNET\00", [19 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"_xmit_APPLETLK\00", [17 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_DLCI\00", [21 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"_xmit_ATM\00", [22 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"_xmit_METRICOM\00", [17 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"_xmit_IEEE1394\00", [17 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_EUI64\00", [20 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"_xmit_INFINIBAND\00", [47 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_SLIP\00", [21 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_CSLIP\00", [20 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_SLIP6\00", [20 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_CSLIP6\00", [19 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_RSRVD\00", [20 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_ADAPT\00", [20 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_ROSE\00", [21 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"_xmit_X25\00", [22 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_HWX25\00", [20 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"_xmit_PPP\00", [22 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_CISCO\00", [20 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_LAPB\00", [21 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_DDCMP\00", [20 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"_xmit_RAWHDLC\00", [18 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_TUNNEL\00", [19 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"_xmit_TUNNEL6\00", [18 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_FRAD\00", [21 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_SKIP\00", [21 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"_xmit_LOOPBACK\00", [17 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"_xmit_LOCALTLK\00", [17 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_FDDI\00", [21 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"_xmit_BIF\00", [22 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"_xmit_SIT\00", [22 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_IPDDP\00", [20 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_IPGRE\00", [20 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_PIMREG\00", [19 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"_xmit_HIPPI\00", [20 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"_xmit_ASH\00", [22 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_ECONET\00", [19 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_IRDA\00", [21 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_FCPP\00", [21 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_FCAL\00", [21 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_FCPL\00", [21 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"_xmit_FCFABRIC\00", [17 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"_xmit_IEEE80211\00", [16 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"_xmit_IEEE80211_PRISM\00", [42 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"_xmit_IEEE80211_RADIOTAP\00", [39 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"_xmit_PHONET\00", [19 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"_xmit_PHONET_PIPE\00", [46 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"_xmit_IEEE802154\00", [47 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_VOID\00", [21 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"_xmit_NONE\00", [21 x i8] zeroinitializer }, align 32
@list_netdevice.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@netdev_wait_allrefs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.272, ptr @.str.273, ptr @.str.3, i32 9878, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\010unregister_netdevice: waiting for %s to become free. Usage count = %d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"netdev_wait_allrefs\00", [44 x i8] zeroinitializer }, align 32
@netdev_wait_allrefs._entry_ptr = internal global ptr @netdev_wait_allrefs._entry, section ".printk_index", align 4
@dev_ingress_queue.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.274 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"include/linux/rtnetlink.h\00", [38 x i8] zeroinitializer }, align 32
@netdev_init_one_queue.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.275 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&queue->_xmit_lock\00", [45 x i8] zeroinitializer }, align 32
@netdev_xmit_lock_key = internal global { [57 x %struct.lock_class_key], [120 x i8] } zeroinitializer, align 32
@ref_tracker_dir_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.276 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"&dir->lock\00", [21 x i8] zeroinitializer }, align 32
@netif_alloc_netdev_queues.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.277 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&dev->tx_global_lock\00", [43 x i8] zeroinitializer }, align 32
@unlist_netdevice.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@flush_all_backlogs.flush_cpus = internal global { %struct.cpumask, [28 x i8] } zeroinitializer, align 32
@flush_all_backlogs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@system_highpri_wq = external dso_local local_unnamed_addr global ptr, align 4
@dev_xdp_uninstall.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@netdev_has_any_lower_dev.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.278 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"%s %s %s%s: %pV\00", [16 x i8] zeroinitializer }, align 32
@__netdev_printk._entry = internal constant %struct.pi_entry { ptr @.str.279, ptr @.str.280, ptr @.str.3, i32 10791, ptr null, ptr null }, align 1
@.str.279 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"%s%s%s: %pV\00", [20 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"__netdev_printk\00", [16 x i8] zeroinitializer }, align 32
@__netdev_printk._entry_ptr = internal global ptr @__netdev_printk._entry, section ".printk_index", align 4
@__netdev_printk._entry.281 = internal constant %struct.pi_entry { ptr @.str.282, ptr @.str.280, ptr @.str.3, i32 10793, ptr null, ptr null }, align 1
@.str.282 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s(NULL net_device): %pV\00", [39 x i8] zeroinitializer }, align 32
@__netdev_printk._entry_ptr.283 = internal global ptr @__netdev_printk._entry.281, section ".printk_index", align 4
@netdev_net_ops = internal global { %struct.pernet_operations, [32 x i8] } { %struct.pernet_operations { %struct.list_head zeroinitializer, ptr @netdev_init, ptr null, ptr @netdev_exit, ptr null, ptr null, i32 0 }, [32 x i8] zeroinitializer }, align 32
@net_dev_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.284 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"(work_completion)(flush)\00", [39 x i8] zeroinitializer }, align 32
@loopback_net_ops = external dso_local global %struct.pernet_operations, align 4
@default_device_ops = internal global { %struct.pernet_operations, [32 x i8] } { %struct.pernet_operations { %struct.list_head zeroinitializer, ptr null, ptr null, ptr @default_device_exit, ptr @default_device_exit_batch, ptr null, i32 0 }, [32 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"net/dev:dead\00", [19 x i8] zeroinitializer }, align 32
@netdev_exit.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@skb_queue_head_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.286 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&list->lock\00", [20 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dev%d\00", [26 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"dev%%d\00", [25 x i8] zeroinitializer }, align 32
@default_device_exit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.289, ptr @.str.290, ptr @.str.3, i32 10879, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\010%s: failed to move %s to init_net: %d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"default_device_exit\00", [44 x i8] zeroinitializer }, align 32
@default_device_exit._entry_ptr = internal global ptr @default_device_exit._entry, section ".printk_index", align 4
@__tracepoint_consume_skb = external dso_local global %struct.tracepoint, align 4
@.str.291 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/skb.h\00", [37 x i8] zeroinitializer }, align 32
@trace_consume_skb.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_kfree_skb = external dso_local global %struct.tracepoint, align 4
@trace_kfree_skb.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@switch.table.netdev_reg_state = internal constant { [6 x ptr], [40 x i8] } { [6 x ptr] [ptr @.str.98, ptr @.str.82, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102], [40 x i8] zeroinitializer }, align 32
@switch.table.netdev_cmd_to_name = internal constant { [34 x ptr], [56 x i8] } { [34 x ptr] [ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.47, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46], [56 x i8] zeroinitializer }, align 32
@switch.table.register_netdevice = internal constant { [6 x ptr], [40 x i8] } { [6 x ptr] [ptr @.str.98, ptr @.str.82, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102], [40 x i8] zeroinitializer }, align 32
@switch.table.__netdev_printk = internal constant { [6 x ptr], [40 x i8] } { [6 x ptr] [ptr @.str.98, ptr @.str.82, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102], [40 x i8] zeroinitializer }, align 32
@switch.table.__netdev_printk.292 = internal constant { [6 x ptr], [40 x i8] } { [6 x ptr] [ptr @.str.98, ptr @.str.82, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102], [40 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 47, i64 58]
@__sancov_gen_cov_switch_values.293 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 47, i64 58]
@__sancov_gen_cov_switch_values.294 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 47, i64 58]
@__sancov_gen_cov_switch_values.295 = internal global [4 x i64] [i64 2, i64 2, i64 2, i64 3]
@__sancov_gen_cov_switch_values.296 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.297 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.298 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.299 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.300 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.301 = internal global [4 x i64] [i64 2, i64 16, i64 2048, i64 34525]
@__sancov_gen_cov_switch_values.302 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.303 = internal global [4 x i64] [i64 2, i64 16, i64 6, i64 16]
@__sancov_gen_cov_switch_values.304 = internal global [4 x i64] [i64 2, i64 16, i64 6, i64 16]
@__sancov_gen_cov_switch_values.305 = internal global [9 x i64] [i64 7, i64 32, i64 0, i64 1, i64 2, i64 4, i64 5, i64 7, i64 8]
@__sancov_gen_cov_switch_values.306 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.307 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.308 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.309 = internal global [4 x i64] [i64 2, i64 32, i64 33, i64 35]
@__sancov_gen_cov_switch_values.310 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.311 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 3]
@__sancov_gen_cov_switch_values.312 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.313 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.314 = internal global [10 x i64] [i64 8, i64 32, i64 0, i64 1, i64 2, i64 4, i64 5, i64 7, i64 8, i64 9]
@__sancov_gen_cov_switch_values.315 = internal global [7 x i64] [i64 5, i64 16, i64 2048, i64 2054, i64 33024, i64 34525, i64 34984]
@__sancov_gen_cov_switch_values.316 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.317 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.318 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@___asan_gen_.322 = private unnamed_addr constant [14 x i8] c"dev_base_lock\00", align 1
@___asan_gen_.324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 188, i32 1 }
@___asan_gen_.325 = private unnamed_addr constant [11 x i8] c"ptype_lock\00", align 1
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 574, i32 2 }
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 803, i32 2 }
@___asan_gen_.340 = private unnamed_addr constant [18 x i8] c"devnet_rename_sem\00", align 1
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 949, i32 2 }
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 976, i32 20 }
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 976, i32 42 }
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1173, i32 20 }
@___asan_gen_.357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1215, i32 20 }
@___asan_gen_.358 = private unnamed_addr constant [14 x i8] c"ifalias_mutex\00", align 1
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1248, i32 14 }
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1274, i32 10 }
@___asan_gen_.369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1276, i32 29 }
@___asan_gen_.372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1566, i32 3 }
@___asan_gen_.375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1596, i32 2 }
@___asan_gen_.378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1596, i32 8 }
@___asan_gen_.381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1596, i32 16 }
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1596, i32 26 }
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1596, i32 36 }
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1596, i32 48 }
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1597, i32 2 }
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1597, i32 15 }
@___asan_gen_.399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1597, i32 29 }
@___asan_gen_.402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1597, i32 43 }
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1597, i32 57 }
@___asan_gen_.408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1598, i32 2 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1598, i32 22 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1598, i32 32 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1598, i32 51 }
@___asan_gen_.420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1599, i32 2 }
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1599, i32 15 }
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1599, i32 26 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1599, i32 42 }
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1599, i32 50 }
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1600, i32 2 }
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1600, i32 17 }
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1600, i32 33 }
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1600, i32 51 }
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1601, i32 2 }
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1601, i32 20 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1601, i32 40 }
@___asan_gen_.456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1602, i32 2 }
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1602, i32 26 }
@___asan_gen_.462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1603, i32 2 }
@___asan_gen_.465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1603, i32 28 }
@___asan_gen_.468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1604, i32 2 }
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1604, i32 28 }
@___asan_gen_.474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1605, i32 2 }
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1608, i32 9 }
@___asan_gen_.478 = private unnamed_addr constant [13 x i8] c"netdev_chain\00", align 1
@___asan_gen_.480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 399, i32 8 }
@___asan_gen_.481 = private unnamed_addr constant [15 x i8] c"dev_boot_phase\00", align 1
@___asan_gen_.482 = private unnamed_addr constant [16 x i8] c"netstamp_wanted\00", align 1
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 2006, i32 17 }
@___asan_gen_.485 = private unnamed_addr constant [25 x i8] c"netstamp_needed_deferred\00", align 1
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 2005, i32 17 }
@___asan_gen_.488 = private unnamed_addr constant [14 x i8] c"netstamp_work\00", align 1
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 2225, i32 4 }
@___asan_gen_.500 = private unnamed_addr constant [14 x i8] c"xps_map_mutex\00", align 1
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 6249, i32 3 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8238, i32 3 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8243, i32 3 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8304, i32 3 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8336, i32 18 }
@___asan_gen_.527 = private unnamed_addr constant [13 x i8] c"dev_addr_sem\00", align 1
@___asan_gen_.530 = private unnamed_addr constant [18 x i8] c"bpf_xdp_link_lops\00", align 1
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9011, i32 34 }
@___asan_gen_.536 = private unnamed_addr constant [24 x i8] c"netdev_unregistering_wq\00", align 1
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9141, i32 1 }
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9317, i32 2 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9327, i32 4 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9583, i32 2 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9609, i32 3 }
@___asan_gen_.560 = private unnamed_addr constant [16 x i8] c"net_unlink_list\00", align 1
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4502, i32 8 }
@___asan_gen_.563 = private unnamed_addr constant [14 x i8] c"net_todo_list\00", align 1
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9140, i32 8 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9942, i32 4 }
@___asan_gen_.575 = private unnamed_addr constant [20 x i8] c"default_ethtool_ops\00", align 1
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10103, i32 33 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10145, i32 3 }
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10150, i32 3 }
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10378, i32 4 }
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10766, i32 22 }
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10831, i32 1 }
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10832, i32 1 }
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10833, i32 1 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10835, i32 1 }
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10836, i32 1 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10837, i32 1 }
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 157, i32 8 }
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.774, i32 695, i32 2 }
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.774, i32 723, i32 2 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 199, i32 8 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 191, i32 8 }
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4963, i32 10 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4975, i32 36 }
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4977, i32 36 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4978, i32 35 }
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4979, i32 31 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4980, i32 28 }
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4983, i32 2 }
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 4984, i32 9 }
@___asan_gen_.671 = private unnamed_addr constant [19 x i8] c"ingress_needed_key\00", align 1
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1972, i32 8 }
@___asan_gen_.674 = private unnamed_addr constant [18 x i8] c"egress_needed_key\00", align 1
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1988, i32 8 }
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 2018, i32 8 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 2312, i32 8 }
@___asan_gen_.687 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.687, i32 108, i32 2 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 2271, i32 20 }
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 2282, i32 21 }
@___asan_gen_.696 = private unnamed_addr constant [29 x i8] c"../include/net/sch_generic.h\00", align 1
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.696, i32 760, i32 11 }
@___asan_gen_.698 = private unnamed_addr constant [14 x i8] c"null_features\00", align 1
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 3113, i32 33 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 3127, i32 2 }
@___asan_gen_.705 = private unnamed_addr constant [27 x i8] c"../include/linux/if_vlan.h\00", align 1
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.705, i32 598, i32 8 }
@___asan_gen_.709 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 3308, i32 18 }
@___asan_gen_.711 = private unnamed_addr constant [30 x i8] c"../include/trace/events/net.h\00", align 1
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 14, i32 1 }
@___asan_gen_.713 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.726 = private unnamed_addr constant [22 x i8] c"../include/net/sock.h\00", align 1
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.726, i32 2780, i32 3 }
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1239, i32 1011, i32 2 }
@___asan_gen_.732 = private unnamed_addr constant [21 x i8] c"../include/net/dst.h\00", align 1
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.732, i32 316, i32 3 }
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 3092, i32 4 }
@___asan_gen_.750 = private unnamed_addr constant [29 x i8] c"../include/linux/netdevice.h\00", align 1
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.750, i32 3372, i32 3 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 4124, i32 4 }
@___asan_gen_.760 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 4131, i32 4 }
@___asan_gen_.763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.774, i32 749, i32 2 }
@___asan_gen_.765 = private unnamed_addr constant [36 x i8] c"../include/linux/netfilter_netdev.h\00", align 1
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.765, i32 97, i32 6 }
@___asan_gen_.768 = private unnamed_addr constant [27 x i8] c"../include/linux/seqlock.h\00", align 1
@___asan_gen_.769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.768, i32 271, i32 2 }
@___asan_gen_.771 = private unnamed_addr constant [32 x i8] c"../include/trace/events/qdisc.h\00", align 1
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.771, i32 49, i32 1 }
@___asan_gen_.774 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.775 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.774, i32 760, i32 2 }
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 4576, i32 4 }
@___asan_gen_.780 = private unnamed_addr constant [26 x i8] c"../include/linux/filter.h\00", align 1
@___asan_gen_.781 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.780, i32 613, i32 2 }
@___asan_gen_.783 = private unnamed_addr constant [30 x i8] c"../include/trace/events/xdp.h\00", align 1
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.783, i32 28, i32 1 }
@___asan_gen_.785 = private unnamed_addr constant [23 x i8] c"generic_xdp_needed_key\00", align 1
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 4754, i32 8 }
@___asan_gen_.788 = private unnamed_addr constant [20 x i8] c"netstamp_needed_key\00", align 1
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 2003, i32 8 }
@___asan_gen_.792 = private unnamed_addr constant [31 x i8] c"../include/trace/events/napi.h\00", align 1
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.792, i32 14, i32 1 }
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1363, i32 14 }
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1367, i32 3 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 6370, i32 3 }
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 6412, i32 3 }
@___asan_gen_.818 = private unnamed_addr constant [15 x i8] c"napi_hash_lock\00", align 1
@___asan_gen_.821 = private unnamed_addr constant [12 x i8] c"napi_gen_id\00", align 1
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 196, i32 21 }
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 194, i32 8 }
@___asan_gen_.832 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7295, i32 3 }
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7312, i32 2 }
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7324, i32 28 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7352, i32 2 }
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7358, i32 3 }
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7365, i32 3 }
@___asan_gen_.853 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7379, i32 2 }
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7270, i32 3 }
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7270, i32 16 }
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7926, i32 21 }
@___asan_gen_.874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7931, i32 3 }
@___asan_gen_.877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7938, i32 7 }
@___asan_gen_.880 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 7996, i32 21 }
@___asan_gen_.886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8406, i32 8 }
@___asan_gen_.889 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 1587, i32 3 }
@___asan_gen_.892 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8945, i32 18 }
@___asan_gen_.895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8778, i32 3 }
@___asan_gen_.898 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8783, i32 3 }
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8788, i32 3 }
@___asan_gen_.904 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8794, i32 3 }
@___asan_gen_.907 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8801, i32 3 }
@___asan_gen_.910 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8808, i32 4 }
@___asan_gen_.913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8816, i32 3 }
@___asan_gen_.916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8820, i32 3 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8834, i32 4 }
@___asan_gen_.922 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8838, i32 4 }
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8842, i32 4 }
@___asan_gen_.928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8846, i32 4 }
@___asan_gen_.931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8850, i32 4 }
@___asan_gen_.932 = private unnamed_addr constant [6 x i8] c"__msg\00", align 1
@___asan_gen_.934 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 8859, i32 4 }
@___asan_gen_.937 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9199, i32 20 }
@___asan_gen_.943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9205, i32 3 }
@___asan_gen_.946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9211, i32 3 }
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9218, i32 3 }
@___asan_gen_.952 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9232, i32 3 }
@___asan_gen_.955 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9239, i32 3 }
@___asan_gen_.958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9251, i32 4 }
@___asan_gen_.961 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9259, i32 4 }
@___asan_gen_.964 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9264, i32 4 }
@___asan_gen_.967 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9270, i32 3 }
@___asan_gen_.970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9280, i32 4 }
@___asan_gen_.973 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9286, i32 3 }
@___asan_gen_.979 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9160, i32 4 }
@___asan_gen_.985 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9179, i32 4 }
@___asan_gen_.988 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9185, i32 5 }
@___asan_gen_.990 = private unnamed_addr constant [28 x i8] c"../include/net/udp_tunnel.h\00", align 1
@___asan_gen_.991 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.990, i32 131, i32 2 }
@___asan_gen_.992 = private unnamed_addr constant [17 x i8] c"netdev_lock_name\00", align 1
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 431, i32 26 }
@___asan_gen_.995 = private unnamed_addr constant [21 x i8] c"netdev_addr_lock_key\00", align 1
@___asan_gen_.997 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 449, i32 30 }
@___asan_gen_.998 = private unnamed_addr constant [17 x i8] c"netdev_lock_type\00", align 1
@___asan_gen_.1000 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 414, i32 29 }
@___asan_gen_.1003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 432, i32 2 }
@___asan_gen_.1006 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 432, i32 18 }
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 432, i32 33 }
@___asan_gen_.1012 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 432, i32 49 }
@___asan_gen_.1015 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 433, i32 2 }
@___asan_gen_.1018 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 433, i32 18 }
@___asan_gen_.1021 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 433, i32 33 }
@___asan_gen_.1024 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 433, i32 50 }
@___asan_gen_.1027 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 434, i32 2 }
@___asan_gen_.1030 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 434, i32 20 }
@___asan_gen_.1033 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 434, i32 34 }
@___asan_gen_.1036 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 434, i32 47 }
@___asan_gen_.1039 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 435, i32 2 }
@___asan_gen_.1042 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 435, i32 20 }
@___asan_gen_.1045 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 435, i32 35 }
@___asan_gen_.1048 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 435, i32 55 }
@___asan_gen_.1051 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 436, i32 2 }
@___asan_gen_.1054 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 436, i32 17 }
@___asan_gen_.1057 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 436, i32 32 }
@___asan_gen_.1060 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 436, i32 48 }
@___asan_gen_.1063 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 437, i32 2 }
@___asan_gen_.1066 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 437, i32 17 }
@___asan_gen_.1069 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 437, i32 31 }
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 437, i32 44 }
@___asan_gen_.1075 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 438, i32 2 }
@___asan_gen_.1078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 438, i32 15 }
@___asan_gen_.1081 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 438, i32 30 }
@___asan_gen_.1084 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 438, i32 44 }
@___asan_gen_.1087 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 439, i32 2 }
@___asan_gen_.1090 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 439, i32 19 }
@___asan_gen_.1093 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 439, i32 35 }
@___asan_gen_.1096 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 439, i32 52 }
@___asan_gen_.1099 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 440, i32 2 }
@___asan_gen_.1102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 440, i32 16 }
@___asan_gen_.1105 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 440, i32 34 }
@___asan_gen_.1108 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 440, i32 52 }
@___asan_gen_.1111 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 441, i32 2 }
@___asan_gen_.1114 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 441, i32 15 }
@___asan_gen_.1117 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 441, i32 28 }
@___asan_gen_.1120 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 441, i32 43 }
@___asan_gen_.1123 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 442, i32 2 }
@___asan_gen_.1126 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 442, i32 18 }
@___asan_gen_.1129 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 442, i32 33 }
@___asan_gen_.1132 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 442, i32 46 }
@___asan_gen_.1135 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 443, i32 2 }
@___asan_gen_.1138 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 443, i32 16 }
@___asan_gen_.1141 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 443, i32 30 }
@___asan_gen_.1144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 443, i32 44 }
@___asan_gen_.1147 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 444, i32 2 }
@___asan_gen_.1150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 444, i32 20 }
@___asan_gen_.1153 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 444, i32 39 }
@___asan_gen_.1156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 445, i32 2 }
@___asan_gen_.1159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 445, i32 30 }
@___asan_gen_.1162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 445, i32 46 }
@___asan_gen_.1165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 446, i32 2 }
@___asan_gen_.1168 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 446, i32 22 }
@___asan_gen_.1171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 446, i32 36 }
@___asan_gen_.1180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9877, i32 4 }
@___asan_gen_.1182 = private unnamed_addr constant [29 x i8] c"../include/linux/rtnetlink.h\00", align 1
@___asan_gen_.1183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1182, i32 85, i32 9 }
@___asan_gen_.1189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9498, i32 2 }
@___asan_gen_.1190 = private unnamed_addr constant [21 x i8] c"netdev_xmit_lock_key\00", align 1
@___asan_gen_.1192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 448, i32 30 }
@___asan_gen_.1197 = private unnamed_addr constant [31 x i8] c"../include/linux/ref_tracker.h\00", align 1
@___asan_gen_.1198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1197, i32 27, i32 2 }
@___asan_gen_.1204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 9529, i32 2 }
@___asan_gen_.1205 = private unnamed_addr constant [11 x i8] c"flush_cpus\00", align 1
@___asan_gen_.1207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 5704, i32 19 }
@___asan_gen_.1210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10784, i32 5 }
@___asan_gen_.1216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10790, i32 3 }
@___asan_gen_.1219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10793, i32 3 }
@___asan_gen_.1220 = private unnamed_addr constant [15 x i8] c"netdev_net_ops\00", align 1
@___asan_gen_.1222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10847, i32 48 }
@___asan_gen_.1228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10992, i32 3 }
@___asan_gen_.1229 = private unnamed_addr constant [19 x i8] c"default_device_ops\00", align 1
@___asan_gen_.1231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10949, i32 48 }
@___asan_gen_.1234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 11031, i32 53 }
@___asan_gen_.1235 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1239 = private unnamed_addr constant [26 x i8] c"../include/linux/skbuff.h\00", align 1
@___asan_gen_.1240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1239, i32 1984, i32 2 }
@___asan_gen_.1243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10873, i32 31 }
@___asan_gen_.1246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10875, i32 32 }
@___asan_gen_.1247 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1254 = private constant [18 x i8] c"../net/core/dev.c\00", align 1
@___asan_gen_.1255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1254, i32 10878, i32 4 }
@___asan_gen_.1256 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1257 = private unnamed_addr constant [30 x i8] c"../include/trace/events/skb.h\00", align 1
@___asan_gen_.1258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1257, i32 64, i32 1 }
@___asan_gen_.1259 = private unnamed_addr constant [30 x i8] c"switch.table.netdev_reg_state\00", align 1
@___asan_gen_.1260 = private unnamed_addr constant [32 x i8] c"switch.table.netdev_cmd_to_name\00", align 1
@___asan_gen_.1261 = private unnamed_addr constant [32 x i8] c"switch.table.register_netdevice\00", align 1
@___asan_gen_.1262 = private unnamed_addr constant [29 x i8] c"switch.table.__netdev_printk\00", align 1
@___asan_gen_.1263 = private unnamed_addr constant [33 x i8] c"switch.table.__netdev_printk.292\00", align 1
@llvm.compiler.used = appending global [533 x ptr] [ptr @__dev_queue_xmit._entry, ptr @__dev_queue_xmit._entry.131, ptr @__dev_queue_xmit._entry_ptr, ptr @__dev_queue_xmit._entry_ptr.133, ptr @__dev_remove_pack._entry, ptr @__dev_remove_pack._entry_ptr, ptr @__dev_set_promiscuity._entry, ptr @__dev_set_promiscuity._entry_ptr, ptr @__initcall__kmod_dev__967_11039_net_dev_init4, ptr @__ksymtab___dev_change_net_namespace, ptr @__ksymtab___dev_direct_xmit, ptr @__ksymtab___dev_forward_skb, ptr @__ksymtab___dev_get_by_flags, ptr @__ksymtab___dev_get_by_index, ptr @__ksymtab___dev_get_by_name, ptr @__ksymtab___dev_kfree_skb_any, ptr @__ksymtab___dev_kfree_skb_irq, ptr @__ksymtab___dev_remove_pack, ptr @__ksymtab___dev_set_mtu, ptr @__ksymtab___napi_schedule, ptr @__ksymtab___napi_schedule_irqoff, ptr @__ksymtab___netdev_notify_peers, ptr @__ksymtab___netif_napi_del, ptr @__ksymtab___netif_schedule, ptr @__ksymtab___netif_set_xps_queue, ptr @__ksymtab___skb_gso_segment, ptr @__ksymtab_alloc_netdev_mqs, ptr @__ksymtab_br_fdb_test_addr_hook, ptr @__ksymtab_call_netdevice_notifiers, ptr @__ksymtab_dev_add_pack, ptr @__ksymtab_dev_alloc_name, ptr @__ksymtab_dev_base_lock, ptr @__ksymtab_dev_change_carrier, ptr @__ksymtab_dev_change_flags, ptr @__ksymtab_dev_change_proto_down, ptr @__ksymtab_dev_change_proto_down_reason, ptr @__ksymtab_dev_close, ptr @__ksymtab_dev_close_many, ptr @__ksymtab_dev_disable_lro, ptr @__ksymtab_dev_fetch_sw_netstats, ptr @__ksymtab_dev_fill_forward_path, ptr @__ksymtab_dev_fill_metadata_dst, ptr @__ksymtab_dev_forward_skb, ptr @__ksymtab_dev_get_by_index, ptr @__ksymtab_dev_get_by_index_rcu, ptr @__ksymtab_dev_get_by_name, ptr @__ksymtab_dev_get_by_name_rcu, ptr @__ksymtab_dev_get_by_napi_id, ptr @__ksymtab_dev_get_flags, ptr @__ksymtab_dev_get_iflink, ptr @__ksymtab_dev_get_mac_address, ptr @__ksymtab_dev_get_phys_port_id, ptr @__ksymtab_dev_get_phys_port_name, ptr @__ksymtab_dev_get_port_parent_id, ptr @__ksymtab_dev_get_stats, ptr @__ksymtab_dev_get_tstats64, ptr @__ksymtab_dev_getbyhwaddr_rcu, ptr @__ksymtab_dev_getfirstbyhwtype, ptr @__ksymtab_dev_loopback_xmit, ptr @__ksymtab_dev_nit_active, ptr @__ksymtab_dev_open, ptr @__ksymtab_dev_pick_tx_cpu_id, ptr @__ksymtab_dev_pick_tx_zero, ptr @__ksymtab_dev_pre_changeaddr_notify, ptr @__ksymtab_dev_queue_xmit, ptr @__ksymtab_dev_queue_xmit_accel, ptr @__ksymtab_dev_queue_xmit_nit, ptr @__ksymtab_dev_remove_pack, ptr @__ksymtab_dev_set_alias, ptr @__ksymtab_dev_set_allmulti, ptr @__ksymtab_dev_set_group, ptr @__ksymtab_dev_set_mac_address, ptr @__ksymtab_dev_set_mac_address_user, ptr @__ksymtab_dev_set_mtu, ptr @__ksymtab_dev_set_promiscuity, ptr @__ksymtab_dev_set_threaded, ptr @__ksymtab_dev_valid_name, ptr @__ksymtab_dev_xdp_prog_count, ptr @__ksymtab_do_xdp_generic, ptr @__ksymtab_free_netdev, ptr @__ksymtab_init_dummy_netdev, ptr @__ksymtab_is_skb_forwardable, ptr @__ksymtab_napi_busy_loop, ptr @__ksymtab_napi_complete_done, ptr @__ksymtab_napi_disable, ptr @__ksymtab_napi_enable, ptr @__ksymtab_napi_schedule_prep, ptr @__ksymtab_net_dec_egress_queue, ptr @__ksymtab_net_dec_ingress_queue, ptr @__ksymtab_net_disable_timestamp, ptr @__ksymtab_net_enable_timestamp, ptr @__ksymtab_net_inc_egress_queue, ptr @__ksymtab_net_inc_ingress_queue, ptr @__ksymtab_netdev_adjacent_change_abort, ptr @__ksymtab_netdev_adjacent_change_commit, ptr @__ksymtab_netdev_adjacent_change_prepare, ptr @__ksymtab_netdev_adjacent_get_private, ptr @__ksymtab_netdev_alert, ptr @__ksymtab_netdev_bind_sb_channel_queue, ptr @__ksymtab_netdev_bonding_info_change, ptr @__ksymtab_netdev_change_features, ptr @__ksymtab_netdev_cmd_to_name, ptr @__ksymtab_netdev_crit, ptr @__ksymtab_netdev_emerg, ptr @__ksymtab_netdev_err, ptr @__ksymtab_netdev_features_change, ptr @__ksymtab_netdev_get_xmit_slave, ptr @__ksymtab_netdev_has_any_upper_dev, ptr @__ksymtab_netdev_has_upper_dev, ptr @__ksymtab_netdev_has_upper_dev_all_rcu, ptr @__ksymtab_netdev_increment_features, ptr @__ksymtab_netdev_info, ptr @__ksymtab_netdev_is_rx_handler_busy, ptr @__ksymtab_netdev_lower_dev_get_private, ptr @__ksymtab_netdev_lower_get_first_private_rcu, ptr @__ksymtab_netdev_lower_get_next, ptr @__ksymtab_netdev_lower_get_next_private, ptr @__ksymtab_netdev_lower_get_next_private_rcu, ptr @__ksymtab_netdev_lower_state_changed, ptr @__ksymtab_netdev_master_upper_dev_get, ptr @__ksymtab_netdev_master_upper_dev_get_rcu, ptr @__ksymtab_netdev_master_upper_dev_link, ptr @__ksymtab_netdev_max_backlog, ptr @__ksymtab_netdev_name_in_use, ptr @__ksymtab_netdev_name_node_alt_create, ptr @__ksymtab_netdev_name_node_alt_destroy, ptr @__ksymtab_netdev_next_lower_dev_rcu, ptr @__ksymtab_netdev_notice, ptr @__ksymtab_netdev_notify_peers, ptr @__ksymtab_netdev_pick_tx, ptr @__ksymtab_netdev_port_same_parent_id, ptr @__ksymtab_netdev_printk, ptr @__ksymtab_netdev_refcnt_read, ptr @__ksymtab_netdev_reset_tc, ptr @__ksymtab_netdev_rx_csum_fault, ptr @__ksymtab_netdev_rx_handler_register, ptr @__ksymtab_netdev_rx_handler_unregister, ptr @__ksymtab_netdev_set_default_ethtool_ops, ptr @__ksymtab_netdev_set_num_tc, ptr @__ksymtab_netdev_set_sb_channel, ptr @__ksymtab_netdev_set_tc_queue, ptr @__ksymtab_netdev_sk_get_lowest_dev, ptr @__ksymtab_netdev_state_change, ptr @__ksymtab_netdev_stats_to_stats64, ptr @__ksymtab_netdev_txq_to_tc, ptr @__ksymtab_netdev_unbind_sb_channel, ptr @__ksymtab_netdev_update_features, ptr @__ksymtab_netdev_upper_dev_link, ptr @__ksymtab_netdev_upper_dev_unlink, ptr @__ksymtab_netdev_upper_get_next_dev_rcu, ptr @__ksymtab_netdev_walk_all_lower_dev, ptr @__ksymtab_netdev_walk_all_lower_dev_rcu, ptr @__ksymtab_netdev_walk_all_upper_dev_rcu, ptr @__ksymtab_netdev_warn, ptr @__ksymtab_netif_device_attach, ptr @__ksymtab_netif_device_detach, ptr @__ksymtab_netif_get_num_default_rss_queues, ptr @__ksymtab_netif_napi_add, ptr @__ksymtab_netif_receive_skb, ptr @__ksymtab_netif_receive_skb_core, ptr @__ksymtab_netif_receive_skb_list, ptr @__ksymtab_netif_rx, ptr @__ksymtab_netif_rx_any_context, ptr @__ksymtab_netif_rx_ni, ptr @__ksymtab_netif_schedule_queue, ptr @__ksymtab_netif_set_real_num_queues, ptr @__ksymtab_netif_set_real_num_rx_queues, ptr @__ksymtab_netif_set_real_num_tx_queues, ptr @__ksymtab_netif_set_xps_queue, ptr @__ksymtab_netif_skb_features, ptr @__ksymtab_netif_stacked_transfer_operstate, ptr @__ksymtab_netif_tx_stop_all_queues, ptr @__ksymtab_netif_tx_wake_queue, ptr @__ksymtab_passthru_features_check, ptr @__ksymtab_register_netdev, ptr @__ksymtab_register_netdevice, ptr @__ksymtab_register_netdevice_notifier, ptr @__ksymtab_register_netdevice_notifier_dev_net, ptr @__ksymtab_register_netdevice_notifier_net, ptr @__ksymtab_rfs_needed, ptr @__ksymtab_rps_cpu_mask, ptr @__ksymtab_rps_may_expire_flow, ptr @__ksymtab_rps_needed, ptr @__ksymtab_rps_sock_flow_table, ptr @__ksymtab_skb_checksum_help, ptr @__ksymtab_skb_csum_hwoffload_help, ptr @__ksymtab_softnet_data, ptr @__ksymtab_synchronize_net, ptr @__ksymtab_unregister_netdev, ptr @__ksymtab_unregister_netdevice_many, ptr @__ksymtab_unregister_netdevice_notifier, ptr @__ksymtab_unregister_netdevice_notifier_dev_net, ptr @__ksymtab_unregister_netdevice_notifier_net, ptr @__ksymtab_unregister_netdevice_queue, ptr @__ksymtab_validate_xmit_skb_list, ptr @__napi_poll._entry, ptr @__napi_poll._entry_ptr, ptr @__netdev_adjacent_dev_remove._entry, ptr @__netdev_adjacent_dev_remove._entry_ptr, ptr @__netdev_printk._entry, ptr @__netdev_printk._entry.281, ptr @__netdev_printk._entry_ptr, ptr @__netdev_printk._entry_ptr.283, ptr @alloc_netdev_mqs._entry, ptr @alloc_netdev_mqs._entry.77, ptr @alloc_netdev_mqs._entry_ptr, ptr @alloc_netdev_mqs._entry_ptr.79, ptr @default_device_exit._entry, ptr @default_device_exit._entry_ptr, ptr @dev_queue_xmit_nit._entry, ptr @dev_queue_xmit_nit._entry_ptr, ptr @dev_set_mtu._entry, ptr @dev_set_mtu._entry_ptr, ptr @napi_kthread_create._entry, ptr @napi_kthread_create._entry_ptr, ptr @netdev_cap_txqueue._entry, ptr @netdev_cap_txqueue._entry_ptr, ptr @netdev_run_todo._entry, ptr @netdev_run_todo._entry_ptr, ptr @netdev_wait_allrefs._entry, ptr @netdev_wait_allrefs._entry_ptr, ptr @sk_validate_xmit_skb._entry, ptr @sk_validate_xmit_skb._entry_ptr, ptr @skb_tx_hash._entry, ptr @skb_tx_hash._entry_ptr, ptr @.str, ptr @dev_base_lock, ptr @ptype_lock, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @devnet_rename_sem, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @ifalias_mutex, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @netdev_chain, ptr @dev_boot_phase, ptr @netstamp_wanted, ptr @netstamp_needed_deferred, ptr @netstamp_work, ptr @.str.49, ptr @.str.50, ptr @xps_map_mutex, ptr @.str.60, ptr @.str.61, ptr @dev_validate_mtu.__msg, ptr @dev_validate_mtu.__msg.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @dev_addr_sem, ptr @bpf_xdp_link_lops, ptr @.str.66, ptr @netdev_unregistering_wq, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @register_netdevice.__key, ptr @.str.71, ptr @.str.72, ptr @net_unlink_list, ptr @net_todo_list, ptr @.str.73, ptr @.str.74, ptr @default_ethtool_ops, ptr @.str.75, ptr @.str.76, ptr @.str.78, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @ingress_needed_key, ptr @egress_needed_key, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @skb_warn_bad_offload.null_features, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @sk_validate_xmit_skb._rs, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.132, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @generic_xdp_needed_key, ptr @netstamp_needed_key, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @napi_hash_lock, ptr @napi_gen_id, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @dev_xdp_attach.__msg, ptr @dev_xdp_attach.__msg.183, ptr @dev_xdp_attach.__msg.184, ptr @dev_xdp_attach.__msg.185, ptr @dev_xdp_attach.__msg.186, ptr @dev_xdp_attach.__msg.187, ptr @dev_xdp_attach.__msg.188, ptr @dev_xdp_attach.__msg.189, ptr @dev_xdp_attach.__msg.190, ptr @dev_xdp_attach.__msg.191, ptr @dev_xdp_attach.__msg.192, ptr @dev_xdp_attach.__msg.193, ptr @dev_xdp_attach.__msg.194, ptr @dev_xdp_attach.__msg.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @netdev_lock_name, ptr @netdev_addr_lock_key, ptr @netdev_lock_type, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @netdev_init_one_queue.__key, ptr @.str.275, ptr @netdev_xmit_lock_key, ptr @ref_tracker_dir_init.__key, ptr @.str.276, ptr @netif_alloc_netdev_queues.__key, ptr @.str.277, ptr @flush_all_backlogs.flush_cpus, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.282, ptr @netdev_net_ops, ptr @net_dev_init.__key, ptr @.str.284, ptr @default_device_ops, ptr @.str.285, ptr @skb_queue_head_init.__key, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @switch.table.netdev_reg_state, ptr @switch.table.netdev_cmd_to_name, ptr @switch.table.register_netdevice, ptr @switch.table.__netdev_printk, ptr @switch.table.__netdev_printk.292], section "llvm.metadata"
@0 = internal global [319 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_base_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ptype_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devnet_rename_sem to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ifalias_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_chain to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_boot_phase to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netstamp_wanted to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netstamp_needed_deferred to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netstamp_work to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_queue_xmit_nit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xps_map_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_validate_mtu.__msg to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_validate_mtu.__msg.62 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_set_mtu._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_addr_sem to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_xdp_link_lops to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_unregistering_wq to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @register_netdevice.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_unlink_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_todo_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_run_todo._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_ethtool_ops to i32), i32 284, i32 352, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_netdev_mqs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_netdev_mqs._entry.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ingress_needed_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @egress_needed_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 103, i32 160, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_warn_bad_offload.null_features to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sk_validate_xmit_skb._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sk_validate_xmit_skb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_tx_hash._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_cap_txqueue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.781 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @generic_xdp_needed_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.785 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netstamp_needed_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @napi_kthread_create._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @napi_hash_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @napi_gen_id to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 98, i32 160, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.183 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.184 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.185 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.186 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.187 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.188 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.189 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.190 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.191 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.192 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.193 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.194 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_xdp_attach.__msg.195 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.952 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.961 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.973 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.979 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.979 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_lock_name to i32), i32 228, i32 288, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_addr_lock_key to i32), i32 456, i32 576, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_lock_type to i32), i32 114, i32 160, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1006 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1012 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1018 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1024 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1027 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1033 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1036 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1051 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1054 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1063 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1069 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1084 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1099 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1105 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1108 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1114 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1117 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1123 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1129 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1135 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1141 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1162 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1168 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_wait_allrefs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_init_one_queue.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_xmit_lock_key to i32), i32 456, i32 576, i32 ptrtoint (ptr @___asan_gen_.1190 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ref_tracker_dir_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netif_alloc_netdev_queues.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @flush_all_backlogs.flush_cpus to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1205 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @netdev_net_ops to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1220 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_dev_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_device_ops to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1229 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_queue_head_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1235 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_device_exit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1247 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1256 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.netdev_reg_state to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.netdev_cmd_to_name to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.register_netdevice to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.__netdev_printk to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1262 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.__netdev_printk.292 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_name_in_use(ptr noundef %net, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  %call1.i.i = tail call i32 @full_name_hash(ptr noundef %net, ptr noundef %name, i32 noundef %call.i.i) #39
  %dev_name_head.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %0 = ptrtoint ptr %dev_name_head.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_name_head.i.i, align 4
  %mul.i.i.i.i = mul i32 %call1.i.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %1, i32 %shr.i.i.i
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %name_node.0.in.i = phi ptr [ %arrayidx.i.i, %entry ], [ %name_node.0.i, %for.body.i.for.cond.i_crit_edge ]
  %2 = ptrtoint ptr %name_node.0.in.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %name_node.0.i = load ptr, ptr %name_node.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %name_node.0.i, null
  br i1 %tobool2.not.i, label %for.cond.i.netdev_name_node_lookup.exit_crit_edge, label %for.body.i

for.cond.i.netdev_name_node_lookup.exit_crit_edge: ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_lookup.exit

for.body.i:                                       ; preds = %for.cond.i
  %name3.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 3
  %3 = ptrtoint ptr %name3.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name3.i, align 4
  %call4.i = tail call i32 @strcmp(ptr noundef %4, ptr noundef %name) #38
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %for.body.i.netdev_name_node_lookup.exit_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

for.body.i.netdev_name_node_lookup.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_lookup.exit

netdev_name_node_lookup.exit:                     ; preds = %for.body.i.netdev_name_node_lookup.exit_crit_edge, %for.cond.i.netdev_name_node_lookup.exit_crit_edge
  %tobool = icmp ne ptr %name_node.0.i, null
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_name_node_alt_create(ptr noundef %dev, ptr noundef %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  %call.i.i = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  %call1.i.i = tail call i32 @full_name_hash(ptr noundef %1, ptr noundef %name, i32 noundef %call.i.i) #39
  %dev_name_head.i.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %dev_name_head.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_name_head.i.i, align 4
  %mul.i.i.i.i = mul i32 %call1.i.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %3, i32 %shr.i.i.i
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %name_node.0.in.i = phi ptr [ %arrayidx.i.i, %entry ], [ %name_node.0.i, %for.body.i.for.cond.i_crit_edge ]
  %4 = ptrtoint ptr %name_node.0.in.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %name_node.0.i = load ptr, ptr %name_node.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %name_node.0.i, null
  br i1 %tobool2.not.i, label %if.end, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %name3.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 3
  %5 = ptrtoint ptr %name3.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %name3.i, align 4
  %call4.i = tail call i32 @strcmp(ptr noundef %6, ptr noundef %name) #38
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %for.body.i.cleanup_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

for.body.i.cleanup_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %for.cond.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %7 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 3264, i32 noundef 24) #40
  %tobool.not.i = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %call7.i.i, i32 0, i32 1
  %dev1.i = getelementptr inbounds %struct.netdev_name_node, ptr %call7.i.i, i32 0, i32 2
  %8 = ptrtoint ptr %dev1.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %dev, ptr %dev1.i, align 8
  %name2.i = getelementptr inbounds %struct.netdev_name_node, ptr %call7.i.i, i32 0, i32 3
  %9 = ptrtoint ptr %name2.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %name, ptr %name2.i, align 4
  %call.i.i16 = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  %call1.i.i17 = tail call i32 @full_name_hash(ptr noundef %1, ptr noundef %name, i32 noundef %call.i.i16) #39
  %10 = ptrtoint ptr %dev_name_head.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev_name_head.i.i, align 4
  %mul.i.i.i.i19 = mul i32 %call1.i.i17, 1640531527
  %shr.i.i.i20 = lshr i32 %mul.i.i.i.i19, 24
  %arrayidx.i.i21 = getelementptr %struct.hlist_head, ptr %11, i32 %shr.i.i.i20
  %12 = ptrtoint ptr %arrayidx.i.i21 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i.i21, align 4
  %14 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %call7.i.i, align 8
  %15 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %arrayidx.i.i21, ptr %pprev.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1308
  %16 = ptrtoint ptr %arrayidx.i.i21 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %call7.i.i, ptr %arrayidx.i.i21, align 4
  %tobool.not.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i, label %if.end5.netdev_name_node_add.exit_crit_edge, label %do.body49.i.i

if.end5.netdev_name_node_add.exit_crit_edge:      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_add.exit

do.body49.i.i:                                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  %pprev51.i.i = getelementptr inbounds %struct.hlist_node, ptr %13, i32 0, i32 1
  %17 = ptrtoint ptr %pprev51.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %call7.i.i, ptr %pprev51.i.i, align 4
  br label %netdev_name_node_add.exit

netdev_name_node_add.exit:                        ; preds = %do.body49.i.i, %if.end5.netdev_name_node_add.exit_crit_edge
  %list = getelementptr inbounds %struct.netdev_name_node, ptr %call7.i.i, i32 0, i32 1
  %name_node6 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 1
  %18 = ptrtoint ptr %name_node6 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %name_node6, align 16
  %list7 = getelementptr inbounds %struct.netdev_name_node, ptr %19, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.netdev_name_node, ptr %19, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i, align 4
  %call.i.i23 = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %21, ptr noundef %list7) #35
  br i1 %call.i.i23, label %if.end.i.i, label %netdev_name_node_add.exit.cleanup_crit_edge

netdev_name_node_add.exit.cleanup_crit_edge:      ; preds = %netdev_name_node_add.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end.i.i:                                       ; preds = %netdev_name_node_add.exit
  call void @__sanitizer_cov_trace_pc() #37
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %list, ptr %prev.i, align 4
  %23 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %list7, ptr %list, align 8
  %prev3.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %call7.i.i, i32 0, i32 1, i32 1
  %24 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev3.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %list, ptr %21, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %netdev_name_node_add.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %for.body.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %netdev_name_node_add.exit.cleanup_crit_edge ], [ 0, %if.end.i.i ], [ -12, %if.end.cleanup_crit_edge ], [ -17, %for.body.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_name_node_alt_destroy(ptr noundef readonly %dev, ptr noundef %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  %call.i.i = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  %call1.i.i = tail call i32 @full_name_hash(ptr noundef %1, ptr noundef %name, i32 noundef %call.i.i) #39
  %dev_name_head.i.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %dev_name_head.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_name_head.i.i, align 4
  %mul.i.i.i.i = mul i32 %call1.i.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %3, i32 %shr.i.i.i
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %name_node.0.in.i = phi ptr [ %arrayidx.i.i, %entry ], [ %name_node.0.i, %for.body.i.for.cond.i_crit_edge ]
  %4 = ptrtoint ptr %name_node.0.in.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %name_node.0.i = load ptr, ptr %name_node.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %name_node.0.i, null
  br i1 %tobool2.not.i, label %for.cond.i.cleanup_crit_edge, label %for.body.i

for.cond.i.cleanup_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body.i:                                       ; preds = %for.cond.i
  %name3.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 3
  %5 = ptrtoint ptr %name3.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %name3.i, align 4
  %call4.i = tail call i32 @strcmp(ptr noundef %6, ptr noundef %name) #38
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %if.end, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

if.end:                                           ; preds = %for.body.i
  %name3.i.le = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 3
  %name_node2 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 1
  %7 = ptrtoint ptr %name_node2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name_node2, align 16
  %cmp = icmp eq ptr %name_node.0.i, %8
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %lor.lhs.false

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %dev3 = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 2
  %9 = ptrtoint ptr %dev3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev3, align 4
  %cmp4.not = icmp eq ptr %10, %dev
  br i1 %cmp4.not, label %if.end6, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end6:                                          ; preds = %lor.lhs.false
  %list.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list.i) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end6.list_del.exit.i_crit_edge

if.end6.list_del.exit.i_crit_edge:                ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 1, i32 1
  %11 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev.i.i.i, align 4
  %13 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev1.i.i.i.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %14, ptr %12, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.end6.list_del.exit.i_crit_edge
  %17 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 256 to ptr), ptr %list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 1, i32 1
  %18 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %19 = ptrtoint ptr %name_node.0.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %name_node.0.i, align 4
  %pprev2.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %name_node.0.i, i32 0, i32 1
  %21 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pprev2.i.i.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %20, ptr %22, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %20, null
  br i1 %tobool.not.i.i.i.i, label %list_del.exit.i.__netdev_name_node_alt_destroy.exit_crit_edge, label %do.body13.i.i.i.i

list_del.exit.i.__netdev_name_node_alt_destroy.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_name_node_alt_destroy.exit

do.body13.i.i.i.i:                                ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %pprev14.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %20, i32 0, i32 1
  %24 = ptrtoint ptr %pprev14.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %22, ptr %pprev14.i.i.i.i, align 4
  br label %__netdev_name_node_alt_destroy.exit

__netdev_name_node_alt_destroy.exit:              ; preds = %do.body13.i.i.i.i, %list_del.exit.i.__netdev_name_node_alt_destroy.exit_crit_edge
  %25 = ptrtoint ptr %pprev2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i, align 4
  %26 = ptrtoint ptr %name3.i.le to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %name3.i.le, align 4
  tail call void @kfree(ptr noundef %27) #35
  tail call void @kfree(ptr noundef nonnull %name_node.0.i) #35
  br label %cleanup

cleanup:                                          ; preds = %__netdev_name_node_alt_destroy.exit, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %for.cond.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %__netdev_name_node_alt_destroy.exit ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -2, %for.cond.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_add_pack(ptr noundef %pt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pt to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %pt, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %1)
  %cmp.i = icmp eq i16 %1, 3
  %dev.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 2
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ptype_all.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 11
  %spec.select.i = select i1 %tobool.not.i, ptr @ptype_all, ptr %ptype_all.i
  br label %ptype_head.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ptype_specific.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 12
  %4 = and i16 %1, 15
  %and.i = zext i16 %4 to i32
  %arrayidx.i = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %and.i
  %cond11.i = select i1 %tobool.not.i, ptr %arrayidx.i, ptr %ptype_specific.i
  br label %ptype_head.exit

ptype_head.exit:                                  ; preds = %if.else.i, %if.then.i
  %retval.0.i = phi ptr [ %spec.select.i, %if.then.i ], [ %cond11.i, %if.else.i ]
  tail call void @_raw_spin_lock(ptr noundef nonnull @ptype_lock) #35
  %list = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 9
  %5 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %retval.0.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %retval.0.i, ptr noundef %6) #35
  br i1 %call.i.i, label %if.end.i.i, label %ptype_head.exit.list_add_rcu.exit_crit_edge

ptype_head.exit.list_add_rcu.exit_crit_edge:      ; preds = %ptype_head.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_rcu.exit

if.end.i.i:                                       ; preds = %ptype_head.exit
  call void @__sanitizer_cov_trace_pc() #37
  %7 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %list, align 4
  %prev2.i.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 9, i32 1
  %8 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %retval.0.i, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1309
  %9 = ptrtoint ptr %retval.0.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %list, ptr %retval.0.i, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %10 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %list, ptr %prev37.i.i, align 4
  br label %list_add_rcu.exit

list_add_rcu.exit:                                ; preds = %if.end.i.i, %ptype_head.exit.list_add_rcu.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @ptype_lock) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__dev_remove_pack(ptr noundef %pt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pt to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %pt, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %1)
  %cmp.i = icmp eq i16 %1, 3
  %dev.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 2
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ptype_all.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 11
  %spec.select.i = select i1 %tobool.not.i, ptr @ptype_all, ptr %ptype_all.i
  br label %ptype_head.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ptype_specific.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 12
  %4 = and i16 %1, 15
  %and.i = zext i16 %4 to i32
  %arrayidx.i = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %and.i
  %cond11.i = select i1 %tobool.not.i, ptr %arrayidx.i, ptr %ptype_specific.i
  br label %ptype_head.exit

ptype_head.exit:                                  ; preds = %if.else.i, %if.then.i
  %retval.0.i = phi ptr [ %spec.select.i, %if.then.i ], [ %cond11.i, %if.else.i ]
  tail call void @_raw_spin_lock(ptr noundef nonnull @ptype_lock) #35
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %ptype_head.exit
  %.pn.in = phi ptr [ %retval.0.i, %ptype_head.exit ], [ %.pn, %for.body.for.cond_crit_edge ]
  %5 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %retval.0.i
  br i1 %cmp.not, label %do.end, label %for.body

for.body:                                         ; preds = %for.cond
  %pt1.0 = getelementptr i8, ptr %.pn, i32 -32
  %cmp1 = icmp eq ptr %pt1.0, %pt
  br i1 %cmp1, label %if.then, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond

if.then:                                          ; preds = %for.body
  %list2 = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list2) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del_rcu.exit_crit_edge

if.then.list_del_rcu.exit_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 9, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %8 = ptrtoint ptr %list2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %list2, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.then.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 9, i32 1
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br label %out

do.end:                                           ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  %call9 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1, ptr noundef %pt) #41
  br label %out

out:                                              ; preds = %do.end, %list_del_rcu.exit
  tail call void @_raw_spin_unlock(ptr noundef nonnull @ptype_lock) #35
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_remove_pack(ptr noundef %pt) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pt to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %pt, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %1)
  %cmp.i.i = icmp eq i16 %1, 3
  %dev.i.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 2
  %2 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %3, null
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ptype_all.i.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 11
  %spec.select.i.i = select i1 %tobool.not.i.i, ptr @ptype_all, ptr %ptype_all.i.i
  br label %ptype_head.exit.i

if.else.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ptype_specific.i.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 12
  %4 = and i16 %1, 15
  %and.i.i = zext i16 %4 to i32
  %arrayidx.i.i = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %and.i.i
  %cond11.i.i = select i1 %tobool.not.i.i, ptr %arrayidx.i.i, ptr %ptype_specific.i.i
  br label %ptype_head.exit.i

ptype_head.exit.i:                                ; preds = %if.else.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %spec.select.i.i, %if.then.i.i ], [ %cond11.i.i, %if.else.i.i ]
  tail call void @_raw_spin_lock(ptr noundef nonnull @ptype_lock) #35
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %ptype_head.exit.i
  %.pn.in.i = phi ptr [ %retval.0.i.i, %ptype_head.exit.i ], [ %.pn.i, %for.body.i.for.cond.i_crit_edge ]
  %5 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %retval.0.i.i
  br i1 %cmp.not.i, label %do.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %pt1.0.i = getelementptr i8, ptr %.pn.i, i32 -32
  %cmp1.i = icmp eq ptr %pt1.0.i, %pt
  br i1 %cmp1.i, label %if.then.i, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

if.then.i:                                        ; preds = %for.body.i
  %list2.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 9
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list2.i) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.list_del_rcu.exit.i_crit_edge

if.then.i.list_del_rcu.exit.i_crit_edge:          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_rcu.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 9, i32 1
  %6 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i.i, align 4
  %8 = ptrtoint ptr %list2.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %list2.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del_rcu.exit.i

list_del_rcu.exit.i:                              ; preds = %if.end.i.i.i, %if.then.i.list_del_rcu.exit.i_crit_edge
  %prev.i.i = getelementptr inbounds %struct.packet_type, ptr %pt, i32 0, i32 9, i32 1
  %12 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  br label %__dev_remove_pack.exit

do.end.i:                                         ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  %call9.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1, ptr noundef %pt) #41
  br label %__dev_remove_pack.exit

__dev_remove_pack.exit:                           ; preds = %do.end.i, %list_del_rcu.exit.i
  tail call void @_raw_spin_unlock(ptr noundef nonnull @ptype_lock) #35
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i1

if.then.i1:                                       ; preds = %__dev_remove_pack.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu_expedited() #35
  br label %synchronize_net.exit

if.else.i:                                        ; preds = %__dev_remove_pack.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu() #35
  br label %synchronize_net.exit

synchronize_net.exit:                             ; preds = %if.else.i, %if.then.i1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @synchronize_net() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu_expedited() #35
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu() #35
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_get_iflink(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %ndo_get_iflink = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 73
  %2 = ptrtoint ptr %ndo_get_iflink to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_get_iflink, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  %call = tail call i32 %3(ptr noundef %dev) #35
  br label %return

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %ifindex = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 17
  %4 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ifindex, align 4
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %5, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_fill_metadata_dst(ptr noundef %dev, ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %ndo_fill_metadata_dst = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 74
  %2 = ptrtoint ptr %ndo_fill_metadata_dst to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_fill_metadata_dst, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %4 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 8
  %and.i.i.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.skb_dst.exit.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.end.skb_dst.exit.i.i.i_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exit.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end
  %call.i.i.i.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %land.rhs.i.i.i.i, label %land.lhs.true.i.i.i.i.skb_dst.exit.i.i.i_crit_edge

land.lhs.true.i.i.i.i.skb_dst.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exit.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i
  %call2.i.i.i.i = tail call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i.i.i)
  %tobool3.not.i.i.i.i = icmp eq i32 %call2.i.i.i.i, 0
  br i1 %tobool3.not.i.i.i.i, label %do.end.i.i.i.i, label %land.rhs.i.i.i.i.skb_dst.exit.i.i.i_crit_edge, !prof !1310

land.rhs.i.i.i.i.skb_dst.exit.i.i.i_crit_edge:    ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exit.i.i.i

do.end.i.i.i.i:                                   ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 1013, i32 noundef 9, ptr noundef null) #35
  br label %skb_dst.exit.i.i.i

skb_dst.exit.i.i.i:                               ; preds = %do.end.i.i.i.i, %land.rhs.i.i.i.i.skb_dst.exit.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.skb_dst.exit.i.i.i_crit_edge, %if.end.skb_dst.exit.i.i.i_crit_edge
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %4, align 8
  %and25.i.i.i.i = and i32 %8, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and25.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %skb_dst.exit.i.i.i.cleanup_crit_edge, label %land.lhs.true.i.i.i

skb_dst.exit.i.i.i.cleanup_crit_edge:             ; preds = %skb_dst.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

land.lhs.true.i.i.i:                              ; preds = %skb_dst.exit.i.i.i
  %9 = inttoptr i32 %and25.i.i.i.i to ptr
  %flags.i.i.i = getelementptr inbounds %struct.dst_entry, ptr %9, i32 0, i32 7
  %10 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %flags.i.i.i, align 4
  %12 = and i16 %11, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool1.not.i.i.i = icmp eq i16 %12, 0
  br i1 %tobool1.not.i.i.i, label %land.lhs.true.i.i.i.cleanup_crit_edge, label %lor.lhs.false.i.i

land.lhs.true.i.i.i.cleanup_crit_edge:            ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i.i
  %type.i.i = getelementptr inbounds %struct.metadata_dst, ptr %9, i32 0, i32 1
  %13 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %type.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.not.i.i = icmp eq i32 %14, 0
  br i1 %cmp.not.i.i, label %if.end.i.i, label %lor.lhs.false.i.i.cleanup_crit_edge

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %options_len.i.i = getelementptr inbounds %struct.metadata_dst, ptr %9, i32 0, i32 2, i32 0, i32 2
  %15 = ptrtoint ptr %options_len.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %options_len.i.i, align 8
  %call3.i.i = tail call ptr @metadata_dst_alloc(i8 noundef zeroext %16, i32 noundef 0, i32 noundef 2592) #35
  %tobool4.not.i.i = icmp eq ptr %call3.i.i, null
  br i1 %tobool4.not.i.i, label %if.end.i.i.cleanup_crit_edge, label %if.end7.i.i

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end7.i.i:                                      ; preds = %if.end.i.i
  %conv.i.i = zext i8 %16 to i32
  %u.i.i = getelementptr inbounds %struct.metadata_dst, ptr %9, i32 0, i32 2
  %u8.i.i = getelementptr inbounds %struct.metadata_dst, ptr %call3.i.i, i32 0, i32 2
  %add.i.i = add nuw nsw i32 %conv.i.i, 72
  %17 = call ptr @memcpy(ptr %u8.i.i, ptr %u.i.i, i32 %add.i.i)
  %dst_cache.i.i = getelementptr inbounds %struct.metadata_dst, ptr %call3.i.i, i32 0, i32 2, i32 0, i32 1
  %18 = ptrtoint ptr %dst_cache.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dst_cache.i.i, align 8
  %tobool11.not.i.i = icmp eq ptr %19, null
  br i1 %tobool11.not.i.i, label %if.end7.i.i.if.end20.i.i_crit_edge, label %if.then12.i.i

if.end7.i.i.if.end20.i.i_crit_edge:               ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end20.i.i

if.then12.i.i:                                    ; preds = %if.end7.i.i
  %call15.i.i = tail call i32 @dst_cache_init(ptr noundef %dst_cache.i.i, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i.i)
  %tobool16.not.i.i = icmp eq i32 %call15.i.i, 0
  br i1 %tobool16.not.i.i, label %if.then12.i.i.if.end20.i.i_crit_edge, label %cleanup.i.i

if.then12.i.i.if.end20.i.i_crit_edge:             ; preds = %if.then12.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end20.i.i

cleanup.i.i:                                      ; preds = %if.then12.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @metadata_dst_free(ptr noundef nonnull %call3.i.i) #35
  %20 = inttoptr i32 %call15.i.i to ptr
  br label %skb_tunnel_info_unclone.exit

if.end20.i.i:                                     ; preds = %if.then12.i.i.if.end20.i.i_crit_edge, %if.end7.i.i.if.end20.i.i_crit_edge
  %21 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %4, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i37.i.i = icmp ne i32 %22, 0
  %and.i.i38.i.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i38.i.i)
  %tobool.not.i.i39.i.i = icmp eq i32 %and.i.i38.i.i, 0
  %or.cond.i.i = and i1 %tobool.not.i37.i.i, %tobool.not.i.i39.i.i
  br i1 %or.cond.i.i, label %if.then.i.i.i.i, label %if.end20.i.i.skb_dst_drop.exit.i.i_crit_edge

if.end20.i.i.skb_dst_drop.exit.i.i_crit_edge:     ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst_drop.exit.i.i

if.then.i.i.i.i:                                  ; preds = %if.end20.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %and1.i.i.i.i = and i32 %22, -2
  %23 = inttoptr i32 %and1.i.i.i.i to ptr
  tail call void @dst_release(ptr noundef %23) #35
  br label %skb_dst_drop.exit.i.i

skb_dst_drop.exit.i.i:                            ; preds = %if.then.i.i.i.i, %if.end20.i.i.skb_dst_drop.exit.i.i_crit_edge
  %slow_gro.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %24 = ptrtoint ptr %slow_gro.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %24, i32 4)
  %bf.load.i.i.i = load i32, ptr %slow_gro.i.i.i, align 2
  %bf.set.i.i.i = or i32 %bf.load.i.i.i, 4096
  store i32 %bf.set.i.i.i, ptr %slow_gro.i.i.i, align 2
  %25 = ptrtoint ptr %call3.i.i to i32
  %26 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %4, align 8
  br label %skb_tunnel_info_unclone.exit

skb_tunnel_info_unclone.exit:                     ; preds = %skb_dst_drop.exit.i.i, %cleanup.i.i
  %retval.1.i.i = phi ptr [ %call3.i.i, %skb_dst_drop.exit.i.i ], [ %20, %cleanup.i.i ]
  %cmp.i.i = icmp ugt ptr %retval.1.i.i, inttoptr (i32 -4096 to ptr)
  %u.i = getelementptr inbounds %struct.metadata_dst, ptr %retval.1.i.i, i32 0, i32 2
  %tobool3.not20 = icmp eq ptr %u.i, null
  %tobool3.not = select i1 %cmp.i.i, i1 true, i1 %tobool3.not20
  br i1 %tobool3.not, label %skb_tunnel_info_unclone.exit.cleanup_crit_edge, label %if.end5

skb_tunnel_info_unclone.exit.cleanup_crit_edge:   ; preds = %skb_tunnel_info_unclone.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end5:                                          ; preds = %skb_tunnel_info_unclone.exit
  %mode = getelementptr inbounds %struct.metadata_dst, ptr %retval.1.i.i, i32 0, i32 2, i32 0, i32 3
  %27 = ptrtoint ptr %mode to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %mode, align 1
  %29 = and i8 %28, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool6.not = icmp eq i8 %29, 0
  br i1 %tobool6.not, label %if.end5.cleanup_crit_edge, label %if.end11, !prof !1310

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end11:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  %30 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %netdev_ops, align 8
  %ndo_fill_metadata_dst13 = getelementptr inbounds %struct.net_device_ops, ptr %31, i32 0, i32 74
  %32 = ptrtoint ptr %ndo_fill_metadata_dst13 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ndo_fill_metadata_dst13, align 4
  %call14 = tail call i32 %33(ptr noundef %dev, ptr noundef %skb) #35
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %if.end5.cleanup_crit_edge, %skb_tunnel_info_unclone.exit.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %land.lhs.true.i.i.i.cleanup_crit_edge, %skb_dst.exit.i.i.i.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call14, %if.end11 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -12, %skb_tunnel_info_unclone.exit.cleanup_crit_edge ], [ -22, %if.end5.cleanup_crit_edge ], [ -12, %lor.lhs.false.i.i.cleanup_crit_edge ], [ -12, %if.end.i.i.cleanup_crit_edge ], [ -12, %skb_dst.exit.i.i.i.cleanup_crit_edge ], [ -12, %land.lhs.true.i.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_fill_forward_path(ptr noundef %dev, ptr noundef %daddr, ptr noundef %stack) #1 align 64 {
entry:
  %ctx = alloca %struct.net_device_path_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %ctx) #35
  %0 = getelementptr inbounds %struct.net_device_path_ctx, ptr %ctx, i32 0, i32 1
  %1 = getelementptr inbounds %struct.net_device_path_ctx, ptr %ctx, i32 0, i32 2
  %2 = getelementptr inbounds %struct.net_device_path_ctx, ptr %ctx, i32 0, i32 3
  %3 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %dev, ptr %ctx, align 4
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %daddr, ptr %0, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %1, align 4
  %6 = ptrtoint ptr %2 to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 0, ptr %2, align 4
  %7 = ptrtoint ptr %stack to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %stack, align 4
  %tobool.not95 = icmp eq ptr %dev, null
  br i1 %tobool.not95, label %while.end.thread, label %land.rhs.preheader

land.rhs.preheader:                               ; preds = %entry
  %netdev_ops102 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %8 = ptrtoint ptr %netdev_ops102 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %netdev_ops102, align 8
  %ndo_fill_forward_path103 = getelementptr inbounds %struct.net_device_ops, ptr %9, i32 0, i32 83
  %10 = ptrtoint ptr %ndo_fill_forward_path103 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ndo_fill_forward_path103, align 4
  %tobool5.not104 = icmp eq ptr %11, null
  br i1 %tobool5.not104, label %land.rhs.preheader.while.end_crit_edge, label %land.rhs.preheader.while.body_crit_edge

land.rhs.preheader.while.body_crit_edge:          ; preds = %land.rhs.preheader
  br label %while.body

land.rhs.preheader.while.end_crit_edge:           ; preds = %land.rhs.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.end.thread:                                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %12 = ptrtoint ptr %stack to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %stack, align 4
  br label %dev_fwd_path.exit87

while.cond:                                       ; preds = %if.end13
  %tobool.not = icmp eq ptr %28, null
  br i1 %tobool.not, label %while.cond.while.end_crit_edge, label %land.rhs

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

land.rhs:                                         ; preds = %while.cond
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %28, i32 0, i32 16
  %13 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %netdev_ops, align 8
  %ndo_fill_forward_path = getelementptr inbounds %struct.net_device_ops, ptr %14, i32 0, i32 83
  %15 = ptrtoint ptr %ndo_fill_forward_path to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ndo_fill_forward_path, align 4
  %tobool5.not = icmp eq ptr %16, null
  br i1 %tobool5.not, label %land.rhs.while.end_crit_edge, label %land.rhs.while.body_crit_edge

land.rhs.while.body_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.body:                                       ; preds = %land.rhs.while.body_crit_edge, %land.rhs.preheader.while.body_crit_edge
  %17 = phi ptr [ %28, %land.rhs.while.body_crit_edge ], [ %dev, %land.rhs.preheader.while.body_crit_edge ]
  %18 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %stack, align 4
  %inc.i = add i32 %19, 1
  store i32 %inc.i, ptr %stack, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %19)
  %cmp.i = icmp sgt i32 %19, 4
  br i1 %cmp.i, label %land.rhs.i, label %dev_fwd_path.exit

land.rhs.i:                                       ; preds = %while.body
  %.b42.i = load i1, ptr @dev_fwd_path.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i.cleanup_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.cleanup_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_fwd_path.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 654, i32 noundef 9, ptr noundef null) #35
  br label %cleanup

dev_fwd_path.exit:                                ; preds = %while.body
  %arrayidx.i = getelementptr %struct.net_device_path_stack, ptr %stack, i32 0, i32 1, i32 %19
  %tobool7.not = icmp eq ptr %arrayidx.i, null
  br i1 %tobool7.not, label %dev_fwd_path.exit.cleanup_crit_edge, label %if.end

dev_fwd_path.exit.cleanup_crit_edge:              ; preds = %dev_fwd_path.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %dev_fwd_path.exit
  %20 = call ptr @memset(ptr %arrayidx.i, i32 0, i32 20)
  %21 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ctx, align 4
  %netdev_ops9 = getelementptr inbounds %struct.net_device, ptr %22, i32 0, i32 16
  %23 = ptrtoint ptr %netdev_ops9 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %netdev_ops9, align 8
  %ndo_fill_forward_path10 = getelementptr inbounds %struct.net_device_ops, ptr %24, i32 0, i32 83
  %25 = ptrtoint ptr %ndo_fill_forward_path10 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ndo_fill_forward_path10, align 4
  %call11 = call i32 %26(ptr noundef nonnull %ctx, ptr noundef nonnull %arrayidx.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %cmp = icmp slt i32 %call11, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end13

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %27 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ctx, align 4
  %cmp15 = icmp eq ptr %17, %28
  br i1 %cmp15, label %land.rhs18, label %while.cond

land.rhs18:                                       ; preds = %if.end13
  %.b77 = load i1, ptr @dev_fill_forward_path.__already_done, align 1
  br i1 %.b77, label %land.rhs18.cleanup_crit_edge, label %if.then25, !prof !1311

land.rhs18.cleanup_crit_edge:                     ; preds = %land.rhs18
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then25:                                        ; preds = %land.rhs18
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_fill_forward_path.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 683, i32 noundef 9, ptr noundef null) #35
  br label %cleanup

while.end:                                        ; preds = %land.rhs.while.end_crit_edge, %while.cond.while.end_crit_edge, %land.rhs.preheader.while.end_crit_edge
  %ret.0.lcssa.ph = phi i32 [ 0, %land.rhs.preheader.while.end_crit_edge ], [ %call11, %land.rhs.while.end_crit_edge ], [ %call11, %while.cond.while.end_crit_edge ]
  %29 = ptrtoint ptr %stack to i32
  call void @__asan_load4_noabort(i32 %29)
  %.pr = load i32, ptr %stack, align 4
  %inc.i79 = add i32 %.pr, 1
  store i32 %inc.i79, ptr %stack, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %.pr)
  %cmp.i80 = icmp sgt i32 %.pr, 4
  br i1 %cmp.i80, label %land.rhs.i82, label %while.end.dev_fwd_path.exit87_crit_edge

while.end.dev_fwd_path.exit87_crit_edge:          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_fwd_path.exit87

land.rhs.i82:                                     ; preds = %while.end
  %.b42.i81 = load i1, ptr @dev_fwd_path.__already_done, align 1
  br i1 %.b42.i81, label %land.rhs.i82.cleanup_crit_edge, label %if.then.i83, !prof !1311

land.rhs.i82.cleanup_crit_edge:                   ; preds = %land.rhs.i82
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.i83:                                      ; preds = %land.rhs.i82
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_fwd_path.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 654, i32 noundef 9, ptr noundef null) #35
  br label %cleanup

dev_fwd_path.exit87:                              ; preds = %while.end.dev_fwd_path.exit87_crit_edge, %while.end.thread
  %ret.0.lcssa101 = phi i32 [ 0, %while.end.thread ], [ %ret.0.lcssa.ph, %while.end.dev_fwd_path.exit87_crit_edge ]
  %30 = phi i32 [ 0, %while.end.thread ], [ %.pr, %while.end.dev_fwd_path.exit87_crit_edge ]
  %arrayidx.i84 = getelementptr %struct.net_device_path_stack, ptr %stack, i32 0, i32 1, i32 %30
  %tobool59.not = icmp eq ptr %arrayidx.i84, null
  br i1 %tobool59.not, label %dev_fwd_path.exit87.cleanup_crit_edge, label %if.end61

dev_fwd_path.exit87.cleanup_crit_edge:            ; preds = %dev_fwd_path.exit87
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end61:                                         ; preds = %dev_fwd_path.exit87
  call void @__sanitizer_cov_trace_pc() #37
  %31 = ptrtoint ptr %arrayidx.i84 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %arrayidx.i84, align 4
  %32 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ctx, align 4
  %dev63 = getelementptr %struct.net_device_path_stack, ptr %stack, i32 0, i32 1, i32 %30, i32 1
  %34 = ptrtoint ptr %dev63 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %33, ptr %dev63, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end61, %dev_fwd_path.exit87.cleanup_crit_edge, %if.then.i83, %land.rhs.i82.cleanup_crit_edge, %if.then25, %land.rhs18.cleanup_crit_edge, %if.end.cleanup_crit_edge, %dev_fwd_path.exit.cleanup_crit_edge, %if.then.i, %land.rhs.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0.lcssa101, %if.end61 ], [ -1, %if.then25 ], [ -1, %dev_fwd_path.exit87.cleanup_crit_edge ], [ -1, %land.rhs18.cleanup_crit_edge ], [ -1, %if.then.i ], [ -1, %land.rhs.i.cleanup_crit_edge ], [ -1, %if.then.i83 ], [ -1, %land.rhs.i82.cleanup_crit_edge ], [ -1, %dev_fwd_path.exit.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %ctx) #35
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__dev_get_by_name(ptr noundef %net, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  %call1.i.i = tail call i32 @full_name_hash(ptr noundef %net, ptr noundef %name, i32 noundef %call.i.i) #39
  %dev_name_head.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %0 = ptrtoint ptr %dev_name_head.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_name_head.i.i, align 4
  %mul.i.i.i.i = mul i32 %call1.i.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %1, i32 %shr.i.i.i
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %name_node.0.in.i = phi ptr [ %arrayidx.i.i, %entry ], [ %name_node.0.i, %for.body.i.for.cond.i_crit_edge ]
  %2 = ptrtoint ptr %name_node.0.in.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %name_node.0.i = load ptr, ptr %name_node.0.in.i, align 4
  %tobool2.not.i = icmp eq ptr %name_node.0.i, null
  br i1 %tobool2.not.i, label %for.cond.i.cond.end_crit_edge, label %for.body.i

for.cond.i.cond.end_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end

for.body.i:                                       ; preds = %for.cond.i
  %name3.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 3
  %3 = ptrtoint ptr %name3.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name3.i, align 4
  %call4.i = tail call i32 @strcmp(ptr noundef %4, ptr noundef %name) #38
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %cond.true, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

cond.true:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %dev = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 2
  %5 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %for.cond.i.cond.end_crit_edge
  %cond = phi ptr [ %6, %cond.true ], [ null, %for.cond.i.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_name_rcu(ptr noundef %net, ptr noundef %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  %call1.i.i = tail call i32 @full_name_hash(ptr noundef %net, ptr noundef %name, i32 noundef %call.i.i) #39
  %dev_name_head.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %0 = ptrtoint ptr %dev_name_head.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_name_head.i.i, align 4
  %mul.i.i.i.i = mul i32 %call1.i.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %1, i32 %shr.i.i.i
  %call1.i = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.for.cond.i.preheader_crit_edge

entry.for.cond.i.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.preheader

land.lhs.true.i:                                  ; preds = %entry
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.for.cond.i.preheader_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.for.cond.i.preheader_crit_edge:   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.preheader

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b42.i = load i1, ptr @netdev_name_node_lookup_rcu.__warned, align 1
  br i1 %.b42.i, label %land.lhs.true4.i.for.cond.i.preheader_crit_edge, label %if.then.i

land.lhs.true4.i.for.cond.i.preheader_crit_edge:  ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.preheader

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_name_node_lookup_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 294, ptr noundef nonnull @.str.4) #35
  br label %for.cond.i.preheader

for.cond.i.preheader:                             ; preds = %if.then.i, %land.lhs.true4.i.for.cond.i.preheader_crit_edge, %land.lhs.true.i.for.cond.i.preheader_crit_edge, %entry.for.cond.i.preheader_crit_edge
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %for.cond.i.preheader
  %name_node.0.in.i = phi ptr [ %name_node.0.i, %for.body.i.for.cond.i_crit_edge ], [ %arrayidx.i.i, %for.cond.i.preheader ]
  %2 = ptrtoint ptr %name_node.0.in.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %name_node.0.i = load volatile ptr, ptr %name_node.0.in.i, align 4
  %tobool13.not.i = icmp eq ptr %name_node.0.i, null
  br i1 %tobool13.not.i, label %for.cond.i.cond.end_crit_edge, label %for.body.i

for.cond.i.cond.end_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end

for.body.i:                                       ; preds = %for.cond.i
  %name14.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 3
  %3 = ptrtoint ptr %name14.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name14.i, align 4
  %call15.i = tail call i32 @strcmp(ptr noundef %4, ptr noundef %name) #38
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %cond.true, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

cond.true:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %dev = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i, i32 0, i32 2
  %5 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %for.cond.i.cond.end_crit_edge
  %cond = phi ptr [ %6, %cond.true ], [ null, %for.cond.i.cond.end_crit_edge ]
  ret ptr %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_name(ptr noundef %net, ptr noundef %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call ptr @dev_get_by_name_rcu(ptr noundef %net, ptr noundef %name)
  %tobool.not.i2 = icmp eq ptr %call, null
  br i1 %tobool.not.i2, label %rcu_read_lock.exit.dev_hold.exit_crit_edge, label %do.body1.i

rcu_read_lock.exit.dev_hold.exit_crit_edge:       ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_hold.exit

do.body1.i:                                       ; preds = %rcu_read_lock.exit
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 118
  %5 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pcpu_refcnt.i, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %13, %7
  %14 = inttoptr i32 %add.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add13.i = add i32 %16, 1
  store i32 %add13.i, ptr %14, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !1310

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %4) #35, !srcloc !1315
  br label %dev_hold.exit

dev_hold.exit:                                    ; preds = %do.end30.i, %rcu_read_lock.exit.dev_hold.exit_crit_edge
  %call.i3 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i3, label %dev_hold.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i6

dev_hold.exit.rcu_read_unlock.exit_crit_edge:     ; preds = %dev_hold.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i6:                                 ; preds = %dev_hold.exit
  %call1.i4 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4)
  %tobool.not.i5 = icmp eq i32 %call1.i4, 0
  br i1 %tobool.not.i5, label %land.lhs.true.i6.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i8

land.lhs.true.i6.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i6
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i8:                                ; preds = %land.lhs.true.i6
  %.b4.i7 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7, label %land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge, label %if.then.i9

land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i8
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i9:                                       ; preds = %land.lhs.true2.i8
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i9, %land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i6.rcu_read_unlock.exit_crit_edge, %dev_hold.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %18 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i10 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i.i10 to ptr
  %preempt_count.i.i.i.i11 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i.i.i11, align 4
  %sub.i.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i11, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  ret ptr %call
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @dev_hold(ptr noundef readonly %dev) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.if.end37_crit_edge, label %do.body1

entry.if.end37_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end37

do.body1:                                         ; preds = %entry
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 118
  %1 = ptrtoint ptr %pcpu_refcnt to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pcpu_refcnt, align 4
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %3
  %10 = inttoptr i32 %add to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %add13 = add i32 %12, 1
  store i32 %add13, ptr %10, align 4
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %13, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool24.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool24.not, label %if.then28, label %do.body1.do.end30_crit_edge, !prof !1310

do.body1.do.end30_crit_edge:                      ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end30

if.then28:                                        ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end30

do.end30:                                         ; preds = %if.then28, %do.body1.do.end30_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #35, !srcloc !1315
  br label %if.end37

if.end37:                                         ; preds = %do.end30, %entry.if.end37_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %call = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__dev_get_by_index(ptr nocapture noundef readonly %net, i32 noundef %ifindex) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_index_head.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %0 = ptrtoint ptr %dev_index_head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_index_head.i, align 16
  %and.i = and i32 %ifindex, 255
  %arrayidx.i = getelementptr %struct.hlist_head, ptr %1, i32 %and.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not = icmp eq ptr %3, null
  %add.ptr = getelementptr i8, ptr %3, i32 -664
  %tobool2.not2528 = icmp eq ptr %add.ptr, null
  %tobool2.not25 = or i1 %tobool.not, %tobool2.not2528
  br i1 %tobool2.not25, label %entry.cleanup_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %dev.026 = phi ptr [ %add.ptr10, %for.inc.for.body_crit_edge ], [ %add.ptr, %entry.for.body_crit_edge ]
  %ifindex3 = getelementptr inbounds %struct.net_device, ptr %dev.026, i32 0, i32 17
  %4 = ptrtoint ptr %ifindex3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ifindex3, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %ifindex)
  %cmp = icmp eq i32 %5, %ifindex
  br i1 %cmp, label %for.body.cleanup_crit_edge, label %for.inc

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %index_hlist = getelementptr inbounds %struct.net_device, ptr %dev.026, i32 0, i32 101
  %6 = ptrtoint ptr %index_hlist to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %index_hlist, align 8
  %tobool6.not = icmp eq ptr %7, null
  %add.ptr10 = getelementptr i8, ptr %7, i32 -664
  %tobool2.not29 = icmp eq ptr %add.ptr10, null
  %tobool2.not = or i1 %tobool6.not, %tobool2.not29
  br i1 %tobool2.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %for.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %dev.0.lcssa = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ], [ %dev.026, %for.body.cleanup_crit_edge ]
  ret ptr %dev.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_index_rcu(ptr nocapture noundef readonly %net, i32 noundef %ifindex) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_index_head.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %0 = ptrtoint ptr %dev_index_head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_index_head.i, align 16
  %and.i = and i32 %ifindex, 255
  %arrayidx.i = getelementptr %struct.hlist_head, ptr %1, i32 %and.i
  %call1 = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true4

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b40 = load i1, ptr @dev_get_by_index_rcu.__warned, align 1
  br i1 %.b40, label %land.lhs.true4.do.end_crit_edge, label %if.then

land.lhs.true4.do.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_get_by_index_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 803, ptr noundef nonnull @.str.4) #35
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true4.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %arrayidx.i, align 4
  %tobool11.not = icmp eq ptr %3, null
  %add.ptr = getelementptr i8, ptr %3, i32 -664
  %tobool13.not4447 = icmp eq ptr %add.ptr, null
  %tobool13.not44 = or i1 %tobool11.not, %tobool13.not4447
  br i1 %tobool13.not44, label %do.end.cleanup_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %dev.045 = phi ptr [ %add.ptr28, %for.inc.for.body_crit_edge ], [ %add.ptr, %do.end.for.body_crit_edge ]
  %ifindex14 = getelementptr inbounds %struct.net_device, ptr %dev.045, i32 0, i32 17
  %4 = ptrtoint ptr %ifindex14 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ifindex14, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %ifindex)
  %cmp = icmp eq i32 %5, %ifindex
  br i1 %cmp, label %for.body.cleanup_crit_edge, label %for.inc

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %index_hlist = getelementptr inbounds %struct.net_device, ptr %dev.045, i32 0, i32 101
  %6 = ptrtoint ptr %index_hlist to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %index_hlist, align 8
  %tobool24.not = icmp eq ptr %7, null
  %add.ptr28 = getelementptr i8, ptr %7, i32 -664
  %tobool13.not48 = icmp eq ptr %add.ptr28, null
  %tobool13.not = or i1 %tobool24.not, %tobool13.not48
  br i1 %tobool13.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %for.body.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %dev.0.lcssa = phi ptr [ null, %do.end.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ], [ %dev.045, %for.body.cleanup_crit_edge ]
  ret ptr %dev.0.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_index(ptr nocapture noundef readonly %net, i32 noundef %ifindex) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %dev_index_head.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %4 = ptrtoint ptr %dev_index_head.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev_index_head.i.i, align 16
  %and.i.i = and i32 %ifindex, 255
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %5, i32 %and.i.i
  %call1.i2 = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i2)
  %tobool.not.i3 = icmp eq i32 %call1.i2, 0
  br i1 %tobool.not.i3, label %land.lhs.true.i4, label %rcu_read_lock.exit.do.end.i_crit_edge

rcu_read_lock.exit.do.end.i_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true.i4:                                 ; preds = %rcu_read_lock.exit
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i4.do.end.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i4.do.end.i_crit_edge:              ; preds = %land.lhs.true.i4
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i4
  %.b40.i = load i1, ptr @dev_get_by_index_rcu.__warned, align 1
  br i1 %.b40.i, label %land.lhs.true4.i.do.end.i_crit_edge, label %if.then.i5

land.lhs.true4.i.do.end.i_crit_edge:              ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

if.then.i5:                                       ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_get_by_index_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 803, ptr noundef nonnull @.str.4) #35
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i5, %land.lhs.true4.i.do.end.i_crit_edge, %land.lhs.true.i4.do.end.i_crit_edge, %rcu_read_lock.exit.do.end.i_crit_edge
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %tobool11.not.i = icmp eq ptr %7, null
  %add.ptr.i = getelementptr i8, ptr %7, i32 -664
  %tobool13.not4447.i = icmp eq ptr %add.ptr.i, null
  %tobool13.not44.i = or i1 %tobool11.not.i, %tobool13.not4447.i
  br i1 %tobool13.not44.i, label %do.end.i.dev_hold.exit_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.dev_hold.exit_crit_edge:                 ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_hold.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %dev.045.i = phi ptr [ %add.ptr28.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i, %do.end.i.for.body.i_crit_edge ]
  %ifindex14.i = getelementptr inbounds %struct.net_device, ptr %dev.045.i, i32 0, i32 17
  %8 = ptrtoint ptr %ifindex14.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ifindex14.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %ifindex)
  %cmp.i = icmp eq i32 %9, %ifindex
  br i1 %cmp.i, label %do.body1.i, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %index_hlist.i = getelementptr inbounds %struct.net_device, ptr %dev.045.i, i32 0, i32 101
  %10 = ptrtoint ptr %index_hlist.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %index_hlist.i, align 8
  %tobool24.not.i = icmp eq ptr %11, null
  %add.ptr28.i = getelementptr i8, ptr %11, i32 -664
  %tobool13.not48.i = icmp eq ptr %add.ptr28.i, null
  %tobool13.not.i = or i1 %tobool24.not.i, %tobool13.not48.i
  br i1 %tobool13.not.i, label %for.inc.i.dev_hold.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.inc.i.dev_hold.exit_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_hold.exit

do.body1.i:                                       ; preds = %for.body.i
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %dev.045.i, i32 0, i32 118
  %13 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pcpu_refcnt.i, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i7 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i7 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %21, %15
  %22 = inttoptr i32 %add.i to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  %add13.i = add i32 %24, 1
  store i32 %add13.i, ptr %22, align 4
  %25 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i = and i32 %25, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i8 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i8, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !1310

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #35, !srcloc !1315
  br label %dev_hold.exit

dev_hold.exit:                                    ; preds = %do.end30.i, %for.inc.i.dev_hold.exit_crit_edge, %do.end.i.dev_hold.exit_crit_edge
  %dev.0.lcssa.i21 = phi ptr [ %dev.045.i, %do.end30.i ], [ null, %do.end.i.dev_hold.exit_crit_edge ], [ null, %for.inc.i.dev_hold.exit_crit_edge ]
  %call.i9 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i9, label %dev_hold.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i12

dev_hold.exit.rcu_read_unlock.exit_crit_edge:     ; preds = %dev_hold.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i12:                                ; preds = %dev_hold.exit
  %call1.i10 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i10)
  %tobool.not.i11 = icmp eq i32 %call1.i10, 0
  br i1 %tobool.not.i11, label %land.lhs.true.i12.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i14

land.lhs.true.i12.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i12
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i14:                               ; preds = %land.lhs.true.i12
  %.b4.i13 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i13, label %land.lhs.true2.i14.rcu_read_unlock.exit_crit_edge, label %if.then.i15

land.lhs.true2.i14.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i14
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i15:                                      ; preds = %land.lhs.true2.i14
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i15, %land.lhs.true2.i14.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i12.rcu_read_unlock.exit_crit_edge, %dev_hold.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i16 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i16 to ptr
  %preempt_count.i.i.i.i17 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i17 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i17, align 4
  %sub.i.i.i = add i32 %29, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i17, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  ret ptr %dev.0.lcssa.i21
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_get_by_napi_id(i32 noundef %napi_id) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b45 = load i1, ptr @dev_get_by_napi_id.__already_done, align 1
  br i1 %.b45, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_get_by_napi_id.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 849, i32 noundef 9, ptr noundef null) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %napi_id)
  %cmp = icmp ult i32 %napi_id, 5
  br i1 %cmp, label %if.end29.cleanup_crit_edge, label %if.end38

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end38:                                         ; preds = %if.end29
  %rem.i = and i32 %napi_id, 255
  %call.i = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end38.do.end.i_crit_edge

if.end38.do.end.i_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true.i:                                  ; preds = %if.end38
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.do.end.i_crit_edge, label %land.lhs.true3.i

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %.b39.i = load i1, ptr @napi_by_id.__warned, align 1
  br i1 %.b39.i, label %land.lhs.true3.i.do.end.i_crit_edge, label %if.then.i

land.lhs.true3.i.do.end.i_crit_edge:              ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

if.then.i:                                        ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @napi_by_id.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5976, ptr noundef nonnull @.str.4) #35
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i, %land.lhs.true3.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge, %if.end38.do.end.i_crit_edge
  %arrayidx.i = getelementptr [256 x %struct.hlist_head], ptr @napi_hash, i32 0, i32 %rem.i
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %arrayidx.i, align 4
  %tobool10.not.i = icmp eq ptr %1, null
  %add.ptr.i = getelementptr i8, ptr %1, i32 -208
  %tobool12.not4346.i = icmp eq ptr %add.ptr.i, null
  %tobool12.not43.i = or i1 %tobool10.not.i, %tobool12.not4346.i
  br i1 %tobool12.not43.i, label %do.end.i.cleanup_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.cleanup_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %napi.044.i = phi ptr [ %add.ptr27.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i, %do.end.i.for.body.i_crit_edge ]
  %napi_id13.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 15
  %2 = ptrtoint ptr %napi_id13.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %napi_id13.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %napi_id)
  %cmp.i = icmp eq i32 %3, %napi_id
  br i1 %cmp.i, label %cond.true, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %napi_hash_node.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 14
  %4 = ptrtoint ptr %napi_hash_node.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %napi_hash_node.i, align 8
  %tobool23.not.i = icmp eq ptr %5, null
  %add.ptr27.i = getelementptr i8, ptr %5, i32 -208
  %tobool12.not47.i = icmp eq ptr %add.ptr27.i, null
  %tobool12.not.i = or i1 %tobool23.not.i, %tobool12.not47.i
  br i1 %tobool12.not.i, label %for.inc.i.cleanup_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.inc.i.cleanup_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

cond.true:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %dev = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 7
  %6 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev, align 8
  br label %cleanup

cleanup:                                          ; preds = %cond.true, %for.inc.i.cleanup_crit_edge, %do.end.i.cleanup_crit_edge, %if.end29.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.end29.cleanup_crit_edge ], [ %7, %cond.true ], [ null, %do.end.i.cleanup_crit_edge ], [ null, %for.inc.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_get_name(ptr nocapture noundef readonly %net, ptr noundef %name, i32 noundef %ifindex) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_read(ptr noundef nonnull @devnet_rename_sem) #35
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %dev_index_head.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %4 = ptrtoint ptr %dev_index_head.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev_index_head.i.i, align 16
  %and.i.i = and i32 %ifindex, 255
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %5, i32 %and.i.i
  %call1.i4 = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4)
  %tobool.not.i5 = icmp eq i32 %call1.i4, 0
  br i1 %tobool.not.i5, label %land.lhs.true.i6, label %rcu_read_lock.exit.do.end.i_crit_edge

rcu_read_lock.exit.do.end.i_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true.i6:                                 ; preds = %rcu_read_lock.exit
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i6.do.end.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i6.do.end.i_crit_edge:              ; preds = %land.lhs.true.i6
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i6
  %.b40.i = load i1, ptr @dev_get_by_index_rcu.__warned, align 1
  br i1 %.b40.i, label %land.lhs.true4.i.do.end.i_crit_edge, label %if.then.i7

land.lhs.true4.i.do.end.i_crit_edge:              ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

if.then.i7:                                       ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_get_by_index_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 803, ptr noundef nonnull @.str.4) #35
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i7, %land.lhs.true4.i.do.end.i_crit_edge, %land.lhs.true.i6.do.end.i_crit_edge, %rcu_read_lock.exit.do.end.i_crit_edge
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %tobool11.not.i = icmp eq ptr %7, null
  %add.ptr.i = getelementptr i8, ptr %7, i32 -664
  %tobool13.not4447.i = icmp eq ptr %add.ptr.i, null
  %tobool13.not44.i = or i1 %tobool11.not.i, %tobool13.not4447.i
  br i1 %tobool13.not44.i, label %do.end.i.out_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.out_crit_edge:                           ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %dev.045.i = phi ptr [ %add.ptr28.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i, %do.end.i.for.body.i_crit_edge ]
  %ifindex14.i = getelementptr inbounds %struct.net_device, ptr %dev.045.i, i32 0, i32 17
  %8 = ptrtoint ptr %ifindex14.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ifindex14.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %ifindex)
  %cmp.i = icmp eq i32 %9, %ifindex
  br i1 %cmp.i, label %if.end, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %index_hlist.i = getelementptr inbounds %struct.net_device, ptr %dev.045.i, i32 0, i32 101
  %10 = ptrtoint ptr %index_hlist.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %index_hlist.i, align 8
  %tobool24.not.i = icmp eq ptr %11, null
  %add.ptr28.i = getelementptr i8, ptr %11, i32 -664
  %tobool13.not48.i = icmp eq ptr %add.ptr28.i, null
  %tobool13.not.i = or i1 %tobool24.not.i, %tobool13.not48.i
  br i1 %tobool13.not.i, label %for.inc.i.out_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.inc.i.out_crit_edge:                          ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end:                                           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %call2 = tail call ptr @strcpy(ptr noundef %name, ptr noundef nonnull %dev.045.i) #42
  br label %out

out:                                              ; preds = %if.end, %for.inc.i.out_crit_edge, %do.end.i.out_crit_edge
  %ret.0 = phi i32 [ 0, %if.end ], [ -19, %do.end.i.out_crit_edge ], [ -19, %for.inc.i.out_crit_edge ]
  %call.i8 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i8, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i11

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i11:                                ; preds = %out
  %call1.i9 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i9)
  %tobool.not.i10 = icmp eq i32 %call1.i9, 0
  br i1 %tobool.not.i10, label %land.lhs.true.i11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i13

land.lhs.true.i11.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i11
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i13:                               ; preds = %land.lhs.true.i11
  %.b4.i12 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i12, label %land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge, label %if.then.i14

land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i13
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i14:                                      ; preds = %land.lhs.true2.i13
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i14, %land.lhs.true2.i13.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i11.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %12 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i15 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i15 to ptr
  %preempt_count.i.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i.i16, align 4
  %sub.i.i.i = add i32 %15, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i16, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  tail call void @up_read(ptr noundef nonnull @devnet_rename_sem) #35
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_getbyhwaddr_rcu(ptr noundef %net, i16 noundef zeroext %type, ptr nocapture noundef readonly %ha) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b35 = load i1, ptr @dev_getbyhwaddr_rcu.__warned, align 1
  br i1 %.b35, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_getbyhwaddr_rcu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 908, ptr noundef nonnull @.str.4) #35
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %dev_base_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  %0 = ptrtoint ptr %dev_base_head to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn38 = load volatile ptr, ptr %dev_base_head, align 4
  %cmp.not39 = icmp eq ptr %.pn38, %dev_base_head
  br i1 %cmp.not39, label %do.end.cleanup_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn40 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn38, %do.end.for.body_crit_edge ]
  %type10 = getelementptr i8, ptr %.pn40, i32 168
  %1 = ptrtoint ptr %type10 to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %type10, align 16
  call void @__sanitizer_cov_trace_cmp2(i16 %2, i16 %type)
  %cmp12 = icmp eq i16 %2, %type
  br i1 %cmp12, label %land.lhs.true14, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

land.lhs.true14:                                  ; preds = %for.body
  %dev_addr = getelementptr i8, ptr %.pn40, i32 536
  %3 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev_addr, align 64
  %addr_len = getelementptr i8, ptr %.pn40, i32 357
  %5 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %addr_len, align 1
  %conv15 = zext i8 %6 to i32
  %bcmp = tail call i32 @bcmp(ptr %4, ptr %ha, i32 %conv15) #42
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool17.not = icmp eq i32 %bcmp, 0
  br i1 %tobool17.not, label %cleanup.split.loop.exit36, label %land.lhs.true14.for.inc_crit_edge

land.lhs.true14.for.inc_crit_edge:                ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true14.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %7 = ptrtoint ptr %.pn40 to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn = load volatile ptr, ptr %.pn40, align 4
  %cmp.not = icmp eq ptr %.pn, %dev_base_head
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

cleanup.split.loop.exit36:                        ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #37
  %dev.0.le = getelementptr i8, ptr %.pn40, i32 -40
  br label %cleanup

cleanup:                                          ; preds = %cleanup.split.loop.exit36, %for.inc.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %retval.0 = phi ptr [ %dev.0.le, %cleanup.split.loop.exit36 ], [ null, %do.end.cleanup_crit_edge ], [ null, %for.inc.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_getfirstbyhwtype(ptr noundef %net, i16 noundef zeroext %type) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b30 = load i1, ptr @dev_getfirstbyhwtype.__warned, align 1
  br i1 %.b30, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_getfirstbyhwtype.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 922, ptr noundef nonnull @.str.4) #35
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %dev_base_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %do.end
  %.pn.in = phi ptr [ %dev_base_head, %do.end ], [ %.pn, %for.body.for.cond_crit_edge ]
  %4 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn = load volatile ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %dev_base_head
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %for.cond
  %type10 = getelementptr i8, ptr %.pn, i32 168
  %5 = ptrtoint ptr %type10 to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %type10, align 16
  %cmp12 = icmp eq i16 %6, %type
  br i1 %cmp12, label %if.then14, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond

if.then14:                                        ; preds = %for.body
  %dev.0.le = getelementptr i8, ptr %.pn, i32 -40
  %tobool.not.i31 = icmp eq ptr %dev.0.le, null
  br i1 %tobool.not.i31, label %if.then14.for.end_crit_edge, label %do.body1.i

if.then14.for.end_crit_edge:                      ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

do.body1.i:                                       ; preds = %if.then14
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i = getelementptr i8, ptr %.pn, i32 940
  %8 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pcpu_refcnt.i, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %16, %10
  %17 = inttoptr i32 %add.i to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add13.i = add i32 %19, 1
  store i32 %add13.i, ptr %17, align 4
  %20 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i = and i32 %20, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !1310

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #35, !srcloc !1315
  br label %for.end

for.end:                                          ; preds = %do.end30.i, %if.then14.for.end_crit_edge, %for.cond.for.end_crit_edge
  %ret.0 = phi ptr [ null, %if.then14.for.end_crit_edge ], [ %dev.0.le, %do.end30.i ], [ null, %for.cond.for.end_crit_edge ]
  %call.i32 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i32, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i35

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i35:                                ; preds = %for.end
  %call1.i33 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i33)
  %tobool.not.i34 = icmp eq i32 %call1.i33, 0
  br i1 %tobool.not.i34, label %land.lhs.true.i35.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i37

land.lhs.true.i35.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i35
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i37:                               ; preds = %land.lhs.true.i35
  %.b4.i36 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i36, label %land.lhs.true2.i37.rcu_read_unlock.exit_crit_edge, label %if.then.i38

land.lhs.true2.i37.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i37
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i38:                                      ; preds = %land.lhs.true2.i37
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i38, %land.lhs.true2.i37.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i35.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %21 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i39 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i.i39 to ptr
  %preempt_count.i.i.i.i40 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i.i.i40 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i.i.i40, align 4
  %sub.i.i.i = add i32 %24, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i40, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  ret ptr %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__dev_get_by_flags(ptr noundef readonly %net, i16 noundef zeroext %if_flags, i16 noundef zeroext %mask) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b57 = load i1, ptr @__dev_get_by_flags.__already_done, align 1
  br i1 %.b57, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__dev_get_by_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 949, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 949) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %dev_base_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  %conv = zext i16 %if_flags to i32
  %conv41 = zext i16 %mask to i32
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end29
  %.pn.in = phi ptr [ %dev_base_head, %if.end29 ], [ %.pn, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %dev_base_head
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %for.cond
  %flags = getelementptr i8, ptr %.pn, i32 64
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 8
  %xor = xor i32 %2, %conv
  %and = and i32 %xor, %conv41
  %cmp42 = icmp eq i32 %and, 0
  br i1 %cmp42, label %for.end.split.loop.exit, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond

for.end.split.loop.exit:                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  %dev.0.le = getelementptr i8, ptr %.pn, i32 -40
  br label %for.end

for.end:                                          ; preds = %for.end.split.loop.exit, %for.cond.for.end_crit_edge
  %ret.0 = phi ptr [ %dev.0.le, %for.end.split.loop.exit ], [ null, %for.cond.for.end_crit_edge ]
  ret ptr %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rtnl_is_locked() local_unnamed_addr #4

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @dev_valid_name(ptr nocapture noundef readonly %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp = icmp eq i8 %1, 0
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end:                                           ; preds = %entry
  %call = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #42
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %call)
  %cmp2 = icmp eq i32 %call, 16
  br i1 %cmp2, label %if.end.return_crit_edge, label %if.end5

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end5:                                          ; preds = %if.end
  %call6 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(2) @.str.6) #42
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end5.return_crit_edge, label %lor.lhs.false

if.end5.return_crit_edge:                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

lor.lhs.false:                                    ; preds = %if.end5
  %call7 = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(3) @.str.7) #42
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %lor.lhs.false.return_crit_edge, label %lor.lhs.false.while.cond_crit_edge

lor.lhs.false.while.cond_crit_edge:               ; preds = %lor.lhs.false
  br label %while.cond

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

while.cond:                                       ; preds = %lor.lhs.false19.while.cond_crit_edge, %lor.lhs.false.while.cond_crit_edge
  %name.addr.0 = phi ptr [ %incdec.ptr, %lor.lhs.false19.while.cond_crit_edge ], [ %name, %lor.lhs.false.while.cond_crit_edge ]
  %2 = ptrtoint ptr %name.addr.0 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %name.addr.0, align 1
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values)
  switch i8 %3, label %lor.lhs.false19 [
    i8 0, label %while.cond.return.loopexit_crit_edge
    i8 47, label %while.cond.return_crit_edge
    i8 58, label %while.cond.return_crit_edge36
  ]

while.cond.return_crit_edge36:                    ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

while.cond.return_crit_edge:                      ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

while.cond.return.loopexit_crit_edge:             ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %return.loopexit

lor.lhs.false19:                                  ; preds = %while.cond
  %conv12 = zext i8 %3 to i32
  %arrayidx = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %conv12
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 1
  %7 = and i8 %6, 32
  %cmp22.not = icmp eq i8 %7, 0
  %incdec.ptr = getelementptr i8, ptr %name.addr.0, i32 1
  br i1 %cmp22.not, label %lor.lhs.false19.while.cond_crit_edge, label %lor.lhs.false19.return.loopexit_crit_edge

lor.lhs.false19.return.loopexit_crit_edge:        ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #37
  br label %return.loopexit

lor.lhs.false19.while.cond_crit_edge:             ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond

return.loopexit:                                  ; preds = %lor.lhs.false19.return.loopexit_crit_edge, %while.cond.return.loopexit_crit_edge
  %retval.0.ph = phi i1 [ true, %while.cond.return.loopexit_crit_edge ], [ false, %lor.lhs.false19.return.loopexit_crit_edge ]
  br label %return

return:                                           ; preds = %return.loopexit, %while.cond.return_crit_edge, %while.cond.return_crit_edge36, %lor.lhs.false.return_crit_edge, %if.end5.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %entry.return_crit_edge ], [ false, %if.end.return_crit_edge ], [ false, %lor.lhs.false.return_crit_edge ], [ false, %if.end5.return_crit_edge ], [ %retval.0.ph, %return.loopexit ], [ false, %while.cond.return_crit_edge ], [ false, %while.cond.return_crit_edge36 ]
  ret i1 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strnlen(ptr nocapture noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_alloc_name(ptr noundef %dev, ptr noundef %name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  %call1 = tail call fastcc i32 @dev_alloc_name_ns(ptr noundef %1, ptr noundef %dev, ptr noundef %name)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @dev_alloc_name_ns(ptr noundef %net, ptr noundef %dev, ptr noundef readonly %name) unnamed_addr #1 align 64 {
entry:
  %i.i = alloca i32, align 4
  %buf = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %buf) #35
  %tobool.not = icmp eq ptr %net, null
  %0 = call ptr @memset(ptr %buf, i32 255, i32 16)
  br i1 %tobool.not, label %do.body4, label %do.end9, !prof !1310

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1075, 0\0A.popsection", ""() #35, !srcloc !1317
  unreachable

do.end9:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i.i) #35
  %1 = ptrtoint ptr %i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %i.i, align 4
  %2 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %cmp.i.i = icmp eq i8 %3, 0
  br i1 %cmp.i.i, label %do.end9.__dev_alloc_name.exit.thread_crit_edge, label %if.end.i.i

do.end9.__dev_alloc_name.exit.thread_crit_edge:   ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

if.end.i.i:                                       ; preds = %do.end9
  %call.i.i = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %call.i.i)
  %cmp2.i.i = icmp eq i32 %call.i.i, 16
  br i1 %cmp2.i.i, label %if.end.i.i.__dev_alloc_name.exit.thread_crit_edge, label %if.end5.i.i

if.end.i.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

if.end5.i.i:                                      ; preds = %if.end.i.i
  %call6.i.i = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(2) @.str.6) #38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool.not.i.i, label %if.end5.i.i.__dev_alloc_name.exit.thread_crit_edge, label %lor.lhs.false.i.i

if.end5.i.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

lor.lhs.false.i.i:                                ; preds = %if.end5.i.i
  %call7.i.i = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(3) @.str.7) #38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %lor.lhs.false.i.i.__dev_alloc_name.exit.thread_crit_edge, label %lor.lhs.false.i.i.while.cond.i.i_crit_edge

lor.lhs.false.i.i.while.cond.i.i_crit_edge:       ; preds = %lor.lhs.false.i.i
  br label %while.cond.i.i

lor.lhs.false.i.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

while.cond.i.i:                                   ; preds = %lor.lhs.false19.i.i.while.cond.i.i_crit_edge, %lor.lhs.false.i.i.while.cond.i.i_crit_edge
  %name.addr.0.i.i = phi ptr [ %incdec.ptr.i.i, %lor.lhs.false19.i.i.while.cond.i.i_crit_edge ], [ %name, %lor.lhs.false.i.i.while.cond.i.i_crit_edge ]
  %4 = ptrtoint ptr %name.addr.0.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %name.addr.0.i.i, align 1
  %6 = zext i8 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.293)
  switch i8 %5, label %lor.lhs.false19.i.i [
    i8 0, label %if.end.i
    i8 47, label %while.cond.i.i.__dev_alloc_name.exit.thread_crit_edge
    i8 58, label %while.cond.i.i.__dev_alloc_name.exit.thread_crit_edge26
  ]

while.cond.i.i.__dev_alloc_name.exit.thread_crit_edge26: ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

while.cond.i.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %while.cond.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

lor.lhs.false19.i.i:                              ; preds = %while.cond.i.i
  %conv12.i.i = zext i8 %5 to i32
  %arrayidx.i.i = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %conv12.i.i
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx.i.i, align 1
  %9 = and i8 %8, 32
  %cmp22.not.i.i = icmp eq i8 %9, 0
  %incdec.ptr.i.i = getelementptr i8, ptr %name.addr.0.i.i, i32 1
  br i1 %cmp22.not.i.i, label %lor.lhs.false19.i.i.while.cond.i.i_crit_edge, label %lor.lhs.false19.i.i.__dev_alloc_name.exit.thread_crit_edge

lor.lhs.false19.i.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %lor.lhs.false19.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

lor.lhs.false19.i.i.while.cond.i.i_crit_edge:     ; preds = %lor.lhs.false19.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond.i.i

if.end.i:                                         ; preds = %while.cond.i.i
  %call1.i = tail call ptr @strchr(ptr noundef %name, i32 noundef 37) #35
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %if.end.i.if.end79.i_crit_edge, label %if.then2.i

if.end.i.if.end79.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end79.i

if.then2.i:                                       ; preds = %if.end.i
  %arrayidx.i = getelementptr i8, ptr %call1.i, i32 1
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 100, i8 %11)
  %cmp.not.i = icmp eq i8 %11, 100
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.then2.i.__dev_alloc_name.exit.thread_crit_edge

if.then2.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

lor.lhs.false.i:                                  ; preds = %if.then2.i
  %add.ptr.i = getelementptr i8, ptr %call1.i, i32 2
  %call4.i = tail call ptr @strchr(ptr noundef %add.ptr.i, i32 noundef 37) #35
  %tobool5.not.i = icmp eq ptr %call4.i, null
  br i1 %tobool5.not.i, label %if.end7.i, label %lor.lhs.false.i.__dev_alloc_name.exit.thread_crit_edge

lor.lhs.false.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

if.end7.i:                                        ; preds = %lor.lhs.false.i
  %call8.i = tail call i32 @get_zeroed_page(i32 noundef 2592) #35
  %12 = inttoptr i32 %call8.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.end7.i.__dev_alloc_name.exit.thread_crit_edge, label %if.end11.i

if.end7.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

if.end11.i:                                       ; preds = %if.end7.i
  %dev_base_head.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  %13 = ptrtoint ptr %dev_base_head.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn129.i = load ptr, ptr %dev_base_head.i, align 4
  %cmp14.not131.i = icmp eq ptr %.pn129.i, %dev_base_head.i
  br i1 %cmp14.not131.i, label %if.end11.i.for.end77.i_crit_edge, label %if.end11.i.for.body.i_crit_edge

if.end11.i.for.body.i_crit_edge:                  ; preds = %if.end11.i
  br label %for.body.i

if.end11.i.for.end77.i_crit_edge:                 ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end77.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %if.end11.i.for.body.i_crit_edge
  %.pn132.i = phi ptr [ %.pn.i, %cleanup.i.for.body.i_crit_edge ], [ %.pn129.i, %if.end11.i.for.body.i_crit_edge ]
  %d.0133.i = getelementptr i8, ptr %.pn132.i, i32 -40
  %name_node17.i = getelementptr i8, ptr %.pn132.i, i32 -24
  %14 = ptrtoint ptr %name_node17.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %name_node17.i, align 16
  %list.i = getelementptr inbounds %struct.netdev_name_node, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn118125.i = load ptr, ptr %list.i, align 4
  %cmp25.not127.i = icmp eq ptr %.pn118125.i, %list.i
  br i1 %cmp25.not127.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body28.i_crit_edge

for.body.i.for.body28.i_crit_edge:                ; preds = %for.body.i
  br label %for.body28.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.body28.i:                                     ; preds = %for.inc.i.for.body28.i_crit_edge, %for.body.i.for.body28.i_crit_edge
  %.pn118128.i = phi ptr [ %.pn118.i, %for.inc.i.for.body28.i_crit_edge ], [ %.pn118125.i, %for.body.i.for.body28.i_crit_edge ]
  %name29.i = getelementptr i8, ptr %.pn118128.i, i32 12
  %17 = ptrtoint ptr %name29.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %name29.i, align 4
  %call30.i = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %18, ptr noundef %name, ptr noundef nonnull %i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i)
  %tobool31.not.i = icmp eq i32 %call30.i, 0
  br i1 %tobool31.not.i, label %for.body28.i.for.inc.i_crit_edge, label %if.end33.i

for.body28.i.for.inc.i_crit_edge:                 ; preds = %for.body28.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.end33.i:                                       ; preds = %for.body28.i
  %19 = ptrtoint ptr %i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %20)
  %21 = icmp ugt i32 %20, 32767
  br i1 %21, label %if.end33.i.for.inc.i_crit_edge, label %if.end40.i

if.end33.i.for.inc.i_crit_edge:                   ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.end40.i:                                       ; preds = %if.end33.i
  %call41.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %buf, i32 noundef 16, ptr noundef %name, i32 noundef %20) #35
  %22 = ptrtoint ptr %name29.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %name29.i, align 4
  %call43.i = call i32 @strncmp(ptr noundef nonnull %buf, ptr noundef %23, i32 noundef 16) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43.i)
  %tobool44.not.i = icmp eq i32 %call43.i, 0
  br i1 %tobool44.not.i, label %if.then45.i, label %if.end40.i.for.inc.i_crit_edge

if.end40.i.for.inc.i_crit_edge:                   ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.then45.i:                                      ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  %24 = ptrtoint ptr %i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %i.i, align 4
  call void @_set_bit(i32 noundef %25, ptr noundef nonnull %12) #35
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then45.i, %if.end40.i.for.inc.i_crit_edge, %if.end33.i.for.inc.i_crit_edge, %for.body28.i.for.inc.i_crit_edge
  %26 = ptrtoint ptr %.pn118128.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn118.i = load ptr, ptr %.pn118128.i, align 4
  %27 = ptrtoint ptr %name_node17.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %name_node17.i, align 16
  %list24.i = getelementptr inbounds %struct.netdev_name_node, ptr %28, i32 0, i32 1
  %cmp25.not.i = icmp eq ptr %.pn118.i, %list24.i
  br i1 %cmp25.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body28.i_crit_edge

for.inc.i.for.body28.i_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body28.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge
  %call53.i = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %d.0133.i, ptr noundef %name, ptr noundef nonnull %i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53.i)
  %tobool54.not.i = icmp eq i32 %call53.i, 0
  br i1 %tobool54.not.i, label %for.end.i.cleanup.i_crit_edge, label %if.end56.i

for.end.i.cleanup.i_crit_edge:                    ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.i

if.end56.i:                                       ; preds = %for.end.i
  %29 = ptrtoint ptr %i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %30)
  %31 = icmp ugt i32 %30, 32767
  br i1 %31, label %if.end56.i.cleanup.i_crit_edge, label %if.end63.i

if.end56.i.cleanup.i_crit_edge:                   ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.i

if.end63.i:                                       ; preds = %if.end56.i
  %call64.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %buf, i32 noundef 16, ptr noundef %name, i32 noundef %30) #35
  %call67.i = call i32 @strncmp(ptr noundef nonnull %buf, ptr noundef %d.0133.i, i32 noundef 16) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call67.i)
  %tobool68.not.i = icmp eq i32 %call67.i, 0
  br i1 %tobool68.not.i, label %if.then69.i, label %if.end63.i.cleanup.i_crit_edge

if.end63.i.cleanup.i_crit_edge:                   ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.i

if.then69.i:                                      ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #37
  %32 = ptrtoint ptr %i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %i.i, align 4
  call void @_set_bit(i32 noundef %33, ptr noundef nonnull %12) #35
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then69.i, %if.end63.i.cleanup.i_crit_edge, %if.end56.i.cleanup.i_crit_edge, %for.end.i.cleanup.i_crit_edge
  %34 = ptrtoint ptr %.pn132.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pn.i = load ptr, ptr %.pn132.i, align 4
  %cmp14.not.i = icmp eq ptr %.pn.i, %dev_base_head.i
  br i1 %cmp14.not.i, label %cleanup.i.for.end77.i_crit_edge, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

cleanup.i.for.end77.i_crit_edge:                  ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end77.i

for.end77.i:                                      ; preds = %cleanup.i.for.end77.i_crit_edge, %if.end11.i.for.end77.i_crit_edge
  %call78.i = call i32 @_find_first_zero_bit_be(ptr noundef nonnull %12, i32 noundef 32768) #35
  %35 = ptrtoint ptr %i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %call78.i, ptr %i.i, align 4
  call void @free_pages(i32 noundef %call8.i, i32 noundef 0) #35
  br label %if.end79.i

if.end79.i:                                       ; preds = %for.end77.i, %if.end.i.if.end79.i_crit_edge
  %36 = ptrtoint ptr %i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %i.i, align 4
  %call80.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %buf, i32 noundef 16, ptr noundef %name, i32 noundef %37) #35
  %call.i.i.i.i = call i32 @strnlen(ptr noundef nonnull %buf, i32 noundef 16) #38
  %call1.i.i.i.i = call i32 @full_name_hash(ptr noundef nonnull %net, ptr noundef nonnull %buf, i32 noundef %call.i.i.i.i) #39
  %dev_name_head.i.i.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %38 = ptrtoint ptr %dev_name_head.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %dev_name_head.i.i.i.i, align 4
  %mul.i.i.i.i.i.i = mul i32 %call1.i.i.i.i, 1640531527
  %shr.i.i.i.i.i = lshr i32 %mul.i.i.i.i.i.i, 24
  %arrayidx.i.i.i.i = getelementptr %struct.hlist_head, ptr %39, i32 %shr.i.i.i.i.i
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.end79.i
  %name_node.0.in.i.i.i = phi ptr [ %arrayidx.i.i.i.i, %if.end79.i ], [ %name_node.0.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %40 = ptrtoint ptr %name_node.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %name_node.0.i.i.i = load ptr, ptr %name_node.0.in.i.i.i, align 4
  %tobool2.not.i.i.i = icmp eq ptr %name_node.0.i.i.i, null
  br i1 %tobool2.not.i.i.i, label %__dev_alloc_name.exit, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %name3.i.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i.i.i, i32 0, i32 3
  %41 = ptrtoint ptr %name3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %name3.i.i.i, align 4
  %call4.i.i.i = call i32 @strcmp(ptr noundef %42, ptr noundef nonnull %buf) #38
  %tobool5.not.i.i.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %for.body.i.i.i.__dev_alloc_name.exit.thread_crit_edge, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.i.i

for.body.i.i.i.__dev_alloc_name.exit.thread_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_alloc_name.exit.thread

__dev_alloc_name.exit.thread:                     ; preds = %for.body.i.i.i.__dev_alloc_name.exit.thread_crit_edge, %if.end7.i.__dev_alloc_name.exit.thread_crit_edge, %lor.lhs.false.i.__dev_alloc_name.exit.thread_crit_edge, %if.then2.i.__dev_alloc_name.exit.thread_crit_edge, %lor.lhs.false19.i.i.__dev_alloc_name.exit.thread_crit_edge, %while.cond.i.i.__dev_alloc_name.exit.thread_crit_edge, %while.cond.i.i.__dev_alloc_name.exit.thread_crit_edge26, %lor.lhs.false.i.i.__dev_alloc_name.exit.thread_crit_edge, %if.end5.i.i.__dev_alloc_name.exit.thread_crit_edge, %if.end.i.i.__dev_alloc_name.exit.thread_crit_edge, %do.end9.__dev_alloc_name.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ -22, %if.end5.i.i.__dev_alloc_name.exit.thread_crit_edge ], [ -22, %lor.lhs.false.i.i.__dev_alloc_name.exit.thread_crit_edge ], [ -22, %if.end.i.i.__dev_alloc_name.exit.thread_crit_edge ], [ -22, %do.end9.__dev_alloc_name.exit.thread_crit_edge ], [ -12, %if.end7.i.__dev_alloc_name.exit.thread_crit_edge ], [ -22, %if.then2.i.__dev_alloc_name.exit.thread_crit_edge ], [ -22, %lor.lhs.false.i.__dev_alloc_name.exit.thread_crit_edge ], [ -23, %for.body.i.i.i.__dev_alloc_name.exit.thread_crit_edge ], [ -22, %while.cond.i.i.__dev_alloc_name.exit.thread_crit_edge ], [ -22, %while.cond.i.i.__dev_alloc_name.exit.thread_crit_edge26 ], [ -22, %lor.lhs.false19.i.i.__dev_alloc_name.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i.i) #35
  br label %if.end15

__dev_alloc_name.exit:                            ; preds = %for.cond.i.i.i
  %43 = ptrtoint ptr %i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %i.i, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %44)
  %cmp = icmp sgt i32 %44, -1
  br i1 %cmp, label %if.then10, label %__dev_alloc_name.exit.if.end15_crit_edge

__dev_alloc_name.exit.if.end15_crit_edge:         ; preds = %__dev_alloc_name.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15

if.then10:                                        ; preds = %__dev_alloc_name.exit
  call void @__sanitizer_cov_trace_pc() #37
  %call14 = call i32 @strlcpy(ptr noundef %dev, ptr noundef nonnull %buf, i32 noundef 16) #35
  br label %if.end15

if.end15:                                         ; preds = %if.then10, %__dev_alloc_name.exit.if.end15_crit_edge, %__dev_alloc_name.exit.thread
  %retval.0.i20 = phi i32 [ %retval.0.i.ph, %__dev_alloc_name.exit.thread ], [ %44, %if.then10 ], [ %44, %__dev_alloc_name.exit.if.end15_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %buf) #35
  ret i32 %retval.0.i20
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_change_name(ptr noundef %dev, ptr noundef %newname) local_unnamed_addr #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  %oldname = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %oldname) #35
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b156 = load i1, ptr @dev_change_name.__already_done, align 1
  br i1 %.b156, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_change_name.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1136, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1136) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  %tobool39.not = icmp eq ptr %1, null
  br i1 %tobool39.not, label %do.body49, label %do.end57, !prof !1310

do.body49:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1137, 0\0A.popsection", ""() #35, !srcloc !1318
  unreachable

do.end57:                                         ; preds = %if.end29
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 8
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool59.not = icmp eq i32 %and, 0
  br i1 %tobool59.not, label %do.end57.if.end71_crit_edge, label %land.lhs.true

do.end57.if.end71_crit_edge:                      ; preds = %do.end57
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end71

land.lhs.true:                                    ; preds = %do.end57
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 15
  %4 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %priv_flags, align 16
  %and60 = and i64 %5, 1073741824
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and60)
  %tobool61.not = icmp eq i64 %and60, 0
  br i1 %tobool61.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end71_crit_edge, !prof !1311

land.lhs.true.if.end71_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end71

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end71:                                         ; preds = %land.lhs.true.if.end71_crit_edge, %do.end57.if.end71_crit_edge
  tail call void @down_write(ptr noundef nonnull @devnet_rename_sem) #35
  %call72 = tail call i32 @strncmp(ptr noundef %newname, ptr noundef %dev, i32 noundef 16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %cmp = icmp eq i32 %call72, 0
  br i1 %cmp, label %if.then73, label %if.end74

if.then73:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @up_write(ptr noundef nonnull @devnet_rename_sem) #35
  br label %cleanup

if.end74:                                         ; preds = %if.end71
  %6 = call ptr @memcpy(ptr %oldname, ptr %dev, i32 16)
  %call78 = tail call fastcc i32 @dev_get_valid_name(ptr noundef nonnull %1, ptr noundef %dev, ptr noundef %newname)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %cmp79 = icmp slt i32 %call78, 0
  br i1 %cmp79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @up_write(ptr noundef nonnull @devnet_rename_sem) #35
  br label %cleanup

if.end81:                                         ; preds = %if.end74
  %7 = ptrtoint ptr %oldname to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %oldname, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool82.not = icmp eq i8 %8, 0
  br i1 %tobool82.not, label %if.end81.if.end89_crit_edge, label %land.lhs.true83

if.end81.if.end89_crit_edge:                      ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end89

land.lhs.true83:                                  ; preds = %if.end81
  %call85 = call ptr @strchr(ptr noundef nonnull %oldname, i32 noundef 37)
  %tobool86.not = icmp eq ptr %call85, null
  br i1 %tobool86.not, label %if.then87, label %land.lhs.true83.if.end89_crit_edge

land.lhs.true83.if.end89_crit_edge:               ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end89

if.then87:                                        ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, ptr, ...) @netdev_info(ptr noundef %dev, ptr noundef nonnull @.str.8, ptr noundef nonnull %oldname) #43
  br label %if.end89

if.end89:                                         ; preds = %if.then87, %land.lhs.true83.if.end89_crit_edge, %if.end81.if.end89_crit_edge
  %name_assign_type = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 34
  %9 = ptrtoint ptr %name_assign_type to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %name_assign_type, align 1
  %dev91 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  store i8 4, ptr %name_assign_type, align 1
  %call94166 = call i32 @device_rename(ptr noundef %dev91, ptr noundef %dev) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94166)
  %tobool95.not167 = icmp eq i32 %call94166, 0
  br i1 %tobool95.not167, label %if.end101.lr.ph, label %if.end89.if.then96_crit_edge

if.end89.if.then96_crit_edge:                     ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then96

if.end101.lr.ph:                                  ; preds = %if.end89
  %name_node = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 1
  %dev_name_head.i.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 23
  %11 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  br label %if.end101

if.then96:                                        ; preds = %if.then110.if.then96_crit_edge, %if.end89.if.then96_crit_edge
  %old_assign_type.0.lcssa = phi i8 [ %10, %if.end89.if.then96_crit_edge ], [ 4, %if.then110.if.then96_crit_edge ]
  %call94.lcssa = phi i32 [ %call94166, %if.end89.if.then96_crit_edge ], [ %call94, %if.then110.if.then96_crit_edge ]
  %12 = call ptr @memcpy(ptr %dev, ptr %oldname, i32 16)
  %13 = ptrtoint ptr %name_assign_type to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %old_assign_type.0.lcssa, ptr %name_assign_type, align 1
  call void @up_write(ptr noundef nonnull @devnet_rename_sem) #35
  br label %cleanup

if.end101:                                        ; preds = %if.then110.if.end101_crit_edge, %if.end101.lr.ph
  %old_assign_type.0169 = phi i8 [ %10, %if.end101.lr.ph ], [ 4, %if.then110.if.end101_crit_edge ]
  %err.0168 = phi i32 [ %call78, %if.end101.lr.ph ], [ %spec.select.i, %if.then110.if.end101_crit_edge ]
  call void @up_write(ptr noundef nonnull @devnet_rename_sem) #35
  call void @netdev_adjacent_rename_links(ptr noundef %dev, ptr noundef nonnull %oldname)
  call void @_raw_write_lock(ptr noundef nonnull @dev_base_lock) #35
  %14 = ptrtoint ptr %name_node to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %name_node, align 16
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %pprev2.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %18 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pprev2.i.i.i, align 4
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %17, ptr %19, align 4
  %tobool.not.i.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i.i, label %if.end101.netdev_name_node_del.exit_crit_edge, label %do.body13.i.i.i

if.end101.netdev_name_node_del.exit_crit_edge:    ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_del.exit

do.body13.i.i.i:                                  ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #37
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %17, i32 0, i32 1
  %21 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %pprev14.i.i.i, align 4
  br label %netdev_name_node_del.exit

netdev_name_node_del.exit:                        ; preds = %do.body13.i.i.i, %if.end101.netdev_name_node_del.exit_crit_edge
  %22 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i, align 4
  call void @_raw_write_unlock(ptr noundef nonnull @dev_base_lock) #35
  call void @synchronize_rcu() #35
  call void @_raw_write_lock(ptr noundef nonnull @dev_base_lock) #35
  %23 = ptrtoint ptr %name_node to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %name_node, align 16
  %name.i = getelementptr inbounds %struct.netdev_name_node, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %name.i, align 4
  %call.i.i = call i32 @strnlen(ptr noundef %26, i32 noundef 16) #38
  %call1.i.i = call i32 @full_name_hash(ptr noundef nonnull %1, ptr noundef %26, i32 noundef %call.i.i) #39
  %27 = ptrtoint ptr %dev_name_head.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %dev_name_head.i.i, align 4
  %mul.i.i.i.i = mul i32 %call1.i.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %28, i32 %shr.i.i.i
  %29 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.i.i, align 4
  %31 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %30, ptr %24, align 4
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %24, i32 0, i32 1
  %32 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %arrayidx.i.i, ptr %pprev.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1308
  %33 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %24, ptr %arrayidx.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %30, null
  br i1 %tobool.not.i.i, label %netdev_name_node_del.exit.netdev_name_node_add.exit_crit_edge, label %do.body49.i.i

netdev_name_node_del.exit.netdev_name_node_add.exit_crit_edge: ; preds = %netdev_name_node_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_add.exit

do.body49.i.i:                                    ; preds = %netdev_name_node_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  %pprev51.i.i = getelementptr inbounds %struct.hlist_node, ptr %30, i32 0, i32 1
  %34 = ptrtoint ptr %pprev51.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %24, ptr %pprev51.i.i, align 4
  br label %netdev_name_node_add.exit

netdev_name_node_add.exit:                        ; preds = %do.body49.i.i, %netdev_name_node_del.exit.netdev_name_node_add.exit_crit_edge
  call void @_raw_write_unlock(ptr noundef nonnull @dev_base_lock) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %35 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %dev, ptr %info.i.i, align 4
  %36 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %11, align 4
  %37 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %nd_net.i, align 4
  %call1.i.i.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i158 = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i158, label %land.rhs.i.i.i, label %netdev_name_node_add.exit.if.end30.i.i.i_crit_edge

netdev_name_node_add.exit.if.end30.i.i.i_crit_edge: ; preds = %netdev_name_node_add.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %netdev_name_node_add.exit
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %netdev_name_node_add.exit.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %38, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 11, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 11, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %call42.i.i.i, %if.end41.i.i.i ], [ %call38.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  %and.i = and i32 %retval.0.i.i.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i = icmp sgt i32 %and.i, 1
  %sub.i = sub i32 1, %and.i
  %spec.select.i = select i1 %cmp.i, i32 %sub.i, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i)
  %tobool106.not = icmp eq i32 %spec.select.i, 0
  br i1 %tobool106.not, label %call_netdevice_notifiers.exit.cleanup_crit_edge, label %if.then107

call_netdevice_notifiers.exit.cleanup_crit_edge:  ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then107:                                       ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %err.0168)
  %cmp108 = icmp sgt i32 %err.0168, -1
  br i1 %cmp108, label %if.then110, label %if.else

if.then110:                                       ; preds = %if.then107
  call void @down_write(ptr noundef nonnull @devnet_rename_sem) #35
  %39 = call ptr @memcpy(ptr %dev, ptr %oldname, i32 16)
  %40 = call ptr @memcpy(ptr %oldname, ptr %newname, i32 16)
  %41 = ptrtoint ptr %name_assign_type to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %old_assign_type.0169, ptr %name_assign_type, align 1
  %call94 = call i32 @device_rename(ptr noundef %dev91, ptr noundef %dev) #35
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %if.then110.if.end101_crit_edge, label %if.then110.if.then96_crit_edge

if.then110.if.then96_crit_edge:                   ; preds = %if.then110
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then96

if.then110.if.end101_crit_edge:                   ; preds = %if.then110
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end101

if.else:                                          ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.9, i32 noundef %spec.select.i) #43
  br label %cleanup

cleanup:                                          ; preds = %if.else, %call_netdevice_notifiers.exit.cleanup_crit_edge, %if.then96, %if.then80, %if.then73, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then73 ], [ %call78, %if.then80 ], [ %call94.lcssa, %if.then96 ], [ -16, %land.lhs.true.cleanup_crit_edge ], [ %err.0168, %if.else ], [ %err.0168, %call_netdevice_notifiers.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %oldname) #35
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @dev_get_valid_name(ptr noundef %net, ptr noundef %dev, ptr noundef %name) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %net, null
  br i1 %tobool.not, label %do.body4, label %do.end7, !prof !1310

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1105, 0\0A.popsection", ""() #35, !srcloc !1319
  unreachable

do.end7:                                          ; preds = %entry
  %0 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.i = icmp eq i8 %1, 0
  br i1 %cmp.i, label %do.end7.return_crit_edge, label %if.end.i

do.end7.return_crit_edge:                         ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end.i:                                         ; preds = %do.end7
  %call.i = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %call.i)
  %cmp2.i = icmp eq i32 %call.i, 16
  br i1 %cmp2.i, label %if.end.i.return_crit_edge, label %if.end5.i

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end5.i:                                        ; preds = %if.end.i
  %call6.i = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(2) @.str.6) #38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool.not.i, label %if.end5.i.return_crit_edge, label %lor.lhs.false.i

if.end5.i.return_crit_edge:                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

lor.lhs.false.i:                                  ; preds = %if.end5.i
  %call7.i = tail call i32 @strcmp(ptr noundef %name, ptr noundef nonnull dereferenceable(3) @.str.7) #38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %lor.lhs.false.i.return_crit_edge, label %lor.lhs.false.i.while.cond.i_crit_edge

lor.lhs.false.i.while.cond.i_crit_edge:           ; preds = %lor.lhs.false.i
  br label %while.cond.i

lor.lhs.false.i.return_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

while.cond.i:                                     ; preds = %lor.lhs.false19.i.while.cond.i_crit_edge, %lor.lhs.false.i.while.cond.i_crit_edge
  %name.addr.0.i = phi ptr [ %incdec.ptr.i, %lor.lhs.false19.i.while.cond.i_crit_edge ], [ %name, %lor.lhs.false.i.while.cond.i_crit_edge ]
  %2 = ptrtoint ptr %name.addr.0.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %name.addr.0.i, align 1
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.294)
  switch i8 %3, label %lor.lhs.false19.i [
    i8 0, label %if.end9
    i8 47, label %while.cond.i.return_crit_edge
    i8 58, label %while.cond.i.return_crit_edge43
  ]

while.cond.i.return_crit_edge43:                  ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

while.cond.i.return_crit_edge:                    ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

lor.lhs.false19.i:                                ; preds = %while.cond.i
  %conv12.i = zext i8 %3 to i32
  %arrayidx.i = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %conv12.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx.i, align 1
  %7 = and i8 %6, 32
  %cmp22.not.i = icmp eq i8 %7, 0
  %incdec.ptr.i = getelementptr i8, ptr %name.addr.0.i, i32 1
  br i1 %cmp22.not.i, label %lor.lhs.false19.i.while.cond.i_crit_edge, label %lor.lhs.false19.i.return_crit_edge

lor.lhs.false19.i.return_crit_edge:               ; preds = %lor.lhs.false19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

lor.lhs.false19.i.while.cond.i_crit_edge:         ; preds = %lor.lhs.false19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond.i

if.end9:                                          ; preds = %while.cond.i
  %call10 = tail call ptr @strchr(ptr noundef %name, i32 noundef 37)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #37
  %call13 = tail call fastcc i32 @dev_alloc_name_ns(ptr noundef nonnull %net, ptr noundef %dev, ptr noundef %name)
  br label %return

if.else:                                          ; preds = %if.end9
  %call.i.i.i = tail call i32 @strnlen(ptr noundef %name, i32 noundef 16) #38
  %call1.i.i.i = tail call i32 @full_name_hash(ptr noundef nonnull %net, ptr noundef %name, i32 noundef %call.i.i.i) #39
  %dev_name_head.i.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %8 = ptrtoint ptr %dev_name_head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev_name_head.i.i.i, align 4
  %mul.i.i.i.i.i = mul i32 %call1.i.i.i, 1640531527
  %shr.i.i.i.i = lshr i32 %mul.i.i.i.i.i, 24
  %arrayidx.i.i.i = getelementptr %struct.hlist_head, ptr %9, i32 %shr.i.i.i.i
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %if.else
  %name_node.0.in.i.i = phi ptr [ %arrayidx.i.i.i, %if.else ], [ %name_node.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %10 = ptrtoint ptr %name_node.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %name_node.0.i.i = load ptr, ptr %name_node.0.in.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %name_node.0.i.i, null
  br i1 %tobool2.not.i.i, label %if.else16, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %name3.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i.i, i32 0, i32 3
  %11 = ptrtoint ptr %name3.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %name3.i.i, align 4
  %call4.i.i = tail call i32 @strcmp(ptr noundef %12, ptr noundef %name) #38
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %for.body.i.i.return_crit_edge, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.i

for.body.i.i.return_crit_edge:                    ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.else16:                                        ; preds = %for.cond.i.i
  %cmp.not = icmp eq ptr %dev, %name
  br i1 %cmp.not, label %if.else16.return_crit_edge, label %if.then18

if.else16.return_crit_edge:                       ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then18:                                        ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #37
  %call21 = tail call i32 @strlcpy(ptr noundef %dev, ptr noundef %name, i32 noundef 16) #35
  br label %return

return:                                           ; preds = %if.then18, %if.else16.return_crit_edge, %for.body.i.i.return_crit_edge, %if.then12, %lor.lhs.false19.i.return_crit_edge, %while.cond.i.return_crit_edge, %while.cond.i.return_crit_edge43, %lor.lhs.false.i.return_crit_edge, %if.end5.i.return_crit_edge, %if.end.i.return_crit_edge, %do.end7.return_crit_edge
  %retval.0 = phi i32 [ %call13, %if.then12 ], [ 0, %if.then18 ], [ 0, %if.else16.return_crit_edge ], [ -22, %do.end7.return_crit_edge ], [ -22, %if.end.i.return_crit_edge ], [ -22, %lor.lhs.false.i.return_crit_edge ], [ -22, %if.end5.i.return_crit_edge ], [ -17, %for.body.i.i.return_crit_edge ], [ -22, %lor.lhs.false19.i.return_crit_edge ], [ -22, %while.cond.i.return_crit_edge ], [ -22, %while.cond.i.return_crit_edge43 ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_info(ptr noundef %dev, ptr noundef %fmt, ...) #9 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #35
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #35
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !1320
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.88, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_rename(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_adjacent_rename_links(ptr noundef %dev, ptr noundef %oldname) local_unnamed_addr #1 align 64 {
entry:
  %linkname.i87 = alloca [23 x i8], align 1
  %linkname.i83 = alloca [23 x i8], align 1
  %linkname.i77 = alloca [23 x i8], align 1
  %linkname.i = alloca [23 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %2 = ptrtoint ptr %adj_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn93 = load ptr, ptr %adj_list, align 4
  %cmp.not95 = icmp eq ptr %.pn93, %adj_list
  br i1 %cmp.not95, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %dev3.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn96 = phi ptr [ %.pn93, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %iter.097 = getelementptr i8, ptr %.pn96, i32 -16
  %3 = ptrtoint ptr %iter.097 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %iter.097, align 4
  %nd_net.i76 = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 127
  %5 = ptrtoint ptr %nd_net.i76 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nd_net.i76, align 4
  %cmp.i.not = icmp eq ptr %1, %6
  br i1 %cmp.i.not, label %if.end, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i) #35
  %7 = call ptr @memset(ptr %linkname.i, i32 255, i32 23)
  %call.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i, ptr noundef nonnull @.str.171, ptr noundef %oldname) #35
  %dev1.i = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 133
  call void @sysfs_remove_link(ptr noundef %dev1.i, ptr noundef nonnull %linkname.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i) #35
  %8 = ptrtoint ptr %iter.097 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %iter.097, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i77) #35
  %10 = call ptr @memset(ptr %linkname.i77, i32 255, i32 23)
  %call.i79 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i77, ptr noundef nonnull @.str.171, ptr noundef %dev) #35
  %dev2.i = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 133
  %call6.i = call i32 @sysfs_create_link(ptr noundef %dev2.i, ptr noundef %dev3.i, ptr noundef nonnull %linkname.i77) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i77) #35
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body.for.inc_crit_edge
  %11 = ptrtoint ptr %.pn96 to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn = load ptr, ptr %.pn96, align 4
  %cmp.not = icmp eq ptr %.pn, %adj_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %lower21 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %12 = ptrtoint ptr %lower21 to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn7598 = load ptr, ptr %lower21, align 4
  %cmp29.not100 = icmp eq ptr %.pn7598, %lower21
  br i1 %cmp29.not100, label %for.end.for.end53_crit_edge, label %for.body31.lr.ph

for.end.for.end53_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end53

for.body31.lr.ph:                                 ; preds = %for.end
  %dev3.i91 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  br label %for.body31

for.body31:                                       ; preds = %for.inc47.for.body31_crit_edge, %for.body31.lr.ph
  %.pn75101 = phi ptr [ %.pn7598, %for.body31.lr.ph ], [ %.pn75, %for.inc47.for.body31_crit_edge ]
  %iter.1102 = getelementptr i8, ptr %.pn75101, i32 -16
  %13 = ptrtoint ptr %iter.1102 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %iter.1102, align 4
  %nd_net.i80 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 127
  %15 = ptrtoint ptr %nd_net.i80 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nd_net.i80, align 4
  %cmp.i81.not = icmp eq ptr %1, %16
  br i1 %cmp.i81.not, label %if.end37, label %for.body31.for.inc47_crit_edge

for.body31.for.inc47_crit_edge:                   ; preds = %for.body31
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc47

if.end37:                                         ; preds = %for.body31
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i83) #35
  %17 = call ptr @memset(ptr %linkname.i83, i32 255, i32 23)
  %call.i85 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i83, ptr noundef nonnull @.str.170, ptr noundef %oldname) #35
  %dev1.i86 = getelementptr inbounds %struct.net_device, ptr %14, i32 0, i32 133
  call void @sysfs_remove_link(ptr noundef %dev1.i86, ptr noundef nonnull %linkname.i83) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i83) #35
  %18 = ptrtoint ptr %iter.1102 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %iter.1102, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i87) #35
  %20 = call ptr @memset(ptr %linkname.i87, i32 255, i32 23)
  %call.i89 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i87, ptr noundef nonnull @.str.170, ptr noundef %dev) #35
  %dev2.i90 = getelementptr inbounds %struct.net_device, ptr %19, i32 0, i32 133
  %call6.i92 = call i32 @sysfs_create_link(ptr noundef %dev2.i90, ptr noundef %dev3.i91, ptr noundef nonnull %linkname.i87) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i87) #35
  br label %for.inc47

for.inc47:                                        ; preds = %if.end37, %for.body31.for.inc47_crit_edge
  %21 = ptrtoint ptr %.pn75101 to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn75 = load ptr, ptr %.pn75101, align 4
  %cmp29.not = icmp eq ptr %.pn75, %lower21
  br i1 %cmp29.not, label %for.inc47.for.end53_crit_edge, label %for.inc47.for.body31_crit_edge

for.inc47.for.body31_crit_edge:                   ; preds = %for.inc47
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body31

for.inc47.for.end53_crit_edge:                    ; preds = %for.inc47
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end53

for.end53:                                        ; preds = %for.inc47.for.end53_crit_edge, %for.end.for.end53_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @call_netdevice_notifiers(i32 noundef %val, ptr noundef %dev) #1 align 64 {
entry:
  %info.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i) #35
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i, i32 0, i32 1
  %1 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %dev, ptr %info.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %0, align 4
  %nd_net.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %3 = ptrtoint ptr %nd_net.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %nd_net.i.i.i, align 4
  %call1.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %entry.if.end30.i.i_crit_edge

entry.if.end30.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i

land.rhs.i.i:                                     ; preds = %entry
  %.b50.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i, label %land.rhs.i.i.if.end30.i.i_crit_edge, label %if.then.i.i, !prof !1311

land.rhs.i.i.if.end30.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i

if.end30.i.i:                                     ; preds = %if.then.i.i, %land.rhs.i.i.if.end30.i.i_crit_edge, %entry.if.end30.i.i_crit_edge
  %netdev_chain.i.i = getelementptr inbounds %struct.net, ptr %4, i32 0, i32 25
  %call38.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i, i32 noundef %val, ptr noundef nonnull %info.i) #35
  %and.i.i = and i32 %call38.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool39.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool39.not.i.i, label %if.end41.i.i, label %if.end30.i.i.call_netdevice_notifiers_extack.exit_crit_edge

if.end30.i.i.call_netdevice_notifiers_extack.exit_crit_edge: ; preds = %if.end30.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_extack.exit

if.end41.i.i:                                     ; preds = %if.end30.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef %val, ptr noundef nonnull %info.i) #35
  br label %call_netdevice_notifiers_extack.exit

call_netdevice_notifiers_extack.exit:             ; preds = %if.end41.i.i, %if.end30.i.i.call_netdevice_notifiers_extack.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call42.i.i, %if.end41.i.i ], [ %call38.i.i, %if.end30.i.i.call_netdevice_notifiers_extack.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i) #35
  ret i32 %retval.0.i.i
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_err(ptr noundef %dev, ptr noundef %fmt, ...) #9 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #35
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #35
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !1320
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.60, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_alias(ptr noundef %dev, ptr nocapture noundef readonly %alias, i32 noundef %len) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %len)
  %cmp = icmp ugt i32 %len, 255
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  br i1 %tobool.not, label %if.end.if.end7_crit_edge, label %if.end8.i

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end7

if.end8.i:                                        ; preds = %if.end
  %add2 = add nuw nsw i32 %len, 9
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add2, i32 noundef 3264) #44
  %tobool3.not = icmp eq ptr %call9.i, null
  br i1 %tobool3.not, label %if.end8.i.cleanup_crit_edge, label %if.end5

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end5:                                          ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #37
  %ifalias = getelementptr inbounds %struct.dev_ifalias, ptr %call9.i, i32 0, i32 1
  %0 = call ptr @memcpy(ptr %ifalias, ptr %alias, i32 %len)
  %arrayidx = getelementptr %struct.dev_ifalias, ptr %call9.i, i32 0, i32 1, i32 %len
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %arrayidx, align 1
  br label %if.end7

if.end7:                                          ; preds = %if.end5, %if.end.if.end7_crit_edge
  %new_alias.0 = phi ptr [ %call9.i, %if.end5 ], [ null, %if.end.if.end7_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @ifalias_mutex, i32 noundef 0) #35
  %call8 = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @ifalias_mutex) #35
  br i1 %call8, label %if.end7.do.end_crit_edge, label %land.lhs.true

if.end7.do.end_crit_edge:                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %if.end7
  %call9 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true11

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true11:                                  ; preds = %land.lhs.true
  %.b80 = load i1, ptr @dev_set_alias.__warned, align 1
  br i1 %.b80, label %land.lhs.true11.do.end_crit_edge, label %if.then13

land.lhs.true11.do.end_crit_edge:                 ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then13:                                        ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_set_alias.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 1249, ptr noundef nonnull @.str.10) #35
  br label %do.end

do.end:                                           ; preds = %if.then13, %land.lhs.true11.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %if.end7.do.end_crit_edge
  %ifalias15 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 2
  %2 = ptrtoint ptr %ifalias15 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ifalias15, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1321
  %4 = ptrtoint ptr %ifalias15 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %new_alias.0, ptr %ifalias15, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @ifalias_mutex) #35
  %tobool56.not = icmp eq ptr %3, null
  br i1 %tobool56.not, label %do.end.cleanup_crit_edge, label %do.end63

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

do.end63:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @kvfree_call_rcu(ptr noundef nonnull %3, ptr noundef null) #35
  br label %cleanup

cleanup:                                          ; preds = %do.end63, %do.end.cleanup_crit_edge, %if.end8.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -12, %if.end8.i.cleanup_crit_edge ], [ %len, %do.end63 ], [ %len, %do.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mutex_is_locked(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_get_alias(ptr noundef %dev, ptr nocapture noundef writeonly %name, i32 noundef %len) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %ifalias = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 2
  %4 = ptrtoint ptr %ifalias to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %ifalias, align 4
  %call = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b15 = load i1, ptr @dev_get_alias.__warned, align 1
  br i1 %.b15, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_get_alias.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 1274, ptr noundef nonnull @.str.11) #35
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %tobool9.not = icmp eq ptr %5, null
  br i1 %tobool9.not, label %do.end7.if.end13_crit_edge, label %if.then10

do.end7.if.end13_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end13

if.then10:                                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #37
  %ifalias11 = getelementptr inbounds %struct.dev_ifalias, ptr %5, i32 0, i32 1
  %call12 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %name, i32 noundef %len, ptr noundef nonnull @.str.12, ptr noundef %ifalias11)
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %do.end7.if.end13_crit_edge
  %ret.0 = phi i32 [ %call12, %if.then10 ], [ 0, %do.end7.if.end13_crit_edge ]
  %call.i16 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i16, label %if.end13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i19

if.end13.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i19:                                ; preds = %if.end13
  %call1.i17 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i17)
  %tobool.not.i18 = icmp eq i32 %call1.i17, 0
  br i1 %tobool.not.i18, label %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i21

land.lhs.true.i19.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i19
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i21:                               ; preds = %land.lhs.true.i19
  %.b4.i20 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i20, label %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, label %if.then.i22

land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i22:                                      ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i22, %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, %if.end13.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %6 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i23 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i23 to ptr
  %preempt_count.i.i.i.i24 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i24 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i24, align 4
  %sub.i.i.i = add i32 %9, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i24, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  ret i32 %ret.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_features_change(ptr noundef %dev) #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %dev, ptr %info.i.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %0, align 4
  %nd_net.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %3 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %entry.if.end30.i.i.i_crit_edge

entry.if.end30.i.i.i_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %entry
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %entry.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %4, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 12, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 12, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_state_change(ptr noundef %dev) #1 align 64 {
entry:
  %change_info = alloca %struct.netdev_notifier_change_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %change_info) #35
  %2 = getelementptr inbounds %struct.netdev_notifier_info, ptr %change_info, i32 0, i32 1
  %3 = getelementptr inbounds %struct.netdev_notifier_change_info, ptr %change_info, i32 0, i32 1
  %4 = ptrtoint ptr %change_info to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %dev, ptr %change_info, align 4
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %2, align 4
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %3, align 4
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %7 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %nd_net.i.i, align 4
  %call1.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.then.if.end30.i_crit_edge

if.then.if.end30.i_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

land.rhs.i:                                       ; preds = %if.then
  %.b50.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i.if.end30.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end30.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end30.i_crit_edge, %if.then.if.end30.i_crit_edge
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %8, i32 0, i32 25
  %call38.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i, i32 noundef 4, ptr noundef nonnull %change_info) #35
  %and.i = and i32 %call38.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool39.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool39.not.i, label %if.end41.i, label %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge

if.end30.i.call_netdevice_notifiers_info.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit

if.end41.i:                                       ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 4, ptr noundef nonnull %change_info) #35
  br label %call_netdevice_notifiers_info.exit

call_netdevice_notifiers_info.exit:               ; preds = %if.end41.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge
  call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %dev, i32 noundef 0, i32 noundef 3264) #35
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %change_info) #35
  br label %if.end

if.end:                                           ; preds = %call_netdevice_notifiers_info.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @call_netdevice_notifiers_info(i32 noundef %val, ptr noundef %info) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %info, align 4
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 127
  %2 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nd_net.i, align 4
  %call1 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end30_crit_edge

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b50 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !1311

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  %netdev_chain = getelementptr inbounds %struct.net, ptr %3, i32 0, i32 25
  %call38 = tail call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain, i32 noundef %val, ptr noundef %info) #35
  %and = and i32 %call38, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool39.not = icmp eq i32 %and, 0
  br i1 %tobool39.not, label %if.end41, label %if.end30.cleanup_crit_edge

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end41:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  %call42 = tail call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef %val, ptr noundef %info) #35
  br label %cleanup

cleanup:                                          ; preds = %if.end41, %if.end30.cleanup_crit_edge
  %retval.0 = phi i32 [ %call42, %if.end41 ], [ %call38, %if.end30.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtmsg_ifinfo(i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__netdev_notify_peers(ptr noundef %dev) #1 align 64 {
entry:
  %info.i.i43 = alloca %struct.netdev_notifier_info, align 4
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b42 = load i1, ptr @__netdev_notify_peers.__already_done, align 1
  br i1 %.b42, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netdev_notify_peers.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1329, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1329) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %dev, ptr %info.i.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %0, align 4
  %nd_net.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %3 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %if.end29.if.end30.i.i.i_crit_edge

if.end29.if.end30.i.i.i_crit_edge:                ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end29
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %if.end29.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %4, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 19, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 19, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i43) #35
  %5 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i43, i32 0, i32 1
  %6 = ptrtoint ptr %info.i.i43 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %dev, ptr %info.i.i43, align 4
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %5, align 4
  %8 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i45 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i45)
  %tobool.not.i.i.i46 = icmp eq i32 %call1.i.i.i45, 0
  br i1 %tobool.not.i.i.i46, label %land.rhs.i.i.i48, label %call_netdevice_notifiers.exit.if.end30.i.i.i54_crit_edge

call_netdevice_notifiers.exit.if.end30.i.i.i54_crit_edge: ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i54

land.rhs.i.i.i48:                                 ; preds = %call_netdevice_notifiers.exit
  %.b50.i.i.i47 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i47, label %land.rhs.i.i.i48.if.end30.i.i.i54_crit_edge, label %if.then.i.i.i49, !prof !1311

land.rhs.i.i.i48.if.end30.i.i.i54_crit_edge:      ; preds = %land.rhs.i.i.i48
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i54

if.then.i.i.i49:                                  ; preds = %land.rhs.i.i.i48
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i54

if.end30.i.i.i54:                                 ; preds = %if.then.i.i.i49, %land.rhs.i.i.i48.if.end30.i.i.i54_crit_edge, %call_netdevice_notifiers.exit.if.end30.i.i.i54_crit_edge
  %netdev_chain.i.i.i50 = getelementptr inbounds %struct.net, ptr %9, i32 0, i32 25
  %call38.i.i.i51 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i50, i32 noundef 22, ptr noundef nonnull %info.i.i43) #35
  %and.i.i.i52 = and i32 %call38.i.i.i51, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i52)
  %tobool39.not.i.i.i53 = icmp eq i32 %and.i.i.i52, 0
  br i1 %tobool39.not.i.i.i53, label %if.end41.i.i.i56, label %if.end30.i.i.i54.call_netdevice_notifiers.exit58_crit_edge

if.end30.i.i.i54.call_netdevice_notifiers.exit58_crit_edge: ; preds = %if.end30.i.i.i54
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit58

if.end41.i.i.i56:                                 ; preds = %if.end30.i.i.i54
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i55 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 22, ptr noundef nonnull %info.i.i43) #35
  br label %call_netdevice_notifiers.exit58

call_netdevice_notifiers.exit58:                  ; preds = %if.end41.i.i.i56, %if.end30.i.i.i54.call_netdevice_notifiers.exit58_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i43) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_notify_peers(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  tail call void @__netdev_notify_peers(ptr noundef %dev)
  tail call void @rtnl_unlock() #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_open(ptr noundef %dev, ptr noundef %extack) #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @__dev_open(ptr noundef %dev, ptr noundef %extack)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end2:                                          ; preds = %if.end
  tail call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %dev, i32 noundef 65, i32 noundef 3264) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %2 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %dev, ptr %info.i.i, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %2, align 4
  %nd_net.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %5 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %if.end2.if.end30.i.i.i_crit_edge

if.end2.if.end30.i.i.i_crit_edge:                 ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end2
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %if.end2.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %6, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 1, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 1, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  br label %cleanup

cleanup:                                          ; preds = %call_netdevice_notifiers.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %call_netdevice_notifiers.exit ], [ 0, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__dev_open(ptr noundef %dev, ptr noundef %extack) unnamed_addr #1 align 64 {
entry:
  %info.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b100 = load i1, ptr @__dev_open.__already_done, align 1
  br i1 %.b100, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__dev_open.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1379, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1379) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  tail call void @dev_addr_check(ptr noundef %dev) #35
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not = icmp eq i32 %4, 0
  br i1 %tobool.i.not, label %if.then38, label %if.end29.if.end49_crit_edge

if.end29.if.end49_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.then38:                                        ; preds = %if.end29
  %parent = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133, i32 1
  %5 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent, align 8
  %tobool40.not = icmp eq ptr %6, null
  br i1 %tobool40.not, label %if.then38.if.end45_crit_edge, label %if.then41

if.then38.if.end45_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end45

if.then41:                                        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #37
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef nonnull %6, i32 noundef 0) #35
  br label %if.end45

if.end45:                                         ; preds = %if.then41, %if.then38.if.end45_crit_edge
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %9 = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i102.not = icmp eq i32 %9, 0
  br i1 %tobool.i102.not, label %if.end45.cleanup_crit_edge, label %if.end45.if.end49_crit_edge

if.end45.if.end49_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.end45.cleanup_crit_edge:                       ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end49:                                         ; preds = %if.end45.if.end49_crit_edge, %if.end29.if.end49_crit_edge
  tail call void @netpoll_poll_disable(ptr noundef %dev) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i) #35
  %10 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i, i32 0, i32 1
  %11 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %dev, ptr %info.i, align 4
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %extack, ptr %10, align 4
  %nd_net.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %13 = ptrtoint ptr %nd_net.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %nd_net.i.i.i, align 4
  %call1.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end49.if.end30.i.i_crit_edge

if.end49.if.end30.i.i_crit_edge:                  ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i

land.rhs.i.i:                                     ; preds = %if.end49
  %.b50.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i, label %land.rhs.i.i.if.end30.i.i_crit_edge, label %if.then.i.i, !prof !1311

land.rhs.i.i.if.end30.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i

if.end30.i.i:                                     ; preds = %if.then.i.i, %land.rhs.i.i.if.end30.i.i_crit_edge, %if.end49.if.end30.i.i_crit_edge
  %netdev_chain.i.i = getelementptr inbounds %struct.net, ptr %14, i32 0, i32 25
  %call38.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i, i32 noundef 14, ptr noundef nonnull %info.i) #35
  %and.i.i = and i32 %call38.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool39.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool39.not.i.i, label %if.end41.i.i, label %if.end30.i.i.call_netdevice_notifiers_extack.exit_crit_edge

if.end30.i.i.call_netdevice_notifiers_extack.exit_crit_edge: ; preds = %if.end30.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_extack.exit

if.end41.i.i:                                     ; preds = %if.end30.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 14, ptr noundef nonnull %info.i) #35
  br label %call_netdevice_notifiers_extack.exit

call_netdevice_notifiers_extack.exit:             ; preds = %if.end41.i.i, %if.end30.i.i.call_netdevice_notifiers_extack.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call42.i.i, %if.end41.i.i ], [ %call38.i.i, %if.end30.i.i.call_netdevice_notifiers_extack.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i) #35
  %and.i = and i32 %retval.0.i.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i = icmp sgt i32 %and.i, 1
  %sub.i = sub i32 1, %and.i
  %spec.select.i = select i1 %cmp.i, i32 %sub.i, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i)
  %tobool52.not = icmp eq i32 %spec.select.i, 0
  br i1 %tobool52.not, label %if.end54, label %call_netdevice_notifiers_extack.exit.cleanup_crit_edge

call_netdevice_notifiers_extack.exit.cleanup_crit_edge: ; preds = %call_netdevice_notifiers_extack.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end54:                                         ; preds = %call_netdevice_notifiers_extack.exit
  call void @_set_bit(i32 noundef 0, ptr noundef %state.i) #35
  %ndo_validate_addr = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 10
  %15 = ptrtoint ptr %ndo_validate_addr to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ndo_validate_addr, align 4
  %tobool55.not = icmp eq ptr %16, null
  br i1 %tobool55.not, label %if.end54.land.lhs.true_crit_edge, label %if.end59

if.end54.land.lhs.true_crit_edge:                 ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #37
  br label %land.lhs.true

if.end59:                                         ; preds = %if.end54
  %call58 = call i32 %16(ptr noundef %dev) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool60.not = icmp eq i32 %call58, 0
  br i1 %tobool60.not, label %if.end59.land.lhs.true_crit_edge, label %if.end65.thread108

if.end59.land.lhs.true_crit_edge:                 ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #37
  br label %land.lhs.true

if.end65.thread108:                               ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #37
  call void @netpoll_poll_enable(ptr noundef %dev) #35
  br label %if.then67

land.lhs.true:                                    ; preds = %if.end59.land.lhs.true_crit_edge, %if.end54.land.lhs.true_crit_edge
  %ndo_open = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 2
  %17 = ptrtoint ptr %ndo_open to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ndo_open, align 4
  %tobool61.not = icmp eq ptr %18, null
  br i1 %tobool61.not, label %if.end65.thread, label %if.end65

if.end65.thread:                                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  call void @netpoll_poll_enable(ptr noundef %dev) #35
  br label %if.else

if.end65:                                         ; preds = %land.lhs.true
  %call64 = call i32 %18(ptr noundef %dev) #35
  call void @netpoll_poll_enable(ptr noundef %dev) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool66.not = icmp eq i32 %call64, 0
  br i1 %tobool66.not, label %if.end65.if.else_crit_edge, label %if.end65.if.then67_crit_edge

if.end65.if.then67_crit_edge:                     ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then67

if.end65.if.else_crit_edge:                       ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else

if.then67:                                        ; preds = %if.end65.if.then67_crit_edge, %if.end65.thread108
  %ret.1111 = phi i32 [ %call58, %if.end65.thread108 ], [ %call64, %if.end65.if.then67_crit_edge ]
  call void @_clear_bit(i32 noundef 0, ptr noundef %state.i) #35
  br label %cleanup

if.else:                                          ; preds = %if.end65.if.else_crit_edge, %if.end65.thread
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %19 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags, align 8
  %or = or i32 %20, 1
  store i32 %or, ptr %flags, align 8
  call void @dev_set_rx_mode(ptr noundef %dev)
  call void @dev_activate(ptr noundef %dev) #35
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %21 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dev_addr, align 64
  %addr_len = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 56
  %23 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %addr_len, align 1
  %conv = zext i8 %24 to i32
  call void @add_device_randomness(ptr noundef %22, i32 noundef %conv) #35
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then67, %call_netdevice_notifiers_extack.exit.cleanup_crit_edge, %if.end45.cleanup_crit_edge
  %retval.0 = phi i32 [ -19, %if.end45.cleanup_crit_edge ], [ %spec.select.i, %call_netdevice_notifiers_extack.exit.cleanup_crit_edge ], [ 0, %if.else ], [ %ret.1111, %if.then67 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_close_many(ptr noundef %head, i1 noundef zeroext %unlink) #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head, align 4
  %cmp.not63 = icmp eq ptr %1, %head
  br i1 %cmp.not63, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in64 = phi ptr [ %.pn66, %for.inc.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %.pn.in64 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn66 = load ptr, ptr %.pn.in64, align 64
  %flags = getelementptr i8, ptr %.pn.in64, i32 40
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 8
  %and = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.then:                                          ; preds = %for.body
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in64) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del_init.exit_crit_edge

if.then.list_del_init.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in64, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i.i, align 4
  %7 = ptrtoint ptr %.pn.in64 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %.pn.in64, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %6, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then.list_del_init.exit_crit_edge
  %11 = ptrtoint ptr %.pn.in64 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %.pn.in64, ptr %.pn.in64, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %.pn.in64, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %.pn.in64, ptr %prev.i3.i, align 4
  br label %for.inc

for.inc:                                          ; preds = %list_del_init.exit, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn66, %head
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  tail call fastcc void @__dev_close_many(ptr noundef %head)
  %13 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %head, align 4
  %cmp24.not68 = icmp eq ptr %14, %head
  br i1 %cmp24.not68, label %for.end.for.end37_crit_edge, label %for.body26.lr.ph

for.end.for.end37_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end37

for.body26.lr.ph:                                 ; preds = %for.end
  %15 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  br label %for.body26

for.body26:                                       ; preds = %for.inc31.for.body26_crit_edge, %for.body26.lr.ph
  %.pn53.in69 = phi ptr [ %14, %for.body26.lr.ph ], [ %.pn5371, %for.inc31.for.body26_crit_edge ]
  %16 = ptrtoint ptr %.pn53.in69 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn5371 = load ptr, ptr %.pn53.in69, align 64
  %dev.1 = getelementptr i8, ptr %.pn53.in69, i32 -64
  call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %dev.1, i32 noundef 65, i32 noundef 3264) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %17 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %dev.1, ptr %info.i.i, align 4
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %15, align 4
  %nd_net.i.i.i.i = getelementptr i8, ptr %.pn53.in69, i32 1012
  %19 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %for.body26.if.end30.i.i.i_crit_edge

for.body26.if.end30.i.i.i_crit_edge:              ; preds = %for.body26
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %for.body26
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %for.body26.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %20, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 2, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 2, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  br i1 %unlink, label %if.then28, label %call_netdevice_notifiers.exit.for.inc31_crit_edge

call_netdevice_notifiers.exit.for.inc31_crit_edge: ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc31

if.then28:                                        ; preds = %call_netdevice_notifiers.exit
  %call.i.i56 = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn53.in69) #35
  br i1 %call.i.i56, label %if.end.i.i59, label %if.then28.list_del_init.exit61_crit_edge

if.then28.list_del_init.exit61_crit_edge:         ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_init.exit61

if.end.i.i59:                                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i57 = getelementptr inbounds %struct.list_head, ptr %.pn53.in69, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i.i57 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i.i57, align 4
  %23 = ptrtoint ptr %.pn53.in69 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %.pn53.in69, align 4
  %prev1.i.i.i58 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i58 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i.i58, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %24, ptr %22, align 4
  br label %list_del_init.exit61

list_del_init.exit61:                             ; preds = %if.end.i.i59, %if.then28.list_del_init.exit61_crit_edge
  %27 = ptrtoint ptr %.pn53.in69 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %.pn53.in69, ptr %.pn53.in69, align 4
  %prev.i3.i60 = getelementptr inbounds %struct.list_head, ptr %.pn53.in69, i32 0, i32 1
  %28 = ptrtoint ptr %prev.i3.i60 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %.pn53.in69, ptr %prev.i3.i60, align 4
  br label %for.inc31

for.inc31:                                        ; preds = %list_del_init.exit61, %call_netdevice_notifiers.exit.for.inc31_crit_edge
  %cmp24.not = icmp eq ptr %.pn5371, %head
  br i1 %cmp24.not, label %for.inc31.for.end37_crit_edge, label %for.inc31.for.body26_crit_edge

for.inc31.for.body26_crit_edge:                   ; preds = %for.inc31
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body26

for.inc31.for.end37_crit_edge:                    ; preds = %for.inc31
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end37

for.end37:                                        ; preds = %for.inc31.for.end37_crit_edge, %for.end.for.end37_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__dev_close_many(ptr noundef %head) unnamed_addr #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b98 = load i1, ptr @__dev_close_many.__already_done, align 1
  br i1 %.b98, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__dev_close_many.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1458, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1458) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 1459) #35
  %0 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn99 = load ptr, ptr %head, align 4
  %cmp.not100 = icmp eq ptr %.pn99, %head
  br i1 %cmp.not100, label %if.end29.for.end_crit_edge, label %for.body.lr.ph

if.end29.for.end_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end29
  %1 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %call_netdevice_notifiers.exit.for.body_crit_edge, %for.body.lr.ph
  %.pn101 = phi ptr [ %.pn99, %for.body.lr.ph ], [ %.pn, %call_netdevice_notifiers.exit.for.body_crit_edge ]
  %dev.0 = getelementptr i8, ptr %.pn101, i32 -64
  call void @netpoll_poll_disable(ptr noundef %dev.0) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %2 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dev.0, ptr %info.i.i, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %1, align 4
  %nd_net.i.i.i.i = getelementptr i8, ptr %.pn101, i32 1012
  %4 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %for.body.if.end30.i.i.i_crit_edge

for.body.if.end30.i.i.i_crit_edge:                ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %for.body
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %for.body.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %5, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 10, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 10, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  %state = getelementptr i8, ptr %.pn101, i32 -28
  call void @_clear_bit(i32 noundef 0, ptr noundef %state) #35
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1322
  %6 = ptrtoint ptr %.pn101 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn = load ptr, ptr %.pn101, align 4
  %cmp.not = icmp eq ptr %.pn, %head
  br i1 %cmp.not, label %call_netdevice_notifiers.exit.for.end_crit_edge, label %call_netdevice_notifiers.exit.for.body_crit_edge

call_netdevice_notifiers.exit.for.body_crit_edge: ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

call_netdevice_notifiers.exit.for.end_crit_edge:  ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %call_netdevice_notifiers.exit.for.end_crit_edge, %if.end29.for.end_crit_edge
  call void @dev_deactivate_many(ptr noundef %head) #35
  %7 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn97102 = load ptr, ptr %head, align 4
  %cmp64.not104 = icmp eq ptr %.pn97102, %head
  br i1 %cmp64.not104, label %for.end.for.end79_crit_edge, label %for.end.for.body67_crit_edge

for.end.for.body67_crit_edge:                     ; preds = %for.end
  br label %for.body67

for.end.for.end79_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end79

for.body67:                                       ; preds = %if.end72.for.body67_crit_edge, %for.end.for.body67_crit_edge
  %.pn97105 = phi ptr [ %.pn97, %if.end72.for.body67_crit_edge ], [ %.pn97102, %for.end.for.body67_crit_edge ]
  %dev.1106 = getelementptr i8, ptr %.pn97105, i32 -64
  %netdev_ops = getelementptr i8, ptr %.pn97105, i32 56
  %8 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %netdev_ops, align 8
  %ndo_stop = getelementptr inbounds %struct.net_device_ops, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %ndo_stop to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ndo_stop, align 4
  %tobool68.not = icmp eq ptr %11, null
  br i1 %tobool68.not, label %for.body67.if.end72_crit_edge, label %if.then69

for.body67.if.end72_crit_edge:                    ; preds = %for.body67
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end72

if.then69:                                        ; preds = %for.body67
  call void @__sanitizer_cov_trace_pc() #37
  %call71 = call i32 %11(ptr noundef %dev.1106) #35
  br label %if.end72

if.end72:                                         ; preds = %if.then69, %for.body67.if.end72_crit_edge
  %flags = getelementptr i8, ptr %.pn97105, i32 40
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 8
  %and = and i32 %13, -2
  store i32 %and, ptr %flags, align 8
  call void @netpoll_poll_enable(ptr noundef %dev.1106) #35
  %14 = ptrtoint ptr %.pn97105 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn97 = load ptr, ptr %.pn97105, align 4
  %cmp64.not = icmp eq ptr %.pn97, %head
  br i1 %cmp64.not, label %if.end72.for.end79_crit_edge, label %if.end72.for.body67_crit_edge

if.end72.for.body67_crit_edge:                    ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body67

if.end72.for.end79_crit_edge:                     ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end79

for.end79:                                        ; preds = %if.end72.for.end79_crit_edge, %for.end.for.end79_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_close(ptr noundef %dev) #1 align 64 {
entry:
  %single = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %single) #35
  %2 = getelementptr inbounds %struct.list_head, ptr %single, i32 0, i32 1
  %3 = ptrtoint ptr %single to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %single, ptr %single, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %single, ptr %2, align 4
  %close_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 10
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %close_list, ptr noundef nonnull %single, ptr noundef nonnull %single) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_add.exit_crit_edge

if.then.list_add.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %close_list, ptr %2, align 4
  %6 = ptrtoint ptr %close_list to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %single, ptr %close_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 10, i32 1
  %7 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %single, ptr %prev3.i.i, align 4
  %8 = ptrtoint ptr %single to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %close_list, ptr %single, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.then.list_add.exit_crit_edge
  call void @dev_close_many(ptr noundef nonnull %single, i1 noundef zeroext true)
  %call.i.i2 = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %single) #35
  br i1 %call.i.i2, label %if.end.i.i3, label %list_add.exit.list_del.exit_crit_edge

list_add.exit.list_del.exit_crit_edge:            ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del.exit

if.end.i.i3:                                      ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %2, align 4
  %11 = ptrtoint ptr %single to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %single, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i3, %list_add.exit.list_del.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %single) #35
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_disable_lro(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %wanted_features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 25
  %0 = ptrtoint ptr %wanted_features to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %wanted_features, align 32
  %and = and i64 %1, -32769
  store i64 %and, ptr %wanted_features, align 32
  tail call void @netdev_update_features(ptr noundef %dev)
  %features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %2 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %features, align 16
  %and1 = and i64 %3, 32768
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1)
  %tobool.not = icmp eq i64 %and1, 0
  br i1 %tobool.not, label %entry.if.end25_crit_edge, label %do.end, !prof !1311

entry.if.end25_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end25

do.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %dev to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %dev, align 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %do.end.netdev_name.exit_crit_edge, label %lor.lhs.false.i

do.end.netdev_name.exit_crit_edge:                ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name.exit

lor.lhs.false.i:                                  ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  %call.i = tail call ptr @strchr(ptr noundef %dev, i32 noundef 37) #35
  %tobool2.not.i = icmp eq ptr %call.i, null
  %spec.select.i = select i1 %tobool2.not.i, ptr %dev, ptr @.str.97
  br label %netdev_name.exit

netdev_name.exit:                                 ; preds = %lor.lhs.false.i, %do.end.netdev_name.exit_crit_edge
  %retval.0.i = phi ptr [ @.str.97, %do.end.netdev_name.exit_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  %call13 = tail call fastcc ptr @netdev_reg_state(ptr noundef %dev)
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1566, i32 noundef 9, ptr noundef nonnull @.str.13, ptr noundef %retval.0.i, ptr noundef nonnull %call13) #35
  br label %if.end25

if.end25:                                         ; preds = %netdev_name.exit, %entry.if.end25_crit_edge
  %lower = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %6 = ptrtoint ptr %lower to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %lower, align 8
  %cmp.i = icmp eq ptr %7, %lower
  br i1 %cmp.i, label %if.end25.for.end_crit_edge, label %netdev_lower_get_next.exit

if.end25.for.end_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

netdev_lower_get_next.exit:                       ; preds = %if.end25
  %add.ptr.i = getelementptr i8, ptr %7, i32 -16
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr.i, align 4
  %tobool27.not46 = icmp eq ptr %9, null
  br i1 %tobool27.not46, label %netdev_lower_get_next.exit.for.end_crit_edge, label %netdev_lower_get_next.exit.for.body_crit_edge

netdev_lower_get_next.exit.for.body_crit_edge:    ; preds = %netdev_lower_get_next.exit
  br label %for.body

netdev_lower_get_next.exit.for.end_crit_edge:     ; preds = %netdev_lower_get_next.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %netdev_lower_get_next.exit44.for.body_crit_edge, %netdev_lower_get_next.exit.for.body_crit_edge
  %lower_dev.048 = phi ptr [ %12, %netdev_lower_get_next.exit44.for.body_crit_edge ], [ %9, %netdev_lower_get_next.exit.for.body_crit_edge ]
  %iter.147.in = phi ptr [ %iter.147, %netdev_lower_get_next.exit44.for.body_crit_edge ], [ %7, %netdev_lower_get_next.exit.for.body_crit_edge ]
  %10 = ptrtoint ptr %iter.147.in to i32
  call void @__asan_load4_noabort(i32 %10)
  %iter.147 = load ptr, ptr %iter.147.in, align 4
  tail call void @dev_disable_lro(ptr noundef nonnull %lower_dev.048)
  %cmp.i40 = icmp eq ptr %iter.147, %lower
  br i1 %cmp.i40, label %for.body.for.end_crit_edge, label %netdev_lower_get_next.exit44

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

netdev_lower_get_next.exit44:                     ; preds = %for.body
  %add.ptr.i41 = getelementptr i8, ptr %iter.147, i32 -16
  %11 = ptrtoint ptr %add.ptr.i41 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %add.ptr.i41, align 4
  %tobool27.not = icmp eq ptr %12, null
  br i1 %tobool27.not, label %netdev_lower_get_next.exit44.for.end_crit_edge, label %netdev_lower_get_next.exit44.for.body_crit_edge

netdev_lower_get_next.exit44.for.body_crit_edge:  ; preds = %netdev_lower_get_next.exit44
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

netdev_lower_get_next.exit44.for.end_crit_edge:   ; preds = %netdev_lower_get_next.exit44
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %netdev_lower_get_next.exit44.for.end_crit_edge, %for.body.for.end_crit_edge, %netdev_lower_get_next.exit.for.end_crit_edge, %if.end25.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_update_features(ptr noundef %dev) #1 align 64 {
entry:
  %info.i.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__netdev_update_features(ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i) #35
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %info.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %dev, ptr %info.i.i.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %0, align 4
  %nd_net.i.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %3 = ptrtoint ptr %nd_net.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %nd_net.i.i.i.i.i, align 4
  %call1.i.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.rhs.i.i.i.i, label %if.then.if.end30.i.i.i.i_crit_edge

if.then.if.end30.i.i.i.i_crit_edge:               ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.then
  %.b50.i.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i, label %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge:      ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i

if.end30.i.i.i.i:                                 ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, %if.then.if.end30.i.i.i.i_crit_edge
  %netdev_chain.i.i.i.i = getelementptr inbounds %struct.net, ptr %4, i32 0, i32 25
  %call38.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i, i32 noundef 12, ptr noundef nonnull %info.i.i.i) #35
  %and.i.i.i.i = and i32 %call38.i.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool39.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool39.not.i.i.i.i, label %if.end41.i.i.i.i, label %if.end30.i.i.i.i.netdev_features_change.exit_crit_edge

if.end30.i.i.i.i.netdev_features_change.exit_crit_edge: ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_features_change.exit

if.end41.i.i.i.i:                                 ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 12, ptr noundef nonnull %info.i.i.i) #35
  br label %netdev_features_change.exit

netdev_features_change.exit:                      ; preds = %if.end41.i.i.i.i, %if.end30.i.i.i.i.netdev_features_change.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i) #35
  br label %if.end

if.end:                                           ; preds = %netdev_features_change.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc nonnull ptr @netdev_reg_state(ptr noundef %dev) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %reg_state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %0 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load45 = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %bf.load45)
  %1 = icmp ult i8 %bf.load45, 6
  br i1 %1, label %switch.lookup, label %land.end

land.end:                                         ; preds = %entry
  %.b46 = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %.b46, label %land.end.return_crit_edge, label %if.then, !prof !1311

land.end.return_crit_edge:                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then:                                          ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %bf.cast21 = zext i8 %bf.load45 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.104, ptr noundef %dev, i32 noundef %bf.cast21) #35
  br label %return

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %2 = sext i8 %bf.load45 to i32
  %switch.gep = getelementptr inbounds [6 x ptr], ptr @switch.table.netdev_reg_state, i32 0, i32 %2
  %3 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %3)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %return

return:                                           ; preds = %switch.lookup, %if.then, %land.end.return_crit_edge
  %retval.0 = phi ptr [ @.str.105, %if.then ], [ @.str.105, %land.end.return_crit_edge ], [ %switch.load, %switch.lookup ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_lower_get_next(ptr noundef readnone %dev, ptr nocapture noundef %iter) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iter, align 4
  %lower1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %cmp = icmp eq ptr %1, %lower1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %add.ptr = getelementptr i8, ptr %1, i32 -16
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %4 = ptrtoint ptr %iter to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %iter, align 4
  %5 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %6, %if.end ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local nonnull ptr @netdev_cmd_to_name(i32 noundef %cmd) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %switch.tableidx = add i32 %cmd, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %switch.tableidx)
  %0 = icmp ult i32 %switch.tableidx, 34
  br i1 %0, label %switch.lookup, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %switch.gep = getelementptr inbounds [34 x ptr], ptr @switch.table.netdev_cmd_to_name, i32 0, i32 %switch.tableidx
  %1 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %1)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %return

return:                                           ; preds = %switch.lookup, %entry.return_crit_edge
  %retval.0 = phi ptr [ %switch.load, %switch.lookup ], [ @.str.48, %entry.return_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @register_netdevice_notifier(ptr noundef %nb) #1 align 64 {
entry:
  %info.i10.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i8.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @pernet_ops_rwsem) #35
  tail call void @rtnl_lock() #35
  %call = tail call i32 @raw_notifier_chain_register(ptr noundef nonnull @netdev_chain, ptr noundef %nb) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.unlock_crit_edge

entry.unlock_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %unlock

if.end:                                           ; preds = %entry
  %.b = load i1, ptr @dev_boot_phase, align 4
  br i1 %.b, label %if.end.for.cond_crit_edge, label %if.end.unlock_crit_edge

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %unlock

if.end.for.cond_crit_edge:                        ; preds = %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end.for.cond_crit_edge
  %.pn.in = phi ptr [ %.pn, %for.body.for.cond_crit_edge ], [ @net_namespace_list, %if.end.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, @net_namespace_list
  br i1 %cmp.not, label %for.cond.unlock_crit_edge, label %for.body

for.cond.unlock_crit_edge:                        ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %unlock

for.body:                                         ; preds = %for.cond
  %net.0 = getelementptr i8, ptr %.pn, i32 -108
  %call4 = tail call fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %nb, ptr noundef %net.0)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %for.body.for.cond_crit_edge, label %for.cond16.preheader

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond

for.cond16.preheader:                             ; preds = %for.body
  %.pn40.in42 = getelementptr inbounds %struct.list_head, ptr %.pn, i32 0, i32 1
  %1 = ptrtoint ptr %.pn40.in42 to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn4043 = load ptr, ptr %.pn40.in42, align 4
  %cmp18.not44 = icmp eq ptr %.pn4043, @net_namespace_list
  br i1 %cmp18.not44, label %for.cond16.preheader.for.end27_crit_edge, label %for.body20.lr.ph

for.cond16.preheader.for.end27_crit_edge:         ; preds = %for.cond16.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end27

for.body20.lr.ph:                                 ; preds = %for.cond16.preheader
  %2 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i, i32 0, i32 1
  %3 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i8.i.i, i32 0, i32 1
  %4 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i10.i.i, i32 0, i32 1
  br label %for.body20

unlock:                                           ; preds = %for.end27, %for.cond.unlock_crit_edge, %if.end.unlock_crit_edge, %entry.unlock_crit_edge
  %err.1 = phi i32 [ %call, %entry.unlock_crit_edge ], [ 0, %if.end.unlock_crit_edge ], [ %call4, %for.end27 ], [ 0, %for.cond.unlock_crit_edge ]
  call void @rtnl_unlock() #35
  call void @up_write(ptr noundef nonnull @pernet_ops_rwsem) #35
  ret i32 %err.1

for.body20:                                       ; preds = %call_netdevice_unregister_net_notifiers.exit.for.body20_crit_edge, %for.body20.lr.ph
  %.pn4045 = phi ptr [ %.pn4043, %for.body20.lr.ph ], [ %.pn40, %call_netdevice_unregister_net_notifiers.exit.for.body20_crit_edge ]
  %dev_base_head.i = getelementptr i8, ptr %.pn4045, i32 176
  %5 = ptrtoint ptr %dev_base_head.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn10.i = load ptr, ptr %dev_base_head.i, align 4
  %cmp.not11.i = icmp eq ptr %.pn10.i, %dev_base_head.i
  br i1 %cmp.not11.i, label %for.body20.call_netdevice_unregister_net_notifiers.exit_crit_edge, label %for.body20.for.body.i_crit_edge

for.body20.for.body.i_crit_edge:                  ; preds = %for.body20
  br label %for.body.i

for.body20.call_netdevice_unregister_net_notifiers.exit_crit_edge: ; preds = %for.body20
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_net_notifiers.exit

for.body.i:                                       ; preds = %call_netdevice_unregister_notifiers.exit.i.for.body.i_crit_edge, %for.body20.for.body.i_crit_edge
  %.pn12.i = phi ptr [ %.pn.i, %call_netdevice_unregister_notifiers.exit.i.for.body.i_crit_edge ], [ %.pn10.i, %for.body20.for.body.i_crit_edge ]
  %dev.0.i = getelementptr i8, ptr %.pn12.i, i32 -40
  %flags.i.i = getelementptr i8, ptr %.pn12.i, i32 64
  %6 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i.i, align 8
  %and.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %for.body.i.call_netdevice_unregister_notifiers.exit.i_crit_edge, label %if.then.i.i

for.body.i.call_netdevice_unregister_notifiers.exit.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_notifiers.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i) #35
  %8 = ptrtoint ptr %info.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %dev.0.i, ptr %info.i.i.i, align 4
  %9 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %2, align 4
  %10 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nb, align 4
  %call.i.i.i = call i32 %11(ptr noundef %nb, i32 noundef 10, ptr noundef nonnull %info.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i8.i.i) #35
  %12 = ptrtoint ptr %info.i8.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %dev.0.i, ptr %info.i8.i.i, align 4
  %13 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %3, align 4
  %14 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %nb, align 4
  %call.i9.i.i = call i32 %15(ptr noundef %nb, i32 noundef 2, ptr noundef nonnull %info.i8.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i8.i.i) #35
  br label %call_netdevice_unregister_notifiers.exit.i

call_netdevice_unregister_notifiers.exit.i:       ; preds = %if.then.i.i, %for.body.i.call_netdevice_unregister_notifiers.exit.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i10.i.i) #35
  %16 = ptrtoint ptr %info.i10.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %dev.0.i, ptr %info.i10.i.i, align 4
  %17 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %4, align 4
  %18 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %nb, align 4
  %call.i11.i.i = call i32 %19(ptr noundef %nb, i32 noundef 6, ptr noundef nonnull %info.i10.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i10.i.i) #35
  %20 = ptrtoint ptr %.pn12.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn.i = load ptr, ptr %.pn12.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %dev_base_head.i
  br i1 %cmp.not.i, label %call_netdevice_unregister_notifiers.exit.i.call_netdevice_unregister_net_notifiers.exit_crit_edge, label %call_netdevice_unregister_notifiers.exit.i.for.body.i_crit_edge

call_netdevice_unregister_notifiers.exit.i.for.body.i_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

call_netdevice_unregister_notifiers.exit.i.call_netdevice_unregister_net_notifiers.exit_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_net_notifiers.exit

call_netdevice_unregister_net_notifiers.exit:     ; preds = %call_netdevice_unregister_notifiers.exit.i.call_netdevice_unregister_net_notifiers.exit_crit_edge, %for.body20.call_netdevice_unregister_net_notifiers.exit_crit_edge
  %.pn40.in = getelementptr inbounds %struct.list_head, ptr %.pn4045, i32 0, i32 1
  %21 = ptrtoint ptr %.pn40.in to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn40 = load ptr, ptr %.pn40.in, align 4
  %cmp18.not = icmp eq ptr %.pn40, @net_namespace_list
  br i1 %cmp18.not, label %call_netdevice_unregister_net_notifiers.exit.for.end27_crit_edge, label %call_netdevice_unregister_net_notifiers.exit.for.body20_crit_edge

call_netdevice_unregister_net_notifiers.exit.for.body20_crit_edge: ; preds = %call_netdevice_unregister_net_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body20

call_netdevice_unregister_net_notifiers.exit.for.end27_crit_edge: ; preds = %call_netdevice_unregister_net_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end27

for.end27:                                        ; preds = %call_netdevice_unregister_net_notifiers.exit.for.end27_crit_edge, %for.cond16.preheader.for.end27_crit_edge
  %call28 = call i32 @raw_notifier_chain_unregister(ptr noundef nonnull @netdev_chain, ptr noundef %nb) #35
  br label %unlock
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @raw_notifier_chain_register(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %nb, ptr noundef readonly %net) unnamed_addr #1 align 64 {
entry:
  %info.i10.i = alloca %struct.netdev_notifier_info, align 4
  %info.i8.i = alloca %struct.netdev_notifier_info, align 4
  %info.i.i36 = alloca %struct.netdev_notifier_info, align 4
  %info.i11.i = alloca %struct.netdev_notifier_info, align 4
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_base_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  %0 = ptrtoint ptr %dev_base_head to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn45 = load ptr, ptr %dev_base_head, align 4
  %cmp.not46 = icmp eq ptr %.pn45, %dev_base_head
  br i1 %cmp.not46, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %1 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %2 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i11.i, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %.pn47 = phi ptr [ %.pn45, %for.body.lr.ph ], [ %.pn, %for.cond.backedge.for.body_crit_edge ]
  %dev.0 = getelementptr i8, ptr %.pn47, i32 -40
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %3 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %dev.0, ptr %info.i.i, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %1, align 4
  %5 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nb, align 4
  %call.i.i = call i32 %6(ptr noundef %nb, i32 noundef 5, ptr noundef nonnull %info.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  %and.i.i = and i32 %call.i.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i.i)
  %cmp.i.i = icmp slt i32 %and.i.i, 2
  br i1 %cmp.i.i, label %if.end.i, label %for.cond11.preheader

for.cond11.preheader:                             ; preds = %for.body
  %sub.i.i.le = sub i32 1, %and.i.i
  %.pn35.in48 = getelementptr inbounds %struct.list_head, ptr %.pn47, i32 0, i32 1
  %7 = ptrtoint ptr %.pn35.in48 to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn3549 = load ptr, ptr %.pn35.in48, align 4
  %cmp14.not50 = icmp eq ptr %.pn3549, %dev_base_head
  br i1 %cmp14.not50, label %for.cond11.preheader.cleanup_crit_edge, label %for.body16.lr.ph

for.cond11.preheader.cleanup_crit_edge:           ; preds = %for.cond11.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body16.lr.ph:                                 ; preds = %for.cond11.preheader
  %8 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i36, i32 0, i32 1
  %9 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i8.i, i32 0, i32 1
  %10 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i10.i, i32 0, i32 1
  br label %for.body16

if.end.i:                                         ; preds = %for.body
  %flags.i = getelementptr i8, ptr %.pn47, i32 64
  %11 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags.i, align 8
  %and.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %if.end.i.for.cond.backedge_crit_edge, label %if.end4.i

if.end.i.for.cond.backedge_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.backedge

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i11.i) #35
  %13 = ptrtoint ptr %info.i11.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %dev.0, ptr %info.i11.i, align 4
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %2, align 4
  %15 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nb, align 4
  %call.i12.i = call i32 %16(ptr noundef %nb, i32 noundef 1, ptr noundef nonnull %info.i11.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i11.i) #35
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end4.i, %if.end.i.for.cond.backedge_crit_edge
  %17 = ptrtoint ptr %.pn47 to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn = load ptr, ptr %.pn47, align 4
  %cmp.not = icmp eq ptr %.pn, %dev_base_head
  br i1 %cmp.not, label %for.cond.backedge.cleanup_crit_edge, label %for.cond.backedge.for.body_crit_edge

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.cond.backedge.cleanup_crit_edge:              ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body16:                                       ; preds = %call_netdevice_unregister_notifiers.exit.for.body16_crit_edge, %for.body16.lr.ph
  %.pn3551 = phi ptr [ %.pn3549, %for.body16.lr.ph ], [ %.pn35, %call_netdevice_unregister_notifiers.exit.for.body16_crit_edge ]
  %dev.1 = getelementptr i8, ptr %.pn3551, i32 -40
  %flags.i37 = getelementptr i8, ptr %.pn3551, i32 64
  %18 = ptrtoint ptr %flags.i37 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.i37, align 8
  %and.i38 = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i38)
  %tobool.not.i39 = icmp eq i32 %and.i38, 0
  br i1 %tobool.not.i39, label %for.body16.call_netdevice_unregister_notifiers.exit_crit_edge, label %if.then.i

for.body16.call_netdevice_unregister_notifiers.exit_crit_edge: ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_notifiers.exit

if.then.i:                                        ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i36) #35
  %20 = ptrtoint ptr %info.i.i36 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %dev.1, ptr %info.i.i36, align 4
  %21 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %8, align 4
  %22 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %nb, align 4
  %call.i.i40 = call i32 %23(ptr noundef %nb, i32 noundef 10, ptr noundef nonnull %info.i.i36) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i36) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i8.i) #35
  %24 = ptrtoint ptr %info.i8.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %dev.1, ptr %info.i8.i, align 4
  %25 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %9, align 4
  %26 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %nb, align 4
  %call.i9.i = call i32 %27(ptr noundef %nb, i32 noundef 2, ptr noundef nonnull %info.i8.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i8.i) #35
  br label %call_netdevice_unregister_notifiers.exit

call_netdevice_unregister_notifiers.exit:         ; preds = %if.then.i, %for.body16.call_netdevice_unregister_notifiers.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i10.i) #35
  %28 = ptrtoint ptr %info.i10.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %dev.1, ptr %info.i10.i, align 4
  %29 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %10, align 4
  %30 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %nb, align 4
  %call.i11.i = call i32 %31(ptr noundef %nb, i32 noundef 6, ptr noundef nonnull %info.i10.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i10.i) #35
  %.pn35.in = getelementptr inbounds %struct.list_head, ptr %.pn3551, i32 0, i32 1
  %32 = ptrtoint ptr %.pn35.in to i32
  call void @__asan_load4_noabort(i32 %32)
  %.pn35 = load ptr, ptr %.pn35.in, align 4
  %cmp14.not = icmp eq ptr %.pn35, %dev_base_head
  br i1 %cmp14.not, label %call_netdevice_unregister_notifiers.exit.cleanup_crit_edge, label %call_netdevice_unregister_notifiers.exit.for.body16_crit_edge

call_netdevice_unregister_notifiers.exit.for.body16_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body16

call_netdevice_unregister_notifiers.exit.cleanup_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

cleanup:                                          ; preds = %call_netdevice_unregister_notifiers.exit.cleanup_crit_edge, %for.cond.backedge.cleanup_crit_edge, %for.cond11.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %sub.i.i.le, %for.cond11.preheader.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ %sub.i.i.le, %call_netdevice_unregister_notifiers.exit.cleanup_crit_edge ], [ 0, %for.cond.backedge.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @raw_notifier_chain_unregister(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @unregister_netdevice_notifier(ptr noundef %nb) #1 align 64 {
entry:
  %info.i10.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i8.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @pernet_ops_rwsem) #35
  tail call void @rtnl_lock() #35
  %call = tail call i32 @raw_notifier_chain_unregister(ptr noundef nonnull @netdev_chain, ptr noundef %nb) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.unlock_crit_edge

entry.unlock_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %unlock

for.cond.preheader:                               ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @net_namespace_list to i32))
  %.pn9 = load ptr, ptr @net_namespace_list, align 4
  %cmp.not10 = icmp eq ptr %.pn9, @net_namespace_list
  br i1 %cmp.not10, label %for.cond.preheader.unlock_crit_edge, label %for.body.lr.ph

for.cond.preheader.unlock_crit_edge:              ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %unlock

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i, i32 0, i32 1
  %1 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i8.i.i, i32 0, i32 1
  %2 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i10.i.i, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %call_netdevice_unregister_net_notifiers.exit.for.body_crit_edge, %for.body.lr.ph
  %.pn11 = phi ptr [ %.pn9, %for.body.lr.ph ], [ %.pn, %call_netdevice_unregister_net_notifiers.exit.for.body_crit_edge ]
  %dev_base_head.i = getelementptr i8, ptr %.pn11, i32 176
  %3 = ptrtoint ptr %dev_base_head.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn10.i = load ptr, ptr %dev_base_head.i, align 4
  %cmp.not11.i = icmp eq ptr %.pn10.i, %dev_base_head.i
  br i1 %cmp.not11.i, label %for.body.call_netdevice_unregister_net_notifiers.exit_crit_edge, label %for.body.for.body.i_crit_edge

for.body.for.body.i_crit_edge:                    ; preds = %for.body
  br label %for.body.i

for.body.call_netdevice_unregister_net_notifiers.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_net_notifiers.exit

for.body.i:                                       ; preds = %call_netdevice_unregister_notifiers.exit.i.for.body.i_crit_edge, %for.body.for.body.i_crit_edge
  %.pn12.i = phi ptr [ %.pn.i, %call_netdevice_unregister_notifiers.exit.i.for.body.i_crit_edge ], [ %.pn10.i, %for.body.for.body.i_crit_edge ]
  %dev.0.i = getelementptr i8, ptr %.pn12.i, i32 -40
  %flags.i.i = getelementptr i8, ptr %.pn12.i, i32 64
  %4 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i.i, align 8
  %and.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %for.body.i.call_netdevice_unregister_notifiers.exit.i_crit_edge, label %if.then.i.i

for.body.i.call_netdevice_unregister_notifiers.exit.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_notifiers.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i) #35
  %6 = ptrtoint ptr %info.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %dev.0.i, ptr %info.i.i.i, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %0, align 4
  %8 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nb, align 4
  %call.i.i.i = call i32 %9(ptr noundef %nb, i32 noundef 10, ptr noundef nonnull %info.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i8.i.i) #35
  %10 = ptrtoint ptr %info.i8.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %dev.0.i, ptr %info.i8.i.i, align 4
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %1, align 4
  %12 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nb, align 4
  %call.i9.i.i = call i32 %13(ptr noundef %nb, i32 noundef 2, ptr noundef nonnull %info.i8.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i8.i.i) #35
  br label %call_netdevice_unregister_notifiers.exit.i

call_netdevice_unregister_notifiers.exit.i:       ; preds = %if.then.i.i, %for.body.i.call_netdevice_unregister_notifiers.exit.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i10.i.i) #35
  %14 = ptrtoint ptr %info.i10.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %dev.0.i, ptr %info.i10.i.i, align 4
  %15 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %2, align 4
  %16 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nb, align 4
  %call.i11.i.i = call i32 %17(ptr noundef %nb, i32 noundef 6, ptr noundef nonnull %info.i10.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i10.i.i) #35
  %18 = ptrtoint ptr %.pn12.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn.i = load ptr, ptr %.pn12.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %dev_base_head.i
  br i1 %cmp.not.i, label %call_netdevice_unregister_notifiers.exit.i.call_netdevice_unregister_net_notifiers.exit_crit_edge, label %call_netdevice_unregister_notifiers.exit.i.for.body.i_crit_edge

call_netdevice_unregister_notifiers.exit.i.for.body.i_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

call_netdevice_unregister_notifiers.exit.i.call_netdevice_unregister_net_notifiers.exit_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_net_notifiers.exit

call_netdevice_unregister_net_notifiers.exit:     ; preds = %call_netdevice_unregister_notifiers.exit.i.call_netdevice_unregister_net_notifiers.exit_crit_edge, %for.body.call_netdevice_unregister_net_notifiers.exit_crit_edge
  %19 = ptrtoint ptr %.pn11 to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn = load ptr, ptr %.pn11, align 4
  %cmp.not = icmp eq ptr %.pn, @net_namespace_list
  br i1 %cmp.not, label %call_netdevice_unregister_net_notifiers.exit.unlock_crit_edge, label %call_netdevice_unregister_net_notifiers.exit.for.body_crit_edge

call_netdevice_unregister_net_notifiers.exit.for.body_crit_edge: ; preds = %call_netdevice_unregister_net_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

call_netdevice_unregister_net_notifiers.exit.unlock_crit_edge: ; preds = %call_netdevice_unregister_net_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %unlock

unlock:                                           ; preds = %call_netdevice_unregister_net_notifiers.exit.unlock_crit_edge, %for.cond.preheader.unlock_crit_edge, %entry.unlock_crit_edge
  call void @rtnl_unlock() #35
  call void @up_write(ptr noundef nonnull @pernet_ops_rwsem) #35
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @register_netdevice_notifier_net(ptr noundef %net, ptr noundef %nb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 25
  %call.i = tail call i32 @raw_notifier_chain_register(ptr noundef %netdev_chain.i, ptr noundef %nb) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.__register_netdevice_notifier_net.exit_crit_edge

entry.__register_netdevice_notifier_net.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %__register_netdevice_notifier_net.exit

if.end.i:                                         ; preds = %entry
  %.b.i = load i1, ptr @dev_boot_phase, align 4
  br i1 %.b.i, label %if.end3.i, label %if.end.i.__register_netdevice_notifier_net.exit_crit_edge

if.end.i.__register_netdevice_notifier_net.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__register_netdevice_notifier_net.exit

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %nb, ptr noundef %net) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %if.end3.i.__register_netdevice_notifier_net.exit_crit_edge, label %chain_unregister.i

if.end3.i.__register_netdevice_notifier_net.exit_crit_edge: ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__register_netdevice_notifier_net.exit

chain_unregister.i:                               ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  %call10.i = tail call i32 @raw_notifier_chain_unregister(ptr noundef %netdev_chain.i, ptr noundef %nb) #35
  br label %__register_netdevice_notifier_net.exit

__register_netdevice_notifier_net.exit:           ; preds = %chain_unregister.i, %if.end3.i.__register_netdevice_notifier_net.exit_crit_edge, %if.end.i.__register_netdevice_notifier_net.exit_crit_edge, %entry.__register_netdevice_notifier_net.exit_crit_edge
  %retval.0.i = phi i32 [ %call4.i, %chain_unregister.i ], [ %call.i, %entry.__register_netdevice_notifier_net.exit_crit_edge ], [ 0, %if.end.i.__register_netdevice_notifier_net.exit_crit_edge ], [ 0, %if.end3.i.__register_netdevice_notifier_net.exit_crit_edge ]
  tail call void @rtnl_unlock() #35
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @unregister_netdevice_notifier_net(ptr noundef %net, ptr noundef %nb) #1 align 64 {
entry:
  %info.i10.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i8.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 25
  %call.i = tail call i32 @raw_notifier_chain_unregister(ptr noundef %netdev_chain.i, ptr noundef %nb) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.__unregister_netdevice_notifier_net.exit_crit_edge

entry.__unregister_netdevice_notifier_net.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit

if.end.i:                                         ; preds = %entry
  %dev_base_head.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  %0 = ptrtoint ptr %dev_base_head.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn10.i.i = load ptr, ptr %dev_base_head.i.i, align 4
  %cmp.not11.i.i = icmp eq ptr %.pn10.i.i, %dev_base_head.i.i
  br i1 %cmp.not11.i.i, label %if.end.i.__unregister_netdevice_notifier_net.exit_crit_edge, label %for.body.lr.ph.i.i

if.end.i.__unregister_netdevice_notifier_net.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit

for.body.lr.ph.i.i:                               ; preds = %if.end.i
  %1 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i.i, i32 0, i32 1
  %2 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i8.i.i.i, i32 0, i32 1
  %3 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i10.i.i.i, i32 0, i32 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call_netdevice_unregister_notifiers.exit.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %.pn12.i.i = phi ptr [ %.pn10.i.i, %for.body.lr.ph.i.i ], [ %.pn.i.i, %call_netdevice_unregister_notifiers.exit.i.i.for.body.i.i_crit_edge ]
  %dev.0.i.i = getelementptr i8, ptr %.pn12.i.i, i32 -40
  %flags.i.i.i = getelementptr i8, ptr %.pn12.i.i, i32 64
  %4 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i.i.i, align 8
  %and.i.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %for.body.i.i.call_netdevice_unregister_notifiers.exit.i.i_crit_edge, label %if.then.i.i.i

for.body.i.i.call_netdevice_unregister_notifiers.exit.i.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_notifiers.exit.i.i

if.then.i.i.i:                                    ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i.i) #35
  %6 = ptrtoint ptr %info.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %dev.0.i.i, ptr %info.i.i.i.i, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %1, align 4
  %8 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nb, align 4
  %call.i.i.i.i = call i32 %9(ptr noundef %nb, i32 noundef 10, ptr noundef nonnull %info.i.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i.i) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i8.i.i.i) #35
  %10 = ptrtoint ptr %info.i8.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %dev.0.i.i, ptr %info.i8.i.i.i, align 4
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %2, align 4
  %12 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nb, align 4
  %call.i9.i.i.i = call i32 %13(ptr noundef %nb, i32 noundef 2, ptr noundef nonnull %info.i8.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i8.i.i.i) #35
  br label %call_netdevice_unregister_notifiers.exit.i.i

call_netdevice_unregister_notifiers.exit.i.i:     ; preds = %if.then.i.i.i, %for.body.i.i.call_netdevice_unregister_notifiers.exit.i.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i10.i.i.i) #35
  %14 = ptrtoint ptr %info.i10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %dev.0.i.i, ptr %info.i10.i.i.i, align 4
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %3, align 4
  %16 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nb, align 4
  %call.i11.i.i.i = call i32 %17(ptr noundef %nb, i32 noundef 6, ptr noundef nonnull %info.i10.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i10.i.i.i) #35
  %18 = ptrtoint ptr %.pn12.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn.i.i = load ptr, ptr %.pn12.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %dev_base_head.i.i
  br i1 %cmp.not.i.i, label %call_netdevice_unregister_notifiers.exit.i.i.__unregister_netdevice_notifier_net.exit_crit_edge, label %call_netdevice_unregister_notifiers.exit.i.i.for.body.i.i_crit_edge

call_netdevice_unregister_notifiers.exit.i.i.for.body.i.i_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i

call_netdevice_unregister_notifiers.exit.i.i.__unregister_netdevice_notifier_net.exit_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit

__unregister_netdevice_notifier_net.exit:         ; preds = %call_netdevice_unregister_notifiers.exit.i.i.__unregister_netdevice_notifier_net.exit_crit_edge, %if.end.i.__unregister_netdevice_notifier_net.exit_crit_edge, %entry.__unregister_netdevice_notifier_net.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %entry.__unregister_netdevice_notifier_net.exit_crit_edge ], [ 0, %if.end.i.__unregister_netdevice_notifier_net.exit_crit_edge ], [ 0, %call_netdevice_unregister_notifiers.exit.i.i.__unregister_netdevice_notifier_net.exit_crit_edge ]
  call void @rtnl_unlock() #35
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @register_netdevice_notifier_dev_net(ptr noundef %dev, ptr noundef %nb, ptr noundef %nn) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 25
  %call.i = tail call i32 @raw_notifier_chain_register(ptr noundef %netdev_chain.i, ptr noundef %nb) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.end.i:                                         ; preds = %entry
  %.b.i = load i1, ptr @dev_boot_phase, align 4
  br i1 %.b.i, label %if.end3.i, label %if.end.i.if.then_crit_edge

if.end.i.if.then_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

if.end3.i:                                        ; preds = %if.end.i
  %call4.i = tail call fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %nb, ptr noundef %1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %if.end3.i.if.then_crit_edge, label %chain_unregister.i

if.end3.i.if.then_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

chain_unregister.i:                               ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  %call10.i = tail call i32 @raw_notifier_chain_unregister(ptr noundef %netdev_chain.i, ptr noundef %nb) #35
  br label %if.end

if.then:                                          ; preds = %if.end3.i.if.then_crit_edge, %if.end.i.if.then_crit_edge
  %nb2 = getelementptr inbounds %struct.netdev_net_notifier, ptr %nn, i32 0, i32 1
  %2 = ptrtoint ptr %nb2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %nb, ptr %nb2, align 4
  %net_notifier_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 150
  %3 = ptrtoint ptr %net_notifier_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %net_notifier_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %nn, ptr noundef %net_notifier_list, ptr noundef %4) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %nn, ptr %prev1.i.i, align 4
  %6 = ptrtoint ptr %nn to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %4, ptr %nn, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %nn, i32 0, i32 1
  %7 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %net_notifier_list, ptr %prev3.i.i, align 4
  %8 = ptrtoint ptr %net_notifier_list to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %nn, ptr %net_notifier_list, align 4
  br label %if.end

if.end:                                           ; preds = %if.end.i.i, %if.then.if.end_crit_edge, %chain_unregister.i, %entry.if.end_crit_edge
  %retval.0.i9 = phi i32 [ %call4.i, %chain_unregister.i ], [ %call.i, %entry.if.end_crit_edge ], [ 0, %if.then.if.end_crit_edge ], [ 0, %if.end.i.i ]
  tail call void @rtnl_unlock() #35
  ret i32 %retval.0.i9
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @unregister_netdevice_notifier_dev_net(ptr nocapture noundef readonly %dev, ptr noundef %nb, ptr noundef %nn) #1 align 64 {
entry:
  %info.i10.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i8.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %nn) #35
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del.exit_crit_edge

entry.list_del.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %nn, i32 0, i32 1
  %0 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i.i, align 4
  %2 = ptrtoint ptr %nn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nn, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev1.i.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %3, ptr %1, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %entry.list_del.exit_crit_edge
  %6 = ptrtoint ptr %nn to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr inttoptr (i32 256 to ptr), ptr %nn, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %nn, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %8 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nd_net.i, align 4
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %9, i32 0, i32 25
  %call.i = tail call i32 @raw_notifier_chain_unregister(ptr noundef %netdev_chain.i, ptr noundef %nb) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %list_del.exit.__unregister_netdevice_notifier_net.exit_crit_edge

list_del.exit.__unregister_netdevice_notifier_net.exit_crit_edge: ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit

if.end.i:                                         ; preds = %list_del.exit
  %dev_base_head.i.i = getelementptr inbounds %struct.net, ptr %9, i32 0, i32 16
  %10 = ptrtoint ptr %dev_base_head.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn10.i.i = load ptr, ptr %dev_base_head.i.i, align 4
  %cmp.not11.i.i = icmp eq ptr %.pn10.i.i, %dev_base_head.i.i
  br i1 %cmp.not11.i.i, label %if.end.i.__unregister_netdevice_notifier_net.exit_crit_edge, label %for.body.lr.ph.i.i

if.end.i.__unregister_netdevice_notifier_net.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit

for.body.lr.ph.i.i:                               ; preds = %if.end.i
  %11 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i.i, i32 0, i32 1
  %12 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i8.i.i.i, i32 0, i32 1
  %13 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i10.i.i.i, i32 0, i32 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %call_netdevice_unregister_notifiers.exit.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %.pn12.i.i = phi ptr [ %.pn10.i.i, %for.body.lr.ph.i.i ], [ %.pn.i.i, %call_netdevice_unregister_notifiers.exit.i.i.for.body.i.i_crit_edge ]
  %dev.0.i.i = getelementptr i8, ptr %.pn12.i.i, i32 -40
  %flags.i.i.i = getelementptr i8, ptr %.pn12.i.i, i32 64
  %14 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i.i.i, align 8
  %and.i.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %for.body.i.i.call_netdevice_unregister_notifiers.exit.i.i_crit_edge, label %if.then.i.i.i

for.body.i.i.call_netdevice_unregister_notifiers.exit.i.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_notifiers.exit.i.i

if.then.i.i.i:                                    ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i.i) #35
  %16 = ptrtoint ptr %info.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %dev.0.i.i, ptr %info.i.i.i.i, align 4
  %17 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %11, align 4
  %18 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %nb, align 4
  %call.i.i.i.i = call i32 %19(ptr noundef %nb, i32 noundef 10, ptr noundef nonnull %info.i.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i.i) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i8.i.i.i) #35
  %20 = ptrtoint ptr %info.i8.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %dev.0.i.i, ptr %info.i8.i.i.i, align 4
  %21 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %12, align 4
  %22 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %nb, align 4
  %call.i9.i.i.i = call i32 %23(ptr noundef %nb, i32 noundef 2, ptr noundef nonnull %info.i8.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i8.i.i.i) #35
  br label %call_netdevice_unregister_notifiers.exit.i.i

call_netdevice_unregister_notifiers.exit.i.i:     ; preds = %if.then.i.i.i, %for.body.i.i.call_netdevice_unregister_notifiers.exit.i.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i10.i.i.i) #35
  %24 = ptrtoint ptr %info.i10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %dev.0.i.i, ptr %info.i10.i.i.i, align 4
  %25 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %13, align 4
  %26 = ptrtoint ptr %nb to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %nb, align 4
  %call.i11.i.i.i = call i32 %27(ptr noundef %nb, i32 noundef 6, ptr noundef nonnull %info.i10.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i10.i.i.i) #35
  %28 = ptrtoint ptr %.pn12.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %.pn.i.i = load ptr, ptr %.pn12.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %dev_base_head.i.i
  br i1 %cmp.not.i.i, label %call_netdevice_unregister_notifiers.exit.i.i.__unregister_netdevice_notifier_net.exit_crit_edge, label %call_netdevice_unregister_notifiers.exit.i.i.for.body.i.i_crit_edge

call_netdevice_unregister_notifiers.exit.i.i.for.body.i.i_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i

call_netdevice_unregister_notifiers.exit.i.i.__unregister_netdevice_notifier_net.exit_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit

__unregister_netdevice_notifier_net.exit:         ; preds = %call_netdevice_unregister_notifiers.exit.i.i.__unregister_netdevice_notifier_net.exit_crit_edge, %if.end.i.__unregister_netdevice_notifier_net.exit_crit_edge, %list_del.exit.__unregister_netdevice_notifier_net.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %list_del.exit.__unregister_netdevice_notifier_net.exit_crit_edge ], [ 0, %if.end.i.__unregister_netdevice_notifier_net.exit_crit_edge ], [ 0, %call_netdevice_unregister_notifiers.exit.i.i.__unregister_netdevice_notifier_net.exit_crit_edge ]
  call void @rtnl_unlock() #35
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @net_inc_ingress_queue() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @static_key_slow_inc(ptr noundef nonnull @ingress_needed_key) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_slow_inc(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @net_dec_ingress_queue() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @static_key_slow_dec(ptr noundef nonnull @ingress_needed_key) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_slow_dec(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @net_inc_egress_queue() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @static_key_slow_inc(ptr noundef nonnull @egress_needed_key) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @net_dec_egress_queue() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @static_key_slow_dec(ptr noundef nonnull @egress_needed_key) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @net_enable_timestamp() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  br label %while.cond

while.cond:                                       ; preds = %atomic_cmpxchg.exit.while.cond_crit_edge, %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @netstamp_wanted, i32 noundef 4) #35
  %0 = load volatile i32, ptr @netstamp_wanted, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %0)
  %cmp = icmp slt i32 %0, 1
  br i1 %cmp, label %while.end, label %if.end

if.end:                                           ; preds = %while.cond
  %add = add nuw i32 %0, 1
  %call.i.i9 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @netstamp_wanted, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1323
  tail call void @llvm.prefetch.p0(ptr nonnull @netstamp_wanted, i32 1, i32 3, i32 1) #35
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.body.i.i.i.do.body.i.i.i_crit_edge, %if.end
  %1 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) @netstamp_wanted, ptr nonnull @netstamp_wanted, i32 %0, i32 %add, ptr nonnull elementtype(i32) @netstamp_wanted) #35, !srcloc !1324
  %asmresult.i.i.i = extractvalue { i32, i32 } %1, 0
  %tobool.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %atomic_cmpxchg.exit, label %do.body.i.i.i.do.body.i.i.i_crit_edge

do.body.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i.i.i

atomic_cmpxchg.exit:                              ; preds = %do.body.i.i.i
  %asmresult3.i.i.i = extractvalue { i32, i32 } %1, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1325
  %cmp2 = icmp eq i32 %asmresult3.i.i.i, %0
  br i1 %cmp2, label %atomic_cmpxchg.exit.cleanup_crit_edge, label %atomic_cmpxchg.exit.while.cond_crit_edge

atomic_cmpxchg.exit.while.cond_crit_edge:         ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond

atomic_cmpxchg.exit.cleanup_crit_edge:            ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

while.end:                                        ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i10 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @netstamp_needed_deferred, i32 noundef 4) #35
  tail call void @llvm.prefetch.p0(ptr nonnull @netstamp_needed_deferred, i32 1, i32 3, i32 1) #35
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @netstamp_needed_deferred, ptr nonnull @netstamp_needed_deferred, i32 1, ptr nonnull elementtype(i32) @netstamp_needed_deferred) #35, !srcloc !1326
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %3 = load ptr, ptr @system_wq, align 4
  %call.i.i11 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %3, ptr noundef nonnull @netstamp_work) #35
  br label %cleanup

cleanup:                                          ; preds = %while.end, %atomic_cmpxchg.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @net_disable_timestamp() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  br label %while.cond

while.cond:                                       ; preds = %atomic_cmpxchg.exit.while.cond_crit_edge, %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @netstamp_wanted, i32 noundef 4) #35
  %0 = load volatile i32, ptr @netstamp_wanted, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %0)
  %cmp = icmp slt i32 %0, 2
  br i1 %cmp, label %while.end, label %if.end

if.end:                                           ; preds = %while.cond
  %sub = add nsw i32 %0, -1
  %call.i.i9 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @netstamp_wanted, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1323
  tail call void @llvm.prefetch.p0(ptr nonnull @netstamp_wanted, i32 1, i32 3, i32 1) #35
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.body.i.i.i.do.body.i.i.i_crit_edge, %if.end
  %1 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) @netstamp_wanted, ptr nonnull @netstamp_wanted, i32 %0, i32 %sub, ptr nonnull elementtype(i32) @netstamp_wanted) #35, !srcloc !1324
  %asmresult.i.i.i = extractvalue { i32, i32 } %1, 0
  %tobool.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %atomic_cmpxchg.exit, label %do.body.i.i.i.do.body.i.i.i_crit_edge

do.body.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i.i.i

atomic_cmpxchg.exit:                              ; preds = %do.body.i.i.i
  %asmresult3.i.i.i = extractvalue { i32, i32 } %1, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1325
  %cmp2 = icmp eq i32 %asmresult3.i.i.i, %0
  br i1 %cmp2, label %atomic_cmpxchg.exit.cleanup_crit_edge, label %atomic_cmpxchg.exit.while.cond_crit_edge

atomic_cmpxchg.exit.while.cond_crit_edge:         ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond

atomic_cmpxchg.exit.cleanup_crit_edge:            ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

while.end:                                        ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i10 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @netstamp_needed_deferred, i32 noundef 4) #35
  tail call void @llvm.prefetch.p0(ptr nonnull @netstamp_needed_deferred, i32 1, i32 3, i32 1) #35
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @netstamp_needed_deferred, ptr nonnull @netstamp_needed_deferred, i32 1, ptr nonnull elementtype(i32) @netstamp_needed_deferred) #35, !srcloc !1327
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %3 = load ptr, ptr @system_wq, align 4
  %call.i.i11 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %3, ptr noundef nonnull @netstamp_work) #35
  br label %cleanup

cleanup:                                          ; preds = %while.end, %atomic_cmpxchg.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @is_skb_forwardable(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %skb) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 8
  %and.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.__is_skb_forwardable.exit_crit_edge, label %if.end3.i

entry.__is_skb_forwardable.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %__is_skb_forwardable.exit

if.end3.i:                                        ; preds = %entry
  %mtu.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %2 = ptrtoint ptr %mtu.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mtu.i, align 4
  %hard_header_len.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 19
  %4 = ptrtoint ptr %hard_header_len.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %hard_header_len.i, align 2
  %conv.i = zext i16 %5 to i32
  %add.i = add i32 %3, 4
  %add4.i = add i32 %add.i, %conv.i
  %len5.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %6 = ptrtoint ptr %len5.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len5.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %add4.i)
  %cmp.not.i = icmp ugt i32 %7, %add4.i
  br i1 %cmp.not.i, label %if.end8.i, label %if.end3.i.__is_skb_forwardable.exit_crit_edge

if.end3.i.__is_skb_forwardable.exit_crit_edge:    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__is_skb_forwardable.exit

if.end8.i:                                        ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %8 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i.i.i, align 4
  %gso_size.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %9, i32 0, i32 4
  %10 = ptrtoint ptr %gso_size.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %gso_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.i.i = icmp ne i16 %11, 0
  br label %__is_skb_forwardable.exit

__is_skb_forwardable.exit:                        ; preds = %if.end8.i, %if.end3.i.__is_skb_forwardable.exit_crit_edge, %entry.__is_skb_forwardable.exit_crit_edge
  %retval.0.i = phi i1 [ false, %entry.__is_skb_forwardable.exit_crit_edge ], [ true, %if.end3.i.__is_skb_forwardable.exit_crit_edge ], [ %tobool.i.i, %if.end8.i ]
  ret i1 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__dev_forward_skb(ptr noundef %dev, ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__dev_forward_skb2(ptr noundef %dev, ptr noundef %skb, i1 noundef zeroext true)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__dev_forward_skb2(ptr noundef %dev, ptr noundef %skb, i1 noundef zeroext %check_mtu) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i.i, label %entry.lor.lhs.false.i_crit_edge, label %land.rhs.i.i.i

entry.lor.lhs.false.i_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %lor.lhs.false.i

land.rhs.i.i.i:                                   ; preds = %entry
  %end.i.i.i19.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i.i.i19.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i.i.i19.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %1, align 8
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool1.not.i.i.i = icmp eq i8 %4, 0
  br i1 %tobool1.not.i.i.i, label %land.rhs.i.i.i.lor.lhs.false.i_crit_edge, label %skb_zcopy.exit.i.i

land.rhs.i.i.i.lor.lhs.false.i_crit_edge:         ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %lor.lhs.false.i

skb_zcopy.exit.i.i:                               ; preds = %land.rhs.i.i.i
  %destructor_arg.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 11
  %5 = ptrtoint ptr %destructor_arg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %destructor_arg.i.i.i, align 4
  %tobool.not.i20.i = icmp eq ptr %6, null
  br i1 %tobool.not.i20.i, label %skb_zcopy.exit.i.i.lor.lhs.false.i_crit_edge, label %if.end.i.i, !prof !1311

skb_zcopy.exit.i.i.lor.lhs.false.i_crit_edge:     ; preds = %skb_zcopy.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %lor.lhs.false.i

if.end.i.i:                                       ; preds = %skb_zcopy.exit.i.i
  %7 = ptrtoint ptr %6 to i32
  %and.i.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %land.lhs.true.i.i, label %if.end.i.i.skb_orphan_frags.exit.i_crit_edge

if.end.i.i.skb_orphan_frags.exit.i_crit_edge:     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_orphan_frags.exit.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %8 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %6, align 4
  %cmp.i.i = icmp eq ptr %9, @msg_zerocopy_callback
  br i1 %cmp.i.i, label %land.lhs.true.i.i.lor.lhs.false.i_crit_edge, label %land.lhs.true.i.i.skb_orphan_frags.exit.i_crit_edge

land.lhs.true.i.i.skb_orphan_frags.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_orphan_frags.exit.i

land.lhs.true.i.i.lor.lhs.false.i_crit_edge:      ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %lor.lhs.false.i

skb_orphan_frags.exit.i:                          ; preds = %land.lhs.true.i.i.skb_orphan_frags.exit.i_crit_edge, %if.end.i.i.skb_orphan_frags.exit.i_crit_edge
  %call8.i.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %tobool.not.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool.not.i, label %skb_orphan_frags.exit.i.lor.lhs.false.i_crit_edge, label %skb_orphan_frags.exit.i.____dev_forward_skb.exit_crit_edge

skb_orphan_frags.exit.i.____dev_forward_skb.exit_crit_edge: ; preds = %skb_orphan_frags.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %____dev_forward_skb.exit

skb_orphan_frags.exit.i.lor.lhs.false.i_crit_edge: ; preds = %skb_orphan_frags.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %skb_orphan_frags.exit.i.lor.lhs.false.i_crit_edge, %land.lhs.true.i.i.lor.lhs.false.i_crit_edge, %skb_zcopy.exit.i.i.lor.lhs.false.i_crit_edge, %land.rhs.i.i.i.lor.lhs.false.i_crit_edge, %entry.lor.lhs.false.i_crit_edge
  %flags.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %10 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i.i, align 8
  %and.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %check_mtu.not.i.i = xor i1 %check_mtu, true
  %brmerge.i.i = or i1 %tobool.not.i.i, %check_mtu.not.i.i
  br i1 %brmerge.i.i, label %__is_skb_forwardable.exit.i, label %if.end3.i.i

if.end3.i.i:                                      ; preds = %lor.lhs.false.i
  %mtu.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %12 = ptrtoint ptr %mtu.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %mtu.i.i, align 4
  %hard_header_len.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 19
  %14 = ptrtoint ptr %hard_header_len.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %hard_header_len.i.i, align 2
  %conv.i.i = zext i16 %15 to i32
  %add.i.i = add i32 %13, 4
  %add4.i.i = add i32 %add.i.i, %conv.i.i
  %len5.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %16 = ptrtoint ptr %len5.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %len5.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %add4.i.i)
  %cmp.not.i.i = icmp ugt i32 %17, %add4.i.i
  br i1 %cmp.not.i.i, label %if.end8.i.i, label %if.end3.i.i.if.then_crit_edge

if.end3.i.i.if.then_crit_edge:                    ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

if.end8.i.i:                                      ; preds = %if.end3.i.i
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %18 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %end.i.i.i.i, align 4
  %gso_size.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 4
  %20 = ptrtoint ptr %gso_size.i.i.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %gso_size.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool.i.i.not.i = icmp eq i16 %21, 0
  br i1 %tobool.i.i.not.i, label %if.end8.i.i.____dev_forward_skb.exit_crit_edge, label %if.end8.i.i.if.then_crit_edge, !prof !1310

if.end8.i.i.if.then_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

if.end8.i.i.____dev_forward_skb.exit_crit_edge:   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %____dev_forward_skb.exit

__is_skb_forwardable.exit.i:                      ; preds = %lor.lhs.false.i
  br i1 %tobool.not.i.i, label %__is_skb_forwardable.exit.i.____dev_forward_skb.exit_crit_edge, label %__is_skb_forwardable.exit.i.if.then_crit_edge, !prof !1310

__is_skb_forwardable.exit.i.if.then_crit_edge:    ; preds = %__is_skb_forwardable.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

__is_skb_forwardable.exit.i.____dev_forward_skb.exit_crit_edge: ; preds = %__is_skb_forwardable.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %____dev_forward_skb.exit

____dev_forward_skb.exit:                         ; preds = %__is_skb_forwardable.exit.i.____dev_forward_skb.exit_crit_edge, %if.end8.i.i.____dev_forward_skb.exit_crit_edge, %skb_orphan_frags.exit.i.____dev_forward_skb.exit_crit_edge
  %rx_dropped.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 37
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %rx_dropped.i, i32 noundef 4) #35
  tail call void @llvm.prefetch.p0(ptr %rx_dropped.i, i32 1, i32 3, i32 1) #35
  %22 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %rx_dropped.i, ptr %rx_dropped.i, i32 1, ptr elementtype(i32) %rx_dropped.i) #35, !srcloc !1326
  tail call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #35
  br label %if.end

if.then:                                          ; preds = %__is_skb_forwardable.exit.i.if.then_crit_edge, %if.end8.i.i.if.then_crit_edge, %if.end3.i.i.if.then_crit_edge
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %23 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %nd_net.i.i, align 4
  %25 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 8
  %nd_net.i22.i = getelementptr inbounds %struct.net_device, ptr %27, i32 0, i32 127
  %28 = ptrtoint ptr %nd_net.i22.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %nd_net.i22.i, align 4
  %cmp.i23.i = icmp ne ptr %24, %29
  tail call void @skb_scrub_packet(ptr noundef %skb, i1 noundef zeroext %cmp.i23.i) #35
  %priority.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 6
  %30 = ptrtoint ptr %priority.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %priority.i, align 4
  %call5 = tail call zeroext i16 @eth_type_trans(ptr noundef %skb, ptr noundef %dev) #35
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %31 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %call5, ptr %protocol, align 8
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %32 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %head.i.i, align 8
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %34 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.lshr.i = lshr i16 %bf.load.i, 9
  %trunc.i = trunc i16 %bf.lshr.i to i2
  %35 = zext i2 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %35, ptr @__sancov_gen_cov_switch_values.295)
  switch i2 %trunc.i, label %if.then.if.end_crit_edge [
    i2 -2, label %if.then.i14
    i2 -1, label %land.lhs.true.i
  ]

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then.i14:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %36 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %mac_header.i.i, align 2
  %conv.i.i13 = zext i16 %37 to i32
  %add.ptr.i.i = getelementptr i8, ptr %33, i32 %conv.i.i13
  %38 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %38, align 8
  %sub.i.i = sub i32 0, %40
  %call2.i = tail call i32 @csum_partial(ptr noundef %add.ptr.i.i, i32 noundef 14, i32 noundef %sub.i.i) #35
  %sub.i1.i = sub i32 0, %call2.i
  %41 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %sub.i1.i, ptr %38, align 8
  br label %if.end

land.lhs.true.i:                                  ; preds = %if.then
  %42 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %42, align 8
  %conv.i.i15 = zext i16 %44 to i32
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %45 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %data.i.i.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %46 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %33 to i32
  %sub.ptr.sub.i.neg.i.i = add i32 %conv.i.i15, %sub.ptr.rhs.cast.i.i.i
  %sub.i2.i = sub i32 %sub.ptr.sub.i.neg.i.i, %sub.ptr.lhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i2.i)
  %cmp13.i = icmp slt i32 %sub.i2.i, 0
  br i1 %cmp13.i, label %if.then15.i, label %land.lhs.true.i.if.end_crit_edge

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then15.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  %bf.clear18.i = and i16 %bf.load.i, -1537
  %47 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 %bf.clear18.i, ptr %ip_summed.i, align 8
  br label %if.end

if.end:                                           ; preds = %if.then15.i, %land.lhs.true.i.if.end_crit_edge, %if.then.i14, %if.then.if.end_crit_edge, %____dev_forward_skb.exit
  %retval.0.i18 = phi i32 [ 1, %____dev_forward_skb.exit ], [ 0, %if.then.if.end_crit_edge ], [ 0, %if.then.i14 ], [ 0, %land.lhs.true.i.if.end_crit_edge ], [ 0, %if.then15.i ]
  ret i32 %retval.0.i18
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_forward_skb(ptr noundef %dev, ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call fastcc i32 @__dev_forward_skb2(ptr noundef %dev, ptr noundef %skb, i1 noundef zeroext true) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %cond.false, label %entry.cond.end_crit_edge

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call1 = tail call fastcc i32 @netif_rx_internal(ptr noundef %skb)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond = phi i32 [ %call1, %cond.false ], [ %call.i, %entry.cond.end_crit_edge ]
  ret i32 %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @netif_rx_internal(ptr noundef %skb) unnamed_addr #1 align 64 {
entry:
  %voidflow = alloca %struct.rps_dev_flow, align 8
  %rflow = alloca ptr, align 4
  %qtail = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @netstamp_needed_key, ptr blockaddress(@netif_rx_internal, %if.then)) #35
          to label %if.end6 [label %if.then], !srcloc !1328

if.then:                                          ; preds = %entry
  %0 = load i32, ptr @netdev_tstamp_prequeue, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool3.not = icmp eq i32 %0, 0
  br i1 %tobool3.not, label %if.then.if.end6_crit_edge, label %land.lhs.true

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end6

land.lhs.true:                                    ; preds = %if.then
  %1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 2
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %1, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %3)
  %tobool4.not = icmp eq i64 %3, 0
  br i1 %tobool4.not, label %if.then5, label %land.lhs.true.if.end6_crit_edge

land.lhs.true.if.end6_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i = tail call i64 @ktime_get_with_offset(i32 noundef 0) #35
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %call.i.i, ptr %1, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %land.lhs.true.if.end6_crit_edge, %if.then.if.end6_crit_edge, %entry
  tail call fastcc void @trace_netif_rx(ptr noundef %skb)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @rps_needed, ptr blockaddress(@netif_rx_internal, %if.then18)) #35
          to label %if.else [label %if.then18], !srcloc !1328

if.then18:                                        ; preds = %if.end6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %voidflow) #35
  %5 = ptrtoint ptr %voidflow to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 -1, ptr %voidflow, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rflow) #35
  %6 = ptrtoint ptr %rflow to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %voidflow, ptr %rflow, align 4
  %7 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %10, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1329
  %11 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %14, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %if.then18.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then18.rcu_read_lock.exit_crit_edge:           ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then18
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then18.rcu_read_lock.exit_crit_edge
  %15 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 8
  %call19 = call fastcc i32 @get_rps_cpu(ptr noundef %17, ptr noundef %skb, ptr noundef nonnull %rflow)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %cmp = icmp slt i32 %call19, 0
  br i1 %cmp, label %if.then20, label %rcu_read_lock.exit.if.end23_crit_edge

rcu_read_lock.exit.if.end23_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end23

if.then20:                                        ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  %18 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i to ptr
  %cpu22 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu22 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu22, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %rcu_read_lock.exit.if.end23_crit_edge
  %cpu.0 = phi i32 [ %21, %if.then20 ], [ %call19, %rcu_read_lock.exit.if.end23_crit_edge ]
  %22 = ptrtoint ptr %rflow to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rflow, align 4
  %last_qtail = getelementptr inbounds %struct.rps_dev_flow, ptr %23, i32 0, i32 2
  %call24 = call fastcc i32 @enqueue_to_backlog(ptr noundef %skb, i32 noundef %cpu.0, ptr noundef %last_qtail)
  %call.i57 = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i57, label %if.end23.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i60

if.end23.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i60:                                ; preds = %if.end23
  %call1.i58 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i58)
  %tobool.not.i59 = icmp eq i32 %call1.i58, 0
  br i1 %tobool.not.i59, label %land.lhs.true.i60.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i62

land.lhs.true.i60.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i60
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i62:                               ; preds = %land.lhs.true.i60
  %.b4.i61 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i61, label %land.lhs.true2.i62.rcu_read_unlock.exit_crit_edge, label %if.then.i63

land.lhs.true2.i62.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i62
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i63:                                      ; preds = %land.lhs.true2.i62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i63, %land.lhs.true2.i62.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i60.rcu_read_unlock.exit_crit_edge, %if.end23.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %24 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i64 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i64 to ptr
  %preempt_count.i.i.i.i65 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i65 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i65, align 4
  %sub.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i65, align 4
  call void @rcu_read_unlock_strict() #35
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1330
  %28 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i49 = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i49 to ptr
  %preempt_count.i.i50 = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %preempt_count.i.i50 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %preempt_count.i.i50, align 4
  %sub.i = add i32 %31, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i50, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rflow) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %voidflow) #35
  br label %if.end38

if.else:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %qtail) #35
  %32 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i51 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i51 to ptr
  %preempt_count.i.i52 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i52 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i52, align 4
  %add.i53 = add i32 %35, 1
  store volatile i32 %add.i53, ptr %preempt_count.i.i52, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1331
  %36 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i66 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i66 to ptr
  %cpu33 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %cpu33 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu33, align 4
  %call34 = call fastcc i32 @enqueue_to_backlog(ptr noundef %skb, i32 noundef %39, ptr noundef nonnull %qtail)
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1332
  %40 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i54 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i54 to ptr
  %preempt_count.i.i55 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %preempt_count.i.i55 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %preempt_count.i.i55, align 4
  %sub.i56 = add i32 %43, -1
  store volatile i32 %sub.i56, ptr %preempt_count.i.i55, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %qtail) #35
  br label %if.end38

if.end38:                                         ; preds = %if.else, %rcu_read_unlock.exit
  %ret.0 = phi i32 [ %call24, %rcu_read_unlock.exit ], [ %call34, %if.else ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_forward_skb_nomtu(ptr noundef %dev, ptr noundef %skb) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__dev_forward_skb2(ptr noundef %dev, ptr noundef %skb, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cond.false, label %entry.cond.end_crit_edge

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call1 = tail call fastcc i32 @netif_rx_internal(ptr noundef %skb)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond = phi i32 [ %call1, %cond.false ], [ 1, %entry.cond.end_crit_edge ]
  ret i32 %cond
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @dev_nit_active(ptr noundef %dev) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr @ptype_all, align 4
  %cmp.i.not = icmp eq ptr %0, @ptype_all
  br i1 %cmp.i.not, label %lor.rhs, label %entry.lor.end_crit_edge

entry.lor.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %lor.end

lor.rhs:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ptype_all = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 11
  %1 = ptrtoint ptr %ptype_all to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %ptype_all, align 4
  %cmp.i3 = icmp ne ptr %2, %ptype_all
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry.lor.end_crit_edge
  %3 = phi i1 [ true, %entry.lor.end_crit_edge ], [ %cmp.i3, %lor.rhs ]
  ret i1 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_queue_xmit_nit(ptr noundef %skb, ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %5 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %ptype_all = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 11
  br label %again

again:                                            ; preds = %for.end.again_crit_edge, %rcu_read_lock.exit
  %ptype_list.0 = phi ptr [ @ptype_all, %rcu_read_lock.exit ], [ %ptype_all, %for.end.again_crit_edge ]
  %pt_prev.0 = phi ptr [ null, %rcu_read_lock.exit ], [ %pt_prev.1.lcssa, %for.end.again_crit_edge ]
  %skb2.0 = phi ptr [ null, %rcu_read_lock.exit ], [ %skb2.1.lcssa, %for.end.again_crit_edge ]
  %call = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %again.do.end_crit_edge

again.do.end_crit_edge:                           ; preds = %again
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %again
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b94 = load i1, ptr @dev_queue_xmit_nit.__warned, align 1
  br i1 %.b94, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_queue_xmit_nit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2194, ptr noundef nonnull @.str.4) #35
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %again.do.end_crit_edge
  %6 = ptrtoint ptr %ptype_list.0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn135 = load volatile ptr, ptr %ptype_list.0, align 4
  %cmp.not137 = icmp eq ptr %.pn135, %ptype_list.0
  br i1 %cmp.not137, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn141 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn135, %do.end.for.body_crit_edge ]
  %skb2.1140 = phi ptr [ %skb2.2, %for.inc.for.body_crit_edge ], [ %skb2.0, %do.end.for.body_crit_edge ]
  %pt_prev.1138 = phi ptr [ %pt_prev.2, %for.inc.for.body_crit_edge ], [ %pt_prev.0, %do.end.for.body_crit_edge ]
  %ptype.0142 = getelementptr i8, ptr %.pn141, i32 -32
  %ignore_outgoing = getelementptr i8, ptr %.pn141, i32 -30
  %7 = ptrtoint ptr %ignore_outgoing to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %ignore_outgoing, align 2, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool9.not = icmp eq i8 %8, 0
  br i1 %tobool9.not, label %if.end11, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.end11:                                         ; preds = %for.body
  %af_packet_priv.i = getelementptr i8, ptr %.pn141, i32 -4
  %9 = ptrtoint ptr %af_packet_priv.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %af_packet_priv.i, align 4
  %tobool.not.i95 = icmp eq ptr %10, null
  br i1 %tobool.not.i95, label %if.end11.if.end14_crit_edge, label %lor.lhs.false.i

if.end11.if.end14_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end14

lor.lhs.false.i:                                  ; preds = %if.end11
  %11 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %4, align 4
  %tobool1.not.i = icmp eq ptr %12, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i.if.end14_crit_edge, label %if.end.i

lor.lhs.false.i.if.end14_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end14

if.end.i:                                         ; preds = %lor.lhs.false.i
  %id_match.i = getelementptr i8, ptr %.pn141, i32 -12
  %13 = ptrtoint ptr %id_match.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %id_match.i, align 4
  %tobool2.not.i = icmp eq ptr %14, null
  br i1 %tobool2.not.i, label %skb_loop_sk.exit, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  %call.i96 = tail call zeroext i1 %14(ptr noundef %ptype.0142, ptr noundef nonnull %12) #35
  br i1 %call.i96, label %if.then3.i.for.inc_crit_edge, label %if.then3.i.if.end14_crit_edge

if.then3.i.if.end14_crit_edge:                    ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end14

if.then3.i.for.inc_crit_edge:                     ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

skb_loop_sk.exit:                                 ; preds = %if.end.i
  %cmp.i = icmp eq ptr %10, %12
  br i1 %cmp.i, label %skb_loop_sk.exit.for.inc_crit_edge, label %skb_loop_sk.exit.if.end14_crit_edge

skb_loop_sk.exit.if.end14_crit_edge:              ; preds = %skb_loop_sk.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end14

skb_loop_sk.exit.for.inc_crit_edge:               ; preds = %skb_loop_sk.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.end14:                                         ; preds = %skb_loop_sk.exit.if.end14_crit_edge, %if.then3.i.if.end14_crit_edge, %lor.lhs.false.i.if.end14_crit_edge, %if.end11.if.end14_crit_edge
  %tobool15.not = icmp eq ptr %pt_prev.1138, null
  br i1 %tobool15.not, label %if.end18, label %if.then16

if.then16:                                        ; preds = %if.end14
  %15 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %5, align 8
  %tobool.not.i.i.i = icmp eq ptr %skb2.1140, null
  br i1 %tobool.not.i.i.i, label %if.then16.if.end.i98_crit_edge, label %land.rhs.i.i.i

if.then16.if.end.i98_crit_edge:                   ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i98

land.rhs.i.i.i:                                   ; preds = %if.then16
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb2.1140, i32 0, i32 17
  %17 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %end.i.i.i.i, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %18, align 8
  %21 = and i8 %20, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool1.not.i.i.i = icmp eq i8 %21, 0
  br i1 %tobool1.not.i.i.i, label %land.rhs.i.i.i.if.end.i98_crit_edge, label %skb_zcopy.exit.i.i

land.rhs.i.i.i.if.end.i98_crit_edge:              ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i98

skb_zcopy.exit.i.i:                               ; preds = %land.rhs.i.i.i
  %destructor_arg.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %18, i32 0, i32 11
  %22 = ptrtoint ptr %destructor_arg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %destructor_arg.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %23, null
  br i1 %tobool.not.i.i, label %skb_zcopy.exit.i.i.if.end.i98_crit_edge, label %skb_orphan_frags_rx.exit.i, !prof !1311

skb_zcopy.exit.i.i.if.end.i98_crit_edge:          ; preds = %skb_zcopy.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i98

skb_orphan_frags_rx.exit.i:                       ; preds = %skb_zcopy.exit.i.i
  %call4.i.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb2.1140, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool.not.i97 = icmp eq i32 %call4.i.i, 0
  br i1 %tobool.not.i97, label %skb_orphan_frags_rx.exit.i.if.end.i98_crit_edge, label %skb_orphan_frags_rx.exit.i.for.inc_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.i.for.inc_crit_edge:     ; preds = %skb_orphan_frags_rx.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

skb_orphan_frags_rx.exit.i.if.end.i98_crit_edge:  ; preds = %skb_orphan_frags_rx.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i98

if.end.i98:                                       ; preds = %skb_orphan_frags_rx.exit.i.if.end.i98_crit_edge, %skb_zcopy.exit.i.i.if.end.i98_crit_edge, %land.rhs.i.i.i.if.end.i98_crit_edge, %if.then16.if.end.i98_crit_edge
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb2.1140, i32 0, i32 21
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #35
  tail call void @llvm.prefetch.p0(ptr %users.i, i32 1, i32 3, i32 1) #35
  %24 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i, ptr %users.i, i32 1, ptr elementtype(i32) %users.i) #35, !srcloc !1334
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %24, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.i98.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !1310

if.end.i98.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.end.i98
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end.i98
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %25 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %.not.i.i.i.i = icmp sgt i32 %25, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !1311

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end.i98.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end.i98.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %users.i, i32 noundef %.sink.i.i.i.i) #35
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %func.i = getelementptr inbounds %struct.packet_type, ptr %pt_prev.1138, i32 0, i32 4
  %26 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %func.i, align 4
  %28 = getelementptr inbounds %struct.anon.83, ptr %skb2.1140, i32 0, i32 2
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 8
  %call3.i = tail call i32 %27(ptr noundef %skb2.1140, ptr noundef %30, ptr noundef nonnull %pt_prev.1138, ptr noundef %16) #35
  br label %for.inc

if.end18:                                         ; preds = %if.end14
  %call19 = tail call ptr @skb_clone(ptr noundef %skb, i32 noundef 2592) #35
  %tobool20.not = icmp eq ptr %call19, null
  br i1 %tobool20.not, label %if.end18.if.end62_crit_edge, label %if.end22

if.end18.if.end62_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end62

if.end22:                                         ; preds = %if.end18
  %31 = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 2
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 0, ptr %31, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @netstamp_needed_key, ptr blockaddress(@dev_queue_xmit_nit, %if.then.i100)) #35
          to label %net_timestamp_set.exit [label %if.then.i100], !srcloc !1328

if.then.i100:                                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i.i = tail call i64 @ktime_get_with_offset(i32 noundef 0) #35
  %33 = ptrtoint ptr %31 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %call.i.i.i, ptr %31, align 8
  br label %net_timestamp_set.exit

net_timestamp_set.exit:                           ; preds = %if.then.i100, %if.end22
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 19
  %34 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 18
  %36 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %35 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %37 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = trunc i32 %sub.ptr.sub.i to i16
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 15, i32 0, i32 21
  %38 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %conv.i, ptr %mac_header.i, align 2
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 15, i32 0, i32 20
  %39 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %network_header.i, align 4
  %conv.i103 = zext i16 %40 to i32
  %add.ptr.i = getelementptr i8, ptr %37, i32 %conv.i103
  %cmp24 = icmp ult ptr %add.ptr.i, %35
  br i1 %cmp24, label %net_timestamp_set.exit.do.body29_crit_edge, label %lor.lhs.false

net_timestamp_set.exit.do.body29_crit_edge:       ; preds = %net_timestamp_set.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body29

lor.lhs.false:                                    ; preds = %net_timestamp_set.exit
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 16
  %41 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tail.i, align 8
  %cmp27 = icmp ugt ptr %add.ptr.i, %42
  br i1 %cmp27, label %lor.lhs.false.do.body29_crit_edge, label %lor.lhs.false.if.end41_crit_edge

lor.lhs.false.if.end41_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end41

lor.lhs.false.do.body29_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body29

do.body29:                                        ; preds = %lor.lhs.false.do.body29_crit_edge, %net_timestamp_set.exit.do.body29_crit_edge
  %call30 = tail call i32 @net_ratelimit() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %do.body29.do.end40_crit_edge, label %do.end35

do.body29.do.end40_crit_edge:                     ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end40

do.end35:                                         ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #37
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 15, i32 0, i32 18
  %43 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %protocol, align 8
  %conv = zext i16 %44 to i32
  %call37 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.49, i32 noundef %conv, ptr noundef %dev) #41
  br label %do.end40

do.end40:                                         ; preds = %do.end35, %do.body29.do.end40_crit_edge
  %45 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %data.i, align 4
  %47 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i110 = ptrtoint ptr %46 to i32
  %sub.ptr.rhs.cast.i111 = ptrtoint ptr %48 to i32
  %sub.ptr.sub.i112 = sub i32 %sub.ptr.lhs.cast.i110, %sub.ptr.rhs.cast.i111
  %conv.i113 = trunc i32 %sub.ptr.sub.i112 to i16
  %49 = ptrtoint ptr %network_header.i to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %conv.i113, ptr %network_header.i, align 4
  br label %if.end41

if.end41:                                         ; preds = %do.end40, %lor.lhs.false.if.end41_crit_edge
  %50 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %network_header.i, align 4
  %transport_header = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 15, i32 0, i32 19
  %52 = ptrtoint ptr %transport_header to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 %51, ptr %transport_header, align 2
  %pkt_type = getelementptr inbounds %struct.sk_buff, ptr %call19, i32 0, i32 15
  %53 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %53)
  %bf.load = load i16, ptr %pkt_type, align 8
  %bf.clear = and i16 %bf.load, 8191
  %bf.set = or i16 %bf.clear, -32768
  store i16 %bf.set, ptr %pkt_type, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end41, %refcount_inc.exit.i, %skb_orphan_frags_rx.exit.i.for.inc_crit_edge, %skb_loop_sk.exit.for.inc_crit_edge, %if.then3.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %pt_prev.2 = phi ptr [ %pt_prev.1138, %for.body.for.inc_crit_edge ], [ %pt_prev.1138, %skb_loop_sk.exit.for.inc_crit_edge ], [ %ptype.0142, %if.end41 ], [ %pt_prev.1138, %if.then3.i.for.inc_crit_edge ], [ %ptype.0142, %skb_orphan_frags_rx.exit.i.for.inc_crit_edge ], [ %ptype.0142, %refcount_inc.exit.i ]
  %skb2.2 = phi ptr [ %skb2.1140, %for.body.for.inc_crit_edge ], [ %skb2.1140, %skb_loop_sk.exit.for.inc_crit_edge ], [ %call19, %if.end41 ], [ %skb2.1140, %if.then3.i.for.inc_crit_edge ], [ %skb2.1140, %skb_orphan_frags_rx.exit.i.for.inc_crit_edge ], [ %skb2.1140, %refcount_inc.exit.i ]
  %54 = ptrtoint ptr %.pn141 to i32
  call void @__asan_load4_noabort(i32 %54)
  %.pn = load volatile ptr, ptr %.pn141, align 4
  %cmp.not = icmp eq ptr %.pn, %ptype_list.0
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %pt_prev.1.lcssa = phi ptr [ %pt_prev.0, %do.end.for.end_crit_edge ], [ %pt_prev.2, %for.inc.for.end_crit_edge ]
  %skb2.1.lcssa = phi ptr [ %skb2.0, %do.end.for.end_crit_edge ], [ %skb2.2, %for.inc.for.end_crit_edge ]
  %cmp51 = icmp eq ptr %ptype_list.0, @ptype_all
  br i1 %cmp51, label %for.end.again_crit_edge, label %out_unlock

for.end.again_crit_edge:                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %again

out_unlock:                                       ; preds = %for.end
  %tobool55.not = icmp eq ptr %pt_prev.1.lcssa, null
  br i1 %tobool55.not, label %out_unlock.if.end62_crit_edge, label %if.then56

out_unlock.if.end62_crit_edge:                    ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end62

if.then56:                                        ; preds = %out_unlock
  %tobool.not.i.i115 = icmp eq ptr %skb2.1.lcssa, null
  br i1 %tobool.not.i.i115, label %if.then56.if.then59_crit_edge, label %land.rhs.i.i

if.then56.if.then59_crit_edge:                    ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then59

land.rhs.i.i:                                     ; preds = %if.then56
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb2.1.lcssa, i32 0, i32 17
  %55 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %end.i.i.i, align 4
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %56, align 8
  %59 = and i8 %58, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool1.not.i.i = icmp eq i8 %59, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.if.then59_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.if.then59_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then59

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %56, i32 0, i32 11
  %60 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i116 = icmp eq ptr %61, null
  br i1 %tobool.not.i116, label %skb_zcopy.exit.i.if.then59_crit_edge, label %skb_orphan_frags_rx.exit, !prof !1311

skb_zcopy.exit.i.if.then59_crit_edge:             ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then59

skb_orphan_frags_rx.exit:                         ; preds = %skb_zcopy.exit.i
  %call4.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb2.1.lcssa, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool58.not = icmp eq i32 %call4.i, 0
  br i1 %tobool58.not, label %skb_orphan_frags_rx.exit.if.then59_crit_edge, label %if.else

skb_orphan_frags_rx.exit.if.then59_crit_edge:     ; preds = %skb_orphan_frags_rx.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then59

if.then59:                                        ; preds = %skb_orphan_frags_rx.exit.if.then59_crit_edge, %skb_zcopy.exit.i.if.then59_crit_edge, %land.rhs.i.i.if.then59_crit_edge, %if.then56.if.then59_crit_edge
  %func = getelementptr inbounds %struct.packet_type, ptr %pt_prev.1.lcssa, i32 0, i32 4
  %62 = ptrtoint ptr %func to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %func, align 4
  %64 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %5, align 8
  %call60 = tail call i32 %63(ptr noundef %skb2.1.lcssa, ptr noundef %65, ptr noundef nonnull %pt_prev.1.lcssa, ptr noundef %65) #35
  br label %if.end62

if.else:                                          ; preds = %skb_orphan_frags_rx.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @kfree_skb_reason(ptr noundef nonnull %skb2.1.lcssa, i32 noundef 0) #35
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then59, %out_unlock.if.end62_crit_edge, %if.end18.if.end62_crit_edge
  %call.i119 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i119, label %if.end62.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i122

if.end62.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i122:                               ; preds = %if.end62
  %call1.i120 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i120)
  %tobool.not.i121 = icmp eq i32 %call1.i120, 0
  br i1 %tobool.not.i121, label %land.lhs.true.i122.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i124

land.lhs.true.i122.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i122
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i124:                              ; preds = %land.lhs.true.i122
  %.b4.i123 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i123, label %land.lhs.true2.i124.rcu_read_unlock.exit_crit_edge, label %if.then.i125

land.lhs.true2.i124.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i124
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i125:                                     ; preds = %land.lhs.true2.i124
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i125, %land.lhs.true2.i124.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i122.rcu_read_unlock.exit_crit_edge, %if.end62.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %66 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i126 = and i32 %66, -16384
  %67 = inttoptr i32 %and.i.i.i.i.i126 to ptr
  %preempt_count.i.i.i.i127 = getelementptr inbounds %struct.thread_info, ptr %67, i32 0, i32 1
  %68 = ptrtoint ptr %preempt_count.i.i.i.i127 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %preempt_count.i.i.i.i127, align 4
  %sub.i.i.i = add i32 %69, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i127, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_clone(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_ratelimit() local_unnamed_addr #4

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_txq_to_tc(ptr nocapture noundef readonly %dev, i32 noundef %txq) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tc = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %0 = ptrtoint ptr %num_tc to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_tc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not = icmp eq i16 %1, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.then

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then:                                          ; preds = %entry
  %tc_to_txq = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 141
  %offset = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 141, i32 0, i32 1
  %2 = ptrtoint ptr %offset to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %offset, align 2
  %conv = zext i16 %3 to i32
  %sub = sub i32 %txq, %conv
  %4 = ptrtoint ptr %tc_to_txq to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %tc_to_txq, align 2
  %conv1 = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv1)
  %cmp2 = icmp ult i32 %sub, %conv1
  br i1 %cmp2, label %if.then.return_crit_edge, label %for.inc

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc:                                          ; preds = %if.then
  %incdec.ptr = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 1
  %offset.1 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 1, i32 1
  %6 = ptrtoint ptr %offset.1 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %offset.1, align 2
  %conv.1 = zext i16 %7 to i32
  %sub.1 = sub i32 %txq, %conv.1
  %8 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %incdec.ptr, align 2
  %conv1.1 = zext i16 %9 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.1, i32 %conv1.1)
  %cmp2.1 = icmp ult i32 %sub.1, %conv1.1
  br i1 %cmp2.1, label %for.inc.return_crit_edge, label %for.inc.1

for.inc.return_crit_edge:                         ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.1:                                        ; preds = %for.inc
  %incdec.ptr.1 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 2
  %offset.2 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 2, i32 1
  %10 = ptrtoint ptr %offset.2 to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %offset.2, align 2
  %conv.2 = zext i16 %11 to i32
  %sub.2 = sub i32 %txq, %conv.2
  %12 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %incdec.ptr.1, align 2
  %conv1.2 = zext i16 %13 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.2, i32 %conv1.2)
  %cmp2.2 = icmp ult i32 %sub.2, %conv1.2
  br i1 %cmp2.2, label %for.inc.1.return_crit_edge, label %for.inc.2

for.inc.1.return_crit_edge:                       ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.2:                                        ; preds = %for.inc.1
  %incdec.ptr.2 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 3
  %offset.3 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 3, i32 1
  %14 = ptrtoint ptr %offset.3 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %offset.3, align 2
  %conv.3 = zext i16 %15 to i32
  %sub.3 = sub i32 %txq, %conv.3
  %16 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %incdec.ptr.2, align 2
  %conv1.3 = zext i16 %17 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.3, i32 %conv1.3)
  %cmp2.3 = icmp ult i32 %sub.3, %conv1.3
  br i1 %cmp2.3, label %for.inc.2.return_crit_edge, label %for.inc.3

for.inc.2.return_crit_edge:                       ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.3:                                        ; preds = %for.inc.2
  %incdec.ptr.3 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 4
  %offset.4 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 4, i32 1
  %18 = ptrtoint ptr %offset.4 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %offset.4, align 2
  %conv.4 = zext i16 %19 to i32
  %sub.4 = sub i32 %txq, %conv.4
  %20 = ptrtoint ptr %incdec.ptr.3 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %incdec.ptr.3, align 2
  %conv1.4 = zext i16 %21 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.4, i32 %conv1.4)
  %cmp2.4 = icmp ult i32 %sub.4, %conv1.4
  br i1 %cmp2.4, label %for.inc.3.return_crit_edge, label %for.inc.4

for.inc.3.return_crit_edge:                       ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.4:                                        ; preds = %for.inc.3
  %incdec.ptr.4 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 5
  %offset.5 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 5, i32 1
  %22 = ptrtoint ptr %offset.5 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %offset.5, align 2
  %conv.5 = zext i16 %23 to i32
  %sub.5 = sub i32 %txq, %conv.5
  %24 = ptrtoint ptr %incdec.ptr.4 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %incdec.ptr.4, align 2
  %conv1.5 = zext i16 %25 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.5, i32 %conv1.5)
  %cmp2.5 = icmp ult i32 %sub.5, %conv1.5
  br i1 %cmp2.5, label %for.inc.4.return_crit_edge, label %for.inc.5

for.inc.4.return_crit_edge:                       ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.5:                                        ; preds = %for.inc.4
  %incdec.ptr.5 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 6
  %offset.6 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 6, i32 1
  %26 = ptrtoint ptr %offset.6 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %offset.6, align 2
  %conv.6 = zext i16 %27 to i32
  %sub.6 = sub i32 %txq, %conv.6
  %28 = ptrtoint ptr %incdec.ptr.5 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %incdec.ptr.5, align 2
  %conv1.6 = zext i16 %29 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.6, i32 %conv1.6)
  %cmp2.6 = icmp ult i32 %sub.6, %conv1.6
  br i1 %cmp2.6, label %for.inc.5.return_crit_edge, label %for.inc.6

for.inc.5.return_crit_edge:                       ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.6:                                        ; preds = %for.inc.5
  %incdec.ptr.6 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 7
  %offset.7 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 7, i32 1
  %30 = ptrtoint ptr %offset.7 to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %offset.7, align 2
  %conv.7 = zext i16 %31 to i32
  %sub.7 = sub i32 %txq, %conv.7
  %32 = ptrtoint ptr %incdec.ptr.6 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %incdec.ptr.6, align 2
  %conv1.7 = zext i16 %33 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.7, i32 %conv1.7)
  %cmp2.7 = icmp ult i32 %sub.7, %conv1.7
  br i1 %cmp2.7, label %for.inc.6.return_crit_edge, label %for.inc.7

for.inc.6.return_crit_edge:                       ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.7:                                        ; preds = %for.inc.6
  %incdec.ptr.7 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 8
  %offset.8 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 8, i32 1
  %34 = ptrtoint ptr %offset.8 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %offset.8, align 2
  %conv.8 = zext i16 %35 to i32
  %sub.8 = sub i32 %txq, %conv.8
  %36 = ptrtoint ptr %incdec.ptr.7 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %incdec.ptr.7, align 2
  %conv1.8 = zext i16 %37 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.8, i32 %conv1.8)
  %cmp2.8 = icmp ult i32 %sub.8, %conv1.8
  br i1 %cmp2.8, label %for.inc.7.return_crit_edge, label %for.inc.8

for.inc.7.return_crit_edge:                       ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.8:                                        ; preds = %for.inc.7
  %incdec.ptr.8 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 9
  %offset.9 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 9, i32 1
  %38 = ptrtoint ptr %offset.9 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %offset.9, align 2
  %conv.9 = zext i16 %39 to i32
  %sub.9 = sub i32 %txq, %conv.9
  %40 = ptrtoint ptr %incdec.ptr.8 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %incdec.ptr.8, align 2
  %conv1.9 = zext i16 %41 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.9, i32 %conv1.9)
  %cmp2.9 = icmp ult i32 %sub.9, %conv1.9
  br i1 %cmp2.9, label %for.inc.8.return_crit_edge, label %for.inc.9

for.inc.8.return_crit_edge:                       ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.9:                                        ; preds = %for.inc.8
  %incdec.ptr.9 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 10
  %offset.10 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 10, i32 1
  %42 = ptrtoint ptr %offset.10 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %offset.10, align 2
  %conv.10 = zext i16 %43 to i32
  %sub.10 = sub i32 %txq, %conv.10
  %44 = ptrtoint ptr %incdec.ptr.9 to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %incdec.ptr.9, align 2
  %conv1.10 = zext i16 %45 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.10, i32 %conv1.10)
  %cmp2.10 = icmp ult i32 %sub.10, %conv1.10
  br i1 %cmp2.10, label %for.inc.9.return_crit_edge, label %for.inc.10

for.inc.9.return_crit_edge:                       ; preds = %for.inc.9
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.10:                                       ; preds = %for.inc.9
  %incdec.ptr.10 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 11
  %offset.11 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 11, i32 1
  %46 = ptrtoint ptr %offset.11 to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %offset.11, align 2
  %conv.11 = zext i16 %47 to i32
  %sub.11 = sub i32 %txq, %conv.11
  %48 = ptrtoint ptr %incdec.ptr.10 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %incdec.ptr.10, align 2
  %conv1.11 = zext i16 %49 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.11, i32 %conv1.11)
  %cmp2.11 = icmp ult i32 %sub.11, %conv1.11
  br i1 %cmp2.11, label %for.inc.10.return_crit_edge, label %for.inc.11

for.inc.10.return_crit_edge:                      ; preds = %for.inc.10
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.11:                                       ; preds = %for.inc.10
  %incdec.ptr.11 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 12
  %offset.12 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 12, i32 1
  %50 = ptrtoint ptr %offset.12 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %offset.12, align 2
  %conv.12 = zext i16 %51 to i32
  %sub.12 = sub i32 %txq, %conv.12
  %52 = ptrtoint ptr %incdec.ptr.11 to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %incdec.ptr.11, align 2
  %conv1.12 = zext i16 %53 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.12, i32 %conv1.12)
  %cmp2.12 = icmp ult i32 %sub.12, %conv1.12
  br i1 %cmp2.12, label %for.inc.11.return_crit_edge, label %for.inc.12

for.inc.11.return_crit_edge:                      ; preds = %for.inc.11
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.12:                                       ; preds = %for.inc.11
  %incdec.ptr.12 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 13
  %offset.13 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 13, i32 1
  %54 = ptrtoint ptr %offset.13 to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %offset.13, align 2
  %conv.13 = zext i16 %55 to i32
  %sub.13 = sub i32 %txq, %conv.13
  %56 = ptrtoint ptr %incdec.ptr.12 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %incdec.ptr.12, align 2
  %conv1.13 = zext i16 %57 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.13, i32 %conv1.13)
  %cmp2.13 = icmp ult i32 %sub.13, %conv1.13
  br i1 %cmp2.13, label %for.inc.12.return_crit_edge, label %for.inc.13

for.inc.12.return_crit_edge:                      ; preds = %for.inc.12
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.13:                                       ; preds = %for.inc.12
  %incdec.ptr.13 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 14
  %offset.14 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 14, i32 1
  %58 = ptrtoint ptr %offset.14 to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %offset.14, align 2
  %conv.14 = zext i16 %59 to i32
  %sub.14 = sub i32 %txq, %conv.14
  %60 = ptrtoint ptr %incdec.ptr.13 to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %incdec.ptr.13, align 2
  %conv1.14 = zext i16 %61 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.14, i32 %conv1.14)
  %cmp2.14 = icmp ult i32 %sub.14, %conv1.14
  br i1 %cmp2.14, label %for.inc.13.return_crit_edge, label %for.inc.14

for.inc.13.return_crit_edge:                      ; preds = %for.inc.13
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

for.inc.14:                                       ; preds = %for.inc.13
  call void @__sanitizer_cov_trace_pc() #37
  %incdec.ptr.14 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 15
  %offset.15 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 15, i32 1
  %62 = ptrtoint ptr %offset.15 to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %offset.15, align 2
  %conv.15 = zext i16 %63 to i32
  %sub.15 = sub i32 %txq, %conv.15
  %64 = ptrtoint ptr %incdec.ptr.14 to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %incdec.ptr.14, align 2
  %conv1.15 = zext i16 %65 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.15, i32 %conv1.15)
  %cmp2.15 = icmp ult i32 %sub.15, %conv1.15
  %spec.select = select i1 %cmp2.15, i32 15, i32 -1
  br label %return

return:                                           ; preds = %for.inc.14, %for.inc.13.return_crit_edge, %for.inc.12.return_crit_edge, %for.inc.11.return_crit_edge, %for.inc.10.return_crit_edge, %for.inc.9.return_crit_edge, %for.inc.8.return_crit_edge, %for.inc.7.return_crit_edge, %for.inc.6.return_crit_edge, %for.inc.5.return_crit_edge, %for.inc.4.return_crit_edge, %for.inc.3.return_crit_edge, %for.inc.2.return_crit_edge, %for.inc.1.return_crit_edge, %for.inc.return_crit_edge, %if.then.return_crit_edge, %entry.return_crit_edge
  %retval.1 = phi i32 [ 0, %entry.return_crit_edge ], [ 0, %if.then.return_crit_edge ], [ 1, %for.inc.return_crit_edge ], [ 2, %for.inc.1.return_crit_edge ], [ 3, %for.inc.2.return_crit_edge ], [ 4, %for.inc.3.return_crit_edge ], [ 5, %for.inc.4.return_crit_edge ], [ 6, %for.inc.5.return_crit_edge ], [ 7, %for.inc.6.return_crit_edge ], [ 8, %for.inc.7.return_crit_edge ], [ 9, %for.inc.8.return_crit_edge ], [ 10, %for.inc.9.return_crit_edge ], [ 11, %for.inc.10.return_crit_edge ], [ 12, %for.inc.11.return_crit_edge ], [ 13, %for.inc.12.return_crit_edge ], [ 14, %for.inc.13.return_crit_edge ], [ %spec.select, %for.inc.14 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__netif_set_xps_queue(ptr noundef %dev, ptr noundef %mask, i16 noundef zeroext %index, i32 noundef %type) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tc1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %0 = ptrtoint ptr %num_tc1 to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_tc1, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not = icmp eq i16 %1, 0
  br i1 %tobool.not, label %entry.if.end13_crit_edge, label %if.then

entry.if.end13_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end13

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %cmp = icmp slt i16 %1, 0
  br i1 %cmp, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %if.then
  %conv734 = zext i16 %1 to i32
  %conv5 = zext i16 %index to i32
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %2 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %_tx.i, align 128
  %sb_dev = getelementptr %struct.netdev_queue, ptr %3, i32 %conv5, i32 7
  %4 = ptrtoint ptr %sb_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sb_dev, align 32
  %tobool6.not = icmp eq ptr %5, null
  %spec.select = select i1 %tobool6.not, ptr %dev, ptr %5
  %call8 = tail call i32 @netdev_txq_to_tc(ptr noundef %spec.select, i32 noundef %conv5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.end.cleanup_crit_edge, label %if.end.if.end13_crit_edge

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end13

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end13:                                         ; preds = %if.end.if.end13_crit_edge, %entry.if.end13_crit_edge
  %num_tc.0 = phi i32 [ %conv734, %if.end.if.end13_crit_edge ], [ 1, %entry.if.end13_crit_edge ]
  %tc.0 = phi i32 [ %call8, %if.end.if.end13_crit_edge ], [ 0, %entry.if.end13_crit_edge ]
  %dev.addr.0 = phi ptr [ %spec.select, %if.end.if.end13_crit_edge ], [ %dev, %entry.if.end13_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @xps_map_mutex, i32 noundef 0) #35
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool15.not = icmp eq i32 %call.i, 0
  br i1 %tobool15.not, label %land.lhs.true, label %if.end13.do.end_crit_edge

if.end13.do.end_crit_edge:                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %if.end13
  %call16 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true18

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true18:                                  ; preds = %land.lhs.true
  %.b605 = load i1, ptr @__netif_set_xps_queue.__warned, align 1
  br i1 %.b605, label %land.lhs.true18.do.end_crit_edge, label %if.then20

land.lhs.true18.do.end_crit_edge:                 ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then20:                                        ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_set_xps_queue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2514, ptr noundef nonnull @.str.10) #35
  br label %do.end

do.end:                                           ; preds = %if.then20, %land.lhs.true18.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %if.end13.do.end_crit_edge
  %arrayidx = getelementptr %struct.net_device, ptr %dev.addr.0, i32 0, i32 110, i32 %type
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %type)
  %cmp22 = icmp eq i32 %type, 1
  br i1 %cmp22, label %if.then24, label %if.else

if.then24:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  %num_rx_queues = getelementptr inbounds %struct.net_device, ptr %dev.addr.0, i32 0, i32 88
  %8 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_rx_queues, align 8
  br label %if.end35

if.else:                                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %10 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %10) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call4.i.i)
  %cmp31 = icmp ugt i32 %call4.i.i, 1
  %spec.select606 = select i1 %cmp31, ptr @__cpu_online_mask, ptr null
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then24
  %.pn = phi i32 [ %9, %if.then24 ], [ %10, %if.else ]
  %nr_ids.0 = phi i32 [ %9, %if.then24 ], [ %11, %if.else ]
  %online_mask.1 = phi ptr [ null, %if.then24 ], [ %spec.select606, %if.else ]
  %maps_sz.0.in.in = shl nuw nsw i32 %num_tc.0, 2
  %maps_sz.0.in = mul i32 %maps_sz.0.in.in, %.pn
  %maps_sz.0 = add i32 %maps_sz.0.in, 16
  %12 = tail call i32 @llvm.smax.i32(i32 %maps_sz.0, i32 128)
  %tobool40.not = icmp eq ptr %7, null
  br i1 %tobool40.not, label %if.end35.if.end51_crit_edge, label %land.lhs.true41

if.end35.if.end51_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end51

land.lhs.true41:                                  ; preds = %if.end35
  %num_tc42 = getelementptr inbounds %struct.xps_dev_maps, ptr %7, i32 0, i32 2
  %13 = ptrtoint ptr %num_tc42 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %num_tc42, align 4
  %conv43 = sext i16 %14 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %num_tc.0, i32 %conv43)
  %cmp44 = icmp eq i32 %num_tc.0, %conv43
  br i1 %cmp44, label %land.lhs.true46, label %land.lhs.true41.if.end51_crit_edge

land.lhs.true41.if.end51_crit_edge:               ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end51

land.lhs.true46:                                  ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #37
  %nr_ids47 = getelementptr inbounds %struct.xps_dev_maps, ptr %7, i32 0, i32 1
  %15 = ptrtoint ptr %nr_ids47 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nr_ids47, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %nr_ids.0)
  %cmp48 = icmp eq i32 %16, %nr_ids.0
  br label %if.end51

if.end51:                                         ; preds = %land.lhs.true46, %land.lhs.true41.if.end51_crit_edge, %if.end35.if.end51_crit_edge
  %copy.0.off0 = phi i1 [ false, %land.lhs.true41.if.end51_crit_edge ], [ false, %if.end35.if.end51_crit_edge ], [ %cmp48, %land.lhs.true46 ]
  %tobool.not.i = icmp eq ptr %online_mask.1, null
  %tobool1.not.i = icmp eq ptr %mask, null
  %or.cond.i = or i1 %tobool1.not.i, %tobool.not.i
  %conv62 = trunc i32 %num_tc.0 to i16
  br label %for.cond

for.cond:                                         ; preds = %do.body98, %if.end51
  %j.0 = phi i32 [ -1, %if.end51 ], [ %retval.0.i, %do.body98 ]
  %new_dev_maps.0 = phi ptr [ null, %if.end51 ], [ %new_dev_maps.1, %do.body98 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %j.0)
  %cmp.not.i = icmp eq i32 %j.0, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %j.0, i32 %nr_ids.0)
  %cmp.not.i.i = icmp ult i32 %j.0, %nr_ids.0
  %or.cond31.i = or i1 %cmp.not.i, %cmp.not.i.i
  br i1 %or.cond31.i, label %for.cond.if.end.i_crit_edge, label %land.rhs.i.i

for.cond.if.end.i_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

land.rhs.i.i:                                     ; preds = %for.cond
  %.b37.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i, label %land.rhs.i.i.if.end.i_crit_edge, label %if.then.i.i609, !prof !1311

land.rhs.i.i.if.end.i_crit_edge:                  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then.i.i609:                                   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i.i609, %land.rhs.i.i.if.end.i_crit_edge, %for.cond.if.end.i_crit_edge
  %add15.i = add i32 %j.0, 1
  br i1 %or.cond.i, label %if.else.i, label %if.end12.i.i

if.end12.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  %call13.i.i = tail call i32 @_find_next_bit(ptr noundef nonnull %online_mask.1, ptr noundef nonnull %mask, i32 noundef %nr_ids.0, i32 noundef %add15.i, i32 noundef 0, i32 noundef 0) #35
  br label %netif_attrmask_next_and.exit

if.else.i:                                        ; preds = %if.end.i
  br i1 %tobool.not.i, label %if.else7.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #37
  %call6.i = tail call i32 @_find_next_bit_be(ptr noundef nonnull %online_mask.1, i32 noundef %nr_ids.0, i32 noundef %add15.i) #35
  br label %netif_attrmask_next_and.exit

if.else7.i:                                       ; preds = %if.else.i
  br i1 %tobool1.not.i, label %if.else7.i.netif_attrmask_next_and.exit_crit_edge, label %if.then9.i

if.else7.i.netif_attrmask_next_and.exit_crit_edge: ; preds = %if.else7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_attrmask_next_and.exit

if.then9.i:                                       ; preds = %if.else7.i
  call void @__sanitizer_cov_trace_pc() #37
  %call11.i = tail call i32 @_find_next_bit_be(ptr noundef nonnull %mask, i32 noundef %nr_ids.0, i32 noundef %add15.i) #35
  br label %netif_attrmask_next_and.exit

netif_attrmask_next_and.exit:                     ; preds = %if.then9.i, %if.else7.i.netif_attrmask_next_and.exit_crit_edge, %if.then4.i, %if.end12.i.i
  %retval.0.i = phi i32 [ %call6.i, %if.then4.i ], [ %call11.i, %if.then9.i ], [ %call13.i.i, %if.end12.i.i ], [ %add15.i, %if.else7.i.netif_attrmask_next_and.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %nr_ids.0)
  %cmp53 = icmp ult i32 %retval.0.i, %nr_ids.0
  %tobool55.not = icmp eq ptr %new_dev_maps.0, null
  br i1 %cmp53, label %for.body, label %for.end

for.body:                                         ; preds = %netif_attrmask_next_and.exit
  br i1 %tobool55.not, label %if.end8.i.i, label %for.body.if.end64_crit_edge

for.body.if.end64_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end64

if.end8.i.i:                                      ; preds = %for.body
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %12, i32 noundef 3520) #44
  %tobool58.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool58.not, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #35
  br label %cleanup

if.end60:                                         ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %nr_ids61 = getelementptr inbounds %struct.xps_dev_maps, ptr %call9.i.i, i32 0, i32 1
  %17 = ptrtoint ptr %nr_ids61 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %nr_ids.0, ptr %nr_ids61, align 8
  %num_tc63 = getelementptr inbounds %struct.xps_dev_maps, ptr %call9.i.i, i32 0, i32 2
  %18 = ptrtoint ptr %num_tc63 to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %conv62, ptr %num_tc63, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.end60, %for.body.if.end64_crit_edge
  %new_dev_maps.1 = phi ptr [ %new_dev_maps.0, %for.body.if.end64_crit_edge ], [ %call9.i.i, %if.end60 ]
  %mul65 = mul i32 %retval.0.i, %num_tc.0
  %add66 = add i32 %mul65, %tc.0
  br i1 %copy.0.off0, label %do.body70, label %if.end64.if.end12.i_crit_edge

if.end64.if.end12.i_crit_edge:                    ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.body70:                                        ; preds = %if.end64
  %call.i615 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i615)
  %tobool72.not = icmp eq i32 %call.i615, 0
  br i1 %tobool72.not, label %land.lhs.true73, label %do.body70.cond.end85_crit_edge

do.body70.cond.end85_crit_edge:                   ; preds = %do.body70
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end85

land.lhs.true73:                                  ; preds = %do.body70
  %call74 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74)
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %land.lhs.true73.cond.end85_crit_edge, label %land.lhs.true76

land.lhs.true73.cond.end85_crit_edge:             ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end85

land.lhs.true76:                                  ; preds = %land.lhs.true73
  %.b587604 = load i1, ptr @__netif_set_xps_queue.__warned.51, align 1
  br i1 %.b587604, label %land.lhs.true76.cond.end85_crit_edge, label %if.then78

land.lhs.true76.cond.end85_crit_edge:             ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end85

if.then78:                                        ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_set_xps_queue.__warned.51, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2552, ptr noundef nonnull @.str.10) #35
  br label %cond.end85

cond.end85:                                       ; preds = %if.then78, %land.lhs.true76.cond.end85_crit_edge, %land.lhs.true73.cond.end85_crit_edge, %do.body70.cond.end85_crit_edge
  %arrayidx83 = getelementptr %struct.xps_dev_maps, ptr %7, i32 0, i32 3, i32 %add66
  %19 = ptrtoint ptr %arrayidx83 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx83, align 4
  %tobool.not.i616 = icmp eq ptr %20, null
  br i1 %tobool.not.i616, label %cond.end85.if.end12.i_crit_edge, label %land.rhs.lr.ph.i

cond.end85.if.end12.i_crit_edge:                  ; preds = %cond.end85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

land.rhs.lr.ph.i:                                 ; preds = %cond.end85
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %exitcond.not.i686 = icmp eq i32 %22, 0
  br i1 %exitcond.not.i686, label %land.rhs.lr.ph.i.if.then5.critedge.i_crit_edge, label %land.rhs.lr.ph.i.for.body.i_crit_edge

land.rhs.lr.ph.i.for.body.i_crit_edge:            ; preds = %land.rhs.lr.ph.i
  br label %for.body.i

land.rhs.lr.ph.i.if.then5.critedge.i_crit_edge:   ; preds = %land.rhs.lr.ph.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then5.critedge.i

land.rhs.i:                                       ; preds = %for.body.i
  %inc.i = add nuw i32 %pos.023.i687, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %22
  br i1 %exitcond.not.i, label %land.rhs.i.if.then5.critedge.i_crit_edge, label %land.rhs.i.for.body.i_crit_edge

land.rhs.i.for.body.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

land.rhs.i.if.then5.critedge.i_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then5.critedge.i

for.body.i:                                       ; preds = %land.rhs.i.for.body.i_crit_edge, %land.rhs.lr.ph.i.for.body.i_crit_edge
  %pos.023.i687 = phi i32 [ %inc.i, %land.rhs.i.for.body.i_crit_edge ], [ 0, %land.rhs.lr.ph.i.for.body.i_crit_edge ]
  %arrayidx.i617 = getelementptr %struct.xps_map, ptr %20, i32 0, i32 3, i32 %pos.023.i687
  %23 = ptrtoint ptr %arrayidx.i617 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %arrayidx.i617, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %24, i16 %index)
  %cmp2.not.i = icmp eq i16 %24, %index
  br i1 %cmp2.not.i, label %for.body.i.do.body98_crit_edge, label %land.rhs.i

for.body.i.do.body98_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body98

if.then5.critedge.i:                              ; preds = %land.rhs.i.if.then5.critedge.i_crit_edge, %land.rhs.lr.ph.i.if.then5.critedge.i_crit_edge
  %alloc_len6.i = getelementptr inbounds %struct.xps_map, ptr %20, i32 0, i32 1
  %25 = ptrtoint ptr %alloc_len6.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %alloc_len6.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %26)
  %cmp7.i = icmp ult i32 %22, %26
  br i1 %cmp7.i, label %if.then5.critedge.i.do.body98_crit_edge, label %if.end10.i

if.then5.critedge.i.do.body98_crit_edge:          ; preds = %if.then5.critedge.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body98

if.end10.i:                                       ; preds = %if.then5.critedge.i
  call void @__sanitizer_cov_trace_pc() #37
  %mul.i = shl i32 %26, 1
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.end10.i, %cond.end85.if.end12.i_crit_edge, %if.end64.if.end12.i_crit_edge
  %cond86679 = phi ptr [ %20, %if.end10.i ], [ null, %cond.end85.if.end12.i_crit_edge ], [ null, %if.end64.if.end12.i_crit_edge ]
  %pos.022.i = phi i32 [ %22, %if.end10.i ], [ 0, %cond.end85.if.end12.i_crit_edge ], [ 0, %if.end64.if.end12.i_crit_edge ]
  %alloc_len.0.i = phi i32 [ %mul.i, %if.end10.i ], [ 56, %cond.end85.if.end12.i_crit_edge ], [ 56, %if.end64.if.end12.i_crit_edge ]
  %mul15.i = shl i32 %alloc_len.0.i, 1
  %add.i = add i32 %mul15.i, 16
  %call.i2.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3520) #44
  %tobool20.not.i = icmp eq ptr %call.i2.i.i.i, null
  br i1 %tobool20.not.i, label %for.body372.preheader, label %for.cond23.preheader.i

for.cond23.preheader.i:                           ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %pos.022.i)
  %cmp2424.i = icmp sgt i32 %pos.022.i, 0
  br i1 %cmp2424.i, label %for.cond23.preheader.i.for.body26.i_crit_edge, label %for.cond23.preheader.i.for.end33.i_crit_edge

for.cond23.preheader.i.for.end33.i_crit_edge:     ; preds = %for.cond23.preheader.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end33.i

for.cond23.preheader.i.for.body26.i_crit_edge:    ; preds = %for.cond23.preheader.i
  br label %for.body26.i

for.body26.i:                                     ; preds = %for.body26.i.for.body26.i_crit_edge, %for.cond23.preheader.i.for.body26.i_crit_edge
  %i.025.i = phi i32 [ %inc32.i, %for.body26.i.for.body26.i_crit_edge ], [ 0, %for.cond23.preheader.i.for.body26.i_crit_edge ]
  %arrayidx28.i = getelementptr %struct.xps_map, ptr %cond86679, i32 0, i32 3, i32 %i.025.i
  %27 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %arrayidx28.i, align 2
  %arrayidx30.i = getelementptr %struct.xps_map, ptr %call.i2.i.i.i, i32 0, i32 3, i32 %i.025.i
  %29 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %28, ptr %arrayidx30.i, align 2
  %inc32.i = add nuw nsw i32 %i.025.i, 1
  %exitcond29.not.i = icmp eq i32 %inc32.i, %pos.022.i
  br i1 %exitcond29.not.i, label %for.body26.i.for.end33.i_crit_edge, label %for.body26.i.for.body26.i_crit_edge

for.body26.i.for.body26.i_crit_edge:              ; preds = %for.body26.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body26.i

for.body26.i.for.end33.i_crit_edge:               ; preds = %for.body26.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end33.i

for.end33.i:                                      ; preds = %for.body26.i.for.end33.i_crit_edge, %for.cond23.preheader.i.for.end33.i_crit_edge
  %alloc_len34.i = getelementptr inbounds %struct.xps_map, ptr %call.i2.i.i.i, i32 0, i32 1
  %30 = ptrtoint ptr %alloc_len34.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %alloc_len.0.i, ptr %alloc_len34.i, align 4
  %31 = ptrtoint ptr %call.i2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %pos.022.i, ptr %call.i2.i.i.i, align 128
  br label %do.body98

for.body372.preheader:                            ; preds = %if.end12.i
  %umax = call i32 @llvm.umax.i32(i32 %nr_ids.0, i32 1)
  br label %for.body372

do.body98:                                        ; preds = %for.end33.i, %if.then5.critedge.i.do.body98_crit_edge, %for.body.i.do.body98_crit_edge
  %retval.0.i621 = phi ptr [ %call.i2.i.i.i, %for.end33.i ], [ %20, %if.then5.critedge.i.do.body98_crit_edge ], [ %20, %for.body.i.do.body98_crit_edge ]
  %arrayidx100 = getelementptr %struct.xps_dev_maps, ptr %new_dev_maps.1, i32 0, i32 3, i32 %add66
  %32 = ptrtoint ptr %arrayidx100 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %retval.0.i621, ptr %arrayidx100, align 4
  br label %for.cond

for.end:                                          ; preds = %netif_attrmask_next_and.exit
  br i1 %tobool55.not, label %for.end.out_no_new_maps_crit_edge, label %if.end109

for.end.out_no_new_maps_crit_edge:                ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_no_new_maps

if.end109:                                        ; preds = %for.end
  br i1 %tobool40.not, label %if.then111, label %if.end109.if.end116_crit_edge

if.end109.if.end116_crit_edge:                    ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end116

if.then111:                                       ; preds = %if.end109
  tail call void @static_key_slow_inc_cpuslocked(ptr noundef nonnull @xps_needed) #35
  br i1 %cmp22, label %if.then114, label %if.then111.if.end116_crit_edge

if.then111.if.end116_crit_edge:                   ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end116

if.then114:                                       ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @static_key_slow_inc_cpuslocked(ptr noundef nonnull @xps_rxqs_needed) #35
  br label %if.end116

if.end116:                                        ; preds = %if.then114, %if.then111.if.end116_crit_edge, %if.end109.if.end116_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_ids.0)
  %cmp118693.not = icmp eq i32 %nr_ids.0, 0
  br i1 %cmp118693.not, label %if.end116.do.body167_crit_edge, label %netif_attr_test_mask.exit.lr.ph

if.end116.do.body167_crit_edge:                   ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body167

netif_attr_test_mask.exit.lr.ph:                  ; preds = %if.end116
  %num_tc.i = getelementptr inbounds %struct.xps_dev_maps, ptr %7, i32 0, i32 2
  br label %netif_attr_test_mask.exit

netif_attr_test_mask.exit:                        ; preds = %if.end164.netif_attr_test_mask.exit_crit_edge, %netif_attr_test_mask.exit.lr.ph
  %j.1694 = phi i32 [ 0, %netif_attr_test_mask.exit.lr.ph ], [ %inc165, %if.end164.netif_attr_test_mask.exit_crit_edge ]
  %mul121 = mul i32 %j.1694, %num_tc.0
  %add122 = add i32 %mul121, %tc.0
  %div3.i.i = lshr i32 %j.1694, 5
  %arrayidx.i.i = getelementptr i32, ptr %mask, i32 %div3.i.i
  %33 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i626 = and i32 %j.1694, 31
  %35 = shl nuw i32 1, %and.i.i626
  %36 = and i32 %34, %35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.i.not = icmp eq i32 %36, 0
  br i1 %tobool.i.not, label %netif_attr_test_mask.exit.if.end160_crit_edge, label %cpu_max_bits_warn.exit.i

netif_attr_test_mask.exit.if.end160_crit_edge:    ; preds = %netif_attr_test_mask.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end160

cpu_max_bits_warn.exit.i:                         ; preds = %netif_attr_test_mask.exit
  br i1 %tobool.not.i, label %cpu_max_bits_warn.exit.i.if.then128_crit_edge, label %netif_attr_test_online.exit

cpu_max_bits_warn.exit.i.if.then128_crit_edge:    ; preds = %cpu_max_bits_warn.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then128

netif_attr_test_online.exit:                      ; preds = %cpu_max_bits_warn.exit.i
  %arrayidx.i.i633 = getelementptr i32, ptr %online_mask.1, i32 %div3.i.i
  %37 = ptrtoint ptr %arrayidx.i.i633 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %arrayidx.i.i633, align 4
  %39 = and i32 %38, %35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool1.i.not = icmp eq i32 %39, 0
  br i1 %tobool1.i.not, label %netif_attr_test_online.exit.if.end160_crit_edge, label %netif_attr_test_online.exit.if.then128_crit_edge

netif_attr_test_online.exit.if.then128_crit_edge: ; preds = %netif_attr_test_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then128

netif_attr_test_online.exit.if.end160_crit_edge:  ; preds = %netif_attr_test_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end160

if.then128:                                       ; preds = %netif_attr_test_online.exit.if.then128_crit_edge, %cpu_max_bits_warn.exit.i.if.then128_crit_edge
  %call.i636 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i636)
  %tobool131.not = icmp eq i32 %call.i636, 0
  br i1 %tobool131.not, label %land.lhs.true132, label %if.then128.do.end140_crit_edge

if.then128.do.end140_crit_edge:                   ; preds = %if.then128
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end140

land.lhs.true132:                                 ; preds = %if.then128
  %call133 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call133)
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %land.lhs.true132.do.end140_crit_edge, label %land.lhs.true135

land.lhs.true132.do.end140_crit_edge:             ; preds = %land.lhs.true132
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end140

land.lhs.true135:                                 ; preds = %land.lhs.true132
  %.b588601 = load i1, ptr @__netif_set_xps_queue.__warned.52, align 1
  br i1 %.b588601, label %land.lhs.true135.do.end140_crit_edge, label %if.then137

land.lhs.true135.do.end140_crit_edge:             ; preds = %land.lhs.true135
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end140

if.then137:                                       ; preds = %land.lhs.true135
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_set_xps_queue.__warned.52, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2582, ptr noundef nonnull @.str.10) #35
  br label %do.end140

do.end140:                                        ; preds = %if.then137, %land.lhs.true135.do.end140_crit_edge, %land.lhs.true132.do.end140_crit_edge, %if.then128.do.end140_crit_edge
  %arrayidx143 = getelementptr %struct.xps_dev_maps, ptr %new_dev_maps.0, i32 0, i32 3, i32 %add122
  %40 = ptrtoint ptr %arrayidx143 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx143, align 4
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %41, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %cmp144688.not = icmp eq i32 %43, 0
  br i1 %cmp144688.not, label %do.end140.while.end_crit_edge, label %do.end140.land.rhs_crit_edge

do.end140.land.rhs_crit_edge:                     ; preds = %do.end140
  br label %land.rhs

do.end140.while.end_crit_edge:                    ; preds = %do.end140
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

land.rhs:                                         ; preds = %while.body.land.rhs_crit_edge, %do.end140.land.rhs_crit_edge
  %pos.0689 = phi i32 [ %inc, %while.body.land.rhs_crit_edge ], [ 0, %do.end140.land.rhs_crit_edge ]
  %arrayidx146 = getelementptr %struct.xps_map, ptr %41, i32 0, i32 3, i32 %pos.0689
  %44 = ptrtoint ptr %arrayidx146 to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %arrayidx146, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %45, i16 %index)
  %cmp149.not = icmp eq i16 %45, %index
  br i1 %cmp149.not, label %land.rhs.while.end_crit_edge, label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.body:                                       ; preds = %land.rhs
  %inc = add nuw i32 %pos.0689, 1
  %exitcond.not = icmp eq i32 %inc, %43
  br i1 %exitcond.not, label %while.body.if.then154_crit_edge, label %while.body.land.rhs_crit_edge

while.body.land.rhs_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %land.rhs

while.body.if.then154_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then154

while.end:                                        ; preds = %land.rhs.while.end_crit_edge, %do.end140.while.end_crit_edge
  %pos.0.lcssa = phi i32 [ 0, %do.end140.while.end_crit_edge ], [ %pos.0689, %land.rhs.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %pos.0.lcssa, i32 %43)
  %cmp152 = icmp eq i32 %pos.0.lcssa, %43
  br i1 %cmp152, label %while.end.if.then154_crit_edge, label %while.end.if.end160_crit_edge

while.end.if.end160_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end160

while.end.if.then154_crit_edge:                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then154

if.then154:                                       ; preds = %while.end.if.then154_crit_edge, %while.body.if.then154_crit_edge
  %inc157 = add i32 %43, 1
  %46 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %inc157, ptr %41, align 4
  %arrayidx158 = getelementptr %struct.xps_map, ptr %41, i32 0, i32 3, i32 %43
  %47 = ptrtoint ptr %arrayidx158 to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 %index, ptr %arrayidx158, align 2
  br label %if.end160

if.end160:                                        ; preds = %if.then154, %while.end.if.end160_crit_edge, %netif_attr_test_online.exit.if.end160_crit_edge, %netif_attr_test_mask.exit.if.end160_crit_edge
  %skip_tc.0.off0 = phi i1 [ false, %netif_attr_test_online.exit.if.end160_crit_edge ], [ false, %netif_attr_test_mask.exit.if.end160_crit_edge ], [ true, %if.then154 ], [ true, %while.end.if.end160_crit_edge ]
  br i1 %copy.0.off0, label %if.then162, label %if.end160.if.end164_crit_edge

if.end160.if.end164_crit_edge:                    ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end164

if.then162:                                       ; preds = %if.end160
  %48 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %num_tc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %49)
  %cmp38.i = icmp sgt i16 %49, 0
  br i1 %cmp38.i, label %for.body.preheader.i, label %if.then162.if.end164_crit_edge

if.then162.if.end164_crit_edge:                   ; preds = %if.then162
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end164

for.body.preheader.i:                             ; preds = %if.then162
  %conv42.i = zext i16 %49 to i32
  %mul.i637 = mul i32 %j.1694, %conv42.i
  br label %for.body.i638

for.body.i638:                                    ; preds = %for.inc.i641.for.body.i638_crit_edge, %for.body.preheader.i
  %i.041.i = phi i32 [ %inc.i640, %for.inc.i641.for.body.i638_crit_edge ], [ 0, %for.body.preheader.i ]
  %tci.039.i = phi i32 [ %inc29.i, %for.inc.i641.for.body.i638_crit_edge ], [ %mul.i637, %for.body.preheader.i ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.041.i, i32 %tc.0)
  %cmp4.i = icmp eq i32 %i.041.i, %tc.0
  %50 = and i1 %skip_tc.0.off0, %cmp4.i
  br i1 %50, label %for.body.i638.for.inc.i641_crit_edge, label %do.body.i

for.body.i638.for.inc.i641_crit_edge:             ; preds = %for.body.i638
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i641

do.body.i:                                        ; preds = %for.body.i638
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool7.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool7.not.i, label %land.lhs.true8.i, label %do.body.i.do.end.i_crit_edge

do.body.i.do.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true8.i:                                 ; preds = %do.body.i
  %call9.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true8.i.do.end.i_crit_edge, label %land.lhs.true11.i

land.lhs.true8.i.do.end.i_crit_edge:              ; preds = %land.lhs.true8.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true11.i:                                ; preds = %land.lhs.true8.i
  %.b36.i = load i1, ptr @xps_copy_dev_maps.__warned, align 1
  br i1 %.b36.i, label %land.lhs.true11.i.do.end.i_crit_edge, label %if.then13.i

land.lhs.true11.i.do.end.i_crit_edge:             ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

if.then13.i:                                      ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @xps_copy_dev_maps.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2481, ptr noundef nonnull @.str.10) #35
  br label %do.end.i

do.end.i:                                         ; preds = %if.then13.i, %land.lhs.true11.i.do.end.i_crit_edge, %land.lhs.true8.i.do.end.i_crit_edge, %do.body.i.do.end.i_crit_edge
  %arrayidx.i639 = getelementptr %struct.xps_dev_maps, ptr %7, i32 0, i32 3, i32 %tci.039.i
  %51 = ptrtoint ptr %arrayidx.i639 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %arrayidx.i639, align 4
  %arrayidx22.i = getelementptr %struct.xps_dev_maps, ptr %new_dev_maps.0, i32 0, i32 3, i32 %tci.039.i
  %53 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %52, ptr %arrayidx22.i, align 4
  br label %for.inc.i641

for.inc.i641:                                     ; preds = %do.end.i, %for.body.i638.for.inc.i641_crit_edge
  %inc.i640 = add nuw nsw i32 %i.041.i, 1
  %inc29.i = add i32 %tci.039.i, 1
  %54 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %num_tc.i, align 4
  %conv2.i = sext i16 %55 to i32
  %cmp.i = icmp slt i32 %inc.i640, %conv2.i
  br i1 %cmp.i, label %for.inc.i641.for.body.i638_crit_edge, label %for.inc.i641.if.end164_crit_edge

for.inc.i641.if.end164_crit_edge:                 ; preds = %for.inc.i641
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end164

for.inc.i641.for.body.i638_crit_edge:             ; preds = %for.inc.i641
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i638

if.end164:                                        ; preds = %for.inc.i641.if.end164_crit_edge, %if.then162.if.end164_crit_edge, %if.end160.if.end164_crit_edge
  %inc165 = add nuw i32 %j.1694, 1
  %exitcond728.not = icmp eq i32 %inc165, %nr_ids.0
  br i1 %exitcond728.not, label %if.end164.do.body167_crit_edge, label %if.end164.netif_attr_test_mask.exit_crit_edge

if.end164.netif_attr_test_mask.exit_crit_edge:    ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_attr_test_mask.exit

if.end164.do.body167_crit_edge:                   ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body167

do.body167:                                       ; preds = %if.end164.do.body167_crit_edge, %if.end116.do.body167_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1335
  %56 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile ptr %new_dev_maps.0, ptr %arrayidx, align 4
  br i1 %tobool40.not, label %do.body167.out_no_new_maps_crit_edge, label %for.cond213.preheader

do.body167.out_no_new_maps_crit_edge:             ; preds = %do.body167
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_no_new_maps

for.cond213.preheader:                            ; preds = %do.body167
  %nr_ids214 = getelementptr inbounds %struct.xps_dev_maps, ptr %7, i32 0, i32 1
  %57 = ptrtoint ptr %nr_ids214 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %nr_ids214, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %cmp215701.not = icmp eq i32 %58, 0
  br i1 %cmp215701.not, label %for.cond213.preheader.out_no_new_maps_crit_edge, label %for.body217.lr.ph

for.cond213.preheader.out_no_new_maps_crit_edge:  ; preds = %for.cond213.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_no_new_maps

for.body217.lr.ph:                                ; preds = %for.cond213.preheader
  %num_tc218 = getelementptr inbounds %struct.xps_dev_maps, ptr %7, i32 0, i32 2
  br label %for.body217

for.body217:                                      ; preds = %for.inc290.for.body217_crit_edge, %for.body217.lr.ph
  %j.2702 = phi i32 [ 0, %for.body217.lr.ph ], [ %inc291, %for.inc290.for.body217_crit_edge ]
  %59 = ptrtoint ptr %num_tc218 to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %num_tc218, align 4
  %conv219 = sext i16 %60 to i32
  %mul220 = mul i32 %j.2702, %conv219
  br label %do.body224

do.body224:                                       ; preds = %for.inc287.do.body224_crit_edge, %for.body217
  %dec700.in = phi i32 [ %num_tc.0, %for.body217 ], [ %dec700, %for.inc287.do.body224_crit_edge ]
  %tci.0697 = phi i32 [ %mul220, %for.body217 ], [ %inc288, %for.inc287.do.body224_crit_edge ]
  %dec700 = add i32 %dec700.in, -1
  %call.i642 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i642)
  %tobool226.not = icmp eq i32 %call.i642, 0
  br i1 %tobool226.not, label %land.lhs.true227, label %do.body224.do.end235_crit_edge

do.body224.do.end235_crit_edge:                   ; preds = %do.body224
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end235

land.lhs.true227:                                 ; preds = %do.body224
  %call228 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call228)
  %tobool229.not = icmp eq i32 %call228, 0
  br i1 %tobool229.not, label %land.lhs.true227.do.end235_crit_edge, label %land.lhs.true230

land.lhs.true227.do.end235_crit_edge:             ; preds = %land.lhs.true227
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end235

land.lhs.true230:                                 ; preds = %land.lhs.true227
  %.b589600 = load i1, ptr @__netif_set_xps_queue.__warned.53, align 1
  br i1 %.b589600, label %land.lhs.true230.do.end235_crit_edge, label %if.then232

land.lhs.true230.do.end235_crit_edge:             ; preds = %land.lhs.true230
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end235

if.then232:                                       ; preds = %land.lhs.true230
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_set_xps_queue.__warned.53, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2611, ptr noundef nonnull @.str.10) #35
  br label %do.end235

do.end235:                                        ; preds = %if.then232, %land.lhs.true230.do.end235_crit_edge, %land.lhs.true227.do.end235_crit_edge, %do.body224.do.end235_crit_edge
  %arrayidx238 = getelementptr %struct.xps_dev_maps, ptr %7, i32 0, i32 3, i32 %tci.0697
  %61 = ptrtoint ptr %arrayidx238 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %arrayidx238, align 4
  %tobool239.not = icmp eq ptr %62, null
  br i1 %tobool239.not, label %do.end235.for.inc287_crit_edge, label %if.end241

do.end235.for.inc287_crit_edge:                   ; preds = %do.end235
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc287

if.end241:                                        ; preds = %do.end235
  br i1 %copy.0.off0, label %do.body244, label %if.end241.do.body269_crit_edge

if.end241.do.body269_crit_edge:                   ; preds = %if.end241
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body269

do.body244:                                       ; preds = %if.end241
  %call.i643 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i643)
  %tobool246.not = icmp eq i32 %call.i643, 0
  br i1 %tobool246.not, label %land.lhs.true247, label %do.body244.do.end255_crit_edge

do.body244.do.end255_crit_edge:                   ; preds = %do.body244
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end255

land.lhs.true247:                                 ; preds = %do.body244
  %call248 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call248)
  %tobool249.not = icmp eq i32 %call248, 0
  br i1 %tobool249.not, label %land.lhs.true247.do.end255_crit_edge, label %land.lhs.true250

land.lhs.true247.do.end255_crit_edge:             ; preds = %land.lhs.true247
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end255

land.lhs.true250:                                 ; preds = %land.lhs.true247
  %.b590599 = load i1, ptr @__netif_set_xps_queue.__warned.54, align 1
  br i1 %.b590599, label %land.lhs.true250.do.end255_crit_edge, label %if.then252

land.lhs.true250.do.end255_crit_edge:             ; preds = %land.lhs.true250
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end255

if.then252:                                       ; preds = %land.lhs.true250
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_set_xps_queue.__warned.54, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2616, ptr noundef nonnull @.str.10) #35
  br label %do.end255

do.end255:                                        ; preds = %if.then252, %land.lhs.true250.do.end255_crit_edge, %land.lhs.true247.do.end255_crit_edge, %do.body244.do.end255_crit_edge
  %arrayidx258 = getelementptr %struct.xps_dev_maps, ptr %new_dev_maps.0, i32 0, i32 3, i32 %tci.0697
  %63 = ptrtoint ptr %arrayidx258 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx258, align 4
  %cmp259 = icmp eq ptr %62, %64
  br i1 %cmp259, label %do.end255.for.inc287_crit_edge, label %do.end255.do.body269_crit_edge

do.end255.do.body269_crit_edge:                   ; preds = %do.end255
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body269

do.end255.for.inc287_crit_edge:                   ; preds = %do.end255
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc287

do.body269:                                       ; preds = %do.end255.do.body269_crit_edge, %if.end241.do.body269_crit_edge
  %65 = ptrtoint ptr %arrayidx238 to i32
  call void @__asan_store4_noabort(i32 %65)
  store volatile ptr null, ptr %arrayidx238, align 4
  %rcu = getelementptr inbounds %struct.xps_map, ptr %62, i32 0, i32 2
  tail call void @kvfree_call_rcu(ptr noundef %rcu, ptr noundef nonnull inttoptr (i32 8 to ptr)) #35
  br label %for.inc287

for.inc287:                                       ; preds = %do.body269, %do.end255.for.inc287_crit_edge, %do.end235.for.inc287_crit_edge
  %inc288 = add i32 %tci.0697, 1
  %tobool222.not = icmp eq i32 %dec700, 0
  br i1 %tobool222.not, label %for.inc290, label %for.inc287.do.body224_crit_edge

for.inc287.do.body224_crit_edge:                  ; preds = %for.inc287
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body224

for.inc290:                                       ; preds = %for.inc287
  %inc291 = add nuw i32 %j.2702, 1
  %66 = ptrtoint ptr %nr_ids214 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %nr_ids214, align 4
  %cmp215 = icmp ult i32 %inc291, %67
  br i1 %cmp215, label %for.inc290.for.body217_crit_edge, label %for.inc290.out_no_new_maps_crit_edge

for.inc290.out_no_new_maps_crit_edge:             ; preds = %for.inc290
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_no_new_maps

for.inc290.for.body217_crit_edge:                 ; preds = %for.inc290
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body217

out_no_new_maps:                                  ; preds = %for.inc290.out_no_new_maps_crit_edge, %for.cond213.preheader.out_no_new_maps_crit_edge, %do.body167.out_no_new_maps_crit_edge, %for.end.out_no_new_maps_crit_edge
  %old_dev_maps.1 = phi ptr [ null, %for.end.out_no_new_maps_crit_edge ], [ null, %do.body167.out_no_new_maps_crit_edge ], [ %7, %for.cond213.preheader.out_no_new_maps_crit_edge ], [ %7, %for.inc290.out_no_new_maps_crit_edge ]
  %dev_maps.0 = phi ptr [ %7, %for.end.out_no_new_maps_crit_edge ], [ %new_dev_maps.0, %do.body167.out_no_new_maps_crit_edge ], [ %new_dev_maps.0, %for.cond213.preheader.out_no_new_maps_crit_edge ], [ %new_dev_maps.0, %for.inc290.out_no_new_maps_crit_edge ]
  %68 = xor i1 %tobool55.not, true
  %tobool305.not = icmp eq ptr %dev_maps.0, null
  br i1 %tobool305.not, label %out_no_new_maps.out_no_maps_crit_edge, label %for.cond308.preheader

out_no_new_maps.out_no_maps_crit_edge:            ; preds = %out_no_new_maps
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_no_maps

for.cond308.preheader:                            ; preds = %out_no_new_maps
  %nr_ids309 = getelementptr inbounds %struct.xps_dev_maps, ptr %dev_maps.0, i32 0, i32 1
  %69 = ptrtoint ptr %nr_ids309 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %nr_ids309, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %cmp310711.not = icmp eq i32 %70, 0
  br i1 %cmp310711.not, label %for.cond308.preheader.for.end351_crit_edge, label %for.body312.lr.ph

for.cond308.preheader.for.end351_crit_edge:       ; preds = %for.cond308.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end351

for.body312.lr.ph:                                ; preds = %for.cond308.preheader
  %num_tc313 = getelementptr inbounds %struct.xps_dev_maps, ptr %dev_maps.0, i32 0, i32 2
  %spec.select608 = select i1 %copy.0.off0, ptr %old_dev_maps.1, ptr null
  br label %for.body312

for.body312:                                      ; preds = %for.inc349.for.body312_crit_edge, %for.body312.lr.ph
  %active.1.off0714 = phi i1 [ %68, %for.body312.lr.ph ], [ %active.2.off0.lcssa, %for.inc349.for.body312_crit_edge ]
  %j.3712 = phi i32 [ 0, %for.body312.lr.ph ], [ %inc350, %for.inc349.for.body312_crit_edge ]
  %71 = ptrtoint ptr %num_tc313 to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %num_tc313, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %72)
  %cmp319704 = icmp sgt i16 %72, 0
  br i1 %cmp319704, label %for.body321.lr.ph, label %for.body312.for.inc349_crit_edge

for.body312.for.inc349_crit_edge:                 ; preds = %for.body312
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc349

for.body321.lr.ph:                                ; preds = %for.body312
  %73 = ptrtoint ptr %num_tc313 to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %num_tc313, align 4
  %conv314 = sext i16 %74 to i32
  %mul315 = mul i32 %j.3712, %conv314
  %div3.i.i650 = lshr i32 %j.3712, 5
  %arrayidx.i.i651 = getelementptr i32, ptr %mask, i32 %div3.i.i650
  %and.i.i652 = and i32 %j.3712, 31
  %75 = shl nuw i32 1, %and.i.i652
  %arrayidx.i.i663 = getelementptr i32, ptr %online_mask.1, i32 %div3.i.i650
  br label %for.body321

for.body321:                                      ; preds = %for.inc345.for.body321_crit_edge, %for.body321.lr.ph
  %active.2.off0708 = phi i1 [ %active.1.off0714, %for.body321.lr.ph ], [ %active.3.off0, %for.inc345.for.body321_crit_edge ]
  %tci.1706 = phi i32 [ %mul315, %for.body321.lr.ph ], [ %inc347, %for.inc345.for.body321_crit_edge ]
  %i.1705 = phi i32 [ 0, %for.body321.lr.ph ], [ %inc346, %for.inc345.for.body321_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1705, i32 %tc.0)
  %cmp322 = icmp eq i32 %i.1705, %tc.0
  br i1 %cmp322, label %land.lhs.true324, label %for.body321.if.end333_crit_edge

for.body321.if.end333_crit_edge:                  ; preds = %for.body321
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end333

land.lhs.true324:                                 ; preds = %for.body321
  %76 = ptrtoint ptr %nr_ids309 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %nr_ids309, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %j.3712, i32 %77)
  %cmp.not.i.i646 = icmp ult i32 %j.3712, %77
  br i1 %cmp.not.i.i646, label %land.lhs.true324.netif_attr_test_mask.exit655_crit_edge, label %land.rhs.i.i648

land.lhs.true324.netif_attr_test_mask.exit655_crit_edge: ; preds = %land.lhs.true324
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_attr_test_mask.exit655

land.rhs.i.i648:                                  ; preds = %land.lhs.true324
  %.b37.i.i647 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i647, label %land.rhs.i.i648.netif_attr_test_mask.exit655_crit_edge, label %if.then.i.i649, !prof !1311

land.rhs.i.i648.netif_attr_test_mask.exit655_crit_edge: ; preds = %land.rhs.i.i648
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_attr_test_mask.exit655

if.then.i.i649:                                   ; preds = %land.rhs.i.i648
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %netif_attr_test_mask.exit655

netif_attr_test_mask.exit655:                     ; preds = %if.then.i.i649, %land.rhs.i.i648.netif_attr_test_mask.exit655_crit_edge, %land.lhs.true324.netif_attr_test_mask.exit655_crit_edge
  %78 = ptrtoint ptr %arrayidx.i.i651 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %arrayidx.i.i651, align 4
  %80 = and i32 %79, %75
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.i653.not = icmp eq i32 %80, 0
  br i1 %tobool.i653.not, label %netif_attr_test_mask.exit655.if.end333_crit_edge, label %land.lhs.true328

netif_attr_test_mask.exit655.if.end333_crit_edge: ; preds = %netif_attr_test_mask.exit655
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end333

land.lhs.true328:                                 ; preds = %netif_attr_test_mask.exit655
  %81 = ptrtoint ptr %nr_ids309 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %nr_ids309, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %j.3712, i32 %82)
  %cmp.not.i.i656 = icmp ult i32 %j.3712, %82
  br i1 %cmp.not.i.i656, label %cpu_max_bits_warn.exit.i661.thread, label %land.rhs.i.i658

land.rhs.i.i658:                                  ; preds = %land.lhs.true328
  %.b37.i.i657 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i657, label %land.rhs.i.i658.cpu_max_bits_warn.exit.i661_crit_edge, label %if.then.i.i659, !prof !1311

land.rhs.i.i658.cpu_max_bits_warn.exit.i661_crit_edge: ; preds = %land.rhs.i.i658
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_max_bits_warn.exit.i661

if.then.i.i659:                                   ; preds = %land.rhs.i.i658
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_max_bits_warn.exit.i661

cpu_max_bits_warn.exit.i661:                      ; preds = %if.then.i.i659, %land.rhs.i.i658.cpu_max_bits_warn.exit.i661_crit_edge
  br i1 %tobool.not.i, label %cpu_max_bits_warn.exit.i661.if.end333_crit_edge, label %cpu_max_bits_warn.exit.i661.if.then.i666_crit_edge

cpu_max_bits_warn.exit.i661.if.then.i666_crit_edge: ; preds = %cpu_max_bits_warn.exit.i661
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i666

cpu_max_bits_warn.exit.i661.if.end333_crit_edge:  ; preds = %cpu_max_bits_warn.exit.i661
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end333

cpu_max_bits_warn.exit.i661.thread:               ; preds = %land.lhs.true328
  br i1 %tobool.not.i, label %cpu_max_bits_warn.exit.i661.thread.for.inc345_crit_edge, label %cpu_max_bits_warn.exit.i661.thread.if.then.i666_crit_edge

cpu_max_bits_warn.exit.i661.thread.if.then.i666_crit_edge: ; preds = %cpu_max_bits_warn.exit.i661.thread
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i666

cpu_max_bits_warn.exit.i661.thread.for.inc345_crit_edge: ; preds = %cpu_max_bits_warn.exit.i661.thread
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc345

if.then.i666:                                     ; preds = %cpu_max_bits_warn.exit.i661.thread.if.then.i666_crit_edge, %cpu_max_bits_warn.exit.i661.if.then.i666_crit_edge
  %83 = ptrtoint ptr %arrayidx.i.i663 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %arrayidx.i.i663, align 4
  %85 = and i32 %84, %75
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool1.i665.not = icmp eq i32 %85, 0
  br i1 %tobool1.i665.not, label %if.then.i666.if.end333_crit_edge, label %if.then.i666.for.inc345_crit_edge

if.then.i666.for.inc345_crit_edge:                ; preds = %if.then.i666
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc345

if.then.i666.if.end333_crit_edge:                 ; preds = %if.then.i666
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end333

if.end333:                                        ; preds = %if.then.i666.if.end333_crit_edge, %cpu_max_bits_warn.exit.i661.if.end333_crit_edge, %netif_attr_test_mask.exit655.if.end333_crit_edge, %for.body321.if.end333_crit_edge
  %call340 = tail call fastcc zeroext i1 @remove_xps_queue(ptr noundef nonnull %dev_maps.0, ptr noundef %spec.select608, i32 noundef %tci.1706, i16 noundef zeroext %index)
  %or598 = or i1 %active.2.off0708, %call340
  br label %for.inc345

for.inc345:                                       ; preds = %if.end333, %if.then.i666.for.inc345_crit_edge, %cpu_max_bits_warn.exit.i661.thread.for.inc345_crit_edge
  %active.3.off0 = phi i1 [ %or598, %if.end333 ], [ %active.2.off0708, %if.then.i666.for.inc345_crit_edge ], [ %active.2.off0708, %cpu_max_bits_warn.exit.i661.thread.for.inc345_crit_edge ]
  %inc346 = add nuw nsw i32 %i.1705, 1
  %inc347 = add i32 %tci.1706, 1
  %86 = ptrtoint ptr %num_tc313 to i32
  call void @__asan_load2_noabort(i32 %86)
  %87 = load i16, ptr %num_tc313, align 4
  %conv318 = sext i16 %87 to i32
  %cmp319 = icmp slt i32 %inc346, %conv318
  br i1 %cmp319, label %for.inc345.for.body321_crit_edge, label %for.inc345.for.inc349_crit_edge

for.inc345.for.inc349_crit_edge:                  ; preds = %for.inc345
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc349

for.inc345.for.body321_crit_edge:                 ; preds = %for.inc345
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body321

for.inc349:                                       ; preds = %for.inc345.for.inc349_crit_edge, %for.body312.for.inc349_crit_edge
  %active.2.off0.lcssa = phi i1 [ %active.1.off0714, %for.body312.for.inc349_crit_edge ], [ %active.3.off0, %for.inc345.for.inc349_crit_edge ]
  %inc350 = add nuw i32 %j.3712, 1
  %88 = ptrtoint ptr %nr_ids309 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %nr_ids309, align 4
  %cmp310 = icmp ult i32 %inc350, %89
  br i1 %cmp310, label %for.inc349.for.body312_crit_edge, label %for.inc349.for.end351_crit_edge

for.inc349.for.end351_crit_edge:                  ; preds = %for.inc349
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end351

for.inc349.for.body312_crit_edge:                 ; preds = %for.inc349
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body312

for.end351:                                       ; preds = %for.inc349.for.end351_crit_edge, %for.cond308.preheader.for.end351_crit_edge
  %active.1.off0.lcssa = phi i1 [ %68, %for.cond308.preheader.for.end351_crit_edge ], [ %active.2.off0.lcssa, %for.inc349.for.end351_crit_edge ]
  %tobool352.not = icmp eq ptr %old_dev_maps.1, null
  br i1 %tobool352.not, label %for.end351.if.end365_crit_edge, label %do.end360

for.end351.if.end365_crit_edge:                   ; preds = %for.end351
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end365

do.end360:                                        ; preds = %for.end351
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @kvfree_call_rcu(ptr noundef nonnull %old_dev_maps.1, ptr noundef null) #35
  br label %if.end365

if.end365:                                        ; preds = %do.end360, %for.end351.if.end365_crit_edge
  br i1 %active.1.off0.lcssa, label %if.end365.out_no_maps_crit_edge, label %if.then367

if.end365.out_no_maps_crit_edge:                  ; preds = %if.end365
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_no_maps

if.then367:                                       ; preds = %if.end365
  tail call void @static_key_slow_dec_cpuslocked(ptr noundef nonnull @xps_needed) #35
  br i1 %cmp22, label %if.then.i670, label %if.then367.reset_xps_maps.exit_crit_edge

if.then367.reset_xps_maps.exit_crit_edge:         ; preds = %if.then367
  call void @__sanitizer_cov_trace_pc() #37
  br label %reset_xps_maps.exit

if.then.i670:                                     ; preds = %if.then367
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @static_key_slow_dec_cpuslocked(ptr noundef nonnull @xps_rxqs_needed) #35
  br label %reset_xps_maps.exit

reset_xps_maps.exit:                              ; preds = %if.then.i670, %if.then367.reset_xps_maps.exit_crit_edge
  %90 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %90)
  store volatile ptr null, ptr %arrayidx, align 4
  tail call void @kvfree_call_rcu(ptr noundef nonnull %dev_maps.0, ptr noundef null) #35
  br label %out_no_maps

out_no_maps:                                      ; preds = %reset_xps_maps.exit, %if.end365.out_no_maps_crit_edge, %out_no_new_maps.out_no_maps_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #35
  br label %cleanup

for.body372:                                      ; preds = %for.inc423.for.body372_crit_edge, %for.body372.preheader
  %j.4721 = phi i32 [ %inc424, %for.inc423.for.body372_crit_edge ], [ 0, %for.body372.preheader ]
  %mul373 = mul i32 %j.4721, %num_tc.0
  br label %do.body378

do.body378:                                       ; preds = %for.inc420.do.body378_crit_edge, %for.body372
  %dec375719.in = phi i32 [ %num_tc.0, %for.body372 ], [ %dec375719, %for.inc420.do.body378_crit_edge ]
  %tci.2717 = phi i32 [ %mul373, %for.body372 ], [ %inc421, %for.inc420.do.body378_crit_edge ]
  %dec375719 = add i32 %dec375719.in, -1
  %call.i673 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i673)
  %tobool380.not = icmp eq i32 %call.i673, 0
  br i1 %tobool380.not, label %land.lhs.true381, label %do.body378.do.end389_crit_edge

do.body378.do.end389_crit_edge:                   ; preds = %do.body378
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end389

land.lhs.true381:                                 ; preds = %do.body378
  %call382 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call382)
  %tobool383.not = icmp eq i32 %call382, 0
  br i1 %tobool383.not, label %land.lhs.true381.do.end389_crit_edge, label %land.lhs.true384

land.lhs.true381.do.end389_crit_edge:             ; preds = %land.lhs.true381
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end389

land.lhs.true384:                                 ; preds = %land.lhs.true381
  %.b591603 = load i1, ptr @__netif_set_xps_queue.__warned.55, align 1
  br i1 %.b591603, label %land.lhs.true384.do.end389_crit_edge, label %if.then386

land.lhs.true384.do.end389_crit_edge:             ; preds = %land.lhs.true384
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end389

if.then386:                                       ; preds = %land.lhs.true384
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_set_xps_queue.__warned.55, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2673, ptr noundef nonnull @.str.10) #35
  br label %do.end389

do.end389:                                        ; preds = %if.then386, %land.lhs.true384.do.end389_crit_edge, %land.lhs.true381.do.end389_crit_edge, %do.body378.do.end389_crit_edge
  %arrayidx392 = getelementptr %struct.xps_dev_maps, ptr %new_dev_maps.1, i32 0, i32 3, i32 %tci.2717
  %91 = ptrtoint ptr %arrayidx392 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %arrayidx392, align 4
  br i1 %copy.0.off0, label %do.body396, label %do.end389.cond.end412_crit_edge

do.end389.cond.end412_crit_edge:                  ; preds = %do.end389
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end412

do.body396:                                       ; preds = %do.end389
  %call.i674 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i674)
  %tobool398.not = icmp eq i32 %call.i674, 0
  br i1 %tobool398.not, label %land.lhs.true399, label %do.body396.do.end407_crit_edge

do.body396.do.end407_crit_edge:                   ; preds = %do.body396
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end407

land.lhs.true399:                                 ; preds = %do.body396
  %call400 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call400)
  %tobool401.not = icmp eq i32 %call400, 0
  br i1 %tobool401.not, label %land.lhs.true399.do.end407_crit_edge, label %land.lhs.true402

land.lhs.true399.do.end407_crit_edge:             ; preds = %land.lhs.true399
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end407

land.lhs.true402:                                 ; preds = %land.lhs.true399
  %.b592602 = load i1, ptr @__netif_set_xps_queue.__warned.56, align 1
  br i1 %.b592602, label %land.lhs.true402.do.end407_crit_edge, label %if.then404

land.lhs.true402.do.end407_crit_edge:             ; preds = %land.lhs.true402
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end407

if.then404:                                       ; preds = %land.lhs.true402
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_set_xps_queue.__warned.56, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2675, ptr noundef nonnull @.str.10) #35
  br label %do.end407

do.end407:                                        ; preds = %if.then404, %land.lhs.true402.do.end407_crit_edge, %land.lhs.true399.do.end407_crit_edge, %do.body396.do.end407_crit_edge
  %arrayidx410 = getelementptr %struct.xps_dev_maps, ptr %7, i32 0, i32 3, i32 %tci.2717
  %93 = ptrtoint ptr %arrayidx410 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %arrayidx410, align 4
  br label %cond.end412

cond.end412:                                      ; preds = %do.end407, %do.end389.cond.end412_crit_edge
  %cond413 = phi ptr [ %94, %do.end407 ], [ null, %do.end389.cond.end412_crit_edge ]
  %tobool414.not = icmp eq ptr %92, null
  %cmp416.not = icmp eq ptr %92, %cond413
  %or.cond = select i1 %tobool414.not, i1 true, i1 %cmp416.not
  br i1 %or.cond, label %cond.end412.for.inc420_crit_edge, label %if.then418

cond.end412.for.inc420_crit_edge:                 ; preds = %cond.end412
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc420

if.then418:                                       ; preds = %cond.end412
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @kfree(ptr noundef nonnull %92) #35
  br label %for.inc420

for.inc420:                                       ; preds = %if.then418, %cond.end412.for.inc420_crit_edge
  %inc421 = add i32 %tci.2717, 1
  %tobool376.not = icmp eq i32 %dec375719, 0
  br i1 %tobool376.not, label %for.inc423, label %for.inc420.do.body378_crit_edge

for.inc420.do.body378_crit_edge:                  ; preds = %for.inc420
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body378

for.inc423:                                       ; preds = %for.inc420
  %inc424 = add nuw i32 %j.4721, 1
  %exitcond729.not = icmp eq i32 %inc424, %umax
  br i1 %exitcond729.not, label %for.end425, label %for.inc423.for.body372_crit_edge

for.inc423.for.body372_crit_edge:                 ; preds = %for.inc423
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body372

for.end425:                                       ; preds = %for.inc423
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #35
  tail call void @kfree(ptr noundef %new_dev_maps.1) #35
  br label %cleanup

cleanup:                                          ; preds = %for.end425, %out_no_maps, %if.then59, %if.end.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %for.end425 ], [ -12, %if.then59 ], [ 0, %out_no_maps ], [ -22, %if.then.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_slow_inc_cpuslocked(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @remove_xps_queue(ptr noundef %dev_maps, ptr noundef %old_maps, i32 noundef %tci, i16 noundef zeroext %index) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev_maps, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

do.body:                                          ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not = icmp eq i32 %call.i, 0
  br i1 %tobool1.not, label %land.lhs.true, label %do.body.if.end7_crit_edge

do.body.if.end7_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end7

land.lhs.true:                                    ; preds = %do.body
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.if.end7_crit_edge, label %land.lhs.true4

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b84 = load i1, ptr @remove_xps_queue.__warned, align 1
  br i1 %.b84, label %land.lhs.true4.if.end7_crit_edge, label %if.then6

land.lhs.true4.if.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end7

if.then6:                                         ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @remove_xps_queue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2323, ptr noundef nonnull @.str.10) #35
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %land.lhs.true4.if.end7_crit_edge, %land.lhs.true.if.end7_crit_edge, %do.body.if.end7_crit_edge
  %arrayidx = getelementptr %struct.xps_dev_maps, ptr %dev_maps, i32 0, i32 3, i32 %tci
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool8.not = icmp eq ptr %1, null
  br i1 %tobool8.not, label %if.end7.cleanup_crit_edge, label %if.end10

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end10:                                         ; preds = %if.end7
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.end10
  %pos.0 = phi i32 [ %3, %if.end10 ], [ %dec, %for.body.for.cond_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %pos.0)
  %tobool11.not = icmp eq i32 %pos.0, 0
  br i1 %tobool11.not, label %for.cond.cleanup_crit_edge, label %for.body

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %dec = add i32 %pos.0, -1
  %arrayidx12 = getelementptr %struct.xps_map, ptr %1, i32 0, i32 3, i32 %dec
  %4 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %arrayidx12, align 2
  %cmp.not = icmp eq i16 %5, %index
  br i1 %cmp.not, label %if.end16, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond

if.end16:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp18 = icmp ugt i32 %3, 1
  br i1 %cmp18, label %if.then20, label %if.end27

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #37
  %dec23 = add i32 %3, -1
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %dec23, ptr %1, align 4
  %arrayidx24 = getelementptr %struct.xps_map, ptr %1, i32 0, i32 3, i32 %dec23
  %7 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %arrayidx24, align 2
  %9 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %8, ptr %arrayidx12, align 2
  br label %cleanup

if.end27:                                         ; preds = %if.end16
  %tobool28.not = icmp eq ptr %old_maps, null
  br i1 %tobool28.not, label %if.end27.do.body50_crit_edge, label %do.body35

if.end27.do.body50_crit_edge:                     ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body50

do.body35:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #37
  %arrayidx37 = getelementptr %struct.xps_dev_maps, ptr %old_maps, i32 0, i32 3, i32 %tci
  %10 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr null, ptr %arrayidx37, align 4
  br label %do.body50

do.body50:                                        ; preds = %do.body35, %if.end27.do.body50_crit_edge
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr null, ptr %arrayidx, align 4
  %rcu = getelementptr inbounds %struct.xps_map, ptr %1, i32 0, i32 2
  tail call void @kvfree_call_rcu(ptr noundef %rcu, ptr noundef nonnull inttoptr (i32 8 to ptr)) #35
  br label %cleanup

cleanup:                                          ; preds = %do.body50, %if.then20, %for.cond.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %do.body50 ], [ false, %if.end7.cleanup_crit_edge ], [ true, %if.then20 ], [ false, %entry.cleanup_crit_edge ], [ true, %for.cond.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_set_xps_queue(ptr noundef %dev, ptr noundef %mask, i16 noundef zeroext %index) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @cpus_read_lock() #35
  %call = tail call i32 @__netif_set_xps_queue(ptr noundef %dev, ptr noundef %mask, i16 noundef zeroext %index, i32 noundef 0)
  tail call void @cpus_read_unlock() #35
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_lock() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_unlock() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_reset_tc(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef %dev, i16 noundef zeroext 0)
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %0 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %_tx.i, align 128
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %2 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_tx_queues.i, align 4
  %arrayidx.i = getelementptr %struct.netdev_queue, ptr %1, i32 %3
  %cmp.not10.i = icmp eq ptr %arrayidx.i, %1
  br i1 %cmp.not10.i, label %entry.netdev_unbind_all_sb_channels.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.netdev_unbind_all_sb_channels.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_unbind_all_sb_channels.exit

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %4 = phi ptr [ %18, %if.end.i.while.body.i_crit_edge ], [ %1, %entry.while.body.i_crit_edge ]
  %txq.011.i = phi ptr [ %incdec.ptr12.i, %if.end.i.while.body.i_crit_edge ], [ %arrayidx.i, %entry.while.body.i_crit_edge ]
  %incdec.ptr12.i = getelementptr %struct.netdev_queue, ptr %txq.011.i, i32 -1
  %sb_dev.i = getelementptr %struct.netdev_queue, ptr %txq.011.i, i32 -1, i32 7
  %5 = ptrtoint ptr %sb_dev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sb_dev.i, align 32
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %while.body.i.if.end.i_crit_edge, label %if.then.i

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then.i:                                        ; preds = %while.body.i
  %7 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_tx_queues.i, align 4
  %arrayidx.i.i = getelementptr %struct.netdev_queue, ptr %4, i32 %8
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef nonnull %6, i16 noundef zeroext 0) #35
  %tc_to_txq.i.i = getelementptr inbounds %struct.net_device, ptr %6, i32 0, i32 141
  %9 = call ptr @memset(ptr %tc_to_txq.i.i, i32 0, i32 80)
  %10 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %_tx.i, align 128
  %cmp.not15.i.i = icmp eq ptr %arrayidx.i.i, %11
  br i1 %cmp.not15.i.i, label %if.then.i.if.end.i_crit_edge, label %if.then.i.while.body.i.i_crit_edge

if.then.i.while.body.i.i_crit_edge:               ; preds = %if.then.i
  br label %while.body.i.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

while.body.i.i:                                   ; preds = %if.end.i.i.while.body.i.i_crit_edge, %if.then.i.while.body.i.i_crit_edge
  %txq.016.i.i = phi ptr [ %incdec.ptr17.i.i, %if.end.i.i.while.body.i.i_crit_edge ], [ %arrayidx.i.i, %if.then.i.while.body.i.i_crit_edge ]
  %incdec.ptr17.i.i = getelementptr %struct.netdev_queue, ptr %txq.016.i.i, i32 -1
  %sb_dev4.i.i = getelementptr %struct.netdev_queue, ptr %txq.016.i.i, i32 -1, i32 7
  %12 = ptrtoint ptr %sb_dev4.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sb_dev4.i.i, align 32
  %cmp5.i.i = icmp eq ptr %13, %6
  br i1 %cmp5.i.i, label %if.then.i.i, label %while.body.i.i.if.end.i.i_crit_edge

while.body.i.i.if.end.i.i_crit_edge:              ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %14 = ptrtoint ptr %sb_dev4.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %sb_dev4.i.i, align 32
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i.i.if.end.i.i_crit_edge
  %15 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %_tx.i, align 128
  %cmp.not.i.i = icmp eq ptr %incdec.ptr17.i.i, %16
  br i1 %cmp.not.i.i, label %if.end.i.i.if.end.i_crit_edge, label %if.end.i.i.while.body.i.i_crit_edge

if.end.i.i.while.body.i.i_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.i.i

if.end.i.i.if.end.i_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.end.i:                                         ; preds = %if.end.i.i.if.end.i_crit_edge, %if.then.i.if.end.i_crit_edge, %while.body.i.if.end.i_crit_edge
  %17 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %_tx.i, align 128
  %cmp.not.i = icmp eq ptr %incdec.ptr12.i, %18
  br i1 %cmp.not.i, label %if.end.i.netdev_unbind_all_sb_channels.exit_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.i

if.end.i.netdev_unbind_all_sb_channels.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_unbind_all_sb_channels.exit

netdev_unbind_all_sb_channels.exit:               ; preds = %if.end.i.netdev_unbind_all_sb_channels.exit_crit_edge, %entry.netdev_unbind_all_sb_channels.exit_crit_edge
  %num_tc = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %19 = call ptr @memset(ptr %num_tc, i32 0, i32 82)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @netif_reset_xps_queues_gt(ptr noundef %dev, i16 noundef zeroext %index) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %0 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_tx_queues, align 4
  %2 = trunc i32 %1 to i16
  %conv1 = sub i16 %2, %index
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @xps_needed, ptr blockaddress(@netif_reset_xps_queues_gt, %if.end.i)) #35
          to label %netif_reset_xps_queues.exit [label %if.end.i], !srcloc !1328

if.end.i:                                         ; preds = %entry
  tail call void @cpus_read_lock() #35
  tail call void @mutex_lock_nested(ptr noundef nonnull @xps_map_mutex, i32 noundef 0) #35
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @xps_rxqs_needed, ptr blockaddress(@netif_reset_xps_queues_gt, %if.then2.i)) #35
          to label %if.end3.i [label %if.then2.i], !srcloc !1328

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @clean_xps_maps(ptr noundef %dev, i32 noundef 1, i16 noundef zeroext %index, i16 noundef zeroext %conv1) #35
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then2.i, %if.end.i
  tail call fastcc void @clean_xps_maps(ptr noundef %dev, i32 noundef 0, i16 noundef zeroext %index, i16 noundef zeroext %conv1) #35
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #35
  tail call void @cpus_read_unlock() #35
  br label %netif_reset_xps_queues.exit

netif_reset_xps_queues.exit:                      ; preds = %if.end3.i, %entry
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_set_tc_queue(ptr noundef %dev, i8 noundef zeroext %tc, i16 noundef zeroext %count, i16 noundef zeroext %offset) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i8 %tc to i32
  %num_tc = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %0 = ptrtoint ptr %num_tc to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_tc, align 4
  %conv1 = sext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv, i32 %conv1)
  %cmp.not = icmp slt i32 %conv, %conv1
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end:                                           ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @xps_needed, ptr blockaddress(@netdev_set_tc_queue, %if.end.i)) #35
          to label %netif_reset_xps_queues.exit [label %if.end.i], !srcloc !1328

if.end.i:                                         ; preds = %if.end
  tail call void @cpus_read_lock() #35
  tail call void @mutex_lock_nested(ptr noundef nonnull @xps_map_mutex, i32 noundef 0) #35
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @xps_rxqs_needed, ptr blockaddress(@netdev_set_tc_queue, %if.then2.i)) #35
          to label %if.end3.i [label %if.then2.i], !srcloc !1328

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @clean_xps_maps(ptr noundef %dev, i32 noundef 1, i16 noundef zeroext %offset, i16 noundef zeroext %count) #35
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then2.i, %if.end.i
  tail call fastcc void @clean_xps_maps(ptr noundef %dev, i32 noundef 0, i16 noundef zeroext %offset, i16 noundef zeroext %count) #35
  tail call void @mutex_unlock(ptr noundef nonnull @xps_map_mutex) #35
  tail call void @cpus_read_unlock() #35
  br label %netif_reset_xps_queues.exit

netif_reset_xps_queues.exit:                      ; preds = %if.end3.i, %if.end
  %arrayidx = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 %conv
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 %count, ptr %arrayidx, align 2
  %offset7 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 %conv, i32 1
  %3 = ptrtoint ptr %offset7 to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 %offset, ptr %offset7, align 2
  br label %return

return:                                           ; preds = %netif_reset_xps_queues.exit, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %netif_reset_xps_queues.exit ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_set_num_tc(ptr noundef %dev, i8 noundef zeroext %num_tc) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %num_tc)
  %cmp = icmp ugt i8 %num_tc, 16
  br i1 %cmp, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end:                                           ; preds = %entry
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef %dev, i16 noundef zeroext 0)
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %0 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %_tx.i, align 128
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %2 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_tx_queues.i, align 4
  %arrayidx.i = getelementptr %struct.netdev_queue, ptr %1, i32 %3
  %cmp.not10.i = icmp eq ptr %arrayidx.i, %1
  br i1 %cmp.not10.i, label %if.end.netdev_unbind_all_sb_channels.exit_crit_edge, label %if.end.while.body.i_crit_edge

if.end.while.body.i_crit_edge:                    ; preds = %if.end
  br label %while.body.i

if.end.netdev_unbind_all_sb_channels.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_unbind_all_sb_channels.exit

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %if.end.while.body.i_crit_edge
  %4 = phi ptr [ %18, %if.end.i.while.body.i_crit_edge ], [ %1, %if.end.while.body.i_crit_edge ]
  %txq.011.i = phi ptr [ %incdec.ptr12.i, %if.end.i.while.body.i_crit_edge ], [ %arrayidx.i, %if.end.while.body.i_crit_edge ]
  %incdec.ptr12.i = getelementptr %struct.netdev_queue, ptr %txq.011.i, i32 -1
  %sb_dev.i = getelementptr %struct.netdev_queue, ptr %txq.011.i, i32 -1, i32 7
  %5 = ptrtoint ptr %sb_dev.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sb_dev.i, align 32
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %while.body.i.if.end.i_crit_edge, label %if.then.i

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then.i:                                        ; preds = %while.body.i
  %7 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_tx_queues.i, align 4
  %arrayidx.i.i = getelementptr %struct.netdev_queue, ptr %4, i32 %8
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef nonnull %6, i16 noundef zeroext 0) #35
  %tc_to_txq.i.i = getelementptr inbounds %struct.net_device, ptr %6, i32 0, i32 141
  %9 = call ptr @memset(ptr %tc_to_txq.i.i, i32 0, i32 80)
  %10 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %_tx.i, align 128
  %cmp.not15.i.i = icmp eq ptr %arrayidx.i.i, %11
  br i1 %cmp.not15.i.i, label %if.then.i.if.end.i_crit_edge, label %if.then.i.while.body.i.i_crit_edge

if.then.i.while.body.i.i_crit_edge:               ; preds = %if.then.i
  br label %while.body.i.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

while.body.i.i:                                   ; preds = %if.end.i.i.while.body.i.i_crit_edge, %if.then.i.while.body.i.i_crit_edge
  %txq.016.i.i = phi ptr [ %incdec.ptr17.i.i, %if.end.i.i.while.body.i.i_crit_edge ], [ %arrayidx.i.i, %if.then.i.while.body.i.i_crit_edge ]
  %incdec.ptr17.i.i = getelementptr %struct.netdev_queue, ptr %txq.016.i.i, i32 -1
  %sb_dev4.i.i = getelementptr %struct.netdev_queue, ptr %txq.016.i.i, i32 -1, i32 7
  %12 = ptrtoint ptr %sb_dev4.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sb_dev4.i.i, align 32
  %cmp5.i.i = icmp eq ptr %13, %6
  br i1 %cmp5.i.i, label %if.then.i.i, label %while.body.i.i.if.end.i.i_crit_edge

while.body.i.i.if.end.i.i_crit_edge:              ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %14 = ptrtoint ptr %sb_dev4.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %sb_dev4.i.i, align 32
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i.i.if.end.i.i_crit_edge
  %15 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %_tx.i, align 128
  %cmp.not.i.i = icmp eq ptr %incdec.ptr17.i.i, %16
  br i1 %cmp.not.i.i, label %if.end.i.i.if.end.i_crit_edge, label %if.end.i.i.while.body.i.i_crit_edge

if.end.i.i.while.body.i.i_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.i.i

if.end.i.i.if.end.i_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.end.i:                                         ; preds = %if.end.i.i.if.end.i_crit_edge, %if.then.i.if.end.i_crit_edge, %while.body.i.if.end.i_crit_edge
  %17 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %_tx.i, align 128
  %cmp.not.i = icmp eq ptr %incdec.ptr12.i, %18
  br i1 %cmp.not.i, label %if.end.i.netdev_unbind_all_sb_channels.exit_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.i

if.end.i.netdev_unbind_all_sb_channels.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_unbind_all_sb_channels.exit

netdev_unbind_all_sb_channels.exit:               ; preds = %if.end.i.netdev_unbind_all_sb_channels.exit_crit_edge, %if.end.netdev_unbind_all_sb_channels.exit_crit_edge
  %conv2 = zext i8 %num_tc to i16
  %num_tc3 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %19 = ptrtoint ptr %num_tc3 to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %conv2, ptr %num_tc3, align 4
  br label %return

return:                                           ; preds = %netdev_unbind_all_sb_channels.exit, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %netdev_unbind_all_sb_channels.exit ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_unbind_sb_channel(ptr nocapture noundef readonly %dev, ptr noundef %sb_dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %_tx = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %0 = ptrtoint ptr %_tx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %_tx, align 128
  %num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %2 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_tx_queues, align 4
  %arrayidx = getelementptr %struct.netdev_queue, ptr %1, i32 %3
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef %sb_dev, i16 noundef zeroext 0)
  %tc_to_txq = getelementptr inbounds %struct.net_device, ptr %sb_dev, i32 0, i32 141
  %4 = call ptr @memset(ptr %tc_to_txq, i32 0, i32 80)
  %5 = ptrtoint ptr %_tx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %_tx, align 128
  %cmp.not15 = icmp eq ptr %arrayidx, %6
  br i1 %cmp.not15, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.body:                                       ; preds = %if.end.while.body_crit_edge, %entry.while.body_crit_edge
  %txq.016 = phi ptr [ %incdec.ptr17, %if.end.while.body_crit_edge ], [ %arrayidx, %entry.while.body_crit_edge ]
  %incdec.ptr17 = getelementptr %struct.netdev_queue, ptr %txq.016, i32 -1
  %sb_dev4 = getelementptr %struct.netdev_queue, ptr %txq.016, i32 -1, i32 7
  %7 = ptrtoint ptr %sb_dev4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sb_dev4, align 32
  %cmp5 = icmp eq ptr %8, %sb_dev
  br i1 %cmp5, label %if.then, label %while.body.if.end_crit_edge

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  %9 = ptrtoint ptr %sb_dev4 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %sb_dev4, align 32
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body.if.end_crit_edge
  %10 = ptrtoint ptr %_tx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %_tx, align 128
  %cmp.not = icmp eq ptr %incdec.ptr17, %11
  br i1 %cmp.not, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_bind_sb_channel_queue(ptr nocapture noundef readonly %dev, ptr noundef %sb_dev, i8 noundef zeroext %tc, i16 noundef zeroext %count, i16 noundef zeroext %offset) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tc = getelementptr inbounds %struct.net_device, ptr %sb_dev, i32 0, i32 140
  %0 = ptrtoint ptr %num_tc to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %num_tc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %1)
  %cmp = icmp sgt i16 %1, -1
  br i1 %cmp, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %conv2 = zext i8 %tc to i32
  %num_tc3 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %2 = ptrtoint ptr %num_tc3 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %num_tc3, align 4
  %conv4 = sext i16 %3 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv2, i32 %conv4)
  %cmp5.not = icmp slt i32 %conv2, %conv4
  br i1 %cmp5.not, label %if.end, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %conv7 = zext i16 %offset to i32
  %conv8 = zext i16 %count to i32
  %add = add nuw nsw i32 %conv7, %conv8
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 105
  %4 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %real_num_tx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %5)
  %cmp9 = icmp ugt i32 %add, %5
  br i1 %cmp9, label %if.end.return_crit_edge, label %if.end12

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end12:                                         ; preds = %if.end
  %arrayidx = getelementptr %struct.net_device, ptr %sb_dev, i32 0, i32 141, i32 %conv2
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %count, ptr %arrayidx, align 2
  %offset17 = getelementptr %struct.net_device, ptr %sb_dev, i32 0, i32 141, i32 %conv2, i32 1
  %7 = ptrtoint ptr %offset17 to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %offset, ptr %offset17, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %count)
  %tobool.not34 = icmp eq i16 %count, 0
  br i1 %tobool.not34, label %if.end12.return_crit_edge, label %while.body.lr.ph

if.end12.return_crit_edge:                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

while.body.lr.ph:                                 ; preds = %if.end12
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.lr.ph
  %indvars.iv = phi i32 [ %conv8, %while.body.lr.ph ], [ %8, %while.body.while.body_crit_edge ]
  %8 = add nsw i32 %indvars.iv, -1
  %add20 = add nuw nsw i32 %8, %conv7
  %9 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %_tx.i, align 128
  %sb_dev21 = getelementptr %struct.netdev_queue, ptr %10, i32 %add20, i32 7
  %11 = ptrtoint ptr %sb_dev21 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %sb_dev, ptr %sb_dev21, align 32
  %tobool.not.wide = icmp eq i32 %8, 0
  br i1 %tobool.not.wide, label %while.body.return_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body

while.body.return_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

return:                                           ; preds = %while.body.return_crit_edge, %if.end12.return_crit_edge, %if.end.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -22, %lor.lhs.false.return_crit_edge ], [ -22, %entry.return_crit_edge ], [ -22, %if.end.return_crit_edge ], [ 0, %if.end12.return_crit_edge ], [ 0, %while.body.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @netdev_set_sb_channel(ptr nocapture noundef %dev, i16 noundef zeroext %channel) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %0 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp ugt i32 %1, 1
  br i1 %cmp.i, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %channel)
  %cmp = icmp slt i16 %channel, 0
  br i1 %cmp, label %if.end.return_crit_edge, label %if.end3

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %sub = sub nsw i16 0, %channel
  %num_tc = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %2 = ptrtoint ptr %num_tc to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 %sub, ptr %num_tc, align 4
  br label %return

return:                                           ; preds = %if.end3, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end3 ], [ -19, %entry.return_crit_edge ], [ -22, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_set_real_num_tx_queues(ptr noundef %dev, i32 noundef %txq) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 105
  %0 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %real_num_tx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %txq)
  %cmp = icmp ugt i32 %1, %txq
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %txq)
  %cmp1 = icmp eq i32 %txq, 0
  br i1 %cmp1, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %2 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_tx_queues, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %txq)
  %cmp2 = icmp ult i32 %3, %txq
  br i1 %cmp2, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %reg_state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %4 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %reg_state, align 4
  %bf.load.off = add i8 %bf.load, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %bf.load.off)
  %switch = icmp ult i8 %bf.load.off, 2
  br i1 %switch, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %if.then9.if.end41_crit_edge

if.then9.if.end41_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end41

land.rhs:                                         ; preds = %if.then9
  %.b88 = load i1, ptr @netif_set_real_num_tx_queues.__already_done, align 1
  br i1 %.b88, label %land.rhs.if.end41_crit_edge, label %if.then19, !prof !1311

land.rhs.if.end41_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end41

if.then19:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_set_real_num_tx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2837, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 2837) #35
  br label %if.end41

if.end41:                                         ; preds = %if.then19, %land.rhs.if.end41_crit_edge, %if.then9.if.end41_crit_edge
  %5 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %real_num_tx_queues, align 8
  %call50 = tail call i32 @netdev_queue_update_kobjects(ptr noundef %dev, i32 noundef %6, i32 noundef %txq) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %if.end53, label %if.end41.cleanup_crit_edge

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end53:                                         ; preds = %if.end41
  %num_tc = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %7 = ptrtoint ptr %num_tc to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %num_tc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool54.not = icmp eq i16 %8, 0
  br i1 %tobool54.not, label %if.end53.if.end56_crit_edge, label %if.then55

if.end53.if.end56_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end56

if.then55:                                        ; preds = %if.end53
  %tc_to_txq.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 141
  %offset.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 141, i32 0, i32 1
  %9 = ptrtoint ptr %offset.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %offset.i, align 2
  %conv.i = zext i16 %10 to i32
  %11 = ptrtoint ptr %tc_to_txq.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %tc_to_txq.i, align 2
  %conv1.i = zext i16 %12 to i32
  %add.i = add nuw nsw i32 %conv1.i, %conv.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %txq)
  %cmp.i = icmp ugt i32 %add.i, %txq
  br i1 %cmp.i, label %if.then.i, label %if.then55.for.body.i_crit_edge

if.then55.for.body.i_crit_edge:                   ; preds = %if.then55
  br label %for.body.i

if.then.i:                                        ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %dev, ptr noundef nonnull @.str.112) #41
  %13 = ptrtoint ptr %num_tc to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 0, ptr %num_tc, align 4
  br label %if.end56

for.body.i:                                       ; preds = %if.end17.i.for.body.i_crit_edge, %if.then55.for.body.i_crit_edge
  %i.035.i = phi i32 [ %inc.i, %if.end17.i.for.body.i_crit_edge ], [ 1, %if.then55.for.body.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 142, i32 %i.035.i
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx.i.i, align 1
  %conv.i.i = zext i8 %15 to i32
  %arrayidx6.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 %conv.i.i
  %offset7.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 141, i32 %conv.i.i, i32 1
  %16 = ptrtoint ptr %offset7.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %offset7.i, align 2
  %conv8.i = zext i16 %17 to i32
  %18 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %arrayidx6.i, align 2
  %conv10.i = zext i16 %19 to i32
  %add11.i = add nuw nsw i32 %conv10.i, %conv8.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add11.i, i32 %txq)
  %cmp12.i = icmp ugt i32 %add11.i, %txq
  br i1 %cmp12.i, label %if.then14.i, label %for.body.i.if.end17.i_crit_edge

for.body.i.if.end17.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end17.i

if.then14.i:                                      ; preds = %for.body.i
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %dev, ptr noundef nonnull @.str.113, i32 noundef %i.035.i, i32 noundef %conv.i.i) #41
  %20 = ptrtoint ptr %num_tc to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %num_tc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %21)
  %cmp.i.i = icmp slt i16 %21, 1
  br i1 %cmp.i.i, label %if.then14.i.if.end17.i_crit_edge, label %if.end.i.i

if.then14.i.if.end17.i_crit_edge:                 ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end17.i

if.end.i.i:                                       ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #37
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 0, ptr %arrayidx.i.i, align 1
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.end.i.i, %if.then14.i.if.end17.i_crit_edge, %for.body.i.if.end17.i_crit_edge
  %inc.i = add nuw nsw i32 %i.035.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 16
  br i1 %exitcond.not.i, label %if.end17.i.if.end56_crit_edge, label %if.end17.i.for.body.i_crit_edge

if.end17.i.for.body.i_crit_edge:                  ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

if.end17.i.if.end56_crit_edge:                    ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end56

if.end56:                                         ; preds = %if.end17.i.if.end56_crit_edge, %if.then.i, %if.end53.if.end56_crit_edge
  tail call void @dev_qdisc_change_real_num_tx(ptr noundef %dev, i32 noundef %txq) #35
  %23 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %txq, ptr %real_num_tx_queues, align 8
  br i1 %cmp, label %if.then59, label %if.end56.cleanup_crit_edge

if.end56.cleanup_crit_edge:                       ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then59:                                        ; preds = %if.end56
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i89

if.then.i89:                                      ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu_expedited() #35
  br label %synchronize_net.exit

if.else.i:                                        ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu() #35
  br label %synchronize_net.exit

synchronize_net.exit:                             ; preds = %if.else.i, %if.then.i89
  %24 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %num_tx_queues, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %25, i32 %txq)
  %cmp19.i = icmp ugt i32 %25, %txq
  br i1 %cmp19.i, label %do.body.lr.ph.i, label %synchronize_net.exit.qdisc_reset_all_tx_gt.exit_crit_edge

synchronize_net.exit.qdisc_reset_all_tx_gt.exit_crit_edge: ; preds = %synchronize_net.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %qdisc_reset_all_tx_gt.exit

do.body.lr.ph.i:                                  ; preds = %synchronize_net.exit
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  br label %do.body.i

do.body.i:                                        ; preds = %for.inc.i.do.body.i_crit_edge, %do.body.lr.ph.i
  %i.addr.020.i = phi i32 [ %txq, %do.body.lr.ph.i ], [ %inc.i93, %for.inc.i.do.body.i_crit_edge ]
  %call.i90 = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call.i90, label %do.body.i.do.end.i_crit_edge, label %land.lhs.true.i

do.body.i.do.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true.i:                                  ; preds = %do.body.i
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i91 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i91, label %land.lhs.true.i.do.end.i_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.do.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b17.i = load i1, ptr @qdisc_reset_all_tx_gt.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true2.i.do.end.i_crit_edge, label %if.then.i92

land.lhs.true2.i.do.end.i_crit_edge:              ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

if.then.i92:                                      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @qdisc_reset_all_tx_gt.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.114, i32 noundef 760, ptr noundef nonnull @.str.10) #35
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i92, %land.lhs.true2.i.do.end.i_crit_edge, %land.lhs.true.i.do.end.i_crit_edge, %do.body.i.do.end.i_crit_edge
  %26 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %_tx.i.i, align 128
  %qdisc5.i = getelementptr %struct.netdev_queue, ptr %27, i32 %i.addr.020.i, i32 2
  %28 = ptrtoint ptr %qdisc5.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %qdisc5.i, align 8
  %tobool6.not.i = icmp eq ptr %29, null
  br i1 %tobool6.not.i, label %do.end.i.for.inc.i_crit_edge, label %if.then7.i

do.end.i.for.inc.i_crit_edge:                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.then7.i:                                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  %lock.i.i = getelementptr inbounds %struct.Qdisc, ptr %29, i32 0, i32 17, i32 3
  tail call void @_raw_spin_lock_bh(ptr noundef %lock.i.i) #35
  tail call void @qdisc_reset(ptr noundef nonnull %29) #35
  tail call void @_raw_spin_unlock_bh(ptr noundef %lock.i.i) #35
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then7.i, %do.end.i.for.inc.i_crit_edge
  %inc.i93 = add nuw i32 %i.addr.020.i, 1
  %30 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %num_tx_queues, align 4
  %cmp.i94 = icmp ult i32 %inc.i93, %31
  br i1 %cmp.i94, label %for.inc.i.do.body.i_crit_edge, label %for.inc.i.qdisc_reset_all_tx_gt.exit_crit_edge

for.inc.i.qdisc_reset_all_tx_gt.exit_crit_edge:   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %qdisc_reset_all_tx_gt.exit

for.inc.i.do.body.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

qdisc_reset_all_tx_gt.exit:                       ; preds = %for.inc.i.qdisc_reset_all_tx_gt.exit_crit_edge, %synchronize_net.exit.qdisc_reset_all_tx_gt.exit_crit_edge
  %conv = trunc i32 %txq to i16
  tail call fastcc void @netif_reset_xps_queues_gt(ptr noundef %dev, i16 noundef zeroext %conv)
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %32 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %txq, ptr %real_num_tx_queues, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.else, %qdisc_reset_all_tx_gt.exit, %if.end56.cleanup_crit_edge, %if.end41.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ %call50, %if.end41.cleanup_crit_edge ], [ 0, %if.end56.cleanup_crit_edge ], [ 0, %qdisc_reset_all_tx_gt.exit ], [ 0, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_queue_update_kobjects(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_qdisc_change_real_num_tx(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_set_real_num_rx_queues(ptr noundef %dev, i32 noundef %rxq) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rxq)
  %cmp = icmp eq i32 %rxq, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %num_rx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 88
  %0 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %rxq)
  %cmp1 = icmp ult i32 %1, %rxq
  br i1 %cmp1, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %reg_state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %2 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %bf.load)
  %cmp2 = icmp eq i8 %bf.load, 1
  br i1 %cmp2, label %if.then3, label %if.end.if.end46_crit_edge

if.end.if.end46_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end46

if.then3:                                         ; preds = %if.end
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %if.then3.if.end34_crit_edge

if.then3.if.end34_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34

land.rhs:                                         ; preds = %if.then3
  %.b58 = load i1, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  br i1 %.b58, label %land.rhs.if.end34_crit_edge, label %if.then12, !prof !1311

land.rhs.if.end34_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2885, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 2885) #35
  br label %if.end34

if.end34:                                         ; preds = %if.then12, %land.rhs.if.end34_crit_edge, %if.then3.if.end34_crit_edge
  %real_num_rx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 89
  %3 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %real_num_rx_queues, align 4
  %call42 = tail call i32 @net_rx_queue_update_kobjects(ptr noundef %dev, i32 noundef %4, i32 noundef %rxq) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %if.end34.if.end46_crit_edge, label %if.end34.cleanup_crit_edge

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end34.if.end46_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end46

if.end46:                                         ; preds = %if.end34.if.end46_crit_edge, %if.end.if.end46_crit_edge
  %real_num_rx_queues47 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 89
  %5 = ptrtoint ptr %real_num_rx_queues47 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %rxq, ptr %real_num_rx_queues47, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end46, %if.end34.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end46 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ %call42, %if.end34.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_rx_queue_update_kobjects(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_set_real_num_queues(ptr noundef %dev, i32 noundef %txq, i32 noundef %rxq) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %real_num_rx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 89
  %0 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %real_num_rx_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %txq)
  %cmp = icmp eq i32 %txq, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %2 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_tx_queues, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %txq)
  %cmp1 = icmp ult i32 %3, %txq
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rxq)
  %cmp3 = icmp eq i32 %rxq, 0
  %or.cond = or i1 %cmp3, %cmp1
  br i1 %or.cond, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false4

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %num_rx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 88
  %4 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %rxq)
  %cmp5 = icmp ult i32 %5, %rxq
  br i1 %cmp5, label %lor.lhs.false4.cleanup_crit_edge, label %if.end

lor.lhs.false4.cleanup_crit_edge:                 ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %rxq)
  %cmp7 = icmp ult i32 %1, %rxq
  br i1 %cmp7, label %if.end.i, label %if.end.if.end11_crit_edge

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

if.end.i:                                         ; preds = %if.end
  %reg_state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %6 = ptrtoint ptr %reg_state.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load.i = load i8, ptr %reg_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %bf.load.i)
  %cmp2.i = icmp eq i8 %bf.load.i, 1
  br i1 %cmp2.i, label %if.then3.i, label %if.end.i.netif_set_real_num_rx_queues.exit.thread_crit_edge

if.end.i.netif_set_real_num_rx_queues.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_set_real_num_rx_queues.exit.thread

if.then3.i:                                       ; preds = %if.end.i
  %call.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.then3.i.if.end34.i_crit_edge

if.then3.i.if.end34.i_crit_edge:                  ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34.i

land.rhs.i:                                       ; preds = %if.then3.i
  %.b58.i = load i1, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  br i1 %.b58.i, label %land.rhs.i.if.end34.i_crit_edge, label %if.then12.i, !prof !1311

land.rhs.i.if.end34.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34.i

if.then12.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2885, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 2885) #35
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.then12.i, %land.rhs.i.if.end34.i_crit_edge, %if.then3.i.if.end34.i_crit_edge
  %7 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %real_num_rx_queues, align 4
  %call42.i = tail call i32 @net_rx_queue_update_kobjects(ptr noundef %dev, i32 noundef %8, i32 noundef %rxq) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i)
  %tobool43.not.i = icmp eq i32 %call42.i, 0
  br i1 %tobool43.not.i, label %if.end34.i.netif_set_real_num_rx_queues.exit.thread_crit_edge, label %if.end34.i.cleanup_crit_edge

if.end34.i.cleanup_crit_edge:                     ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end34.i.netif_set_real_num_rx_queues.exit.thread_crit_edge: ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_set_real_num_rx_queues.exit.thread

netif_set_real_num_rx_queues.exit.thread:         ; preds = %if.end34.i.netif_set_real_num_rx_queues.exit.thread_crit_edge, %if.end.i.netif_set_real_num_rx_queues.exit.thread_crit_edge
  %9 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %rxq, ptr %real_num_rx_queues, align 4
  br label %if.end11

if.end11:                                         ; preds = %netif_set_real_num_rx_queues.exit.thread, %if.end.if.end11_crit_edge
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 105
  %10 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %real_num_tx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %txq)
  %cmp12 = icmp ult i32 %11, %txq
  br i1 %cmp12, label %if.then13, label %if.end11.if.end18_crit_edge

if.end11.if.end18_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

if.then13:                                        ; preds = %if.end11
  %call14 = tail call i32 @netif_set_real_num_tx_queues(ptr noundef %dev, i32 noundef %txq)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then13.if.end18_crit_edge, label %undo_rx

if.then13.if.end18_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

if.end18:                                         ; preds = %if.then13.if.end18_crit_edge, %if.end11.if.end18_crit_edge
  %12 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %real_num_rx_queues, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %rxq)
  %cmp20 = icmp ugt i32 %13, %rxq
  br i1 %cmp20, label %lor.lhs.false.i145, label %if.end18.if.end45_crit_edge

if.end18.if.end45_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end45

lor.lhs.false.i145:                               ; preds = %if.end18
  %14 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %rxq)
  %cmp1.i144 = icmp ult i32 %15, %rxq
  br i1 %cmp1.i144, label %lor.lhs.false.i145.do.end_crit_edge, label %if.end.i149

lor.lhs.false.i145.do.end_crit_edge:              ; preds = %lor.lhs.false.i145
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.end.i149:                                      ; preds = %lor.lhs.false.i145
  %reg_state.i146 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %16 = ptrtoint ptr %reg_state.i146 to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load.i147 = load i8, ptr %reg_state.i146, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %bf.load.i147)
  %cmp2.i148 = icmp eq i8 %bf.load.i147, 1
  br i1 %cmp2.i148, label %if.then3.i152, label %if.end.i149.netif_set_real_num_rx_queues.exit163_crit_edge

if.end.i149.netif_set_real_num_rx_queues.exit163_crit_edge: ; preds = %if.end.i149
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_set_real_num_rx_queues.exit163

if.then3.i152:                                    ; preds = %if.end.i149
  %call.i150 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i150)
  %tobool.not.i151 = icmp eq i32 %call.i150, 0
  br i1 %tobool.not.i151, label %land.rhs.i154, label %if.then3.i152.if.end34.i159_crit_edge

if.then3.i152.if.end34.i159_crit_edge:            ; preds = %if.then3.i152
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34.i159

land.rhs.i154:                                    ; preds = %if.then3.i152
  %.b58.i153 = load i1, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  br i1 %.b58.i153, label %land.rhs.i154.if.end34.i159_crit_edge, label %if.then12.i155, !prof !1311

land.rhs.i154.if.end34.i159_crit_edge:            ; preds = %land.rhs.i154
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34.i159

if.then12.i155:                                   ; preds = %land.rhs.i154
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2885, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 2885) #35
  br label %if.end34.i159

if.end34.i159:                                    ; preds = %if.then12.i155, %land.rhs.i154.if.end34.i159_crit_edge, %if.then3.i152.if.end34.i159_crit_edge
  %17 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %real_num_rx_queues, align 4
  %call42.i157 = tail call i32 @net_rx_queue_update_kobjects(ptr noundef %dev, i32 noundef %18, i32 noundef %rxq) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i157)
  %tobool43.not.i158 = icmp eq i32 %call42.i157, 0
  br i1 %tobool43.not.i158, label %if.end34.i159.netif_set_real_num_rx_queues.exit163_crit_edge, label %if.end34.i159.do.end_crit_edge

if.end34.i159.do.end_crit_edge:                   ; preds = %if.end34.i159
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.end34.i159.netif_set_real_num_rx_queues.exit163_crit_edge: ; preds = %if.end34.i159
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_set_real_num_rx_queues.exit163

netif_set_real_num_rx_queues.exit163:             ; preds = %if.end34.i159.netif_set_real_num_rx_queues.exit163_crit_edge, %if.end.i149.netif_set_real_num_rx_queues.exit163_crit_edge
  %19 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %rxq, ptr %real_num_rx_queues, align 4
  br label %if.end45

do.end:                                           ; preds = %if.end34.i159.do.end_crit_edge, %lor.lhs.false.i145.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2932, i32 noundef 9, ptr noundef null) #35
  br label %if.end45

if.end45:                                         ; preds = %do.end, %netif_set_real_num_rx_queues.exit163, %if.end18.if.end45_crit_edge
  %20 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %real_num_tx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %txq)
  %cmp47 = icmp ugt i32 %21, %txq
  br i1 %cmp47, label %if.then48, label %if.end45.cleanup_crit_edge

if.end45.cleanup_crit_edge:                       ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then48:                                        ; preds = %if.end45
  %call50 = tail call i32 @netif_set_real_num_tx_queues(ptr noundef %dev, i32 noundef %txq)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %tobool51.not = icmp eq i32 %call50, 0
  br i1 %tobool51.not, label %if.then48.cleanup_crit_edge, label %do.end67, !prof !1311

if.then48.cleanup_crit_edge:                      ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

do.end67:                                         ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2934, i32 noundef 9, ptr noundef null) #35
  br label %cleanup

undo_rx:                                          ; preds = %if.then13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i164 = icmp eq i32 %1, 0
  br i1 %cmp.i164, label %undo_rx.do.end100_crit_edge, label %lor.lhs.false.i167

undo_rx.do.end100_crit_edge:                      ; preds = %undo_rx
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end100

lor.lhs.false.i167:                               ; preds = %undo_rx
  %22 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_rx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %23, i32 %1)
  %cmp1.i166 = icmp ult i32 %23, %1
  br i1 %cmp1.i166, label %lor.lhs.false.i167.do.end100_crit_edge, label %if.end.i171

lor.lhs.false.i167.do.end100_crit_edge:           ; preds = %lor.lhs.false.i167
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end100

if.end.i171:                                      ; preds = %lor.lhs.false.i167
  %reg_state.i168 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %24 = ptrtoint ptr %reg_state.i168 to i32
  call void @__asan_load1_noabort(i32 %24)
  %bf.load.i169 = load i8, ptr %reg_state.i168, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %bf.load.i169)
  %cmp2.i170 = icmp eq i8 %bf.load.i169, 1
  br i1 %cmp2.i170, label %if.then3.i174, label %if.end.i171.netif_set_real_num_rx_queues.exit185_crit_edge

if.end.i171.netif_set_real_num_rx_queues.exit185_crit_edge: ; preds = %if.end.i171
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_set_real_num_rx_queues.exit185

if.then3.i174:                                    ; preds = %if.end.i171
  %call.i172 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i172)
  %tobool.not.i173 = icmp eq i32 %call.i172, 0
  br i1 %tobool.not.i173, label %land.rhs.i176, label %if.then3.i174.if.end34.i181_crit_edge

if.then3.i174.if.end34.i181_crit_edge:            ; preds = %if.then3.i174
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34.i181

land.rhs.i176:                                    ; preds = %if.then3.i174
  %.b58.i175 = load i1, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  br i1 %.b58.i175, label %land.rhs.i176.if.end34.i181_crit_edge, label %if.then12.i177, !prof !1311

land.rhs.i176.if.end34.i181_crit_edge:            ; preds = %land.rhs.i176
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34.i181

if.then12.i177:                                   ; preds = %land.rhs.i176
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_set_real_num_rx_queues.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2885, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 2885) #35
  br label %if.end34.i181

if.end34.i181:                                    ; preds = %if.then12.i177, %land.rhs.i176.if.end34.i181_crit_edge, %if.then3.i174.if.end34.i181_crit_edge
  %25 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %real_num_rx_queues, align 4
  %call42.i179 = tail call i32 @net_rx_queue_update_kobjects(ptr noundef %dev, i32 noundef %26, i32 noundef %1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i179)
  %tobool43.not.i180 = icmp eq i32 %call42.i179, 0
  br i1 %tobool43.not.i180, label %if.end34.i181.netif_set_real_num_rx_queues.exit185_crit_edge, label %if.end34.i181.do.end100_crit_edge

if.end34.i181.do.end100_crit_edge:                ; preds = %if.end34.i181
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end100

if.end34.i181.netif_set_real_num_rx_queues.exit185_crit_edge: ; preds = %if.end34.i181
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_set_real_num_rx_queues.exit185

netif_set_real_num_rx_queues.exit185:             ; preds = %if.end34.i181.netif_set_real_num_rx_queues.exit185_crit_edge, %if.end.i171.netif_set_real_num_rx_queues.exit185_crit_edge
  %27 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %1, ptr %real_num_rx_queues, align 4
  br label %cleanup

do.end100:                                        ; preds = %if.end34.i181.do.end100_crit_edge, %lor.lhs.false.i167.do.end100_crit_edge, %undo_rx.do.end100_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2938, i32 noundef 9, ptr noundef null) #35
  br label %cleanup

cleanup:                                          ; preds = %do.end100, %netif_set_real_num_rx_queues.exit185, %do.end67, %if.then48.cleanup_crit_edge, %if.end45.cleanup_crit_edge, %if.end34.i.cleanup_crit_edge, %lor.lhs.false4.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %lor.lhs.false4.cleanup_crit_edge ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ 0, %if.then48.cleanup_crit_edge ], [ 0, %do.end67 ], [ 0, %if.end45.cleanup_crit_edge ], [ %call14, %do.end100 ], [ %call14, %netif_set_real_num_rx_queues.exit185 ], [ %call42.i, %if.end34.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_get_num_default_rss_queues() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load8_noabort(i32 ptrtoint (ptr @elfcorehdr_addr to i32))
  %0 = load i64, ptr @elfcorehdr_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %0)
  %cmp.i.not = icmp eq i64 %0, -1
  br i1 %cmp.i.not, label %cond.false, label %entry.cond.end4_crit_edge

entry.cond.end4_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end4

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @__num_online_cpus, i32 noundef 4) #35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__num_online_cpus to i32))
  %1 = load volatile i32, ptr @__num_online_cpus, align 4
  %2 = tail call i32 @llvm.smin.i32(i32 %1, i32 8)
  br label %cond.end4

cond.end4:                                        ; preds = %cond.false, %entry.cond.end4_crit_edge
  %cond5 = phi i32 [ %2, %cond.false ], [ 1, %entry.cond.end4_crit_edge ]
  ret i32 %cond5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__netif_schedule(ptr noundef %q) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 20
  %call = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then.do.body12.i_crit_edge

if.then.do.body12.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body12.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %do.body12.i

do.body12.i:                                      ; preds = %if.then.i, %if.then.do.body12.i_crit_edge
  %1 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i56.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i56.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %6, ptrtoint (ptr @softnet_data to i32)
  %7 = inttoptr i32 %add.i to ptr
  %next_sched.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 22
  %8 = ptrtoint ptr %next_sched.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %next_sched.i, align 4
  %output_queue_tailp.i = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 8
  %9 = ptrtoint ptr %output_queue_tailp.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %output_queue_tailp.i, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %q, ptr %10, align 4
  store ptr %next_sched.i, ptr %output_queue_tailp.i, align 8
  tail call void @raise_softirq_irqoff(i32 noundef 2) #35
  br i1 %tobool.not.i, label %if.then29.i, label %do.body12.i.do.body31.i_crit_edge

do.body12.i.do.body31.i_crit_edge:                ; preds = %do.body12.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body31.i

if.then29.i:                                      ; preds = %do.body12.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_on() #35
  br label %do.body31.i

do.body31.i:                                      ; preds = %if.then29.i, %do.body12.i.do.body31.i_crit_edge
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i = and i32 %12, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i, label %if.then43.i, label %do.body31.i.__netif_reschedule.exit_crit_edge, !prof !1310

do.body31.i.__netif_reschedule.exit_crit_edge:    ; preds = %do.body31.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_reschedule.exit

if.then43.i:                                      ; preds = %do.body31.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %__netif_reschedule.exit

__netif_reschedule.exit:                          ; preds = %if.then43.i, %do.body31.i.__netif_reschedule.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #35, !srcloc !1315
  br label %if.end

if.end:                                           ; preds = %__netif_reschedule.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_schedule_queue(ptr noundef %txq) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %txq, i32 0, i32 13
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %state.i, align 4
  %and.i = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then, label %rcu_read_lock.exit.if.end11_crit_edge

rcu_read_lock.exit.if.end11_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

if.then:                                          ; preds = %rcu_read_lock.exit
  %qdisc = getelementptr inbounds %struct.netdev_queue, ptr %txq, i32 0, i32 2
  %6 = ptrtoint ptr %qdisc to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %qdisc, align 8
  %call2 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.then.do.end9_crit_edge

if.then.do.end9_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end9

land.lhs.true:                                    ; preds = %if.then
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end9_crit_edge, label %land.lhs.true5

land.lhs.true.do.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end9

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b13 = load i1, ptr @netif_schedule_queue.__warned, align 1
  br i1 %.b13, label %land.lhs.true5.do.end9_crit_edge, label %if.then7

land.lhs.true5.do.end9_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end9

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_schedule_queue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2990, ptr noundef nonnull @.str.11) #35
  br label %do.end9

do.end9:                                          ; preds = %if.then7, %land.lhs.true5.do.end9_crit_edge, %land.lhs.true.do.end9_crit_edge, %if.then.do.end9_crit_edge
  tail call void @__netif_schedule(ptr noundef %7)
  br label %if.end11

if.end11:                                         ; preds = %do.end9, %rcu_read_lock.exit.if.end11_crit_edge
  %call.i14 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i14, label %if.end11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i17

if.end11.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i17:                                ; preds = %if.end11
  %call1.i15 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i15)
  %tobool.not.i16 = icmp eq i32 %call1.i15, 0
  br i1 %tobool.not.i16, label %land.lhs.true.i17.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i19

land.lhs.true.i17.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i17
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i19:                               ; preds = %land.lhs.true.i17
  %.b4.i18 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i18, label %land.lhs.true2.i19.rcu_read_unlock.exit_crit_edge, label %if.then.i20

land.lhs.true2.i19.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i19
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i20:                                      ; preds = %land.lhs.true2.i19
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i20, %land.lhs.true2.i19.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i17.rcu_read_unlock.exit_crit_edge, %if.end11.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %8 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i21 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i21 to ptr
  %preempt_count.i.i.i.i22 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i22 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i22, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i22, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_tx_wake_queue(ptr noundef %dev_queue) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.netdev_queue, ptr %dev_queue, i32 0, i32 13
  %call = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %state) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end12_crit_edge, label %if.then

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12

if.then:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %if.then.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then.rcu_read_lock.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then.rcu_read_lock.exit_crit_edge
  %qdisc = getelementptr inbounds %struct.netdev_queue, ptr %dev_queue, i32 0, i32 2
  %4 = ptrtoint ptr %qdisc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %qdisc, align 8
  %call2 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end10_crit_edge

rcu_read_lock.exit.do.end10_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true.do.end10_crit_edge, label %land.lhs.true6

land.lhs.true.do.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10

land.lhs.true6:                                   ; preds = %land.lhs.true
  %.b14 = load i1, ptr @netif_tx_wake_queue.__warned, align 1
  br i1 %.b14, label %land.lhs.true6.do.end10_crit_edge, label %if.then8

land.lhs.true6.do.end10_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10

if.then8:                                         ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_tx_wake_queue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 3004, ptr noundef nonnull @.str.11) #35
  br label %do.end10

do.end10:                                         ; preds = %if.then8, %land.lhs.true6.do.end10_crit_edge, %land.lhs.true.do.end10_crit_edge, %rcu_read_lock.exit.do.end10_crit_edge
  tail call void @__netif_schedule(ptr noundef %5)
  %call.i15 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i15, label %do.end10.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i18

do.end10.rcu_read_unlock.exit_crit_edge:          ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i18:                                ; preds = %do.end10
  %call1.i16 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i16)
  %tobool.not.i17 = icmp eq i32 %call1.i16, 0
  br i1 %tobool.not.i17, label %land.lhs.true.i18.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i20

land.lhs.true.i18.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i18
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i20:                               ; preds = %land.lhs.true.i18
  %.b4.i19 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i19, label %land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge, label %if.then.i21

land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i21:                                      ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i21, %land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i18.rcu_read_unlock.exit_crit_edge, %do.end10.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %6 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i22 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i22 to ptr
  %preempt_count.i.i.i.i23 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i23 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i23, align 4
  %sub.i.i.i = add i32 %9, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i23, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  br label %if.end12

if.end12:                                         ; preds = %rcu_read_unlock.exit, %entry.if.end12_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__dev_kfree_skb_irq(ptr noundef %skb, i32 noundef %reason) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %skb, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !1310

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %users = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users, i32 noundef 4) #35
  %0 = ptrtoint ptr %users to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %users, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %do.end, label %if.else, !prof !1311

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1336
  %call.i.i.i126 = tail call zeroext i1 @__kasan_check_write(ptr noundef %users, i32 noundef 4) #35
  %2 = ptrtoint ptr %users to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 0, ptr %users, align 4
  br label %if.end27

if.else:                                          ; preds = %if.end
  %call16 = tail call fastcc zeroext i1 @refcount_dec_and_test(ptr noundef %users)
  br i1 %call16, label %if.else.if.end27_crit_edge, label %if.else.cleanup_crit_edge, !prof !1310

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.else.if.end27_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end27

if.end27:                                         ; preds = %if.else.if.end27_crit_edge, %do.end
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3
  %3 = ptrtoint ptr %cb.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %reason, ptr %cb.i, align 4
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %and.i = and i32 %4, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool43.not = icmp eq i32 %and.i, 0
  br i1 %tobool43.not, label %if.then44, label %if.end27.do.end47_crit_edge

if.end27.do.end47_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end47

if.then44:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %do.end47

do.end47:                                         ; preds = %if.then44, %if.end27.do.end47_crit_edge
  %5 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i127 = and i32 %5, -16384
  %6 = inttoptr i32 %and.i127 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 9) to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %14 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %skb, align 8
  %15 = load i32, ptr %cpu, align 4
  %arrayidx76 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx76 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx76, align 4
  %add77 = add i32 %17, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 9) to i32)
  %18 = inttoptr i32 %add77 to ptr
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %skb, ptr %18, align 4
  tail call void @raise_softirq_irqoff(i32 noundef 2) #35
  br i1 %tobool43.not, label %if.then91, label %do.end47.do.body93_crit_edge

do.end47.do.body93_crit_edge:                     ; preds = %do.end47
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body93

if.then91:                                        ; preds = %do.end47
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_on() #35
  br label %do.body93

do.body93:                                        ; preds = %if.then91, %do.end47.do.body93_crit_edge
  %20 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %20, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool101.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool101.not, label %if.then110, label %do.body93.do.end113_crit_edge, !prof !1310

do.body93.do.end113_crit_edge:                    ; preds = %do.body93
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end113

if.then110:                                       ; preds = %do.body93
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end113

do.end113:                                        ; preds = %if.then110, %do.body93.do.end113_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %4) #35, !srcloc !1315
  br label %cleanup

cleanup:                                          ; preds = %do.end113, %if.else.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @refcount_dec_and_test(ptr noundef %r) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %r, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1337
  tail call void @llvm.prefetch.p0(ptr %r, i32 1, i32 3, i32 1) #35
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %r, ptr %r, i32 1, ptr elementtype(i32) %r) #35, !srcloc !1338
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 1
  br i1 %cmp.i.i, label %do.end.i.i, label %if.end5.i.i

do.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1339
  br label %__refcount_dec_and_test.exit

if.end5.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %.not.i.i = icmp sgt i32 %asmresult.i.i.i.i.i, 0
  br i1 %.not.i.i, label %if.end5.i.i.__refcount_dec_and_test.exit_crit_edge, label %if.then10.i.i, !prof !1311

if.end5.i.i.__refcount_dec_and_test.exit_crit_edge: ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__refcount_dec_and_test.exit

if.then10.i.i:                                    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @refcount_warn_saturate(ptr noundef %r, i32 noundef 3) #35
  br label %__refcount_dec_and_test.exit

__refcount_dec_and_test.exit:                     ; preds = %if.then10.i.i, %if.end5.i.i.__refcount_dec_and_test.exit_crit_edge, %do.end.i.i
  ret i1 %cmp.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @raise_softirq_irqoff(i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef %reason) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i = and i32 %4, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool10.not = icmp eq i32 %and.i, 0
  br i1 %tobool10.not, label %if.else, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  tail call void @__dev_kfree_skb_irq(ptr noundef %skb, i32 noundef %reason)
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @consume_skb(ptr noundef %skb) #35
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_device_detach(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %call = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %state) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %2 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp4.not.i = icmp eq i32 %3, 0
  br i1 %cmp4.not.i, label %if.then.if.end_crit_edge, label %for.body.lr.ph.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

for.body.lr.ph.i:                                 ; preds = %if.then
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %5, i32 %i.05.i, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #35
  %inc.i = add nuw i32 %i.05.i, 1
  %6 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %7
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.end_crit_edge

for.body.i.if.end_crit_edge:                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

if.end:                                           ; preds = %for.body.i.if.end_crit_edge, %if.then.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_tx_stop_all_queues(ptr nocapture noundef readonly %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %0 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_tx_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp4.not = icmp eq i32 %1, 0
  br i1 %cmp4.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.05 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %2 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %_tx.i, align 128
  %state.i = getelementptr %struct.netdev_queue, ptr %3, i32 %i.05, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i) #35
  %inc = add nuw i32 %i.05, 1
  %4 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_tx_queues, align 4
  %cmp = icmp ult i32 %inc, %5
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_device_attach(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %call = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %state) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %2 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp4.not.i = icmp eq i32 %3, 0
  br i1 %cmp4.not.i, label %if.then.netif_tx_wake_all_queues.exit_crit_edge, label %for.body.lr.ph.i

if.then.netif_tx_wake_all_queues.exit_crit_edge:  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_tx_wake_all_queues.exit

for.body.lr.ph.i:                                 ; preds = %if.then
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %4 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %_tx.i.i, align 128
  %arrayidx.i.i = getelementptr %struct.netdev_queue, ptr %5, i32 %i.05.i
  tail call void @netif_tx_wake_queue(ptr noundef %arrayidx.i.i) #35
  %inc.i = add nuw i32 %i.05.i, 1
  %6 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %7
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.netif_tx_wake_all_queues.exit_crit_edge

for.body.i.netif_tx_wake_all_queues.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_tx_wake_all_queues.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

netif_tx_wake_all_queues.exit:                    ; preds = %for.body.i.netif_tx_wake_all_queues.exit_crit_edge, %if.then.netif_tx_wake_all_queues.exit_crit_edge
  tail call void @__netdev_watchdog_up(ptr noundef %dev) #35
  br label %if.end

if.end:                                           ; preds = %netif_tx_wake_all_queues.exit, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__netdev_watchdog_up(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_checksum_help(ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %ip_summed, align 8
  %1 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %1)
  %cmp = icmp eq i16 %1, 1024
  br i1 %cmp, label %entry.out_set_summed_crit_edge, label %if.end

entry.out_set_summed_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_set_summed

if.end:                                           ; preds = %entry
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %2 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %gso_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.i.not = icmp eq i16 %5, 0
  br i1 %tobool.i.not, label %if.end4, label %if.then3, !prof !1311

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @skb_warn_bad_offload(ptr noundef %skb)
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %6 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i.not.i = icmp eq i32 %7, 0
  br i1 %tobool.i.not.i, label %if.end4.if.end11_crit_edge, label %skb_has_shared_frag.exit

if.end4.if.end11_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

skb_has_shared_frag.exit:                         ; preds = %if.end4
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %3, align 8
  %10 = and i8 %9, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.i89.not = icmp eq i8 %10, 0
  br i1 %tobool.i89.not, label %skb_has_shared_frag.exit.if.end11_crit_edge, label %if.then6

skb_has_shared_frag.exit.if.end11_crit_edge:      ; preds = %skb_has_shared_frag.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

if.then6:                                         ; preds = %skb_has_shared_frag.exit
  %call.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %7) #35
  %tobool.not.i.not = icmp eq ptr %call.i, null
  br i1 %tobool.not.i.not, label %if.then6.cleanup_crit_edge, label %if.then6.if.end11_crit_edge

if.then6.if.end11_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end11:                                         ; preds = %if.then6.if.end11_crit_edge, %skb_has_shared_frag.exit.if.end11_crit_edge, %if.end4.if.end11_crit_edge
  %11 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %11, align 8
  %conv.i = zext i16 %13 to i32
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %14 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %16 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %15 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %17 to i32
  %sub.ptr.sub.i.neg.i = sub i32 %conv.i, %sub.ptr.lhs.cast.i.i
  %sub.i = add i32 %sub.ptr.sub.i.neg.i, %sub.ptr.rhs.cast.i.i
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %18 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %len.i, align 4
  %20 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %data_len.i.i, align 8
  %sub.i91 = sub i32 %19, %21
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %sub.i91)
  %cmp14.not = icmp ult i32 %sub.i, %sub.i91
  br i1 %cmp14.not, label %do.end29, label %do.body23, !prof !1311

do.body23:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3159, 0\0A.popsection", ""() #35, !srcloc !1340
  unreachable

do.end29:                                         ; preds = %if.end11
  %sub = sub i32 %19, %sub.i
  %call30 = tail call i32 @skb_checksum(ptr noundef %skb, i32 noundef %sub.i, i32 noundef %sub, i32 noundef 0) #35
  %csum_offset = getelementptr inbounds %struct.anon.193, ptr %11, i32 0, i32 1
  %22 = ptrtoint ptr %csum_offset to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %csum_offset, align 2
  %conv31 = zext i16 %23 to i32
  %add = add i32 %sub.i, %conv31
  %add33 = add i32 %add, 2
  %24 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %len.i, align 4
  %26 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %data_len.i.i, align 8
  %sub.i94 = sub i32 %25, %27
  call void @__sanitizer_cov_trace_cmp4(i32 %add33, i32 %sub.i94)
  %cmp35 = icmp ugt i32 %add33, %sub.i94
  br i1 %cmp35, label %do.body44, label %do.end52, !prof !1310

do.body44:                                        ; preds = %do.end29
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3163, 0\0A.popsection", ""() #35, !srcloc !1341
  unreachable

do.end52:                                         ; preds = %do.end29
  %call54 = tail call i32 @skb_ensure_writable(ptr noundef %skb, i32 noundef %add33) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %if.end57, label %do.end52.cleanup_crit_edge

do.end52.cleanup_crit_edge:                       ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end57:                                         ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #37
  %28 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %call30) #45, !srcloc !1342
  %neg.i = xor i32 %28, -1
  %shr.i = lshr i32 %neg.i, 16
  %conv.i95 = trunc i32 %shr.i to i16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv.i95)
  %tobool60.not = icmp eq i16 %conv.i95, 0
  %narrow = select i1 %tobool60.not, i16 -1, i16 %conv.i95
  %29 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %data.i.i, align 4
  %add.ptr = getelementptr i8, ptr %30, i32 %add
  %31 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %narrow, ptr %add.ptr, align 2
  br label %out_set_summed

out_set_summed:                                   ; preds = %if.end57, %entry.out_set_summed_crit_edge
  %32 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %32)
  %bf.load63 = load i16, ptr %ip_summed, align 8
  %bf.clear64 = and i16 %bf.load63, -1537
  store i16 %bf.clear64, ptr %ip_summed, align 8
  br label %cleanup

cleanup:                                          ; preds = %out_set_summed, %do.end52.cleanup_crit_edge, %if.then6.cleanup_crit_edge, %if.then3
  %retval.0 = phi i32 [ -22, %if.then3 ], [ 0, %out_set_summed ], [ -12, %if.then6.cleanup_crit_edge ], [ %call54, %do.end52.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @skb_warn_bad_offload(ptr noundef %skb) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  %call = tail call i32 @net_ratelimit() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %2, null
  br i1 %tobool1.not, label %if.end.if.end11_crit_edge, label %if.then2

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

if.then2:                                         ; preds = %if.end
  %parent = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 133, i32 1
  %3 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %parent, align 8
  %tobool4.not = icmp eq ptr %4, null
  br i1 %tobool4.not, label %if.else, label %if.then5

if.then5:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #37
  %call8 = tail call ptr @dev_driver_string(ptr noundef nonnull %4) #35
  br label %if.end11

if.else:                                          ; preds = %if.then2
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %2, align 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %if.else.if.end11_crit_edge, label %lor.lhs.false.i

if.else.if.end11_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

lor.lhs.false.i:                                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  %call.i = tail call ptr @strchr(ptr noundef nonnull %2, i32 noundef 37) #35
  %tobool2.not.i = icmp eq ptr %call.i, null
  %spec.select.i = select i1 %tobool2.not.i, ptr %2, ptr @.str.97
  br label %if.end11

if.end11:                                         ; preds = %lor.lhs.false.i, %if.else.if.end11_crit_edge, %if.then5, %if.end.if.end11_crit_edge
  %name.0 = phi ptr [ %call8, %if.then5 ], [ @.str.82, %if.end.if.end11_crit_edge ], [ @.str.97, %if.else.if.end11_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  tail call void @skb_dump(ptr noundef nonnull @.str.86, ptr noundef %skb, i1 noundef zeroext false) #35
  %features = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 23
  %cond = select i1 %tobool1.not, ptr @skb_warn_bad_offload.null_features, ptr %features
  %7 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool18.not = icmp eq ptr %9, null
  %sk_route_caps = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 38
  %cond22 = select i1 %tobool18.not, ptr @skb_warn_bad_offload.null_features, ptr %sk_route_caps
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3129, i32 noundef 9, ptr noundef nonnull @.str.115, ptr noundef %name.0, ptr noundef %cond, ptr noundef %cond22) #35
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_checksum(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_ensure_writable(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_crc32c_csum_help(ptr noundef %skb) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %ip_summed, align 8
  %1 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %1)
  %cmp.not = icmp eq i16 %1, 1536
  br i1 %cmp.not, label %if.end, label %entry.out_crit_edge

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end:                                           ; preds = %entry
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %2 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %gso_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.i.not = icmp eq i16 %5, 0
  br i1 %tobool.i.not, label %if.end4, label %if.end.out_crit_edge, !prof !1311

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end4:                                          ; preds = %if.end
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %6 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i.not.i = icmp eq i32 %7, 0
  br i1 %tobool.i.not.i, label %if.end4.if.end17_crit_edge, label %skb_has_shared_frag.exit

if.end4.if.end17_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end17

skb_has_shared_frag.exit:                         ; preds = %if.end4
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %3, align 8
  %10 = and i8 %9, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.i104.not = icmp eq i8 %10, 0
  br i1 %tobool.i104.not, label %skb_has_shared_frag.exit.if.end17_crit_edge, label %if.then12, !prof !1311

skb_has_shared_frag.exit.if.end17_crit_edge:      ; preds = %skb_has_shared_frag.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end17

if.then12:                                        ; preds = %skb_has_shared_frag.exit
  %call.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %7) #35
  %tobool.not.i.not = icmp eq ptr %call.i, null
  br i1 %tobool.not.i.not, label %if.then12.out_crit_edge, label %if.then12.if.end17_crit_edge

if.then12.if.end17_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end17

if.then12.out_crit_edge:                          ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end17:                                         ; preds = %if.then12.if.end17_crit_edge, %skb_has_shared_frag.exit.if.end17_crit_edge, %if.end4.if.end17_crit_edge
  %11 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %11, align 8
  %conv.i = zext i16 %13 to i32
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %14 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %16 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %15 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %17 to i32
  %sub.ptr.sub.i.neg.i = sub i32 %conv.i, %sub.ptr.lhs.cast.i.i
  %sub.i = add i32 %sub.ptr.sub.i.neg.i, %sub.ptr.rhs.cast.i.i
  %add = add i32 %sub.i, 8
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %18 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %len.i, align 4
  %20 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %data_len.i.i, align 8
  %sub.i106 = sub i32 %19, %21
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %sub.i106)
  %cmp20.not = icmp ult i32 %add, %sub.i106
  br i1 %cmp20.not, label %if.end69, label %land.rhs

land.rhs:                                         ; preds = %if.end17
  %.b101 = load i1, ptr @skb_crc32c_csum_help.__already_done, align 1
  br i1 %.b101, label %land.rhs.out_crit_edge, label %if.then37, !prof !1311

land.rhs.out_crit_edge:                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.then37:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @skb_crc32c_csum_help.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3198, i32 noundef 9, ptr noundef null) #35
  br label %out

if.end69:                                         ; preds = %if.end17
  %add70 = add i32 %sub.i, 12
  %call71 = tail call i32 @skb_ensure_writable(ptr noundef %skb, i32 noundef %add70) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %if.end74, label %if.end69.out_crit_edge

if.end69.out_crit_edge:                           ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end74:                                         ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #37
  %22 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %len.i, align 4
  %sub = sub i32 %23, %sub.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @crc32c_csum_stub to i32))
  %24 = load ptr, ptr @crc32c_csum_stub, align 4
  %call75 = tail call i32 @__skb_checksum(ptr noundef %skb, i32 noundef %sub.i, i32 noundef %sub, i32 noundef -1, ptr noundef %24) #35
  %neg = xor i32 %call75, -1
  %25 = tail call i32 @llvm.bswap.i32(i32 %neg)
  %26 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %data.i.i, align 4
  %add.ptr = getelementptr i8, ptr %27, i32 %add
  %28 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %25, ptr %add.ptr, align 4
  %29 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %29)
  %bf.load77 = load i16, ptr %ip_summed, align 8
  %bf.clear78 = and i16 %bf.load77, -1537
  store i16 %bf.clear78, ptr %ip_summed, align 8
  %csum_not_inet = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %30 = ptrtoint ptr %csum_not_inet to i32
  call void @__asan_loadN_noabort(i32 %30, i32 4)
  %bf.load79 = load i32, ptr %csum_not_inet, align 2
  %bf.clear80 = and i32 %bf.load79, -134217729
  store i32 %bf.clear80, ptr %csum_not_inet, align 2
  br label %out

out:                                              ; preds = %if.end74, %if.end69.out_crit_edge, %if.then37, %land.rhs.out_crit_edge, %if.then12.out_crit_edge, %if.end.out_crit_edge, %entry.out_crit_edge
  %ret.0 = phi i32 [ 0, %entry.out_crit_edge ], [ 0, %if.end.out_crit_edge ], [ -12, %if.then12.out_crit_edge ], [ %call71, %if.end69.out_crit_edge ], [ 0, %if.end74 ], [ -22, %if.then37 ], [ -22, %land.rhs.out_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__skb_checksum(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #17

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @skb_network_protocol(ptr noundef %skb, ptr noundef writeonly %depth) local_unnamed_addr #1 align 64 {
entry:
  %vhdr.i = alloca %struct.vlan_hdr, align 2
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %0 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %protocol, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 25944, i16 %1)
  %cmp = icmp eq i16 %1, 25944
  br i1 %cmp, label %if.then, label %entry.if.end5_crit_edge

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end5

if.then:                                          ; preds = %entry
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %2 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %4 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %3, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %sub.i.i)
  %cmp.not.i = icmp ult i32 %sub.i.i, 14
  br i1 %cmp.not.i, label %if.end.i, label %if.then.cleanup_crit_edge, !prof !1310

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %3)
  %cmp3.i = icmp ult i32 %3, 14
  br i1 %cmp3.i, label %if.end.i.cleanup7_crit_edge, label %pskb_may_pull.exit, !prof !1310

if.end.i.cleanup7_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup7

pskb_may_pull.exit:                               ; preds = %if.end.i
  %sub.i = sub nuw nsw i32 14, %sub.i.i
  %call13.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i) #35
  %cmp14.i.not = icmp eq ptr %call13.i, null
  br i1 %cmp14.i.not, label %pskb_may_pull.exit.cleanup7_crit_edge, label %pskb_may_pull.exit.cleanup_crit_edge, !prof !1310

pskb_may_pull.exit.cleanup_crit_edge:             ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

pskb_may_pull.exit.cleanup7_crit_edge:            ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup7

cleanup:                                          ; preds = %pskb_may_pull.exit.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %data, align 4
  %h_proto = getelementptr inbounds %struct.ethhdr, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %h_proto to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %h_proto, align 1
  br label %if.end5

if.end5:                                          ; preds = %cleanup, %entry.if.end5_crit_edge
  %type.1 = phi i16 [ %9, %cleanup ], [ %1, %entry.if.end5_crit_edge ]
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %10 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %mac_len.i, align 4
  %conv.i = zext i16 %11 to i32
  %12 = zext i16 %type.1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.296)
  switch i16 %type.1, label %if.end5.if.end45.i_crit_edge [
    i16 -30552, label %if.end5.if.then.i_crit_edge
    i16 -32512, label %if.end5.if.then.i_crit_edge21
  ]

if.end5.if.then.i_crit_edge21:                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i

if.end5.if.then.i_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i

if.end5.if.end45.i_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end45.i

if.then.i:                                        ; preds = %if.end5.if.then.i_crit_edge, %if.end5.if.then.i_crit_edge21
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool.not.i = icmp eq i16 %11, 0
  br i1 %tobool.not.i, label %if.then.i.if.end26.i_crit_edge, label %if.then1.i

if.then.i.if.end26.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end26.i

if.then1.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 4, i16 %11)
  %cmp.i = icmp ult i16 %11, 4
  br i1 %cmp.i, label %do.end.i, label %if.end25.i, !prof !1310

do.end.i:                                         ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.116, i32 noundef 598, i32 noundef 9, ptr noundef null) #35
  br label %cleanup7

if.end25.i:                                       ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #37
  %sub.i12 = add nsw i32 %conv.i, -4
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.end25.i, %if.then.i.if.end26.i_crit_edge
  %vlan_depth.0.i = phi i32 [ %sub.i12, %if.end25.i ], [ 14, %if.then.i.if.end26.i_crit_edge ]
  %13 = getelementptr inbounds %struct.vlan_hdr, ptr %vhdr.i, i32 0, i32 1
  %len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %tobool2.not.i.i.i = icmp eq ptr %skb, null
  br label %do.body27.i

do.body27.i:                                      ; preds = %do.body27.i.backedge, %if.end26.i
  %vlan_depth.1.i = phi i32 [ %vlan_depth.0.i, %if.end26.i ], [ %add.i, %do.body27.i.backedge ]
  %parse_depth.0.i = phi i32 [ 8, %if.end26.i ], [ %dec.i, %do.body27.i.backedge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vhdr.i) #35
  %14 = ptrtoint ptr %vhdr.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 -1, ptr %vhdr.i, align 2, !annotation !1320
  %15 = ptrtoint ptr %13 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 -1, ptr %13, align 2, !annotation !1320
  %16 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %len.i.i.i, align 4
  %18 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %data_len.i.i.i, align 8
  %20 = add i32 %vlan_depth.1.i, %19
  %sub.i4.i.i = sub i32 %17, %20
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %sub.i4.i.i)
  %cmp.not.i.i.i = icmp slt i32 %sub.i4.i.i, 4
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !1310

if.then.i.i.i:                                    ; preds = %do.body27.i
  call void @__sanitizer_cov_trace_pc() #37
  %21 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %22, i32 %vlan_depth.1.i
  br label %skb_header_pointer.exit.i

if.end.i.i.i:                                     ; preds = %do.body27.i
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i.cleanup.thread.i_crit_edge, label %lor.lhs.false.i.i.i

if.end.i.i.i.cleanup.thread.i_crit_edge:          ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread.i

lor.lhs.false.i.i.i:                              ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %vlan_depth.1.i, ptr noundef nonnull %vhdr.i, i32 noundef 4) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp3.i.i.i = icmp slt i32 %call.i.i.i, 0
  %spec.select.i.i.i = select i1 %cmp3.i.i.i, ptr null, ptr %vhdr.i, !prof !1310
  br label %skb_header_pointer.exit.i

skb_header_pointer.exit.i:                        ; preds = %lor.lhs.false.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi ptr [ %add.ptr.i.i.i, %if.then.i.i.i ], [ %spec.select.i.i.i, %lor.lhs.false.i.i.i ]
  %tobool29.not.i = icmp eq ptr %retval.0.i.i.i, null
  %dec.i = add nsw i32 %parse_depth.0.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool30.not.i = icmp eq i32 %dec.i, 0
  %23 = select i1 %tobool29.not.i, i1 true, i1 %tobool30.not.i, !prof !1310
  br i1 %23, label %skb_header_pointer.exit.i.cleanup.thread.i_crit_edge, label %do.cond42.i, !prof !1310

skb_header_pointer.exit.i.cleanup.thread.i_crit_edge: ; preds = %skb_header_pointer.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread.i

cleanup.thread.i:                                 ; preds = %skb_header_pointer.exit.i.cleanup.thread.i_crit_edge, %if.end.i.i.i.cleanup.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vhdr.i) #35
  br label %cleanup7

do.cond42.i:                                      ; preds = %skb_header_pointer.exit.i
  %h_vlan_encapsulated_proto.i = getelementptr inbounds %struct.vlan_hdr, ptr %retval.0.i.i.i, i32 0, i32 1
  %24 = ptrtoint ptr %h_vlan_encapsulated_proto.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %h_vlan_encapsulated_proto.i, align 2
  %add.i = add nsw i32 %vlan_depth.1.i, 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vhdr.i) #35
  %26 = zext i16 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.297)
  switch i16 %25, label %do.cond42.i.if.end45.i_crit_edge [
    i16 -30552, label %do.cond42.i.do.body27.i.backedge_crit_edge
    i16 -32512, label %do.cond42.i.do.body27.i.backedge_crit_edge22
  ]

do.cond42.i.do.body27.i.backedge_crit_edge22:     ; preds = %do.cond42.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body27.i.backedge

do.cond42.i.do.body27.i.backedge_crit_edge:       ; preds = %do.cond42.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body27.i.backedge

do.cond42.i.if.end45.i_crit_edge:                 ; preds = %do.cond42.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end45.i

do.body27.i.backedge:                             ; preds = %do.cond42.i.do.body27.i.backedge_crit_edge, %do.cond42.i.do.body27.i.backedge_crit_edge22
  br label %do.body27.i

if.end45.i:                                       ; preds = %do.cond42.i.if.end45.i_crit_edge, %if.end5.if.end45.i_crit_edge
  %type.addr.2.i = phi i16 [ %type.1, %if.end5.if.end45.i_crit_edge ], [ %25, %do.cond42.i.if.end45.i_crit_edge ]
  %vlan_depth.3.i = phi i32 [ %conv.i, %if.end5.if.end45.i_crit_edge ], [ %add.i, %do.cond42.i.if.end45.i_crit_edge ]
  %tobool46.not.i = icmp eq ptr %depth, null
  br i1 %tobool46.not.i, label %if.end45.i.cleanup7_crit_edge, label %if.then47.i

if.end45.i.cleanup7_crit_edge:                    ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup7

if.then47.i:                                      ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #37
  %27 = ptrtoint ptr %depth to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %vlan_depth.3.i, ptr %depth, align 4
  br label %cleanup7

cleanup7:                                         ; preds = %if.then47.i, %if.end45.i.cleanup7_crit_edge, %cleanup.thread.i, %do.end.i, %pskb_may_pull.exit.cleanup7_crit_edge, %if.end.i.cleanup7_crit_edge
  %retval.1 = phi i16 [ 0, %do.end.i ], [ %type.addr.2.i, %if.then47.i ], [ %type.addr.2.i, %if.end45.i.cleanup7_crit_edge ], [ 0, %cleanup.thread.i ], [ 0, %pskb_may_pull.exit.cleanup7_crit_edge ], [ 0, %if.end.i.cleanup7_crit_edge ]
  ret i16 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__skb_gso_segment(ptr noundef %skb, i64 noundef %features, i1 noundef zeroext %tx_path) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %..i = select i1 %tx_path, i16 512, i16 1536
  %1 = and i16 %bf.load.i, %..i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %retval.0.i = icmp eq i16 %1, 0
  br i1 %retval.0.i, label %if.then, label %entry.if.end6_crit_edge, !prof !1310

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end6

if.then:                                          ; preds = %entry
  %call3 = tail call fastcc i32 @skb_cow_head(ptr noundef %skb, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %cleanup.thread, label %if.then.if.end6_crit_edge

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end6

cleanup.thread:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %2 = inttoptr i32 %call3 to ptr
  br label %cleanup36

if.end6:                                          ; preds = %if.then.if.end6_crit_edge, %entry.if.end6_crit_edge
  %and = and i64 %features, 268435456
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool7.not = icmp eq i64 %and, 0
  br i1 %tobool7.not, label %if.end6.do.end_crit_edge, label %if.then8

if.end6.do.end_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then8:                                         ; preds = %if.end6
  %3 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %features9 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %features9 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %features9, align 16
  %gso_partial_features = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 29
  %8 = ptrtoint ptr %gso_partial_features to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %gso_partial_features, align 64
  %and10 = and i64 %9, %7
  %or = or i64 %and10, %features
  %or11 = or i64 %or, 131072
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %10 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %end.i.i, align 4
  %gso_type.i = getelementptr inbounds %struct.skb_shared_info, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %gso_type.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gso_type.i, align 8
  %conv.i.i = sext i32 %13 to i64
  %shl.i.i = shl nsw i64 %conv.i.i, 16
  %and.i.i = and i64 %shl.i.i, %or11
  call void @__sanitizer_cov_trace_cmp8(i64 %and.i.i, i64 %shl.i.i)
  %cmp.i.i = icmp eq i64 %and.i.i, %shl.i.i
  br i1 %cmp.i.i, label %land.rhs.i, label %skb_gso_ok.exit.thread70

skb_gso_ok.exit.thread70:                         ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #37
  %and1471 = and i64 %features, -268435457
  br label %do.end

land.rhs.i:                                       ; preds = %if.then8
  %frag_list.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %11, i32 0, i32 6
  %14 = ptrtoint ptr %frag_list.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %frag_list.i.i, align 8
  %cmp.i5.not.i = icmp eq ptr %15, null
  br i1 %cmp.i5.not.i, label %land.rhs.i.skb_gso_ok.exit.thread_crit_edge, label %skb_gso_ok.exit

land.rhs.i.skb_gso_ok.exit.thread_crit_edge:      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_gso_ok.exit.thread

skb_gso_ok.exit:                                  ; preds = %land.rhs.i
  %and.i = and i64 %or, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  %and14 = and i64 %features, -268435457
  br i1 %tobool.i.not, label %skb_gso_ok.exit.do.end_crit_edge, label %skb_gso_ok.exit.skb_gso_ok.exit.thread_crit_edge

skb_gso_ok.exit.skb_gso_ok.exit.thread_crit_edge: ; preds = %skb_gso_ok.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_gso_ok.exit.thread

skb_gso_ok.exit.do.end_crit_edge:                 ; preds = %skb_gso_ok.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

skb_gso_ok.exit.thread:                           ; preds = %skb_gso_ok.exit.skb_gso_ok.exit.thread_crit_edge, %land.rhs.i.skb_gso_ok.exit.thread_crit_edge
  br label %do.end

do.end:                                           ; preds = %skb_gso_ok.exit.thread, %skb_gso_ok.exit.do.end_crit_edge, %skb_gso_ok.exit.thread70, %if.end6.do.end_crit_edge
  %features.addr.1 = phi i64 [ %features, %if.end6.do.end_crit_edge ], [ %features, %skb_gso_ok.exit.thread ], [ %and14, %skb_gso_ok.exit.do.end_crit_edge ], [ %and1471, %skb_gso_ok.exit.thread70 ]
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %18 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %17 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %19 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %add.ptr = getelementptr %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 32
  %20 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %sub.ptr.sub.i, ptr %add.ptr, align 4
  %encap_level = getelementptr %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 36
  %21 = ptrtoint ptr %encap_level to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %encap_level, align 4
  %conv.i = trunc i32 %sub.ptr.sub.i to i16
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %22 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %conv.i, ptr %mac_header.i, align 2
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %23 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %network_header.i, align 4
  %sub.i = sub i16 %24, %conv.i
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %25 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 %sub.i, ptr %mac_len.i, align 4
  %call21 = tail call ptr @skb_mac_gso_segment(ptr noundef %skb, i64 noundef %features.addr.1) #35
  %cmp22.not = icmp eq ptr %call21, %skb
  br i1 %cmp22.not, label %do.end.cleanup36_crit_edge, label %land.lhs.true

do.end.cleanup36_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup36

land.lhs.true:                                    ; preds = %do.end
  %26 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %bf.load.i65 = load i16, ptr %ip_summed.i, align 8
  %27 = and i16 %bf.load.i65, %..i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %retval.0.i67 = icmp eq i16 %27, 0
  %cmp.i = icmp ule ptr %call21, inttoptr (i32 -4096 to ptr)
  %or.cond = select i1 %retval.0.i67, i1 %cmp.i, i1 false
  br i1 %or.cond, label %if.then34, label %land.lhs.true.cleanup36_crit_edge, !prof !1343

land.lhs.true.cleanup36_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup36

if.then34:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @skb_warn_bad_offload(ptr noundef %skb)
  br label %cleanup36

cleanup36:                                        ; preds = %if.then34, %land.lhs.true.cleanup36_crit_edge, %do.end.cleanup36_crit_edge, %cleanup.thread
  %retval.1 = phi ptr [ %call21, %land.lhs.true.cleanup36_crit_edge ], [ %call21, %if.then34 ], [ %skb, %do.end.cleanup36_crit_edge ], [ %2, %cleanup.thread ]
  ret ptr %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @skb_cow_head(ptr noundef %skb, i32 noundef %headroom) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %0 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.skb_header_cloned.exit_crit_edge, label %if.end.i

entry.skb_header_cloned.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_header_cloned.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %1 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %end.i.i, align 4
  %dataref1.i = getelementptr inbounds %struct.skb_shared_info, ptr %2, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i, i32 noundef 4) #35
  %3 = ptrtoint ptr %dataref1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dataref1.i, align 4
  %and.i = and i32 %4, 65535
  %shr.i = ashr i32 %4, 16
  %sub.i = sub nsw i32 %and.i, %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i)
  %cmp.i.not = icmp eq i32 %sub.i, 1
  br label %skb_header_cloned.exit

skb_header_cloned.exit:                           ; preds = %if.end.i, %entry.skb_header_cloned.exit_crit_edge
  %retval.0.i = phi i1 [ %cmp.i.not, %if.end.i ], [ true, %entry.skb_header_cloned.exit_crit_edge ]
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %7 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %6 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %8 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i.i, i32 %headroom)
  %tobool.not.i3 = icmp uge i32 %sub.ptr.sub.i.i, %headroom
  %or.cond.i = and i1 %retval.0.i, %tobool.not.i3
  br i1 %or.cond.i, label %skb_header_cloned.exit.__skb_cow.exit_crit_edge, label %if.then3.i

skb_header_cloned.exit.__skb_cow.exit_crit_edge:  ; preds = %skb_header_cloned.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %__skb_cow.exit

if.then3.i:                                       ; preds = %skb_header_cloned.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.usub.sat.i32(i32 %headroom, i32 %sub.ptr.sub.i.i) #35
  %add.i = add i32 %9, 127
  %and.i4 = and i32 %add.i, -128
  %call4.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef %and.i4, i32 noundef 0, i32 noundef 2592) #35
  br label %__skb_cow.exit

__skb_cow.exit:                                   ; preds = %if.then3.i, %skb_header_cloned.exit.__skb_cow.exit_crit_edge
  %retval.0.i5 = phi i32 [ %call4.i, %if.then3.i ], [ 0, %skb_header_cloned.exit.__skb_cow.exit_crit_edge ]
  ret i32 %retval.0.i5
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_mac_gso_segment(ptr noundef, i64 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_rx_csum_fault(ptr noundef %dev, ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %.b12 = load i1, ptr @netdev_rx_csum_fault.__already_done, align 1
  br i1 %.b12, label %entry.if.end_crit_edge, label %if.then, !prof !1311

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_rx_csum_fault.__already_done, align 1
  tail call fastcc void @do_netdev_rx_csum_fault(ptr noundef %dev, ptr noundef %skb)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @do_netdev_rx_csum_fault(ptr noundef %dev, ptr noundef %skb) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.117) #43
  tail call void @skb_dump(ptr noundef nonnull @.str.60, ptr noundef %skb, i1 noundef zeroext true) #35
  tail call void @dump_stack() #41
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i64 @passthru_features_check(ptr nocapture readnone %skb, ptr nocapture readnone %dev, i64 noundef returned %features) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  ret i64 %features
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @netif_skb_features(ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  %features1 = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 23
  %3 = ptrtoint ptr %features1 to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %features1, align 16
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %5 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %end.i.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %gso_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool.i.not = icmp eq i16 %8, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  %gso_segs1.i = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 5
  %9 = ptrtoint ptr %gso_segs1.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %gso_segs1.i, align 2
  %gso_max_segs.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 138
  %11 = ptrtoint ptr %gso_max_segs.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load volatile i16, ptr %gso_max_segs.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %10, i16 %12)
  %cmp.i = icmp ugt i16 %10, %12
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %and.i = and i64 %4, -34359672833
  br label %if.end

if.end.i:                                         ; preds = %if.then
  %gso_type.i = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 8
  %13 = ptrtoint ptr %gso_type.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %gso_type.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i, label %if.then5.i, label %if.end7.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @skb_warn_bad_offload(ptr noundef %skb) #35
  %and6.i = and i64 %4, -34359672833
  br label %if.end

if.end7.i:                                        ; preds = %if.end.i
  %and10.i = and i32 %14, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i)
  %tobool11.not.i = icmp eq i32 %and10.i, 0
  br i1 %tobool11.not.i, label %if.then12.i, label %if.end7.i.if.end14.i_crit_edge

if.end7.i.if.end14.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end14.i

if.then12.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  %gso_partial_features.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 29
  %15 = ptrtoint ptr %gso_partial_features.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %gso_partial_features.i, align 64
  %neg.i = xor i64 %16, -1
  %and13.i = and i64 %4, %neg.i
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then12.i, %if.end7.i.if.end14.i_crit_edge
  %features.addr.0.i = phi i64 [ %4, %if.end7.i.if.end14.i_crit_edge ], [ %and13.i, %if.then12.i ]
  %and17.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  br i1 %tobool18.not.i, label %if.end14.i.if.end_crit_edge, label %if.then19.i

if.end14.i.if.end_crit_edge:                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then19.i:                                      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #37
  %encapsulation.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %17 = ptrtoint ptr %encapsulation.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %bf.load.i = load i16, ptr %encapsulation.i, align 8
  %18 = and i16 %bf.load.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %tobool21.not.i = icmp eq i16 %18, 0
  %head.i.i46.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %19 = ptrtoint ptr %head.i.i46.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %head.i.i46.i, align 8
  %network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %inner_network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 16
  %network_header.i.i.sink.i = select i1 %tobool21.not.i, ptr %network_header.i.i.i, ptr %inner_network_header.i.i.i
  %21 = ptrtoint ptr %network_header.i.i.sink.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %network_header.i.i.sink.i, align 4
  %conv.i.i47.i = zext i16 %22 to i32
  %add.ptr.i.i48.i = getelementptr i8, ptr %20, i32 %conv.i.i47.i
  %frag_off.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i48.i, i32 0, i32 4
  %23 = ptrtoint ptr %frag_off.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %frag_off.i, align 2
  %25 = and i16 %24, 16384
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool26.not.i = icmp eq i16 %25, 0
  %and28.i = and i64 %features.addr.0.i, -524289
  %spec.select.i = select i1 %tobool26.not.i, i64 %and28.i, i64 %features.addr.0.i
  br label %if.end

if.end:                                           ; preds = %if.then19.i, %if.end14.i.if.end_crit_edge, %if.then5.i, %if.then.i, %entry.if.end_crit_edge
  %features.0 = phi i64 [ %4, %entry.if.end_crit_edge ], [ %and.i, %if.then.i ], [ %and6.i, %if.then5.i ], [ %spec.select.i, %if.then19.i ], [ %features.addr.0.i, %if.end14.i.if.end_crit_edge ]
  %encapsulation = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %26 = ptrtoint ptr %encapsulation to i32
  call void @__asan_load2_noabort(i32 %26)
  %bf.load = load i16, ptr %encapsulation, align 8
  %27 = and i16 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %tobool.not = icmp eq i16 %27, 0
  br i1 %tobool.not, label %if.end.if.end4_crit_edge, label %if.then3

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %hw_enc_features = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 27
  %28 = ptrtoint ptr %hw_enc_features to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %hw_enc_features, align 16
  %and = and i64 %29, %features.0
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end.if.end4_crit_edge
  %features.1 = phi i64 [ %and, %if.then3 ], [ %features.0, %if.end.if.end4_crit_edge ]
  %vlan_present.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %30 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %30, i32 4)
  %bf.load.i42 = load i32, ptr %vlan_present.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load.i42)
  %tobool.not.i43 = icmp sgt i32 %bf.load.i42, -1
  br i1 %tobool.not.i43, label %skb_vlan_tagged.exit, label %if.end4.if.then6_crit_edge

if.end4.if.then6_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then6

skb_vlan_tagged.exit:                             ; preds = %if.end4
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %31 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %protocol.i, align 8
  %33 = zext i16 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.298)
  switch i16 %32, label %if.end9.thread [
    i16 -30552, label %skb_vlan_tagged.exit.if.then6_crit_edge
    i16 -32512, label %skb_vlan_tagged.exit.if.then6_crit_edge69
  ]

skb_vlan_tagged.exit.if.then6_crit_edge69:        ; preds = %skb_vlan_tagged.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then6

skb_vlan_tagged.exit.if.then6_crit_edge:          ; preds = %skb_vlan_tagged.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then6

if.then6:                                         ; preds = %skb_vlan_tagged.exit.if.then6_crit_edge, %skb_vlan_tagged.exit.if.then6_crit_edge69, %if.end4.if.then6_crit_edge
  %vlan_features = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 26
  %34 = ptrtoint ptr %vlan_features to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %vlan_features, align 8
  %or7 = or i64 %35, 35184372088960
  %xor.i = xor i64 %35, %features.1
  %and.i45 = and i64 %xor.i, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i45)
  %tobool.not.i46 = icmp eq i64 %and.i45, 0
  br i1 %tobool.not.i46, label %if.then6.if.end9_crit_edge, label %if.then.i47

if.then6.if.end9_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end9

if.then.i47:                                      ; preds = %if.then6
  %and1.i = and i64 %features.1, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i)
  %tobool2.not.i = icmp eq i64 %and1.i, 0
  br i1 %tobool2.not.i, label %if.else.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.then.i47
  call void @__sanitizer_cov_trace_pc() #37
  %or.i = or i64 %features.1, 18
  br label %if.end9

if.else.i:                                        ; preds = %if.then.i47
  call void @__sanitizer_cov_trace_pc() #37
  %or4.i = or i64 %35, 35184372088978
  br label %if.end9

if.end9:                                          ; preds = %if.else.i, %if.then3.i, %if.then6.if.end9_crit_edge
  %f1.addr.0.i = phi i64 [ %or.i, %if.then3.i ], [ %features.1, %if.else.i ], [ %features.1, %if.then6.if.end9_crit_edge ]
  %f2.addr.0.i = phi i64 [ %or7, %if.then3.i ], [ %or4.i, %if.else.i ], [ %or7, %if.then6.if.end9_crit_edge ]
  %and6.i48 = and i64 %f2.addr.0.i, %f1.addr.0.i
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 16
  %36 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %netdev_ops, align 8
  %ndo_features_check = getelementptr inbounds %struct.net_device_ops, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %ndo_features_check to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ndo_features_check, align 4
  %tobool10.not = icmp eq ptr %39, null
  br i1 %tobool10.not, label %if.else, label %if.end9.if.then11_crit_edge

if.end9.if.then11_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then11

if.end9.thread:                                   ; preds = %skb_vlan_tagged.exit
  %netdev_ops58 = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 16
  %40 = ptrtoint ptr %netdev_ops58 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %netdev_ops58, align 8
  %ndo_features_check59 = getelementptr inbounds %struct.net_device_ops, ptr %41, i32 0, i32 5
  %42 = ptrtoint ptr %ndo_features_check59 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ndo_features_check59, align 4
  %tobool10.not60 = icmp eq ptr %43, null
  br i1 %tobool10.not60, label %if.else.thread, label %if.end9.thread.if.then11_crit_edge

if.end9.thread.if.then11_crit_edge:               ; preds = %if.end9.thread
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then11

if.else.thread:                                   ; preds = %if.end9.thread
  call void @__sanitizer_cov_trace_pc() #37
  %44 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %protocol.i, align 8
  br label %if.then.i.i.i

if.then11:                                        ; preds = %if.end9.thread.if.then11_crit_edge, %if.end9.if.then11_crit_edge
  %46 = phi ptr [ %43, %if.end9.thread.if.then11_crit_edge ], [ %39, %if.end9.if.then11_crit_edge ]
  %features.261 = phi i64 [ %features.1, %if.end9.thread.if.then11_crit_edge ], [ %and6.i48, %if.end9.if.then11_crit_edge ]
  %call14 = tail call i64 %46(ptr noundef %skb, ptr noundef %2, i64 noundef %features.261) #35
  br label %if.end18

if.else:                                          ; preds = %if.end9
  %protocol1.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %47 = ptrtoint ptr %protocol1.i.i.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %protocol1.i.i.i, align 8
  br i1 %tobool.not.i43, label %if.else.if.then.i.i.i_crit_edge, label %if.else.skb_vlan_tagged_multi.exit.i.i_crit_edge

if.else.skb_vlan_tagged_multi.exit.i.i_crit_edge: ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_vlan_tagged_multi.exit.i.i

if.else.if.then.i.i.i_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.else.if.then.i.i.i_crit_edge, %if.else.thread
  %49 = phi i16 [ %45, %if.else.thread ], [ %48, %if.else.if.then.i.i.i_crit_edge ]
  %features.26368 = phi i64 [ %features.1, %if.else.thread ], [ %and6.i48, %if.else.if.then.i.i.i_crit_edge ]
  %50 = zext i16 %49 to i64
  call void @__sanitizer_cov_trace_switch(i64 %50, ptr @__sancov_gen_cov_switch_values.299)
  switch i16 %49, label %if.then.i.i.i.if.end18_crit_edge [
    i16 -30552, label %if.then.i.i.i.if.end.i.i.i_crit_edge
    i16 -32512, label %if.then.i.i.i.if.end.i.i.i_crit_edge70
  ]

if.then.i.i.i.if.end.i.i.i_crit_edge70:           ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i.i

if.then.i.i.i.if.end.i.i.i_crit_edge:             ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i.i

if.then.i.i.i.if.end18_crit_edge:                 ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

if.end.i.i.i:                                     ; preds = %if.then.i.i.i.if.end.i.i.i_crit_edge, %if.then.i.i.i.if.end.i.i.i_crit_edge70
  %len.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %51 = ptrtoint ptr %len.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %len.i.i.i.i, align 4
  %data_len.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %53 = ptrtoint ptr %data_len.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %data_len.i.i.i.i, align 8
  %sub.i.i.i.i = sub i32 %52, %54
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %sub.i.i.i.i)
  %cmp.not.i.i.i = icmp ult i32 %sub.i.i.i.i, 18
  br i1 %cmp.not.i.i.i, label %if.end.i2.i.i, label %if.end.i.i.i.cleanup.i.i.i_crit_edge, !prof !1310

if.end.i.i.i.cleanup.i.i.i_crit_edge:             ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.i.i.i

if.end.i2.i.i:                                    ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %52)
  %cmp3.i.i.i = icmp ult i32 %52, 18
  br i1 %cmp3.i.i.i, label %if.end.i2.i.i.if.end18_crit_edge, label %pskb_may_pull.exit.i.i, !prof !1310

if.end.i2.i.i.if.end18_crit_edge:                 ; preds = %if.end.i2.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

pskb_may_pull.exit.i.i:                           ; preds = %if.end.i2.i.i
  %sub.i.i.i = sub nuw nsw i32 18, %sub.i.i.i.i
  %call13.i.i.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i.i.i) #35
  %cmp14.i.not.i.i = icmp eq ptr %call13.i.i.i, null
  br i1 %cmp14.i.not.i.i, label %pskb_may_pull.exit.i.i.if.end18_crit_edge, label %pskb_may_pull.exit.i.i.cleanup.i.i.i_crit_edge, !prof !1310

pskb_may_pull.exit.i.i.cleanup.i.i.i_crit_edge:   ; preds = %pskb_may_pull.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.i.i.i

pskb_may_pull.exit.i.i.if.end18_crit_edge:        ; preds = %pskb_may_pull.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

cleanup.i.i.i:                                    ; preds = %pskb_may_pull.exit.i.i.cleanup.i.i.i_crit_edge, %if.end.i.i.i.cleanup.i.i.i_crit_edge
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %55 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %data.i.i.i, align 4
  %h_vlan_encapsulated_proto.i.i.i = getelementptr inbounds %struct.vlan_ethhdr, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %h_vlan_encapsulated_proto.i.i.i to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %h_vlan_encapsulated_proto.i.i.i, align 2
  br label %skb_vlan_tagged_multi.exit.i.i

skb_vlan_tagged_multi.exit.i.i:                   ; preds = %cleanup.i.i.i, %if.else.skb_vlan_tagged_multi.exit.i.i_crit_edge
  %features.26366 = phi i64 [ %and6.i48, %if.else.skb_vlan_tagged_multi.exit.i.i_crit_edge ], [ %features.26368, %cleanup.i.i.i ]
  %protocol.1.i.i.i = phi i16 [ %48, %if.else.skb_vlan_tagged_multi.exit.i.i_crit_edge ], [ %58, %cleanup.i.i.i ]
  %59 = zext i16 %protocol.1.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.300)
  switch i16 %protocol.1.i.i.i, label %skb_vlan_tagged_multi.exit.i.i.if.end18_crit_edge [
    i16 -30552, label %skb_vlan_tagged_multi.exit.i.i._crit_edge
    i16 -32512, label %skb_vlan_tagged_multi.exit.i.i._crit_edge71
  ]

skb_vlan_tagged_multi.exit.i.i._crit_edge71:      ; preds = %skb_vlan_tagged_multi.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %60

skb_vlan_tagged_multi.exit.i.i._crit_edge:        ; preds = %skb_vlan_tagged_multi.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %60

skb_vlan_tagged_multi.exit.i.i.if.end18_crit_edge: ; preds = %skb_vlan_tagged_multi.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

60:                                               ; preds = %skb_vlan_tagged_multi.exit.i.i._crit_edge, %skb_vlan_tagged_multi.exit.i.i._crit_edge71
  %and.i.i = and i64 %features.26366, 35184372089065
  br label %if.end18

if.end18:                                         ; preds = %60, %skb_vlan_tagged_multi.exit.i.i.if.end18_crit_edge, %pskb_may_pull.exit.i.i.if.end18_crit_edge, %if.end.i2.i.i.if.end18_crit_edge, %if.then.i.i.i.if.end18_crit_edge, %if.then11
  %features.262 = phi i64 [ %features.261, %if.then11 ], [ %features.26366, %60 ], [ %features.26366, %skb_vlan_tagged_multi.exit.i.i.if.end18_crit_edge ], [ %features.26368, %if.then.i.i.i.if.end18_crit_edge ], [ %features.26368, %pskb_may_pull.exit.i.i.if.end18_crit_edge ], [ %features.26368, %if.end.i2.i.i.if.end18_crit_edge ]
  %call14.pn = phi i64 [ %call14, %if.then11 ], [ %and.i.i, %60 ], [ %features.26366, %skb_vlan_tagged_multi.exit.i.i.if.end18_crit_edge ], [ %features.26368, %if.then.i.i.i.if.end18_crit_edge ], [ %features.26368, %pskb_may_pull.exit.i.i.if.end18_crit_edge ], [ %features.26368, %if.end.i2.i.i.if.end18_crit_edge ]
  %features.3 = and i64 %call14.pn, %features.262
  %call.i = tail call zeroext i16 @skb_network_protocol(ptr noundef %skb, ptr noundef null) #35
  %61 = add i16 %call.i, 30649
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %61)
  %62 = icmp ult i16 %61, 2
  br i1 %62, label %if.then.i.i, label %if.end18.net_mpls_features.exit.i_crit_edge

if.end18.net_mpls_features.exit.i_crit_edge:      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #37
  br label %net_mpls_features.exit.i

if.then.i.i:                                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #37
  %63 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %0, align 8
  %mpls_features.i.i = getelementptr inbounds %struct.net_device, ptr %64, i32 0, i32 28
  %65 = ptrtoint ptr %mpls_features.i.i to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %mpls_features.i.i, align 8
  %and.i.i49 = and i64 %66, %features.3
  br label %net_mpls_features.exit.i

net_mpls_features.exit.i:                         ; preds = %if.then.i.i, %if.end18.net_mpls_features.exit.i_crit_edge
  %features.addr.0.i.i = phi i64 [ %and.i.i49, %if.then.i.i ], [ %features.3, %if.end18.net_mpls_features.exit.i_crit_edge ]
  %67 = ptrtoint ptr %encapsulation to i32
  call void @__asan_load2_noabort(i32 %67)
  %bf.load.i50 = load i16, ptr %encapsulation, align 8
  %68 = and i16 %bf.load.i50, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %68)
  %cmp.not.i = icmp eq i16 %68, 0
  br i1 %cmp.not.i, label %net_mpls_features.exit.i.if.end.i54_crit_edge, label %land.lhs.true.i51

net_mpls_features.exit.i.if.end.i54_crit_edge:    ; preds = %net_mpls_features.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i54

land.lhs.true.i51:                                ; preds = %net_mpls_features.exit.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -30458, i16 %call.i)
  %cmp.i.i = icmp eq i16 %call.i, -30458
  br i1 %cmp.i.i, label %if.then.i19.i, label %if.end.i.i

if.then.i19.i:                                    ; preds = %land.lhs.true.i51
  %and.i18.i = and i64 %features.addr.0.i.i, 34359738368
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i18.i)
  %tobool.i.not.i = icmp eq i64 %and.i18.i, 0
  %and26.i = and i64 %features.addr.0.i.i, -34359672859
  br i1 %tobool.i.not.i, label %if.then.i19.i.if.end.i54_crit_edge, label %if.then.i19.i.can_checksum_protocol.exit.thread.i_crit_edge

if.then.i19.i.can_checksum_protocol.exit.thread.i_crit_edge: ; preds = %if.then.i19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %can_checksum_protocol.exit.thread.i

if.then.i19.i.if.end.i54_crit_edge:               ; preds = %if.then.i19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i54

if.end.i.i:                                       ; preds = %land.lhs.true.i51
  %and3.i.i = and i64 %features.addr.0.i.i, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and3.i.i)
  %tobool4.not.i.i = icmp eq i64 %and3.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end6.i.i, label %if.end.i.i.can_checksum_protocol.exit.thread.i_crit_edge

if.end.i.i.can_checksum_protocol.exit.thread.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %can_checksum_protocol.exit.thread.i

if.end6.i.i:                                      ; preds = %if.end.i.i
  %69 = zext i16 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %69, ptr @__sancov_gen_cov_switch_values.301)
  switch i16 %call.i, label %can_checksum_protocol.exit.thread23.i [
    i16 2048, label %can_checksum_protocol.exit.i
    i16 -31011, label %sw.bb12.i.i
  ]

can_checksum_protocol.exit.thread23.i:            ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %and25.i = and i64 %features.addr.0.i.i, -34359672859
  br label %if.end.i54

sw.bb12.i.i:                                      ; preds = %if.end6.i.i
  %and13.i.i = and i64 %features.addr.0.i.i, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i.i)
  %tobool14.i.not.i = icmp eq i64 %and13.i.i, 0
  %and27.i = and i64 %features.addr.0.i.i, -34359672859
  br i1 %tobool14.i.not.i, label %sw.bb12.i.i.if.end.i54_crit_edge, label %sw.bb12.i.i.can_checksum_protocol.exit.thread.i_crit_edge

sw.bb12.i.i.can_checksum_protocol.exit.thread.i_crit_edge: ; preds = %sw.bb12.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %can_checksum_protocol.exit.thread.i

sw.bb12.i.i.if.end.i54_crit_edge:                 ; preds = %sw.bb12.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i54

can_checksum_protocol.exit.i:                     ; preds = %if.end6.i.i
  %and8.i.i = and i64 %features.addr.0.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and8.i.i)
  %tobool9.i.not.i = icmp eq i64 %and8.i.i, 0
  %and.i52 = and i64 %features.addr.0.i.i, -34359672859
  br i1 %tobool9.i.not.i, label %can_checksum_protocol.exit.i.if.end.i54_crit_edge, label %can_checksum_protocol.exit.i.can_checksum_protocol.exit.thread.i_crit_edge

can_checksum_protocol.exit.i.can_checksum_protocol.exit.thread.i_crit_edge: ; preds = %can_checksum_protocol.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %can_checksum_protocol.exit.thread.i

can_checksum_protocol.exit.i.if.end.i54_crit_edge: ; preds = %can_checksum_protocol.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i54

can_checksum_protocol.exit.thread.i:              ; preds = %can_checksum_protocol.exit.i.can_checksum_protocol.exit.thread.i_crit_edge, %sw.bb12.i.i.can_checksum_protocol.exit.thread.i_crit_edge, %if.end.i.i.can_checksum_protocol.exit.thread.i_crit_edge, %if.then.i19.i.can_checksum_protocol.exit.thread.i_crit_edge
  br label %if.end.i54

if.end.i54:                                       ; preds = %can_checksum_protocol.exit.thread.i, %can_checksum_protocol.exit.i.if.end.i54_crit_edge, %sw.bb12.i.i.if.end.i54_crit_edge, %can_checksum_protocol.exit.thread23.i, %if.then.i19.i.if.end.i54_crit_edge, %net_mpls_features.exit.i.if.end.i54_crit_edge
  %features.addr.0.i53 = phi i64 [ %features.addr.0.i.i, %net_mpls_features.exit.i.if.end.i54_crit_edge ], [ %features.addr.0.i.i, %can_checksum_protocol.exit.thread.i ], [ %and.i52, %can_checksum_protocol.exit.i.if.end.i54_crit_edge ], [ %and25.i, %can_checksum_protocol.exit.thread23.i ], [ %and26.i, %if.then.i19.i.if.end.i54_crit_edge ], [ %and27.i, %sw.bb12.i.i.if.end.i54_crit_edge ]
  %70 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %0, align 8
  %features.i.i = getelementptr inbounds %struct.net_device, ptr %71, i32 0, i32 23
  %72 = ptrtoint ptr %features.i.i to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %features.i.i, align 16
  %and.i20.i = and i64 %73, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i20.i)
  %tobool.not.i.i = icmp eq i64 %and.i20.i, 0
  br i1 %tobool.not.i.i, label %for.cond.preheader.i.i, label %if.end.i54.harmonize_features.exit_crit_edge

if.end.i54.harmonize_features.exit_crit_edge:     ; preds = %if.end.i54
  call void @__sanitizer_cov_trace_pc() #37
  br label %harmonize_features.exit

for.cond.preheader.i.i:                           ; preds = %if.end.i54
  %74 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %end.i.i, align 4
  %nr_frags.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 2
  %76 = ptrtoint ptr %nr_frags.i.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %nr_frags.i.i, align 2
  %conv.i.i = zext i8 %77 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %cmp17.not.i.i = icmp eq i8 %77, 0
  br i1 %cmp17.not.i.i, label %for.cond.preheader.i.i.harmonize_features.exit_crit_edge, label %for.cond.preheader.i.i.for.body.i.i_crit_edge

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

for.cond.preheader.i.i.harmonize_features.exit_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %harmonize_features.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %i.018.i.i = phi i32 [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.skb_shared_info, ptr %75, i32 0, i32 12, i32 %i.018.i.i
  %78 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arrayidx.i.i, align 4
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %79, align 4
  %shr.i.i.i = lshr i32 %81, 30
  %82 = zext i32 %shr.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %82, ptr @__sancov_gen_cov_switch_values.302)
  switch i32 %shr.i.i.i, label %for.body.i.i.for.inc.i.i_crit_edge [
    i32 2, label %for.body.i.i.illegal_highdma.exit.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i.i
  ]

for.body.i.i.illegal_highdma.exit.i_crit_edge:    ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %illegal_highdma.exit.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i.i

is_highmem_idx.exit.i.i:                          ; preds = %for.body.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %83 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %83)
  %cmp2.i.not.i.i = icmp eq i32 %83, 2
  br i1 %cmp2.i.not.i.i, label %is_highmem_idx.exit.i.i.illegal_highdma.exit.i_crit_edge, label %is_highmem_idx.exit.i.i.for.inc.i.i_crit_edge

is_highmem_idx.exit.i.i.for.inc.i.i_crit_edge:    ; preds = %is_highmem_idx.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i.i

is_highmem_idx.exit.i.i.illegal_highdma.exit.i_crit_edge: ; preds = %is_highmem_idx.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %illegal_highdma.exit.i

for.inc.i.i:                                      ; preds = %is_highmem_idx.exit.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %i.018.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %conv.i.i
  br i1 %exitcond.not.i.i, label %for.inc.i.i.harmonize_features.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i

for.inc.i.i.harmonize_features.exit_crit_edge:    ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %harmonize_features.exit

illegal_highdma.exit.i:                           ; preds = %is_highmem_idx.exit.i.i.illegal_highdma.exit.i_crit_edge, %for.body.i.i.illegal_highdma.exit.i_crit_edge
  %and6.i55 = and i64 %features.addr.0.i53, -2
  br label %harmonize_features.exit

harmonize_features.exit:                          ; preds = %illegal_highdma.exit.i, %for.inc.i.i.harmonize_features.exit_crit_edge, %for.cond.preheader.i.i.harmonize_features.exit_crit_edge, %if.end.i54.harmonize_features.exit_crit_edge
  %84 = phi i64 [ %and6.i55, %illegal_highdma.exit.i ], [ %features.addr.0.i53, %if.end.i54.harmonize_features.exit_crit_edge ], [ %features.addr.0.i53, %for.cond.preheader.i.i.harmonize_features.exit_crit_edge ], [ %features.addr.0.i53, %for.inc.i.i.harmonize_features.exit_crit_edge ]
  ret i64 %84
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_hard_start_xmit(ptr noundef %first, ptr noundef %dev, ptr noundef %txq, ptr nocapture noundef writeonly %ret) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not29 = icmp eq ptr %first, null
  br i1 %tobool.not29, label %entry.cleanup11_crit_edge, label %while.body.lr.ph

entry.cleanup11_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup11

while.body.lr.ph:                                 ; preds = %entry
  %ptype_all.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 11
  %0 = ptrtoint ptr %dev to i32
  %1 = ptrtoint ptr %txq to i32
  %netdev_ops.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %xmit_lock_owner.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %txq, i32 0, i32 11
  %trans_start.i.i.i = getelementptr inbounds %struct.netdev_queue, ptr %txq, i32 0, i32 12
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %txq, i32 0, i32 13
  br label %while.body

while.cond:                                       ; preds = %if.end
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %while.cond.cleanup11_crit_edge, label %while.cond.while.body_crit_edge

while.cond.while.body_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body

while.cond.cleanup11_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup11

while.body:                                       ; preds = %while.cond.while.body_crit_edge, %while.body.lr.ph
  %skb.030 = phi ptr [ %first, %while.body.lr.ph ], [ %3, %while.cond.while.body_crit_edge ]
  %2 = ptrtoint ptr %skb.030 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skb.030, align 8
  store ptr null, ptr %skb.030, align 8
  %cmp = icmp ne ptr %3, null
  %4 = load volatile ptr, ptr @ptype_all, align 4
  %cmp.i.not.i.i = icmp eq ptr %4, @ptype_all
  br i1 %cmp.i.not.i.i, label %dev_nit_active.exit.i, label %while.body.if.then.i_crit_edge

while.body.if.then.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i

dev_nit_active.exit.i:                            ; preds = %while.body
  %5 = ptrtoint ptr %ptype_all.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %ptype_all.i.i, align 4
  %cmp.i3.i.not.i = icmp eq ptr %6, %ptype_all.i.i
  br i1 %cmp.i3.i.not.i, label %dev_nit_active.exit.i.if.end.i_crit_edge, label %dev_nit_active.exit.i.if.then.i_crit_edge

dev_nit_active.exit.i.if.then.i_crit_edge:        ; preds = %dev_nit_active.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i

dev_nit_active.exit.i.if.end.i_crit_edge:         ; preds = %dev_nit_active.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then.i:                                        ; preds = %dev_nit_active.exit.i.if.then.i_crit_edge, %while.body.if.then.i_crit_edge
  tail call void @dev_queue_xmit_nit(ptr noundef nonnull %skb.030, ptr noundef %dev) #35
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %dev_nit_active.exit.i.if.end.i_crit_edge
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb.030, i32 0, i32 6
  %7 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %len1.i, align 4
  %9 = ptrtoint ptr %skb.030 to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %10 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %10, %8
  %11 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %16, ptrtoint (ptr @net_rand_noise to i32)
  %17 = inttoptr i32 %add.i.i to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %xor.i.i = xor i32 %19, %9
  %add8.i.i = add i32 %xor.i.i, %0
  %add10.i.i = add i32 %add.i, %1
  %or.i63.i.i = tail call i32 @llvm.fshl.i32(i32 %add.i, i32 %add.i, i32 8) #35
  %or.i64.i.i = tail call i32 @llvm.fshl.i32(i32 %add8.i.i, i32 %add8.i.i, i32 16) #35
  %xor14.i.i = xor i32 %or.i63.i.i, %add10.i.i
  %add15.i.i = add i32 %or.i64.i.i, %xor14.i.i
  %or.i65.i.i = tail call i32 @llvm.fshl.i32(i32 %xor14.i.i, i32 %xor14.i.i, i32 7) #35
  %xor19.i.i = xor i32 %add15.i.i, %or.i65.i.i
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %xor19.i.i, ptr %17, align 4
  tail call fastcc void @trace_net_dev_start_xmit(ptr noundef nonnull %skb.030, ptr noundef %dev) #35
  %21 = ptrtoint ptr %netdev_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %netdev_ops.i.i, align 8
  %frombool.i.i.i = zext i1 %cmp to i8
  %23 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %28, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11, i32 1) to i32)
  %29 = inttoptr i32 %add.i.i.i to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %frombool.i.i.i, ptr %29, align 1
  %ndo_start_xmit.i.i.i = getelementptr inbounds %struct.net_device_ops, ptr %22, i32 0, i32 4
  %31 = ptrtoint ptr %ndo_start_xmit.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ndo_start_xmit.i.i.i, align 4
  %call9.i.i.i = tail call i32 %32(ptr noundef nonnull %skb.030, ptr noundef %dev) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i.i)
  %cmp.i.i = icmp eq i32 %call9.i.i.i, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %xmit_one.exit

if.then.i.i:                                      ; preds = %if.end.i
  %33 = ptrtoint ptr %xmit_lock_owner.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %xmit_lock_owner.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %cmp.not.i.i.i = icmp eq i32 %34, -1
  br i1 %cmp.not.i.i.i, label %if.then.i.i.xmit_one.exit.thread_crit_edge, label %do.body2.i.i.i

if.then.i.i.xmit_one.exit.thread_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %xmit_one.exit.thread

do.body2.i.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %35 = load volatile i32, ptr @jiffies, align 128
  %36 = ptrtoint ptr %trans_start.i.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile i32 %35, ptr %trans_start.i.i.i, align 16
  br label %xmit_one.exit.thread

xmit_one.exit.thread:                             ; preds = %do.body2.i.i.i, %if.then.i.i.xmit_one.exit.thread_crit_edge
  tail call fastcc void @trace_net_dev_xmit(ptr noundef nonnull %skb.030, i32 noundef 0, ptr noundef %dev, i32 noundef %8) #35
  br label %if.end

xmit_one.exit:                                    ; preds = %if.end.i
  tail call fastcc void @trace_net_dev_xmit(ptr noundef nonnull %skb.030, i32 noundef %call9.i.i.i, ptr noundef %dev, i32 noundef %8) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %call9.i.i.i)
  %cmp.i = icmp slt i32 %call9.i.i.i, 15
  br i1 %cmp.i, label %xmit_one.exit.if.end_crit_edge, label %if.then, !prof !1311

xmit_one.exit.if.end_crit_edge:                   ; preds = %xmit_one.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %xmit_one.exit
  call void @__sanitizer_cov_trace_pc() #37
  %37 = ptrtoint ptr %skb.030 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %3, ptr %skb.030, align 8
  br label %cleanup11

if.end:                                           ; preds = %xmit_one.exit.if.end_crit_edge, %xmit_one.exit.thread
  %38 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp ne i32 %and1.i.i, 0
  %40 = and i1 %cmp, %tobool.i.not
  br i1 %40, label %if.end.cleanup11_crit_edge, label %while.cond

if.end.cleanup11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup11

cleanup11:                                        ; preds = %if.end.cleanup11_crit_edge, %if.then, %while.cond.cleanup11_crit_edge, %entry.cleanup11_crit_edge
  %skb.2 = phi ptr [ %skb.030, %if.then ], [ null, %entry.cleanup11_crit_edge ], [ null, %while.cond.cleanup11_crit_edge ], [ %3, %if.end.cleanup11_crit_edge ]
  %rc.2 = phi i32 [ %call9.i.i.i, %if.then ], [ 0, %entry.cleanup11_crit_edge ], [ %call9.i.i.i, %while.cond.cleanup11_crit_edge ], [ 16, %if.end.cleanup11_crit_edge ]
  %41 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %rc.2, ptr %ret, align 4
  ret ptr %skb.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_csum_hwoffload_help(ptr noundef %skb, i64 noundef %features) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %csum_not_inet.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %0 = ptrtoint ptr %csum_not_inet.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load.i = load i32, ptr %csum_not_inet.i, align 2
  %1 = and i32 %bf.load.i, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %if.end, label %if.then, !prof !1311

if.then:                                          ; preds = %entry
  %and = and i64 %features, 68719476736
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool2.not = icmp eq i64 %and, 0
  br i1 %tobool2.not, label %cond.false, label %if.then.return_crit_edge

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

cond.false:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %call3 = tail call i32 @skb_crc32c_csum_help(ptr noundef %skb)
  br label %return

if.end:                                           ; preds = %entry
  %and4 = and i64 %features, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4)
  %tobool5.not = icmp eq i64 %and4, 0
  br i1 %tobool5.not, label %if.end7, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end7:                                          ; preds = %if.end
  %and8 = and i64 %features, 18
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and8)
  %tobool9.not = icmp eq i64 %and8, 0
  br i1 %tobool9.not, label %if.end7.if.end11_crit_edge, label %if.then10

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

if.then10:                                        ; preds = %if.end7
  %2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %csum_offset = getelementptr inbounds %struct.anon.193, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %csum_offset to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %csum_offset, align 2
  %5 = zext i16 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.303)
  switch i16 %4, label %if.then10.if.end11_crit_edge [
    i16 16, label %if.then10.return_crit_edge
    i16 6, label %if.then10.return_crit_edge18
  ]

if.then10.return_crit_edge18:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then10.return_crit_edge:                       ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then10.if.end11_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

if.end11:                                         ; preds = %if.then10.if.end11_crit_edge, %if.end7.if.end11_crit_edge
  %call12 = tail call i32 @skb_checksum_help(ptr noundef %skb)
  br label %return

return:                                           ; preds = %if.end11, %if.then10.return_crit_edge, %if.then10.return_crit_edge18, %if.end.return_crit_edge, %cond.false, %if.then.return_crit_edge
  %retval.0 = phi i32 [ %call12, %if.end11 ], [ %call3, %cond.false ], [ 0, %if.then.return_crit_edge ], [ 0, %if.end.return_crit_edge ], [ 0, %if.then10.return_crit_edge ], [ 0, %if.then10.return_crit_edge18 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @validate_xmit_skb_list(ptr noundef %skb, ptr noundef %dev, ptr noundef %again) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.not17 = icmp eq ptr %skb, null
  br i1 %cmp.not17, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %tail.020 = phi ptr [ %tail.1, %for.inc.for.body_crit_edge ], [ inttoptr (i32 -1 to ptr), %entry.for.body_crit_edge ]
  %head.019 = phi ptr [ %head.2, %for.inc.for.body_crit_edge ], [ null, %entry.for.body_crit_edge ]
  %skb.addr.018 = phi ptr [ %1, %for.inc.for.body_crit_edge ], [ %skb, %entry.for.body_crit_edge ]
  %0 = ptrtoint ptr %skb.addr.018 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skb.addr.018, align 8
  store ptr null, ptr %skb.addr.018, align 8
  %prev = getelementptr inbounds %struct.anon.83, ptr %skb.addr.018, i32 0, i32 1
  %2 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %skb.addr.018, ptr %prev, align 4
  %call = tail call fastcc ptr @validate_xmit_skb(ptr noundef nonnull %skb.addr.018, ptr noundef %dev, ptr noundef %again)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.end:                                           ; preds = %for.body
  %tobool2.not = icmp eq ptr %head.019, null
  br i1 %tobool2.not, label %if.end.if.end5_crit_edge, label %if.else

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end5

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %3 = ptrtoint ptr %tail.020 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %call, ptr %tail.020, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end.if.end5_crit_edge
  %head.1 = phi ptr [ %head.019, %if.else ], [ %call, %if.end.if.end5_crit_edge ]
  %prev6 = getelementptr inbounds %struct.anon.83, ptr %call, i32 0, i32 1
  %4 = ptrtoint ptr %prev6 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev6, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end5, %for.body.for.inc_crit_edge
  %head.2 = phi ptr [ %head.1, %if.end5 ], [ %head.019, %for.body.for.inc_crit_edge ]
  %tail.1 = phi ptr [ %5, %if.end5 ], [ %tail.020, %for.body.for.inc_crit_edge ]
  %cmp.not = icmp eq ptr %1, null
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %head.0.lcssa = phi ptr [ null, %entry.for.end_crit_edge ], [ %head.2, %for.inc.for.end_crit_edge ]
  ret ptr %head.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @validate_xmit_skb(ptr noundef %skb, ptr noundef %dev, ptr noundef %again) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i64 @netif_skb_features(ptr noundef %skb)
  %vlan_present.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %0 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load.i = load i32, ptr %vlan_present.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load.i)
  %tobool.not.i = icmp sgt i32 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.validate_xmit_vlan.exit_crit_edge, label %land.lhs.true.i

entry.validate_xmit_vlan.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %validate_xmit_vlan.exit

land.lhs.true.i:                                  ; preds = %entry
  %vlan_proto.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 9
  %1 = ptrtoint ptr %vlan_proto.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %vlan_proto.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32512, i16 %2)
  %cmp.i.i = icmp ne i16 %2, -32512
  %and.i.i = and i64 %call, 128
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  %or.cond.i.i = or i1 %tobool.not.i.i, %cmp.i.i
  br i1 %or.cond.i.i, label %vlan_hw_offload_capable.exit.i, label %land.lhs.true.i.validate_xmit_vlan.exit_crit_edge

land.lhs.true.i.validate_xmit_vlan.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %validate_xmit_vlan.exit

vlan_hw_offload_capable.exit.i:                   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -30552, i16 %2)
  %cmp3.i.i = icmp eq i16 %2, -30552
  %and6.i.i = and i64 %call, 35184372088832
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and6.i.i)
  %tobool7.not.i.i = icmp ne i64 %and6.i.i, 0
  %not.or.cond12.i.i = and i1 %tobool7.not.i.i, %cmp3.i.i
  br i1 %not.or.cond12.i.i, label %vlan_hw_offload_capable.exit.i.validate_xmit_vlan.exit_crit_edge, label %if.then.i

vlan_hw_offload_capable.exit.i.validate_xmit_vlan.exit_crit_edge: ; preds = %vlan_hw_offload_capable.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %validate_xmit_vlan.exit

if.then.i:                                        ; preds = %vlan_hw_offload_capable.exit.i
  %vlan_tci.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %3 = ptrtoint ptr %vlan_tci.i.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %vlan_tci.i.i, align 2
  %cloned.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %5 = ptrtoint ptr %cloned.i.i.i.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load.i.i.i.i.i.i.i.i = load i8, ptr %cloned.i.i.i.i.i.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i.i.i = icmp sgt i8 %bf.load.i.i.i.i.i.i.i.i, -1
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %if.then.i.skb_header_cloned.exit.i.i.i.i.i.i.i_crit_edge, label %if.end.i.i.i.i.i.i.i.i

if.then.i.skb_header_cloned.exit.i.i.i.i.i.i.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_header_cloned.exit.i.i.i.i.i.i.i

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  %end.i.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %6 = ptrtoint ptr %end.i.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %end.i.i.i.i.i.i.i.i.i, align 4
  %dataref1.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 10
  %call.i.i.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i.i.i.i.i.i.i, i32 noundef 4) #35
  %8 = ptrtoint ptr %dataref1.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %dataref1.i.i.i.i.i.i.i.i, align 4
  %and.i.i.i.i.i.i.i.i = and i32 %9, 65535
  %shr.i.i.i.i.i.i.i.i = ashr i32 %9, 16
  %sub.i.i.i.i.i.i.i.i = sub nsw i32 %and.i.i.i.i.i.i.i.i, %shr.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i.i.i.i.i.i.i)
  %cmp.i.not.i.i.i.i.i.i.i = icmp eq i32 %sub.i.i.i.i.i.i.i.i, 1
  br label %skb_header_cloned.exit.i.i.i.i.i.i.i

skb_header_cloned.exit.i.i.i.i.i.i.i:             ; preds = %if.end.i.i.i.i.i.i.i.i, %if.then.i.skb_header_cloned.exit.i.i.i.i.i.i.i_crit_edge
  %retval.0.i.i.i.i.i.i.i.i = phi i1 [ %cmp.i.not.i.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i.i ], [ true, %if.then.i.skb_header_cloned.exit.i.i.i.i.i.i.i_crit_edge ]
  %data.i.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %10 = ptrtoint ptr %data.i.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i.i.i.i.i.i.i.i.i, align 4
  %head.i.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %12 = ptrtoint ptr %head.i.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %head.i.i.i.i.i.i.i.i.i, align 8
  %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i = ptrtoint ptr %11 to i32
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i = ptrtoint ptr %13 to i32
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i.i.i.i.i.i.i.i)
  %tobool.not.i3.i.i.i.i.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i.i.i.i.i.i, 3
  %or.cond.i.i.i.i.i.i.i.i = and i1 %retval.0.i.i.i.i.i.i.i.i, %tobool.not.i3.i.i.i.i.i.i.i
  br i1 %or.cond.i.i.i.i.i.i.i.i, label %skb_header_cloned.exit.i.i.i.i.i.i.i.vlan_insert_tag.exit.i.i.i_crit_edge, label %skb_cow_head.exit.i.i.i.i.i.i

skb_header_cloned.exit.i.i.i.i.i.i.i.vlan_insert_tag.exit.i.i.i_crit_edge: ; preds = %skb_header_cloned.exit.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %vlan_insert_tag.exit.i.i.i

skb_cow_head.exit.i.i.i.i.i.i:                    ; preds = %skb_header_cloned.exit.i.i.i.i.i.i.i
  %14 = tail call i32 @llvm.usub.sat.i32(i32 4, i32 %sub.ptr.sub.i.i.i.i.i.i.i.i.i) #35
  %add.i.i.i.i.i.i.i.i = add nuw nsw i32 %14, 127
  %and.i4.i.i.i.i.i.i.i = and i32 %add.i.i.i.i.i.i.i.i, 128
  %call4.i.i.i.i.i.i.i.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef %and.i4.i.i.i.i.i.i.i, i32 noundef 0, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp slt i32 %call4.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i, label %skb_cow_head.exit.i.i.i.i.i.i.vlan_insert_tag.exit.i.i.i_crit_edge

skb_cow_head.exit.i.i.i.i.i.i.vlan_insert_tag.exit.i.i.i_crit_edge: ; preds = %skb_cow_head.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %vlan_insert_tag.exit.i.i.i

if.then.i.i.i.i.i:                                ; preds = %skb_cow_head.exit.i.i.i.i.i.i
  %15 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i.i.i.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i.i, align 4
  %and.i.i.i.i.i.i.i = and i32 %18, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %lor.lhs.false.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.if.then.i.i.i.i.i.i.i_crit_edge

if.then.i.i.i.i.i.if.then.i.i.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i.i.i.i.i.i.i

lor.lhs.false.i.i.i.i.i.i.i:                      ; preds = %if.then.i.i.i.i.i
  %19 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i1.i.i.i.i.i = and i32 %19, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1.i.i.i.i.i)
  %tobool10.not.i.i.i.i.i.i.i = icmp eq i32 %and.i.i.i1.i.i.i.i.i, 0
  br i1 %tobool10.not.i.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.i, label %lor.lhs.false.i.i.i.i.i.i.i.if.then.i.i.i.i.i.i.i_crit_edge

lor.lhs.false.i.i.i.i.i.i.i.if.then.i.i.i.i.i.i.i_crit_edge: ; preds = %lor.lhs.false.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %lor.lhs.false.i.i.i.i.i.i.i.if.then.i.i.i.i.i.i.i_crit_edge, %if.then.i.i.i.i.i.if.then.i.i.i.i.i.i.i_crit_edge
  tail call void @__dev_kfree_skb_irq(ptr noundef %skb, i32 noundef 1) #35
  br label %out_null

if.else.i.i.i.i.i.i.i:                            ; preds = %lor.lhs.false.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @consume_skb(ptr noundef %skb) #35
  br label %out_null

vlan_insert_tag.exit.i.i.i:                       ; preds = %skb_cow_head.exit.i.i.i.i.i.i.vlan_insert_tag.exit.i.i.i_crit_edge, %skb_header_cloned.exit.i.i.i.i.i.i.i.vlan_insert_tag.exit.i.i.i_crit_edge
  %call1.i.i.i.i.i.i = tail call ptr @skb_push(ptr noundef %skb, i32 noundef 4) #35
  %20 = ptrtoint ptr %data.i.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data.i.i.i.i.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i.i.i = getelementptr i8, ptr %21, i32 4
  %22 = call ptr @memmove(ptr %21, ptr %add.ptr.i.i.i.i.i.i, i32 12)
  %mac_header.i.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %23 = ptrtoint ptr %mac_header.i.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %mac_header.i.i.i.i.i.i, align 2
  %sub7.i.i.i.i.i.i = add i16 %24, -4
  store i16 %sub7.i.i.i.i.i.i, ptr %mac_header.i.i.i.i.i.i, align 2
  %25 = load ptr, ptr %data.i.i.i.i.i.i.i.i.i, align 4
  %h_vlan_proto.i.i.i.i.i.i = getelementptr inbounds %struct.vlan_ethhdr, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %h_vlan_proto.i.i.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %2, ptr %h_vlan_proto.i.i.i.i.i.i, align 2
  %h_vlan_TCI.i.i.i.i.i.i = getelementptr inbounds %struct.vlan_ethhdr, ptr %25, i32 0, i32 2
  %27 = ptrtoint ptr %h_vlan_TCI.i.i.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %4, ptr %h_vlan_TCI.i.i.i.i.i.i, align 2
  %tobool.not.i.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i.i, label %vlan_insert_tag.exit.i.i.i.out_null_crit_edge, label %validate_xmit_vlan.exit.thread126

vlan_insert_tag.exit.i.i.i.out_null_crit_edge:    ; preds = %vlan_insert_tag.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_null

validate_xmit_vlan.exit.thread126:                ; preds = %vlan_insert_tag.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %protocol.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %28 = ptrtoint ptr %protocol.i.i.i to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %2, ptr %protocol.i.i.i, align 8
  %29 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %29, i32 4)
  %bf.load.i.i.i = load i32, ptr %vlan_present.i, align 2
  %bf.clear.i.i.i = and i32 %bf.load.i.i.i, 2147483647
  store i32 %bf.clear.i.i.i, ptr %vlan_present.i, align 2
  br label %if.end

validate_xmit_vlan.exit:                          ; preds = %vlan_hw_offload_capable.exit.i.validate_xmit_vlan.exit_crit_edge, %land.lhs.true.i.validate_xmit_vlan.exit_crit_edge, %entry.validate_xmit_vlan.exit_crit_edge
  %tobool.not = icmp eq ptr %skb, null
  br i1 %tobool.not, label %validate_xmit_vlan.exit.out_null_crit_edge, label %validate_xmit_vlan.exit.if.end_crit_edge, !prof !1310

validate_xmit_vlan.exit.if.end_crit_edge:         ; preds = %validate_xmit_vlan.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

validate_xmit_vlan.exit.out_null_crit_edge:       ; preds = %validate_xmit_vlan.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_null

if.end:                                           ; preds = %validate_xmit_vlan.exit.if.end_crit_edge, %validate_xmit_vlan.exit.thread126
  %30 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 4
  %tobool.not.i79 = icmp eq ptr %32, null
  br i1 %tobool.not.i79, label %if.end.if.else.i_crit_edge, label %land.lhs.true.i81

if.end.if.else.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else.i

land.lhs.true.i81:                                ; preds = %if.end
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %32, i32 0, i32 4
  %33 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %34 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i80 = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i80)
  %tobool.i.not.i = icmp eq i32 %and.i.i80, 0
  br i1 %tobool.i.not.i, label %land.lhs.true.i81.if.else.i_crit_edge, label %land.lhs.true1.i

land.lhs.true.i81.if.else.i_crit_edge:            ; preds = %land.lhs.true.i81
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else.i

land.lhs.true1.i:                                 ; preds = %land.lhs.true.i81
  %sk_validate_xmit_skb.i = getelementptr inbounds %struct.sock, ptr %32, i32 0, i32 81
  %35 = ptrtoint ptr %sk_validate_xmit_skb.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sk_validate_xmit_skb.i, align 8
  %tobool2.not.i = icmp eq ptr %36, null
  br i1 %tobool2.not.i, label %land.lhs.true1.i.if.else.i_crit_edge, label %sk_validate_xmit_skb.exit

land.lhs.true1.i.if.else.i_crit_edge:             ; preds = %land.lhs.true1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true1.i.if.else.i_crit_edge, %land.lhs.true.i81.if.else.i_crit_edge, %if.end.if.else.i_crit_edge
  %37 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %37, i32 4)
  %bf.load.i83 = load i32, ptr %vlan_present.i, align 2
  %38 = and i32 %bf.load.i83, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool5.not.i = icmp eq i32 %38, 0
  br i1 %tobool5.not.i, label %if.else.i.if.end16_crit_edge, label %if.then8.i, !prof !1311

if.else.i.if.end16_crit_edge:                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end16

if.then8.i:                                       ; preds = %if.else.i
  %call9.i = tail call i32 @___ratelimit(ptr noundef nonnull @sk_validate_xmit_skb._rs, ptr noundef nonnull @__func__.sk_validate_xmit_skb) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %if.then8.i.sk_validate_xmit_skb.exit.thread_crit_edge, label %do.end.i

if.then8.i.sk_validate_xmit_skb.exit.thread_crit_edge: ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sk_validate_xmit_skb.exit.thread

do.end.i:                                         ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #37
  %call12.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.120) #41
  br label %sk_validate_xmit_skb.exit.thread

sk_validate_xmit_skb.exit.thread:                 ; preds = %do.end.i, %if.then8.i.sk_validate_xmit_skb.exit.thread_crit_edge
  tail call void @kfree_skb_reason(ptr noundef nonnull %skb, i32 noundef 0) #35
  br label %out_null

sk_validate_xmit_skb.exit:                        ; preds = %land.lhs.true1.i
  %call4.i = tail call ptr %36(ptr noundef nonnull %32, ptr noundef %dev, ptr noundef nonnull %skb) #35
  %tobool6.not = icmp eq ptr %call4.i, null
  br i1 %tobool6.not, label %sk_validate_xmit_skb.exit.out_null_crit_edge, label %sk_validate_xmit_skb.exit.if.end16_crit_edge, !prof !1310

sk_validate_xmit_skb.exit.if.end16_crit_edge:     ; preds = %sk_validate_xmit_skb.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end16

sk_validate_xmit_skb.exit.out_null_crit_edge:     ; preds = %sk_validate_xmit_skb.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_null

if.end16:                                         ; preds = %sk_validate_xmit_skb.exit.if.end16_crit_edge, %if.else.i.if.end16_crit_edge
  %skb.addr.0.i84135 = phi ptr [ %call4.i, %sk_validate_xmit_skb.exit.if.end16_crit_edge ], [ %skb, %if.else.i.if.end16_crit_edge ]
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 17
  %39 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %end.i.i.i, align 4
  %gso_size.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 4
  %41 = ptrtoint ptr %gso_size.i.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %gso_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %42)
  %tobool.i.not.i85 = icmp eq i16 %42, 0
  br i1 %tobool.i.not.i85, label %if.end16.if.else26_crit_edge, label %land.rhs.i

if.end16.if.else26_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else26

land.rhs.i:                                       ; preds = %if.end16
  %gso_type.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 8
  %43 = ptrtoint ptr %gso_type.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %gso_type.i.i, align 8
  %conv.i.i.i = sext i32 %44 to i64
  %shl.i.i.i = shl nsw i64 %conv.i.i.i, 16
  %and.i.i.i = and i64 %shl.i.i.i, %call
  call void @__sanitizer_cov_trace_cmp8(i64 %and.i.i.i, i64 %shl.i.i.i)
  %cmp.i.i.i = icmp eq i64 %and.i.i.i, %shl.i.i.i
  br i1 %cmp.i.i.i, label %land.rhs.i.i, label %land.rhs.i.if.then18_crit_edge

land.rhs.i.if.then18_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then18

land.rhs.i.i:                                     ; preds = %land.rhs.i
  %frag_list.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 6
  %45 = ptrtoint ptr %frag_list.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %frag_list.i.i.i, align 8
  %cmp.i5.not.i.i = icmp eq ptr %46, null
  %and.i.i86 = and i64 %call, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i86)
  %tobool.i18.i = icmp ne i64 %and.i.i86, 0
  %or.cond.i = or i1 %tobool.i18.i, %cmp.i5.not.i.i
  br i1 %or.cond.i, label %netif_needs_gso.exit, label %land.rhs.i.i.if.then18_crit_edge

land.rhs.i.i.if.then18_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then18

netif_needs_gso.exit:                             ; preds = %land.rhs.i.i
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 15
  %47 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %bf.load.i87 = load i16, ptr %ip_summed.i, align 8
  %48 = and i16 %bf.load.i87, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %48)
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %netif_needs_gso.exit.if.then18_crit_edge, label %netif_needs_gso.exit.if.else26_crit_edge

netif_needs_gso.exit.if.else26_crit_edge:         ; preds = %netif_needs_gso.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else26

netif_needs_gso.exit.if.then18_crit_edge:         ; preds = %netif_needs_gso.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then18

if.then18:                                        ; preds = %netif_needs_gso.exit.if.then18_crit_edge, %land.rhs.i.i.if.then18_crit_edge, %land.rhs.i.if.then18_crit_edge
  %call.i = tail call ptr @__skb_gso_segment(ptr noundef nonnull %skb.addr.0.i84135, i64 noundef %call, i1 noundef zeroext true) #35
  %cmp.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then18.out_kfree_skb_crit_edge, label %if.else

if.then18.out_kfree_skb_crit_edge:                ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_kfree_skb

if.else:                                          ; preds = %if.then18
  %tobool22.not = icmp eq ptr %call.i, null
  br i1 %tobool22.not, label %if.else.if.end49_crit_edge, label %if.then23

if.else.if.end49_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.then23:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @consume_skb(ptr noundef nonnull %skb.addr.0.i84135) #35
  br label %if.end49

if.else26:                                        ; preds = %netif_needs_gso.exit.if.else26_crit_edge, %if.end16.if.else26_crit_edge
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 7
  %50 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.i.not.i88 = icmp eq i32 %51, 0
  br i1 %tobool.i.not.i88, label %if.else26.if.end31_crit_edge, label %land.rhs.i93

if.else26.if.end31_crit_edge:                     ; preds = %if.else26
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end31

land.rhs.i93:                                     ; preds = %if.else26
  %frag_list.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 6
  %52 = ptrtoint ptr %frag_list.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %frag_list.i.i, align 8
  %cmp.i.i90 = icmp ne ptr %53, null
  %and.i = and i64 %call, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i91 = icmp eq i64 %and.i, 0
  %or.cond.i92 = and i1 %tobool.not.i91, %cmp.i.i90
  br i1 %or.cond.i92, label %land.rhs.i93.land.lhs.true_crit_edge, label %lor.rhs.i94

land.rhs.i93.land.lhs.true_crit_edge:             ; preds = %land.rhs.i93
  call void @__sanitizer_cov_trace_pc() #37
  br label %land.lhs.true

lor.rhs.i94:                                      ; preds = %land.rhs.i93
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 2
  %54 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %55)
  %tobool3.not.i = icmp ne i8 %55, 0
  %and5.i = and i64 %call, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i)
  %tobool6.not.i = icmp eq i64 %and5.i, 0
  %or.cond = select i1 %tobool3.not.i, i1 %tobool6.not.i, i1 false
  br i1 %or.cond, label %lor.rhs.i94.land.lhs.true_crit_edge, label %lor.rhs.i94.if.end31_crit_edge

lor.rhs.i94.if.end31_crit_edge:                   ; preds = %lor.rhs.i94
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end31

lor.rhs.i94.land.lhs.true_crit_edge:              ; preds = %lor.rhs.i94
  call void @__sanitizer_cov_trace_pc() #37
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.rhs.i94.land.lhs.true_crit_edge, %land.rhs.i93.land.lhs.true_crit_edge
  %call.i95 = tail call ptr @__pskb_pull_tail(ptr noundef nonnull %skb.addr.0.i84135, i32 noundef %51) #35
  %tobool.not.i96.not = icmp eq ptr %call.i95, null
  br i1 %tobool.not.i96.not, label %land.lhs.true.out_kfree_skb_crit_edge, label %land.lhs.true.if.end31_crit_edge

land.lhs.true.if.end31_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end31

land.lhs.true.out_kfree_skb_crit_edge:            ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_kfree_skb

if.end31:                                         ; preds = %land.lhs.true.if.end31_crit_edge, %lor.rhs.i94.if.end31_crit_edge, %if.else26.if.end31_crit_edge
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 15
  %56 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %56)
  %bf.load = load i16, ptr %ip_summed, align 8
  %57 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %57)
  %cmp = icmp eq i16 %57, 1536
  br i1 %cmp, label %if.then33, label %if.end31.if.end49_crit_edge

if.end31.if.end49_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.then33:                                        ; preds = %if.end31
  %58 = and i16 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %58)
  %tobool38.not = icmp eq i16 %58, 0
  %59 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 15, i32 0, i32 5
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %59, align 8
  %conv.i102 = zext i16 %61 to i32
  %data.i.i103 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 19
  %62 = ptrtoint ptr %data.i.i103 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %data.i.i103, align 4
  %head.i.i104 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 18
  %64 = ptrtoint ptr %head.i.i104 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %head.i.i104, align 8
  %sub.ptr.lhs.cast.i.i105 = ptrtoint ptr %63 to i32
  %sub.ptr.rhs.cast.i.i106 = ptrtoint ptr %65 to i32
  %sub.ptr.sub.i.neg.i107 = sub i32 %conv.i102, %sub.ptr.lhs.cast.i.i105
  %sub.i108 = add i32 %sub.ptr.sub.i.neg.i107, %sub.ptr.rhs.cast.i.i106
  %sub.ptr.sub.i.i113 = sub i32 %sub.ptr.lhs.cast.i.i105, %sub.ptr.rhs.cast.i.i106
  %conv.i.i114 = trunc i32 %sub.ptr.sub.i.i113 to i16
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 15, i32 0, i32 19
  %inner_transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 15, i32 0, i32 15
  %transport_header.i.i.sink = select i1 %tobool38.not, ptr %transport_header.i.i, ptr %inner_transport_header.i.i
  %66 = trunc i32 %sub.i108 to i16
  %conv1.i115 = add i16 %conv.i.i114, %66
  %67 = ptrtoint ptr %transport_header.i.i.sink to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 %conv1.i115, ptr %transport_header.i.i.sink, align 2
  %csum_not_inet.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 15, i32 0, i32 3
  %68 = ptrtoint ptr %csum_not_inet.i.i to i32
  call void @__asan_loadN_noabort(i32 %68, i32 4)
  %bf.load.i.i = load i32, ptr %csum_not_inet.i.i, align 2
  %69 = and i32 %bf.load.i.i, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool.i.not.i116 = icmp eq i32 %69, 0
  br i1 %tobool.i.not.i116, label %if.end.i121, label %if.then.i119, !prof !1311

if.then.i119:                                     ; preds = %if.then33
  %and.i117 = and i64 %call, 68719476736
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i117)
  %tobool2.not.i118 = icmp eq i64 %and.i117, 0
  br i1 %tobool2.not.i118, label %cond.false.i, label %if.then.i119.if.end49_crit_edge

if.then.i119.if.end49_crit_edge:                  ; preds = %if.then.i119
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

cond.false.i:                                     ; preds = %if.then.i119
  call void @__sanitizer_cov_trace_pc() #37
  %call3.i = tail call i32 @skb_crc32c_csum_help(ptr noundef nonnull %skb.addr.0.i84135) #35
  br label %skb_csum_hwoffload_help.exit

if.end.i121:                                      ; preds = %if.then33
  %and4.i = and i64 %call, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4.i)
  %tobool5.not.i120 = icmp eq i64 %and4.i, 0
  br i1 %tobool5.not.i120, label %if.end7.i, label %if.end.i121.if.end49_crit_edge

if.end.i121.if.end49_crit_edge:                   ; preds = %if.end.i121
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.end7.i:                                        ; preds = %if.end.i121
  %and8.i = and i64 %call, 18
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and8.i)
  %tobool9.not.i = icmp eq i64 %and8.i, 0
  br i1 %tobool9.not.i, label %if.end7.i.if.end11.i_crit_edge, label %if.then10.i

if.end7.i.if.end11.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11.i

if.then10.i:                                      ; preds = %if.end7.i
  %70 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i84135, i32 0, i32 15, i32 0, i32 5
  %csum_offset.i = getelementptr inbounds %struct.anon.193, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %csum_offset.i to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %csum_offset.i, align 2
  %73 = zext i16 %72 to i64
  call void @__sanitizer_cov_trace_switch(i64 %73, ptr @__sancov_gen_cov_switch_values.304)
  switch i16 %72, label %if.then10.i.if.end11.i_crit_edge [
    i16 16, label %if.then10.i.if.end49_crit_edge
    i16 6, label %if.then10.i.if.end49_crit_edge142
  ]

if.then10.i.if.end49_crit_edge142:                ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.then10.i.if.end49_crit_edge:                   ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.then10.i.if.end11.i_crit_edge:                 ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i.if.end11.i_crit_edge, %if.end7.i.if.end11.i_crit_edge
  %call12.i122 = tail call i32 @skb_checksum_help(ptr noundef nonnull %skb.addr.0.i84135) #35
  br label %skb_csum_hwoffload_help.exit

skb_csum_hwoffload_help.exit:                     ; preds = %if.end11.i, %cond.false.i
  %retval.0.i = phi i32 [ %call12.i122, %if.end11.i ], [ %call3.i, %cond.false.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool45.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool45.not, label %skb_csum_hwoffload_help.exit.if.end49_crit_edge, label %skb_csum_hwoffload_help.exit.out_kfree_skb_crit_edge

skb_csum_hwoffload_help.exit.out_kfree_skb_crit_edge: ; preds = %skb_csum_hwoffload_help.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_kfree_skb

skb_csum_hwoffload_help.exit.if.end49_crit_edge:  ; preds = %skb_csum_hwoffload_help.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.end49:                                         ; preds = %skb_csum_hwoffload_help.exit.if.end49_crit_edge, %if.then10.i.if.end49_crit_edge, %if.then10.i.if.end49_crit_edge142, %if.end.i121.if.end49_crit_edge, %if.then.i119.if.end49_crit_edge, %if.end31.if.end49_crit_edge, %if.then23, %if.else.if.end49_crit_edge
  %skb.addr.2 = phi ptr [ %skb.addr.0.i84135, %skb_csum_hwoffload_help.exit.if.end49_crit_edge ], [ %skb.addr.0.i84135, %if.end31.if.end49_crit_edge ], [ %skb.addr.0.i84135, %if.else.if.end49_crit_edge ], [ %call.i, %if.then23 ], [ %skb.addr.0.i84135, %if.then.i119.if.end49_crit_edge ], [ %skb.addr.0.i84135, %if.end.i121.if.end49_crit_edge ], [ %skb.addr.0.i84135, %if.then10.i.if.end49_crit_edge ], [ %skb.addr.0.i84135, %if.then10.i.if.end49_crit_edge142 ]
  %call50 = tail call ptr @validate_xmit_xfrm(ptr noundef nonnull %skb.addr.2, i64 noundef %call, ptr noundef %again) #35
  br label %cleanup51

out_kfree_skb:                                    ; preds = %skb_csum_hwoffload_help.exit.out_kfree_skb_crit_edge, %land.lhs.true.out_kfree_skb_crit_edge, %if.then18.out_kfree_skb_crit_edge
  tail call void @kfree_skb_reason(ptr noundef nonnull %skb.addr.0.i84135, i32 noundef 0) #35
  br label %out_null

out_null:                                         ; preds = %out_kfree_skb, %sk_validate_xmit_skb.exit.out_null_crit_edge, %sk_validate_xmit_skb.exit.thread, %validate_xmit_vlan.exit.out_null_crit_edge, %vlan_insert_tag.exit.i.i.i.out_null_crit_edge, %if.else.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 38
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %tx_dropped, i32 noundef 4) #35
  tail call void @llvm.prefetch.p0(ptr %tx_dropped, i32 1, i32 3, i32 1) #35
  %74 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tx_dropped, ptr %tx_dropped, i32 1, ptr elementtype(i32) %tx_dropped) #35, !srcloc !1326
  br label %cleanup51

cleanup51:                                        ; preds = %out_null, %if.end49
  %retval.0 = phi ptr [ null, %out_null ], [ %call50, %if.end49 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_loopback_xmit(ptr nocapture readnone %net, ptr nocapture readnone %sk, ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = trunc i32 %sub.ptr.sub.i to i16
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %4 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %conv.i, ptr %mac_header.i, align 2
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %5 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %6 to i32
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 %conv.i.i
  %sub.ptr.lhs.cast.i44 = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.sub.i46 = sub i32 %sub.ptr.lhs.cast.i44, %sub.ptr.lhs.cast.i
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %7 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %len1.i, align 4
  %sub.i = sub i32 %8, %sub.ptr.sub.i46
  store i32 %sub.i, ptr %len1.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %9 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %10)
  %cmp.i = icmp ult i32 %sub.i, %10
  br i1 %cmp.i, label %do.body4.i, label %__skb_pull.exit, !prof !1310

do.body4.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #35, !srcloc !1344
  unreachable

__skb_pull.exit:                                  ; preds = %entry
  %add.ptr.i = getelementptr i8, ptr %1, i32 %sub.ptr.sub.i46
  %11 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %add.ptr.i, ptr %data.i, align 4
  %pkt_type = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %12 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %12)
  %bf.load = load i16, ptr %pkt_type, align 8
  %bf.clear = and i16 %bf.load, 8191
  %bf.set = or i16 %bf.clear, -24576
  %13 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %cmp = icmp eq i16 %13, 0
  %bf.clear7 = and i16 %bf.set, -17921
  %bf.set8 = or i16 %bf.clear7, 512
  %storemerge = select i1 %cmp, i16 %bf.set8, i16 %bf.set
  %14 = ptrtoint ptr %pkt_type to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %storemerge, ptr %pkt_type, align 8
  %15 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 8
  %and.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %__skb_pull.exit.skb_dst.exit_crit_edge, label %land.lhs.true.i

__skb_pull.exit.skb_dst.exit_crit_edge:           ; preds = %__skb_pull.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exit

land.lhs.true.i:                                  ; preds = %__skb_pull.exit
  %call.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %land.rhs.i, label %land.lhs.true.i.skb_dst.exitthread-pre-split_crit_edge

land.lhs.true.i.skb_dst.exitthread-pre-split_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exitthread-pre-split

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %call2.i = tail call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.skb_dst.exitthread-pre-split_crit_edge, !prof !1310

land.rhs.i.skb_dst.exitthread-pre-split_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exitthread-pre-split

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 1013, i32 noundef 9, ptr noundef null) #35
  br label %skb_dst.exitthread-pre-split

skb_dst.exitthread-pre-split:                     ; preds = %do.end.i, %land.rhs.i.skb_dst.exitthread-pre-split_crit_edge, %land.lhs.true.i.skb_dst.exitthread-pre-split_crit_edge
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pr = load i32, ptr %15, align 8
  br label %skb_dst.exit

skb_dst.exit:                                     ; preds = %skb_dst.exitthread-pre-split, %__skb_pull.exit.skb_dst.exit_crit_edge
  %19 = phi i32 [ %.pr, %skb_dst.exitthread-pre-split ], [ %17, %__skb_pull.exit.skb_dst.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %19)
  %tobool.not = icmp ult i32 %19, 2
  br i1 %tobool.not, label %do.end, label %skb_dst.exit.if.end25_crit_edge, !prof !1310

skb_dst.exit.if.end25_crit_edge:                  ; preds = %skb_dst.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end25

do.end:                                           ; preds = %skb_dst.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3812, i32 noundef 9, ptr noundef null) #35
  br label %if.end25

if.end25:                                         ; preds = %do.end, %skb_dst.exit.if.end25_crit_edge
  tail call fastcc void @skb_dst_force(ptr noundef %skb)
  tail call fastcc void @trace_netif_rx_ni_entry(ptr noundef %skb) #35
  %20 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %23, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1345
  %call.i48 = tail call fastcc i32 @netif_rx_internal(ptr noundef %skb) #35
  %24 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %29, ptrtoint (ptr @irq_stat to i32)
  %30 = inttoptr i32 %add.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i49 = icmp eq i32 %32, 0
  br i1 %tobool.not.i49, label %if.end25.netif_rx_ni.exit_crit_edge, label %if.then.i

if.end25.netif_rx_ni.exit_crit_edge:              ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_rx_ni.exit

if.then.i:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @do_softirq() #35
  br label %netif_rx_ni.exit

netif_rx_ni.exit:                                 ; preds = %if.then.i, %if.end25.netif_rx_ni.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1346
  %33 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i18.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i18.i to ptr
  %preempt_count.i.i19.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i19.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i19.i, align 4
  %sub.i.i = add i32 %36, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i19.i, align 4
  tail call fastcc void @trace_netif_rx_ni_exit(i32 noundef %call.i48) #35
  ret i32 0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @skb_dst_force(ptr nocapture noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %0, align 8
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end35_crit_edge, label %land.lhs.true.i.i

entry.if.end35_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end35

land.lhs.true.i.i:                                ; preds = %entry
  %call.i.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge

land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst_is_noref.exit

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  %call2.i.i = tail call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.skb_dst_is_noref.exit_crit_edge, !prof !1310

land.rhs.i.i.skb_dst_is_noref.exit_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst_is_noref.exit

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 1013, i32 noundef 9, ptr noundef null) #35
  br label %skb_dst_is_noref.exit

skb_dst_is_noref.exit:                            ; preds = %do.end.i.i, %land.rhs.i.i.skb_dst_is_noref.exit_crit_edge, %land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %0, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %tobool1.i = icmp ugt i32 %4, 1
  br i1 %tobool1.i, label %if.then, label %skb_dst_is_noref.exit.if.end35_crit_edge

skb_dst_is_noref.exit.if.end35_crit_edge:         ; preds = %skb_dst_is_noref.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end35

if.then:                                          ; preds = %skb_dst_is_noref.exit
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %0, align 8
  %and.i2 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2)
  %tobool.not.i3 = icmp eq i32 %and.i2, 0
  br i1 %tobool.not.i3, label %if.then.skb_dst.exit_crit_edge, label %land.lhs.true.i

if.then.skb_dst.exit_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %land.rhs.i, label %land.lhs.true.i.skb_dst.exit_crit_edge

land.lhs.true.i.skb_dst.exit_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %call2.i = tail call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.skb_dst.exit_crit_edge, !prof !1310

land.rhs.i.skb_dst.exit_crit_edge:                ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_dst.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.122, i32 noundef 1013, i32 noundef 9, ptr noundef null) #35
  br label %skb_dst.exit

skb_dst.exit:                                     ; preds = %do.end.i, %land.rhs.i.skb_dst.exit_crit_edge, %land.lhs.true.i.skb_dst.exit_crit_edge, %if.then.skb_dst.exit_crit_edge
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %0, align 8
  %and25.i = and i32 %8, -2
  %9 = inttoptr i32 %and25.i to ptr
  %call2 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %do.end, label %skb_dst.exit.if.end_crit_edge, !prof !1310

skb_dst.exit.if.end_crit_edge:                    ; preds = %skb_dst.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

do.end:                                           ; preds = %skb_dst.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.123, i32 noundef 316, i32 noundef 9, ptr noundef null) #35
  br label %if.end

if.end:                                           ; preds = %do.end, %skb_dst.exit.if.end_crit_edge
  %__refcnt.i = getelementptr inbounds %struct.dst_entry, ptr %9, i32 0, i32 18
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %__refcnt.i, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1347
  tail call void @llvm.prefetch.p0(ptr %__refcnt.i, i32 1, i32 3, i32 1) #35
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %__refcnt.i, ptr %__refcnt.i, i32 0, i32 1, ptr elementtype(i32) %__refcnt.i) #35, !srcloc !1348
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.end.dst_hold_safe.exit_crit_edge, label %do.end11.i.i.i.i.i

if.end.dst_hold_safe.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %dst_hold_safe.exit

do.end11.i.i.i.i.i:                               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1349
  br label %dst_hold_safe.exit

dst_hold_safe.exit:                               ; preds = %do.end11.i.i.i.i.i, %if.end.dst_hold_safe.exit_crit_edge
  %spec.select = phi ptr [ null, %if.end.dst_hold_safe.exit_crit_edge ], [ %9, %do.end11.i.i.i.i.i ]
  %11 = ptrtoint ptr %spec.select to i32
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %0, align 8
  %tobool27.not = icmp eq ptr %spec.select, null
  %slow_gro = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %13 = ptrtoint ptr %slow_gro to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %bf.load = load i32, ptr %slow_gro, align 2
  %bf.load.mask = and i32 %bf.load, 4096
  %bf.shl = select i1 %tobool27.not, i32 %bf.load.mask, i32 4096
  %bf.clear34 = and i32 %bf.load, -4097
  %bf.set = or i32 %bf.shl, %bf.clear34
  store i32 %bf.set, ptr %slow_gro, align 2
  br label %if.end35

if.end35:                                         ; preds = %dst_hold_safe.exit, %skb_dst_is_noref.exit.if.end35_crit_edge, %entry.if.end35_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_rx_ni(ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_netif_rx_ni_entry(ptr noundef %skb)
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1345
  %call = tail call fastcc i32 @netif_rx_internal(ptr noundef %skb)
  %4 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, ptrtoint (ptr @irq_stat to i32)
  %10 = inttoptr i32 %add to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not = icmp eq i32 %12, 0
  br i1 %tobool.not, label %entry.do.body13_crit_edge, label %if.then

entry.do.body13_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body13

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @do_softirq() #35
  br label %do.body13

do.body13:                                        ; preds = %if.then, %entry.do.body13_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1346
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i18 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i18 to ptr
  %preempt_count.i.i19 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i19 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i19, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i19, align 4
  tail call fastcc void @trace_netif_rx_ni_exit(i32 noundef %call)
  ret i32 %call
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @dev_pick_tx_zero(ptr nocapture readnone %dev, ptr nocapture readnone %skb, ptr nocapture readnone %sb_dev) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  ret i16 0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @dev_pick_tx_cpu_id(ptr nocapture noundef readonly %dev, ptr nocapture readnone %skb, ptr nocapture readnone %sb_dev) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %conv1 = and i32 %3, 65535
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 105
  %4 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %real_num_tx_queues, align 8
  %rem = urem i32 %conv1, %5
  %conv2 = trunc i32 %rem to i16
  ret i16 %conv2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @netdev_pick_tx(ptr noundef %dev, ptr noundef %skb, ptr noundef %sb_dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %entry.sk_tx_queue_get.exit.thread_crit_edge, label %land.lhs.true.i

entry.sk_tx_queue_get.exit.thread_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %sk_tx_queue_get.exit.thread

land.lhs.true.i:                                  ; preds = %entry
  %skc_tx_queue_mapping.i = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 16
  %3 = ptrtoint ptr %skc_tx_queue_mapping.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %skc_tx_queue_mapping.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %4)
  %cmp.not.i = icmp eq i16 %4, -1
  %conv.i = zext i16 %4 to i32
  br i1 %cmp.not.i, label %land.lhs.true.i.sk_tx_queue_get.exit.thread_crit_edge, label %lor.lhs.false

land.lhs.true.i.sk_tx_queue_get.exit.thread_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sk_tx_queue_get.exit.thread

sk_tx_queue_get.exit.thread:                      ; preds = %land.lhs.true.i.sk_tx_queue_get.exit.thread_crit_edge, %entry.sk_tx_queue_get.exit.thread_crit_edge
  %tobool.not51 = icmp eq ptr %sb_dev, null
  %spec.select52 = select i1 %tobool.not51, ptr %dev, ptr %sb_dev
  br label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true.i
  %tobool.not = icmp eq ptr %sb_dev, null
  %spec.select = select i1 %tobool.not, ptr %dev, ptr %sb_dev
  %ooo_okay = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %5 = ptrtoint ptr %ooo_okay to i32
  call void @__asan_load2_noabort(i32 %5)
  %bf.load = load i16, ptr %ooo_okay, align 8
  %6 = and i16 %bf.load, 256
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %tobool1.not = icmp eq i16 %6, 0
  br i1 %tobool1.not, label %lor.lhs.false2, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 105
  %7 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %real_num_tx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %conv.i)
  %cmp3.not = icmp ugt i32 %8, %conv.i
  br i1 %cmp3.not, label %lor.lhs.false2.if.end22_crit_edge, label %lor.lhs.false2.if.then_crit_edge

lor.lhs.false2.if.then_crit_edge:                 ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

lor.lhs.false2.if.end22_crit_edge:                ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22

if.then:                                          ; preds = %lor.lhs.false2.if.then_crit_edge, %lor.lhs.false.if.then_crit_edge, %sk_tx_queue_get.exit.thread
  %spec.select55 = phi ptr [ %spec.select52, %sk_tx_queue_get.exit.thread ], [ %spec.select, %lor.lhs.false2.if.then_crit_edge ], [ %spec.select, %lor.lhs.false.if.then_crit_edge ]
  %retval.0.i54 = phi i32 [ -1, %sk_tx_queue_get.exit.thread ], [ %conv.i, %lor.lhs.false2.if.then_crit_edge ], [ %conv.i, %lor.lhs.false.if.then_crit_edge ]
  %call5 = tail call fastcc i32 @get_xps_queue(ptr noundef %dev, ptr noundef %spec.select55, ptr noundef %skb)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %if.then8, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then8:                                         ; preds = %if.then
  %real_num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 105
  %9 = ptrtoint ptr %real_num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %real_num_tx_queues.i, align 8
  %conv.i42 = trunc i32 %10 to i16
  %num_tc.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 140
  %11 = ptrtoint ptr %num_tc.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %num_tc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool.not.i43 = icmp eq i16 %12, 0
  br i1 %tobool.not.i43, label %if.then8.if.end22.i_crit_edge, label %if.then.i

if.then8.if.end22.i_crit_edge:                    ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22.i

if.then.i:                                        ; preds = %if.then8
  %priority.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 6
  %13 = ptrtoint ptr %priority.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %priority.i, align 4
  %and.i.i = and i32 %14, 15
  %arrayidx.i.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 142, i32 %and.i.i
  %15 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx.i.i, align 1
  %conv.i.i = zext i8 %16 to i32
  %arrayidx.i = getelementptr %struct.net_device, ptr %spec.select55, i32 0, i32 141, i32 %conv.i.i
  %offset.i = getelementptr %struct.net_device, ptr %spec.select55, i32 0, i32 141, i32 %conv.i.i, i32 1
  %17 = ptrtoint ptr %offset.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %offset.i, align 2
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %arrayidx.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %20)
  %tobool5.not.i = icmp eq i16 %20, 0
  br i1 %tobool5.not.i, label %do.body.i, label %if.then.i.if.end22.i_crit_edge, !prof !1310

if.then.i.if.end22.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22.i

do.body.i:                                        ; preds = %if.then.i
  %call10.i = tail call i32 @net_ratelimit() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %do.body.i.do.end18.i_crit_edge, label %do.end.i

do.body.i.do.end18.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end18.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %conv14.i = zext i16 %18 to i32
  %call16.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.125, ptr noundef %spec.select55, i32 noundef %conv14.i, i32 noundef %conv.i.i) #41
  br label %do.end18.i

do.end18.i:                                       ; preds = %do.end.i, %do.body.i.do.end18.i_crit_edge
  %21 = ptrtoint ptr %real_num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %real_num_tx_queues.i, align 8
  %conv20.i = trunc i32 %22 to i16
  br label %if.end22.i

if.end22.i:                                       ; preds = %do.end18.i, %if.then.i.if.end22.i_crit_edge, %if.then8.if.end22.i_crit_edge
  %qoffset.1.i = phi i16 [ 0, %if.then8.if.end22.i_crit_edge ], [ 0, %do.end18.i ], [ %18, %if.then.i.if.end22.i_crit_edge ]
  %qcount.1.i = phi i16 [ %conv.i42, %if.then8.if.end22.i_crit_edge ], [ %conv20.i, %do.end18.i ], [ %20, %if.then.i.if.end22.i_crit_edge ]
  %queue_mapping.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %23 = ptrtoint ptr %queue_mapping.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %queue_mapping.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %cmp.i.not.i = icmp eq i16 %24, 0
  br i1 %cmp.i.not.i, label %if.end45.i, label %if.then24.i

if.then24.i:                                      ; preds = %if.end22.i
  %sub.i.i = add i16 %24, -1
  %conv26.i = zext i16 %sub.i.i to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %sub.i.i, i16 %qoffset.1.i)
  %cmp.not.i44 = icmp ult i16 %sub.i.i, %qoffset.1.i
  %narrow.i = select i1 %cmp.not.i44, i16 0, i16 %qoffset.1.i
  %sub.i = zext i16 %narrow.i to i32
  %hash.0.i = sub nsw i32 %conv26.i, %sub.i
  %conv32.i = zext i16 %qcount.1.i to i32
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.while.cond.i_crit_edge, %if.then24.i
  %hash.1.i = phi i32 [ %hash.0.i, %if.then24.i ], [ %sub42.i, %while.cond.i.while.cond.i_crit_edge ]
  %cmp33.not.i = icmp ult i32 %hash.1.i, %conv32.i
  %sub42.i = sub i32 %hash.1.i, %conv32.i
  br i1 %cmp33.not.i, label %while.cond.i.skb_tx_hash.exit_crit_edge, label %while.cond.i.while.cond.i_crit_edge, !prof !1311

while.cond.i.while.cond.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond.i

while.cond.i.skb_tx_hash.exit_crit_edge:          ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_tx_hash.exit

if.end45.i:                                       ; preds = %if.end22.i
  %l4_hash.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %25 = ptrtoint ptr %l4_hash.i.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %bf.load.i.i = load i16, ptr %l4_hash.i.i, align 8
  %26 = and i16 %bf.load.i.i, 192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %26)
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %if.then.i.i, label %if.end45.i.skb_get_hash.exit.i_crit_edge

if.end45.i.skb_get_hash.exit.i_crit_edge:         ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_get_hash.exit.i

if.then.i.i:                                      ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__skb_get_hash(ptr noundef %skb) #35
  br label %skb_get_hash.exit.i

skb_get_hash.exit.i:                              ; preds = %if.then.i.i, %if.end45.i.skb_get_hash.exit.i_crit_edge
  %hash.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %28 = ptrtoint ptr %hash.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %hash.i.i, align 4
  %conv.i78.i = zext i32 %29 to i64
  %conv1.i.i = zext i16 %qcount.1.i to i64
  %mul.i.i = mul nuw nsw i64 %conv.i78.i, %conv1.i.i
  %shr.i.i = lshr i64 %mul.i.i, 32
  %conv2.i.i = trunc i64 %shr.i.i to i32
  br label %skb_tx_hash.exit

skb_tx_hash.exit:                                 ; preds = %skb_get_hash.exit.i, %while.cond.i.skb_tx_hash.exit_crit_edge
  %.pn.in.i = phi i32 [ %conv2.i.i, %skb_get_hash.exit.i ], [ %hash.1.i, %while.cond.i.skb_tx_hash.exit_crit_edge ]
  %.pn.i = trunc i32 %.pn.in.i to i16
  %retval.0.i45 = add i16 %qoffset.1.i, %.pn.i
  %conv10 = zext i16 %retval.0.i45 to i32
  br label %if.end

if.end:                                           ; preds = %skb_tx_hash.exit, %if.then.if.end_crit_edge
  %new_index.0 = phi i32 [ %conv10, %skb_tx_hash.exit ], [ %call5, %if.then.if.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i54, i32 %new_index.0)
  %cmp11.not = icmp eq i32 %retval.0.i54, %new_index.0
  %or.cond = or i1 %tobool.not.i, %cmp11.not
  br i1 %or.cond, label %if.end.if.end22_crit_edge, label %land.lhs.true14

if.end.if.end22_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22

land.lhs.true14:                                  ; preds = %if.end
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 4
  %30 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i46 = zext i8 %31 to i32
  %shl.i = shl nuw i32 1, %conv.i46
  %and.i = and i32 %shl.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %land.lhs.true14.if.end22_crit_edge, label %land.lhs.true17

land.lhs.true14.if.end22_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22

land.lhs.true17:                                  ; preds = %land.lhs.true14
  %sk_dst_cache = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 19
  %32 = ptrtoint ptr %sk_dst_cache to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %sk_dst_cache, align 4
  %tobool19.not = icmp eq ptr %33, null
  br i1 %tobool19.not, label %land.lhs.true17.if.end22_crit_edge, label %if.then20

land.lhs.true17.if.end22_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22

if.then20:                                        ; preds = %land.lhs.true17
  %conv1.i = and i32 %new_index.0, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %conv1.i)
  %cmp.i = icmp eq i32 %conv1.i, 65535
  br i1 %cmp.i, label %land.rhs.i, label %if.end40.critedge.i

land.rhs.i:                                       ; preds = %if.then20
  %.b45.i = load i1, ptr @sk_tx_queue_set.__already_done, align 1
  br i1 %.b45.i, label %land.rhs.i.if.end22_crit_edge, label %if.then.i47, !prof !1311

land.rhs.i.if.end22_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22

if.then.i47:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @sk_tx_queue_set.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.121, i32 noundef 1930, i32 noundef 9, ptr noundef null) #35
  br label %if.end22

if.end40.critedge.i:                              ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #37
  %conv.i48 = trunc i32 %new_index.0 to i16
  %skc_tx_queue_mapping.i49 = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 16
  %34 = ptrtoint ptr %skc_tx_queue_mapping.i49 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %conv.i48, ptr %skc_tx_queue_mapping.i49, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.end40.critedge.i, %if.then.i47, %land.rhs.i.if.end22_crit_edge, %land.lhs.true17.if.end22_crit_edge, %land.lhs.true14.if.end22_crit_edge, %if.end.if.end22_crit_edge, %lor.lhs.false2.if.end22_crit_edge
  %queue_index.0 = phi i32 [ %conv.i, %lor.lhs.false2.if.end22_crit_edge ], [ %new_index.0, %land.lhs.true17.if.end22_crit_edge ], [ %new_index.0, %land.lhs.true14.if.end22_crit_edge ], [ %new_index.0, %if.end.if.end22_crit_edge ], [ %new_index.0, %land.rhs.i.if.end22_crit_edge ], [ %new_index.0, %if.then.i47 ], [ %new_index.0, %if.end40.critedge.i ]
  %conv23 = trunc i32 %queue_index.0 to i16
  ret i16 %conv23
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @get_xps_queue(ptr nocapture noundef readonly %dev, ptr noundef %sb_dev, ptr noundef %skb) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @xps_needed, ptr blockaddress(@get_xps_queue, %if.end)) #35
          to label %cleanup [label %if.end], !srcloc !1328

if.end:                                           ; preds = %entry
  %3 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %6, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @xps_rxqs_needed, ptr blockaddress(@get_xps_queue, %if.end3)) #35
          to label %get_cpus_map [label %if.end3], !srcloc !1328

if.end3:                                          ; preds = %rcu_read_lock.exit
  %arrayidx = getelementptr %struct.net_device, ptr %sb_dev, i32 0, i32 110, i32 1
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %arrayidx, align 4
  %call5 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end3.do.end13_crit_edge

if.end3.do.end13_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end13

land.lhs.true:                                    ; preds = %if.end3
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true.do.end13_crit_edge, label %land.lhs.true8

land.lhs.true.do.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end13

land.lhs.true8:                                   ; preds = %land.lhs.true
  %.b64 = load i1, ptr @get_xps_queue.__warned, align 1
  br i1 %.b64, label %land.lhs.true8.do.end13_crit_edge, label %if.then10

land.lhs.true8.do.end13_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end13

if.then10:                                        ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @get_xps_queue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 3908, ptr noundef nonnull @.str.11) #35
  br label %do.end13

do.end13:                                         ; preds = %if.then10, %land.lhs.true8.do.end13_crit_edge, %land.lhs.true.do.end13_crit_edge, %if.end3.do.end13_crit_edge
  %tobool15.not = icmp eq ptr %8, null
  %tobool.not.i68 = icmp eq ptr %2, null
  %or.cond = select i1 %tobool15.not, i1 true, i1 %tobool.not.i68
  br i1 %or.cond, label %do.end13.if.then23_crit_edge, label %if.then.i69

do.end13.if.then23_crit_edge:                     ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then23

if.then.i69:                                      ; preds = %do.end13
  %skc_rx_queue_mapping.i = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 17
  %9 = ptrtoint ptr %skc_rx_queue_mapping.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load volatile i16, ptr %skc_rx_queue_mapping.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %10)
  %cmp.not.i = icmp eq i16 %10, -1
  br i1 %cmp.not.i, label %if.then.i69.if.then23_crit_edge, label %if.then18

if.then.i69.if.then23_crit_edge:                  ; preds = %if.then.i69
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then23

if.then18:                                        ; preds = %if.then.i69
  call void @__sanitizer_cov_trace_pc() #37
  %conv.i = zext i16 %10 to i32
  %call19 = tail call fastcc i32 @__get_xps_queue_idx(ptr noundef %dev, ptr noundef %skb, ptr noundef nonnull %8, i32 noundef %conv.i)
  br label %get_cpus_map

get_cpus_map:                                     ; preds = %if.then18, %rcu_read_lock.exit
  %queue_index.1 = phi i32 [ %call19, %if.then18 ], [ -1, %rcu_read_lock.exit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %queue_index.1)
  %cmp22 = icmp slt i32 %queue_index.1, 0
  br i1 %cmp22, label %get_cpus_map.if.then23_crit_edge, label %get_cpus_map.if.end48_crit_edge

get_cpus_map.if.end48_crit_edge:                  ; preds = %get_cpus_map
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end48

get_cpus_map.if.then23_crit_edge:                 ; preds = %get_cpus_map
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then23

if.then23:                                        ; preds = %get_cpus_map.if.then23_crit_edge, %if.then.i69.if.then23_crit_edge, %do.end13.if.then23_crit_edge
  %xps_maps28 = getelementptr inbounds %struct.net_device, ptr %sb_dev, i32 0, i32 110
  %11 = ptrtoint ptr %xps_maps28 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %xps_maps28, align 4
  %call31 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %land.lhs.true33, label %if.then23.do.end41_crit_edge

if.then23.do.end41_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end41

land.lhs.true33:                                  ; preds = %if.then23
  %call34 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %land.lhs.true33.do.end41_crit_edge, label %land.lhs.true36

land.lhs.true33.do.end41_crit_edge:               ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end41

land.lhs.true36:                                  ; preds = %land.lhs.true33
  %.b6263 = load i1, ptr @get_xps_queue.__warned.124, align 1
  br i1 %.b6263, label %land.lhs.true36.do.end41_crit_edge, label %if.then38

land.lhs.true36.do.end41_crit_edge:               ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end41

if.then38:                                        ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @get_xps_queue.__warned.124, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 3919, ptr noundef nonnull @.str.11) #35
  br label %do.end41

do.end41:                                         ; preds = %if.then38, %land.lhs.true36.do.end41_crit_edge, %land.lhs.true33.do.end41_crit_edge, %if.then23.do.end41_crit_edge
  %tobool43.not = icmp eq ptr %12, null
  br i1 %tobool43.not, label %do.end41.if.end48_crit_edge, label %if.then44

do.end41.if.end48_crit_edge:                      ; preds = %do.end41
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end48

if.then44:                                        ; preds = %do.end41
  call void @__sanitizer_cov_trace_pc() #37
  %13 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 11
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %sub = add i32 %15, -1
  %call46 = tail call fastcc i32 @__get_xps_queue_idx(ptr noundef %dev, ptr noundef %skb, ptr noundef nonnull %12, i32 noundef %sub)
  br label %if.end48

if.end48:                                         ; preds = %if.then44, %do.end41.if.end48_crit_edge, %get_cpus_map.if.end48_crit_edge
  %queue_index.2 = phi i32 [ %call46, %if.then44 ], [ -1, %do.end41.if.end48_crit_edge ], [ %queue_index.1, %get_cpus_map.if.end48_crit_edge ]
  %call.i70 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i70, label %if.end48.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i73

if.end48.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i73:                                ; preds = %if.end48
  %call1.i71 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i71)
  %tobool.not.i72 = icmp eq i32 %call1.i71, 0
  br i1 %tobool.not.i72, label %land.lhs.true.i73.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i75

land.lhs.true.i73.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i73
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i75:                               ; preds = %land.lhs.true.i73
  %.b4.i74 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i74, label %land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge, label %if.then.i76

land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i75
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i76:                                      ; preds = %land.lhs.true2.i75
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i76, %land.lhs.true2.i75.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i73.rcu_read_unlock.exit_crit_edge, %if.end48.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %16 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i77 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i77 to ptr
  %preempt_count.i.i.i.i78 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i.i.i78 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i.i.i78, align 4
  %sub.i.i.i = add i32 %19, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i78, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %entry
  %retval.0 = phi i32 [ %queue_index.2, %rcu_read_unlock.exit ], [ -1, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @netdev_core_pick_tx(ptr noundef %dev, ptr noundef %skb, ptr noundef %sb_dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 11
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %0, align 4
  %3 = add i32 %2, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %3)
  %cmp = icmp ult i32 %3, -4
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %4 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %add = add i32 %7, 1
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %add, ptr %0, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 105
  %9 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %real_num_tx_queues, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp1.not = icmp eq i32 %10, 1
  br i1 %cmp1.not, label %if.end.if.end12_crit_edge, label %if.then2

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12

if.then2:                                         ; preds = %if.end
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %11 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %netdev_ops, align 8
  %ndo_select_queue = getelementptr inbounds %struct.net_device_ops, ptr %12, i32 0, i32 6
  %13 = ptrtoint ptr %ndo_select_queue to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ndo_select_queue, align 4
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #37
  %call5 = tail call zeroext i16 %14(ptr noundef %dev, ptr noundef %skb, ptr noundef %sb_dev) #35
  br label %if.end8

if.else:                                          ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #37
  %call6 = tail call zeroext i16 @netdev_pick_tx(ptr noundef %dev, ptr noundef %skb, ptr noundef %sb_dev)
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then3
  %queue_index.0.in = phi i16 [ %call5, %if.then3 ], [ %call6, %if.else ]
  %conv.i = zext i16 %queue_index.0.in to i32
  %15 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %real_num_tx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %conv.i)
  %cmp.not.i = icmp ugt i32 %16, %conv.i
  br i1 %cmp.not.i, label %if.end8.netdev_cap_txqueue.exit_crit_edge, label %do.body.i, !prof !1311

if.end8.netdev_cap_txqueue.exit_crit_edge:        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_cap_txqueue.exit

do.body.i:                                        ; preds = %if.end8
  %call.i = tail call i32 @net_ratelimit() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool3.not.i, label %do.body.i.netdev_cap_txqueue.exit_crit_edge, label %do.end.i

do.body.i.netdev_cap_txqueue.exit_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_cap_txqueue.exit

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %17 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %real_num_tx_queues, align 8
  %call8.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.127, ptr noundef %dev, i32 noundef %conv.i, i32 noundef %18) #41
  br label %netdev_cap_txqueue.exit

netdev_cap_txqueue.exit:                          ; preds = %do.end.i, %do.body.i.netdev_cap_txqueue.exit_crit_edge, %if.end8.netdev_cap_txqueue.exit_crit_edge
  %retval.0.i = phi i16 [ 0, %do.body.i.netdev_cap_txqueue.exit_crit_edge ], [ 0, %do.end.i ], [ %queue_index.0.in, %if.end8.netdev_cap_txqueue.exit_crit_edge ]
  %conv11 = zext i16 %retval.0.i to i32
  br label %if.end12

if.end12:                                         ; preds = %netdev_cap_txqueue.exit, %if.end.if.end12_crit_edge
  %queue_index.1 = phi i32 [ %conv11, %netdev_cap_txqueue.exit ], [ 0, %if.end.if.end12_crit_edge ]
  %conv13 = trunc i32 %queue_index.1 to i16
  %queue_mapping1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %19 = ptrtoint ptr %queue_mapping1.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %conv13, ptr %queue_mapping1.i, align 8
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %20 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %_tx.i, align 128
  %arrayidx.i = getelementptr %struct.netdev_queue, ptr %21, i32 %queue_index.1
  ret ptr %arrayidx.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_queue_xmit(ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__dev_queue_xmit(ptr noundef %skb, ptr noundef null)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__dev_queue_xmit(ptr noundef %skb, ptr noundef %sb_dev) unnamed_addr #1 align 64 {
entry:
  %to_free.i = alloca ptr, align 4
  %cl_res.i = alloca %struct.tcf_result, align 4
  %state.i = alloca %struct.nf_hook_state, align 4
  %_tcphdr.i = alloca %struct.tcphdr, align 4
  %_udphdr.i = alloca %struct.udphdr, align 8
  %rc = alloca i32, align 4
  %again = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rc) #35
  %3 = ptrtoint ptr %rc to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -12, ptr %rc, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %again) #35
  %4 = ptrtoint ptr %again to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %again, align 1
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %7 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %6 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %8 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = trunc i32 %sub.ptr.sub.i to i16
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %9 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %conv.i, ptr %mac_header.i, align 2
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %10 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %end.i, align 4
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %tx_flags to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %tx_flags, align 1
  %14 = and i8 %13, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not = icmp eq i8 %14, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then, !prof !1311

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %15 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  tail call void @__skb_tstamp_tx(ptr noundef %skb, ptr noundef null, ptr noundef null, ptr noundef %17, i32 noundef 1) #35
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call fastcc void @local_bh_disable() #35
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_bh_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %if.end.rcu_read_lock_bh.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock_bh.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock_bh.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock_bh.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock_bh.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock_bh.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock_bh.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 750, ptr noundef nonnull @.str.134) #35
  br label %rcu_read_lock_bh.exit

rcu_read_lock_bh.exit:                            ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock_bh.exit_crit_edge, %land.lhs.true.i.rcu_read_lock_bh.exit_crit_edge, %if.end.rcu_read_lock_bh.exit_crit_edge
  %priority.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 6
  %18 = ptrtoint ptr %priority.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %priority.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i179 = icmp eq i32 %19, 0
  br i1 %tobool.not.i179, label %if.end.i, label %rcu_read_lock_bh.exit.skb_update_prio.exit_crit_edge

rcu_read_lock_bh.exit.skb_update_prio.exit_crit_edge: ; preds = %rcu_read_lock_bh.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_update_prio.exit

if.end.i:                                         ; preds = %rcu_read_lock_bh.exit
  %20 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %0, align 8
  %priomap.i = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 144
  %22 = ptrtoint ptr %priomap.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %priomap.i, align 4
  %call.i180 = tail call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i180)
  %tobool2.not.i = icmp eq i32 %call.i180, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i181, label %if.end.i.do.end10.i_crit_edge

if.end.i.do.end10.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10.i

land.lhs.true.i181:                               ; preds = %if.end.i
  %call3.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i181.do.end10.i_crit_edge, label %land.lhs.true5.i

land.lhs.true.i181.do.end10.i_crit_edge:          ; preds = %land.lhs.true.i181
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10.i

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i181
  %.b34.i = load i1, ptr @skb_update_prio.__warned, align 1
  br i1 %.b34.i, label %land.lhs.true5.i.do.end10.i_crit_edge, label %if.then7.i

land.lhs.true5.i.do.end10.i_crit_edge:            ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10.i

if.then7.i:                                       ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @skb_update_prio.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 3783, ptr noundef nonnull @.str.11) #35
  br label %do.end10.i

do.end10.i:                                       ; preds = %if.then7.i, %land.lhs.true5.i.do.end10.i_crit_edge, %land.lhs.true.i181.do.end10.i_crit_edge, %if.end.i.do.end10.i_crit_edge
  %tobool12.not.i = icmp eq ptr %23, null
  br i1 %tobool12.not.i, label %do.end10.i.skb_update_prio.exit_crit_edge, label %if.end14.i

do.end10.i.skb_update_prio.exit_crit_edge:        ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_update_prio.exit

if.end14.i:                                       ; preds = %do.end10.i
  %24 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 4
  %tobool.not.i.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i.i, label %if.end14.i.skb_update_prio.exit_crit_edge, label %land.lhs.true.i.i.i

if.end14.i.skb_update_prio.exit_crit_edge:        ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_update_prio.exit

land.lhs.true.i.i.i:                              ; preds = %if.end14.i
  %skc_state.i.i.i = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 4
  %27 = ptrtoint ptr %skc_state.i.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load volatile i8, ptr %skc_state.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 12, i8 %28)
  %cmp.i.i.i = icmp eq i8 %28, 12
  br i1 %cmp.i.i.i, label %skb_to_full_sk.exit.i, label %land.lhs.true.i.i.i.if.end18.i_crit_edge

land.lhs.true.i.i.i.if.end18.i_crit_edge:         ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18.i

skb_to_full_sk.exit.i:                            ; preds = %land.lhs.true.i.i.i
  %29 = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 13
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 8
  %tobool16.not.i = icmp eq ptr %31, null
  br i1 %tobool16.not.i, label %skb_to_full_sk.exit.i.skb_update_prio.exit_crit_edge, label %skb_to_full_sk.exit.i.if.end18.i_crit_edge

skb_to_full_sk.exit.i.if.end18.i_crit_edge:       ; preds = %skb_to_full_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18.i

skb_to_full_sk.exit.i.skb_update_prio.exit_crit_edge: ; preds = %skb_to_full_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_update_prio.exit

if.end18.i:                                       ; preds = %skb_to_full_sk.exit.i.if.end18.i_crit_edge, %land.lhs.true.i.i.i.if.end18.i_crit_edge
  %sk.addr.0.i.i40.i = phi ptr [ %31, %skb_to_full_sk.exit.i.if.end18.i_crit_edge ], [ %26, %land.lhs.true.i.i.i.if.end18.i_crit_edge ]
  %prioidx.i.i = getelementptr inbounds %struct.sock, ptr %sk.addr.0.i.i40.i, i32 0, i32 74, i32 2
  %32 = ptrtoint ptr %prioidx.i.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load volatile i16, ptr %prioidx.i.i, align 4
  %conv.i182 = zext i16 %33 to i32
  %priomap_len.i = getelementptr inbounds %struct.netprio_map, ptr %23, i32 0, i32 1
  %34 = ptrtoint ptr %priomap_len.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %priomap_len.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %conv.i182)
  %cmp.i = icmp ugt i32 %35, %conv.i182
  br i1 %cmp.i, label %if.then21.i, label %if.end18.i.skb_update_prio.exit_crit_edge

if.end18.i.skb_update_prio.exit_crit_edge:        ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_update_prio.exit

if.then21.i:                                      ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #37
  %arrayidx.i = getelementptr %struct.netprio_map, ptr %23, i32 0, i32 2, i32 %conv.i182
  %36 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx.i, align 4
  %38 = ptrtoint ptr %priority.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %priority.i, align 4
  br label %skb_update_prio.exit

skb_update_prio.exit:                             ; preds = %if.then21.i, %if.end18.i.skb_update_prio.exit_crit_edge, %skb_to_full_sk.exit.i.skb_update_prio.exit_crit_edge, %if.end14.i.skb_update_prio.exit_crit_edge, %do.end10.i.skb_update_prio.exit_crit_edge, %rcu_read_lock_bh.exit.skb_update_prio.exit_crit_edge
  %39 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %end.i, align 4
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %41 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %len.i, align 4
  %cb.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3
  %43 = ptrtoint ptr %cb.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %cb.i.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 4
  %44 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %gso_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %45)
  %tobool.not.i183 = icmp eq i16 %45, 0
  br i1 %tobool.not.i183, label %skb_update_prio.exit.qdisc_pkt_len_init.exit_crit_edge, label %land.lhs.true.i184

skb_update_prio.exit.qdisc_pkt_len_init.exit_crit_edge: ; preds = %skb_update_prio.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %qdisc_pkt_len_init.exit

land.lhs.true.i184:                               ; preds = %skb_update_prio.exit
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %46 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %transport_header.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %47)
  %cmp.i.not.i = icmp eq i16 %47, -1
  br i1 %cmp.i.not.i, label %land.lhs.true.i184.qdisc_pkt_len_init.exit_crit_edge, label %if.then.i186

land.lhs.true.i184.qdisc_pkt_len_init.exit_crit_edge: ; preds = %land.lhs.true.i184
  call void @__sanitizer_cov_trace_pc() #37
  br label %qdisc_pkt_len_init.exit

if.then.i186:                                     ; preds = %land.lhs.true.i184
  %gso_segs4.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 5
  %48 = ptrtoint ptr %gso_segs4.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %gso_segs4.i, align 2
  %50 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %head.i, align 8
  %conv.i.i = zext i16 %47 to i32
  %add.ptr.i.i = getelementptr i8, ptr %51, i32 %conv.i.i
  %52 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %mac_header.i, align 2
  %conv.i70.i = zext i16 %53 to i32
  %sub.ptr.lhs.cast.i185 = ptrtoint ptr %add.ptr.i.i to i32
  %gepdiff.i = sub nsw i32 %conv.i.i, %conv.i70.i
  %gso_type.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 8
  %54 = ptrtoint ptr %gso_type.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %gso_type.i, align 8
  %and.i = and i32 %55, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool7.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool7.not.i, label %if.else.i, label %if.then10.i, !prof !1310

if.then10.i:                                      ; preds = %if.then.i186
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %_tcphdr.i) #35
  %56 = call ptr @memset(ptr %_tcphdr.i, i32 255, i32 20)
  %57 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %data.i, align 4
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %58 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i185, %sub.ptr.rhs.cast.i.i
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %59 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %data_len.i.i.i, align 8
  %61 = add i32 %60, %sub.ptr.sub.i.i
  %sub.i4.i.i = sub i32 %42, %61
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %sub.i4.i.i)
  %cmp.not.i.i.i = icmp slt i32 %sub.i4.i.i, 20
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %skb_header_pointer.exit.i, !prof !1310

if.end.i.i.i:                                     ; preds = %if.then10.i
  %tobool2.not.i.i.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i.if.end.i187_crit_edge, label %lor.lhs.false.i.i.i

if.end.i.i.i.if.end.i187_crit_edge:               ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i187

lor.lhs.false.i.i.i:                              ; preds = %if.end.i.i.i
  %call.i.i.i = call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %sub.ptr.sub.i.i, ptr noundef nonnull %_tcphdr.i, i32 noundef 20) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp3.i.i.i = icmp slt i32 %call.i.i.i, 0
  br i1 %cmp3.i.i.i, label %lor.lhs.false.i.i.i.if.end.i187_crit_edge, label %lor.lhs.false.i.i.i.if.then20.i_crit_edge

lor.lhs.false.i.i.i.if.then20.i_crit_edge:        ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then20.i

lor.lhs.false.i.i.i.if.end.i187_crit_edge:        ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i187

skb_header_pointer.exit.i:                        ; preds = %if.then10.i
  %add.ptr.i.i73.i = getelementptr i8, ptr %58, i32 %sub.ptr.sub.i.i
  %tobool13.not.i = icmp eq ptr %add.ptr.i.i73.i, null
  br i1 %tobool13.not.i, label %skb_header_pointer.exit.i.if.end.i187_crit_edge, label %skb_header_pointer.exit.i.if.then20.i_crit_edge, !prof !1310

skb_header_pointer.exit.i.if.then20.i_crit_edge:  ; preds = %skb_header_pointer.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then20.i

skb_header_pointer.exit.i.if.end.i187_crit_edge:  ; preds = %skb_header_pointer.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i187

if.then20.i:                                      ; preds = %skb_header_pointer.exit.i.if.then20.i_crit_edge, %lor.lhs.false.i.i.i.if.then20.i_crit_edge
  %retval.0.i.i88.i = phi ptr [ %add.ptr.i.i73.i, %skb_header_pointer.exit.i.if.then20.i_crit_edge ], [ %_tcphdr.i, %lor.lhs.false.i.i.i.if.then20.i_crit_edge ]
  %doff.i.i = getelementptr inbounds %struct.tcphdr, ptr %retval.0.i.i88.i, i32 0, i32 4
  %62 = ptrtoint ptr %doff.i.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %bf.load.i.i = load i16, ptr %doff.i.i, align 4
  %63 = lshr i16 %bf.load.i.i, 10
  %64 = and i16 %63, 60
  %mul.i.i = zext i16 %64 to i32
  %add.i = add nsw i32 %gepdiff.i, %mul.i.i
  br label %if.end.i187

if.end.i187:                                      ; preds = %if.then20.i, %skb_header_pointer.exit.i.if.end.i187_crit_edge, %lor.lhs.false.i.i.i.if.end.i187_crit_edge, %if.end.i.i.i.if.end.i187_crit_edge
  %hdr_len.0.i = phi i32 [ %add.i, %if.then20.i ], [ %gepdiff.i, %skb_header_pointer.exit.i.if.end.i187_crit_edge ], [ %gepdiff.i, %if.end.i.i.i.if.end.i187_crit_edge ], [ %gepdiff.i, %lor.lhs.false.i.i.i.if.end.i187_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %_tcphdr.i) #35
  br label %if.end28.i

if.else.i:                                        ; preds = %if.then.i186
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %_udphdr.i) #35
  %65 = ptrtoint ptr %_udphdr.i to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 -1, ptr %_udphdr.i, align 8
  %66 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %data.i, align 4
  %sub.ptr.rhs.cast.i80.i = ptrtoint ptr %67 to i32
  %sub.ptr.sub.i81.i = sub i32 %sub.ptr.lhs.cast.i185, %sub.ptr.rhs.cast.i80.i
  %call23.i = call fastcc ptr @skb_header_pointer(ptr noundef %skb, i32 noundef %sub.ptr.sub.i81.i, i32 noundef 8, ptr noundef nonnull %_udphdr.i) #35
  %tobool24.not.i = icmp eq ptr %call23.i, null
  %add26.i = add nsw i32 %gepdiff.i, 8
  %spec.select.i = select i1 %tobool24.not.i, i32 %gepdiff.i, i32 %add26.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %_udphdr.i) #35
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.else.i, %if.end.i187
  %hdr_len.2.i = phi i32 [ %hdr_len.0.i, %if.end.i187 ], [ %spec.select.i, %if.else.i ]
  %68 = ptrtoint ptr %gso_type.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %gso_type.i, align 8
  %and30.i = and i32 %69, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30.i)
  %tobool31.not.i = icmp eq i32 %and30.i, 0
  br i1 %tobool31.not.i, label %if.end28.i.if.end41.i_crit_edge, label %if.then32.i

if.end28.i.if.end41.i_crit_edge:                  ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end41.i

if.then32.i:                                      ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #37
  %70 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %len.i, align 4
  %72 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %gso_size.i, align 4
  %conv35.i = zext i16 %73 to i32
  %sub.i = xor i32 %hdr_len.2.i, -1
  %add36.i = add i32 %71, %sub.i
  %sub37.i = add i32 %add36.i, %conv35.i
  %div.i = udiv i32 %sub37.i, %conv35.i
  %conv40.i = trunc i32 %div.i to i16
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.then32.i, %if.end28.i.if.end41.i_crit_edge
  %gso_segs.0.i = phi i16 [ %conv40.i, %if.then32.i ], [ %49, %if.end28.i.if.end41.i_crit_edge ]
  %conv42.i = zext i16 %gso_segs.0.i to i32
  %sub43.i = add nsw i32 %conv42.i, -1
  %mul.i = mul i32 %sub43.i, %hdr_len.2.i
  %74 = ptrtoint ptr %cb.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %cb.i.i, align 4
  %add46.i = add i32 %mul.i, %75
  store i32 %add46.i, ptr %cb.i.i, align 4
  br label %qdisc_pkt_len_init.exit

qdisc_pkt_len_init.exit:                          ; preds = %if.end41.i, %land.lhs.true.i184.qdisc_pkt_len_init.exit_crit_edge, %skb_update_prio.exit.qdisc_pkt_len_init.exit_crit_edge
  %tc_at_ingress = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %76 = ptrtoint ptr %tc_at_ingress to i32
  call void @__asan_loadN_noabort(i32 %76, i32 4)
  %bf.load = load i32, ptr %tc_at_ingress, align 2
  %bf.clear = and i32 %bf.load, -131073
  store i32 %bf.clear, ptr %tc_at_ingress, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @egress_needed_key, ptr blockaddress(@__dev_queue_xmit, %if.then11)) #35
          to label %if.end23 [label %if.then11], !srcloc !1328

if.then11:                                        ; preds = %qdisc_pkt_len_init.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ([13 x [7 x %struct.static_key]], ptr @nf_hooks_needed, i32 0, i32 5, i32 1), ptr blockaddress(@__dev_queue_xmit, %if.then13)) #35
          to label %if.end18 [label %if.then13], !srcloc !1328

if.then13:                                        ; preds = %if.then11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %state.i) #35
  %77 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 -1, ptr %state.i, align 4
  %78 = ptrtoint ptr %tc_at_ingress to i32
  call void @__asan_loadN_noabort(i32 %78, i32 4)
  %bf.load.i = load i32, ptr %tc_at_ingress, align 2
  %79 = and i32 %bf.load.i, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool.not.i188 = icmp eq i32 %79, 0
  br i1 %tobool.not.i188, label %if.end.i191, label %if.then13.nf_hook_egress.exit_crit_edge

if.then13.nf_hook_egress.exit_crit_edge:          ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  br label %nf_hook_egress.exit

if.end.i191:                                      ; preds = %if.then13
  %nf_hooks_egress.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 112
  %80 = ptrtoint ptr %nf_hooks_egress.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile ptr, ptr %nf_hooks_egress.i, align 16
  %call.i189 = call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i189)
  %tobool2.not.i190 = icmp eq i32 %call.i189, 0
  br i1 %tobool2.not.i190, label %lor.lhs.false.i, label %if.end.i191.do.end12.i_crit_edge

if.end.i191.do.end12.i_crit_edge:                 ; preds = %if.end.i191
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end12.i

lor.lhs.false.i:                                  ; preds = %if.end.i191
  %call3.i192 = call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i192)
  %tobool4.not.i193 = icmp eq i32 %call3.i192, 0
  br i1 %tobool4.not.i193, label %land.lhs.true.i194, label %lor.lhs.false.i.do.end12.i_crit_edge

lor.lhs.false.i.do.end12.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end12.i

land.lhs.true.i194:                               ; preds = %lor.lhs.false.i
  %call5.i = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i194.do.end12.i_crit_edge, label %land.lhs.true7.i

land.lhs.true.i194.do.end12.i_crit_edge:          ; preds = %land.lhs.true.i194
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end12.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i194
  %.b35.i = load i1, ptr @nf_hook_egress.__warned, align 1
  br i1 %.b35.i, label %land.lhs.true7.i.do.end12.i_crit_edge, label %if.then9.i

land.lhs.true7.i.do.end12.i_crit_edge:            ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end12.i

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @nf_hook_egress.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 97, ptr noundef nonnull @.str.11) #35
  br label %do.end12.i

do.end12.i:                                       ; preds = %if.then9.i, %land.lhs.true7.i.do.end12.i_crit_edge, %land.lhs.true.i194.do.end12.i_crit_edge, %lor.lhs.false.i.do.end12.i_crit_edge, %if.end.i191.do.end12.i_crit_edge
  %tobool14.not.i = icmp eq ptr %81, null
  br i1 %tobool14.not.i, label %do.end12.i.nf_hook_egress.exit_crit_edge, label %if.end16.i

do.end12.i.nf_hook_egress.exit_crit_edge:         ; preds = %do.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %nf_hook_egress.exit

if.end16.i:                                       ; preds = %do.end12.i
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 127
  %82 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %nd_net.i.i, align 4
  %84 = ptrtoint ptr %state.i to i32
  call void @__asan_store1_noabort(i32 %84)
  store i8 1, ptr %state.i, align 4
  %pf2.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 1
  %85 = ptrtoint ptr %pf2.i.i to i32
  call void @__asan_store1_noabort(i32 %85)
  store i8 5, ptr %pf2.i.i, align 1
  %in.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 2
  %86 = ptrtoint ptr %in.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %2, ptr %in.i.i, align 4
  %out.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 3
  %87 = ptrtoint ptr %out.i.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr null, ptr %out.i.i, align 4
  %sk3.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 4
  %88 = ptrtoint ptr %sk3.i.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr null, ptr %sk3.i.i, align 4
  %net4.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 5
  %89 = ptrtoint ptr %net4.i.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %83, ptr %net4.i.i, align 4
  %okfn5.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 6
  %90 = ptrtoint ptr %okfn5.i.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr null, ptr %okfn5.i.i, align 4
  %91 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i.i = and i32 %91, -16384
  %92 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %92, i32 0, i32 1
  %93 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %94, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i.i195 = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i.i195, label %if.end16.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.end16.i.rcu_read_lock.exit.i_crit_edge:        ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.end16.i
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.end16.i.rcu_read_lock.exit.i_crit_edge
  %call18.i = call i32 @nf_hook_slow(ptr noundef %skb, ptr noundef nonnull %state.i, ptr noundef nonnull %81, i32 noundef 0) #35
  %call.i36.i = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i36.i, label %rcu_read_lock.exit.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i39.i

rcu_read_lock.exit.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit.i

land.lhs.true.i39.i:                              ; preds = %rcu_read_lock.exit.i
  %call1.i37.i = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i37.i)
  %tobool.not.i38.i = icmp eq i32 %call1.i37.i, 0
  br i1 %tobool.not.i38.i, label %land.lhs.true.i39.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i41.i

land.lhs.true.i39.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i39.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i41.i:                             ; preds = %land.lhs.true.i39.i
  %.b4.i40.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i40.i, label %land.lhs.true2.i41.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i42.i

land.lhs.true2.i41.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i41.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit.i

if.then.i42.i:                                    ; preds = %land.lhs.true2.i41.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i42.i, %land.lhs.true2.i41.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i39.i.rcu_read_unlock.exit.i_crit_edge, %rcu_read_lock.exit.i.rcu_read_unlock.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %95 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i43.i = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i.i.i.i43.i to ptr
  %preempt_count.i.i.i.i44.i = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %preempt_count.i.i.i.i44.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %preempt_count.i.i.i.i44.i, align 4
  %sub.i.i.i.i = add i32 %98, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i44.i, align 4
  call void @rcu_read_unlock_strict() #35
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call18.i)
  %cmp.i196 = icmp eq i32 %call18.i, 1
  br i1 %cmp.i196, label %rcu_read_unlock.exit.i.nf_hook_egress.exit_crit_edge, label %nf_hook_egress.exit.thread

rcu_read_unlock.exit.i.nf_hook_egress.exit_crit_edge: ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %nf_hook_egress.exit

nf_hook_egress.exit.thread:                       ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %call18.lobit.i = lshr i32 %call18.i, 31
  %99 = ptrtoint ptr %rc to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 %call18.lobit.i, ptr %rc, align 4
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %state.i) #35
  br label %out

nf_hook_egress.exit:                              ; preds = %rcu_read_unlock.exit.i.nf_hook_egress.exit_crit_edge, %do.end12.i.nf_hook_egress.exit_crit_edge, %if.then13.nf_hook_egress.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %state.i) #35
  %tobool15.not = icmp eq ptr %skb, null
  br i1 %tobool15.not, label %nf_hook_egress.exit.out_crit_edge, label %nf_hook_egress.exit.if.end18_crit_edge

nf_hook_egress.exit.if.end18_crit_edge:           ; preds = %nf_hook_egress.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

nf_hook_egress.exit.out_crit_edge:                ; preds = %nf_hook_egress.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end18:                                         ; preds = %nf_hook_egress.exit.if.end18_crit_edge, %if.then11
  %100 = ptrtoint ptr %tc_at_ingress to i32
  call void @__asan_loadN_noabort(i32 %100, i32 4)
  %bf.load.i200 = load i32, ptr %tc_at_ingress, align 2
  %bf.set.i = or i32 %bf.load.i200, 16384
  store i32 %bf.set.i, ptr %tc_at_ingress, align 2
  %miniq_egress.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 111
  %101 = ptrtoint ptr %miniq_egress.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile ptr, ptr %miniq_egress.i, align 4
  %call.i201 = call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i201)
  %tobool.not.i202 = icmp eq i32 %call.i201, 0
  br i1 %tobool.not.i202, label %land.lhs.true.i203, label %if.end18.do.end7.i_crit_edge

if.end18.do.end7.i_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

land.lhs.true.i203:                               ; preds = %if.end18
  %call2.i = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i203.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i203.do.end7.i_crit_edge:           ; preds = %land.lhs.true.i203
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i203
  %.b35.i204 = load i1, ptr @sch_handle_egress.__warned, align 1
  br i1 %.b35.i204, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i205

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

if.then.i205:                                     ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @sch_handle_egress.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 3824, ptr noundef nonnull @.str.11) #35
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i205, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i203.do.end7.i_crit_edge, %if.end18.do.end7.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cl_res.i) #35
  %103 = ptrtoint ptr %cl_res.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 -1, ptr %cl_res.i, align 4, !annotation !1320
  %104 = getelementptr inbounds %struct.anon.181, ptr %cl_res.i, i32 0, i32 1
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 -1, ptr %104, align 4, !annotation !1320
  %tobool9.not.i = icmp eq ptr %102, null
  br i1 %tobool9.not.i, label %do.end7.i.sch_handle_egress.exit_crit_edge, label %if.end11.i

do.end7.i.sch_handle_egress.exit_crit_edge:       ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sch_handle_egress.exit

if.end11.i:                                       ; preds = %do.end7.i
  %mru.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 28
  %106 = ptrtoint ptr %mru.i to i32
  call void @__asan_store2_noabort(i32 %106)
  store i16 0, ptr %mru.i, align 4
  %post_ct.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 30
  %107 = ptrtoint ptr %post_ct.i to i32
  call void @__asan_load1_noabort(i32 %107)
  %bf.load.i206 = load i8, ptr %post_ct.i, align 2
  %bf.clear.i207 = and i8 %bf.load.i206, 127
  store i8 %bf.clear.i207, ptr %post_ct.i, align 2
  %cpu_bstats.i.i = getelementptr inbounds %struct.mini_Qdisc, ptr %102, i32 0, i32 2
  %108 = ptrtoint ptr %cpu_bstats.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %cpu_bstats.i.i, align 4
  %110 = ptrtoint ptr %109 to i32
  %111 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %111, -16384
  %112 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %112, i32 0, i32 3
  %113 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %114
  %115 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %116, %110
  %117 = inttoptr i32 %add.i.i to ptr
  call fastcc void @bstats_update(ptr noundef %117, ptr noundef %skb) #35
  %block.i = getelementptr inbounds %struct.mini_Qdisc, ptr %102, i32 0, i32 1
  %118 = ptrtoint ptr %block.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %block.i, align 4
  %120 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %102, align 4
  %call14.i = call i32 @tcf_classify(ptr noundef %skb, ptr noundef %119, ptr noundef %121, ptr noundef nonnull %cl_res.i, i1 noundef zeroext false) #35
  %122 = zext i32 %call14.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %122, ptr @__sancov_gen_cov_switch_values.305)
  switch i32 %call14.i, label %if.end11.i.sch_handle_egress.exit_crit_edge [
    i32 0, label %if.end11.i.sw.bb.i_crit_edge
    i32 1, label %if.end11.i.sw.bb.i_crit_edge293
    i32 2, label %sw.bb15.i
    i32 4, label %if.end11.i.sw.bb16.i_crit_edge
    i32 5, label %if.end11.i.sw.bb16.i_crit_edge294
    i32 8, label %if.end11.i.sw.bb16.i_crit_edge295
    i32 7, label %sw.bb17.i
  ]

if.end11.i.sw.bb16.i_crit_edge295:                ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb16.i

if.end11.i.sw.bb16.i_crit_edge294:                ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb16.i

if.end11.i.sw.bb16.i_crit_edge:                   ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb16.i

if.end11.i.sw.bb.i_crit_edge293:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb.i

if.end11.i.sw.bb.i_crit_edge:                     ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb.i

if.end11.i.sch_handle_egress.exit_crit_edge:      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sch_handle_egress.exit

sw.bb.i:                                          ; preds = %if.end11.i.sw.bb.i_crit_edge, %if.end11.i.sw.bb.i_crit_edge293
  %123 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %104, align 4
  %conv.i208 = trunc i32 %124 to i16
  %tc_index.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 4
  %125 = ptrtoint ptr %tc_index.i to i32
  call void @__asan_store2_noabort(i32 %125)
  store i16 %conv.i208, ptr %tc_index.i, align 2
  br label %sch_handle_egress.exit

sw.bb15.i:                                        ; preds = %if.end11.i
  %126 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %cpu_qstats.i.i = getelementptr inbounds %struct.mini_Qdisc, ptr %102, i32 0, i32 3
  %127 = ptrtoint ptr %cpu_qstats.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %cpu_qstats.i.i, align 4
  %drops.i.i = getelementptr inbounds %struct.gnet_stats_queue, ptr %128, i32 0, i32 2
  %129 = ptrtoint ptr %drops.i.i to i32
  %130 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i37.i = and i32 %130, -16384
  %131 = inttoptr i32 %and.i.i37.i to ptr
  %cpu.i38.i = getelementptr inbounds %struct.thread_info, ptr %131, i32 0, i32 3
  %132 = ptrtoint ptr %cpu.i38.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %cpu.i38.i, align 4
  %arrayidx.i39.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %133
  %134 = ptrtoint ptr %arrayidx.i39.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %arrayidx.i39.i, align 4
  %add.i40.i = add i32 %135, %129
  %136 = inttoptr i32 %add.i40.i to ptr
  %137 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %136, align 4
  %add13.i.i = add i32 %138, 1
  store i32 %add13.i.i, ptr %136, align 4
  %139 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i.i = and i32 %139, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i209 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i209, label %if.then.i.i210, label %sw.bb15.i.mini_qdisc_qstats_cpu_drop.exit.i_crit_edge, !prof !1310

sw.bb15.i.mini_qdisc_qstats_cpu_drop.exit.i_crit_edge: ; preds = %sw.bb15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %mini_qdisc_qstats_cpu_drop.exit.i

if.then.i.i210:                                   ; preds = %sw.bb15.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @warn_bogus_irq_restore() #35
  br label %mini_qdisc_qstats_cpu_drop.exit.i

mini_qdisc_qstats_cpu_drop.exit.i:                ; preds = %if.then.i.i210, %sw.bb15.i.mini_qdisc_qstats_cpu_drop.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %126) #35, !srcloc !1315
  %140 = ptrtoint ptr %rc to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 1, ptr %rc, align 4
  call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #35
  br label %sch_handle_egress.exit.thread

sw.bb16.i:                                        ; preds = %if.end11.i.sw.bb16.i_crit_edge, %if.end11.i.sw.bb16.i_crit_edge294, %if.end11.i.sw.bb16.i_crit_edge295
  %141 = ptrtoint ptr %rc to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 0, ptr %rc, align 4
  call void @consume_skb(ptr noundef %skb) #35
  br label %sch_handle_egress.exit.thread

sw.bb17.i:                                        ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  %call18.i211 = call i32 @skb_do_redirect(ptr noundef %skb) #35
  %142 = ptrtoint ptr %rc to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 0, ptr %rc, align 4
  br label %sch_handle_egress.exit.thread

sch_handle_egress.exit.thread:                    ; preds = %sw.bb17.i, %sw.bb16.i, %mini_qdisc_qstats_cpu_drop.exit.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cl_res.i) #35
  br label %out

sch_handle_egress.exit:                           ; preds = %sw.bb.i, %if.end11.i.sch_handle_egress.exit_crit_edge, %do.end7.i.sch_handle_egress.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cl_res.i) #35
  %tobool20.not = icmp eq ptr %skb, null
  br i1 %tobool20.not, label %sch_handle_egress.exit.out_crit_edge, label %if.end22

sch_handle_egress.exit.out_crit_edge:             ; preds = %sch_handle_egress.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end22:                                         ; preds = %sch_handle_egress.exit
  call void @__sanitizer_cov_trace_pc() #37
  %143 = ptrtoint ptr %tc_at_ingress to i32
  call void @__asan_loadN_noabort(i32 %143, i32 4)
  %bf.load.i214 = load i32, ptr %tc_at_ingress, align 2
  %bf.clear.i215 = and i32 %bf.load.i214, -16385
  store i32 %bf.clear.i215, ptr %tc_at_ingress, align 2
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %qdisc_pkt_len_init.exit
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 15
  %144 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %144)
  %145 = load i64, ptr %priv_flags, align 16
  %and24 = and i64 %145, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and24)
  %tobool25.not = icmp eq i64 %and24, 0
  br i1 %tobool25.not, label %if.else, label %if.then26

if.then26:                                        ; preds = %if.end23
  %146 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %147 = ptrtoint ptr %146 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %146, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %148)
  %tobool.not.i216 = icmp eq i32 %148, 0
  br i1 %tobool.not.i216, label %if.then26.if.end28_crit_edge, label %if.then.i218

if.then26.if.end28_crit_edge:                     ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end28

if.then.i218:                                     ; preds = %if.then26
  %and.i.i = and i32 %148, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i217 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i217, label %if.then.i.i219, label %if.then.i218.refdst_drop.exit.i_crit_edge

if.then.i218.refdst_drop.exit.i_crit_edge:        ; preds = %if.then.i218
  call void @__sanitizer_cov_trace_pc() #37
  br label %refdst_drop.exit.i

if.then.i.i219:                                   ; preds = %if.then.i218
  call void @__sanitizer_cov_trace_pc() #37
  %and1.i.i = and i32 %148, -2
  %149 = inttoptr i32 %and1.i.i to ptr
  call void @dst_release(ptr noundef %149) #35
  br label %refdst_drop.exit.i

refdst_drop.exit.i:                               ; preds = %if.then.i.i219, %if.then.i218.refdst_drop.exit.i_crit_edge
  %150 = ptrtoint ptr %146 to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 0, ptr %146, align 8
  br label %if.end28

if.else:                                          ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #37
  call fastcc void @skb_dst_force(ptr noundef %skb)
  br label %if.end28

if.end28:                                         ; preds = %if.else, %refdst_drop.exit.i, %if.then26.if.end28_crit_edge
  %call29 = call ptr @netdev_core_pick_tx(ptr noundef %2, ptr noundef %skb, ptr noundef %sb_dev)
  %qdisc = getelementptr inbounds %struct.netdev_queue, ptr %call29, i32 0, i32 2
  %151 = ptrtoint ptr %qdisc to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile ptr, ptr %qdisc, align 8
  %call32 = call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %land.lhs.true, label %if.end28.do.end41_crit_edge

if.end28.do.end41_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end41

land.lhs.true:                                    ; preds = %if.end28
  %call34 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %land.lhs.true.do.end41_crit_edge, label %land.lhs.true36

land.lhs.true.do.end41_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end41

land.lhs.true36:                                  ; preds = %land.lhs.true
  %.b177 = load i1, ptr @__dev_queue_xmit.__warned, align 1
  br i1 %.b177, label %land.lhs.true36.do.end41_crit_edge, label %if.then38

land.lhs.true36.do.end41_crit_edge:               ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end41

if.then38:                                        ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__dev_queue_xmit.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 4077, ptr noundef nonnull @.str.11) #35
  br label %do.end41

do.end41:                                         ; preds = %if.then38, %land.lhs.true36.do.end41_crit_edge, %land.lhs.true.do.end41_crit_edge, %if.end28.do.end41_crit_edge
  call fastcc void @trace_net_dev_queue(ptr noundef %skb)
  %153 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %152, align 128
  %tobool43.not = icmp eq ptr %154, null
  br i1 %tobool43.not, label %if.end46, label %if.then44

if.then44:                                        ; preds = %do.end41
  %lock.i.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 17, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %to_free.i) #35
  %155 = ptrtoint ptr %to_free.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store ptr null, ptr %to_free.i, align 4
  %stab1.i.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 5
  %156 = ptrtoint ptr %stab1.i.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load volatile ptr, ptr %stab1.i.i, align 4
  %call.i.i221 = call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i221)
  %tobool.not.i.i222 = icmp eq i32 %call.i.i221, 0
  br i1 %tobool.not.i.i222, label %land.lhs.true.i.i223, label %if.then44.do.end8.i.i_crit_edge

if.then44.do.end8.i.i_crit_edge:                  ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end8.i.i

land.lhs.true.i.i223:                             ; preds = %if.then44
  %call3.i.i = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i223.do.end8.i.i_crit_edge, label %land.lhs.true5.i.i

land.lhs.true.i.i223.do.end8.i.i_crit_edge:       ; preds = %land.lhs.true.i.i223
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end8.i.i

land.lhs.true5.i.i:                               ; preds = %land.lhs.true.i.i223
  %.b14.i.i = load i1, ptr @qdisc_calculate_pkt_len.__warned, align 1
  br i1 %.b14.i.i, label %land.lhs.true5.i.i.do.end8.i.i_crit_edge, label %if.then.i.i224

land.lhs.true5.i.i.do.end8.i.i_crit_edge:         ; preds = %land.lhs.true5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end8.i.i

if.then.i.i224:                                   ; preds = %land.lhs.true5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @qdisc_calculate_pkt_len.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.114, i32 noundef 835, ptr noundef nonnull @.str.11) #35
  br label %do.end8.i.i

do.end8.i.i:                                      ; preds = %if.then.i.i224, %land.lhs.true5.i.i.do.end8.i.i_crit_edge, %land.lhs.true.i.i223.do.end8.i.i_crit_edge, %if.then44.do.end8.i.i_crit_edge
  %tobool10.not.i.i = icmp eq ptr %157, null
  br i1 %tobool10.not.i.i, label %do.end8.i.i.qdisc_calculate_pkt_len.exit.i_crit_edge, label %if.then11.i.i

do.end8.i.i.qdisc_calculate_pkt_len.exit.i_crit_edge: ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %qdisc_calculate_pkt_len.exit.i

if.then11.i.i:                                    ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__qdisc_calculate_pkt_len(ptr noundef %skb, ptr noundef nonnull %157) #35
  br label %qdisc_calculate_pkt_len.exit.i

qdisc_calculate_pkt_len.exit.i:                   ; preds = %if.then11.i.i, %do.end8.i.i.qdisc_calculate_pkt_len.exit.i_crit_edge
  %flags.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 2
  %158 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %flags.i, align 8
  %and.i225 = and i32 %159, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i225)
  %tobool.not.i226 = icmp eq i32 %and.i225, 0
  br i1 %tobool.not.i226, label %qdisc_is_running.exit.i, label %if.then.i228

if.then.i228:                                     ; preds = %qdisc_calculate_pkt_len.exit.i
  %and2.i = and i32 %159, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i227 = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i227, label %if.then.i228.if.end19.i_crit_edge, label %land.lhs.true.i230

if.then.i228.if.end19.i_crit_edge:                ; preds = %if.then.i228
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19.i

land.lhs.true.i230:                               ; preds = %if.then.i228
  %state.i.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 20
  %160 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load volatile i32, ptr %state.i.i, align 4
  %and.i.i229 = and i32 %161, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i229)
  %tobool.not.i167.i = icmp eq i32 %and.i.i229, 0
  br i1 %tobool.not.i167.i, label %if.then.i170.i, label %land.lhs.true.i230.if.end19.i_crit_edge

land.lhs.true.i230.if.end19.i_crit_edge:          ; preds = %land.lhs.true.i230
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19.i

if.then.i170.i:                                   ; preds = %land.lhs.true.i230
  %seqlock.i.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 26
  %call.i.i.i231 = call i32 @_raw_spin_trylock(ptr noundef %seqlock.i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i231)
  %tobool1.not.i.i = icmp eq i32 %call.i.i.i231, 0
  br i1 %tobool1.not.i.i, label %do.end.i.i, label %if.then.i170.i.if.then7.i232_crit_edge

if.then.i170.i.if.then7.i232_crit_edge:           ; preds = %if.then.i170.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then7.i232

do.end.i.i:                                       ; preds = %if.then.i170.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1350
  %162 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load volatile i32, ptr %state.i.i, align 4
  %164 = and i32 %163, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %164)
  %tobool6.not.i.i = icmp eq i32 %164, 0
  br i1 %tobool6.not.i.i, label %qdisc_run_begin.exit.i, label %do.end.i.i.if.end19.i_crit_edge

do.end.i.i.if.end19.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19.i

qdisc_run_begin.exit.i:                           ; preds = %do.end.i.i
  call void @_set_bit(i32 noundef 2, ptr noundef %state.i.i) #35
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1351
  %call.i25.i.i = call i32 @_raw_spin_trylock(ptr noundef %seqlock.i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i25.i.i)
  %tobool16.i.not.i = icmp eq i32 %call.i25.i.i, 0
  br i1 %tobool16.i.not.i, label %qdisc_run_begin.exit.i.if.end19.i_crit_edge, label %qdisc_run_begin.exit.i.if.then7.i232_crit_edge

qdisc_run_begin.exit.i.if.then7.i232_crit_edge:   ; preds = %qdisc_run_begin.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then7.i232

qdisc_run_begin.exit.i.if.end19.i_crit_edge:      ; preds = %qdisc_run_begin.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19.i

if.then7.i232:                                    ; preds = %qdisc_run_begin.exit.i.if.then7.i232_crit_edge, %if.then.i170.i.if.then7.i232_crit_edge
  %165 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load volatile i32, ptr %state.i.i, align 4
  %and.i173.i = and i32 %166, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i173.i)
  %tobool.not.i174.i = icmp eq i32 %and.i173.i, 0
  br i1 %tobool.not.i174.i, label %if.end.i238, label %if.then12.i, !prof !1311

if.then12.i:                                      ; preds = %if.then7.i232
  %167 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %152, align 128
  %call.i175.i = call i32 %168(ptr noundef %skb, ptr noundef %152, ptr noundef nonnull %to_free.i) #35
  %and.i176.i = and i32 %call.i175.i, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i176.i)
  %cmp.i.i = icmp eq i32 %and.i176.i, 0
  br i1 %cmp.i.i, label %if.then.i177.i, label %if.then12.i.dev_qdisc_enqueue.exit.i_crit_edge

if.then12.i.dev_qdisc_enqueue.exit.i_crit_edge:   ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_qdisc_enqueue.exit.i

if.then.i177.i:                                   ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #37
  call fastcc void @trace_qdisc_enqueue(ptr noundef %152, ptr noundef %call29, ptr noundef %skb) #35
  br label %dev_qdisc_enqueue.exit.i

dev_qdisc_enqueue.exit.i:                         ; preds = %if.then.i177.i, %if.then12.i.dev_qdisc_enqueue.exit.i_crit_edge
  call void @__qdisc_run(ptr noundef %152) #35
  call fastcc void @qdisc_run_end(ptr noundef %152) #35
  br label %no_lock_out.i

if.end.i238:                                      ; preds = %if.then7.i232
  %cpu_bstats.i.i233 = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 11
  %169 = ptrtoint ptr %cpu_bstats.i.i233 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %cpu_bstats.i.i233, align 16
  %171 = ptrtoint ptr %170 to i32
  %172 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i178.i = and i32 %172, -16384
  %173 = inttoptr i32 %and.i.i178.i to ptr
  %cpu.i.i234 = getelementptr inbounds %struct.thread_info, ptr %173, i32 0, i32 3
  %174 = ptrtoint ptr %cpu.i.i234 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %cpu.i.i234, align 4
  %arrayidx.i.i235 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %175
  %176 = ptrtoint ptr %arrayidx.i.i235 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %arrayidx.i.i235, align 4
  %add.i.i236 = add i32 %177, %171
  %178 = inttoptr i32 %add.i.i236 to ptr
  call fastcc void @bstats_update(ptr noundef %178, ptr noundef %skb) #35
  %call14.i237 = call zeroext i1 @sch_direct_xmit(ptr noundef %skb, ptr noundef %152, ptr noundef %2, ptr noundef %call29, ptr noundef null, i1 noundef zeroext true) #35
  br i1 %call14.i237, label %land.lhs.true15.i, label %if.end.i238.if.end18.i239_crit_edge

if.end.i238.if.end18.i239_crit_edge:              ; preds = %if.end.i238
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18.i239

land.lhs.true15.i:                                ; preds = %if.end.i238
  %179 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load volatile i32, ptr %state.i.i, align 4
  %and.i180.i = and i32 %180, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i180.i)
  %tobool.not.i181.i = icmp eq i32 %and.i180.i, 0
  br i1 %tobool.not.i181.i, label %land.lhs.true15.i.if.end18.i239_crit_edge, label %if.then17.i

land.lhs.true15.i.if.end18.i239_crit_edge:        ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18.i239

if.then17.i:                                      ; preds = %land.lhs.true15.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__qdisc_run(ptr noundef %152) #35
  br label %if.end18.i239

if.end18.i239:                                    ; preds = %if.then17.i, %land.lhs.true15.i.if.end18.i239_crit_edge, %if.end.i238.if.end18.i239_crit_edge
  %181 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %flags.i, align 8
  %and.i183.i = and i32 %182, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i183.i)
  %tobool.not.i184.i = icmp eq i32 %and.i183.i, 0
  br i1 %tobool.not.i184.i, label %if.else.i.i, label %if.then.i188.i

if.then.i188.i:                                   ; preds = %if.end18.i239
  call void @_raw_spin_unlock(ptr noundef %seqlock.i.i) #35
  %183 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load volatile i32, ptr %state.i.i, align 4
  %185 = and i32 %184, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %185)
  %tobool1.not.i187.i = icmp eq i32 %185, 0
  br i1 %tobool1.not.i187.i, label %if.then.i188.i.__dev_xmit_skb.exit_crit_edge, label %if.then4.i.i, !prof !1311

if.then.i188.i.__dev_xmit_skb.exit_crit_edge:     ; preds = %if.then.i188.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_xmit_skb.exit

if.then4.i.i:                                     ; preds = %if.then.i188.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__netif_schedule(ptr noundef %152) #35
  br label %__dev_xmit_skb.exit

if.else.i.i:                                      ; preds = %if.end18.i239
  call void @__sanitizer_cov_trace_pc() #37
  %state2.i189.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 21
  %186 = ptrtoint ptr %state2.i189.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %state2.i189.i, align 4
  %and.i.i190.i = and i32 %187, -2
  store i32 %and.i.i190.i, ptr %state2.i189.i, align 4
  br label %__dev_xmit_skb.exit

if.end19.i:                                       ; preds = %qdisc_run_begin.exit.i.if.end19.i_crit_edge, %do.end.i.i.if.end19.i_crit_edge, %land.lhs.true.i230.if.end19.i_crit_edge, %if.then.i228.if.end19.i_crit_edge
  %188 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %152, align 128
  %call.i191.i = call i32 %189(ptr noundef %skb, ptr noundef %152, ptr noundef nonnull %to_free.i) #35
  %and.i192.i = and i32 %call.i191.i, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i192.i)
  %cmp.i193.i = icmp eq i32 %and.i192.i, 0
  br i1 %cmp.i193.i, label %if.then.i194.i, label %if.end19.i.dev_qdisc_enqueue.exit195.i_crit_edge

if.end19.i.dev_qdisc_enqueue.exit195.i_crit_edge: ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_qdisc_enqueue.exit195.i

if.then.i194.i:                                   ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #37
  call fastcc void @trace_qdisc_enqueue(ptr noundef %152, ptr noundef %call29, ptr noundef %skb) #35
  br label %dev_qdisc_enqueue.exit195.i

dev_qdisc_enqueue.exit195.i:                      ; preds = %if.then.i194.i, %if.end19.i.dev_qdisc_enqueue.exit195.i_crit_edge
  call fastcc void @qdisc_run(ptr noundef %152) #35
  br label %no_lock_out.i

no_lock_out.i:                                    ; preds = %dev_qdisc_enqueue.exit195.i, %dev_qdisc_enqueue.exit.i
  %rc.0.i = phi i32 [ %and.i176.i, %dev_qdisc_enqueue.exit.i ], [ %and.i192.i, %dev_qdisc_enqueue.exit195.i ]
  %190 = ptrtoint ptr %to_free.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %to_free.i, align 4
  %tobool21.not.i = icmp eq ptr %191, null
  br i1 %tobool21.not.i, label %no_lock_out.i.__dev_xmit_skb.exit_crit_edge, label %if.then28.i, !prof !1311

no_lock_out.i.__dev_xmit_skb.exit_crit_edge:      ; preds = %no_lock_out.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_xmit_skb.exit

if.then28.i:                                      ; preds = %no_lock_out.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @kfree_skb_list(ptr noundef nonnull %191) #35
  br label %__dev_xmit_skb.exit

qdisc_is_running.exit.i:                          ; preds = %qdisc_calculate_pkt_len.exit.i
  %state2.i201.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 21
  %192 = ptrtoint ptr %state2.i201.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load volatile i32, ptr %state2.i201.i, align 4
  %and1.i.i.i = and i32 %193, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %retval.0.i202.i = icmp ne i32 %and1.i.i.i, 0
  br i1 %retval.0.i202.i, label %if.then39.i, label %qdisc_is_running.exit.i.if.end40.i_crit_edge, !prof !1310

qdisc_is_running.exit.i.if.end40.i_crit_edge:     ; preds = %qdisc_is_running.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end40.i

if.then39.i:                                      ; preds = %qdisc_is_running.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %busylock.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 25
  call void @_raw_spin_lock(ptr noundef %busylock.i) #35
  br label %if.end40.i

if.end40.i:                                       ; preds = %if.then39.i, %qdisc_is_running.exit.i.if.end40.i_crit_edge
  call void @_raw_spin_lock(ptr noundef %lock.i.i) #35
  %state.i240 = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 20
  %194 = ptrtoint ptr %state.i240 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load volatile i32, ptr %state.i240, align 4
  %196 = and i32 %195, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %196)
  %tobool42.not.i = icmp eq i32 %196, 0
  br i1 %tobool42.not.i, label %if.else.i241, label %if.then49.i, !prof !1311

if.then49.i:                                      ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  %197 = ptrtoint ptr %to_free.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %to_free.i, align 4
  %199 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %199)
  store ptr %198, ptr %skb, align 8
  store ptr %skb, ptr %to_free.i, align 4
  br label %if.end88.i

if.else.i241:                                     ; preds = %if.end40.i
  %200 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %flags.i, align 8
  %and51.i = and i32 %201, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and51.i)
  %tobool52.not.i = icmp eq i32 %and51.i, 0
  br i1 %tobool52.not.i, label %if.else.i241.if.else72.i_crit_edge, label %land.lhs.true53.i

if.else.i241.if.else72.i_crit_edge:               ; preds = %if.else.i241
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else72.i

land.lhs.true53.i:                                ; preds = %if.else.i241
  %qlen.i.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 17, i32 2
  %202 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %qlen.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %203)
  %tobool55.not.i = icmp eq i32 %203, 0
  br i1 %tobool55.not.i, label %land.lhs.true56.i, label %land.lhs.true53.i.if.else72.i_crit_edge

land.lhs.true53.i.if.else72.i_crit_edge:          ; preds = %land.lhs.true53.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else72.i

land.lhs.true56.i:                                ; preds = %land.lhs.true53.i
  %and.i204.i = and i32 %201, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i204.i)
  %tobool.not.i205.i = icmp eq i32 %and.i204.i, 0
  br i1 %tobool.not.i205.i, label %qdisc_run_begin.exit222.i, label %if.then.i209.i

if.then.i209.i:                                   ; preds = %land.lhs.true56.i
  %seqlock.i206.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 26
  %call.i.i207.i = call i32 @_raw_spin_trylock(ptr noundef %seqlock.i206.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i207.i)
  %tobool1.not.i208.i = icmp eq i32 %call.i.i207.i, 0
  br i1 %tobool1.not.i208.i, label %do.end.i212.i, label %if.then.i209.i.if.then58.i_crit_edge

if.then.i209.i.if.then58.i_crit_edge:             ; preds = %if.then.i209.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then58.i

do.end.i212.i:                                    ; preds = %if.then.i209.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1350
  %204 = ptrtoint ptr %state.i240 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load volatile i32, ptr %state.i240, align 4
  %206 = and i32 %205, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %206)
  %tobool6.not.i211.i = icmp eq i32 %206, 0
  br i1 %tobool6.not.i211.i, label %if.end8.i215.i, label %do.end.i212.i.if.else72.i_crit_edge

do.end.i212.i.if.else72.i_crit_edge:              ; preds = %do.end.i212.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else72.i

if.end8.i215.i:                                   ; preds = %do.end.i212.i
  call void @_set_bit(i32 noundef 2, ptr noundef %state.i240) #35
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1351
  %call.i25.i213.i = call i32 @_raw_spin_trylock(ptr noundef %seqlock.i206.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i25.i213.i)
  %tobool16.i214.not.i = icmp eq i32 %call.i25.i213.i, 0
  br i1 %tobool16.i214.not.i, label %if.end8.i215.i.if.else72.i_crit_edge, label %if.end8.i215.i.if.then58.i_crit_edge

if.end8.i215.i.if.then58.i_crit_edge:             ; preds = %if.end8.i215.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then58.i

if.end8.i215.i.if.else72.i_crit_edge:             ; preds = %if.end8.i215.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else72.i

qdisc_run_begin.exit222.i:                        ; preds = %land.lhs.true56.i
  %207 = ptrtoint ptr %state2.i201.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %state2.i201.i, align 4
  %or.i.i217.i = or i32 %208, 1
  store i32 %or.i.i217.i, ptr %state2.i201.i, align 4
  %and.i.i218.i = and i32 %208, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i218.i)
  %tobool19.not.i219.i = icmp eq i32 %and.i.i218.i, 0
  br i1 %tobool19.not.i219.i, label %qdisc_run_begin.exit222.i.if.then58.i_crit_edge, label %qdisc_run_begin.exit222.i.if.else72.i_crit_edge

qdisc_run_begin.exit222.i.if.else72.i_crit_edge:  ; preds = %qdisc_run_begin.exit222.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else72.i

qdisc_run_begin.exit222.i.if.then58.i_crit_edge:  ; preds = %qdisc_run_begin.exit222.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then58.i

if.then58.i:                                      ; preds = %qdisc_run_begin.exit222.i.if.then58.i_crit_edge, %if.end8.i215.i.if.then58.i_crit_edge, %if.then.i209.i.if.then58.i_crit_edge
  %bstats.i.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 18
  call fastcc void @bstats_update(ptr noundef %bstats.i.i, ptr noundef %skb) #35
  %call59.i = call zeroext i1 @sch_direct_xmit(ptr noundef %skb, ptr noundef %152, ptr noundef %2, ptr noundef %call29, ptr noundef %lock.i.i, i1 noundef zeroext true) #35
  br i1 %call59.i, label %if.then60.i, label %if.then58.i.if.end71.i_crit_edge

if.then58.i.if.end71.i_crit_edge:                 ; preds = %if.then58.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end71.i

if.then60.i:                                      ; preds = %if.then58.i
  br i1 %retval.0.i202.i, label %if.then68.i, label %if.then60.i.if.end70.i_crit_edge, !prof !1310

if.then60.i.if.end70.i_crit_edge:                 ; preds = %if.then60.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end70.i

if.then68.i:                                      ; preds = %if.then60.i
  call void @__sanitizer_cov_trace_pc() #37
  %busylock69.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 25
  call void @_raw_spin_unlock(ptr noundef %busylock69.i) #35
  br label %if.end70.i

if.end70.i:                                       ; preds = %if.then68.i, %if.then60.i.if.end70.i_crit_edge
  call void @__qdisc_run(ptr noundef %152) #35
  br label %if.end71.i

if.end71.i:                                       ; preds = %if.end70.i, %if.then58.i.if.end71.i_crit_edge
  %contended.1.i = phi i1 [ false, %if.end70.i ], [ %retval.0.i202.i, %if.then58.i.if.end71.i_crit_edge ]
  %209 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %flags.i, align 8
  %and.i224.i = and i32 %210, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i224.i)
  %tobool.not.i225.i = icmp eq i32 %and.i224.i, 0
  br i1 %tobool.not.i225.i, label %if.else.i233.i, label %if.then.i229.i

if.then.i229.i:                                   ; preds = %if.end71.i
  %seqlock.i226.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 26
  call void @_raw_spin_unlock(ptr noundef %seqlock.i226.i) #35
  %211 = ptrtoint ptr %state.i240 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load volatile i32, ptr %state.i240, align 4
  %213 = and i32 %212, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %213)
  %tobool1.not.i228.i = icmp eq i32 %213, 0
  br i1 %tobool1.not.i228.i, label %if.then.i229.i.if.end88.i_crit_edge, label %if.then4.i230.i, !prof !1311

if.then.i229.i.if.end88.i_crit_edge:              ; preds = %if.then.i229.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end88.i

if.then4.i230.i:                                  ; preds = %if.then.i229.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__netif_schedule(ptr noundef %152) #35
  br label %if.end88.i

if.else.i233.i:                                   ; preds = %if.end71.i
  call void @__sanitizer_cov_trace_pc() #37
  %214 = ptrtoint ptr %state2.i201.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %state2.i201.i, align 4
  %and.i.i232.i = and i32 %215, -2
  store i32 %and.i.i232.i, ptr %state2.i201.i, align 4
  br label %if.end88.i

if.else72.i:                                      ; preds = %qdisc_run_begin.exit222.i.if.else72.i_crit_edge, %if.end8.i215.i.if.else72.i_crit_edge, %do.end.i212.i.if.else72.i_crit_edge, %land.lhs.true53.i.if.else72.i_crit_edge, %if.else.i241.if.else72.i_crit_edge
  %216 = ptrtoint ptr %152 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %152, align 128
  %call.i235.i = call i32 %217(ptr noundef %skb, ptr noundef %152, ptr noundef nonnull %to_free.i) #35
  %and.i236.i = and i32 %call.i235.i, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i236.i)
  %cmp.i237.i = icmp eq i32 %and.i236.i, 0
  br i1 %cmp.i237.i, label %if.then.i238.i, label %if.else72.i.dev_qdisc_enqueue.exit240.i_crit_edge

if.else72.i.dev_qdisc_enqueue.exit240.i_crit_edge: ; preds = %if.else72.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_qdisc_enqueue.exit240.i

if.then.i238.i:                                   ; preds = %if.else72.i
  call void @__sanitizer_cov_trace_pc() #37
  call fastcc void @trace_qdisc_enqueue(ptr noundef %152, ptr noundef %call29, ptr noundef %skb) #35
  br label %dev_qdisc_enqueue.exit240.i

dev_qdisc_enqueue.exit240.i:                      ; preds = %if.then.i238.i, %if.else72.i.dev_qdisc_enqueue.exit240.i_crit_edge
  %218 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load i32, ptr %flags.i, align 8
  %and.i242.i = and i32 %219, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i242.i)
  %tobool.not.i243.i = icmp eq i32 %and.i242.i, 0
  br i1 %tobool.not.i243.i, label %qdisc_run_begin.exit260.i, label %if.then.i247.i

if.then.i247.i:                                   ; preds = %dev_qdisc_enqueue.exit240.i
  %seqlock.i244.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 26
  %call.i.i245.i = call i32 @_raw_spin_trylock(ptr noundef %seqlock.i244.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i245.i)
  %tobool1.not.i246.i = icmp eq i32 %call.i.i245.i, 0
  br i1 %tobool1.not.i246.i, label %do.end.i250.i, label %if.then.i247.i.if.then75.i_crit_edge

if.then.i247.i.if.then75.i_crit_edge:             ; preds = %if.then.i247.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then75.i

do.end.i250.i:                                    ; preds = %if.then.i247.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1350
  %220 = ptrtoint ptr %state.i240 to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load volatile i32, ptr %state.i240, align 4
  %222 = and i32 %221, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %222)
  %tobool6.not.i249.i = icmp eq i32 %222, 0
  br i1 %tobool6.not.i249.i, label %if.end8.i253.i, label %do.end.i250.i.if.end88.i_crit_edge

do.end.i250.i.if.end88.i_crit_edge:               ; preds = %do.end.i250.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end88.i

if.end8.i253.i:                                   ; preds = %do.end.i250.i
  call void @_set_bit(i32 noundef 2, ptr noundef %state.i240) #35
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1351
  %call.i25.i251.i = call i32 @_raw_spin_trylock(ptr noundef %seqlock.i244.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i25.i251.i)
  %tobool16.i252.not.i = icmp eq i32 %call.i25.i251.i, 0
  br i1 %tobool16.i252.not.i, label %if.end8.i253.i.if.end88.i_crit_edge, label %if.end8.i253.i.if.then75.i_crit_edge

if.end8.i253.i.if.then75.i_crit_edge:             ; preds = %if.end8.i253.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then75.i

if.end8.i253.i.if.end88.i_crit_edge:              ; preds = %if.end8.i253.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end88.i

qdisc_run_begin.exit260.i:                        ; preds = %dev_qdisc_enqueue.exit240.i
  %223 = ptrtoint ptr %state2.i201.i to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %state2.i201.i, align 4
  %or.i.i255.i = or i32 %224, 1
  store i32 %or.i.i255.i, ptr %state2.i201.i, align 4
  %and.i.i256.i = and i32 %224, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i256.i)
  %tobool19.not.i257.i = icmp eq i32 %and.i.i256.i, 0
  br i1 %tobool19.not.i257.i, label %qdisc_run_begin.exit260.i.if.then75.i_crit_edge, label %qdisc_run_begin.exit260.i.if.end88.i_crit_edge

qdisc_run_begin.exit260.i.if.end88.i_crit_edge:   ; preds = %qdisc_run_begin.exit260.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end88.i

qdisc_run_begin.exit260.i.if.then75.i_crit_edge:  ; preds = %qdisc_run_begin.exit260.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then75.i

if.then75.i:                                      ; preds = %qdisc_run_begin.exit260.i.if.then75.i_crit_edge, %if.end8.i253.i.if.then75.i_crit_edge, %if.then.i247.i.if.then75.i_crit_edge
  br i1 %retval.0.i202.i, label %if.then83.i, label %if.then75.i.if.end85.i_crit_edge, !prof !1310

if.then75.i.if.end85.i_crit_edge:                 ; preds = %if.then75.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end85.i

if.then83.i:                                      ; preds = %if.then75.i
  call void @__sanitizer_cov_trace_pc() #37
  %busylock84.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 25
  call void @_raw_spin_unlock(ptr noundef %busylock84.i) #35
  br label %if.end85.i

if.end85.i:                                       ; preds = %if.then83.i, %if.then75.i.if.end85.i_crit_edge
  call void @__qdisc_run(ptr noundef %152) #35
  %225 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %flags.i, align 8
  %and.i262.i = and i32 %226, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i262.i)
  %tobool.not.i263.i = icmp eq i32 %and.i262.i, 0
  br i1 %tobool.not.i263.i, label %if.else.i271.i, label %if.then.i267.i

if.then.i267.i:                                   ; preds = %if.end85.i
  %seqlock.i264.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 26
  call void @_raw_spin_unlock(ptr noundef %seqlock.i264.i) #35
  %227 = ptrtoint ptr %state.i240 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load volatile i32, ptr %state.i240, align 4
  %229 = and i32 %228, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %229)
  %tobool1.not.i266.i = icmp eq i32 %229, 0
  br i1 %tobool1.not.i266.i, label %if.then.i267.i.if.end88.i_crit_edge, label %if.then4.i268.i, !prof !1311

if.then.i267.i.if.end88.i_crit_edge:              ; preds = %if.then.i267.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end88.i

if.then4.i268.i:                                  ; preds = %if.then.i267.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__netif_schedule(ptr noundef %152) #35
  br label %if.end88.i

if.else.i271.i:                                   ; preds = %if.end85.i
  call void @__sanitizer_cov_trace_pc() #37
  %230 = ptrtoint ptr %state2.i201.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %state2.i201.i, align 4
  %and.i.i270.i = and i32 %231, -2
  store i32 %and.i.i270.i, ptr %state2.i201.i, align 4
  br label %if.end88.i

if.end88.i:                                       ; preds = %if.else.i271.i, %if.then4.i268.i, %if.then.i267.i.if.end88.i_crit_edge, %qdisc_run_begin.exit260.i.if.end88.i_crit_edge, %if.end8.i253.i.if.end88.i_crit_edge, %do.end.i250.i.if.end88.i_crit_edge, %if.else.i233.i, %if.then4.i230.i, %if.then.i229.i.if.end88.i_crit_edge, %if.then49.i
  %contended.3.off0.i = phi i1 [ %retval.0.i202.i, %if.then49.i ], [ %retval.0.i202.i, %qdisc_run_begin.exit260.i.if.end88.i_crit_edge ], [ %contended.1.i, %if.then.i229.i.if.end88.i_crit_edge ], [ %contended.1.i, %if.then4.i230.i ], [ %contended.1.i, %if.else.i233.i ], [ %retval.0.i202.i, %if.end8.i253.i.if.end88.i_crit_edge ], [ false, %if.then.i267.i.if.end88.i_crit_edge ], [ false, %if.then4.i268.i ], [ false, %if.else.i271.i ], [ %retval.0.i202.i, %do.end.i250.i.if.end88.i_crit_edge ]
  %rc.1.i = phi i32 [ 1, %if.then49.i ], [ %and.i236.i, %qdisc_run_begin.exit260.i.if.end88.i_crit_edge ], [ 0, %if.then.i229.i.if.end88.i_crit_edge ], [ 0, %if.then4.i230.i ], [ 0, %if.else.i233.i ], [ %and.i236.i, %if.end8.i253.i.if.end88.i_crit_edge ], [ %and.i236.i, %if.then.i267.i.if.end88.i_crit_edge ], [ %and.i236.i, %if.then4.i268.i ], [ %and.i236.i, %if.else.i271.i ], [ %and.i236.i, %do.end.i250.i.if.end88.i_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %lock.i.i) #35
  %232 = ptrtoint ptr %to_free.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %to_free.i, align 4
  %tobool89.not.i = icmp eq ptr %233, null
  br i1 %tobool89.not.i, label %if.end88.i.if.end97.i_crit_edge, label %if.then96.i, !prof !1311

if.end88.i.if.end97.i_crit_edge:                  ; preds = %if.end88.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end97.i

if.then96.i:                                      ; preds = %if.end88.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @kfree_skb_list(ptr noundef nonnull %233) #35
  br label %if.end97.i

if.end97.i:                                       ; preds = %if.then96.i, %if.end88.i.if.end97.i_crit_edge
  br i1 %contended.3.off0.i, label %if.then105.i, label %if.end97.i.__dev_xmit_skb.exit_crit_edge, !prof !1310

if.end97.i.__dev_xmit_skb.exit_crit_edge:         ; preds = %if.end97.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_xmit_skb.exit

if.then105.i:                                     ; preds = %if.end97.i
  call void @__sanitizer_cov_trace_pc() #37
  %busylock106.i = getelementptr inbounds %struct.Qdisc, ptr %152, i32 0, i32 25
  call void @_raw_spin_unlock(ptr noundef %busylock106.i) #35
  br label %__dev_xmit_skb.exit

__dev_xmit_skb.exit:                              ; preds = %if.then105.i, %if.end97.i.__dev_xmit_skb.exit_crit_edge, %if.then28.i, %no_lock_out.i.__dev_xmit_skb.exit_crit_edge, %if.else.i.i, %if.then4.i.i, %if.then.i188.i.__dev_xmit_skb.exit_crit_edge
  %retval.0.i242 = phi i32 [ %rc.0.i, %if.then28.i ], [ %rc.0.i, %no_lock_out.i.__dev_xmit_skb.exit_crit_edge ], [ %rc.1.i, %if.then105.i ], [ %rc.1.i, %if.end97.i.__dev_xmit_skb.exit_crit_edge ], [ 0, %if.then.i188.i.__dev_xmit_skb.exit_crit_edge ], [ 0, %if.then4.i.i ], [ 0, %if.else.i.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %to_free.i) #35
  %234 = ptrtoint ptr %rc to i32
  call void @__asan_store4_noabort(i32 %234)
  store i32 %retval.0.i242, ptr %rc, align 4
  br label %out

if.end46:                                         ; preds = %do.end41
  %flags = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 14
  %235 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %flags, align 8
  %and47 = and i32 %236, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  br i1 %tobool48.not, label %if.end46.if.end121_crit_edge, label %if.then49

if.end46.if.end121_crit_edge:                     ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end121

if.then49:                                        ; preds = %if.end46
  %237 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i243 = and i32 %237, -16384
  %238 = inttoptr i32 %and.i243 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %238, i32 0, i32 3
  %239 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %cpu51, align 4
  %xmit_lock_owner = getelementptr inbounds %struct.netdev_queue, ptr %call29, i32 0, i32 11
  %241 = ptrtoint ptr %xmit_lock_owner to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load volatile i32, ptr %xmit_lock_owner, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %242, i32 %240)
  %cmp.not = icmp eq i32 %242, %240
  br i1 %cmp.not, label %if.then49.do.body106_crit_edge, label %if.then57

if.then49.do.body106_crit_edge:                   ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body106

if.then57:                                        ; preds = %if.then49
  %243 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i244 = and i32 %243, -16384
  %244 = inttoptr i32 %and.i.i244 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %244, i32 0, i32 3
  %245 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %cpu.i, align 4
  %arrayidx.i245 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %246
  %247 = ptrtoint ptr %arrayidx.i245 to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %arrayidx.i245, align 4
  %add.i246 = add i32 %248, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11) to i32)
  %249 = inttoptr i32 %add.i246 to ptr
  %250 = ptrtoint ptr %249 to i32
  call void @__asan_load2_noabort(i32 %250)
  %251 = load i16, ptr %249, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 8, i16 %251)
  %cmp.i247 = icmp ugt i16 %251, 8
  br i1 %cmp.i247, label %if.then57.do.body106_crit_edge, label %if.end60

if.then57.do.body106_crit_edge:                   ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body106

if.end60:                                         ; preds = %if.then57
  %call61 = call fastcc ptr @validate_xmit_skb(ptr noundef %skb, ptr noundef %2, ptr noundef nonnull %again)
  %tobool62.not = icmp eq ptr %call61, null
  br i1 %tobool62.not, label %if.end60.out_crit_edge, label %if.end64

if.end60.out_crit_edge:                           ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end64:                                         ; preds = %if.end60
  %252 = ptrtoint ptr %call61 to i32
  %253 = ptrtoint ptr %2 to i32
  %254 = ptrtoint ptr %call29 to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %255 = load volatile i32, ptr @jiffies, align 128
  %256 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i248 = and i32 %256, -16384
  %257 = inttoptr i32 %and.i.i248 to ptr
  %cpu.i249 = getelementptr inbounds %struct.thread_info, ptr %257, i32 0, i32 3
  %258 = ptrtoint ptr %cpu.i249 to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %cpu.i249, align 4
  %arrayidx.i250 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %259
  %260 = ptrtoint ptr %arrayidx.i250 to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %arrayidx.i250, align 4
  %add.i251 = add i32 %261, ptrtoint (ptr @net_rand_noise to i32)
  %262 = inttoptr i32 %add.i251 to ptr
  %263 = ptrtoint ptr %262 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load i32, ptr %262, align 4
  %xor.i = xor i32 %264, %252
  %add8.i = add i32 %xor.i, %253
  %add10.i = add i32 %255, %254
  %or.i63.i = call i32 @llvm.fshl.i32(i32 %255, i32 %255, i32 8) #35
  %or.i64.i = call i32 @llvm.fshl.i32(i32 %add8.i, i32 %add8.i, i32 16) #35
  %xor14.i = xor i32 %or.i63.i, %add10.i
  %add15.i = add i32 %or.i64.i, %xor14.i
  %or.i65.i = call i32 @llvm.fshl.i32(i32 %xor14.i, i32 %xor14.i, i32 7) #35
  %xor19.i = xor i32 %add15.i, %or.i65.i
  %265 = ptrtoint ptr %262 to i32
  call void @__asan_store4_noabort(i32 %265)
  store i32 %xor19.i, ptr %262, align 4
  %features = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 23
  %266 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %266)
  %267 = load i64, ptr %features, align 16
  %and65 = and i64 %267, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and65)
  %cmp66 = icmp eq i64 %and65, 0
  br i1 %cmp66, label %if.then68, label %if.end64.if.end71_crit_edge

if.end64.if.end71_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end71

if.then68:                                        ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #37
  %_xmit_lock.i = getelementptr inbounds %struct.netdev_queue, ptr %call29, i32 0, i32 10
  call void @_raw_spin_lock(ptr noundef %_xmit_lock.i) #35
  %268 = ptrtoint ptr %xmit_lock_owner to i32
  call void @__asan_store4_noabort(i32 %268)
  store volatile i32 %240, ptr %xmit_lock_owner, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then68, %if.end64.if.end71_crit_edge
  %state.i252 = getelementptr inbounds %struct.netdev_queue, ptr %call29, i32 0, i32 13
  %269 = ptrtoint ptr %state.i252 to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load i32, ptr %state.i252, align 4
  %and.i253 = and i32 %270, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i253)
  %tobool.i.not = icmp eq i32 %and.i253, 0
  br i1 %tobool.i.not, label %if.then73, label %if.end71.if.end85_crit_edge

if.end71.if.end85_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end85

if.then73:                                        ; preds = %if.end71
  %271 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i254 = and i32 %271, -16384
  %272 = inttoptr i32 %and.i.i254 to ptr
  %cpu.i255 = getelementptr inbounds %struct.thread_info, ptr %272, i32 0, i32 3
  %273 = ptrtoint ptr %cpu.i255 to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %cpu.i255, align 4
  %arrayidx.i256 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %274
  %275 = ptrtoint ptr %arrayidx.i256 to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load i32, ptr %arrayidx.i256, align 4
  %add.i257 = add i32 %276, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11) to i32)
  %277 = inttoptr i32 %add.i257 to ptr
  %278 = ptrtoint ptr %277 to i32
  call void @__asan_load2_noabort(i32 %278)
  %279 = load i16, ptr %277, align 2
  %add7.i = add i16 %279, 1
  store i16 %add7.i, ptr %277, align 2
  %call74 = call ptr @dev_hard_start_xmit(ptr noundef nonnull %call61, ptr noundef %2, ptr noundef %call29, ptr noundef nonnull %rc)
  %280 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i258 = and i32 %280, -16384
  %281 = inttoptr i32 %and.i.i258 to ptr
  %cpu.i259 = getelementptr inbounds %struct.thread_info, ptr %281, i32 0, i32 3
  %282 = ptrtoint ptr %cpu.i259 to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %cpu.i259, align 4
  %arrayidx.i260 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %283
  %284 = ptrtoint ptr %arrayidx.i260 to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %arrayidx.i260, align 4
  %add.i261 = add i32 %285, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11) to i32)
  %286 = inttoptr i32 %add.i261 to ptr
  %287 = ptrtoint ptr %286 to i32
  call void @__asan_load2_noabort(i32 %287)
  %288 = load i16, ptr %286, align 2
  %add7.i262 = add i16 %288, -1
  store i16 %add7.i262, ptr %286, align 2
  %289 = ptrtoint ptr %rc to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load i32, ptr %rc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %290)
  %cmp.i263 = icmp slt i32 %290, 15
  br i1 %cmp.i263, label %if.then76, label %if.then73.if.end85_crit_edge

if.then73.if.end85_crit_edge:                     ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end85

if.then76:                                        ; preds = %if.then73
  %291 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %291)
  %292 = load i64, ptr %features, align 16
  %and78 = and i64 %292, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and78)
  %cmp79 = icmp eq i64 %and78, 0
  br i1 %cmp79, label %if.then81, label %if.then76.out_crit_edge

if.then76.out_crit_edge:                          ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.then81:                                        ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #37
  %293 = ptrtoint ptr %xmit_lock_owner to i32
  call void @__asan_store4_noabort(i32 %293)
  store volatile i32 -1, ptr %xmit_lock_owner, align 4
  %_xmit_lock.i265 = getelementptr inbounds %struct.netdev_queue, ptr %call29, i32 0, i32 10
  call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i265) #35
  br label %out

if.end85:                                         ; preds = %if.then73.if.end85_crit_edge, %if.end71.if.end85_crit_edge
  %skb.addr.2 = phi ptr [ %call61, %if.end71.if.end85_crit_edge ], [ %call74, %if.then73.if.end85_crit_edge ]
  %294 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %294)
  %295 = load i64, ptr %features, align 16
  %and87 = and i64 %295, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and87)
  %cmp88 = icmp eq i64 %and87, 0
  br i1 %cmp88, label %if.then90, label %if.end85.do.body93_crit_edge

if.end85.do.body93_crit_edge:                     ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body93

if.then90:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #37
  %296 = ptrtoint ptr %xmit_lock_owner to i32
  call void @__asan_store4_noabort(i32 %296)
  store volatile i32 -1, ptr %xmit_lock_owner, align 4
  %_xmit_lock.i267 = getelementptr inbounds %struct.netdev_queue, ptr %call29, i32 0, i32 10
  call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i267) #35
  br label %do.body93

do.body93:                                        ; preds = %if.then90, %if.end85.do.body93_crit_edge
  %call94 = call i32 @net_ratelimit() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %do.body93.if.end121_crit_edge, label %do.body93.if.end121.sink.split_crit_edge

do.body93.if.end121.sink.split_crit_edge:         ; preds = %do.body93
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end121.sink.split

do.body93.if.end121_crit_edge:                    ; preds = %do.body93
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end121

do.body106:                                       ; preds = %if.then57.do.body106_crit_edge, %if.then49.do.body106_crit_edge
  %call107 = call i32 @net_ratelimit() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call107)
  %tobool108.not = icmp eq i32 %call107, 0
  br i1 %tobool108.not, label %do.body106.if.end121_crit_edge, label %do.body106.if.end121.sink.split_crit_edge

do.body106.if.end121.sink.split_crit_edge:        ; preds = %do.body106
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end121.sink.split

do.body106.if.end121_crit_edge:                   ; preds = %do.body106
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end121

if.end121.sink.split:                             ; preds = %do.body106.if.end121.sink.split_crit_edge, %do.body93.if.end121.sink.split_crit_edge
  %.str.129.sink = phi ptr [ @.str.129, %do.body93.if.end121.sink.split_crit_edge ], [ @.str.132, %do.body106.if.end121.sink.split_crit_edge ]
  %skb.addr.5.ph = phi ptr [ %skb.addr.2, %do.body93.if.end121.sink.split_crit_edge ], [ %skb, %do.body106.if.end121.sink.split_crit_edge ]
  %call101 = call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.129.sink, ptr noundef %2) #41
  br label %if.end121

if.end121:                                        ; preds = %if.end121.sink.split, %do.body106.if.end121_crit_edge, %do.body93.if.end121_crit_edge, %if.end46.if.end121_crit_edge
  %skb.addr.5 = phi ptr [ %skb, %if.end46.if.end121_crit_edge ], [ %skb.addr.2, %do.body93.if.end121_crit_edge ], [ %skb, %do.body106.if.end121_crit_edge ], [ %skb.addr.5.ph, %if.end121.sink.split ]
  %call.i268 = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i268, label %if.end121.rcu_read_unlock_bh.exit_crit_edge, label %land.lhs.true.i271

if.end121.rcu_read_unlock_bh.exit_crit_edge:      ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock_bh.exit

land.lhs.true.i271:                               ; preds = %if.end121
  %call1.i269 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i269)
  %tobool.not.i270 = icmp eq i32 %call1.i269, 0
  br i1 %tobool.not.i270, label %land.lhs.true.i271.rcu_read_unlock_bh.exit_crit_edge, label %land.lhs.true2.i273

land.lhs.true.i271.rcu_read_unlock_bh.exit_crit_edge: ; preds = %land.lhs.true.i271
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock_bh.exit

land.lhs.true2.i273:                              ; preds = %land.lhs.true.i271
  %.b4.i272 = load i1, ptr @rcu_read_unlock_bh.__warned, align 1
  br i1 %.b4.i272, label %land.lhs.true2.i273.rcu_read_unlock_bh.exit_crit_edge, label %if.then.i274

land.lhs.true2.i273.rcu_read_unlock_bh.exit_crit_edge: ; preds = %land.lhs.true2.i273
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock_bh.exit

if.then.i274:                                     ; preds = %land.lhs.true2.i273
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock_bh.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 761, ptr noundef nonnull @.str.138) #35
  br label %rcu_read_unlock_bh.exit

rcu_read_unlock_bh.exit:                          ; preds = %if.then.i274, %land.lhs.true2.i273.rcu_read_unlock_bh.exit_crit_edge, %land.lhs.true.i271.rcu_read_unlock_bh.exit_crit_edge, %if.end121.rcu_read_unlock_bh.exit_crit_edge
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_bh_lock_map) #35
  call fastcc void @local_bh_enable() #35
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 38
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %tx_dropped, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %tx_dropped, i32 1, i32 3, i32 1) #35
  %297 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tx_dropped, ptr %tx_dropped, i32 1, ptr elementtype(i32) %tx_dropped) #35, !srcloc !1326
  call void @kfree_skb_list(ptr noundef %skb.addr.5) #35
  br label %cleanup122

out:                                              ; preds = %if.then81, %if.then76.out_crit_edge, %if.end60.out_crit_edge, %__dev_xmit_skb.exit, %sch_handle_egress.exit.out_crit_edge, %sch_handle_egress.exit.thread, %nf_hook_egress.exit.out_crit_edge, %nf_hook_egress.exit.thread
  %call.i275 = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i275, label %out.rcu_read_unlock_bh.exit282_crit_edge, label %land.lhs.true.i278

out.rcu_read_unlock_bh.exit282_crit_edge:         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock_bh.exit282

land.lhs.true.i278:                               ; preds = %out
  %call1.i276 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i276)
  %tobool.not.i277 = icmp eq i32 %call1.i276, 0
  br i1 %tobool.not.i277, label %land.lhs.true.i278.rcu_read_unlock_bh.exit282_crit_edge, label %land.lhs.true2.i280

land.lhs.true.i278.rcu_read_unlock_bh.exit282_crit_edge: ; preds = %land.lhs.true.i278
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock_bh.exit282

land.lhs.true2.i280:                              ; preds = %land.lhs.true.i278
  %.b4.i279 = load i1, ptr @rcu_read_unlock_bh.__warned, align 1
  br i1 %.b4.i279, label %land.lhs.true2.i280.rcu_read_unlock_bh.exit282_crit_edge, label %if.then.i281

land.lhs.true2.i280.rcu_read_unlock_bh.exit282_crit_edge: ; preds = %land.lhs.true2.i280
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock_bh.exit282

if.then.i281:                                     ; preds = %land.lhs.true2.i280
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock_bh.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 761, ptr noundef nonnull @.str.138) #35
  br label %rcu_read_unlock_bh.exit282

rcu_read_unlock_bh.exit282:                       ; preds = %if.then.i281, %land.lhs.true2.i280.rcu_read_unlock_bh.exit282_crit_edge, %land.lhs.true.i278.rcu_read_unlock_bh.exit282_crit_edge, %out.rcu_read_unlock_bh.exit282_crit_edge
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_bh_lock_map) #35
  call fastcc void @local_bh_enable() #35
  %298 = ptrtoint ptr %rc to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load i32, ptr %rc, align 4
  br label %cleanup122

cleanup122:                                       ; preds = %rcu_read_unlock_bh.exit282, %rcu_read_unlock_bh.exit
  %retval.0 = phi i32 [ %299, %rcu_read_unlock_bh.exit282 ], [ -100, %rcu_read_unlock_bh.exit ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %again) #35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rc) #35
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_queue_xmit_accel(ptr noundef %skb, ptr noundef %sb_dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__dev_queue_xmit(ptr noundef %skb, ptr noundef %sb_dev)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__dev_direct_xmit(ptr noundef %skb, i16 noundef zeroext %queue_id) #1 align 64 {
entry:
  %again = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %again) #35
  %3 = ptrtoint ptr %again to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %again, align 1
  %state.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 6
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.drop_crit_edge, label %lor.rhs, !prof !1310

entry.drop_crit_edge:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %drop

lor.rhs:                                          ; preds = %entry
  %6 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i, align 4
  %8 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i.not = icmp eq i32 %8, 0
  br i1 %tobool.not.i.not, label %if.end, label %lor.rhs.drop_crit_edge, !prof !1311

lor.rhs.drop_crit_edge:                           ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %drop

if.end:                                           ; preds = %lor.rhs
  %cmp.not17.i = icmp eq ptr %skb, null
  br i1 %cmp.not17.i, label %if.end.validate_xmit_skb_list.exit_crit_edge, label %if.end.for.body.i_crit_edge

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

if.end.validate_xmit_skb_list.exit_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %validate_xmit_skb_list.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %tail.020.i = phi ptr [ %tail.1.i, %for.inc.i.for.body.i_crit_edge ], [ inttoptr (i32 -1 to ptr), %if.end.for.body.i_crit_edge ]
  %head.019.i = phi ptr [ %head.2.i, %for.inc.i.for.body.i_crit_edge ], [ null, %if.end.for.body.i_crit_edge ]
  %skb.addr.018.i = phi ptr [ %10, %for.inc.i.for.body.i_crit_edge ], [ %skb, %if.end.for.body.i_crit_edge ]
  %9 = ptrtoint ptr %skb.addr.018.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %skb.addr.018.i, align 8
  store ptr null, ptr %skb.addr.018.i, align 8
  %prev.i = getelementptr inbounds %struct.anon.83, ptr %skb.addr.018.i, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %skb.addr.018.i, ptr %prev.i, align 4
  %call.i = call fastcc ptr @validate_xmit_skb(ptr noundef nonnull %skb.addr.018.i, ptr noundef %2, ptr noundef nonnull %again) #35
  %tobool.not.i50 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i50, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %tobool2.not.i = icmp eq ptr %head.019.i, null
  br i1 %tobool2.not.i, label %if.end.i.if.end5.i_crit_edge, label %if.else.i

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end5.i

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  %12 = ptrtoint ptr %tail.020.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call.i, ptr %tail.020.i, align 8
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.else.i, %if.end.i.if.end5.i_crit_edge
  %head.1.i = phi ptr [ %head.019.i, %if.else.i ], [ %call.i, %if.end.i.if.end5.i_crit_edge ]
  %prev6.i = getelementptr inbounds %struct.anon.83, ptr %call.i, i32 0, i32 1
  %13 = ptrtoint ptr %prev6.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev6.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end5.i, %for.body.i.for.inc.i_crit_edge
  %head.2.i = phi ptr [ %head.1.i, %if.end5.i ], [ %head.019.i, %for.body.i.for.inc.i_crit_edge ]
  %tail.1.i = phi ptr [ %14, %if.end5.i ], [ %tail.020.i, %for.body.i.for.inc.i_crit_edge ]
  %cmp.not.i = icmp eq ptr %10, null
  br i1 %cmp.not.i, label %for.inc.i.validate_xmit_skb_list.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.inc.i.validate_xmit_skb_list.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %validate_xmit_skb_list.exit

validate_xmit_skb_list.exit:                      ; preds = %for.inc.i.validate_xmit_skb_list.exit_crit_edge, %if.end.validate_xmit_skb_list.exit_crit_edge
  %head.0.lcssa.i = phi ptr [ null, %if.end.validate_xmit_skb_list.exit_crit_edge ], [ %head.2.i, %for.inc.i.validate_xmit_skb_list.exit_crit_edge ]
  %cmp.not = icmp eq ptr %head.0.lcssa.i, %skb
  br i1 %cmp.not, label %if.end6, label %validate_xmit_skb_list.exit.drop_crit_edge

validate_xmit_skb_list.exit.drop_crit_edge:       ; preds = %validate_xmit_skb_list.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %drop

if.end6:                                          ; preds = %validate_xmit_skb_list.exit
  %queue_mapping1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %15 = ptrtoint ptr %queue_mapping1.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %queue_id, ptr %queue_mapping1.i, align 8
  %conv.i = zext i16 %queue_id to i32
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 103
  %16 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %_tx.i.i, align 128
  %arrayidx.i.i = getelementptr %struct.netdev_queue, ptr %17, i32 %conv.i
  %18 = ptrtoint ptr %skb to i32
  %19 = ptrtoint ptr %2 to i32
  %20 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %21 = load volatile i32, ptr @jiffies, align 128
  %22 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %27, ptrtoint (ptr @net_rand_noise to i32)
  %28 = inttoptr i32 %add.i to ptr
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  %xor.i = xor i32 %30, %18
  %add8.i = add i32 %xor.i, %19
  %add10.i = add i32 %21, %20
  %or.i63.i = call i32 @llvm.fshl.i32(i32 %21, i32 %21, i32 8) #35
  %or.i64.i = call i32 @llvm.fshl.i32(i32 %add8.i, i32 %add8.i, i32 16) #35
  %xor14.i = xor i32 %add10.i, %or.i63.i
  %add15.i = add i32 %or.i64.i, %xor14.i
  %or.i65.i = call i32 @llvm.fshl.i32(i32 %xor14.i, i32 %xor14.i, i32 7) #35
  %xor19.i = xor i32 %add15.i, %or.i65.i
  %31 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %xor19.i, ptr %28, align 4
  call fastcc void @local_bh_disable()
  %32 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i51 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i51 to ptr
  %cpu.i52 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %cpu.i52 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cpu.i52, align 4
  %arrayidx.i53 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %35
  %36 = ptrtoint ptr %arrayidx.i53 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx.i53, align 4
  %add.i54 = add i32 %37, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11) to i32)
  %38 = inttoptr i32 %add.i54 to ptr
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %38, align 2
  %add7.i = add i16 %40, 1
  store i16 %add7.i, ptr %38, align 2
  %features = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 23
  %41 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %features, align 16
  %and = and i64 %42, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %cmp8 = icmp eq i64 %and, 0
  br i1 %cmp8, label %if.then9, label %if.end6.if.end12_crit_edge

if.end6.if.end12_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  %43 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %43, -16384
  %44 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cpu, align 4
  %_xmit_lock.i = getelementptr %struct.netdev_queue, ptr %17, i32 %conv.i, i32 10
  call void @_raw_spin_lock(ptr noundef %_xmit_lock.i) #35
  %xmit_lock_owner.i = getelementptr %struct.netdev_queue, ptr %17, i32 %conv.i, i32 11
  %47 = ptrtoint ptr %xmit_lock_owner.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile i32 %46, ptr %xmit_lock_owner.i, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %if.end6.if.end12_crit_edge
  %state.i55 = getelementptr %struct.netdev_queue, ptr %17, i32 %conv.i, i32 13
  %48 = ptrtoint ptr %state.i55 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %state.i55, align 4
  %and.i56 = and i32 %49, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i56)
  %tobool.i57.not = icmp eq i32 %and.i56, 0
  br i1 %tobool.i57.not, label %if.then14, label %if.end12.if.end16_crit_edge

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end16

if.then14:                                        ; preds = %if.end12
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 16
  %50 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %netdev_ops.i, align 8
  %52 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 3
  %54 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i58 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %55
  %56 = ptrtoint ptr %arrayidx.i.i58 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx.i.i58, align 4
  %add.i.i = add i32 %57, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11, i32 1) to i32)
  %58 = inttoptr i32 %add.i.i to ptr
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 0, ptr %58, align 1
  %ndo_start_xmit.i.i = getelementptr inbounds %struct.net_device_ops, ptr %51, i32 0, i32 4
  %60 = ptrtoint ptr %ndo_start_xmit.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ndo_start_xmit.i.i, align 4
  %call9.i.i = call i32 %61(ptr noundef %skb, ptr noundef %2) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %cmp.i = icmp eq i32 %call9.i.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.then14.if.end16_crit_edge

if.then14.if.end16_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end16

if.then.i:                                        ; preds = %if.then14
  %xmit_lock_owner.i.i = getelementptr %struct.netdev_queue, ptr %17, i32 %conv.i, i32 11
  %62 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %xmit_lock_owner.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %63)
  %cmp.not.i.i = icmp eq i32 %63, -1
  br i1 %cmp.not.i.i, label %if.then.i.if.end16_crit_edge, label %do.body2.i.i

if.then.i.if.end16_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end16

do.body2.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %64 = load volatile i32, ptr @jiffies, align 128
  %trans_start.i.i = getelementptr %struct.netdev_queue, ptr %17, i32 %conv.i, i32 12
  %65 = ptrtoint ptr %trans_start.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store volatile i32 %64, ptr %trans_start.i.i, align 16
  br label %if.end16

if.end16:                                         ; preds = %do.body2.i.i, %if.then.i.if.end16_crit_edge, %if.then14.if.end16_crit_edge, %if.end12.if.end16_crit_edge
  %ret.0 = phi i32 [ 16, %if.end12.if.end16_crit_edge ], [ %call9.i.i, %if.then14.if.end16_crit_edge ], [ 0, %if.then.i.if.end16_crit_edge ], [ 0, %do.body2.i.i ]
  %66 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %features, align 16
  %and18 = and i64 %67, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and18)
  %cmp19 = icmp eq i64 %and18, 0
  br i1 %cmp19, label %if.then20, label %if.end16.if.end22_crit_edge

if.end16.if.end22_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #37
  %xmit_lock_owner.i60 = getelementptr %struct.netdev_queue, ptr %17, i32 %conv.i, i32 11
  %68 = ptrtoint ptr %xmit_lock_owner.i60 to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile i32 -1, ptr %xmit_lock_owner.i60, align 4
  %_xmit_lock.i61 = getelementptr %struct.netdev_queue, ptr %17, i32 %conv.i, i32 10
  call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i61) #35
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end16.if.end22_crit_edge
  %69 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i62 = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i62 to ptr
  %cpu.i63 = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 3
  %71 = ptrtoint ptr %cpu.i63 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %cpu.i63, align 4
  %arrayidx.i64 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %72
  %73 = ptrtoint ptr %arrayidx.i64 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx.i64, align 4
  %add.i65 = add i32 %74, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11) to i32)
  %75 = inttoptr i32 %add.i65 to ptr
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %75, align 2
  %add7.i66 = add i16 %77, -1
  store i16 %add7.i66, ptr %75, align 2
  call fastcc void @local_bh_enable()
  br label %cleanup

drop:                                             ; preds = %validate_xmit_skb_list.exit.drop_crit_edge, %lor.rhs.drop_crit_edge, %entry.drop_crit_edge
  %skb.addr.0 = phi ptr [ %skb, %lor.rhs.drop_crit_edge ], [ %head.0.lcssa.i, %validate_xmit_skb_list.exit.drop_crit_edge ], [ %skb, %entry.drop_crit_edge ]
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 38
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %tx_dropped, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %tx_dropped, i32 1, i32 3, i32 1) #35
  %78 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tx_dropped, ptr %tx_dropped, i32 1, ptr elementtype(i32) %tx_dropped) #35, !srcloc !1326
  call void @kfree_skb_list(ptr noundef %skb.addr.0) #35
  br label %cleanup

cleanup:                                          ; preds = %drop, %if.end22
  %retval.0 = phi i32 [ 1, %drop ], [ %ret.0, %if.end22 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %again) #35
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #35
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_list(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @rps_may_expire_flow(ptr nocapture noundef readonly %dev, i16 noundef zeroext %rxq_index, i32 noundef %flow_id, i16 noundef zeroext %filter_id) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %_rx = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 87
  %0 = ptrtoint ptr %_rx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %_rx, align 4
  %conv = zext i16 %rxq_index to i32
  %2 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %rps_flow_table = getelementptr %struct.netdev_rx_queue, ptr %1, i32 %conv, i32 2
  %6 = ptrtoint ptr %rps_flow_table to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %rps_flow_table, align 4
  %call = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b47 = load i1, ptr @rps_may_expire_flow.__warned, align 1
  br i1 %.b47, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rps_may_expire_flow.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 4426, ptr noundef nonnull @.str.11) #35
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %tobool9.not = icmp eq ptr %7, null
  br i1 %tobool9.not, label %do.end7.if.end38_crit_edge, label %land.lhs.true10

do.end7.if.end38_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end38

land.lhs.true10:                                  ; preds = %do.end7
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %flow_id)
  %cmp.not = icmp ult i32 %9, %flow_id
  br i1 %cmp.not, label %land.lhs.true10.if.end38_crit_edge, label %if.then12

land.lhs.true10.if.end38_crit_edge:               ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end38

if.then12:                                        ; preds = %land.lhs.true10
  %arrayidx = getelementptr %struct.rps_dev_flow_table, ptr %7, i32 0, i32 2, i32 %flow_id
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load volatile i16, ptr %arrayidx, align 4
  %conv18 = zext i16 %11 to i32
  %filter = getelementptr %struct.rps_dev_flow_table, ptr %7, i32 0, i32 2, i32 %flow_id, i32 1
  %12 = ptrtoint ptr %filter to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %filter, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %filter_id)
  %cmp21 = icmp eq i16 %13, %filter_id
  br i1 %cmp21, label %land.lhs.true23, label %if.then12.if.end38_crit_edge

if.then12.if.end38_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end38

land.lhs.true23:                                  ; preds = %if.then12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %14 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %conv18)
  %cmp24 = icmp ugt i32 %14, %conv18
  br i1 %cmp24, label %do.body27, label %land.lhs.true23.if.end38_crit_edge

land.lhs.true23.if.end38_crit_edge:               ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end38

do.body27:                                        ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #37
  %arrayidx32 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %conv18
  %15 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx32, align 4
  %add = add i32 %16, ptrtoint (ptr @softnet_data to i32)
  %17 = inttoptr i32 %add to ptr
  %input_queue_head = getelementptr inbounds %struct.softnet_data, ptr %17, i32 0, i32 13
  %18 = ptrtoint ptr %input_queue_head to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %input_queue_head, align 128
  %last_qtail = getelementptr %struct.rps_dev_flow_table, ptr %7, i32 0, i32 2, i32 %flow_id, i32 2
  %20 = ptrtoint ptr %last_qtail to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %last_qtail, align 4
  %sub = sub i32 %19, %21
  %mul = mul i32 %9, 10
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %mul)
  %cmp34 = icmp sge i32 %sub, %mul
  br label %if.end38

if.end38:                                         ; preds = %do.body27, %land.lhs.true23.if.end38_crit_edge, %if.then12.if.end38_crit_edge, %land.lhs.true10.if.end38_crit_edge, %do.end7.if.end38_crit_edge
  %expire.0.off0 = phi i1 [ true, %land.lhs.true23.if.end38_crit_edge ], [ true, %if.then12.if.end38_crit_edge ], [ true, %land.lhs.true10.if.end38_crit_edge ], [ true, %do.end7.if.end38_crit_edge ], [ %cmp34, %do.body27 ]
  %call.i48 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i48, label %if.end38.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i51

if.end38.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i51:                                ; preds = %if.end38
  %call1.i49 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i49)
  %tobool.not.i50 = icmp eq i32 %call1.i49, 0
  br i1 %tobool.not.i50, label %land.lhs.true.i51.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i53

land.lhs.true.i51.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i51
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i53:                               ; preds = %land.lhs.true.i51
  %.b4.i52 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i52, label %land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge, label %if.then.i54

land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i53
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i54:                                      ; preds = %land.lhs.true2.i53
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i54, %land.lhs.true2.i53.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i51.rcu_read_unlock.exit_crit_edge, %if.end38.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %22 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i55 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i55 to ptr
  %preempt_count.i.i.i.i56 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i56 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i56, align 4
  %sub.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i56, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  ret i1 %expire.0.off0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_prog_run_generic_xdp(ptr noundef %skb, ptr noundef %xdp, ptr noundef %xdp_prog) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %4 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %mac_header.i, align 2
  %conv.i = zext i16 %5 to i32
  %add.ptr.i137 = getelementptr i8, ptr %3, i32 %conv.i
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %add.ptr.i137 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %idx.neg.i = sub i32 0, %sub.ptr.sub
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i.neg = sub i32 %sub.ptr.rhs.cast.i, %sub.ptr.lhs.cast
  %add.ptr = getelementptr i8, ptr %1, i32 %sub.ptr.sub.i.neg
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %6 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %end.i, align 4
  %sub.ptr.lhs.cast4 = ptrtoint ptr %7 to i32
  %sub.ptr.rhs.cast5 = ptrtoint ptr %add.ptr to i32
  %sub.ptr.sub6 = add i32 %sub.ptr.lhs.cast4, 256
  %add = sub i32 %sub.ptr.sub6, %sub.ptr.rhs.cast5
  %8 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 8
  %_rx.i = getelementptr inbounds %struct.net_device, ptr %10, i32 0, i32 87
  %11 = ptrtoint ptr %_rx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %_rx.i, align 4
  %queue_mapping.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %13 = ptrtoint ptr %queue_mapping.i.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %queue_mapping.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %cmp.i.not.i = icmp eq i16 %14, 0
  br i1 %cmp.i.not.i, label %entry.netif_get_rxqueue.exit_crit_edge, label %if.then.i

entry.netif_get_rxqueue.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_get_rxqueue.exit

if.then.i:                                        ; preds = %entry
  %sub.i.i139 = add i16 %14, -1
  %conv.i140 = zext i16 %sub.i.i139 to i32
  %real_num_rx_queues.i = getelementptr inbounds %struct.net_device, ptr %10, i32 0, i32 89
  %15 = ptrtoint ptr %real_num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %real_num_rx_queues.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %conv.i140)
  %cmp.not.i = icmp ugt i32 %16, %conv.i140
  br i1 %cmp.not.i, label %cleanup.i, label %if.then4.i, !prof !1311

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp6.i = icmp ugt i32 %16, 1
  br i1 %cmp6.i, label %land.rhs.i, label %if.then4.i.netif_get_rxqueue.exit_crit_edge

if.then4.i.netif_get_rxqueue.exit_crit_edge:      ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_get_rxqueue.exit

land.rhs.i:                                       ; preds = %if.then4.i
  %.b71.i = load i1, ptr @netif_get_rxqueue.__already_done, align 1
  br i1 %.b71.i, label %land.rhs.i.netif_get_rxqueue.exit_crit_edge, label %if.then23.i, !prof !1311

land.rhs.i.netif_get_rxqueue.exit_crit_edge:      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_get_rxqueue.exit

if.then23.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_get_rxqueue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4579, i32 noundef 9, ptr noundef nonnull @.str.139, ptr noundef %10, i32 noundef %conv.i140, i32 noundef %16) #35
  br label %netif_get_rxqueue.exit

cleanup.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  %add.ptr.i141 = getelementptr %struct.netdev_rx_queue, ptr %12, i32 %conv.i140
  br label %netif_get_rxqueue.exit

netif_get_rxqueue.exit:                           ; preds = %cleanup.i, %if.then23.i, %land.rhs.i.netif_get_rxqueue.exit_crit_edge, %if.then4.i.netif_get_rxqueue.exit_crit_edge, %entry.netif_get_rxqueue.exit_crit_edge
  %retval.1.i = phi ptr [ %add.ptr.i141, %cleanup.i ], [ %12, %entry.netif_get_rxqueue.exit_crit_edge ], [ %12, %land.rhs.i.netif_get_rxqueue.exit_crit_edge ], [ %12, %if.then23.i ], [ %12, %if.then4.i.netif_get_rxqueue.exit_crit_edge ]
  %frame_sz1.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 6
  %17 = ptrtoint ptr %frame_sz1.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %add, ptr %frame_sz1.i, align 4
  %rxq2.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 4
  %18 = ptrtoint ptr %rxq2.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %retval.1.i, ptr %rxq2.i, align 4
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %data, align 4
  %21 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i144 = ptrtoint ptr %20 to i32
  %sub.ptr.rhs.cast.i145 = ptrtoint ptr %22 to i32
  %23 = add i32 %sub.ptr.sub, %sub.ptr.rhs.cast.i145
  %sub = sub i32 %sub.ptr.lhs.cast.i144, %23
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %24 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %26 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %data_len.i, align 8
  %sub.i = add i32 %25, %sub.ptr.sub
  %add10 = sub i32 %sub.i, %27
  %add.ptr.i = getelementptr i8, ptr %add.ptr, i32 %sub
  %data_hard_start.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 3
  %28 = ptrtoint ptr %data_hard_start.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %add.ptr, ptr %data_hard_start.i, align 4
  %29 = ptrtoint ptr %xdp to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %add.ptr.i, ptr %xdp, align 4
  %add.ptr2.i = getelementptr i8, ptr %add.ptr.i, i32 %add10
  %data_end.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 1
  %30 = ptrtoint ptr %data_end.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %add.ptr2.i, ptr %data_end.i, align 4
  %data_meta.i = getelementptr inbounds %struct.xdp_buff, ptr %xdp, i32 0, i32 2
  %31 = ptrtoint ptr %data_meta.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %add.ptr.i, ptr %data_meta.i, align 4
  %32 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %8, align 8
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %33, i32 0, i32 86
  %34 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dev_addr, align 64
  %36 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %add.ptr.i, align 4
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %35, align 4
  %xor.i.i = xor i32 %39, %37
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr.i, i32 4
  %40 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %add.ptr.i.i, align 2
  %add.ptr1.i.i = getelementptr i8, ptr %35, i32 4
  %42 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %add.ptr1.i.i, align 2
  %xor37.i.i = xor i16 %43, %41
  %xor3.i.i = zext i16 %xor37.i.i to i32
  %or.i.i = or i32 %xor.i.i, %xor3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i = icmp eq i32 %or.i.i, 0
  %44 = and i32 %37, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.i.i = icmp ne i32 %44, 0
  %h_proto = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i, i32 0, i32 2
  %45 = ptrtoint ptr %h_proto to i32
  call void @__asan_loadN_noabort(i32 %45, i32 2)
  %46 = load i16, ptr %h_proto, align 1
  tail call void @__cant_migrate(ptr noundef nonnull @.str.140, i32 noundef 613) #35
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @bpf_stats_enabled_key, ptr blockaddress(@bpf_prog_run_generic_xdp, %if.then.i.i)) #35
          to label %if.else.i.i [label %if.then.i.i], !srcloc !1328

if.then.i.i:                                      ; preds = %netif_get_rxqueue.exit
  %call3.i.i = tail call i64 @sched_clock() #35
  %insnsi.i.i = getelementptr inbounds %struct.bpf_prog, ptr %xdp_prog, i32 1
  %bpf_func.i.i = getelementptr inbounds %struct.bpf_prog, ptr %xdp_prog, i32 0, i32 9
  %47 = ptrtoint ptr %bpf_func.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %bpf_func.i.i, align 4
  %call4.i.i = tail call i32 @bpf_dispatcher_xdp_func(ptr noundef %xdp, ptr noundef %insnsi.i.i, ptr noundef %48) #35
  %stats9.i.i = getelementptr inbounds %struct.bpf_prog, ptr %xdp_prog, i32 0, i32 7
  %49 = ptrtoint ptr %stats9.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %stats9.i.i, align 4
  %51 = ptrtoint ptr %50 to i32
  %52 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 3
  %54 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %55
  %56 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %57, %51
  %58 = inttoptr i32 %add.i.i to ptr
  %syncp.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %58, i32 0, i32 3
  %59 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %and.i.i.i.i = and i32 %59, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.then.i.i.do.body12.i.i.i_crit_edge

if.then.i.i.do.body12.i.i.i_crit_edge:            ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body12.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %do.body12.i.i.i

do.body12.i.i.i:                                  ; preds = %if.then.i.i.i, %if.then.i.i.do.body12.i.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %60 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.not.i.i.i.i = icmp eq i32 %60, 0
  br i1 %tobool.not.i.i.i.i, label %do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %land.lhs.true.i.i.i.i

do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %do.body12.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.lhs.true.i.i.i.i:                            ; preds = %do.body12.i.i.i
  %61 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i.i.i = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %64, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1352
  %65 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 3
  %67 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %68
  %69 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %70, ptrtoint (ptr @lockdep_recursion to i32)
  %71 = inttoptr i32 %add.i.i.i.i to ptr
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %71, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1353
  %74 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i7.i.i.i.i = and i32 %74, -16384
  %75 = inttoptr i32 %and.i.i.i7.i.i.i.i to ptr
  %preempt_count.i.i8.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %preempt_count.i.i8.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %preempt_count.i.i8.i.i.i.i, align 4
  %sub.i.i.i.i.i = add i32 %77, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i8.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %tobool20.not.i.i.i.i = icmp eq i32 %73, 0
  br i1 %tobool20.not.i.i.i.i, label %land.rhs.i.i.i.i, label %land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge

land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs.i.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i
  %78 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i.i = and i32 %78, -16384
  %79 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %cmp.i.i.i.i = icmp eq i32 %81, 0
  br i1 %cmp.i.i.i.i, label %land.rhs22.i.i.i.i, label %land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge

land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs22.i.i.i.i:                               ; preds = %land.rhs.i.i.i.i
  %82 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i9.i.i.i.i = and i32 %82, -16384
  %83 = inttoptr i32 %and.i.i.i9.i.i.i.i to ptr
  %preempt_count.i.i10.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %preempt_count.i.i10.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %preempt_count.i.i10.i.i.i.i, align 4
  %add.i11.i.i.i.i = add i32 %85, 1
  store volatile i32 %add.i11.i.i.i.i, ptr %preempt_count.i.i10.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1354
  %86 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx46.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %87
  %88 = ptrtoint ptr %arrayidx46.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %arrayidx46.i.i.i.i, align 4
  %add47.i.i.i.i = add i32 %89, ptrtoint (ptr @hardirqs_enabled to i32)
  %90 = inttoptr i32 %add47.i.i.i.i to ptr
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %90, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1355
  %93 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i12.i.i.i.i = and i32 %93, -16384
  %94 = inttoptr i32 %and.i.i.i12.i.i.i.i to ptr
  %preempt_count.i.i13.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %94, i32 0, i32 1
  %95 = ptrtoint ptr %preempt_count.i.i13.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %preempt_count.i.i13.i.i.i.i, align 4
  %sub.i14.i.i.i.i = add i32 %96, -1
  store volatile i32 %sub.i14.i.i.i.i, ptr %preempt_count.i.i13.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %tobool54.not.i.i.i.i = icmp eq i32 %92, 0
  br i1 %tobool54.not.i.i.i.i, label %land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %land.rhs58.i.i.i.i

land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs22.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %u64_stats_update_begin_irqsave.exit.i.i

land.rhs58.i.i.i.i:                               ; preds = %land.rhs22.i.i.i.i
  %.b1.i.i.i.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i.i.i.i, label %land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge: ; preds = %land.rhs58.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %u64_stats_update_begin_irqsave.exit.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs58.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 271, i32 noundef 9, ptr noundef null) #35
  br label %u64_stats_update_begin_irqsave.exit.i.i

u64_stats_update_begin_irqsave.exit.i.i:          ; preds = %if.then.i.i.i.i, %land.rhs58.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.rhs22.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.rhs.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %land.lhs.true.i.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge, %do.body12.i.i.i.u64_stats_update_begin_irqsave.exit.i.i_crit_edge
  %97 = ptrtoint ptr %syncp.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %syncp.i.i, align 4
  %inc.i.i.i.i.i.i = add i32 %98, 1
  store i32 %inc.i.i.i.i.i.i, ptr %syncp.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1356
  %dep_map.i.i.i.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %58, i32 0, i32 3, i32 0, i32 1
  %99 = tail call ptr @llvm.returnaddress(i32 0) #35
  %100 = ptrtoint ptr %99 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %100) #35
  %101 = ptrtoint ptr %58 to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %58, align 8
  %inc.i.i.i = add i64 %102, 1
  store i64 %inc.i.i.i, ptr %58, align 8
  %nsecs.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %58, i32 0, i32 1
  %call13.i.i = tail call i64 @sched_clock() #35
  %sub.i.i = sub i64 %call13.i.i, %call3.i.i
  %conv.i.i.i = and i64 %sub.i.i, 4294967295
  %103 = ptrtoint ptr %nsecs.i.i to i32
  call void @__asan_load8_noabort(i32 %103)
  %104 = load i64, ptr %nsecs.i.i, align 8
  %add.i.i.i = add i64 %conv.i.i.i, %104
  store i64 %add.i.i.i, ptr %nsecs.i.i, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i.i.i.i, i32 noundef %100) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1357
  %105 = ptrtoint ptr %syncp.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %syncp.i.i, align 4
  %inc.i.i.i.i.i = add i32 %106, 1
  store i32 %inc.i.i.i.i.i, ptr %syncp.i.i, align 4
  br i1 %tobool.not.i.i.i, label %if.then8.i.i.i, label %u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge

u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge: ; preds = %u64_stats_update_begin_irqsave.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body10.i.i.i

if.then8.i.i.i:                                   ; preds = %u64_stats_update_begin_irqsave.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_on() #35
  br label %do.body10.i.i.i

do.body10.i.i.i:                                  ; preds = %if.then8.i.i.i, %u64_stats_update_begin_irqsave.exit.i.i.do.body10.i.i.i_crit_edge
  %107 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i3.i.i = and i32 %107, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i3.i.i)
  %tobool18.not.i.i.i = icmp eq i32 %and.i.i.i3.i.i, 0
  br i1 %tobool18.not.i.i.i, label %if.then22.i.i.i, label %do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge, !prof !1310

do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge: ; preds = %do.body10.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %u64_stats_update_end_irqrestore.exit.i.i

if.then22.i.i.i:                                  ; preds = %do.body10.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %u64_stats_update_end_irqrestore.exit.i.i

u64_stats_update_end_irqrestore.exit.i.i:         ; preds = %if.then22.i.i.i, %do.body10.i.i.i.u64_stats_update_end_irqrestore.exit.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %59) #35, !srcloc !1315
  br label %__bpf_prog_run.exit.i

if.else.i.i:                                      ; preds = %netif_get_rxqueue.exit
  call void @__sanitizer_cov_trace_pc() #37
  %insnsi15.i.i = getelementptr inbounds %struct.bpf_prog, ptr %xdp_prog, i32 1
  %bpf_func17.i.i = getelementptr inbounds %struct.bpf_prog, ptr %xdp_prog, i32 0, i32 9
  %108 = ptrtoint ptr %bpf_func17.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %bpf_func17.i.i, align 4
  %call18.i.i = tail call i32 @bpf_dispatcher_xdp_func(ptr noundef %xdp, ptr noundef %insnsi15.i.i, ptr noundef %109) #35
  br label %__bpf_prog_run.exit.i

__bpf_prog_run.exit.i:                            ; preds = %if.else.i.i, %u64_stats_update_end_irqrestore.exit.i.i
  %ret.0.i.i = phi i32 [ %call4.i.i, %u64_stats_update_end_irqrestore.exit.i.i ], [ %call18.i.i, %if.else.i.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @bpf_master_redirect_enabled_key, ptr blockaddress(@bpf_prog_run_generic_xdp, %l_yes.i.i)) #35
          to label %arch_static_branch.exit.i [label %l_yes.i.i], !srcloc !1328

l_yes.i.i:                                        ; preds = %__bpf_prog_run.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %arch_static_branch.exit.i

arch_static_branch.exit.i:                        ; preds = %l_yes.i.i, %__bpf_prog_run.exit.i
  %retval.0.i.i = phi i1 [ true, %l_yes.i.i ], [ false, %__bpf_prog_run.exit.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %ret.0.i.i)
  %cmp.i = icmp eq i32 %ret.0.i.i, 3
  %or.cond.i = select i1 %retval.0.i.i, i1 %cmp.i, i1 false
  br i1 %or.cond.i, label %land.lhs.true.i, label %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge

arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge: ; preds = %arch_static_branch.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %bpf_prog_run_xdp.exit

land.lhs.true.i:                                  ; preds = %arch_static_branch.exit.i
  %110 = ptrtoint ptr %rxq2.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %rxq2.i, align 4
  %112 = ptrtoint ptr %111 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %111, align 128
  %flags.i.i = getelementptr inbounds %struct.net_device, ptr %113, i32 0, i32 14
  %114 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %flags.i.i, align 8
  %and.i.i = and i32 %115, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.bpf_prog_run_xdp.exit_crit_edge, label %netif_is_bond_slave.exit.i

land.lhs.true.i.bpf_prog_run_xdp.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %bpf_prog_run_xdp.exit

netif_is_bond_slave.exit.i:                       ; preds = %land.lhs.true.i
  %priv_flags.i.i = getelementptr inbounds %struct.net_device, ptr %113, i32 0, i32 15
  %116 = ptrtoint ptr %priv_flags.i.i to i32
  call void @__asan_load8_noabort(i32 %116)
  %117 = load i64, ptr %priv_flags.i.i, align 16
  %and1.i.i = and i64 %117, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i.i)
  %tobool2.i.not.i = icmp eq i64 %and1.i.i, 0
  br i1 %tobool2.i.not.i, label %netif_is_bond_slave.exit.i.bpf_prog_run_xdp.exit_crit_edge, label %if.then5.i

netif_is_bond_slave.exit.i.bpf_prog_run_xdp.exit_crit_edge: ; preds = %netif_is_bond_slave.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %bpf_prog_run_xdp.exit

if.then5.i:                                       ; preds = %netif_is_bond_slave.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %call6.i = tail call i32 @xdp_master_redirect(ptr noundef %xdp) #35
  br label %bpf_prog_run_xdp.exit

bpf_prog_run_xdp.exit:                            ; preds = %if.then5.i, %netif_is_bond_slave.exit.i.bpf_prog_run_xdp.exit_crit_edge, %land.lhs.true.i.bpf_prog_run_xdp.exit_crit_edge, %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge
  %act.0.i = phi i32 [ %call6.i, %if.then5.i ], [ 3, %netif_is_bond_slave.exit.i.bpf_prog_run_xdp.exit_crit_edge ], [ %ret.0.i.i, %arch_static_branch.exit.i.bpf_prog_run_xdp.exit_crit_edge ], [ 3, %land.lhs.true.i.bpf_prog_run_xdp.exit_crit_edge ]
  %118 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %xdp, align 4
  %sub.ptr.lhs.cast20 = ptrtoint ptr %119 to i32
  %sub.ptr.rhs.cast21 = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub22 = sub i32 %sub.ptr.lhs.cast20, %sub.ptr.rhs.cast21
  %tobool.not = icmp eq ptr %119, %add.ptr.i
  br i1 %tobool.not, label %bpf_prog_run_xdp.exit.if.end32_crit_edge, label %if.then

bpf_prog_run_xdp.exit.if.end32_crit_edge:         ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32

if.then:                                          ; preds = %bpf_prog_run_xdp.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.ptr.sub22)
  %cmp = icmp sgt i32 %sub.ptr.sub22, 0
  br i1 %cmp, label %if.then23, label %if.then26

if.then23:                                        ; preds = %if.then
  %120 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %len.i, align 4
  %sub.i147 = sub i32 %121, %sub.ptr.sub22
  store i32 %sub.i147, ptr %len.i, align 4
  %122 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i147, i32 %123)
  %cmp.i149 = icmp ult i32 %sub.i147, %123
  br i1 %cmp.i149, label %do.body4.i, label %__skb_pull.exit, !prof !1310

do.body4.i:                                       ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #35, !srcloc !1344
  unreachable

__skb_pull.exit:                                  ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #37
  %124 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %data, align 4
  %add.ptr.i151 = getelementptr i8, ptr %125, i32 %sub.ptr.sub22
  store ptr %add.ptr.i151, ptr %data, align 4
  br label %if.end29

if.then26:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %126 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %data, align 4
  %add.ptr.i153 = getelementptr i8, ptr %127, i32 %sub.ptr.sub22
  store ptr %add.ptr.i153, ptr %data, align 4
  %128 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %len.i, align 4
  %add.i = sub i32 %129, %sub.ptr.sub22
  store i32 %add.i, ptr %len.i, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then26, %__skb_pull.exit
  %130 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %130)
  %131 = load i16, ptr %mac_header.i, align 2
  %132 = trunc i32 %sub.ptr.sub22 to i16
  %conv31 = add i16 %131, %132
  store i16 %conv31, ptr %mac_header.i, align 2
  %133 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %data, align 4
  %135 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i157 = ptrtoint ptr %134 to i32
  %sub.ptr.rhs.cast.i158 = ptrtoint ptr %136 to i32
  %sub.ptr.sub.i159 = sub i32 %sub.ptr.lhs.cast.i157, %sub.ptr.rhs.cast.i158
  %conv.i160 = trunc i32 %sub.ptr.sub.i159 to i16
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %137 = ptrtoint ptr %network_header.i to i32
  call void @__asan_store2_noabort(i32 %137)
  store i16 %conv.i160, ptr %network_header.i, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.end29, %bpf_prog_run_xdp.exit.if.end32_crit_edge
  %138 = ptrtoint ptr %data_end.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %data_end.i, align 4
  %cmp37.not = icmp eq ptr %139, %add.ptr2.i
  br i1 %cmp37.not, label %if.end32.if.end46_crit_edge, label %if.then39

if.end32.if.end46_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end46

if.then39:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #37
  %sub.ptr.rhs.cast35 = ptrtoint ptr %add.ptr2.i to i32
  %sub.ptr.lhs.cast34 = ptrtoint ptr %139 to i32
  %sub.ptr.sub36 = sub i32 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35
  %140 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %xdp, align 4
  %sub.ptr.rhs.cast43 = ptrtoint ptr %141 to i32
  %sub.ptr.sub44 = sub i32 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast43
  %142 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %data, align 4
  %add.ptr.i162 = getelementptr i8, ptr %143, i32 %sub.ptr.sub44
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %144 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store ptr %add.ptr.i162, ptr %tail.i, align 8
  %145 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %len.i, align 4
  %add45 = add i32 %sub.ptr.sub36, %146
  store i32 %add45, ptr %len.i, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then39, %if.end32.if.end46_crit_edge
  %147 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %xdp, align 4
  %h_proto49 = getelementptr inbounds %struct.ethhdr, ptr %148, i32 0, i32 2
  %149 = ptrtoint ptr %h_proto49 to i32
  call void @__asan_loadN_noabort(i32 %149, i32 2)
  %150 = load i16, ptr %h_proto49, align 1
  call void @__sanitizer_cov_trace_cmp2(i16 %46, i16 %150)
  %cmp51.not = icmp eq i16 %46, %150
  br i1 %cmp51.not, label %lor.lhs.false, label %if.end46.if.then71_crit_edge

if.end46.if.then71_crit_edge:                     ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then71

lor.lhs.false:                                    ; preds = %if.end46
  %151 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %8, align 8
  %dev_addr57 = getelementptr inbounds %struct.net_device, ptr %152, i32 0, i32 86
  %153 = ptrtoint ptr %dev_addr57 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %dev_addr57, align 64
  %155 = ptrtoint ptr %148 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %148, align 4
  %157 = ptrtoint ptr %154 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %154, align 4
  %xor.i.i163 = xor i32 %158, %156
  %add.ptr.i.i164 = getelementptr i8, ptr %148, i32 4
  %159 = ptrtoint ptr %add.ptr.i.i164 to i32
  call void @__asan_load2_noabort(i32 %159)
  %160 = load i16, ptr %add.ptr.i.i164, align 2
  %add.ptr1.i.i165 = getelementptr i8, ptr %154, i32 4
  %161 = ptrtoint ptr %add.ptr1.i.i165 to i32
  call void @__asan_load2_noabort(i32 %161)
  %162 = load i16, ptr %add.ptr1.i.i165, align 2
  %xor37.i.i166 = xor i16 %162, %160
  %xor3.i.i167 = zext i16 %xor37.i.i166 to i32
  %or.i.i168 = or i32 %xor.i.i163, %xor3.i.i167
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i168)
  %cmp.i.i169 = icmp eq i32 %or.i.i168, 0
  %163 = xor i1 %cmp.i.i, %cmp.i.i169
  br i1 %163, label %lor.lhs.false.if.then71_crit_edge, label %lor.lhs.false62

lor.lhs.false.if.then71_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then71

lor.lhs.false62:                                  ; preds = %lor.lhs.false
  %164 = and i32 %156, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %164)
  %tobool.i.i170 = icmp ne i32 %164, 0
  %165 = xor i1 %tobool.i.i, %tobool.i.i170
  br i1 %165, label %lor.lhs.false62.if.then71_crit_edge, label %lor.lhs.false62.if.end74_crit_edge

lor.lhs.false62.if.end74_crit_edge:               ; preds = %lor.lhs.false62
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end74

lor.lhs.false62.if.then71_crit_edge:              ; preds = %lor.lhs.false62
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then71

if.then71:                                        ; preds = %lor.lhs.false62.if.then71_crit_edge, %lor.lhs.false.if.then71_crit_edge, %if.end46.if.then71_crit_edge
  %166 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %data, align 4
  %add.ptr.i172 = getelementptr i8, ptr %167, i32 -14
  store ptr %add.ptr.i172, ptr %data, align 4
  %168 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %len.i, align 4
  %add.i174 = add i32 %169, 14
  store i32 %add.i174, ptr %len.i, align 4
  %pkt_type = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %170 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %170)
  %bf.load = load i16, ptr %pkt_type, align 8
  %bf.clear = and i16 %bf.load, 8191
  store i16 %bf.clear, ptr %pkt_type, align 8
  %171 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %8, align 8
  %call73 = tail call zeroext i16 @eth_type_trans(ptr noundef %skb, ptr noundef %172) #35
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %173 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %173)
  store i16 %call73, ptr %protocol, align 8
  br label %if.end74

if.end74:                                         ; preds = %if.then71, %lor.lhs.false62.if.end74_crit_edge
  %174 = zext i32 %act.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %174, ptr @__sancov_gen_cov_switch_values.306)
  switch i32 %act.0.i, label %if.end74.sw.epilog_crit_edge [
    i32 4, label %if.end74.sw.bb_crit_edge
    i32 3, label %if.end74.sw.bb_crit_edge180
    i32 2, label %sw.bb76
  ]

if.end74.sw.bb_crit_edge180:                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb

if.end74.sw.bb_crit_edge:                         ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb

if.end74.sw.epilog_crit_edge:                     ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end74.sw.bb_crit_edge, %if.end74.sw.bb_crit_edge180
  %175 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %data, align 4
  %add.ptr.i176 = getelementptr i8, ptr %176, i32 %idx.neg.i
  store ptr %add.ptr.i176, ptr %data, align 4
  %177 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %len.i, align 4
  %add.i178 = add i32 %178, %sub.ptr.sub
  store i32 %add.i178, ptr %len.i, align 4
  br label %sw.epilog

sw.bb76:                                          ; preds = %if.end74
  %179 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %xdp, align 4
  %181 = ptrtoint ptr %data_meta.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %data_meta.i, align 4
  %tobool81.not = icmp eq ptr %180, %182
  br i1 %tobool81.not, label %sw.bb76.sw.epilog_crit_edge, label %if.then82

sw.bb76.sw.epilog_crit_edge:                      ; preds = %sw.bb76
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.epilog

if.then82:                                        ; preds = %sw.bb76
  call void @__sanitizer_cov_trace_pc() #37
  %sub.ptr.rhs.cast79 = ptrtoint ptr %182 to i32
  %sub.ptr.lhs.cast78 = ptrtoint ptr %180 to i32
  %sub.ptr.sub80 = sub i32 %sub.ptr.lhs.cast78, %sub.ptr.rhs.cast79
  %conv83 = trunc i32 %sub.ptr.sub80 to i8
  %183 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %end.i, align 4
  %meta_len1.i = getelementptr inbounds %struct.skb_shared_info, ptr %184, i32 0, i32 1
  %185 = ptrtoint ptr %meta_len1.i to i32
  call void @__asan_store1_noabort(i32 %185)
  store i8 %conv83, ptr %meta_len1.i, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then82, %sw.bb76.sw.epilog_crit_edge, %sw.bb, %if.end74.sw.epilog_crit_edge
  ret i32 %act.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @generic_xdp_tx(ptr noundef %skb, ptr noundef %xdp_prog) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  %call = tail call ptr @netdev_core_pick_tx(ptr noundef %2, ptr noundef %skb, ptr noundef null)
  %features = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 23
  %3 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %features, align 16
  %and = and i64 %4, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %cmp = icmp eq i64 %and, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %5 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu2 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu2, align 4
  %_xmit_lock.i = getelementptr inbounds %struct.netdev_queue, ptr %call, i32 0, i32 10
  tail call void @_raw_spin_lock(ptr noundef %_xmit_lock.i) #35
  %xmit_lock_owner.i = getelementptr inbounds %struct.netdev_queue, ptr %call, i32 0, i32 11
  %9 = ptrtoint ptr %xmit_lock_owner.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 %8, ptr %xmit_lock_owner.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %state.i = getelementptr inbounds %struct.netdev_queue, ptr %call, i32 0, i32 13
  %10 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %state.i, align 4
  %and.i31 = and i32 %11, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31)
  %tobool.i.not = icmp eq i32 %and.i31, 0
  br i1 %tobool.i.not, label %if.then5, label %if.end.if.end10_crit_edge

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

if.then5:                                         ; preds = %if.end
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 16
  %12 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %netdev_ops.i, align 8
  %14 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %19, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11, i32 1) to i32)
  %20 = inttoptr i32 %add.i.i to ptr
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %20, align 1
  %ndo_start_xmit.i.i = getelementptr inbounds %struct.net_device_ops, ptr %13, i32 0, i32 4
  %22 = ptrtoint ptr %ndo_start_xmit.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ndo_start_xmit.i.i, align 4
  %call9.i.i = tail call i32 %23(ptr noundef %skb, ptr noundef %2) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %cmp.i = icmp eq i32 %call9.i.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.then5.netdev_start_xmit.exit_crit_edge

if.then5.netdev_start_xmit.exit_crit_edge:        ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_start_xmit.exit

if.then.i:                                        ; preds = %if.then5
  %xmit_lock_owner.i.i = getelementptr inbounds %struct.netdev_queue, ptr %call, i32 0, i32 11
  %24 = ptrtoint ptr %xmit_lock_owner.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %xmit_lock_owner.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %cmp.not.i.i = icmp eq i32 %25, -1
  br i1 %cmp.not.i.i, label %if.then.i.netdev_start_xmit.exit_crit_edge, label %do.body2.i.i

if.then.i.netdev_start_xmit.exit_crit_edge:       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_start_xmit.exit

do.body2.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %26 = load volatile i32, ptr @jiffies, align 128
  %trans_start.i.i = getelementptr inbounds %struct.netdev_queue, ptr %call, i32 0, i32 12
  %27 = ptrtoint ptr %trans_start.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile i32 %26, ptr %trans_start.i.i, align 16
  br label %netdev_start_xmit.exit

netdev_start_xmit.exit:                           ; preds = %do.body2.i.i, %if.then.i.netdev_start_xmit.exit_crit_edge, %if.then5.netdev_start_xmit.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call9.i.i)
  %cmp.i32 = icmp sgt i32 %call9.i.i, 14
  br label %if.end10

if.end10:                                         ; preds = %netdev_start_xmit.exit, %if.end.if.end10_crit_edge
  %free_skb.0.off0 = phi i1 [ true, %if.end.if.end10_crit_edge ], [ %cmp.i32, %netdev_start_xmit.exit ]
  %28 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %features, align 16
  %and12 = and i64 %29, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and12)
  %cmp13 = icmp eq i64 %and12, 0
  br i1 %cmp13, label %if.then14, label %if.end10.if.end16_crit_edge

if.end10.if.end16_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end16

if.then14:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #37
  %xmit_lock_owner.i33 = getelementptr inbounds %struct.netdev_queue, ptr %call, i32 0, i32 11
  %30 = ptrtoint ptr %xmit_lock_owner.i33 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile i32 -1, ptr %xmit_lock_owner.i33, align 4
  %_xmit_lock.i34 = getelementptr inbounds %struct.netdev_queue, ptr %call, i32 0, i32 10
  tail call void @_raw_spin_unlock(ptr noundef %_xmit_lock.i34) #35
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end10.if.end16_crit_edge
  br i1 %free_skb.0.off0, label %if.then17, label %if.end16.if.end18_crit_edge

if.end16.if.end18_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

if.then17:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @trace_xdp_exception(ptr noundef %2, ptr noundef %xdp_prog, i32 noundef 3)
  tail call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #35
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end16.if.end18_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xdp_exception(ptr noundef %dev, ptr noundef %xdp, i32 noundef %act) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 1), ptr blockaddress(@trace_xdp_exception, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1358
  %call42 = tail call i32 @__traceiter_xdp_exception(ptr noundef null, ptr noundef %dev, ptr noundef %xdp, i32 noundef %act) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1359
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xdp_exception, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xdp_exception.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_xdp_exception.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.141, i32 noundef 51, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_xdp_generic(ptr noundef %xdp_prog, ptr noundef %skb) #1 align 64 {
entry:
  %xdp = alloca %struct.xdp_buff, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %xdp_prog, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.then

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %xdp) #35
  %redirected.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %0 = call ptr @memset(ptr %xdp, i32 255, i32 28)
  %1 = ptrtoint ptr %redirected.i.i to i32
  call void @__asan_loadN_noabort(i32 %1, i32 4)
  %bf.load.i.i = load i32, ptr %redirected.i.i, align 2
  %2 = and i32 %bf.load.i.i, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not.i = icmp eq i32 %2, 0
  br i1 %tobool.i.not.i, label %if.end.i, label %if.then.cleanup.thread_crit_edge

if.then.cleanup.thread_crit_edge:                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread

if.end.i:                                         ; preds = %if.then
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %3 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load.i49.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i49.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i49.i, -1
  br i1 %tobool.not.i.i, label %if.end.i.lor.lhs.false.i_crit_edge, label %skb_cloned.exit.i

if.end.i.lor.lhs.false.i_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %lor.lhs.false.i

skb_cloned.exit.i:                                ; preds = %if.end.i
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %4 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i.i.i, align 4
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #35
  %6 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i.i = and i32 %7, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp.i.not.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp.i.not.i, label %skb_cloned.exit.i.lor.lhs.false.i_crit_edge, label %skb_cloned.exit.i.if.then5.i_crit_edge

skb_cloned.exit.i.if.then5.i_crit_edge:           ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then5.i

skb_cloned.exit.i.lor.lhs.false.i_crit_edge:      ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %skb_cloned.exit.i.lor.lhs.false.i_crit_edge, %if.end.i.lor.lhs.false.i_crit_edge
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %8 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i50.not.i = icmp eq i32 %9, 0
  br i1 %tobool.i50.not.i, label %lor.lhs.false3.i, label %lor.lhs.false.i.if.then5.i_crit_edge

lor.lhs.false.i.if.then5.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then5.i

lor.lhs.false3.i:                                 ; preds = %lor.lhs.false.i
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %10 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %12 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %11 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %13 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %sub.ptr.sub.i.i)
  %cmp.i = icmp ult i32 %sub.ptr.sub.i.i, 256
  br i1 %cmp.i, label %lor.lhs.false3.i.if.then5.i_crit_edge, label %lor.lhs.false3.i.if.end23.i_crit_edge

lor.lhs.false3.i.if.end23.i_crit_edge:            ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end23.i

lor.lhs.false3.i.if.then5.i_crit_edge:            ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then5.i

if.then5.i:                                       ; preds = %lor.lhs.false3.i.if.then5.i_crit_edge, %lor.lhs.false.i.if.then5.i_crit_edge, %skb_cloned.exit.i.if.then5.i_crit_edge
  %data.i51.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %14 = ptrtoint ptr %data.i51.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %data.i51.i, align 4
  %head.i52.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %16 = ptrtoint ptr %head.i52.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %head.i52.i, align 8
  %sub.ptr.lhs.cast.i53.i = ptrtoint ptr %15 to i32
  %sub.ptr.rhs.cast.i54.i = ptrtoint ptr %17 to i32
  %sub.ptr.sub.i55.i = sub i32 %sub.ptr.lhs.cast.i53.i, %sub.ptr.rhs.cast.i54.i
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %18 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tail.i, align 8
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %20 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %data_len.i, align 8
  %add.ptr.i = getelementptr i8, ptr %19, i32 %21
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %22 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %end.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %23 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %notsub.i = add i32 %sub.ptr.sub.i55.i, -257
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %notsub.i)
  %cmp7.i = icmp slt i32 %notsub.i, -1
  %add.i = sub i32 383, %sub.ptr.sub.i55.i
  %and.i = and i32 %add.i, -128
  %cond.i = select i1 %cmp7.i, i32 %and.i, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.ptr.sub.i)
  %cmp8.i = icmp sgt i32 %sub.ptr.sub.i, 0
  %add10.i = add i32 %sub.ptr.sub.i, 128
  %cond13.i = select i1 %cmp8.i, i32 %add10.i, i32 0
  %call14.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef %cond.i, i32 noundef %cond13.i, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.end17.i, label %if.then5.i.do_drop.i_crit_edge

if.then5.i.do_drop.i_crit_edge:                   ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do_drop.i

if.end17.i:                                       ; preds = %if.then5.i
  %24 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i.not.i.i = icmp eq i32 %25, 0
  br i1 %tobool.i.not.i.i, label %if.end17.i.if.end23.i_crit_edge, label %cond.true.i.i

if.end17.i.if.end23.i_crit_edge:                  ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end23.i

cond.true.i.i:                                    ; preds = %if.end17.i
  %call.i.i.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %25) #35
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %cond.true.i.i.do_drop.i_crit_edge, label %cond.true.i.i.if.end23.i_crit_edge

cond.true.i.i.if.end23.i_crit_edge:               ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end23.i

cond.true.i.i.do_drop.i_crit_edge:                ; preds = %cond.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do_drop.i

if.end23.i:                                       ; preds = %cond.true.i.i.if.end23.i_crit_edge, %if.end17.i.if.end23.i_crit_edge, %lor.lhs.false3.i.if.end23.i_crit_edge
  %call24.i = call i32 @bpf_prog_run_generic_xdp(ptr noundef %skb, ptr noundef nonnull %xdp, ptr noundef nonnull %xdp_prog) #35
  %26 = zext i32 %call24.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.307)
  switch i32 %call24.i, label %sw.default.i [
    i32 4, label %if.end23.i.netif_receive_generic_xdp.exit_crit_edge
    i32 3, label %if.end23.i.netif_receive_generic_xdp.exit_crit_edge22
    i32 2, label %if.end23.i.netif_receive_generic_xdp.exit_crit_edge23
    i32 0, label %if.end23.i.sw.bb25.i_crit_edge
    i32 1, label %if.end23.i.do_drop.i_crit_edge
  ]

if.end23.i.do_drop.i_crit_edge:                   ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do_drop.i

if.end23.i.sw.bb25.i_crit_edge:                   ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb25.i

if.end23.i.netif_receive_generic_xdp.exit_crit_edge23: ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_receive_generic_xdp.exit

if.end23.i.netif_receive_generic_xdp.exit_crit_edge22: ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_receive_generic_xdp.exit

if.end23.i.netif_receive_generic_xdp.exit_crit_edge: ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_receive_generic_xdp.exit

sw.default.i:                                     ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #37
  %27 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 8
  call void @bpf_warn_invalid_xdp_action(ptr noundef %29, ptr noundef nonnull %xdp_prog, i32 noundef %call24.i) #35
  br label %sw.bb25.i

sw.bb25.i:                                        ; preds = %sw.default.i, %if.end23.i.sw.bb25.i_crit_edge
  %30 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %30, align 8
  call fastcc void @trace_xdp_exception(ptr noundef %32, ptr noundef nonnull %xdp_prog, i32 noundef %call24.i) #35
  br label %do_drop.i

do_drop.i:                                        ; preds = %sw.bb25.i, %if.end23.i.do_drop.i_crit_edge, %cond.true.i.i.do_drop.i_crit_edge, %if.then5.i.do_drop.i_crit_edge
  %act.0.i = phi i32 [ %call24.i, %sw.bb25.i ], [ %call24.i, %if.end23.i.do_drop.i_crit_edge ], [ 1, %if.then5.i.do_drop.i_crit_edge ], [ 1, %cond.true.i.i.do_drop.i_crit_edge ]
  call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #35
  br label %netif_receive_generic_xdp.exit

netif_receive_generic_xdp.exit:                   ; preds = %do_drop.i, %if.end23.i.netif_receive_generic_xdp.exit_crit_edge, %if.end23.i.netif_receive_generic_xdp.exit_crit_edge22, %if.end23.i.netif_receive_generic_xdp.exit_crit_edge23
  %retval.0.i = phi i32 [ %act.0.i, %do_drop.i ], [ %call24.i, %if.end23.i.netif_receive_generic_xdp.exit_crit_edge ], [ %call24.i, %if.end23.i.netif_receive_generic_xdp.exit_crit_edge22 ], [ %call24.i, %if.end23.i.netif_receive_generic_xdp.exit_crit_edge23 ]
  %33 = zext i32 %retval.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.308)
  switch i32 %retval.0.i, label %netif_receive_generic_xdp.exit.cleanup.thread20_crit_edge [
    i32 2, label %netif_receive_generic_xdp.exit.cleanup.thread_crit_edge
    i32 4, label %sw.bb
    i32 3, label %sw.bb5
  ]

netif_receive_generic_xdp.exit.cleanup.thread_crit_edge: ; preds = %netif_receive_generic_xdp.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread

netif_receive_generic_xdp.exit.cleanup.thread20_crit_edge: ; preds = %netif_receive_generic_xdp.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread20

sw.bb:                                            ; preds = %netif_receive_generic_xdp.exit
  %34 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 8
  %call2 = call i32 @xdp_do_generic_redirect(ptr noundef %36, ptr noundef %skb, ptr noundef nonnull %xdp, ptr noundef nonnull %xdp_prog) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %sw.bb.cleanup.thread20_crit_edge, label %out_redir

sw.bb.cleanup.thread20_crit_edge:                 ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread20

sw.bb5:                                           ; preds = %netif_receive_generic_xdp.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @generic_xdp_tx(ptr noundef %skb, ptr noundef nonnull %xdp_prog)
  br label %cleanup.thread20

cleanup.thread20:                                 ; preds = %sw.bb5, %sw.bb.cleanup.thread20_crit_edge, %netif_receive_generic_xdp.exit.cleanup.thread20_crit_edge
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %xdp) #35
  br label %return

cleanup.thread:                                   ; preds = %netif_receive_generic_xdp.exit.cleanup.thread_crit_edge, %if.then.cleanup.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %xdp) #35
  br label %return

out_redir:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %xdp) #35
  call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #35
  br label %return

return:                                           ; preds = %out_redir, %cleanup.thread, %cleanup.thread20, %entry.return_crit_edge
  %retval.1 = phi i32 [ 1, %out_redir ], [ 1, %cleanup.thread20 ], [ 2, %cleanup.thread ], [ 2, %entry.return_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_do_generic_redirect(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_rx(ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_netif_rx_entry(ptr noundef %skb)
  %call = tail call fastcc i32 @netif_rx_internal(ptr noundef %skb), !range !1362
  tail call fastcc void @trace_netif_rx_exit(i32 noundef %call)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_rx_entry(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_entry, i32 0, i32 1), ptr blockaddress(@trace_netif_rx_entry, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1363
  %call42 = tail call i32 @__traceiter_netif_rx_entry(ptr noundef null, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1364
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_entry, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_entry, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_rx_entry.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_rx_entry.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 261, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_rx_exit(i32 noundef %ret) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_exit, i32 0, i32 1), ptr blockaddress(@trace_netif_rx_exit, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1365
  %call42 = tail call i32 @__traceiter_netif_rx_exit(ptr noundef null, i32 noundef %ret) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1366
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_exit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_rx_exit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_rx_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 313, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_rx_ni_entry(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_ni_entry, i32 0, i32 1), ptr blockaddress(@trace_netif_rx_ni_entry, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1367
  %call42 = tail call i32 @__traceiter_netif_rx_ni_entry(ptr noundef null, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1368
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_ni_entry, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_ni_entry, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_rx_ni_entry.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_rx_ni_entry.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 268, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_softirq() local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_rx_ni_exit(i32 noundef %ret) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_ni_exit, i32 0, i32 1), ptr blockaddress(@trace_netif_rx_ni_exit, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1369
  %call42 = tail call i32 @__traceiter_netif_rx_ni_exit(ptr noundef null, i32 noundef %ret) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1370
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_ni_exit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx_ni_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_rx_ni_exit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_rx_ni_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 320, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_rx_any_context(ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i9 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i9 to ptr
  %preempt_count.i10 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i10 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i10, align 4
  %and2 = and i32 %7, 983040
  %or = or i32 %and2, %and
  %8 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i11 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i11 to ptr
  %preempt_count.i12 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i12 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i12, align 4
  %and4 = and i32 %11, 65280
  %or5 = or i32 %or, %and4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5)
  %tobool.not = icmp eq i32 %or5, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @trace_netif_rx_entry(ptr noundef %skb) #35
  %call.i = tail call fastcc i32 @netif_rx_internal(ptr noundef %skb) #35, !range !1362
  tail call fastcc void @trace_netif_rx_exit(i32 noundef %call.i) #35
  br label %return

if.else:                                          ; preds = %entry
  tail call fastcc void @trace_netif_rx_ni_entry(ptr noundef %skb) #35
  %12 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %15, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1345
  %call.i13 = tail call fastcc i32 @netif_rx_internal(ptr noundef %skb) #35
  %16 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i14 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i14 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %21, ptrtoint (ptr @irq_stat to i32)
  %22 = inttoptr i32 %add.i to ptr
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i = icmp eq i32 %24, 0
  br i1 %tobool.not.i, label %if.else.netif_rx_ni.exit_crit_edge, label %if.then.i

if.else.netif_rx_ni.exit_crit_edge:               ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_rx_ni.exit

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @do_softirq() #35
  br label %netif_rx_ni.exit

netif_rx_ni.exit:                                 ; preds = %if.then.i, %if.else.netif_rx_ni.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1346
  %25 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i18.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i.i18.i to ptr
  %preempt_count.i.i19.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %preempt_count.i.i19.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %preempt_count.i.i19.i, align 4
  %sub.i.i = add i32 %28, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i19.i, align 4
  tail call fastcc void @trace_netif_rx_ni_exit(i32 noundef %call.i13) #35
  br label %return

return:                                           ; preds = %netif_rx_ni.exit, %if.then
  %retval.0 = phi i32 [ %call.i, %if.then ], [ %call.i13, %netif_rx_ni.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_is_rx_handler_busy(ptr noundef readonly %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b57 = load i1, ptr @netdev_is_rx_handler_busy.__already_done, align 1
  br i1 %.b57, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_is_rx_handler_busy.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5043, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 5043) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %tobool37.not = icmp eq ptr %dev, null
  br i1 %tobool37.not, label %if.end29.land.end51_crit_edge, label %do.body39

if.end29.land.end51_crit_edge:                    ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %land.end51

do.body39:                                        ; preds = %if.end29
  %call40 = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call40, label %do.body39.do.end48_crit_edge, label %land.lhs.true

do.body39.do.end48_crit_edge:                     ; preds = %do.body39
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end48

land.lhs.true:                                    ; preds = %do.body39
  %call41 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %land.lhs.true.do.end48_crit_edge, label %land.lhs.true43

land.lhs.true.do.end48_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end48

land.lhs.true43:                                  ; preds = %land.lhs.true
  %.b5556 = load i1, ptr @netdev_is_rx_handler_busy.__warned, align 1
  br i1 %.b5556, label %land.lhs.true43.do.end48_crit_edge, label %if.then45

land.lhs.true43.do.end48_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end48

if.then45:                                        ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_is_rx_handler_busy.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5044, ptr noundef nonnull @.str.10) #35
  br label %do.end48

do.end48:                                         ; preds = %if.then45, %land.lhs.true43.do.end48_crit_edge, %land.lhs.true.do.end48_crit_edge, %do.body39.do.end48_crit_edge
  %rx_handler = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 94
  %0 = ptrtoint ptr %rx_handler to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rx_handler, align 32
  %tobool50 = icmp ne ptr %1, null
  br label %land.end51

land.end51:                                       ; preds = %do.end48, %if.end29.land.end51_crit_edge
  %2 = phi i1 [ false, %if.end29.land.end51_crit_edge ], [ %tobool50, %do.end48 ]
  ret i1 %2
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @lockdep_rtnl_is_held() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_rx_handler_register(ptr noundef %dev, ptr noundef %rx_handler, ptr noundef %rx_handler_data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @netdev_is_rx_handler_busy(ptr noundef %dev)
  br i1 %call, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end:                                           ; preds = %entry
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 15
  %0 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %priv_flags, align 16
  %and = and i64 %1, 67108864
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %do.body, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1371
  %rx_handler_data25 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 95
  %2 = ptrtoint ptr %rx_handler_data25 to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %rx_handler_data, ptr %rx_handler_data25, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1372
  %rx_handler66 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 94
  %3 = ptrtoint ptr %rx_handler66 to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %rx_handler, ptr %rx_handler66, align 32
  br label %return

return:                                           ; preds = %do.body, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %do.body ], [ -16, %entry.return_crit_edge ], [ -22, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_rx_handler_unregister(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b64 = load i1, ptr @netdev_rx_handler_unregister.__already_done, align 1
  br i1 %.b64, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_rx_handler_unregister.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5091, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 5091) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %rx_handler = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 94
  %0 = ptrtoint ptr %rx_handler to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr null, ptr %rx_handler, align 32
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu_expedited() #35
  br label %synchronize_net.exit

if.else.i:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu() #35
  br label %synchronize_net.exit

synchronize_net.exit:                             ; preds = %if.else.i, %if.then.i
  %rx_handler_data = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 95
  %1 = ptrtoint ptr %rx_handler_data to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr null, ptr %rx_handler_data, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_receive_skb_core(ptr noundef %skb) #1 align 64 {
entry:
  %skb.addr.i = alloca ptr, align 4
  %pt_prev.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb.addr.i)
  %4 = ptrtoint ptr %skb.addr.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %skb, ptr %skb.addr.i, align 4
  %5 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pt_prev.i) #35
  %8 = ptrtoint ptr %pt_prev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %pt_prev.i, align 4
  %call.i1 = call fastcc i32 @__netif_receive_skb_core(ptr noundef nonnull %skb.addr.i, i1 noundef zeroext false, ptr noundef nonnull %pt_prev.i) #35
  %9 = ptrtoint ptr %pt_prev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pt_prev.i, align 4
  %tobool1.not.i = icmp eq ptr %10, null
  br i1 %tobool1.not.i, label %rcu_read_lock.exit.__netif_receive_skb_one_core.exit_crit_edge, label %if.then.i2

rcu_read_lock.exit.__netif_receive_skb_one_core.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_one_core.exit

if.then.i2:                                       ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  %func.i = getelementptr inbounds %struct.packet_type, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %func.i, align 4
  %13 = ptrtoint ptr %skb.addr.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %skb.addr.i, align 4
  %15 = getelementptr inbounds %struct.anon.83, ptr %14, i32 0, i32 2
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 8
  %call2.i = tail call i32 %12(ptr noundef %14, ptr noundef %17, ptr noundef nonnull %10, ptr noundef %7) #35
  br label %__netif_receive_skb_one_core.exit

__netif_receive_skb_one_core.exit:                ; preds = %if.then.i2, %rcu_read_lock.exit.__netif_receive_skb_one_core.exit_crit_edge
  %ret.0.i = phi i32 [ %call2.i, %if.then.i2 ], [ %call.i1, %rcu_read_lock.exit.__netif_receive_skb_one_core.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pt_prev.i) #35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb.addr.i)
  %call.i3 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i3, label %__netif_receive_skb_one_core.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i6

__netif_receive_skb_one_core.exit.rcu_read_unlock.exit_crit_edge: ; preds = %__netif_receive_skb_one_core.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i6:                                 ; preds = %__netif_receive_skb_one_core.exit
  %call1.i4 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4)
  %tobool.not.i5 = icmp eq i32 %call1.i4, 0
  br i1 %tobool.not.i5, label %land.lhs.true.i6.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i8

land.lhs.true.i6.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i6
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i8:                                ; preds = %land.lhs.true.i6
  %.b4.i7 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7, label %land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge, label %if.then.i9

land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i8
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i9:                                       ; preds = %land.lhs.true2.i8
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i9, %land.lhs.true2.i8.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i6.rcu_read_unlock.exit_crit_edge, %__netif_receive_skb_one_core.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %18 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i10 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i.i10 to ptr
  %preempt_count.i.i.i.i11 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i.i.i11, align 4
  %sub.i.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i11, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  ret i32 %ret.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_receive_skb_list_internal(ptr noundef %head) local_unnamed_addr #1 align 64 {
entry:
  %sublist = alloca %struct.list_head, align 4
  %voidflow = alloca %struct.rps_dev_flow, align 8
  %rflow = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sublist) #35
  %0 = getelementptr inbounds %struct.list_head, ptr %sublist, i32 0, i32 1
  %1 = ptrtoint ptr %sublist to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %sublist, ptr %sublist, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %sublist, ptr %0, align 4
  %3 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %head, align 4
  %cmp.not105 = icmp eq ptr %4, %head
  br i1 %cmp.not105, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %skb.0106 = phi ptr [ %next.0107, %for.inc.for.body_crit_edge ], [ %4, %entry.for.body_crit_edge ]
  %5 = ptrtoint ptr %skb.0106 to i32
  call void @__asan_load4_noabort(i32 %5)
  %next.0107 = load ptr, ptr %skb.0106, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @netstamp_needed_key, ptr blockaddress(@netif_receive_skb_list_internal, %if.then)) #35
          to label %if.end13 [label %if.then], !srcloc !1328

if.then:                                          ; preds = %for.body
  %6 = load i32, ptr @netdev_tstamp_prequeue, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool10.not = icmp eq i32 %6, 0
  br i1 %tobool10.not, label %if.then.if.end13_crit_edge, label %land.lhs.true

if.then.if.end13_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end13

land.lhs.true:                                    ; preds = %if.then
  %7 = getelementptr inbounds %struct.sk_buff, ptr %skb.0106, i32 0, i32 2
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %9)
  %tobool11.not = icmp eq i64 %9, 0
  br i1 %tobool11.not, label %if.then12, label %land.lhs.true.if.end13_crit_edge

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end13

if.then12:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i = call i64 @ktime_get_with_offset(i32 noundef 0) #35
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %call.i.i, ptr %7, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %land.lhs.true.if.end13_crit_edge, %if.then.if.end13_crit_edge, %for.body
  %call.i.i82 = call zeroext i1 @__list_del_entry_valid(ptr noundef %skb.0106) #35
  br i1 %call.i.i82, label %if.end.i.i, label %if.end13.skb_list_del_init.exit_crit_edge

if.end13.skb_list_del_init.exit_crit_edge:        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_list_del_init.exit

if.end.i.i:                                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %skb.0106, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev.i.i, align 4
  %13 = ptrtoint ptr %skb.0106 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %skb.0106, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev1.i.i.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %14, ptr %12, align 4
  br label %skb_list_del_init.exit

skb_list_del_init.exit:                           ; preds = %if.end.i.i, %if.end13.skb_list_del_init.exit_crit_edge
  %17 = ptrtoint ptr %skb.0106 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %skb.0106, align 8
  %call14 = call zeroext i1 @skb_defer_rx_timestamp(ptr noundef %skb.0106) #35
  br i1 %call14, label %skb_list_del_init.exit.for.inc_crit_edge, label %if.then15

skb_list_del_init.exit.for.inc_crit_edge:         ; preds = %skb_list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.then15:                                        ; preds = %skb_list_del_init.exit
  %18 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %0, align 4
  %call.i.i84 = call zeroext i1 @__list_add_valid(ptr noundef %skb.0106, ptr noundef %19, ptr noundef nonnull %sublist) #35
  br i1 %call.i.i84, label %if.end.i.i85, label %if.then15.for.inc_crit_edge

if.then15.for.inc_crit_edge:                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.end.i.i85:                                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #37
  %20 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %skb.0106, ptr %0, align 4
  %21 = ptrtoint ptr %skb.0106 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %sublist, ptr %skb.0106, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %skb.0106, i32 0, i32 1
  %22 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %19, ptr %prev3.i.i, align 4
  %23 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %skb.0106, ptr %19, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i85, %if.then15.for.inc_crit_edge, %skb_list_del_init.exit.for.inc_crit_edge
  %cmp.not = icmp eq ptr %next.0107, %head
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %24 = ptrtoint ptr %sublist to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %sublist, align 4
  %cmp.i.not.i = icmp eq ptr %25, %sublist
  br i1 %cmp.i.not.i, label %for.end.list_splice_init.exit_crit_edge, label %if.then.i87

for.end.list_splice_init.exit_crit_edge:          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_splice_init.exit

if.then.i87:                                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  %26 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %head, align 4
  %28 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %0, align 4
  %prev3.i.i86 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %30 = ptrtoint ptr %prev3.i.i86 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %head, ptr %prev3.i.i86, align 4
  store ptr %25, ptr %head, align 4
  %31 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %27, ptr %29, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %32 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev6.i.i, align 4
  %33 = ptrtoint ptr %sublist to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %sublist, ptr %sublist, align 4
  store ptr %sublist, ptr %0, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i87, %for.end.list_splice_init.exit_crit_edge
  %34 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %37, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %list_splice_init.exit.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

list_splice_init.exit.rcu_read_lock.exit_crit_edge: ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %list_splice_init.exit
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %list_splice_init.exit.rcu_read_lock.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @rps_needed, ptr blockaddress(@netif_receive_skb_list_internal, %if.then32)) #35
          to label %if.end57 [label %if.then32], !srcloc !1328

if.then32:                                        ; preds = %rcu_read_lock.exit
  %38 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %head, align 4
  %cmp42.not109 = icmp eq ptr %39, %head
  br i1 %cmp42.not109, label %if.then32.if.end57_crit_edge, label %if.then32.for.body45_crit_edge

if.then32.for.body45_crit_edge:                   ; preds = %if.then32
  br label %for.body45

if.then32.if.end57_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end57

for.body45:                                       ; preds = %if.end50.for.body45_crit_edge, %if.then32.for.body45_crit_edge
  %skb.1110 = phi ptr [ %next.1112, %if.end50.for.body45_crit_edge ], [ %39, %if.then32.for.body45_crit_edge ]
  %40 = ptrtoint ptr %skb.1110 to i32
  call void @__asan_load4_noabort(i32 %40)
  %next.1112 = load ptr, ptr %skb.1110, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %voidflow) #35
  %41 = ptrtoint ptr %voidflow to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 -1, ptr %voidflow, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rflow) #35
  %42 = ptrtoint ptr %rflow to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %voidflow, ptr %rflow, align 4
  %43 = getelementptr inbounds %struct.anon.83, ptr %skb.1110, i32 0, i32 2
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %43, align 8
  %call46 = call fastcc i32 @get_rps_cpu(ptr noundef %45, ptr noundef %skb.1110, ptr noundef nonnull %rflow)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call46)
  %cmp47 = icmp sgt i32 %call46, -1
  br i1 %cmp47, label %if.then48, label %for.body45.if.end50_crit_edge

for.body45.if.end50_crit_edge:                    ; preds = %for.body45
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end50

if.then48:                                        ; preds = %for.body45
  %call.i.i88 = call zeroext i1 @__list_del_entry_valid(ptr noundef %skb.1110) #35
  br i1 %call.i.i88, label %if.end.i.i91, label %if.then48.skb_list_del_init.exit92_crit_edge

if.then48.skb_list_del_init.exit92_crit_edge:     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_list_del_init.exit92

if.end.i.i91:                                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i89 = getelementptr inbounds %struct.list_head, ptr %skb.1110, i32 0, i32 1
  %46 = ptrtoint ptr %prev.i.i89 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %prev.i.i89, align 4
  %48 = ptrtoint ptr %skb.1110 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %skb.1110, align 4
  %prev1.i.i.i90 = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %prev1.i.i.i90 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %47, ptr %prev1.i.i.i90, align 4
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %49, ptr %47, align 4
  br label %skb_list_del_init.exit92

skb_list_del_init.exit92:                         ; preds = %if.end.i.i91, %if.then48.skb_list_del_init.exit92_crit_edge
  %52 = ptrtoint ptr %skb.1110 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr null, ptr %skb.1110, align 8
  %53 = ptrtoint ptr %rflow to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %rflow, align 4
  %last_qtail = getelementptr inbounds %struct.rps_dev_flow, ptr %54, i32 0, i32 2
  %call49 = call fastcc i32 @enqueue_to_backlog(ptr noundef %skb.1110, i32 noundef %call46, ptr noundef %last_qtail)
  br label %if.end50

if.end50:                                         ; preds = %skb_list_del_init.exit92, %for.body45.if.end50_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rflow) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %voidflow) #35
  %cmp42.not = icmp eq ptr %next.1112, %head
  br i1 %cmp42.not, label %if.end50.if.end57_crit_edge, label %if.end50.for.body45_crit_edge

if.end50.for.body45_crit_edge:                    ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body45

if.end50.if.end57_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end57

if.end57:                                         ; preds = %if.end50.if.end57_crit_edge, %if.then32.if.end57_crit_edge, %rcu_read_lock.exit
  call fastcc void @__netif_receive_skb_list(ptr noundef %head)
  %call.i93 = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i93, label %if.end57.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i96

if.end57.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i96:                                ; preds = %if.end57
  %call1.i94 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i94)
  %tobool.not.i95 = icmp eq i32 %call1.i94, 0
  br i1 %tobool.not.i95, label %land.lhs.true.i96.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i98

land.lhs.true.i96.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i96
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i98:                               ; preds = %land.lhs.true.i96
  %.b4.i97 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i97, label %land.lhs.true2.i98.rcu_read_unlock.exit_crit_edge, label %if.then.i99

land.lhs.true2.i98.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i98
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i99:                                      ; preds = %land.lhs.true2.i98
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i99, %land.lhs.true2.i98.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i96.rcu_read_unlock.exit_crit_edge, %if.end57.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %55 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i100 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i.i.i.i100 to ptr
  %preempt_count.i.i.i.i101 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 1
  %57 = ptrtoint ptr %preempt_count.i.i.i.i101 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %preempt_count.i.i.i.i101, align 4
  %sub.i.i.i = add i32 %58, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i101, align 4
  call void @rcu_read_unlock_strict() #35
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sublist) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @skb_defer_rx_timestamp(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @get_rps_cpu(ptr noundef %dev, ptr noundef %skb, ptr nocapture noundef writeonly %rflowp) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %_rx = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 87
  %0 = ptrtoint ptr %_rx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %_rx, align 4
  %queue_mapping.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %2 = ptrtoint ptr %queue_mapping.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %queue_mapping.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %cmp.i.not = icmp eq i16 %3, 0
  br i1 %cmp.i.not, label %entry.if.end56_crit_edge, label %if.then

entry.if.end56_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end56

if.then:                                          ; preds = %entry
  %sub.i = add i16 %3, -1
  %conv = zext i16 %sub.i to i32
  %real_num_rx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 89
  %4 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %real_num_rx_queues, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %conv)
  %cmp.not = icmp ugt i32 %5, %conv
  br i1 %cmp.not, label %cleanup, label %if.then4, !prof !1311

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp6 = icmp ugt i32 %5, 1
  br i1 %cmp6, label %land.rhs, label %if.then4.cleanup177_crit_edge

if.then4.cleanup177_crit_edge:                    ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup177

land.rhs:                                         ; preds = %if.then4
  %.b235 = load i1, ptr @get_rps_cpu.__already_done, align 1
  br i1 %.b235, label %land.rhs.cleanup177_crit_edge, label %if.then23, !prof !1311

land.rhs.cleanup177_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup177

if.then23:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @get_rps_cpu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4326, i32 noundef 9, ptr noundef nonnull @.str.139, ptr noundef %dev, i32 noundef %conv, i32 noundef %5) #35
  br label %cleanup177

cleanup:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %add.ptr = getelementptr %struct.netdev_rx_queue, ptr %1, i32 %conv
  br label %if.end56

if.end56:                                         ; preds = %cleanup, %entry.if.end56_crit_edge
  %rxqueue.1 = phi ptr [ %add.ptr, %cleanup ], [ %1, %entry.if.end56_crit_edge ]
  %rps_flow_table = getelementptr inbounds %struct.netdev_rx_queue, ptr %rxqueue.1, i32 0, i32 2
  %6 = ptrtoint ptr %rps_flow_table to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %rps_flow_table, align 4
  %call62 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %tobool63.not = icmp eq i32 %call62, 0
  br i1 %tobool63.not, label %land.lhs.true, label %if.end56.do.end71_crit_edge

if.end56.do.end71_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end71

land.lhs.true:                                    ; preds = %if.end56
  %call64 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %land.lhs.true.do.end71_crit_edge, label %land.lhs.true66

land.lhs.true.do.end71_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end71

land.lhs.true66:                                  ; preds = %land.lhs.true
  %.b229234 = load i1, ptr @get_rps_cpu.__warned, align 1
  br i1 %.b229234, label %land.lhs.true66.do.end71_crit_edge, label %if.then68

land.lhs.true66.do.end71_crit_edge:               ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end71

if.then68:                                        ; preds = %land.lhs.true66
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @get_rps_cpu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 4334, ptr noundef nonnull @.str.11) #35
  br label %do.end71

do.end71:                                         ; preds = %if.then68, %land.lhs.true66.do.end71_crit_edge, %land.lhs.true.do.end71_crit_edge, %if.end56.do.end71_crit_edge
  %rps_map = getelementptr inbounds %struct.netdev_rx_queue, ptr %rxqueue.1, i32 0, i32 1
  %8 = ptrtoint ptr %rps_map to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %rps_map, align 128
  %call78 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %land.lhs.true80, label %do.end71.do.end88_crit_edge

do.end71.do.end88_crit_edge:                      ; preds = %do.end71
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end88

land.lhs.true80:                                  ; preds = %do.end71
  %call81 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call81)
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %land.lhs.true80.do.end88_crit_edge, label %land.lhs.true83

land.lhs.true80.do.end88_crit_edge:               ; preds = %land.lhs.true80
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end88

land.lhs.true83:                                  ; preds = %land.lhs.true80
  %.b230233 = load i1, ptr @get_rps_cpu.__warned.147, align 1
  br i1 %.b230233, label %land.lhs.true83.do.end88_crit_edge, label %if.then85

land.lhs.true83.do.end88_crit_edge:               ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end88

if.then85:                                        ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @get_rps_cpu.__warned.147, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 4335, ptr noundef nonnull @.str.11) #35
  br label %do.end88

do.end88:                                         ; preds = %if.then85, %land.lhs.true83.do.end88_crit_edge, %land.lhs.true80.do.end88_crit_edge, %do.end71.do.end88_crit_edge
  %tobool90.not = icmp eq ptr %7, null
  %tobool92.not = icmp eq ptr %9, null
  %or.cond = select i1 %tobool90.not, i1 %tobool92.not, i1 false
  br i1 %or.cond, label %do.end88.cleanup177_crit_edge, label %if.end94

do.end88.cleanup177_crit_edge:                    ; preds = %do.end88
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup177

if.end94:                                         ; preds = %do.end88
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %10 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %12 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %11 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %13 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = trunc i32 %sub.ptr.sub.i to i16
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %14 = ptrtoint ptr %network_header.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %conv.i, ptr %network_header.i, align 4
  %l4_hash.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %15 = ptrtoint ptr %l4_hash.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %bf.load.i = load i16, ptr %l4_hash.i, align 8
  %16 = and i16 %bf.load.i, 192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %if.then.i, label %if.end94.skb_get_hash.exit_crit_edge

if.end94.skb_get_hash.exit_crit_edge:             ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_get_hash.exit

if.then.i:                                        ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__skb_get_hash(ptr noundef %skb) #35
  br label %skb_get_hash.exit

skb_get_hash.exit:                                ; preds = %if.then.i, %if.end94.skb_get_hash.exit_crit_edge
  %hash.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %18 = ptrtoint ptr %hash.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %hash.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool96.not = icmp eq i32 %19, 0
  br i1 %tobool96.not, label %skb_get_hash.exit.cleanup177_crit_edge, label %if.end98

skb_get_hash.exit.cleanup177_crit_edge:           ; preds = %skb_get_hash.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup177

if.end98:                                         ; preds = %skb_get_hash.exit
  %20 = load volatile ptr, ptr @rps_sock_flow_table, align 4
  %call104 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104)
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %land.lhs.true106, label %if.end98.do.end114_crit_edge

if.end98.do.end114_crit_edge:                     ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end114

land.lhs.true106:                                 ; preds = %if.end98
  %call107 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call107)
  %tobool108.not = icmp eq i32 %call107, 0
  br i1 %tobool108.not, label %land.lhs.true106.do.end114_crit_edge, label %land.lhs.true109

land.lhs.true106.do.end114_crit_edge:             ; preds = %land.lhs.true106
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end114

land.lhs.true109:                                 ; preds = %land.lhs.true106
  %.b231232 = load i1, ptr @get_rps_cpu.__warned.148, align 1
  br i1 %.b231232, label %land.lhs.true109.do.end114_crit_edge, label %if.then111

land.lhs.true109.do.end114_crit_edge:             ; preds = %land.lhs.true109
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end114

if.then111:                                       ; preds = %land.lhs.true109
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @get_rps_cpu.__warned.148, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 4344, ptr noundef nonnull @.str.11) #35
  br label %do.end114

do.end114:                                        ; preds = %if.then111, %land.lhs.true109.do.end114_crit_edge, %land.lhs.true106.do.end114_crit_edge, %if.end98.do.end114_crit_edge
  %tobool118.not = icmp eq ptr %20, null
  %or.cond237 = select i1 %tobool90.not, i1 true, i1 %tobool118.not
  br i1 %or.cond237, label %do.end114.try_rps_crit_edge, label %if.then119

do.end114.try_rps_crit_edge:                      ; preds = %do.end114
  call void @__sanitizer_cov_trace_pc() #37
  br label %try_rps

if.then119:                                       ; preds = %do.end114
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 128
  %and = and i32 %22, %19
  %arrayidx = getelementptr %struct.rps_sock_flow_table, ptr %20, i32 0, i32 2, i32 %and
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx, align 4
  %xor = xor i32 %24, %19
  %25 = load i32, ptr @rps_cpu_mask, align 4
  %neg = xor i32 %25, -1
  %and120 = and i32 %xor, %neg
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and120)
  %tobool121.not = icmp eq i32 %and120, 0
  br i1 %tobool121.not, label %if.end123, label %if.then119.try_rps_crit_edge

if.then119.try_rps_crit_edge:                     ; preds = %if.then119
  call void @__sanitizer_cov_trace_pc() #37
  br label %try_rps

if.end123:                                        ; preds = %if.then119
  %and124 = and i32 %25, %24
  %26 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %7, align 4
  %and126 = and i32 %27, %19
  %arrayidx127 = getelementptr %struct.rps_dev_flow_table, ptr %7, i32 0, i32 2, i32 %and126
  %28 = ptrtoint ptr %arrayidx127 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %arrayidx127, align 4
  %conv129 = zext i16 %29 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %and124, i32 %conv129)
  %cmp130.not = icmp eq i32 %and124, %conv129
  br i1 %cmp130.not, label %if.end123.if.end154_crit_edge, label %land.lhs.true138, !prof !1311

if.end123.if.end154_crit_edge:                    ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end154

land.lhs.true138:                                 ; preds = %if.end123
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %30 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %conv129)
  %cmp139.not = icmp ugt i32 %30, %conv129
  br i1 %cmp139.not, label %lor.lhs.false, label %land.lhs.true138.if.then151_crit_edge

land.lhs.true138.if.then151_crit_edge:            ; preds = %land.lhs.true138
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then151

lor.lhs.false:                                    ; preds = %land.lhs.true138
  %call141 = tail call fastcc zeroext i1 @cpu_online(i32 noundef %conv129)
  br i1 %call141, label %do.body143, label %lor.lhs.false.if.then151_crit_edge

lor.lhs.false.if.then151_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then151

do.body143:                                       ; preds = %lor.lhs.false
  %arrayidx148 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %conv129
  %31 = ptrtoint ptr %arrayidx148 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx148, align 4
  %add = add i32 %32, ptrtoint (ptr @softnet_data to i32)
  %33 = inttoptr i32 %add to ptr
  %input_queue_head = getelementptr inbounds %struct.softnet_data, ptr %33, i32 0, i32 13
  %34 = ptrtoint ptr %input_queue_head to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %input_queue_head, align 128
  %last_qtail = getelementptr %struct.rps_dev_flow_table, ptr %7, i32 0, i32 2, i32 %and126, i32 2
  %36 = ptrtoint ptr %last_qtail to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %last_qtail, align 4
  %sub = sub i32 %35, %37
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub)
  %cmp149 = icmp sgt i32 %sub, -1
  br i1 %cmp149, label %do.body143.if.then151_crit_edge, label %do.body143.if.end154_crit_edge

do.body143.if.end154_crit_edge:                   ; preds = %do.body143
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end154

do.body143.if.then151_crit_edge:                  ; preds = %do.body143
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then151

if.then151:                                       ; preds = %do.body143.if.then151_crit_edge, %lor.lhs.false.if.then151_crit_edge, %land.lhs.true138.if.then151_crit_edge
  %conv152 = trunc i32 %and124 to i16
  %call153 = tail call fastcc ptr @set_rps_cpu(ptr noundef %dev, ptr noundef %skb, ptr noundef %arrayidx127, i16 noundef zeroext %conv152)
  br label %if.end154

if.end154:                                        ; preds = %if.then151, %do.body143.if.end154_crit_edge, %if.end123.if.end154_crit_edge
  %tcpu.0 = phi i32 [ %and124, %if.then151 ], [ %conv129, %do.body143.if.end154_crit_edge ], [ %and124, %if.end123.if.end154_crit_edge ]
  %rflow.0 = phi ptr [ %call153, %if.then151 ], [ %arrayidx127, %do.body143.if.end154_crit_edge ], [ %arrayidx127, %if.end123.if.end154_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %38 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %tcpu.0, i32 %38)
  %cmp155 = icmp ult i32 %tcpu.0, %38
  br i1 %cmp155, label %cpu_online.exit, label %if.end154.try_rps_crit_edge

if.end154.try_rps_crit_edge:                      ; preds = %if.end154
  call void @__sanitizer_cov_trace_pc() #37
  br label %try_rps

cpu_online.exit:                                  ; preds = %if.end154
  %div3.i.i.i = lshr i32 %tcpu.0, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %39 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %tcpu.0, 31
  %41 = shl nuw i32 1, %and.i.i.i
  %42 = and i32 %40, %41
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.i.not = icmp eq i32 %42, 0
  br i1 %tobool.i.not, label %cpu_online.exit.try_rps_crit_edge, label %cleanup162

cpu_online.exit.try_rps_crit_edge:                ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %try_rps

cleanup162:                                       ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %43 = ptrtoint ptr %rflowp to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %rflow.0, ptr %rflowp, align 4
  br label %cleanup177

try_rps:                                          ; preds = %cpu_online.exit.try_rps_crit_edge, %if.end154.try_rps_crit_edge, %if.then119.try_rps_crit_edge, %do.end114.try_rps_crit_edge
  br i1 %tobool92.not, label %try_rps.cleanup177_crit_edge, label %if.then169

try_rps.cleanup177_crit_edge:                     ; preds = %try_rps
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup177

if.then169:                                       ; preds = %try_rps
  %44 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %9, align 4
  %conv.i239 = zext i32 %19 to i64
  %conv1.i = zext i32 %45 to i64
  %mul.i = mul nuw i64 %conv1.i, %conv.i239
  %shr.i = lshr i64 %mul.i, 32
  %conv2.i = trunc i64 %shr.i to i32
  %arrayidx171 = getelementptr %struct.rps_map, ptr %9, i32 0, i32 2, i32 %conv2.i
  %46 = ptrtoint ptr %arrayidx171 to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %arrayidx171, align 2
  %conv172 = zext i16 %47 to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %48 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %conv172)
  %cmp.not.i.i.i.i240 = icmp ugt i32 %48, %conv172
  br i1 %cmp.not.i.i.i.i240, label %if.then169.cpu_online.exit248_crit_edge, label %land.rhs.i.i.i.i242

if.then169.cpu_online.exit248_crit_edge:          ; preds = %if.then169
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit248

land.rhs.i.i.i.i242:                              ; preds = %if.then169
  %.b37.i.i.i.i241 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i241, label %land.rhs.i.i.i.i242.cpu_online.exit248_crit_edge, label %if.then.i.i.i.i243, !prof !1311

land.rhs.i.i.i.i242.cpu_online.exit248_crit_edge: ; preds = %land.rhs.i.i.i.i242
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit248

if.then.i.i.i.i243:                               ; preds = %land.rhs.i.i.i.i242
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit248

cpu_online.exit248:                               ; preds = %if.then.i.i.i.i243, %land.rhs.i.i.i.i242.cpu_online.exit248_crit_edge, %if.then169.cpu_online.exit248_crit_edge
  %div3.i.i.i244 = lshr i32 %conv172, 5
  %arrayidx.i.i.i245 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i244
  %49 = ptrtoint ptr %arrayidx.i.i.i245 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %arrayidx.i.i.i245, align 4
  %and.i.i.i246 = and i32 %conv172, 31
  %51 = shl nuw i32 1, %and.i.i.i246
  %52 = and i32 %50, %51
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.i247.not = icmp eq i32 %52, 0
  %spec.select = select i1 %tobool.i247.not, i32 -1, i32 %conv172
  br label %cleanup177

cleanup177:                                       ; preds = %cpu_online.exit248, %try_rps.cleanup177_crit_edge, %cleanup162, %skb_get_hash.exit.cleanup177_crit_edge, %do.end88.cleanup177_crit_edge, %if.then23, %land.rhs.cleanup177_crit_edge, %if.then4.cleanup177_crit_edge
  %retval.0 = phi i32 [ %tcpu.0, %cleanup162 ], [ -1, %try_rps.cleanup177_crit_edge ], [ -1, %skb_get_hash.exit.cleanup177_crit_edge ], [ -1, %do.end88.cleanup177_crit_edge ], [ %spec.select, %cpu_online.exit248 ], [ -1, %if.then4.cleanup177_crit_edge ], [ -1, %if.then23 ], [ -1, %land.rhs.cleanup177_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @enqueue_to_backlog(ptr noundef %skb, i32 noundef %cpu, ptr nocapture noundef writeonly %qtail) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %add = add i32 %1, ptrtoint (ptr @softnet_data to i32)
  %2 = inttoptr i32 %add to ptr
  %3 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %and.i128 = and i32 %3, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i128)
  %tobool.not = icmp eq i32 %and.i128, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end15_crit_edge

entry.do.end15_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end15

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %do.end15

do.end15:                                         ; preds = %if.then, %entry.do.end15_crit_edge
  %lock.i = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 20, i32 2
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #35
  %4 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %state.i = getelementptr inbounds %struct.net_device, ptr %6, i32 0, i32 6
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %do.end15.drop_crit_edge, label %if.end18

do.end15.drop_crit_edge:                          ; preds = %do.end15
  call void @__sanitizer_cov_trace_pc() #37
  br label %drop

if.end18:                                         ; preds = %do.end15
  %input_pkt_queue = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 20
  %qlen.i = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 20, i32 1
  %9 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %qlen.i, align 4
  %11 = load i32, ptr @netdev_max_backlog, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %11)
  %cmp20.not = icmp ugt i32 %10, %11
  br i1 %cmp20.not, label %if.end18.drop_crit_edge, label %land.lhs.true

if.end18.drop_crit_edge:                          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #37
  br label %drop

land.lhs.true:                                    ; preds = %if.end18
  %shr.i = ashr i32 %11, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %shr.i, i32 %10)
  %cmp.i = icmp ugt i32 %shr.i, %10
  br i1 %cmp.i, label %land.lhs.true.if.then23_crit_edge, label %do.body.i

land.lhs.true.if.then23_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then23

do.body.i:                                        ; preds = %land.lhs.true
  %12 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %17, ptrtoint (ptr @softnet_data to i32)
  %18 = inttoptr i32 %add.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %20, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i.i129 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i.i129, label %do.body.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

do.body.i.rcu_read_lock.exit.i_crit_edge:         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %do.body.i
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %do.body.i.rcu_read_lock.exit.i_crit_edge
  %flow_limit.i = getelementptr inbounds %struct.softnet_data, ptr %18, i32 0, i32 6
  %21 = ptrtoint ptr %flow_limit.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %flow_limit.i, align 16
  %call7.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end15.i_crit_edge

rcu_read_lock.exit.i.do.end15.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end15.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call8.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %land.lhs.true.i.do.end15.i_crit_edge, label %land.lhs.true10.i

land.lhs.true.i.do.end15.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end15.i

land.lhs.true10.i:                                ; preds = %land.lhs.true.i
  %.b63.i = load i1, ptr @skb_flow_limit.__warned, align 1
  br i1 %.b63.i, label %land.lhs.true10.i.do.end15.i_crit_edge, label %if.then12.i

land.lhs.true10.i.do.end15.i_crit_edge:           ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end15.i

if.then12.i:                                      ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @skb_flow_limit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 4492, ptr noundef nonnull @.str.11) #35
  br label %do.end15.i

do.end15.i:                                       ; preds = %if.then12.i, %land.lhs.true10.i.do.end15.i_crit_edge, %land.lhs.true.i.do.end15.i_crit_edge, %rcu_read_lock.exit.i.do.end15.i_crit_edge
  %tobool17.not.i = icmp eq ptr %22, null
  br i1 %tobool17.not.i, label %do.end15.i.if.end45.i_crit_edge, label %if.then18.i

do.end15.i.if.end45.i_crit_edge:                  ; preds = %do.end15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end45.i

if.then18.i:                                      ; preds = %do.end15.i
  %l4_hash.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %23 = ptrtoint ptr %l4_hash.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %bf.load.i.i = load i16, ptr %l4_hash.i.i, align 8
  %24 = and i16 %bf.load.i.i, 192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %24)
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %if.then.i64.i, label %if.then18.i.skb_get_hash.exit.i_crit_edge

if.then18.i.skb_get_hash.exit.i_crit_edge:        ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_get_hash.exit.i

if.then.i64.i:                                    ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__skb_get_hash(ptr noundef %skb) #35
  br label %skb_get_hash.exit.i

skb_get_hash.exit.i:                              ; preds = %if.then.i64.i, %if.then18.i.skb_get_hash.exit.i_crit_edge
  %hash.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %26 = ptrtoint ptr %hash.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %hash.i.i, align 4
  %num_buckets.i = getelementptr inbounds %struct.sd_flow_limit, ptr %22, i32 0, i32 1
  %28 = ptrtoint ptr %num_buckets.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_buckets.i, align 8
  %sub.i = add i32 %29, -1
  %and.i130 = and i32 %sub.i, %27
  %history_head.i = getelementptr inbounds %struct.sd_flow_limit, ptr %22, i32 0, i32 2
  %30 = ptrtoint ptr %history_head.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %history_head.i, align 4
  %arrayidx20.i = getelementptr %struct.sd_flow_limit, ptr %22, i32 0, i32 3, i32 %31
  %32 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %arrayidx20.i, align 2
  %conv.i = zext i16 %33 to i32
  %conv21.i = trunc i32 %and.i130 to i16
  store i16 %conv21.i, ptr %arrayidx20.i, align 2
  %34 = load i32, ptr %history_head.i, align 4
  %inc.i = add i32 %34, 1
  %and27.i = and i32 %inc.i, 127
  store i32 %and27.i, ptr %history_head.i, align 4
  %arrayidx28.i = getelementptr %struct.sd_flow_limit, ptr %22, i32 0, i32 4, i32 %conv.i
  %35 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx28.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool29.not.i = icmp eq i8 %36, 0
  br i1 %tobool29.not.i, label %skb_get_hash.exit.i.if.end35.i_crit_edge, label %if.then32.i, !prof !1310

skb_get_hash.exit.i.if.end35.i_crit_edge:         ; preds = %skb_get_hash.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end35.i

if.then32.i:                                      ; preds = %skb_get_hash.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %dec.i = add i8 %36, -1
  %37 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %dec.i, ptr %arrayidx28.i, align 1
  br label %if.end35.i

if.end35.i:                                       ; preds = %if.then32.i, %skb_get_hash.exit.i.if.end35.i_crit_edge
  %arrayidx37.i = getelementptr %struct.sd_flow_limit, ptr %22, i32 0, i32 4, i32 %and.i130
  %38 = ptrtoint ptr %arrayidx37.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %arrayidx37.i, align 1
  %inc38.i = add i8 %39, 1
  store i8 %inc38.i, ptr %arrayidx37.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %inc38.i)
  %cmp40.i = icmp ugt i8 %inc38.i, 64
  br i1 %cmp40.i, label %if.then42.i, label %if.end35.i.if.end45.i_crit_edge

if.end35.i.if.end45.i_crit_edge:                  ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end45.i

if.then42.i:                                      ; preds = %if.end35.i
  %40 = ptrtoint ptr %22 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %22, align 8
  %inc43.i = add i64 %41, 1
  store i64 %inc43.i, ptr %22, align 8
  %call.i65.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i65.i, label %if.then42.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i68.i

if.then42.i.rcu_read_unlock.exit.i_crit_edge:     ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit.i

land.lhs.true.i68.i:                              ; preds = %if.then42.i
  %call1.i66.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i66.i)
  %tobool.not.i67.i = icmp eq i32 %call1.i66.i, 0
  br i1 %tobool.not.i67.i, label %land.lhs.true.i68.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i70.i

land.lhs.true.i68.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i68.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i70.i:                             ; preds = %land.lhs.true.i68.i
  %.b4.i69.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i69.i, label %land.lhs.true2.i70.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i71.i

land.lhs.true2.i70.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i70.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit.i

if.then.i71.i:                                    ; preds = %land.lhs.true2.i70.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i71.i, %land.lhs.true2.i70.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i68.i.rcu_read_unlock.exit.i_crit_edge, %if.then42.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %42 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i72.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i.i.i72.i to ptr
  %preempt_count.i.i.i.i73.i = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i.i.i73.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i.i.i73.i, align 4
  %sub.i.i.i83.i = add i32 %45, -1
  store volatile i32 %sub.i.i.i83.i, ptr %preempt_count.i.i.i.i73.i, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  br label %drop

if.end45.i:                                       ; preds = %if.end35.i.if.end45.i_crit_edge, %do.end15.i.if.end45.i_crit_edge
  %call.i74.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i74.i, label %if.end45.i.rcu_read_unlock.exit84.i_crit_edge, label %land.lhs.true.i77.i

if.end45.i.rcu_read_unlock.exit84.i_crit_edge:    ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit84.i

land.lhs.true.i77.i:                              ; preds = %if.end45.i
  %call1.i75.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i75.i)
  %tobool.not.i76.i = icmp eq i32 %call1.i75.i, 0
  br i1 %tobool.not.i76.i, label %land.lhs.true.i77.i.rcu_read_unlock.exit84.i_crit_edge, label %land.lhs.true2.i79.i

land.lhs.true.i77.i.rcu_read_unlock.exit84.i_crit_edge: ; preds = %land.lhs.true.i77.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit84.i

land.lhs.true2.i79.i:                             ; preds = %land.lhs.true.i77.i
  %.b4.i78.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i78.i, label %land.lhs.true2.i79.i.rcu_read_unlock.exit84.i_crit_edge, label %if.then.i80.i

land.lhs.true2.i79.i.rcu_read_unlock.exit84.i_crit_edge: ; preds = %land.lhs.true2.i79.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit84.i

if.then.i80.i:                                    ; preds = %land.lhs.true2.i79.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit84.i

rcu_read_unlock.exit84.i:                         ; preds = %if.then.i80.i, %land.lhs.true2.i79.i.rcu_read_unlock.exit84.i_crit_edge, %land.lhs.true.i77.i.rcu_read_unlock.exit84.i_crit_edge, %if.end45.i.rcu_read_unlock.exit84.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %46 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i72.i.c = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i.i.i72.i.c to ptr
  %preempt_count.i.i.i.i73.i.c = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i.i.i73.i.c to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i.i.i73.i.c, align 4
  %sub.i.i.i83.i.c = add i32 %49, -1
  store volatile i32 %sub.i.i.i83.i.c, ptr %preempt_count.i.i.i.i73.i.c, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  br label %if.then23

if.then23:                                        ; preds = %rcu_read_unlock.exit84.i, %land.lhs.true.if.then23_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool24.not = icmp eq i32 %10, 0
  br i1 %tobool24.not, label %if.end59, label %if.then23.enqueue_crit_edge

if.then23.enqueue_crit_edge:                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #37
  br label %enqueue

enqueue:                                          ; preds = %if.then65, %rps_ipi_queued.exit, %if.end59.enqueue_crit_edge, %if.then23.enqueue_crit_edge
  %prev.i.i = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 20, i32 0, i32 0, i32 1
  %50 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %prev.i.i, align 4
  %52 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr %input_pkt_queue, ptr %skb, align 8
  %prev10.i.i.i = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 1
  %53 = ptrtoint ptr %prev10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %51, ptr %prev10.i.i.i, align 4
  store volatile ptr %skb, ptr %prev.i.i, align 4
  %54 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %skb, ptr %51, align 4
  %55 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %qlen.i, align 4
  %add.i.i.i = add i32 %56, 1
  store volatile i32 %add.i.i.i, ptr %qlen.i, align 4
  %input_queue_tail.i = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 18
  %57 = ptrtoint ptr %input_queue_tail.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %input_queue_tail.i, align 8
  %inc.i131 = add i32 %58, 1
  store i32 %inc.i131, ptr %input_queue_tail.i, align 8
  %59 = ptrtoint ptr %qtail to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %inc.i131, ptr %qtail, align 4
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #35
  br i1 %tobool.not, label %if.then37, label %enqueue.do.body39_crit_edge

enqueue.do.body39_crit_edge:                      ; preds = %enqueue
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body39

if.then37:                                        ; preds = %enqueue
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_on() #35
  br label %do.body39

do.body39:                                        ; preds = %if.then37, %enqueue.do.body39_crit_edge
  %60 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i134 = and i32 %60, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i134)
  %tobool47.not = icmp eq i32 %and.i.i134, 0
  br i1 %tobool47.not, label %if.then51, label %do.body39.do.end54_crit_edge, !prof !1310

do.body39.do.end54_crit_edge:                     ; preds = %do.body39
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end54

if.then51:                                        ; preds = %do.body39
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end54

do.end54:                                         ; preds = %if.then51, %do.body39.do.end54_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %3) #35, !srcloc !1315
  br label %cleanup

if.end59:                                         ; preds = %if.then23
  %backlog = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 21
  %state = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 21, i32 1
  %61 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %state, align 4
  %or.i = or i32 %62, 1
  store i32 %or.i, ptr %state, align 4
  %and.i = and i32 %62, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool61.not = icmp eq i32 %and.i, 0
  br i1 %tobool61.not, label %if.then62, label %if.end59.enqueue_crit_edge

if.end59.enqueue_crit_edge:                       ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #37
  br label %enqueue

if.then62:                                        ; preds = %if.end59
  %63 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i135 = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i135 to ptr
  %cpu.i136 = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 3
  %65 = ptrtoint ptr %cpu.i136 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %cpu.i136, align 4
  %arrayidx.i137 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %66
  %67 = ptrtoint ptr %arrayidx.i137 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx.i137, align 4
  %add.i138 = add i32 %68, ptrtoint (ptr @softnet_data to i32)
  %69 = inttoptr i32 %add.i138 to ptr
  %cmp.not.i = icmp eq ptr %69, %2
  br i1 %cmp.not.i, label %if.then65, label %rps_ipi_queued.exit

rps_ipi_queued.exit:                              ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #37
  %rps_ipi_list.i = getelementptr inbounds %struct.softnet_data, ptr %69, i32 0, i32 5
  %70 = ptrtoint ptr %rps_ipi_list.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %rps_ipi_list.i, align 4
  %rps_ipi_next.i = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 16
  %72 = ptrtoint ptr %rps_ipi_next.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %71, ptr %rps_ipi_next.i, align 16
  store ptr %2, ptr %rps_ipi_list.i, align 4
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #35
  br label %enqueue

if.then65:                                        ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @____napi_schedule(ptr noundef %2, ptr noundef %backlog)
  br label %enqueue

drop:                                             ; preds = %rcu_read_unlock.exit.i, %if.end18.drop_crit_edge, %do.end15.drop_crit_edge
  %dropped = getelementptr inbounds %struct.softnet_data, ptr %2, i32 0, i32 19
  %73 = ptrtoint ptr %dropped to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %dropped, align 4
  %inc = add i32 %74, 1
  store i32 %inc, ptr %dropped, align 4
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #35
  br i1 %tobool.not, label %if.then79, label %drop.do.body81_crit_edge

drop.do.body81_crit_edge:                         ; preds = %drop
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body81

if.then79:                                        ; preds = %drop
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_on() #35
  br label %do.body81

do.body81:                                        ; preds = %if.then79, %drop.do.body81_crit_edge
  %75 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i142 = and i32 %75, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i142)
  %tobool89.not = icmp eq i32 %and.i.i142, 0
  br i1 %tobool89.not, label %if.then98, label %do.body81.do.end101_crit_edge, !prof !1310

do.body81.do.end101_crit_edge:                    ; preds = %do.body81
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end101

if.then98:                                        ; preds = %do.body81
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end101

do.end101:                                        ; preds = %if.then98, %do.body81.do.end101_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %3) #35, !srcloc !1315
  %76 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %4, align 8
  %rx_dropped = getelementptr inbounds %struct.net_device, ptr %77, i32 0, i32 37
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %rx_dropped, i32 noundef 4) #35
  tail call void @llvm.prefetch.p0(ptr %rx_dropped, i32 1, i32 3, i32 1) #35
  %78 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %rx_dropped, ptr %rx_dropped, i32 1, ptr elementtype(i32) %rx_dropped) #35, !srcloc !1326
  tail call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #35
  br label %cleanup

cleanup:                                          ; preds = %do.end101, %do.end54
  %retval.0 = phi i32 [ 1, %do.end101 ], [ 0, %do.end54 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__netif_receive_skb_list(ptr noundef %head) unnamed_addr #1 align 64 {
entry:
  %sublist = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head, align 4
  %cmp.not65 = icmp eq ptr %1, %head
  br i1 %cmp.not65, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %2 = getelementptr inbounds %struct.list_head, ptr %sublist, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %noreclaim_flag.068 = phi i32 [ 0, %for.body.lr.ph ], [ %noreclaim_flag.2, %for.inc.for.body_crit_edge ]
  %skb.067 = phi ptr [ %1, %for.body.lr.ph ], [ %next.069, %for.inc.for.body_crit_edge ]
  %pfmemalloc.0.off066 = phi i1 [ false, %for.body.lr.ph ], [ %pfmemalloc.1.off0, %for.inc.for.body_crit_edge ]
  %3 = ptrtoint ptr %skb.067 to i32
  call void @__asan_load4_noabort(i32 %3)
  %next.069 = load ptr, ptr %skb.067, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memalloc_socks_key, ptr blockaddress(@__netif_receive_skb_list, %land.rhs)) #35
          to label %land.end [label %land.rhs], !srcloc !1328

land.rhs:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  %pfmemalloc.i = getelementptr inbounds %struct.sk_buff, ptr %skb.067, i32 0, i32 12
  %4 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i = load i8, ptr %pfmemalloc.i, align 2
  %5 = and i8 %bf.load.i, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.i = icmp ne i8 %5, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %6 = phi i1 [ %tobool.i, %land.rhs ], [ false, %for.body ]
  %7 = xor i1 %pfmemalloc.0.off066, %6
  br i1 %7, label %if.then, label %land.end.for.inc_crit_edge

land.end.for.inc_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.then:                                          ; preds = %land.end
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sublist) #35
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 -1 to ptr), ptr %2, align 4, !annotation !1320
  %9 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %head, align 4
  %cmp.i = icmp eq ptr %10, %skb.067
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %11 = ptrtoint ptr %sublist to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %sublist, ptr %sublist, align 4
  %12 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %sublist, ptr %2, align 4
  br label %list_cut_before.exit

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %13 = ptrtoint ptr %sublist to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %sublist, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %sublist, ptr %prev.i, align 4
  %prev5.i = getelementptr inbounds %struct.list_head, ptr %skb.067, i32 0, i32 1
  %15 = ptrtoint ptr %prev5.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev5.i, align 4
  %17 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %2, align 4
  %18 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %sublist, ptr %16, align 4
  %19 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %skb.067, ptr %head, align 4
  store ptr %head, ptr %prev5.i, align 4
  br label %list_cut_before.exit

list_cut_before.exit:                             ; preds = %if.end.i, %if.then.i
  %20 = ptrtoint ptr %sublist to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %sublist, align 4
  %cmp.i49.not = icmp eq ptr %21, %sublist
  br i1 %cmp.i49.not, label %list_cut_before.exit.if.end_crit_edge, label %if.then12

list_cut_before.exit.if.end_crit_edge:            ; preds = %list_cut_before.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then12:                                        ; preds = %list_cut_before.exit
  call void @__sanitizer_cov_trace_pc() #37
  call fastcc void @__netif_receive_skb_list_core(ptr noundef nonnull %sublist, i1 noundef zeroext %pfmemalloc.0.off066)
  br label %if.end

if.end:                                           ; preds = %if.then12, %list_cut_before.exit.if.end_crit_edge
  %lnot15 = xor i1 %pfmemalloc.0.off066, true
  %22 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i50 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i50 to ptr
  %task.i51 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task.i51 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task.i51, align 8
  %flags1.i52 = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %flags1.i52 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags1.i52, align 4
  %and.i53 = and i32 %27, -2049
  %or.i54 = or i32 %and.i53, %noreclaim_flag.068
  %and.i = and i32 %27, 2048
  %or.i = or i32 %27, 2048
  %or.i54.sink = select i1 %pfmemalloc.0.off066, i32 %or.i54, i32 %or.i
  %noreclaim_flag.1 = select i1 %pfmemalloc.0.off066, i32 %noreclaim_flag.068, i32 %and.i
  store i32 %or.i54.sink, ptr %flags1.i52, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sublist) #35
  br label %for.inc

for.inc:                                          ; preds = %if.end, %land.end.for.inc_crit_edge
  %pfmemalloc.1.off0 = phi i1 [ %lnot15, %if.end ], [ %pfmemalloc.0.off066, %land.end.for.inc_crit_edge ]
  %noreclaim_flag.2 = phi i32 [ %noreclaim_flag.1, %if.end ], [ %noreclaim_flag.068, %land.end.for.inc_crit_edge ]
  %cmp.not = icmp eq ptr %next.069, %head
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %pfmemalloc.0.off0.lcssa = phi i1 [ false, %entry.for.end_crit_edge ], [ %pfmemalloc.1.off0, %for.inc.for.end_crit_edge ]
  %noreclaim_flag.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %noreclaim_flag.2, %for.inc.for.end_crit_edge ]
  %28 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %head, align 4
  %cmp.i55.not = icmp eq ptr %29, %head
  br i1 %cmp.i55.not, label %for.end.if.end29_crit_edge, label %if.then27

for.end.if.end29_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then27:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  call fastcc void @__netif_receive_skb_list_core(ptr noundef %head, i1 noundef zeroext %pfmemalloc.0.off0.lcssa)
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %for.end.if.end29_crit_edge
  br i1 %pfmemalloc.0.off0.lcssa, label %if.then31, label %if.end29.if.end32_crit_edge

if.end29.if.end32_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32

if.then31:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  %30 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i57 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i57 to ptr
  %task.i58 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %task.i58 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %task.i58, align 8
  %flags1.i59 = getelementptr inbounds %struct.task_struct, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %flags1.i59 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %flags1.i59, align 4
  %and.i60 = and i32 %35, -2049
  %or.i61 = or i32 %and.i60, %noreclaim_flag.0.lcssa
  store i32 %or.i61, ptr %flags1.i59, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end29.if.end32_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netif_receive_skb(ptr noundef %skb) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_netif_receive_skb_entry(ptr noundef %skb)
  %call = tail call fastcc i32 @netif_receive_skb_internal(ptr noundef %skb)
  tail call fastcc void @trace_netif_receive_skb_exit(i32 noundef %call)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_receive_skb_entry(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_entry, i32 0, i32 1), ptr blockaddress(@trace_netif_receive_skb_entry, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1373
  %call42 = tail call i32 @__traceiter_netif_receive_skb_entry(ptr noundef null, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1374
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_entry, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_entry, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_receive_skb_entry.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_receive_skb_entry.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 247, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @netif_receive_skb_internal(ptr noundef %skb) unnamed_addr #1 align 64 {
entry:
  %voidflow = alloca %struct.rps_dev_flow, align 8
  %rflow = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @netstamp_needed_key, ptr blockaddress(@netif_receive_skb_internal, %if.then)) #35
          to label %if.end6 [label %if.then], !srcloc !1328

if.then:                                          ; preds = %entry
  %0 = load i32, ptr @netdev_tstamp_prequeue, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool3.not = icmp eq i32 %0, 0
  br i1 %tobool3.not, label %if.then.if.end6_crit_edge, label %land.lhs.true

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end6

land.lhs.true:                                    ; preds = %if.then
  %1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 2
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %1, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %3)
  %tobool4.not = icmp eq i64 %3, 0
  br i1 %tobool4.not, label %if.then5, label %land.lhs.true.if.end6_crit_edge

land.lhs.true.if.end6_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i = tail call i64 @ktime_get_with_offset(i32 noundef 0) #35
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %call.i.i, ptr %1, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %land.lhs.true.if.end6_crit_edge, %if.then.if.end6_crit_edge, %entry
  %call7 = tail call zeroext i1 @skb_defer_rx_timestamp(ptr noundef %skb) #35
  br i1 %call7, label %if.end6.cleanup30_crit_edge, label %if.end9

if.end6.cleanup30_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup30

if.end9:                                          ; preds = %if.end6
  %5 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %if.end9.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end9.rcu_read_lock.exit_crit_edge:             ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end9
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end9.rcu_read_lock.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @rps_needed, ptr blockaddress(@netif_receive_skb_internal, %if.then21)) #35
          to label %if.end28 [label %if.then21], !srcloc !1328

if.then21:                                        ; preds = %rcu_read_lock.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %voidflow) #35
  %9 = ptrtoint ptr %voidflow to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 -1, ptr %voidflow, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rflow) #35
  %10 = ptrtoint ptr %rflow to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %voidflow, ptr %rflow, align 4
  %11 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 8
  %call22 = call fastcc i32 @get_rps_cpu(ptr noundef %13, ptr noundef %skb, ptr noundef nonnull %rflow)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call22)
  %cmp = icmp sgt i32 %call22, -1
  br i1 %cmp, label %if.then23, label %cleanup

if.then23:                                        ; preds = %if.then21
  %14 = ptrtoint ptr %rflow to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rflow, align 4
  %last_qtail = getelementptr inbounds %struct.rps_dev_flow, ptr %15, i32 0, i32 2
  %call24 = call fastcc i32 @enqueue_to_backlog(ptr noundef %skb, i32 noundef %call22, ptr noundef %last_qtail)
  %call.i42 = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i42, label %if.then23.cleanup.thread_crit_edge, label %land.lhs.true.i45

if.then23.cleanup.thread_crit_edge:               ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread

land.lhs.true.i45:                                ; preds = %if.then23
  %call1.i43 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i43)
  %tobool.not.i44 = icmp eq i32 %call1.i43, 0
  br i1 %tobool.not.i44, label %land.lhs.true.i45.cleanup.thread_crit_edge, label %land.lhs.true2.i47

land.lhs.true.i45.cleanup.thread_crit_edge:       ; preds = %land.lhs.true.i45
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread

land.lhs.true2.i47:                               ; preds = %land.lhs.true.i45
  %.b4.i46 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i46, label %land.lhs.true2.i47.cleanup.thread_crit_edge, label %if.then.i48

land.lhs.true2.i47.cleanup.thread_crit_edge:      ; preds = %land.lhs.true2.i47
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup.thread

if.then.i48:                                      ; preds = %land.lhs.true2.i47
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then.i48, %land.lhs.true2.i47.cleanup.thread_crit_edge, %land.lhs.true.i45.cleanup.thread_crit_edge, %if.then23.cleanup.thread_crit_edge
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %16 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i49 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i49 to ptr
  %preempt_count.i.i.i.i50 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i.i.i50 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i.i.i50, align 4
  %sub.i.i.i = add i32 %19, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i50, align 4
  call void @rcu_read_unlock_strict() #35
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rflow) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %voidflow) #35
  br label %cleanup30

cleanup:                                          ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rflow) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %voidflow) #35
  br label %if.end28

if.end28:                                         ; preds = %cleanup, %rcu_read_lock.exit
  %call29 = call fastcc i32 @__netif_receive_skb(ptr noundef %skb)
  %call.i51 = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i51, label %if.end28.rcu_read_unlock.exit61_crit_edge, label %land.lhs.true.i54

if.end28.rcu_read_unlock.exit61_crit_edge:        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit61

land.lhs.true.i54:                                ; preds = %if.end28
  %call1.i52 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i52)
  %tobool.not.i53 = icmp eq i32 %call1.i52, 0
  br i1 %tobool.not.i53, label %land.lhs.true.i54.rcu_read_unlock.exit61_crit_edge, label %land.lhs.true2.i56

land.lhs.true.i54.rcu_read_unlock.exit61_crit_edge: ; preds = %land.lhs.true.i54
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit61

land.lhs.true2.i56:                               ; preds = %land.lhs.true.i54
  %.b4.i55 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i55, label %land.lhs.true2.i56.rcu_read_unlock.exit61_crit_edge, label %if.then.i57

land.lhs.true2.i56.rcu_read_unlock.exit61_crit_edge: ; preds = %land.lhs.true2.i56
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit61

if.then.i57:                                      ; preds = %land.lhs.true2.i56
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit61

rcu_read_unlock.exit61:                           ; preds = %if.then.i57, %land.lhs.true2.i56.rcu_read_unlock.exit61_crit_edge, %land.lhs.true.i54.rcu_read_unlock.exit61_crit_edge, %if.end28.rcu_read_unlock.exit61_crit_edge
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %20 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i58 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i58 to ptr
  %preempt_count.i.i.i.i59 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i.i59 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i.i59, align 4
  %sub.i.i.i60 = add i32 %23, -1
  store volatile i32 %sub.i.i.i60, ptr %preempt_count.i.i.i.i59, align 4
  call void @rcu_read_unlock_strict() #35
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  br label %cleanup30

cleanup30:                                        ; preds = %rcu_read_unlock.exit61, %cleanup.thread, %if.end6.cleanup30_crit_edge
  %retval.1 = phi i32 [ %call29, %rcu_read_unlock.exit61 ], [ 0, %if.end6.cleanup30_crit_edge ], [ %call24, %cleanup.thread ]
  ret i32 %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_receive_skb_exit(i32 noundef %ret) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_exit, i32 0, i32 1), ptr blockaddress(@trace_netif_receive_skb_exit, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1375
  %call42 = tail call i32 @__traceiter_netif_receive_skb_exit(ptr noundef null, i32 noundef %ret) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1376
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_exit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_receive_skb_exit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_receive_skb_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 306, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_receive_skb_list(ptr noundef %head) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %head, align 4
  %cmp.i.not = icmp eq ptr %1, %head
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_entry, i32 0, i32 1), ptr blockaddress(@netif_receive_skb_list, %for.cond)) #35
          to label %if.end7 [label %for.cond], !srcloc !1328

for.cond:                                         ; preds = %for.body, %if.end
  %skb.0.in = phi ptr [ %skb.0, %for.body ], [ %head, %if.end ]
  %2 = ptrtoint ptr %skb.0.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %skb.0 = load ptr, ptr %skb.0.in, align 4
  %cmp.not = icmp eq ptr %skb.0, %head
  br i1 %cmp.not, label %for.cond.if.end7_crit_edge, label %for.body

for.cond.if.end7_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end7

for.body:                                         ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @trace_netif_receive_skb_list_entry(ptr noundef %skb.0)
  br label %for.cond

if.end7:                                          ; preds = %for.cond.if.end7_crit_edge, %if.end
  tail call void @netif_receive_skb_list_internal(ptr noundef %head)
  tail call fastcc void @trace_netif_receive_skb_list_exit()
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_receive_skb_list_entry(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_entry, i32 0, i32 1), ptr blockaddress(@trace_netif_receive_skb_list_entry, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1377
  %call42 = tail call i32 @__traceiter_netif_receive_skb_list_entry(ptr noundef null, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1378
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_entry, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_entry, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_receive_skb_list_entry.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_receive_skb_list_entry.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 254, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_receive_skb_list_exit() unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_exit, i32 0, i32 1), ptr blockaddress(@trace_netif_receive_skb_list_exit, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1379
  %call42 = tail call i32 @__traceiter_netif_receive_skb_list_exit(ptr noundef null, i32 noundef 0) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1380
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i2 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i2 to ptr
  %preempt_count.i.i3 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i3, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i5 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !1311

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %20, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %22 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i12
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i13.not = icmp eq i32 %25, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_exit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb_list_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_netif_receive_skb_list_exit.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_receive_skb_list_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 327, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i15 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__napi_schedule(ptr noundef %n) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.body12_crit_edge

entry.do.body12_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body12

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %do.body12

do.body12:                                        ; preds = %if.then, %entry.do.body12_crit_edge
  %1 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i51 = and i32 %1, -16384
  %2 = inttoptr i32 %and.i51 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @softnet_data to i32)
  %7 = inttoptr i32 %add to ptr
  %state.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 1
  %8 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i, align 4
  %10 = and i32 %9, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i, label %do.body12.if.end12.i_crit_edge, label %do.end.i

do.body12.if.end12.i_crit_edge:                   ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.end.i:                                         ; preds = %do.body12
  %thread1.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 16
  %11 = ptrtoint ptr %thread1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %thread1.i, align 4
  %tobool2.not.i = icmp eq ptr %12, null
  br i1 %tobool2.not.i, label %do.end.i.if.end12.i_crit_edge, label %do.end6.i

do.end.i.if.end12.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.end6.i:                                        ; preds = %do.end.i
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp.not.i = icmp eq i32 %14, 1
  br i1 %cmp.not.i, label %do.end6.i.if.end.i_crit_edge, label %if.then8.i

do.end6.i.if.end.i_crit_edge:                     ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then8.i:                                       ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_set_bit(i32 noundef 9, ptr noundef %state.i) #35
  br label %if.end.i

if.end.i:                                         ; preds = %if.then8.i, %do.end6.i.if.end.i_crit_edge
  %call10.i = tail call i32 @wake_up_process(ptr noundef nonnull %12) #35
  br label %____napi_schedule.exit

if.end12.i:                                       ; preds = %do.end.i.if.end12.i_crit_edge, %do.body12.if.end12.i_crit_edge
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %n, ptr noundef %16, ptr noundef %7) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end12.i.list_add_tail.exit.i_crit_edge

if.end12.i.list_add_tail.exit.i_crit_edge:        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  %17 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %n, ptr %prev.i.i, align 4
  %18 = ptrtoint ptr %n to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %7, ptr %n, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %n, i32 0, i32 1
  %19 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev3.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %n, ptr %16, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.end12.i.list_add_tail.exit.i_crit_edge
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #35
  br label %____napi_schedule.exit

____napi_schedule.exit:                           ; preds = %list_add_tail.exit.i, %if.end.i
  br i1 %tobool.not, label %if.then27, label %____napi_schedule.exit.do.body29_crit_edge

____napi_schedule.exit.do.body29_crit_edge:       ; preds = %____napi_schedule.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body29

if.then27:                                        ; preds = %____napi_schedule.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_on() #35
  br label %do.body29

do.body29:                                        ; preds = %if.then27, %____napi_schedule.exit.do.body29_crit_edge
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %21, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool37.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool37.not, label %if.then41, label %do.body29.do.end44_crit_edge, !prof !1310

do.body29.do.end44_crit_edge:                     ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end44

if.then41:                                        ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end44

do.end44:                                         ; preds = %if.then41, %do.body29.do.end44_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #35, !srcloc !1315
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @____napi_schedule(ptr noundef %sd, ptr noundef %napi) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %state = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 1
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 4
  %2 = and i32 %1, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end12_crit_edge, label %do.end

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12

do.end:                                           ; preds = %entry
  %thread1 = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 16
  %3 = ptrtoint ptr %thread1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %thread1, align 4
  %tobool2.not = icmp eq ptr %4, null
  br i1 %tobool2.not, label %do.end.if.end12_crit_edge, label %do.end6

do.end.if.end12_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12

do.end6:                                          ; preds = %do.end
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp.not = icmp eq i32 %6, 1
  br i1 %cmp.not, label %do.end6.if.end_crit_edge, label %if.then8

do.end6.if.end_crit_edge:                         ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then8:                                         ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_set_bit(i32 noundef 9, ptr noundef %state) #35
  br label %if.end

if.end:                                           ; preds = %if.then8, %do.end6.if.end_crit_edge
  %call10 = tail call i32 @wake_up_process(ptr noundef nonnull %4) #35
  br label %cleanup

if.end12:                                         ; preds = %do.end.if.end12_crit_edge, %entry.if.end12_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %sd, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %napi, ptr noundef %8, ptr noundef %sd) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.end12.list_add_tail.exit_crit_edge

if.end12.list_add_tail.exit_crit_edge:            ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #37
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %napi, ptr %prev.i, align 4
  %10 = ptrtoint ptr %napi to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %sd, ptr %napi, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %napi, i32 0, i32 1
  %11 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev3.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %napi, ptr %8, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end12.list_add_tail.exit_crit_edge
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #35
  br label %cleanup

cleanup:                                          ; preds = %list_add_tail.exit, %if.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @napi_schedule_prep(ptr noundef %n) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 1
  br label %do.body

do.body:                                          ; preds = %__cmpxchg.exit.do.body_crit_edge, %entry
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 8
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %do.body.cleanup_crit_edge, !prof !1311

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %do.body
  %and4 = and i32 %1, 1
  %mul = shl nuw nsw i32 %and4, 1
  %or = or i32 %1, %mul
  %or5 = or i32 %or, 1
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %state, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1381
  tail call void @llvm.prefetch.p0(ptr %state, i32 1, i32 3, i32 1) #35
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end
  %2 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %state, i32 %1, i32 %or5) #35, !srcloc !1382
  %asmresult.i = extractvalue { i32, i32 } %2, 0
  %tobool.not.i = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %2, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1383
  %cmp.not = icmp eq i32 %asmresult1.i, %1
  br i1 %cmp.not, label %do.end26, label %__cmpxchg.exit.do.body_crit_edge

__cmpxchg.exit.do.body_crit_edge:                 ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body

do.end26:                                         ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool28.not = icmp eq i32 %and4, 0
  br label %cleanup

cleanup:                                          ; preds = %do.end26, %do.body.cleanup_crit_edge
  %retval.0 = phi i1 [ %tobool28.not, %do.end26 ], [ false, %do.body.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__napi_schedule_irqoff(ptr noundef %n) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @softnet_data to i32)
  %6 = inttoptr i32 %add to ptr
  %state.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 1
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %9 = and i32 %8, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %entry.if.end12.i_crit_edge, label %do.end.i

entry.if.end12.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.end.i:                                         ; preds = %entry
  %thread1.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 16
  %10 = ptrtoint ptr %thread1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %thread1.i, align 4
  %tobool2.not.i = icmp eq ptr %11, null
  br i1 %tobool2.not.i, label %do.end.i.if.end12.i_crit_edge, label %do.end6.i

do.end.i.if.end12.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.end6.i:                                        ; preds = %do.end.i
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp.not.i = icmp eq i32 %13, 1
  br i1 %cmp.not.i, label %do.end6.i.if.end.i_crit_edge, label %if.then8.i

do.end6.i.if.end.i_crit_edge:                     ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then8.i:                                       ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_set_bit(i32 noundef 9, ptr noundef %state.i) #35
  br label %if.end.i

if.end.i:                                         ; preds = %if.then8.i, %do.end6.i.if.end.i_crit_edge
  %call10.i = tail call i32 @wake_up_process(ptr noundef nonnull %11) #35
  br label %____napi_schedule.exit

if.end12.i:                                       ; preds = %do.end.i.if.end12.i_crit_edge, %entry.if.end12.i_crit_edge
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %n, ptr noundef %15, ptr noundef %6) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end12.i.list_add_tail.exit.i_crit_edge

if.end12.i.list_add_tail.exit.i_crit_edge:        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %n, ptr %prev.i.i, align 4
  %17 = ptrtoint ptr %n to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %6, ptr %n, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %n, i32 0, i32 1
  %18 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %prev3.i.i.i, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %n, ptr %15, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.end12.i.list_add_tail.exit.i_crit_edge
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #35
  br label %____napi_schedule.exit

____napi_schedule.exit:                           ; preds = %list_add_tail.exit.i, %if.end.i
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @napi_complete_done(ptr noundef %n, i32 noundef %work_done) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 1
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %state, align 8
  %and = and i32 %1, 72
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge, !prof !1311

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %work_done)
  %tobool3.not = icmp eq i32 %work_done, 0
  br i1 %tobool3.not, label %if.end.if.end13_crit_edge, label %if.then4

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end13

if.then4:                                         ; preds = %if.end
  %gro_bitmask = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 4
  %2 = ptrtoint ptr %gro_bitmask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gro_bitmask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool5.not = icmp eq i32 %3, 0
  br i1 %tobool5.not, label %if.then4.do.end10_crit_edge, label %do.end

if.then4.do.end10_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10

do.end:                                           ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #37
  %dev = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 7
  %4 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev, align 8
  %gro_flush_timeout = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 91
  %6 = ptrtoint ptr %gro_flush_timeout to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %gro_flush_timeout, align 4
  br label %do.end10

do.end10:                                         ; preds = %do.end, %if.then4.do.end10_crit_edge
  %timeout.0 = phi i32 [ %7, %do.end ], [ 0, %if.then4.do.end10_crit_edge ]
  %dev12 = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 7
  %8 = ptrtoint ptr %dev12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev12, align 8
  %napi_defer_hard_irqs = getelementptr inbounds %struct.net_device, ptr %9, i32 0, i32 92
  %10 = ptrtoint ptr %napi_defer_hard_irqs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %napi_defer_hard_irqs, align 8
  %defer_hard_irqs_count = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 3
  %12 = ptrtoint ptr %defer_hard_irqs_count to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %defer_hard_irqs_count, align 8
  br label %if.end13

if.end13:                                         ; preds = %do.end10, %if.end.if.end13_crit_edge
  %timeout.1 = phi i32 [ %timeout.0, %do.end10 ], [ 0, %if.end.if.end13_crit_edge ]
  %defer_hard_irqs_count14 = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 3
  %13 = ptrtoint ptr %defer_hard_irqs_count14 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %defer_hard_irqs_count14, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp = icmp sgt i32 %14, 0
  br i1 %cmp, label %if.then15, label %if.end13.if.end26_crit_edge

if.end13.if.end26_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end26

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #37
  %dec = add nsw i32 %14, -1
  %15 = ptrtoint ptr %defer_hard_irqs_count14 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %dec, ptr %defer_hard_irqs_count14, align 8
  %dev21 = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 7
  %16 = ptrtoint ptr %dev21 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev21, align 8
  %gro_flush_timeout22 = getelementptr inbounds %struct.net_device, ptr %17, i32 0, i32 91
  %18 = ptrtoint ptr %gro_flush_timeout22 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %gro_flush_timeout22, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool23.not = icmp eq i32 %19, 0
  br label %if.end26

if.end26:                                         ; preds = %if.then15, %if.end13.if.end26_crit_edge
  %ret.0.off0 = phi i1 [ true, %if.end13.if.end26_crit_edge ], [ %tobool23.not, %if.then15 ]
  %timeout.2 = phi i32 [ %timeout.1, %if.end13.if.end26_crit_edge ], [ %19, %if.then15 ]
  %gro_bitmask27 = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 4
  %20 = ptrtoint ptr %gro_bitmask27 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %gro_bitmask27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool28.not = icmp eq i32 %21, 0
  br i1 %tobool28.not, label %if.end26.if.end35_crit_edge, label %if.then29

if.end26.if.end35_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end35

if.then29:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %timeout.2)
  %tobool30 = icmp ne i32 %timeout.2, 0
  tail call void @napi_gro_flush(ptr noundef %n, i1 noundef zeroext %tobool30) #35
  br label %if.end35

if.end35:                                         ; preds = %if.then29, %if.end26.if.end35_crit_edge
  %rx_count.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 11
  %22 = ptrtoint ptr %rx_count.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %rx_count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i = icmp eq i32 %23, 0
  br i1 %tobool.not.i, label %if.end35.gro_normal_list.exit_crit_edge, label %if.end.i

if.end35.gro_normal_list.exit_crit_edge:          ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #37
  br label %gro_normal_list.exit

if.end.i:                                         ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #37
  %rx_list.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 10
  tail call void @netif_receive_skb_list_internal(ptr noundef %rx_list.i) #35
  %24 = ptrtoint ptr %rx_list.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %rx_list.i, ptr %rx_list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 10, i32 1
  %25 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %rx_list.i, ptr %prev.i.i, align 4
  %26 = ptrtoint ptr %rx_count.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %rx_count.i, align 8
  br label %gro_normal_list.exit

gro_normal_list.exit:                             ; preds = %if.end.i, %if.end35.gro_normal_list.exit_crit_edge
  %27 = ptrtoint ptr %n to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %n, align 4
  %cmp.i.not = icmp eq ptr %28, %n
  br i1 %cmp.i.not, label %gro_normal_list.exit.do.body103.preheader_crit_edge, label %do.body47, !prof !1311

gro_normal_list.exit.do.body103.preheader_crit_edge: ; preds = %gro_normal_list.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body103.preheader

do.body47:                                        ; preds = %gro_normal_list.exit
  %29 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %and.i = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool60.not = icmp eq i32 %and.i, 0
  br i1 %tobool60.not, label %if.then61, label %do.body47.do.end64_crit_edge

do.body47.do.end64_crit_edge:                     ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end64

if.then61:                                        ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %do.end64

do.end64:                                         ; preds = %if.then61, %do.body47.do.end64_crit_edge
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %n) #35
  br i1 %call.i.i, label %if.end.i.i, label %do.end64.list_del_init.exit_crit_edge

do.end64.list_del_init.exit_crit_edge:            ; preds = %do.end64
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %do.end64
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i242 = getelementptr inbounds %struct.list_head, ptr %n, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i.i242 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev.i.i242, align 4
  %32 = ptrtoint ptr %n to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %n, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %31, ptr %prev1.i.i.i, align 4
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %33, ptr %31, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %do.end64.list_del_init.exit_crit_edge
  %36 = ptrtoint ptr %n to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %n, ptr %n, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %n, i32 0, i32 1
  %37 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %n, ptr %prev.i3.i, align 4
  br i1 %tobool60.not, label %if.then75, label %list_del_init.exit.do.body77_crit_edge

list_del_init.exit.do.body77_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body77

if.then75:                                        ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_on() #35
  br label %do.body77

do.body77:                                        ; preds = %if.then75, %list_del_init.exit.do.body77_crit_edge
  %38 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %38, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool85.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool85.not, label %if.then94, label %do.body77.do.end97_crit_edge, !prof !1310

do.body77.do.end97_crit_edge:                     ; preds = %do.body77
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end97

if.then94:                                        ; preds = %do.body77
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end97

do.end97:                                         ; preds = %if.then94, %do.body77.do.end97_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %29) #35, !srcloc !1315
  br label %do.body103.preheader

do.body103.preheader:                             ; preds = %do.end97, %gro_normal_list.exit.do.body103.preheader_crit_edge
  br label %do.body103

do.body103:                                       ; preds = %__cmpxchg.exit.do.body103_crit_edge, %do.body103.preheader
  %39 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %state, align 8
  %and109 = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and109)
  %tobool110.not = icmp eq i32 %and109, 0
  br i1 %tobool110.not, label %land.rhs, label %do.body103.if.end154_crit_edge

do.body103.if.end154_crit_edge:                   ; preds = %do.body103
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end154

land.rhs:                                         ; preds = %do.body103
  %.b240 = load i1, ptr @napi_complete_done.__already_done, align 1
  br i1 %.b240, label %land.rhs.if.end154_crit_edge, label %if.then128, !prof !1311

land.rhs.if.end154_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end154

if.then128:                                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @napi_complete_done.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5944, i32 noundef 9, ptr noundef null) #35
  br label %if.end154

if.end154:                                        ; preds = %if.then128, %land.rhs.if.end154_crit_edge, %do.body103.if.end154_crit_edge
  %and162 = and i32 %40, -644
  %and163 = and i32 %40, 2
  %div239 = lshr exact i32 %and163, 1
  %or = or i32 %div239, %and162
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %state, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1384
  tail call void @llvm.prefetch.p0(ptr %state, i32 1, i32 3, i32 1) #35
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end154
  %41 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %state, i32 %40, i32 %or) #35, !srcloc !1382
  %asmresult.i = extractvalue { i32, i32 } %41, 0
  %tobool.not.i244 = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i244, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %41, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1385
  %cmp185.not = icmp eq i32 %asmresult1.i, %40
  br i1 %cmp185.not, label %do.end187, label %__cmpxchg.exit.do.body103_crit_edge

__cmpxchg.exit.do.body103_crit_edge:              ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body103

do.end187:                                        ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and163)
  %tobool189.not = icmp eq i32 %and163, 0
  br i1 %tobool189.not, label %if.end197, label %if.then196, !prof !1311

if.then196:                                       ; preds = %do.end187
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__napi_schedule(ptr noundef %n)
  br label %cleanup

if.end197:                                        ; preds = %do.end187
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %timeout.2)
  %tobool198.not = icmp eq i32 %timeout.2, 0
  br i1 %tobool198.not, label %if.end197.cleanup_crit_edge, label %if.then199

if.end197.cleanup_crit_edge:                      ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then199:                                       ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #37
  %timer = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 12
  %conv200 = zext i32 %timeout.2 to i64
  tail call void @hrtimer_start_range_ns(ptr noundef %timer, i64 noundef %conv200, i64 noundef 0, i32 noundef 3) #35
  br label %cleanup

cleanup:                                          ; preds = %if.then199, %if.end197.cleanup_crit_edge, %if.then196, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %if.then196 ], [ false, %entry.cleanup_crit_edge ], [ %ret.0.off0, %if.then199 ], [ %ret.0.off0, %if.end197.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_gro_flush(ptr noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @napi_busy_loop(i32 noundef %napi_id, ptr noundef readonly %loop_end, ptr noundef %loop_end_arg, i1 noundef zeroext %prefer_busy_poll, i16 noundef zeroext %budget) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %loop_end, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i = tail call i64 @sched_clock() #35
  %shr.i = lshr i64 %call.i.i, 10
  %conv.i = trunc i64 %shr.i to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %conv.i, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  %rem.i = and i32 %napi_id, 255
  %arrayidx.i = getelementptr [256 x %struct.hlist_head], ptr @napi_hash, i32 0, i32 %rem.i
  %conv = zext i16 %budget to i32
  br label %restart

restart:                                          ; preds = %do.body82.restart_crit_edge, %cond.end
  %have_poll_lock.0 = phi ptr [ null, %cond.end ], [ %have_poll_lock.4189, %do.body82.restart_crit_edge ]
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %restart.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

restart.rcu_read_lock.exit_crit_edge:             ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %restart
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %restart.rcu_read_lock.exit_crit_edge
  %call.i156 = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i156)
  %tobool.not.i157 = icmp eq i32 %call.i156, 0
  br i1 %tobool.not.i157, label %land.lhs.true.i159, label %rcu_read_lock.exit.do.end.i_crit_edge

rcu_read_lock.exit.do.end.i_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true.i159:                               ; preds = %rcu_read_lock.exit
  %call1.i158 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i158)
  %tobool2.not.i = icmp eq i32 %call1.i158, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i159.do.end.i_crit_edge, label %land.lhs.true3.i

land.lhs.true.i159.do.end.i_crit_edge:            ; preds = %land.lhs.true.i159
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i159
  %.b39.i = load i1, ptr @napi_by_id.__warned, align 1
  br i1 %.b39.i, label %land.lhs.true3.i.do.end.i_crit_edge, label %if.then.i160

land.lhs.true3.i.do.end.i_crit_edge:              ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

if.then.i160:                                     ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @napi_by_id.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5976, ptr noundef nonnull @.str.4) #35
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i160, %land.lhs.true3.i.do.end.i_crit_edge, %land.lhs.true.i159.do.end.i_crit_edge, %rcu_read_lock.exit.do.end.i_crit_edge
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %arrayidx.i, align 4
  %tobool10.not.i = icmp eq ptr %5, null
  %add.ptr.i = getelementptr i8, ptr %5, i32 -208
  %tobool12.not4346.i = icmp eq ptr %add.ptr.i, null
  %tobool12.not43.i = or i1 %tobool10.not.i, %tobool12.not4346.i
  br i1 %tobool12.not43.i, label %do.end.i.out_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.out_crit_edge:                           ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %napi.044.i = phi ptr [ %add.ptr27.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i, %do.end.i.for.body.i_crit_edge ]
  %napi_id13.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 15
  %6 = ptrtoint ptr %napi_id13.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %napi_id13.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %napi_id)
  %cmp.i = icmp eq i32 %7, %napi_id
  br i1 %cmp.i, label %do.body, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %napi_hash_node.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 14
  %8 = ptrtoint ptr %napi_hash_node.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %napi_hash_node.i, align 8
  %tobool23.not.i = icmp eq ptr %9, null
  %add.ptr27.i = getelementptr i8, ptr %9, i32 -208
  %tobool12.not47.i = icmp eq ptr %add.ptr27.i, null
  %tobool12.not.i = or i1 %tobool23.not.i, %tobool12.not47.i
  br i1 %tobool12.not.i, label %for.inc.i.out_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.inc.i.out_crit_edge:                          ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

do.body:                                          ; preds = %for.body.i
  %10 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %13, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1386
  %state = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 1
  %dev1.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 7
  %poll_owner.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 6
  %poll = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 5
  %rx_count.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 11
  %rx_list.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 10
  %prev.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i, i32 0, i32 10, i32 1
  br label %for.cond

for.cond:                                         ; preds = %do.end95, %do.body
  %have_poll_lock.1 = phi ptr [ %have_poll_lock.0, %do.body ], [ %have_poll_lock.4189, %do.end95 ]
  %napi_poll.0 = phi ptr [ null, %do.body ], [ %napi_poll.3192, %do.end95 ]
  tail call fastcc void @local_bh_disable()
  %tobool3.not = icmp eq ptr %napi_poll.0, null
  br i1 %tobool3.not, label %if.then4, label %for.cond.if.end43_crit_edge

for.cond.if.end43_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end43

if.then4:                                         ; preds = %for.cond
  %14 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state, align 8
  %and = and i32 %15, 69
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %if.end14, label %if.then9

if.then9:                                         ; preds = %if.then4
  br i1 %prefer_busy_poll, label %if.then11, label %if.then9.if.end68_crit_edge

if.then9.if.end68_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end68

if.then11:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_set_bit(i32 noundef 7, ptr noundef %state) #35
  br label %if.end68

if.end14:                                         ; preds = %if.then4
  %call.i150 = tail call zeroext i1 @__kasan_check_write(ptr noundef %state, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1387
  %or27 = or i32 %15, 65
  tail call void @llvm.prefetch.p0(ptr %state, i32 1, i32 3, i32 1) #35
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end14
  %16 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %state, i32 %15, i32 %or27) #35, !srcloc !1382
  %asmresult.i = extractvalue { i32, i32 } %16, 0
  %tobool.not.i161 = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i161, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %16, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1388
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult1.i, i32 %15)
  %cmp.not = icmp eq i32 %asmresult1.i, %15
  br i1 %cmp.not, label %if.end41, label %if.then36

if.then36:                                        ; preds = %__cmpxchg.exit
  br i1 %prefer_busy_poll, label %if.then38, label %if.then36.if.end68_crit_edge

if.then36.if.end68_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end68

if.then38:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_set_bit(i32 noundef 7, ptr noundef %state) #35
  br label %if.end68

if.end41:                                         ; preds = %__cmpxchg.exit
  %17 = ptrtoint ptr %dev1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev1.i, align 8
  %tobool.not.i162 = icmp eq ptr %18, null
  br i1 %tobool.not.i162, label %if.end41.cleanup_crit_edge, label %land.lhs.true.i164

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

land.lhs.true.i164:                               ; preds = %if.end41
  %npinfo.i = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 126
  %19 = ptrtoint ptr %npinfo.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %npinfo.i, align 16
  %tobool2.not.i163 = icmp eq ptr %20, null
  br i1 %tobool2.not.i163, label %land.lhs.true.i164.cleanup_crit_edge, label %if.then.i166

land.lhs.true.i164.cleanup_crit_edge:             ; preds = %land.lhs.true.i164
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.i166:                                     ; preds = %land.lhs.true.i164
  %21 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i165 = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i165 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cpu.i, align 4
  br label %while.cond.i

while.cond.i:                                     ; preds = %do.end22.i, %if.then.i166
  %call.i.i167 = tail call zeroext i1 @__kasan_check_write(ptr noundef %poll_owner.i, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1389
  tail call void @llvm.prefetch.p0(ptr %poll_owner.i, i32 1, i32 3, i32 1) #35
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %while.cond.i
  %25 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %poll_owner.i, i32 -1, i32 %24) #35, !srcloc !1382
  %asmresult.i.i = extractvalue { i32, i32 } %25, 0
  %tobool.not.i.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool.not.i.i, label %__cmpxchg.exit.i, label %do.body.i.i.do.body.i.i_crit_edge

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i.i

__cmpxchg.exit.i:                                 ; preds = %do.body.i.i
  %asmresult1.i.i = extractvalue { i32, i32 } %25, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1390
  %cmp.not.i = icmp eq i32 %asmresult1.i.i, -1
  br i1 %cmp.not.i, label %__cmpxchg.exit.i.cleanup_crit_edge, label %do.end22.i

__cmpxchg.exit.i.cleanup_crit_edge:               ; preds = %__cmpxchg.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

do.end22.i:                                       ; preds = %__cmpxchg.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1391
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #35, !srcloc !1392
  br label %while.cond.i

cleanup:                                          ; preds = %__cmpxchg.exit.i.cleanup_crit_edge, %land.lhs.true.i164.cleanup_crit_edge, %if.end41.cleanup_crit_edge
  %retval.0.i = phi ptr [ null, %land.lhs.true.i164.cleanup_crit_edge ], [ null, %if.end41.cleanup_crit_edge ], [ %napi.044.i, %__cmpxchg.exit.i.cleanup_crit_edge ]
  %26 = ptrtoint ptr %poll to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %poll, align 8
  br label %if.end43

if.end43:                                         ; preds = %cleanup, %for.cond.if.end43_crit_edge
  %have_poll_lock.3 = phi ptr [ %have_poll_lock.1, %for.cond.if.end43_crit_edge ], [ %retval.0.i, %cleanup ]
  %napi_poll.2 = phi ptr [ %napi_poll.0, %for.cond.if.end43_crit_edge ], [ %27, %cleanup ]
  %call44 = tail call i32 %napi_poll.2(ptr noundef nonnull %napi.044.i, i32 noundef %conv) #35
  tail call fastcc void @trace_napi_poll(ptr noundef nonnull %napi.044.i, i32 noundef %call44, i32 noundef %conv)
  %28 = ptrtoint ptr %rx_count.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rx_count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i168 = icmp eq i32 %29, 0
  br i1 %tobool.not.i168, label %if.end43.count_crit_edge, label %if.end.i

if.end43.count_crit_edge:                         ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #37
  br label %count

if.end.i:                                         ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @netif_receive_skb_list_internal(ptr noundef %rx_list.i) #35
  %30 = ptrtoint ptr %rx_list.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %rx_list.i, ptr %rx_list.i, align 4
  %31 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %rx_list.i, ptr %prev.i.i, align 4
  %32 = ptrtoint ptr %rx_count.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %rx_count.i, align 8
  br label %count

count:                                            ; preds = %if.end.i, %if.end43.count_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %cmp46 = icmp sgt i32 %call44, 0
  br i1 %cmp46, label %if.then48, label %count.if.end68_crit_edge

count.if.end68_crit_edge:                         ; preds = %count
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end68

if.then48:                                        ; preds = %count
  call void @__sanitizer_cov_trace_pc() #37
  %33 = ptrtoint ptr %dev1.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev1.i, align 8
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %34, i32 0, i32 127
  %35 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %nd_net.i, align 4
  %net_statistics = getelementptr inbounds %struct.net, ptr %36, i32 0, i32 30, i32 3
  %37 = ptrtoint ptr %net_statistics to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %net_statistics, align 4
  %arrayidx = getelementptr [126 x i32], ptr %38, i32 0, i32 92
  %39 = ptrtoint ptr %arrayidx to i32
  %40 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %40, -16384
  %41 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 3
  %42 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpu, align 4
  %arrayidx62 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %43
  %44 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx62, align 4
  %add = add i32 %45, %39
  %46 = inttoptr i32 %add to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %46, align 4
  %add63 = add i32 %48, %call44
  store i32 %add63, ptr %46, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.then48, %count.if.end68_crit_edge, %if.then38, %if.then36.if.end68_crit_edge, %if.then11, %if.then9.if.end68_crit_edge
  %napi_poll.3192 = phi ptr [ %napi_poll.2, %if.then48 ], [ %napi_poll.2, %count.if.end68_crit_edge ], [ null, %if.then36.if.end68_crit_edge ], [ null, %if.then38 ], [ null, %if.then9.if.end68_crit_edge ], [ null, %if.then11 ]
  %have_poll_lock.4189 = phi ptr [ %have_poll_lock.3, %if.then48 ], [ %have_poll_lock.3, %count.if.end68_crit_edge ], [ %have_poll_lock.1, %if.then36.if.end68_crit_edge ], [ %have_poll_lock.1, %if.then38 ], [ %have_poll_lock.1, %if.then9.if.end68_crit_edge ], [ %have_poll_lock.1, %if.then11 ]
  tail call fastcc void @local_bh_enable()
  br i1 %tobool.not, label %if.end68.for.end_crit_edge, label %lor.lhs.false

if.end68.for.end_crit_edge:                       ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

lor.lhs.false:                                    ; preds = %if.end68
  %call70 = tail call zeroext i1 %loop_end(ptr noundef %loop_end_arg, i32 noundef %cond) #35
  br i1 %call70, label %lor.lhs.false.for.end_crit_edge, label %if.end73

lor.lhs.false.for.end_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

if.end73:                                         ; preds = %lor.lhs.false
  %49 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i to ptr
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %50, align 16384
  %53 = and i32 %52, 2
  %tobool.i.not = icmp eq i32 %53, 0
  br i1 %tobool.i.not, label %do.end95, label %if.then77, !prof !1311

if.then77:                                        ; preds = %if.end73
  %tobool78.not = icmp eq ptr %napi_poll.3192, null
  br i1 %tobool78.not, label %if.then77.do.body82_crit_edge, label %if.then79

if.then77.do.body82_crit_edge:                    ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body82

if.then79:                                        ; preds = %if.then77
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @busy_poll_stop(ptr noundef nonnull %napi.044.i, ptr noundef %have_poll_lock.4189, i1 noundef zeroext %prefer_busy_poll, i16 noundef zeroext %budget)
  br label %do.body82

do.body82:                                        ; preds = %if.then79, %if.then77.do.body82_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1393
  %54 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i151 = and i32 %54, -16384
  %55 = inttoptr i32 %and.i.i.i151 to ptr
  %preempt_count.i.i152 = getelementptr inbounds %struct.thread_info, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %preempt_count.i.i152 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %preempt_count.i.i152, align 4
  %sub.i = add i32 %57, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i152, align 4
  tail call fastcc void @rcu_read_unlock()
  tail call void @__might_resched(ptr noundef nonnull @.str.3, i32 noundef 6111, i32 noundef 0) #35
  %call.i169 = tail call i32 @__cond_resched() #35
  %call87 = tail call zeroext i1 %loop_end(ptr noundef %loop_end_arg, i32 noundef %cond) #35
  br i1 %call87, label %do.body82.cleanup110_crit_edge, label %do.body82.restart_crit_edge

do.body82.restart_crit_edge:                      ; preds = %do.body82
  call void @__sanitizer_cov_trace_pc() #37
  br label %restart

do.body82.cleanup110_crit_edge:                   ; preds = %do.body82
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup110

do.end95:                                         ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1394
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #35, !srcloc !1395
  br label %for.cond

for.end:                                          ; preds = %lor.lhs.false.for.end_crit_edge, %if.end68.for.end_crit_edge
  %tobool103.not = icmp eq ptr %napi_poll.3192, null
  br i1 %tobool103.not, label %for.end.do.body107_crit_edge, label %if.then104

for.end.do.body107_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body107

if.then104:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @busy_poll_stop(ptr noundef nonnull %napi.044.i, ptr noundef %have_poll_lock.4189, i1 noundef zeroext %prefer_busy_poll, i16 noundef zeroext %budget)
  br label %do.body107

do.body107:                                       ; preds = %if.then104, %for.end.do.body107_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1396
  %58 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i153 = and i32 %58, -16384
  %59 = inttoptr i32 %and.i.i.i153 to ptr
  %preempt_count.i.i154 = getelementptr inbounds %struct.thread_info, ptr %59, i32 0, i32 1
  %60 = ptrtoint ptr %preempt_count.i.i154 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %preempt_count.i.i154, align 4
  %sub.i155 = add i32 %61, -1
  store volatile i32 %sub.i155, ptr %preempt_count.i.i154, align 4
  br label %out

out:                                              ; preds = %do.body107, %for.inc.i.out_crit_edge, %do.end.i.out_crit_edge
  %call.i170 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i170, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i173

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i173:                               ; preds = %out
  %call1.i171 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i171)
  %tobool.not.i172 = icmp eq i32 %call1.i171, 0
  br i1 %tobool.not.i172, label %land.lhs.true.i173.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i175

land.lhs.true.i173.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i173
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i175:                              ; preds = %land.lhs.true.i173
  %.b4.i174 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i174, label %land.lhs.true2.i175.rcu_read_unlock.exit_crit_edge, label %if.then.i176

land.lhs.true2.i175.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i175
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i176:                                     ; preds = %land.lhs.true2.i175
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i176, %land.lhs.true2.i175.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i173.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %62 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i177 = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i.i.i.i177 to ptr
  %preempt_count.i.i.i.i178 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %preempt_count.i.i.i.i178 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %preempt_count.i.i.i.i178, align 4
  %sub.i.i.i = add i32 %65, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i178, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  br label %cleanup110

cleanup110:                                       ; preds = %rcu_read_unlock.exit, %do.body82.cleanup110_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_napi_poll(ptr noundef %napi, i32 noundef %work, i32 noundef %budget) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_napi_poll, i32 0, i32 1), ptr blockaddress(@trace_napi_poll, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1397
  %call42 = tail call i32 @__traceiter_napi_poll(ptr noundef null, ptr noundef %napi, i32 noundef %work, i32 noundef %budget) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1398
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_napi_poll, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_napi_poll, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_napi_poll.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_napi_poll.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 37, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @busy_poll_stop(ptr noundef %napi, ptr noundef %have_poll_lock, i1 noundef zeroext %prefer_busy_poll, i16 noundef zeroext %budget) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 1
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %state) #35
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %state) #35
  tail call fastcc void @local_bh_disable()
  br i1 %prefer_busy_poll, label %do.end, label %entry.if.end11_crit_edge

entry.if.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

do.end:                                           ; preds = %entry
  %dev = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 7
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %napi_defer_hard_irqs = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 92
  %2 = ptrtoint ptr %napi_defer_hard_irqs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %napi_defer_hard_irqs, align 8
  %defer_hard_irqs_count = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 3
  %4 = ptrtoint ptr %defer_hard_irqs_count to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %defer_hard_irqs_count, align 8
  %gro_flush_timeout = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 91
  %5 = ptrtoint ptr %gro_flush_timeout to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %gro_flush_timeout, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool8.not = icmp eq i32 %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool9.not = icmp eq i32 %6, 0
  %or.cond = select i1 %tobool8.not, i1 true, i1 %tobool9.not
  br i1 %or.cond, label %do.end.if.end11_crit_edge, label %if.then10

do.end.if.end11_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

if.then10:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  %timer = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 12
  %conv = zext i32 %6 to i64
  tail call void @hrtimer_start_range_ns(ptr noundef %timer, i64 noundef %conv, i64 noundef 0, i32 noundef 3) #35
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %do.end.if.end11_crit_edge, %entry.if.end11_crit_edge
  %skip_schedule.0.off0 = phi i1 [ true, %if.then10 ], [ false, %do.end.if.end11_crit_edge ], [ false, %entry.if.end11_crit_edge ]
  %poll = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 5
  %7 = ptrtoint ptr %poll to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %poll, align 8
  %conv12 = zext i16 %budget to i32
  %call13 = tail call i32 %8(ptr noundef %napi, i32 noundef %conv12) #35
  tail call fastcc void @trace_napi_poll(ptr noundef %napi, i32 noundef %call13, i32 noundef %conv12)
  %tobool.not.i = icmp eq ptr %have_poll_lock, null
  br i1 %tobool.not.i, label %if.end11.netpoll_poll_unlock.exit_crit_edge, label %do.end5.i

if.end11.netpoll_poll_unlock.exit_crit_edge:      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #37
  br label %netpoll_poll_unlock.exit

do.end5.i:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1399
  %poll_owner.i = getelementptr inbounds %struct.napi_struct, ptr %have_poll_lock, i32 0, i32 6
  %9 = ptrtoint ptr %poll_owner.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 -1, ptr %poll_owner.i, align 4
  br label %netpoll_poll_unlock.exit

netpoll_poll_unlock.exit:                         ; preds = %do.end5.i, %if.end11.netpoll_poll_unlock.exit_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %call13, i32 %conv12)
  %cmp = icmp eq i32 %call13, %conv12
  br i1 %cmp, label %if.then17, label %netpoll_poll_unlock.exit.if.end19_crit_edge

netpoll_poll_unlock.exit.if.end19_crit_edge:      ; preds = %netpoll_poll_unlock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19

if.then17:                                        ; preds = %netpoll_poll_unlock.exit
  br i1 %skip_schedule.0.off0, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.then17
  %rx_count.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 11
  %10 = ptrtoint ptr %rx_count.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rx_count.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i.i, label %if.then.i.gro_normal_list.exit.i_crit_edge, label %if.end.i.i

if.then.i.gro_normal_list.exit.i_crit_edge:       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %gro_normal_list.exit.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  %rx_list.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 10
  tail call void @netif_receive_skb_list_internal(ptr noundef %rx_list.i.i) #35
  %12 = ptrtoint ptr %rx_list.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %rx_list.i.i, ptr %rx_list.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 10, i32 1
  %13 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %rx_list.i.i, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %rx_count.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %rx_count.i.i, align 8
  br label %gro_normal_list.exit.i

gro_normal_list.exit.i:                           ; preds = %if.end.i.i, %if.then.i.gro_normal_list.exit.i_crit_edge
  tail call void @__napi_schedule(ptr noundef %napi) #35
  br label %if.end19

if.end.i:                                         ; preds = %if.then17
  %gro_bitmask.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 4
  %15 = ptrtoint ptr %gro_bitmask.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %gro_bitmask.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool1.not.i = icmp eq i32 %16, 0
  br i1 %tobool1.not.i, label %if.end.i.if.end3.i_crit_edge, label %if.then2.i

if.end.i.if.end3.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @napi_gro_flush(ptr noundef %napi, i1 noundef zeroext false) #35
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.then2.i, %if.end.i.if.end3.i_crit_edge
  %rx_count.i9.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 11
  %17 = ptrtoint ptr %rx_count.i9.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rx_count.i9.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i10.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i10.i, label %if.end3.i.gro_normal_list.exit14.i_crit_edge, label %if.end.i13.i

if.end3.i.gro_normal_list.exit14.i_crit_edge:     ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %gro_normal_list.exit14.i

if.end.i13.i:                                     ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  %rx_list.i11.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 10
  tail call void @netif_receive_skb_list_internal(ptr noundef %rx_list.i11.i) #35
  %19 = ptrtoint ptr %rx_list.i11.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %rx_list.i11.i, ptr %rx_list.i11.i, align 4
  %prev.i.i12.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 10, i32 1
  %20 = ptrtoint ptr %prev.i.i12.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %rx_list.i11.i, ptr %prev.i.i12.i, align 4
  %21 = ptrtoint ptr %rx_count.i9.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %rx_count.i9.i, align 8
  br label %gro_normal_list.exit14.i

gro_normal_list.exit14.i:                         ; preds = %if.end.i13.i, %if.end3.i.gro_normal_list.exit14.i_crit_edge
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state) #35
  br label %if.end19

if.end19:                                         ; preds = %gro_normal_list.exit14.i, %gro_normal_list.exit.i, %netpoll_poll_unlock.exit.if.end19_crit_edge
  tail call fastcc void @local_bh_enable()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_threaded(ptr noundef %dev, i1 noundef zeroext %threaded) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %threaded1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 149
  %0 = ptrtoint ptr %threaded1 to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %threaded1, align 1
  %1 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %2 = icmp eq i8 %1, 0
  %cmp = xor i1 %2, %threaded
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %threaded, label %if.then4, label %if.end.if.end19.thread_crit_edge

if.end.if.end19.thread_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19.thread

if.then4:                                         ; preds = %if.end
  %napi_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 8
  %3 = ptrtoint ptr %napi_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn6879 = load ptr, ptr %napi_list, align 8
  %cmp6.not81 = icmp eq ptr %.pn6879, %napi_list
  br i1 %cmp6.not81, label %if.then4.if.end19.thread_crit_edge, label %if.then4.for.body_crit_edge

if.then4.for.body_crit_edge:                      ; preds = %if.then4
  br label %for.body

if.then4.if.end19.thread_crit_edge:               ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19.thread

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.then4.for.body_crit_edge
  %.pn6882 = phi ptr [ %.pn68, %for.inc.for.body_crit_edge ], [ %.pn6879, %if.then4.for.body_crit_edge ]
  %thread = getelementptr i8, ptr %.pn6882, i32 20
  %4 = ptrtoint ptr %thread to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %thread, align 4
  %tobool8.not = icmp eq ptr %5, null
  br i1 %tobool8.not, label %if.then9, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.then9:                                         ; preds = %for.body
  %napi.083 = getelementptr i8, ptr %.pn6882, i32 -200
  %dev.i = getelementptr i8, ptr %.pn6882, i32 -168
  %6 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev.i, align 8
  %napi_id.i = getelementptr i8, ptr %.pn6882, i32 16
  %8 = ptrtoint ptr %napi_id.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %napi_id.i, align 8
  %call.i = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @napi_threaded_poll, ptr noundef %napi.083, i32 noundef -1, ptr noundef nonnull @.str.150, ptr noundef %7, i32 noundef %9) #35
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %napi_kthread_create.exit, label %napi_kthread_create.exit.thread

napi_kthread_create.exit.thread:                  ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #37
  %call2.i = tail call i32 @wake_up_process(ptr noundef %call.i) #35
  %10 = ptrtoint ptr %thread to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call.i, ptr %thread, align 4
  br label %for.inc

napi_kthread_create.exit:                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #37
  %11 = ptrtoint ptr %thread to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call.i, ptr %thread, align 4
  %12 = ptrtoint ptr %call.i to i32
  %call9.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.151, i32 noundef %12) #41
  %13 = ptrtoint ptr %thread to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %thread, align 4
  br label %if.end19.thread

for.inc:                                          ; preds = %napi_kthread_create.exit.thread, %for.body.for.inc_crit_edge
  %14 = ptrtoint ptr %.pn6882 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn68 = load ptr, ptr %.pn6882, align 8
  %cmp6.not = icmp eq ptr %.pn68, %napi_list
  br i1 %cmp6.not, label %for.inc.if.end19.thread_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.if.end19.thread_crit_edge:                ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19.thread

if.end19.thread:                                  ; preds = %for.inc.if.end19.thread_crit_edge, %napi_kthread_create.exit, %if.then4.if.end19.thread_crit_edge, %if.end.if.end19.thread_crit_edge
  %threaded.addr.0.shrunk75 = phi i1 [ false, %napi_kthread_create.exit ], [ false, %if.end.if.end19.thread_crit_edge ], [ true, %if.then4.if.end19.thread_crit_edge ], [ true, %for.inc.if.end19.thread_crit_edge ]
  %err.274 = phi i32 [ %12, %napi_kthread_create.exit ], [ 0, %if.end.if.end19.thread_crit_edge ], [ 0, %if.then4.if.end19.thread_crit_edge ], [ 0, %for.inc.if.end19.thread_crit_edge ]
  %15 = phi i8 [ 0, %napi_kthread_create.exit ], [ 0, %if.end.if.end19.thread_crit_edge ], [ 64, %if.then4.if.end19.thread_crit_edge ], [ 64, %for.inc.if.end19.thread_crit_edge ]
  %16 = ptrtoint ptr %threaded1 to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load2376 = load i8, ptr %threaded1, align 1
  %bf.clear24 = and i8 %bf.load2376, -65
  %bf.set = or i8 %bf.clear24, %15
  store i8 %bf.set, ptr %threaded1, align 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1400
  %napi_list29 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 8
  %17 = ptrtoint ptr %napi_list29 to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn84 = load ptr, ptr %napi_list29, align 8
  %cmp36.not85 = icmp eq ptr %.pn84, %napi_list29
  br i1 %cmp36.not85, label %if.end19.thread.cleanup_crit_edge, label %if.end19.thread.for.body39_crit_edge

if.end19.thread.for.body39_crit_edge:             ; preds = %if.end19.thread
  br label %for.body39

if.end19.thread.cleanup_crit_edge:                ; preds = %if.end19.thread
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body39:                                       ; preds = %for.inc44.for.body39_crit_edge, %if.end19.thread.for.body39_crit_edge
  %.pn86 = phi ptr [ %.pn, %for.inc44.for.body39_crit_edge ], [ %.pn84, %if.end19.thread.for.body39_crit_edge ]
  %state = getelementptr i8, ptr %.pn86, i32 -192
  br i1 %threaded.addr.0.shrunk75, label %if.then41, label %if.else

if.then41:                                        ; preds = %for.body39
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_set_bit(i32 noundef 8, ptr noundef %state) #35
  br label %for.inc44

if.else:                                          ; preds = %for.body39
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %state) #35
  br label %for.inc44

for.inc44:                                        ; preds = %if.else, %if.then41
  %18 = ptrtoint ptr %.pn86 to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn = load ptr, ptr %.pn86, align 8
  %cmp36.not = icmp eq ptr %.pn, %napi_list29
  br i1 %cmp36.not, label %for.inc44.cleanup_crit_edge, label %for.inc44.for.body39_crit_edge

for.inc44.for.body39_crit_edge:                   ; preds = %for.inc44
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body39

for.inc44.cleanup_crit_edge:                      ; preds = %for.inc44
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

cleanup:                                          ; preds = %for.inc44.cleanup_crit_edge, %if.end19.thread.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %err.274, %if.end19.thread.cleanup_crit_edge ], [ %err.274, %for.inc44.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_napi_add(ptr noundef %dev, ptr noundef %napi, ptr noundef %poll, i32 noundef %weight) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 1
  %call = tail call i32 @_test_and_set_bit(i32 noundef 4, ptr noundef %state) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end22.critedge, label %do.end, !prof !1311

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6236, i32 noundef 9, ptr noundef null) #35
  br label %if.end44

if.end22.critedge:                                ; preds = %entry
  %0 = ptrtoint ptr %napi to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %napi, ptr %napi, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %napi, i32 0, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %napi, ptr %prev.i, align 4
  %napi_hash_node = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 14
  %2 = ptrtoint ptr %napi_hash_node to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %napi_hash_node, align 4
  %pprev.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 14, i32 1
  %3 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %pprev.i, align 4
  %timer = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 12
  tail call void @hrtimer_init(ptr noundef %timer, i32 noundef 1, i32 noundef 3) #35
  %function = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 12, i32 2
  %4 = ptrtoint ptr %function to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @napi_watchdog, ptr %function, align 8
  %arrayidx.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 0
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %arrayidx.i, ptr %arrayidx.i, align 4
  %prev.i.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 0, i32 0, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %arrayidx.i, ptr %prev.i.i, align 4
  %count.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 0, i32 1
  %7 = ptrtoint ptr %count.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %count.i, align 4
  %arrayidx.1.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 1
  %8 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %arrayidx.1.i, ptr %arrayidx.1.i, align 4
  %prev.i.1.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 1, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.1.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %arrayidx.1.i, ptr %prev.i.1.i, align 4
  %count.1.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 1, i32 1
  %10 = ptrtoint ptr %count.1.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %count.1.i, align 4
  %arrayidx.2.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 2
  %11 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %arrayidx.2.i, ptr %arrayidx.2.i, align 4
  %prev.i.2.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 2, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i.2.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %arrayidx.2.i, ptr %prev.i.2.i, align 4
  %count.2.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 2, i32 1
  %13 = ptrtoint ptr %count.2.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %count.2.i, align 4
  %arrayidx.3.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 3
  %14 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %arrayidx.3.i, ptr %arrayidx.3.i, align 4
  %prev.i.3.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 3, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i.3.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %arrayidx.3.i, ptr %prev.i.3.i, align 4
  %count.3.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 3, i32 1
  %16 = ptrtoint ptr %count.3.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %count.3.i, align 4
  %arrayidx.4.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 4
  %17 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %arrayidx.4.i, ptr %arrayidx.4.i, align 4
  %prev.i.4.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 4, i32 0, i32 1
  %18 = ptrtoint ptr %prev.i.4.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %arrayidx.4.i, ptr %prev.i.4.i, align 4
  %count.4.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 4, i32 1
  %19 = ptrtoint ptr %count.4.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %count.4.i, align 4
  %arrayidx.5.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 5
  %20 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %arrayidx.5.i, ptr %arrayidx.5.i, align 4
  %prev.i.5.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 5, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i.5.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %arrayidx.5.i, ptr %prev.i.5.i, align 4
  %count.5.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 5, i32 1
  %22 = ptrtoint ptr %count.5.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %count.5.i, align 4
  %arrayidx.6.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 6
  %23 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %arrayidx.6.i, ptr %arrayidx.6.i, align 4
  %prev.i.6.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 6, i32 0, i32 1
  %24 = ptrtoint ptr %prev.i.6.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %arrayidx.6.i, ptr %prev.i.6.i, align 4
  %count.6.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 6, i32 1
  %25 = ptrtoint ptr %count.6.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %count.6.i, align 4
  %arrayidx.7.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 7
  %26 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %arrayidx.7.i, ptr %arrayidx.7.i, align 4
  %prev.i.7.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 7, i32 0, i32 1
  %27 = ptrtoint ptr %prev.i.7.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %arrayidx.7.i, ptr %prev.i.7.i, align 4
  %count.7.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 7, i32 1
  %28 = ptrtoint ptr %count.7.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %count.7.i, align 4
  %gro_bitmask.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 4
  %29 = ptrtoint ptr %gro_bitmask.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %gro_bitmask.i, align 4
  %skb = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 9
  %30 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %skb, align 4
  %rx_list = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 10
  %31 = ptrtoint ptr %rx_list to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %rx_list, ptr %rx_list, align 4
  %prev.i70 = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 10, i32 1
  %32 = ptrtoint ptr %prev.i70 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %rx_list, ptr %prev.i70, align 4
  %rx_count = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 11
  %33 = ptrtoint ptr %rx_count to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %rx_count, align 8
  %poll24 = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 5
  %34 = ptrtoint ptr %poll24 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %poll, ptr %poll24, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %weight)
  %cmp = icmp sgt i32 %weight, 64
  br i1 %cmp, label %do.body26, label %if.end22.critedge.if.end32_crit_edge

if.end22.critedge.if.end32_crit_edge:             ; preds = %if.end22.critedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32

do.body26:                                        ; preds = %if.end22.critedge
  %.b69 = load i1, ptr @netif_napi_add.__print_once, align 1
  br i1 %.b69, label %do.body26.if.end32_crit_edge, label %if.then28

do.body26.if.end32_crit_edge:                     ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32

if.then28:                                        ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netif_napi_add.__print_once, align 1
  tail call void (ptr, ptr, ptr, ...) @netdev_printk(ptr noundef nonnull @.str.60, ptr noundef %dev, ptr noundef nonnull @.str.61, ptr noundef nonnull @__func__.netif_napi_add, i32 noundef %weight) #43
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %do.body26.if.end32_crit_edge, %if.end22.critedge.if.end32_crit_edge
  %weight33 = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 2
  %35 = ptrtoint ptr %weight33 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %weight, ptr %weight33, align 4
  %dev34 = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 7
  %36 = ptrtoint ptr %dev34 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %dev, ptr %dev34, align 8
  %poll_owner = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 6
  %37 = ptrtoint ptr %poll_owner to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 -1, ptr %poll_owner, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state) #35
  tail call void @_set_bit(i32 noundef 3, ptr noundef %state) #35
  %dev_list = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 13
  %napi_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 8
  %38 = ptrtoint ptr %napi_list to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %napi_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %dev_list, ptr noundef %napi_list, ptr noundef %39) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.end32.list_add_rcu.exit_crit_edge

if.end32.list_add_rcu.exit_crit_edge:             ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_rcu.exit

if.end.i.i:                                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #37
  %40 = ptrtoint ptr %dev_list to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %39, ptr %dev_list, align 4
  %prev2.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 13, i32 1
  %41 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %napi_list, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1309
  %42 = ptrtoint ptr %napi_list to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %dev_list, ptr %napi_list, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  %43 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %dev_list, ptr %prev37.i.i, align 4
  br label %list_add_rcu.exit

list_add_rcu.exit:                                ; preds = %if.end.i.i, %if.end32.list_add_rcu.exit_crit_edge
  %44 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %state, align 4
  %46 = and i32 %45, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i = icmp eq i32 %46, 0
  br i1 %tobool.not.i, label %if.end.i, label %list_add_rcu.exit.napi_hash_add.exit_crit_edge

list_add_rcu.exit.napi_hash_add.exit_crit_edge:   ; preds = %list_add_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %napi_hash_add.exit

if.end.i:                                         ; preds = %list_add_rcu.exit
  tail call void @_raw_spin_lock(ptr noundef nonnull @napi_hash_lock) #35
  br label %do.body.i

do.body.i:                                        ; preds = %for.body.i.i.do.body.i_crit_edge, %if.end.i
  %47 = load i32, ptr @napi_gen_id, align 4
  %inc.i = add i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %inc.i)
  %cmp.i = icmp ult i32 %inc.i, 5
  br i1 %cmp.i, label %if.then3.i, label %do.body.i.do.cond.i_crit_edge, !prof !1310

do.body.i.do.cond.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.cond.i

if.then3.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.cond.i

do.cond.i:                                        ; preds = %if.then3.i, %do.body.i.do.cond.i_crit_edge
  %storemerge.i = phi i32 [ 5, %if.then3.i ], [ %inc.i, %do.body.i.do.cond.i_crit_edge ]
  store i32 %storemerge.i, ptr @napi_gen_id, align 4
  %rem.i.i = and i32 %storemerge.i, 255
  %call.i.i71 = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i71)
  %tobool.not.i.i = icmp eq i32 %call.i.i71, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %do.cond.i.do.end.i.i_crit_edge

do.cond.i.do.end.i.i_crit_edge:                   ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i.i

land.lhs.true.i.i:                                ; preds = %do.cond.i
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.do.end.i.i_crit_edge, label %land.lhs.true3.i.i

land.lhs.true.i.i.do.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i.i
  %.b39.i.i = load i1, ptr @napi_by_id.__warned, align 1
  br i1 %.b39.i.i, label %land.lhs.true3.i.i.do.end.i.i_crit_edge, label %if.then.i.i

land.lhs.true3.i.i.do.end.i.i_crit_edge:          ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i.i

if.then.i.i:                                      ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @napi_by_id.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5976, ptr noundef nonnull @.str.4) #35
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %if.then.i.i, %land.lhs.true3.i.i.do.end.i.i_crit_edge, %land.lhs.true.i.i.do.end.i.i_crit_edge, %do.cond.i.do.end.i.i_crit_edge
  %arrayidx.i.i = getelementptr [256 x %struct.hlist_head], ptr @napi_hash, i32 0, i32 %rem.i.i
  %48 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %tobool10.not.i.i = icmp eq ptr %49, null
  %add.ptr.i.i = getelementptr i8, ptr %49, i32 -208
  %tobool12.not4346.i.i = icmp eq ptr %add.ptr.i.i, null
  %tobool12.not43.i.i = or i1 %tobool10.not.i.i, %tobool12.not4346.i.i
  br i1 %tobool12.not43.i.i, label %do.end.i.i.do.end.i_crit_edge, label %do.end.i.i.for.body.i.i_crit_edge

do.end.i.i.for.body.i.i_crit_edge:                ; preds = %do.end.i.i
  br label %for.body.i.i

do.end.i.i.do.end.i_crit_edge:                    ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %do.end.i.i.for.body.i.i_crit_edge
  %napi.044.i.i = phi ptr [ %add.ptr27.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %add.ptr.i.i, %do.end.i.i.for.body.i.i_crit_edge ]
  %napi_id13.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i.i, i32 0, i32 15
  %50 = ptrtoint ptr %napi_id13.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %napi_id13.i.i, align 8
  %cmp.i.i = icmp eq i32 %51, %storemerge.i
  br i1 %cmp.i.i, label %for.body.i.i.do.body.i_crit_edge, label %for.inc.i.i

for.body.i.i.do.body.i_crit_edge:                 ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %napi_hash_node.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi.044.i.i, i32 0, i32 14
  %52 = ptrtoint ptr %napi_hash_node.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %napi_hash_node.i.i, align 8
  %tobool23.not.i.i = icmp eq ptr %53, null
  %add.ptr27.i.i = getelementptr i8, ptr %53, i32 -208
  %tobool12.not47.i.i = icmp eq ptr %add.ptr27.i.i, null
  %tobool12.not.i.i = or i1 %tobool23.not.i.i, %tobool12.not47.i.i
  br i1 %tobool12.not.i.i, label %for.inc.i.i.do.end.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i

for.inc.i.i.do.end.i_crit_edge:                   ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i

do.end.i:                                         ; preds = %for.inc.i.i.do.end.i_crit_edge, %do.end.i.i.do.end.i_crit_edge
  %54 = load i32, ptr @napi_gen_id, align 4
  %napi_id.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 15
  %55 = ptrtoint ptr %napi_id.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %napi_id.i, align 8
  %rem.i = and i32 %54, 255
  %arrayidx.i72 = getelementptr [256 x %struct.hlist_head], ptr @napi_hash, i32 0, i32 %rem.i
  %56 = ptrtoint ptr %arrayidx.i72 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %arrayidx.i72, align 4
  %58 = ptrtoint ptr %napi_hash_node to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %57, ptr %napi_hash_node, align 4
  %59 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %arrayidx.i72, ptr %pprev.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1308
  %60 = ptrtoint ptr %arrayidx.i72 to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile ptr %napi_hash_node, ptr %arrayidx.i72, align 4
  %tobool.not.i11.i = icmp eq ptr %57, null
  br i1 %tobool.not.i11.i, label %do.end.i.hlist_add_head_rcu.exit.i_crit_edge, label %do.body49.i.i

do.end.i.hlist_add_head_rcu.exit.i_crit_edge:     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %hlist_add_head_rcu.exit.i

do.body49.i.i:                                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  %pprev51.i.i = getelementptr inbounds %struct.hlist_node, ptr %57, i32 0, i32 1
  %61 = ptrtoint ptr %pprev51.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile ptr %napi_hash_node, ptr %pprev51.i.i, align 4
  br label %hlist_add_head_rcu.exit.i

hlist_add_head_rcu.exit.i:                        ; preds = %do.body49.i.i, %do.end.i.hlist_add_head_rcu.exit.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @napi_hash_lock) #35
  br label %napi_hash_add.exit

napi_hash_add.exit:                               ; preds = %hlist_add_head_rcu.exit.i, %list_add_rcu.exit.napi_hash_add.exit_crit_edge
  %threaded = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 149
  %62 = ptrtoint ptr %threaded to i32
  call void @__asan_load1_noabort(i32 %62)
  %bf.load = load i8, ptr %threaded, align 1
  %63 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool37.not = icmp eq i8 %63, 0
  br i1 %tobool37.not, label %napi_hash_add.exit.if.end44_crit_edge, label %land.lhs.true

napi_hash_add.exit.if.end44_crit_edge:            ; preds = %napi_hash_add.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end44

land.lhs.true:                                    ; preds = %napi_hash_add.exit
  %64 = ptrtoint ptr %dev34 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dev34, align 8
  %napi_id.i73 = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 15
  %66 = ptrtoint ptr %napi_id.i73 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %napi_id.i73, align 8
  %call.i = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @napi_threaded_poll, ptr noundef %napi, i32 noundef -1, ptr noundef nonnull @.str.150, ptr noundef %65, i32 noundef %67) #35
  %cmp.i.i74 = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i74, label %napi_kthread_create.exit, label %napi_kthread_create.exit.thread

napi_kthread_create.exit.thread:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  %call2.i = tail call i32 @wake_up_process(ptr noundef %call.i) #35
  %thread.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 16
  %68 = ptrtoint ptr %thread.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call.i, ptr %thread.i, align 4
  br label %if.end44

napi_kthread_create.exit:                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  %thread22.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 16
  %69 = ptrtoint ptr %thread22.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %call.i, ptr %thread22.i, align 4
  %70 = ptrtoint ptr %call.i to i32
  %call9.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.151, i32 noundef %70) #41
  %71 = ptrtoint ptr %thread22.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr null, ptr %thread22.i, align 4
  %72 = ptrtoint ptr %threaded to i32
  call void @__asan_load1_noabort(i32 %72)
  %bf.load42 = load i8, ptr %threaded, align 1
  %bf.clear43 = and i8 %bf.load42, -65
  store i8 %bf.clear43, ptr %threaded, align 1
  br label %if.end44

if.end44:                                         ; preds = %napi_kthread_create.exit, %napi_kthread_create.exit.thread, %napi_hash_add.exit.if.end44_crit_edge, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_init(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @napi_watchdog(ptr noundef %timer) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %timer, i32 -152
  %state.i = getelementptr i8, ptr %timer, i32 -144
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %state.i) #35
  tail call void @__napi_schedule_irqoff(ptr noundef %add.ptr)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_printk(ptr noundef %level, ptr noundef %dev, ptr noundef %format, ...) #9 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #35
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #35
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !1320
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %format, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__netdev_printk(ptr noundef %level, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @napi_disable(ptr noundef %n) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 6273) #35
  %state = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 1
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state) #35
  br label %for.cond

for.cond:                                         ; preds = %for.cond.backedge, %entry
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 8
  %and = and i32 %1, 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @usleep_range_state(i32 noundef 20, i32 noundef 200, i32 noundef 2) #35
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %__cmpxchg.exit.for.cond.backedge_crit_edge, %if.then
  br label %for.cond

if.end:                                           ; preds = %for.cond
  %or8 = and i32 %1, -394
  %and9 = or i32 %or8, 9
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %state, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1401
  tail call void @llvm.prefetch.p0(ptr %state, i32 1, i32 3, i32 1) #35
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end
  %2 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %state, i32 %1, i32 %and9) #35, !srcloc !1382
  %asmresult.i = extractvalue { i32, i32 } %2, 0
  %tobool.not.i = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %2, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1402
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult1.i, i32 %1)
  %cmp = icmp eq i32 %asmresult1.i, %1
  br i1 %cmp, label %for.end, label %__cmpxchg.exit.for.cond.backedge_crit_edge

__cmpxchg.exit.for.cond.backedge_crit_edge:       ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.backedge

for.end:                                          ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  %timer = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 12
  %call31 = tail call i32 @hrtimer_cancel(ptr noundef %timer) #35
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %state) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hrtimer_cancel(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @napi_enable(ptr noundef %n) #1 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val)
  %state = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 1
  %dev = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 7
  %thread = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 16
  br label %do.body

do.body:                                          ; preds = %__cmpxchg.exit.do.body_crit_edge, %entry
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state, align 8
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %val, align 4
  %val.0.val.0. = load volatile i32, ptr %val, align 4
  %and1.i = and i32 %val.0.val.0., 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %do.body6, label %do.end13, !prof !1310

do.body6:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 6309, 0\0A.popsection", ""() #35, !srcloc !1403
  unreachable

do.end13:                                         ; preds = %do.body
  %and = and i32 %val.0.val.0., -10
  %3 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev, align 8
  %threaded = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 149
  %5 = ptrtoint ptr %threaded to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %threaded, align 1
  %6 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool14.not = icmp eq i8 %6, 0
  br i1 %tobool14.not, label %do.end13.do.cond18_crit_edge, label %land.lhs.true

do.end13.do.cond18_crit_edge:                     ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.cond18

land.lhs.true:                                    ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #37
  %7 = ptrtoint ptr %thread to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %thread, align 4
  %tobool15.not = icmp eq ptr %8, null
  %or = or i32 %and, 256
  %spec.select = select i1 %tobool15.not, i32 %and, i32 %or
  br label %do.cond18

do.cond18:                                        ; preds = %land.lhs.true, %do.end13.do.cond18_crit_edge
  %new.0 = phi i32 [ %and, %do.end13.do.cond18_crit_edge ], [ %spec.select, %land.lhs.true ]
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %state, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1404
  %9 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %9)
  %val.0.val.0.46 = load i32, ptr %val, align 4
  tail call void @llvm.prefetch.p0(ptr %state, i32 1, i32 3, i32 1) #35
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.cond18
  %10 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %state, i32 %val.0.val.0.46, i32 %new.0) #35, !srcloc !1382
  %asmresult.i = extractvalue { i32, i32 } %10, 0
  %tobool.not.i = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %10, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1405
  %11 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %11)
  %val.0.val.0.47 = load i32, ptr %val, align 4
  %cmp.not = icmp eq i32 %asmresult1.i, %val.0.val.0.47
  br i1 %cmp.not, label %do.end39, label %__cmpxchg.exit.do.body_crit_edge

__cmpxchg.exit.do.body_crit_edge:                 ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body

do.end39:                                         ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__netif_napi_del(ptr noundef %napi) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 1
  %call = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %state) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.end

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end6

if.end:                                           ; preds = %entry
  tail call void @_raw_spin_lock(ptr noundef nonnull @napi_hash_lock) #35
  %pprev.i.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 14, i32 1
  %0 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.not.i.i, label %if.end.napi_hash_del.exit_crit_edge, label %if.then.i.i

if.end.napi_hash_del.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %napi_hash_del.exit

if.then.i.i:                                      ; preds = %if.end
  %napi_hash_node.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 14
  %2 = ptrtoint ptr %napi_hash_node.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %napi_hash_node.i, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %3, ptr %1, align 4
  %tobool.not.i7.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i7.i.i, label %if.then.i.i.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i.__hlist_del.exit.i.i_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %3, i32 0, i32 1
  %5 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %1, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i.__hlist_del.exit.i.i_crit_edge
  %6 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr null, ptr %pprev.i.i.i, align 4
  br label %napi_hash_del.exit

napi_hash_del.exit:                               ; preds = %__hlist_del.exit.i.i, %if.end.napi_hash_del.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @napi_hash_lock) #35
  %dev_list = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 13
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %dev_list) #35
  br i1 %call.i.i, label %if.end.i.i, label %napi_hash_del.exit.list_del_rcu.exit_crit_edge

napi_hash_del.exit.list_del_rcu.exit_crit_edge:   ; preds = %napi_hash_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %napi_hash_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 13, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %dev_list to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev1.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %10, ptr %8, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %napi_hash_del.exit.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 13, i32 1
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %skb.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 9
  %14 = ptrtoint ptr %skb.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %skb.i, align 4
  tail call void @kfree_skb_reason(ptr noundef %15, i32 noundef 0) #35
  %16 = ptrtoint ptr %skb.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %skb.i, align 4
  %arrayidx.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 0
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i, align 4
  %cmp9.not28.i = icmp eq ptr %18, %arrayidx.i
  br i1 %cmp9.not28.i, label %list_del_rcu.exit.for.end.i_crit_edge, label %list_del_rcu.exit.for.body10.i_crit_edge

list_del_rcu.exit.for.body10.i_crit_edge:         ; preds = %list_del_rcu.exit
  br label %for.body10.i

list_del_rcu.exit.for.end.i_crit_edge:            ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.body10.i:                                     ; preds = %for.body10.i.for.body10.i_crit_edge, %list_del_rcu.exit.for.body10.i_crit_edge
  %skb.029.i = phi ptr [ %n.0.i, %for.body10.i.for.body10.i_crit_edge ], [ %18, %list_del_rcu.exit.for.body10.i_crit_edge ]
  %19 = ptrtoint ptr %skb.029.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %n.0.i = load ptr, ptr %skb.029.i, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.029.i, i32 noundef 0) #35
  %cmp9.not.i = icmp eq ptr %n.0.i, %arrayidx.i
  br i1 %cmp9.not.i, label %for.body10.i.for.end.i_crit_edge, label %for.body10.i.for.body10.i_crit_edge

for.body10.i.for.body10.i_crit_edge:              ; preds = %for.body10.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10.i

for.body10.i.for.end.i_crit_edge:                 ; preds = %for.body10.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.end.i:                                        ; preds = %for.body10.i.for.end.i_crit_edge, %list_del_rcu.exit.for.end.i_crit_edge
  %count.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 0, i32 1
  %20 = ptrtoint ptr %count.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %count.i, align 4
  %arrayidx.1.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 1
  %21 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx.1.i, align 4
  %cmp9.not28.1.i = icmp eq ptr %22, %arrayidx.1.i
  br i1 %cmp9.not28.1.i, label %for.end.i.for.end.1.i_crit_edge, label %for.end.i.for.body10.1.i_crit_edge

for.end.i.for.body10.1.i_crit_edge:               ; preds = %for.end.i
  br label %for.body10.1.i

for.end.i.for.end.1.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.1.i

for.body10.1.i:                                   ; preds = %for.body10.1.i.for.body10.1.i_crit_edge, %for.end.i.for.body10.1.i_crit_edge
  %skb.029.1.i = phi ptr [ %n.0.1.i, %for.body10.1.i.for.body10.1.i_crit_edge ], [ %22, %for.end.i.for.body10.1.i_crit_edge ]
  %23 = ptrtoint ptr %skb.029.1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %n.0.1.i = load ptr, ptr %skb.029.1.i, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.029.1.i, i32 noundef 0) #35
  %cmp9.not.1.i = icmp eq ptr %n.0.1.i, %arrayidx.1.i
  br i1 %cmp9.not.1.i, label %for.body10.1.i.for.end.1.i_crit_edge, label %for.body10.1.i.for.body10.1.i_crit_edge

for.body10.1.i.for.body10.1.i_crit_edge:          ; preds = %for.body10.1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10.1.i

for.body10.1.i.for.end.1.i_crit_edge:             ; preds = %for.body10.1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.1.i

for.end.1.i:                                      ; preds = %for.body10.1.i.for.end.1.i_crit_edge, %for.end.i.for.end.1.i_crit_edge
  %count.1.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 1, i32 1
  %24 = ptrtoint ptr %count.1.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %count.1.i, align 4
  %arrayidx.2.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 2
  %25 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx.2.i, align 4
  %cmp9.not28.2.i = icmp eq ptr %26, %arrayidx.2.i
  br i1 %cmp9.not28.2.i, label %for.end.1.i.for.end.2.i_crit_edge, label %for.end.1.i.for.body10.2.i_crit_edge

for.end.1.i.for.body10.2.i_crit_edge:             ; preds = %for.end.1.i
  br label %for.body10.2.i

for.end.1.i.for.end.2.i_crit_edge:                ; preds = %for.end.1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.2.i

for.body10.2.i:                                   ; preds = %for.body10.2.i.for.body10.2.i_crit_edge, %for.end.1.i.for.body10.2.i_crit_edge
  %skb.029.2.i = phi ptr [ %n.0.2.i, %for.body10.2.i.for.body10.2.i_crit_edge ], [ %26, %for.end.1.i.for.body10.2.i_crit_edge ]
  %27 = ptrtoint ptr %skb.029.2.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %n.0.2.i = load ptr, ptr %skb.029.2.i, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.029.2.i, i32 noundef 0) #35
  %cmp9.not.2.i = icmp eq ptr %n.0.2.i, %arrayidx.2.i
  br i1 %cmp9.not.2.i, label %for.body10.2.i.for.end.2.i_crit_edge, label %for.body10.2.i.for.body10.2.i_crit_edge

for.body10.2.i.for.body10.2.i_crit_edge:          ; preds = %for.body10.2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10.2.i

for.body10.2.i.for.end.2.i_crit_edge:             ; preds = %for.body10.2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.2.i

for.end.2.i:                                      ; preds = %for.body10.2.i.for.end.2.i_crit_edge, %for.end.1.i.for.end.2.i_crit_edge
  %count.2.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 2, i32 1
  %28 = ptrtoint ptr %count.2.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %count.2.i, align 4
  %arrayidx.3.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 3
  %29 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.3.i, align 4
  %cmp9.not28.3.i = icmp eq ptr %30, %arrayidx.3.i
  br i1 %cmp9.not28.3.i, label %for.end.2.i.for.end.3.i_crit_edge, label %for.end.2.i.for.body10.3.i_crit_edge

for.end.2.i.for.body10.3.i_crit_edge:             ; preds = %for.end.2.i
  br label %for.body10.3.i

for.end.2.i.for.end.3.i_crit_edge:                ; preds = %for.end.2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.3.i

for.body10.3.i:                                   ; preds = %for.body10.3.i.for.body10.3.i_crit_edge, %for.end.2.i.for.body10.3.i_crit_edge
  %skb.029.3.i = phi ptr [ %n.0.3.i, %for.body10.3.i.for.body10.3.i_crit_edge ], [ %30, %for.end.2.i.for.body10.3.i_crit_edge ]
  %31 = ptrtoint ptr %skb.029.3.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %n.0.3.i = load ptr, ptr %skb.029.3.i, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.029.3.i, i32 noundef 0) #35
  %cmp9.not.3.i = icmp eq ptr %n.0.3.i, %arrayidx.3.i
  br i1 %cmp9.not.3.i, label %for.body10.3.i.for.end.3.i_crit_edge, label %for.body10.3.i.for.body10.3.i_crit_edge

for.body10.3.i.for.body10.3.i_crit_edge:          ; preds = %for.body10.3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10.3.i

for.body10.3.i.for.end.3.i_crit_edge:             ; preds = %for.body10.3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.3.i

for.end.3.i:                                      ; preds = %for.body10.3.i.for.end.3.i_crit_edge, %for.end.2.i.for.end.3.i_crit_edge
  %count.3.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 3, i32 1
  %32 = ptrtoint ptr %count.3.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %count.3.i, align 4
  %arrayidx.4.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 4
  %33 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx.4.i, align 4
  %cmp9.not28.4.i = icmp eq ptr %34, %arrayidx.4.i
  br i1 %cmp9.not28.4.i, label %for.end.3.i.for.end.4.i_crit_edge, label %for.end.3.i.for.body10.4.i_crit_edge

for.end.3.i.for.body10.4.i_crit_edge:             ; preds = %for.end.3.i
  br label %for.body10.4.i

for.end.3.i.for.end.4.i_crit_edge:                ; preds = %for.end.3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.4.i

for.body10.4.i:                                   ; preds = %for.body10.4.i.for.body10.4.i_crit_edge, %for.end.3.i.for.body10.4.i_crit_edge
  %skb.029.4.i = phi ptr [ %n.0.4.i, %for.body10.4.i.for.body10.4.i_crit_edge ], [ %34, %for.end.3.i.for.body10.4.i_crit_edge ]
  %35 = ptrtoint ptr %skb.029.4.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %n.0.4.i = load ptr, ptr %skb.029.4.i, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.029.4.i, i32 noundef 0) #35
  %cmp9.not.4.i = icmp eq ptr %n.0.4.i, %arrayidx.4.i
  br i1 %cmp9.not.4.i, label %for.body10.4.i.for.end.4.i_crit_edge, label %for.body10.4.i.for.body10.4.i_crit_edge

for.body10.4.i.for.body10.4.i_crit_edge:          ; preds = %for.body10.4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10.4.i

for.body10.4.i.for.end.4.i_crit_edge:             ; preds = %for.body10.4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.4.i

for.end.4.i:                                      ; preds = %for.body10.4.i.for.end.4.i_crit_edge, %for.end.3.i.for.end.4.i_crit_edge
  %count.4.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 4, i32 1
  %36 = ptrtoint ptr %count.4.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %count.4.i, align 4
  %arrayidx.5.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 5
  %37 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx.5.i, align 4
  %cmp9.not28.5.i = icmp eq ptr %38, %arrayidx.5.i
  br i1 %cmp9.not28.5.i, label %for.end.4.i.for.end.5.i_crit_edge, label %for.end.4.i.for.body10.5.i_crit_edge

for.end.4.i.for.body10.5.i_crit_edge:             ; preds = %for.end.4.i
  br label %for.body10.5.i

for.end.4.i.for.end.5.i_crit_edge:                ; preds = %for.end.4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.5.i

for.body10.5.i:                                   ; preds = %for.body10.5.i.for.body10.5.i_crit_edge, %for.end.4.i.for.body10.5.i_crit_edge
  %skb.029.5.i = phi ptr [ %n.0.5.i, %for.body10.5.i.for.body10.5.i_crit_edge ], [ %38, %for.end.4.i.for.body10.5.i_crit_edge ]
  %39 = ptrtoint ptr %skb.029.5.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %n.0.5.i = load ptr, ptr %skb.029.5.i, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.029.5.i, i32 noundef 0) #35
  %cmp9.not.5.i = icmp eq ptr %n.0.5.i, %arrayidx.5.i
  br i1 %cmp9.not.5.i, label %for.body10.5.i.for.end.5.i_crit_edge, label %for.body10.5.i.for.body10.5.i_crit_edge

for.body10.5.i.for.body10.5.i_crit_edge:          ; preds = %for.body10.5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10.5.i

for.body10.5.i.for.end.5.i_crit_edge:             ; preds = %for.body10.5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.5.i

for.end.5.i:                                      ; preds = %for.body10.5.i.for.end.5.i_crit_edge, %for.end.4.i.for.end.5.i_crit_edge
  %count.5.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 5, i32 1
  %40 = ptrtoint ptr %count.5.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %count.5.i, align 4
  %arrayidx.6.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 6
  %41 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx.6.i, align 4
  %cmp9.not28.6.i = icmp eq ptr %42, %arrayidx.6.i
  br i1 %cmp9.not28.6.i, label %for.end.5.i.for.end.6.i_crit_edge, label %for.end.5.i.for.body10.6.i_crit_edge

for.end.5.i.for.body10.6.i_crit_edge:             ; preds = %for.end.5.i
  br label %for.body10.6.i

for.end.5.i.for.end.6.i_crit_edge:                ; preds = %for.end.5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.6.i

for.body10.6.i:                                   ; preds = %for.body10.6.i.for.body10.6.i_crit_edge, %for.end.5.i.for.body10.6.i_crit_edge
  %skb.029.6.i = phi ptr [ %n.0.6.i, %for.body10.6.i.for.body10.6.i_crit_edge ], [ %42, %for.end.5.i.for.body10.6.i_crit_edge ]
  %43 = ptrtoint ptr %skb.029.6.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %n.0.6.i = load ptr, ptr %skb.029.6.i, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.029.6.i, i32 noundef 0) #35
  %cmp9.not.6.i = icmp eq ptr %n.0.6.i, %arrayidx.6.i
  br i1 %cmp9.not.6.i, label %for.body10.6.i.for.end.6.i_crit_edge, label %for.body10.6.i.for.body10.6.i_crit_edge

for.body10.6.i.for.body10.6.i_crit_edge:          ; preds = %for.body10.6.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10.6.i

for.body10.6.i.for.end.6.i_crit_edge:             ; preds = %for.body10.6.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.6.i

for.end.6.i:                                      ; preds = %for.body10.6.i.for.end.6.i_crit_edge, %for.end.5.i.for.end.6.i_crit_edge
  %count.6.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 6, i32 1
  %44 = ptrtoint ptr %count.6.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %count.6.i, align 4
  %arrayidx.7.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 7
  %45 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx.7.i, align 4
  %cmp9.not28.7.i = icmp eq ptr %46, %arrayidx.7.i
  br i1 %cmp9.not28.7.i, label %for.end.6.i.flush_gro_hash.exit_crit_edge, label %for.end.6.i.for.body10.7.i_crit_edge

for.end.6.i.for.body10.7.i_crit_edge:             ; preds = %for.end.6.i
  br label %for.body10.7.i

for.end.6.i.flush_gro_hash.exit_crit_edge:        ; preds = %for.end.6.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %flush_gro_hash.exit

for.body10.7.i:                                   ; preds = %for.body10.7.i.for.body10.7.i_crit_edge, %for.end.6.i.for.body10.7.i_crit_edge
  %skb.029.7.i = phi ptr [ %n.0.7.i, %for.body10.7.i.for.body10.7.i_crit_edge ], [ %46, %for.end.6.i.for.body10.7.i_crit_edge ]
  %47 = ptrtoint ptr %skb.029.7.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %n.0.7.i = load ptr, ptr %skb.029.7.i, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.029.7.i, i32 noundef 0) #35
  %cmp9.not.7.i = icmp eq ptr %n.0.7.i, %arrayidx.7.i
  br i1 %cmp9.not.7.i, label %for.body10.7.i.flush_gro_hash.exit_crit_edge, label %for.body10.7.i.for.body10.7.i_crit_edge

for.body10.7.i.for.body10.7.i_crit_edge:          ; preds = %for.body10.7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10.7.i

for.body10.7.i.flush_gro_hash.exit_crit_edge:     ; preds = %for.body10.7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %flush_gro_hash.exit

flush_gro_hash.exit:                              ; preds = %for.body10.7.i.flush_gro_hash.exit_crit_edge, %for.end.6.i.flush_gro_hash.exit_crit_edge
  %count.7.i = getelementptr %struct.napi_struct, ptr %napi, i32 0, i32 8, i32 7, i32 1
  %48 = ptrtoint ptr %count.7.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %count.7.i, align 4
  %gro_bitmask = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 4
  %49 = ptrtoint ptr %gro_bitmask to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %gro_bitmask, align 4
  %thread = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 16
  %50 = ptrtoint ptr %thread to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %thread, align 4
  %tobool1.not = icmp eq ptr %51, null
  br i1 %tobool1.not, label %flush_gro_hash.exit.if.end6_crit_edge, label %if.then2

flush_gro_hash.exit.if.end6_crit_edge:            ; preds = %flush_gro_hash.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end6

if.then2:                                         ; preds = %flush_gro_hash.exit
  call void @__sanitizer_cov_trace_pc() #37
  %call4 = tail call i32 @kthread_stop(ptr noundef nonnull %51) #35
  %52 = ptrtoint ptr %thread to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr null, ptr %thread, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %flush_gro_hash.exit.if.end6_crit_edge, %entry.if.end6_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kthread_stop(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_has_upper_dev(ptr noundef %dev, ptr noundef %upper_dev) #1 align 64 {
entry:
  %dev_stack.i = alloca [9 x ptr], align 4
  %iter_stack.i = alloca [9 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b41 = load i1, ptr @netdev_has_upper_dev.__already_done, align 1
  br i1 %.b41, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_has_upper_dev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6599, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6599) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack.i) #35
  %0 = call ptr @memset(ptr %dev_stack.i, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack.i) #35
  %1 = call ptr @memset(ptr %iter_stack.i, i32 255, i32 36)
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.end19.i.if.end2.i_crit_edge, %if.end29
  %cur.0.i46 = phi i32 [ 0, %if.end29 ], [ %cur.2.i, %if.end19.i.if.end2.i_crit_edge ]
  %now.0.i45 = phi ptr [ %dev, %if.end29 ], [ %next.1.i, %if.end19.i.if.end2.i_crit_edge ]
  %storemerge.i44 = phi ptr [ %adj_list.i, %if.end29 ], [ %niter.2.i, %if.end19.i.if.end2.i_crit_edge ]
  %call.i.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end2.i.if.end32.i.i_crit_edge

if.end2.i.if.end32.i.i_crit_edge:                 ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i.i

land.rhs.i.i:                                     ; preds = %if.end2.i
  %call1.i.i = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call1.i.i, label %land.rhs.i.i.if.end32.i.i_crit_edge, label %land.rhs5.i.i

land.rhs.i.i.if.end32.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i.i

land.rhs5.i.i:                                    ; preds = %land.rhs.i.i
  %.b55.i.i = load i1, ptr @netdev_next_upper_dev_rcu.__already_done, align 1
  br i1 %.b55.i.i, label %land.rhs5.i.i.if.end32.i.i_crit_edge, label %if.then.i.i, !prof !1311

land.rhs5.i.i.if.end32.i.i_crit_edge:             ; preds = %land.rhs5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i.i

if.then.i.i:                                      ; preds = %land.rhs5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_next_upper_dev_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6755, i32 noundef 9, ptr noundef null) #35
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %if.then.i.i, %land.rhs5.i.i.if.end32.i.i_crit_edge, %land.rhs.i.i.if.end32.i.i_crit_edge, %if.end2.i.if.end32.i.i_crit_edge
  %2 = ptrtoint ptr %storemerge.i44 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %storemerge.i44, align 4
  %adj_list.i.i = getelementptr inbounds %struct.net_device, ptr %now.0.i45, i32 0, i32 13
  %cmp.i.i = icmp eq ptr %3, %adj_list.i.i
  br i1 %cmp.i.i, label %if.end32.i.i.if.then13.i_crit_edge, label %netdev_next_upper_dev_rcu.exit.i

if.end32.i.i.if.then13.i_crit_edge:               ; preds = %if.end32.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13.i

netdev_next_upper_dev_rcu.exit.i:                 ; preds = %if.end32.i.i
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i.i, align 4
  %tobool6.not.i = icmp eq ptr %5, null
  br i1 %tobool6.not.i, label %netdev_next_upper_dev_rcu.exit.i.if.then13.i_crit_edge, label %while.end.i

netdev_next_upper_dev_rcu.exit.i.if.then13.i_crit_edge: ; preds = %netdev_next_upper_dev_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13.i

while.end.i:                                      ; preds = %netdev_next_upper_dev_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %adj_list9.i = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 13
  %arrayidx.i = getelementptr [9 x ptr], ptr %dev_stack.i, i32 0, i32 %cur.0.i46
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %now.0.i45, ptr %arrayidx.i, align 4
  %inc.i = add i32 %cur.0.i46, 1
  %arrayidx11.i = getelementptr [9 x ptr], ptr %iter_stack.i, i32 0, i32 %cur.0.i46
  %7 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %arrayidx11.i, align 4
  br label %if.end19.i

if.then13.i:                                      ; preds = %netdev_next_upper_dev_rcu.exit.i.if.then13.i_crit_edge, %if.end32.i.i.if.then13.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0.i46)
  %tobool14.not.i = icmp eq i32 %cur.0.i46, 0
  br i1 %tobool14.not.i, label %if.then13.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge, label %if.end16.i

if.then13.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge: ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_walk_all_upper_dev_rcu.exit

if.end16.i:                                       ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #37
  %dec.i = add i32 %cur.0.i46, -1
  %arrayidx17.i = getelementptr [9 x ptr], ptr %dev_stack.i, i32 0, i32 %dec.i
  %8 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx17.i, align 4
  %arrayidx18.i = getelementptr [9 x ptr], ptr %iter_stack.i, i32 0, i32 %dec.i
  %10 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx18.i, align 4
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.end16.i, %while.end.i
  %next.1.i = phi ptr [ %5, %while.end.i ], [ %9, %if.end16.i ]
  %niter.2.i = phi ptr [ %adj_list9.i, %while.end.i ], [ %11, %if.end16.i ]
  %cur.2.i = phi i32 [ %inc.i, %while.end.i ], [ %dec.i, %if.end16.i ]
  %cmp.not.i = icmp ne ptr %next.1.i, %dev
  %cmp.i.not = icmp eq ptr %next.1.i, %upper_dev
  %or.cond = and i1 %cmp.not.i, %cmp.i.not
  br i1 %or.cond, label %if.end19.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge, label %if.end19.i.if.end2.i_crit_edge

if.end19.i.if.end2.i_crit_edge:                   ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i

if.end19.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge: ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_walk_all_upper_dev_rcu.exit

netdev_walk_all_upper_dev_rcu.exit:               ; preds = %if.end19.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge, %if.then13.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge
  %tobool38 = phi i1 [ false, %if.then13.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge ], [ true, %if.end19.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack.i) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack.i) #35
  ret i1 %tobool38
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_walk_all_upper_dev_rcu(ptr noundef %dev, ptr nocapture noundef readonly %fn, ptr noundef %priv) #1 align 64 {
entry:
  %dev_stack = alloca [9 x ptr], align 4
  %iter_stack = alloca [9 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack) #35
  %0 = call ptr @memset(ptr %dev_stack, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack) #35
  %1 = call ptr @memset(ptr %iter_stack, i32 255, i32 36)
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %storemerge = phi ptr [ %adj_list, %entry ], [ %storemerge.be, %while.cond.backedge ]
  %now.0 = phi ptr [ %dev, %entry ], [ %now.0.be, %while.cond.backedge ]
  %cur.0 = phi i32 [ 0, %entry ], [ %cur.0.be, %while.cond.backedge ]
  %cmp.not = icmp eq ptr %now.0, %dev
  br i1 %cmp.not, label %while.cond.if.end2_crit_edge, label %if.then

while.cond.if.end2_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.then:                                          ; preds = %while.cond
  %call = tail call i32 %fn(ptr noundef %now.0, ptr noundef %priv) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then.if.end2_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.if.end2_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %while.cond.if.end2_crit_edge
  %call.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end2.if.end32.i_crit_edge

if.end2.if.end32.i_crit_edge:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

land.rhs.i:                                       ; preds = %if.end2
  %call1.i = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call1.i, label %land.rhs.i.if.end32.i_crit_edge, label %land.rhs5.i

land.rhs.i.if.end32.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

land.rhs5.i:                                      ; preds = %land.rhs.i
  %.b55.i = load i1, ptr @netdev_next_upper_dev_rcu.__already_done, align 1
  br i1 %.b55.i, label %land.rhs5.i.if.end32.i_crit_edge, label %if.then.i, !prof !1311

land.rhs5.i.if.end32.i_crit_edge:                 ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

if.then.i:                                        ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_next_upper_dev_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6755, i32 noundef 9, ptr noundef null) #35
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then.i, %land.rhs5.i.if.end32.i_crit_edge, %land.rhs.i.if.end32.i_crit_edge, %if.end2.if.end32.i_crit_edge
  %2 = ptrtoint ptr %storemerge to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %storemerge, align 4
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %now.0, i32 0, i32 13
  %cmp.i = icmp eq ptr %3, %adj_list.i
  br i1 %cmp.i, label %if.end32.i.if.then13_crit_edge, label %netdev_next_upper_dev_rcu.exit

if.end32.i.if.then13_crit_edge:                   ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13

netdev_next_upper_dev_rcu.exit:                   ; preds = %if.end32.i
  %add.ptr.i = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %netdev_next_upper_dev_rcu.exit.if.then13_crit_edge, label %while.end

netdev_next_upper_dev_rcu.exit.if.then13_crit_edge: ; preds = %netdev_next_upper_dev_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13

while.end:                                        ; preds = %netdev_next_upper_dev_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  %adj_list9 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 13
  %arrayidx = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %cur.0
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %now.0, ptr %arrayidx, align 4
  %inc = add i32 %cur.0, 1
  %arrayidx11 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %cur.0
  %7 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %arrayidx11, align 4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end16, %while.end
  %storemerge.be = phi ptr [ %adj_list9, %while.end ], [ %11, %if.end16 ]
  %now.0.be = phi ptr [ %5, %while.end ], [ %9, %if.end16 ]
  %cur.0.be = phi i32 [ %inc, %while.end ], [ %dec, %if.end16 ]
  br label %while.cond

if.then13:                                        ; preds = %netdev_next_upper_dev_rcu.exit.if.then13_crit_edge, %if.end32.i.if.then13_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0)
  %tobool14.not = icmp eq i32 %cur.0, 0
  br i1 %tobool14.not, label %if.then13.cleanup_crit_edge, label %if.end16

if.then13.cleanup_crit_edge:                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end16:                                         ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  %dec = add i32 %cur.0, -1
  %arrayidx17 = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %dec
  %8 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx17, align 4
  %arrayidx18 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %dec
  %10 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx18, align 4
  br label %while.cond.backedge

cleanup:                                          ; preds = %if.then13.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then.cleanup_crit_edge ], [ 0, %if.then13.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack) #35
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_has_upper_dev_all_rcu(ptr noundef %dev, ptr noundef %upper_dev) #1 align 64 {
entry:
  %dev_stack.i = alloca [9 x ptr], align 4
  %iter_stack.i = alloca [9 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack.i) #35
  %0 = call ptr @memset(ptr %dev_stack.i, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack.i) #35
  %1 = call ptr @memset(ptr %iter_stack.i, i32 255, i32 36)
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  br label %if.end2.i

if.end2.i:                                        ; preds = %if.end19.i.if.end2.i_crit_edge, %entry
  %cur.0.i6 = phi i32 [ 0, %entry ], [ %cur.2.i, %if.end19.i.if.end2.i_crit_edge ]
  %now.0.i5 = phi ptr [ %dev, %entry ], [ %next.1.i, %if.end19.i.if.end2.i_crit_edge ]
  %storemerge.i4 = phi ptr [ %adj_list.i, %entry ], [ %niter.2.i, %if.end19.i.if.end2.i_crit_edge ]
  %call.i.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end2.i.if.end32.i.i_crit_edge

if.end2.i.if.end32.i.i_crit_edge:                 ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i.i

land.rhs.i.i:                                     ; preds = %if.end2.i
  %call1.i.i = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call1.i.i, label %land.rhs.i.i.if.end32.i.i_crit_edge, label %land.rhs5.i.i

land.rhs.i.i.if.end32.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i.i

land.rhs5.i.i:                                    ; preds = %land.rhs.i.i
  %.b55.i.i = load i1, ptr @netdev_next_upper_dev_rcu.__already_done, align 1
  br i1 %.b55.i.i, label %land.rhs5.i.i.if.end32.i.i_crit_edge, label %if.then.i.i, !prof !1311

land.rhs5.i.i.if.end32.i.i_crit_edge:             ; preds = %land.rhs5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i.i

if.then.i.i:                                      ; preds = %land.rhs5.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_next_upper_dev_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6755, i32 noundef 9, ptr noundef null) #35
  br label %if.end32.i.i

if.end32.i.i:                                     ; preds = %if.then.i.i, %land.rhs5.i.i.if.end32.i.i_crit_edge, %land.rhs.i.i.if.end32.i.i_crit_edge, %if.end2.i.if.end32.i.i_crit_edge
  %2 = ptrtoint ptr %storemerge.i4 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %storemerge.i4, align 4
  %adj_list.i.i = getelementptr inbounds %struct.net_device, ptr %now.0.i5, i32 0, i32 13
  %cmp.i.i = icmp eq ptr %3, %adj_list.i.i
  br i1 %cmp.i.i, label %if.end32.i.i.if.then13.i_crit_edge, label %netdev_next_upper_dev_rcu.exit.i

if.end32.i.i.if.then13.i_crit_edge:               ; preds = %if.end32.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13.i

netdev_next_upper_dev_rcu.exit.i:                 ; preds = %if.end32.i.i
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i.i, align 4
  %tobool6.not.i = icmp eq ptr %5, null
  br i1 %tobool6.not.i, label %netdev_next_upper_dev_rcu.exit.i.if.then13.i_crit_edge, label %while.end.i

netdev_next_upper_dev_rcu.exit.i.if.then13.i_crit_edge: ; preds = %netdev_next_upper_dev_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13.i

while.end.i:                                      ; preds = %netdev_next_upper_dev_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %adj_list9.i = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 13
  %arrayidx.i = getelementptr [9 x ptr], ptr %dev_stack.i, i32 0, i32 %cur.0.i6
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %now.0.i5, ptr %arrayidx.i, align 4
  %inc.i = add i32 %cur.0.i6, 1
  %arrayidx11.i = getelementptr [9 x ptr], ptr %iter_stack.i, i32 0, i32 %cur.0.i6
  %7 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %arrayidx11.i, align 4
  br label %if.end19.i

if.then13.i:                                      ; preds = %netdev_next_upper_dev_rcu.exit.i.if.then13.i_crit_edge, %if.end32.i.i.if.then13.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0.i6)
  %tobool14.not.i = icmp eq i32 %cur.0.i6, 0
  br i1 %tobool14.not.i, label %if.then13.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge, label %if.end16.i

if.then13.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge: ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_walk_all_upper_dev_rcu.exit

if.end16.i:                                       ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #37
  %dec.i = add i32 %cur.0.i6, -1
  %arrayidx17.i = getelementptr [9 x ptr], ptr %dev_stack.i, i32 0, i32 %dec.i
  %8 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx17.i, align 4
  %arrayidx18.i = getelementptr [9 x ptr], ptr %iter_stack.i, i32 0, i32 %dec.i
  %10 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx18.i, align 4
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.end16.i, %while.end.i
  %next.1.i = phi ptr [ %5, %while.end.i ], [ %9, %if.end16.i ]
  %niter.2.i = phi ptr [ %adj_list9.i, %while.end.i ], [ %11, %if.end16.i ]
  %cur.2.i = phi i32 [ %inc.i, %while.end.i ], [ %dec.i, %if.end16.i ]
  %cmp.not.i = icmp ne ptr %next.1.i, %dev
  %cmp.i.not = icmp eq ptr %next.1.i, %upper_dev
  %or.cond = and i1 %cmp.not.i, %cmp.i.not
  br i1 %or.cond, label %if.end19.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge, label %if.end19.i.if.end2.i_crit_edge

if.end19.i.if.end2.i_crit_edge:                   ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i

if.end19.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge: ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_walk_all_upper_dev_rcu.exit

netdev_walk_all_upper_dev_rcu.exit:               ; preds = %if.end19.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge, %if.then13.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge
  %tobool = phi i1 [ false, %if.then13.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge ], [ true, %if.end19.i.netdev_walk_all_upper_dev_rcu.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack.i) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack.i) #35
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_has_any_upper_dev(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b43 = load i1, ptr @netdev_has_any_upper_dev.__already_done, align 1
  br i1 %.b43, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_has_any_upper_dev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6637, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6637) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %0 = ptrtoint ptr %adj_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %adj_list, align 4
  %cmp.i = icmp ne ptr %1, %adj_list
  ret i1 %cmp.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @netdev_master_upper_dev_get(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b59 = load i1, ptr @netdev_master_upper_dev_get.__already_done, align 1
  br i1 %.b59, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_master_upper_dev_get.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6654, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6654) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %0 = ptrtoint ptr %adj_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %adj_list, align 4
  %cmp.i.not = icmp eq ptr %1, %adj_list
  br i1 %cmp.i.not, label %if.end29.cleanup_crit_edge, label %if.end41

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end41:                                         ; preds = %if.end29
  %master = getelementptr i8, ptr %1, i32 -8
  %2 = ptrtoint ptr %master to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %master, align 4, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool45.not = icmp eq i8 %3, 0
  br i1 %tobool45.not, label %if.end41.cleanup_crit_edge, label %if.then52, !prof !1310

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then52:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #37
  %add.ptr = getelementptr i8, ptr %1, i32 -16
  %4 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then52, %if.end41.cleanup_crit_edge, %if.end29.cleanup_crit_edge
  %retval.0 = phi ptr [ %5, %if.then52 ], [ null, %if.end29.cleanup_crit_edge ], [ null, %if.end41.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_adjacent_get_private(ptr nocapture noundef readonly %adj_list) #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr i8, ptr %adj_list, i32 -4
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  ret ptr %1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @netdev_upper_get_next_dev_rcu(ptr noundef readnone %dev, ptr nocapture noundef %iter) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end32_crit_edge

entry.if.end32_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32

land.rhs:                                         ; preds = %entry
  %call1 = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call1, label %land.rhs.if.end32_crit_edge, label %land.rhs5

land.rhs.if.end32_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32

land.rhs5:                                        ; preds = %land.rhs
  %.b55 = load i1, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  br i1 %.b55, label %land.rhs5.if.end32_crit_edge, label %if.then, !prof !1311

land.rhs5.if.end32_crit_edge:                     ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32

if.then:                                          ; preds = %land.rhs5
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6720, i32 noundef 9, ptr noundef null) #35
  br label %if.end32

if.end32:                                         ; preds = %if.then, %land.rhs5.if.end32_crit_edge, %land.rhs.if.end32_crit_edge, %entry.if.end32_crit_edge
  %0 = ptrtoint ptr %iter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iter, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %1, align 4
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %cmp = icmp eq ptr %3, %adj_list
  br i1 %cmp, label %if.end32.cleanup_crit_edge, label %if.end47

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end47:                                         ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #37
  %add.ptr = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %iter to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %iter, align 4
  %5 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end47, %if.end32.cleanup_crit_edge
  %retval.0 = phi ptr [ %6, %if.end47 ], [ null, %if.end32.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_lower_get_next_private(ptr noundef readnone %dev, ptr nocapture noundef %iter) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iter, align 4
  %lower1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %cmp = icmp eq ptr %1, %lower1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %4 = ptrtoint ptr %iter to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %iter, align 4
  %private = getelementptr i8, ptr %1, i32 -4
  %5 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %6, %if.end ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @netdev_lower_get_next_private_rcu(ptr noundef readnone %dev, ptr nocapture noundef %iter) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end33_crit_edge

entry.if.end33_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end33

land.rhs:                                         ; preds = %entry
  %call1 = tail call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs6, label %land.rhs.if.end33_crit_edge

land.rhs.if.end33_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end33

land.rhs6:                                        ; preds = %land.rhs
  %.b55 = load i1, ptr @netdev_lower_get_next_private_rcu.__already_done, align 1
  br i1 %.b55, label %land.rhs6.if.end33_crit_edge, label %if.then, !prof !1311

land.rhs6.if.end33_crit_edge:                     ; preds = %land.rhs6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end33

if.then:                                          ; preds = %land.rhs6
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_lower_get_next_private_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6919, i32 noundef 9, ptr noundef null) #35
  br label %if.end33

if.end33:                                         ; preds = %if.then, %land.rhs6.if.end33_crit_edge, %land.rhs.if.end33_crit_edge, %entry.if.end33_crit_edge
  %0 = ptrtoint ptr %iter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iter, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %1, align 4
  %lower46 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %cmp = icmp eq ptr %3, %lower46
  br i1 %cmp, label %if.end33.cleanup_crit_edge, label %if.end48

if.end33.cleanup_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end48:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #37
  %4 = ptrtoint ptr %iter to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %iter, align 4
  %private = getelementptr i8, ptr %3, i32 -4
  %5 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end48, %if.end33.cleanup_crit_edge
  %retval.0 = phi ptr [ %6, %if.end48 ], [ null, %if.end33.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_bh_held() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_walk_all_lower_dev(ptr noundef %dev, ptr nocapture noundef readonly %fn, ptr noundef %priv) #1 align 64 {
entry:
  %dev_stack = alloca [9 x ptr], align 4
  %iter_stack = alloca [9 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack) #35
  %0 = call ptr @memset(ptr %dev_stack, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack) #35
  %1 = call ptr @memset(ptr %iter_stack, i32 255, i32 36)
  %lower = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %storemerge = phi ptr [ %lower, %entry ], [ %storemerge.be, %while.cond.backedge ]
  %now.0 = phi ptr [ %dev, %entry ], [ %now.0.be, %while.cond.backedge ]
  %cur.0 = phi i32 [ 0, %entry ], [ %cur.0.be, %while.cond.backedge ]
  %cmp.not = icmp eq ptr %now.0, %dev
  br i1 %cmp.not, label %while.cond.if.end2_crit_edge, label %if.then

while.cond.if.end2_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.then:                                          ; preds = %while.cond
  %call = tail call i32 %fn(ptr noundef %now.0, ptr noundef %priv) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then.if.end2_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.if.end2_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %while.cond.if.end2_crit_edge
  %2 = ptrtoint ptr %storemerge to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %storemerge, align 4
  %lower1.i = getelementptr inbounds %struct.net_device, ptr %now.0, i32 0, i32 13, i32 1
  %cmp.i = icmp eq ptr %3, %lower1.i
  br i1 %cmp.i, label %if.end2.if.then13_crit_edge, label %netdev_next_lower_dev.exit

if.end2.if.then13_crit_edge:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13

netdev_next_lower_dev.exit:                       ; preds = %if.end2
  %add.ptr.i = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %netdev_next_lower_dev.exit.if.then13_crit_edge, label %while.end

netdev_next_lower_dev.exit.if.then13_crit_edge:   ; preds = %netdev_next_lower_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13

while.end:                                        ; preds = %netdev_next_lower_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  %lower10 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 13, i32 1
  %arrayidx = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %cur.0
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %now.0, ptr %arrayidx, align 4
  %inc = add i32 %cur.0, 1
  %arrayidx11 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %cur.0
  %7 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %arrayidx11, align 4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end16, %while.end
  %storemerge.be = phi ptr [ %lower10, %while.end ], [ %11, %if.end16 ]
  %now.0.be = phi ptr [ %5, %while.end ], [ %9, %if.end16 ]
  %cur.0.be = phi i32 [ %inc, %while.end ], [ %dec, %if.end16 ]
  br label %while.cond

if.then13:                                        ; preds = %netdev_next_lower_dev.exit.if.then13_crit_edge, %if.end2.if.then13_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0)
  %tobool14.not = icmp eq i32 %cur.0, 0
  br i1 %tobool14.not, label %if.then13.cleanup_crit_edge, label %if.end16

if.then13.cleanup_crit_edge:                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end16:                                         ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  %dec = add i32 %cur.0, -1
  %arrayidx17 = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %dec
  %8 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx17, align 4
  %arrayidx18 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %dec
  %10 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx18, align 4
  br label %while.cond.backedge

cleanup:                                          ; preds = %if.then13.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then.cleanup_crit_edge ], [ 0, %if.then13.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack) #35
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_next_lower_dev_rcu(ptr noundef readnone %dev, ptr nocapture noundef %iter) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %iter, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %1, align 4
  %lower2 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %cmp = icmp eq ptr %3, %lower2
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %add.ptr = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %iter to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %iter, align 4
  %5 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %6, %if.end ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_walk_all_lower_dev_rcu(ptr noundef %dev, ptr nocapture noundef readonly %fn, ptr noundef %priv) #1 align 64 {
entry:
  %dev_stack = alloca [9 x ptr], align 4
  %iter_stack = alloca [9 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack) #35
  %0 = call ptr @memset(ptr %dev_stack, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack) #35
  %1 = call ptr @memset(ptr %iter_stack, i32 255, i32 36)
  %lower = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %storemerge = phi ptr [ %lower, %entry ], [ %storemerge.be, %while.cond.backedge ]
  %now.0 = phi ptr [ %dev, %entry ], [ %now.0.be, %while.cond.backedge ]
  %cur.0 = phi i32 [ 0, %entry ], [ %cur.0.be, %while.cond.backedge ]
  %cmp.not = icmp eq ptr %now.0, %dev
  br i1 %cmp.not, label %while.cond.if.end2_crit_edge, label %if.then

while.cond.if.end2_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.then:                                          ; preds = %while.cond
  %call = tail call i32 %fn(ptr noundef %now.0, ptr noundef %priv) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then.if.end2_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.if.end2_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %while.cond.if.end2_crit_edge
  %2 = ptrtoint ptr %storemerge to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %storemerge, align 4
  %lower2.i = getelementptr inbounds %struct.net_device, ptr %now.0, i32 0, i32 13, i32 1
  %cmp.i = icmp eq ptr %3, %lower2.i
  br i1 %cmp.i, label %if.end2.if.then13_crit_edge, label %netdev_next_lower_dev_rcu.exit

if.end2.if.then13_crit_edge:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13

netdev_next_lower_dev_rcu.exit:                   ; preds = %if.end2
  %add.ptr.i = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %netdev_next_lower_dev_rcu.exit.if.then13_crit_edge, label %while.end

netdev_next_lower_dev_rcu.exit.if.then13_crit_edge: ; preds = %netdev_next_lower_dev_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13

while.end:                                        ; preds = %netdev_next_lower_dev_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  %lower10 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 13, i32 1
  %arrayidx = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %cur.0
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %now.0, ptr %arrayidx, align 4
  %inc = add i32 %cur.0, 1
  %arrayidx11 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %cur.0
  %7 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %arrayidx11, align 4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end16, %while.end
  %storemerge.be = phi ptr [ %lower10, %while.end ], [ %11, %if.end16 ]
  %now.0.be = phi ptr [ %5, %while.end ], [ %9, %if.end16 ]
  %cur.0.be = phi i32 [ %inc, %while.end ], [ %dec, %if.end16 ]
  br label %while.cond

if.then13:                                        ; preds = %netdev_next_lower_dev_rcu.exit.if.then13_crit_edge, %if.end2.if.then13_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0)
  %tobool14.not = icmp eq i32 %cur.0, 0
  br i1 %tobool14.not, label %if.then13.cleanup_crit_edge, label %if.end16

if.then13.cleanup_crit_edge:                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end16:                                         ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  %dec = add i32 %cur.0, -1
  %arrayidx17 = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %dec
  %8 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx17, align 4
  %arrayidx18 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %dec
  %10 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx18, align 4
  br label %while.cond.backedge

cleanup:                                          ; preds = %if.then13.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then.cleanup_crit_edge ], [ 0, %if.then13.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack) #35
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_lower_get_first_private_rcu(ptr noundef %dev) #20 align 64 {
entry:
  %__next = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %lower1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__next)
  %0 = ptrtoint ptr %lower1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %lower1, align 4
  %2 = ptrtoint ptr %__next to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %__next, align 4
  %cmp.not = icmp eq ptr %lower1, %1
  br i1 %cmp.not, label %cond.end.thread, label %cond.end, !prof !1310

cond.end.thread:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next)
  br label %cleanup

cond.end:                                         ; preds = %entry
  %3 = ptrtoint ptr %__next to i32
  call void @__asan_load4_noabort(i32 %3)
  %__next.0.__next.0.__next.0.10 = load volatile ptr, ptr %__next, align 4
  %add.ptr = getelementptr i8, ptr %__next.0.__next.0.__next.0.10, i32 -16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next)
  %tobool9.not = icmp eq ptr %add.ptr, null
  br i1 %tobool9.not, label %cond.end.cleanup_crit_edge, label %if.then

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #37
  %private = getelementptr i8, ptr %__next.0.__next.0.__next.0.10, i32 -4
  %4 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %private, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then, %cond.end.cleanup_crit_edge, %cond.end.thread
  %retval.0 = phi ptr [ %5, %if.then ], [ null, %cond.end.cleanup_crit_edge ], [ null, %cond.end.thread ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_master_upper_dev_get_rcu(ptr noundef %dev) #20 align 64 {
entry:
  %__next = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__next)
  %0 = ptrtoint ptr %adj_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %adj_list, align 4
  %2 = ptrtoint ptr %__next to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %__next, align 4
  %cmp.not = icmp eq ptr %adj_list, %1
  br i1 %cmp.not, label %cond.end.thread, label %cond.end, !prof !1310

cond.end.thread:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next)
  br label %cleanup

cond.end:                                         ; preds = %entry
  %3 = ptrtoint ptr %__next to i32
  call void @__asan_load4_noabort(i32 %3)
  %__next.0.__next.0.__next.0.18 = load volatile ptr, ptr %__next, align 4
  %add.ptr = getelementptr i8, ptr %__next.0.__next.0.__next.0.18, i32 -16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__next)
  %tobool9.not = icmp eq ptr %add.ptr, null
  br i1 %tobool9.not, label %cond.end.cleanup_crit_edge, label %land.lhs.true

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

land.lhs.true:                                    ; preds = %cond.end
  %master = getelementptr i8, ptr %__next.0.__next.0.__next.0.18, i32 -8
  %4 = ptrtoint ptr %master to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %master, align 4, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool10.not = icmp eq i8 %5, 0
  br i1 %tobool10.not, label %land.lhs.true.cleanup_crit_edge, label %if.then, !prof !1310

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  %6 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then, %land.lhs.true.cleanup_crit_edge, %cond.end.cleanup_crit_edge, %cond.end.thread
  %retval.0 = phi ptr [ %7, %if.then ], [ null, %land.lhs.true.cleanup_crit_edge ], [ null, %cond.end.cleanup_crit_edge ], [ null, %cond.end.thread ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_upper_dev_link(ptr noundef %dev, ptr noundef %upper_dev, ptr noundef %extack) #1 align 64 {
entry:
  %priv = alloca %struct.netdev_nested_priv, align 8
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %priv) #35
  %0 = load i64, ptr @__const.netdev_adjacent_change_commit.priv, align 8
  %1 = ptrtoint ptr %priv to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %0, ptr %priv, align 8
  %call = call fastcc i32 @__netdev_upper_dev_link(ptr noundef %dev, ptr noundef %upper_dev, i1 noundef zeroext false, ptr noundef null, ptr noundef null, ptr noundef nonnull %priv, ptr noundef %extack)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %priv) #35
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__netdev_upper_dev_link(ptr noundef %dev, ptr noundef %upper_dev, i1 noundef zeroext %master, ptr noundef %upper_priv, ptr noundef %upper_info, ptr noundef %priv, ptr noundef %extack) unnamed_addr #1 align 64 {
entry:
  %dev_stack.i.i122 = alloca [9 x ptr], align 4
  %iter_stack.i.i123 = alloca [9 x ptr], align 4
  %dev_stack.i.i = alloca [9 x ptr], align 4
  %iter_stack.i.i = alloca [9 x ptr], align 4
  %changeupper_info = alloca %struct.netdev_notifier_changeupper_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %master to i8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %changeupper_info) #35
  %0 = getelementptr inbounds i8, ptr %changeupper_info, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %changeupper_info to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dev, ptr %changeupper_info, align 4
  %extack2 = getelementptr inbounds %struct.netdev_notifier_info, ptr %changeupper_info, i32 0, i32 1
  %3 = ptrtoint ptr %extack2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %extack, ptr %extack2, align 4
  %upper_dev3 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %changeupper_info, i32 0, i32 1
  %4 = ptrtoint ptr %upper_dev3 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %upper_dev, ptr %upper_dev3, align 4
  %master4 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %changeupper_info, i32 0, i32 2
  %5 = ptrtoint ptr %master4 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %frombool, ptr %master4, align 4
  %linking = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %changeupper_info, i32 0, i32 3
  %6 = ptrtoint ptr %linking to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 1, ptr %linking, align 1
  %upper_info6 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %changeupper_info, i32 0, i32 4
  %7 = ptrtoint ptr %upper_info6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %upper_info, ptr %upper_info6, align 4
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool7.not = icmp eq i32 %call, 0
  br i1 %tobool7.not, label %land.rhs, label %entry.if.end37_crit_edge

entry.if.end37_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end37

land.rhs:                                         ; preds = %entry
  %.b121 = load i1, ptr @__netdev_upper_dev_link.__already_done, align 1
  br i1 %.b121, label %land.rhs.if.end37_crit_edge, label %if.then, !prof !1311

land.rhs.if.end37_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end37

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netdev_upper_dev_link.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7455, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 7455) #35
  br label %if.end37

if.end37:                                         ; preds = %if.then, %land.rhs.if.end37_crit_edge, %entry.if.end37_crit_edge
  %cmp = icmp eq ptr %dev, %upper_dev
  br i1 %cmp, label %if.end37.cleanup_crit_edge, label %if.end46

if.end37.cleanup_crit_edge:                       ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end46:                                         ; preds = %if.end37
  %call.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end46.if.end29.i_crit_edge

if.end46.if.end29.i_crit_edge:                    ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

land.rhs.i:                                       ; preds = %if.end46
  %.b41.i = load i1, ptr @__netdev_has_upper_dev.__already_done, align 1
  br i1 %.b41.i, label %land.rhs.i.if.end29.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end29.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netdev_has_upper_dev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6871, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6871) #35
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end29.i_crit_edge, %if.end46.if.end29.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack.i.i) #35
  %8 = call ptr @memset(ptr %dev_stack.i.i, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack.i.i) #35
  %9 = call ptr @memset(ptr %iter_stack.i.i, i32 255, i32 36)
  %adj_list.i.i = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 13
  br label %if.end2.i.i

if.end2.i.i:                                      ; preds = %if.end22.i.i.if.end2.i.i_crit_edge, %if.end29.i
  %cur.0.i48.i = phi i32 [ 0, %if.end29.i ], [ %cur.2.i.i, %if.end22.i.i.if.end2.i.i_crit_edge ]
  %now.0.i47.i = phi ptr [ %upper_dev, %if.end29.i ], [ %next.1.i.i, %if.end22.i.i.if.end2.i.i_crit_edge ]
  %storemerge.i46.i = phi ptr [ %adj_list.i.i, %if.end29.i ], [ %niter.2.i.i, %if.end22.i.i.if.end2.i.i_crit_edge ]
  %adj_list.i.i.i = getelementptr inbounds %struct.net_device, ptr %now.0.i47.i, i32 0, i32 13
  br label %while.cond3.i.i

while.cond3.i.i:                                  ; preds = %if.end8.i.i.while.cond3.i.i_crit_edge, %if.end2.i.i
  %iter.0.i.i = phi ptr [ %storemerge.i46.i, %if.end2.i.i ], [ %11, %if.end8.i.i.while.cond3.i.i_crit_edge ]
  %10 = ptrtoint ptr %iter.0.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %iter.0.i.i, align 4
  %cmp.i.i.i = icmp eq ptr %11, %adj_list.i.i.i
  br i1 %cmp.i.i.i, label %while.cond3.i.i.if.then16.i.i_crit_edge, label %__netdev_next_upper_dev.exit.i.i

while.cond3.i.i.if.then16.i.i_crit_edge:          ; preds = %while.cond3.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16.i.i

__netdev_next_upper_dev.exit.i.i:                 ; preds = %while.cond3.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %11, i32 -16
  %12 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %add.ptr.i.i.i, align 4
  %tobool6.not.i.i = icmp eq ptr %13, null
  br i1 %tobool6.not.i.i, label %__netdev_next_upper_dev.exit.i.i.if.then16.i.i_crit_edge, label %if.end8.i.i

__netdev_next_upper_dev.exit.i.i.if.then16.i.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16.i.i

if.end8.i.i:                                      ; preds = %__netdev_next_upper_dev.exit.i.i
  %ignore3.i.i.i = getelementptr i8, ptr %11, i32 -7
  %14 = ptrtoint ptr %ignore3.i.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %ignore3.i.i.i, align 1, !range !1333
  %tobool9.not.i.i = icmp eq i8 %15, 0
  br i1 %tobool9.not.i.i, label %while.end.i.i, label %if.end8.i.i.while.cond3.i.i_crit_edge

if.end8.i.i.while.cond3.i.i_crit_edge:            ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond3.i.i

while.end.i.i:                                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %adj_list12.i.i = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 13
  %arrayidx.i.i = getelementptr [9 x ptr], ptr %dev_stack.i.i, i32 0, i32 %cur.0.i48.i
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %now.0.i47.i, ptr %arrayidx.i.i, align 4
  %inc.i.i = add i32 %cur.0.i48.i, 1
  %arrayidx14.i.i = getelementptr [9 x ptr], ptr %iter_stack.i.i, i32 0, i32 %cur.0.i48.i
  %17 = ptrtoint ptr %arrayidx14.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %11, ptr %arrayidx14.i.i, align 4
  br label %if.end22.i.i

if.then16.i.i:                                    ; preds = %__netdev_next_upper_dev.exit.i.i.if.then16.i.i_crit_edge, %while.cond3.i.i.if.then16.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0.i48.i)
  %tobool17.not.i.i = icmp eq i32 %cur.0.i48.i, 0
  br i1 %tobool17.not.i.i, label %if.end49, label %if.end19.i.i

if.end19.i.i:                                     ; preds = %if.then16.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %dec.i.i = add i32 %cur.0.i48.i, -1
  %arrayidx20.i.i = getelementptr [9 x ptr], ptr %dev_stack.i.i, i32 0, i32 %dec.i.i
  %18 = ptrtoint ptr %arrayidx20.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx20.i.i, align 4
  %arrayidx21.i.i = getelementptr [9 x ptr], ptr %iter_stack.i.i, i32 0, i32 %dec.i.i
  %20 = ptrtoint ptr %arrayidx21.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx21.i.i, align 4
  br label %if.end22.i.i

if.end22.i.i:                                     ; preds = %if.end19.i.i, %while.end.i.i
  %next.1.i.i = phi ptr [ %13, %while.end.i.i ], [ %19, %if.end19.i.i ]
  %niter.2.i.i = phi ptr [ %adj_list12.i.i, %while.end.i.i ], [ %21, %if.end19.i.i ]
  %cur.2.i.i = phi i32 [ %inc.i.i, %while.end.i.i ], [ %dec.i.i, %if.end19.i.i ]
  %cmp.not.i.i = icmp ne ptr %next.1.i.i, %upper_dev
  %cmp.i.not.i = icmp eq ptr %next.1.i.i, %dev
  %or.cond.i = and i1 %cmp.not.i.i, %cmp.i.not.i
  br i1 %or.cond.i, label %__netdev_has_upper_dev.exit.thread, label %if.end22.i.i.if.end2.i.i_crit_edge

if.end22.i.i.if.end2.i.i_crit_edge:               ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i.i

__netdev_has_upper_dev.exit.thread:               ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack.i.i) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack.i.i) #35
  br label %cleanup

if.end49:                                         ; preds = %if.then16.i.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack.i.i) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack.i.i) #35
  %lower_level = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 58
  %22 = ptrtoint ptr %lower_level to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %lower_level, align 1
  %conv = zext i8 %23 to i32
  %upper_level = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 57
  %24 = ptrtoint ptr %upper_level to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %upper_level, align 2
  %conv50 = zext i8 %25 to i32
  %add = add nuw nsw i32 %conv50, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %add)
  %cmp51 = icmp ugt i32 %add, 8
  br i1 %cmp51, label %if.end49.cleanup_crit_edge, label %if.end54

if.end49.cleanup_crit_edge:                       ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end54:                                         ; preds = %if.end49
  %call.i165 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i165)
  %tobool.not.i166 = icmp eq i32 %call.i165, 0
  br i1 %master, label %if.else, label %if.then56

if.then56:                                        ; preds = %if.end54
  br i1 %tobool.not.i166, label %land.rhs.i127, label %if.then56.if.end29.i130_crit_edge

if.then56.if.end29.i130_crit_edge:                ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i130

land.rhs.i127:                                    ; preds = %if.then56
  %.b41.i126 = load i1, ptr @__netdev_has_upper_dev.__already_done, align 1
  br i1 %.b41.i126, label %land.rhs.i127.if.end29.i130_crit_edge, label %if.then.i128, !prof !1311

land.rhs.i127.if.end29.i130_crit_edge:            ; preds = %land.rhs.i127
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i130

if.then.i128:                                     ; preds = %land.rhs.i127
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netdev_has_upper_dev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6871, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6871) #35
  br label %if.end29.i130

if.end29.i130:                                    ; preds = %if.then.i128, %land.rhs.i127.if.end29.i130_crit_edge, %if.then56.if.end29.i130_crit_edge
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack.i.i122) #35
  %26 = call ptr @memset(ptr %dev_stack.i.i122, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack.i.i123) #35
  %27 = call ptr @memset(ptr %iter_stack.i.i123, i32 255, i32 36)
  %adj_list.i.i129 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  br label %if.end2.i.i135

if.end2.i.i135:                                   ; preds = %if.end22.i.i162.if.end2.i.i135_crit_edge, %if.end29.i130
  %cur.0.i48.i131 = phi i32 [ 0, %if.end29.i130 ], [ %cur.2.i.i158, %if.end22.i.i162.if.end2.i.i135_crit_edge ]
  %now.0.i47.i132 = phi ptr [ %dev, %if.end29.i130 ], [ %next.1.i.i156, %if.end22.i.i162.if.end2.i.i135_crit_edge ]
  %storemerge.i46.i133 = phi ptr [ %adj_list.i.i129, %if.end29.i130 ], [ %niter.2.i.i157, %if.end22.i.i162.if.end2.i.i135_crit_edge ]
  %adj_list.i.i.i134 = getelementptr inbounds %struct.net_device, ptr %now.0.i47.i132, i32 0, i32 13
  br label %while.cond3.i.i138

while.cond3.i.i138:                               ; preds = %if.end8.i.i144.while.cond3.i.i138_crit_edge, %if.end2.i.i135
  %iter.0.i.i136 = phi ptr [ %storemerge.i46.i133, %if.end2.i.i135 ], [ %29, %if.end8.i.i144.while.cond3.i.i138_crit_edge ]
  %28 = ptrtoint ptr %iter.0.i.i136 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %iter.0.i.i136, align 4
  %cmp.i.i.i137 = icmp eq ptr %29, %adj_list.i.i.i134
  br i1 %cmp.i.i.i137, label %while.cond3.i.i138.if.then16.i.i151_crit_edge, label %__netdev_next_upper_dev.exit.i.i141

while.cond3.i.i138.if.then16.i.i151_crit_edge:    ; preds = %while.cond3.i.i138
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16.i.i151

__netdev_next_upper_dev.exit.i.i141:              ; preds = %while.cond3.i.i138
  %add.ptr.i.i.i139 = getelementptr i8, ptr %29, i32 -16
  %30 = ptrtoint ptr %add.ptr.i.i.i139 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %add.ptr.i.i.i139, align 4
  %tobool6.not.i.i140 = icmp eq ptr %31, null
  br i1 %tobool6.not.i.i140, label %__netdev_next_upper_dev.exit.i.i141.if.then16.i.i151_crit_edge, label %if.end8.i.i144

__netdev_next_upper_dev.exit.i.i141.if.then16.i.i151_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i.i141
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16.i.i151

if.end8.i.i144:                                   ; preds = %__netdev_next_upper_dev.exit.i.i141
  %ignore3.i.i.i142 = getelementptr i8, ptr %29, i32 -7
  %32 = ptrtoint ptr %ignore3.i.i.i142 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %ignore3.i.i.i142, align 1, !range !1333
  %tobool9.not.i.i143 = icmp eq i8 %33, 0
  br i1 %tobool9.not.i.i143, label %while.end.i.i149, label %if.end8.i.i144.while.cond3.i.i138_crit_edge

if.end8.i.i144.while.cond3.i.i138_crit_edge:      ; preds = %if.end8.i.i144
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond3.i.i138

while.end.i.i149:                                 ; preds = %if.end8.i.i144
  call void @__sanitizer_cov_trace_pc() #37
  %adj_list12.i.i145 = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 13
  %arrayidx.i.i146 = getelementptr [9 x ptr], ptr %dev_stack.i.i122, i32 0, i32 %cur.0.i48.i131
  %34 = ptrtoint ptr %arrayidx.i.i146 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %now.0.i47.i132, ptr %arrayidx.i.i146, align 4
  %inc.i.i147 = add i32 %cur.0.i48.i131, 1
  %arrayidx14.i.i148 = getelementptr [9 x ptr], ptr %iter_stack.i.i123, i32 0, i32 %cur.0.i48.i131
  %35 = ptrtoint ptr %arrayidx14.i.i148 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %29, ptr %arrayidx14.i.i148, align 4
  br label %if.end22.i.i162

if.then16.i.i151:                                 ; preds = %__netdev_next_upper_dev.exit.i.i141.if.then16.i.i151_crit_edge, %while.cond3.i.i138.if.then16.i.i151_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0.i48.i131)
  %tobool17.not.i.i150 = icmp eq i32 %cur.0.i48.i131, 0
  br i1 %tobool17.not.i.i150, label %__netdev_has_upper_dev.exit164, label %if.end19.i.i155

if.end19.i.i155:                                  ; preds = %if.then16.i.i151
  call void @__sanitizer_cov_trace_pc() #37
  %dec.i.i152 = add i32 %cur.0.i48.i131, -1
  %arrayidx20.i.i153 = getelementptr [9 x ptr], ptr %dev_stack.i.i122, i32 0, i32 %dec.i.i152
  %36 = ptrtoint ptr %arrayidx20.i.i153 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx20.i.i153, align 4
  %arrayidx21.i.i154 = getelementptr [9 x ptr], ptr %iter_stack.i.i123, i32 0, i32 %dec.i.i152
  %38 = ptrtoint ptr %arrayidx21.i.i154 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx21.i.i154, align 4
  br label %if.end22.i.i162

if.end22.i.i162:                                  ; preds = %if.end19.i.i155, %while.end.i.i149
  %next.1.i.i156 = phi ptr [ %31, %while.end.i.i149 ], [ %37, %if.end19.i.i155 ]
  %niter.2.i.i157 = phi ptr [ %adj_list12.i.i145, %while.end.i.i149 ], [ %39, %if.end19.i.i155 ]
  %cur.2.i.i158 = phi i32 [ %inc.i.i147, %while.end.i.i149 ], [ %dec.i.i152, %if.end19.i.i155 ]
  %cmp.not.i.i159 = icmp ne ptr %next.1.i.i156, %dev
  %cmp.i.not.i160 = icmp eq ptr %next.1.i.i156, %upper_dev
  %or.cond.i161 = and i1 %cmp.not.i.i159, %cmp.i.not.i160
  br i1 %or.cond.i161, label %__netdev_has_upper_dev.exit164.thread, label %if.end22.i.i162.if.end2.i.i135_crit_edge

if.end22.i.i162.if.end2.i.i135_crit_edge:         ; preds = %if.end22.i.i162
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i.i135

__netdev_has_upper_dev.exit164.thread:            ; preds = %if.end22.i.i162
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack.i.i123) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack.i.i122) #35
  br label %cleanup

__netdev_has_upper_dev.exit164:                   ; preds = %if.then16.i.i151
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack.i.i123) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack.i.i122) #35
  br label %if.end66

if.else:                                          ; preds = %if.end54
  br i1 %tobool.not.i166, label %land.rhs.i167, label %if.else.if.end29.i170_crit_edge

if.else.if.end29.i170_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i170

land.rhs.i167:                                    ; preds = %if.else
  %.b61.i = load i1, ptr @__netdev_master_upper_dev_get.__already_done, align 1
  br i1 %.b61.i, label %land.rhs.i167.if.end29.i170_crit_edge, label %if.then.i168, !prof !1311

land.rhs.i167.if.end29.i170_crit_edge:            ; preds = %land.rhs.i167
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i170

if.then.i168:                                     ; preds = %land.rhs.i167
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netdev_master_upper_dev_get.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6671, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6671) #35
  br label %if.end29.i170

if.end29.i170:                                    ; preds = %if.then.i168, %land.rhs.i167.if.end29.i170_crit_edge, %if.else.if.end29.i170_crit_edge
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %40 = ptrtoint ptr %adj_list.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile ptr, ptr %adj_list.i, align 4
  %cmp.i.not.i169 = icmp eq ptr %41, %adj_list.i
  br i1 %cmp.i.not.i169, label %if.end29.i170.if.end66_crit_edge, label %if.end41.i

if.end29.i170.if.end66_crit_edge:                 ; preds = %if.end29.i170
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end66

if.end41.i:                                       ; preds = %if.end29.i170
  %add.ptr.i = getelementptr i8, ptr %41, i32 -16
  %master.i = getelementptr i8, ptr %41, i32 -8
  %42 = ptrtoint ptr %master.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %master.i, align 4, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool45.not.i = icmp eq i8 %43, 0
  br i1 %tobool45.not.i, label %if.end41.i.if.end66_crit_edge, label %land.lhs.true.i, !prof !1310

if.end41.i.if.end66_crit_edge:                    ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end66

land.lhs.true.i:                                  ; preds = %if.end41.i
  %ignore.i = getelementptr i8, ptr %41, i32 -7
  %44 = ptrtoint ptr %ignore.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %ignore.i, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool52.not.i = icmp eq i8 %45, 0
  br i1 %tobool52.not.i, label %__netdev_master_upper_dev_get.exit, label %land.lhs.true.i.if.end66_crit_edge

land.lhs.true.i.if.end66_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end66

__netdev_master_upper_dev_get.exit:               ; preds = %land.lhs.true.i
  %46 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %add.ptr.i, align 4
  %tobool61.not = icmp eq ptr %47, null
  br i1 %tobool61.not, label %__netdev_master_upper_dev_get.exit.if.end66_crit_edge, label %if.then62

__netdev_master_upper_dev_get.exit.if.end66_crit_edge: ; preds = %__netdev_master_upper_dev_get.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end66

if.then62:                                        ; preds = %__netdev_master_upper_dev_get.exit
  call void @__sanitizer_cov_trace_pc() #37
  %cmp63 = icmp eq ptr %47, %upper_dev
  %cond = select i1 %cmp63, i32 -17, i32 -16
  br label %cleanup

if.end66:                                         ; preds = %__netdev_master_upper_dev_get.exit.if.end66_crit_edge, %land.lhs.true.i.if.end66_crit_edge, %if.end41.i.if.end66_crit_edge, %if.end29.i170.if.end66_crit_edge, %__netdev_has_upper_dev.exit164
  %48 = ptrtoint ptr %changeupper_info to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %changeupper_info, align 4
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %49, i32 0, i32 127
  %50 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %nd_net.i.i, align 4
  %call1.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i171 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i171, label %land.rhs.i172, label %if.end66.if.end30.i_crit_edge

if.end66.if.end30.i_crit_edge:                    ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

land.rhs.i172:                                    ; preds = %if.end66
  %.b50.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i172.if.end30.i_crit_edge, label %if.then.i173, !prof !1311

land.rhs.i172.if.end30.i_crit_edge:               ; preds = %land.rhs.i172
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

if.then.i173:                                     ; preds = %land.rhs.i172
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i173, %land.rhs.i172.if.end30.i_crit_edge, %if.end66.if.end30.i_crit_edge
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %51, i32 0, i32 25
  %call38.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i, i32 noundef 26, ptr noundef nonnull %changeupper_info) #35
  %and.i = and i32 %call38.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool39.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool39.not.i, label %if.end41.i174, label %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge

if.end30.i.call_netdevice_notifiers_info.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit

if.end41.i174:                                    ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 26, ptr noundef nonnull %changeupper_info) #35
  br label %call_netdevice_notifiers_info.exit

call_netdevice_notifiers_info.exit:               ; preds = %if.end41.i174, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge
  %retval.0.i175 = phi i32 [ %call42.i, %if.end41.i174 ], [ %call38.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge ]
  %and.i176 = and i32 %retval.0.i175, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i176)
  %cmp.i = icmp sgt i32 %and.i176, 1
  %sub.i = sub i32 1, %and.i176
  %spec.select.i = select i1 %cmp.i, i32 %sub.i, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i)
  %tobool70.not = icmp eq i32 %spec.select.i, 0
  br i1 %tobool70.not, label %if.end72, label %call_netdevice_notifiers_info.exit.cleanup_crit_edge

call_netdevice_notifiers_info.exit.cleanup_crit_edge: ; preds = %call_netdevice_notifiers_info.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end72:                                         ; preds = %call_netdevice_notifiers_info.exit
  %adj_list.i177 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %call.i.i = call fastcc i32 @__netdev_adjacent_dev_insert(ptr noundef %dev, ptr noundef %upper_dev, ptr noundef %adj_list.i177, ptr noundef %upper_priv, i1 noundef zeroext %master) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i.i, label %if.end.i.i, label %if.end72.cleanup_crit_edge

if.end72.cleanup_crit_edge:                       ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end72
  %lower.i = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 13, i32 1
  %call2.i.i = call fastcc i32 @__netdev_adjacent_dev_insert(ptr noundef %upper_dev, ptr noundef %dev, ptr noundef %lower.i, ptr noundef %upper_priv, i1 noundef zeroext false) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %if.end77, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %dev, ptr noundef %upper_dev, ptr noundef %adj_list.i177) #35
  br label %cleanup

if.end77:                                         ; preds = %if.end.i.i
  %call79 = call fastcc i32 @call_netdevice_notifiers_info(i32 noundef 21, ptr noundef nonnull %changeupper_info)
  %and.i178 = and i32 %call79, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i178)
  %cmp.i179 = icmp sgt i32 %and.i178, 1
  %sub.i180 = sub i32 1, %and.i178
  %spec.select.i181 = select i1 %cmp.i179, i32 %sub.i180, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i181)
  %tobool81.not = icmp eq i32 %spec.select.i181, 0
  br i1 %tobool81.not, label %if.end83, label %rollback

if.end83:                                         ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #37
  %call84 = call fastcc i32 @__netdev_update_upper_level(ptr noundef %dev, ptr noundef null)
  call fastcc void @__netdev_walk_all_lower_dev(ptr noundef %dev)
  %call86 = call i32 @__netdev_update_lower_level(ptr noundef %upper_dev, ptr noundef %priv)
  %call87 = call fastcc i32 @__netdev_walk_all_upper_dev(ptr noundef %upper_dev, ptr noundef nonnull @__netdev_update_lower_level, ptr noundef %priv)
  br label %cleanup

rollback:                                         ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #37
  call fastcc void @__netdev_adjacent_dev_unlink_neighbour(ptr noundef %dev, ptr noundef %upper_dev)
  br label %cleanup

cleanup:                                          ; preds = %rollback, %if.end83, %if.then4.i.i, %if.end72.cleanup_crit_edge, %call_netdevice_notifiers_info.exit.cleanup_crit_edge, %if.then62, %__netdev_has_upper_dev.exit164.thread, %if.end49.cleanup_crit_edge, %__netdev_has_upper_dev.exit.thread, %if.end37.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond, %if.then62 ], [ %spec.select.i181, %rollback ], [ 0, %if.end83 ], [ -16, %if.end37.cleanup_crit_edge ], [ -31, %if.end49.cleanup_crit_edge ], [ %spec.select.i, %call_netdevice_notifiers_info.exit.cleanup_crit_edge ], [ -16, %__netdev_has_upper_dev.exit.thread ], [ -17, %__netdev_has_upper_dev.exit164.thread ], [ %call.i.i, %if.end72.cleanup_crit_edge ], [ %call2.i.i, %if.then4.i.i ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %changeupper_info) #35
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_master_upper_dev_link(ptr noundef %dev, ptr noundef %upper_dev, ptr noundef %upper_priv, ptr noundef %upper_info, ptr noundef %extack) #1 align 64 {
entry:
  %priv = alloca %struct.netdev_nested_priv, align 8
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %priv) #35
  %0 = load i64, ptr @__const.netdev_adjacent_change_commit.priv, align 8
  %1 = ptrtoint ptr %priv to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %0, ptr %priv, align 8
  %call = call fastcc i32 @__netdev_upper_dev_link(ptr noundef %dev, ptr noundef %upper_dev, i1 noundef zeroext true, ptr noundef %upper_priv, ptr noundef %upper_info, ptr noundef nonnull %priv, ptr noundef %extack)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %priv) #35
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_upper_dev_unlink(ptr noundef %dev, ptr noundef %upper_dev) #1 align 64 {
entry:
  %priv = alloca %struct.netdev_nested_priv, align 8
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %priv) #35
  %0 = load i64, ptr @__const.netdev_upper_dev_unlink.priv, align 8
  %1 = ptrtoint ptr %priv to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %0, ptr %priv, align 8
  call fastcc void @__netdev_upper_dev_unlink(ptr noundef %dev, ptr noundef %upper_dev, ptr noundef nonnull %priv)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %priv) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__netdev_upper_dev_unlink(ptr noundef %dev, ptr noundef %upper_dev, ptr noundef readonly %priv) unnamed_addr #1 align 64 {
entry:
  %dev_stack.i105 = alloca [9 x ptr], align 4
  %iter_stack.i106 = alloca [9 x ptr], align 4
  %dev_stack.i = alloca [9 x ptr], align 4
  %iter_stack.i = alloca [9 x ptr], align 4
  %changeupper_info = alloca %struct.netdev_notifier_changeupper_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %changeupper_info) #35
  %0 = getelementptr inbounds i8, ptr %changeupper_info, i32 12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4
  %2 = ptrtoint ptr %changeupper_info to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dev, ptr %changeupper_info, align 4
  %extack = getelementptr inbounds %struct.netdev_notifier_info, ptr %changeupper_info, i32 0, i32 1
  %3 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %extack, align 4
  %upper_dev2 = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %changeupper_info, i32 0, i32 1
  %4 = ptrtoint ptr %upper_dev2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %upper_dev, ptr %upper_dev2, align 4
  %master = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %changeupper_info, i32 0, i32 2
  %linking = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %changeupper_info, i32 0, i32 3
  %5 = ptrtoint ptr %linking to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %linking, align 1
  %upper_info = getelementptr inbounds %struct.netdev_notifier_changeupper_info, ptr %changeupper_info, i32 0, i32 4
  %6 = ptrtoint ptr %upper_info to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %upper_info, align 4
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end31_crit_edge

entry.if.end31_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end31

land.rhs:                                         ; preds = %entry
  %.b61 = load i1, ptr @__netdev_upper_dev_unlink.__already_done, align 1
  br i1 %.b61, label %land.rhs.if.end31_crit_edge, label %if.then, !prof !1311

land.rhs.if.end31_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end31

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netdev_upper_dev_unlink.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7574, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 7574) #35
  br label %if.end31

if.end31:                                         ; preds = %if.then, %land.rhs.if.end31_crit_edge, %entry.if.end31_crit_edge
  %call.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end31.if.end29.i_crit_edge

if.end31.if.end29.i_crit_edge:                    ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

land.rhs.i:                                       ; preds = %if.end31
  %.b59.i = load i1, ptr @netdev_master_upper_dev_get.__already_done, align 1
  br i1 %.b59.i, label %land.rhs.i.if.end29.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end29.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_master_upper_dev_get.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6654, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6654) #35
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end29.i_crit_edge, %if.end31.if.end29.i_crit_edge
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %7 = ptrtoint ptr %adj_list.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %adj_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %8, %adj_list.i
  br i1 %cmp.i.not.i, label %if.end29.i.netdev_master_upper_dev_get.exit_crit_edge, label %if.end41.i

if.end29.i.netdev_master_upper_dev_get.exit_crit_edge: ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_master_upper_dev_get.exit

if.end41.i:                                       ; preds = %if.end29.i
  %master.i = getelementptr i8, ptr %8, i32 -8
  %9 = ptrtoint ptr %master.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %master.i, align 4, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool45.not.i = icmp eq i8 %10, 0
  br i1 %tobool45.not.i, label %if.end41.i.netdev_master_upper_dev_get.exit_crit_edge, label %if.then52.i, !prof !1310

if.end41.i.netdev_master_upper_dev_get.exit_crit_edge: ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_master_upper_dev_get.exit

if.then52.i:                                      ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #37
  %add.ptr.i = getelementptr i8, ptr %8, i32 -16
  %11 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %add.ptr.i, align 4
  br label %netdev_master_upper_dev_get.exit

netdev_master_upper_dev_get.exit:                 ; preds = %if.then52.i, %if.end41.i.netdev_master_upper_dev_get.exit_crit_edge, %if.end29.i.netdev_master_upper_dev_get.exit_crit_edge
  %retval.0.i = phi ptr [ %12, %if.then52.i ], [ null, %if.end29.i.netdev_master_upper_dev_get.exit_crit_edge ], [ null, %if.end41.i.netdev_master_upper_dev_get.exit_crit_edge ]
  %cmp = icmp eq ptr %retval.0.i, %upper_dev
  %frombool41 = zext i1 %cmp to i8
  %13 = ptrtoint ptr %master to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %frombool41, ptr %master, align 4
  %14 = ptrtoint ptr %changeupper_info to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %changeupper_info, align 4
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 127
  %16 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nd_net.i.i, align 4
  %call1.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i62 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i62, label %land.rhs.i63, label %netdev_master_upper_dev_get.exit.if.end30.i_crit_edge

netdev_master_upper_dev_get.exit.if.end30.i_crit_edge: ; preds = %netdev_master_upper_dev_get.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

land.rhs.i63:                                     ; preds = %netdev_master_upper_dev_get.exit
  %.b50.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i63.if.end30.i_crit_edge, label %if.then.i64, !prof !1311

land.rhs.i63.if.end30.i_crit_edge:                ; preds = %land.rhs.i63
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

if.then.i64:                                      ; preds = %land.rhs.i63
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i64, %land.rhs.i63.if.end30.i_crit_edge, %netdev_master_upper_dev_get.exit.if.end30.i_crit_edge
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %17, i32 0, i32 25
  %call38.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i, i32 noundef 26, ptr noundef nonnull %changeupper_info) #35
  %and.i = and i32 %call38.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool39.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool39.not.i, label %if.end41.i65, label %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge

if.end30.i.call_netdevice_notifiers_info.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit

if.end41.i65:                                     ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 26, ptr noundef nonnull %changeupper_info) #35
  br label %call_netdevice_notifiers_info.exit

call_netdevice_notifiers_info.exit:               ; preds = %if.end41.i65, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge
  %lower.i = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 13, i32 1
  call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %dev, ptr noundef %upper_dev, ptr noundef %adj_list.i) #35
  call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %upper_dev, ptr noundef %dev, ptr noundef %lower.i) #35
  %18 = ptrtoint ptr %changeupper_info to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %changeupper_info, align 4
  %nd_net.i.i68 = getelementptr inbounds %struct.net_device, ptr %19, i32 0, i32 127
  %20 = ptrtoint ptr %nd_net.i.i68 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %nd_net.i.i68, align 4
  %call1.i69 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i69)
  %tobool.not.i70 = icmp eq i32 %call1.i69, 0
  br i1 %tobool.not.i70, label %land.rhs.i72, label %call_netdevice_notifiers_info.exit.if.end30.i78_crit_edge

call_netdevice_notifiers_info.exit.if.end30.i78_crit_edge: ; preds = %call_netdevice_notifiers_info.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i78

land.rhs.i72:                                     ; preds = %call_netdevice_notifiers_info.exit
  %.b50.i71 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i71, label %land.rhs.i72.if.end30.i78_crit_edge, label %if.then.i73, !prof !1311

land.rhs.i72.if.end30.i78_crit_edge:              ; preds = %land.rhs.i72
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i78

if.then.i73:                                      ; preds = %land.rhs.i72
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i78

if.end30.i78:                                     ; preds = %if.then.i73, %land.rhs.i72.if.end30.i78_crit_edge, %call_netdevice_notifiers_info.exit.if.end30.i78_crit_edge
  %netdev_chain.i74 = getelementptr inbounds %struct.net, ptr %21, i32 0, i32 25
  %call38.i75 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i74, i32 noundef 21, ptr noundef nonnull %changeupper_info) #35
  %and.i76 = and i32 %call38.i75, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i76)
  %tobool39.not.i77 = icmp eq i32 %and.i76, 0
  br i1 %tobool39.not.i77, label %if.end41.i80, label %if.end30.i78.call_netdevice_notifiers_info.exit82_crit_edge

if.end30.i78.call_netdevice_notifiers_info.exit82_crit_edge: ; preds = %if.end30.i78
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit82

if.end41.i80:                                     ; preds = %if.end30.i78
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i79 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 21, ptr noundef nonnull %changeupper_info) #35
  br label %call_netdevice_notifiers_info.exit82

call_netdevice_notifiers_info.exit82:             ; preds = %if.end41.i80, %if.end30.i78.call_netdevice_notifiers_info.exit82_crit_edge
  %22 = ptrtoint ptr %adj_list.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %adj_list.i, align 4
  %cmp.i.i.i = icmp eq ptr %23, %adj_list.i
  br i1 %cmp.i.i.i, label %call_netdevice_notifiers_info.exit82.__netdev_update_upper_level.exit_crit_edge, label %__netdev_next_upper_dev.exit.i.i

call_netdevice_notifiers_info.exit82.__netdev_update_upper_level.exit_crit_edge: ; preds = %call_netdevice_notifiers_info.exit82
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit

__netdev_next_upper_dev.exit.i.i:                 ; preds = %call_netdevice_notifiers_info.exit82
  %add.ptr.i.i.i = getelementptr i8, ptr %23, i32 -16
  %24 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %add.ptr.i.i.i, align 4
  %tobool.not21.i.i = icmp eq ptr %25, null
  br i1 %tobool.not21.i.i, label %__netdev_next_upper_dev.exit.i.i.__netdev_update_upper_level.exit_crit_edge, label %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge

__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i.i
  br label %for.body.i.i

__netdev_next_upper_dev.exit.i.i.__netdev_update_upper_level.exit_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit

for.body.i.i:                                     ; preds = %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge, %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge
  %max_depth.025.i.i = phi i8 [ %max_depth.1.i.i, %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge ], [ 0, %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge ]
  %udev.024.i.i = phi ptr [ %33, %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge ], [ %25, %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge ]
  %iter.122.i.i = phi ptr [ %31, %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge ], [ %23, %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge ]
  %ignore.123.in.i.i = getelementptr i8, ptr %iter.122.i.i, i32 -7
  %26 = ptrtoint ptr %ignore.123.in.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %ignore.123.i.i = load i8, ptr %ignore.123.in.i.i, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %ignore.123.i.i)
  %tobool1.not.i.i = icmp eq i8 %ignore.123.i.i, 0
  br i1 %tobool1.not.i.i, label %if.end.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %upper_level.i.i = getelementptr inbounds %struct.net_device, ptr %udev.024.i.i, i32 0, i32 57
  %27 = ptrtoint ptr %upper_level.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %upper_level.i.i, align 2
  %29 = call i8 @llvm.umax.i8(i8 %max_depth.025.i.i, i8 %28) #35
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %max_depth.1.i.i = phi i8 [ %max_depth.025.i.i, %for.body.i.i.for.inc.i.i_crit_edge ], [ %29, %if.end.i.i ]
  %30 = ptrtoint ptr %iter.122.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %iter.122.i.i, align 4
  %cmp.i14.i.i = icmp eq ptr %31, %adj_list.i
  br i1 %cmp.i14.i.i, label %for.inc.i.i.__netdev_update_upper_level.exit_crit_edge, label %__netdev_next_upper_dev.exit19.i.i

for.inc.i.i.__netdev_update_upper_level.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit

__netdev_next_upper_dev.exit19.i.i:               ; preds = %for.inc.i.i
  %add.ptr.i15.i.i = getelementptr i8, ptr %31, i32 -16
  %32 = ptrtoint ptr %add.ptr.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %add.ptr.i15.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.i, label %__netdev_next_upper_dev.exit19.i.i.__netdev_update_upper_level.exit_crit_edge, label %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge

__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit19.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i

__netdev_next_upper_dev.exit19.i.i.__netdev_update_upper_level.exit_crit_edge: ; preds = %__netdev_next_upper_dev.exit19.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit

__netdev_update_upper_level.exit:                 ; preds = %__netdev_next_upper_dev.exit19.i.i.__netdev_update_upper_level.exit_crit_edge, %for.inc.i.i.__netdev_update_upper_level.exit_crit_edge, %__netdev_next_upper_dev.exit.i.i.__netdev_update_upper_level.exit_crit_edge, %call_netdevice_notifiers_info.exit82.__netdev_update_upper_level.exit_crit_edge
  %max_depth.0.lcssa.i.i = phi i8 [ 0, %__netdev_next_upper_dev.exit.i.i.__netdev_update_upper_level.exit_crit_edge ], [ 0, %call_netdevice_notifiers_info.exit82.__netdev_update_upper_level.exit_crit_edge ], [ %max_depth.1.i.i, %__netdev_next_upper_dev.exit19.i.i.__netdev_update_upper_level.exit_crit_edge ], [ %max_depth.1.i.i, %for.inc.i.i.__netdev_update_upper_level.exit_crit_edge ]
  %add.i = add i8 %max_depth.0.lcssa.i.i, 1
  %upper_level.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 57
  %34 = ptrtoint ptr %upper_level.i to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %add.i, ptr %upper_level.i, align 2
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack.i) #35
  %35 = call ptr @memset(ptr %dev_stack.i, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack.i) #35
  %36 = call ptr @memset(ptr %iter_stack.i, i32 255, i32 36)
  %lower.i83 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.backedge, %__netdev_update_upper_level.exit
  %storemerge.i = phi ptr [ %lower.i83, %__netdev_update_upper_level.exit ], [ %storemerge.i.be, %while.cond.i.backedge ]
  %now.0.i = phi ptr [ %dev, %__netdev_update_upper_level.exit ], [ %now.0.i.be, %while.cond.i.backedge ]
  %cur.0.i = phi i32 [ 0, %__netdev_update_upper_level.exit ], [ %cur.0.i.be, %while.cond.i.backedge ]
  %cmp.not.i = icmp eq ptr %now.0.i, %dev
  br i1 %cmp.not.i, label %while.cond.i.if.end2.i_crit_edge, label %if.then.i84

while.cond.i.if.end2.i_crit_edge:                 ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i

if.then.i84:                                      ; preds = %while.cond.i
  %adj_list.i.i.i = getelementptr inbounds %struct.net_device, ptr %now.0.i, i32 0, i32 13
  %37 = ptrtoint ptr %adj_list.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %adj_list.i.i.i, align 4
  %cmp.i.i.i.i = icmp eq ptr %38, %adj_list.i.i.i
  br i1 %cmp.i.i.i.i, label %if.then.i84.__netdev_update_upper_level.exit.i_crit_edge, label %__netdev_next_upper_dev.exit.i.i.i

if.then.i84.__netdev_update_upper_level.exit.i_crit_edge: ; preds = %if.then.i84
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit.i

__netdev_next_upper_dev.exit.i.i.i:               ; preds = %if.then.i84
  %add.ptr.i.i.i.i = getelementptr i8, ptr %38, i32 -16
  %39 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %add.ptr.i.i.i.i, align 4
  %tobool.not21.i.i.i = icmp eq ptr %40, null
  br i1 %tobool.not21.i.i.i, label %__netdev_next_upper_dev.exit.i.i.i.__netdev_update_upper_level.exit.i_crit_edge, label %__netdev_next_upper_dev.exit.i.i.i.for.body.i.i.i_crit_edge

__netdev_next_upper_dev.exit.i.i.i.for.body.i.i.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i.i.i
  br label %for.body.i.i.i

__netdev_next_upper_dev.exit.i.i.i.__netdev_update_upper_level.exit.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit.i

for.body.i.i.i:                                   ; preds = %__netdev_next_upper_dev.exit19.i.i.i.for.body.i.i.i_crit_edge, %__netdev_next_upper_dev.exit.i.i.i.for.body.i.i.i_crit_edge
  %max_depth.025.i.i.i = phi i8 [ %max_depth.1.i.i.i, %__netdev_next_upper_dev.exit19.i.i.i.for.body.i.i.i_crit_edge ], [ 0, %__netdev_next_upper_dev.exit.i.i.i.for.body.i.i.i_crit_edge ]
  %udev.024.i.i.i = phi ptr [ %48, %__netdev_next_upper_dev.exit19.i.i.i.for.body.i.i.i_crit_edge ], [ %40, %__netdev_next_upper_dev.exit.i.i.i.for.body.i.i.i_crit_edge ]
  %iter.122.i.i.i = phi ptr [ %46, %__netdev_next_upper_dev.exit19.i.i.i.for.body.i.i.i_crit_edge ], [ %38, %__netdev_next_upper_dev.exit.i.i.i.for.body.i.i.i_crit_edge ]
  %ignore.123.in.i.i.i = getelementptr i8, ptr %iter.122.i.i.i, i32 -7
  %41 = ptrtoint ptr %ignore.123.in.i.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %ignore.123.i.i.i = load i8, ptr %ignore.123.in.i.i.i, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %ignore.123.i.i.i)
  %tobool1.not.i.i.i = icmp eq i8 %ignore.123.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.end.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i.i.i

if.end.i.i.i:                                     ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %upper_level.i.i.i = getelementptr inbounds %struct.net_device, ptr %udev.024.i.i.i, i32 0, i32 57
  %42 = ptrtoint ptr %upper_level.i.i.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %upper_level.i.i.i, align 2
  %44 = call i8 @llvm.umax.i8(i8 %max_depth.025.i.i.i, i8 %43) #35
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %if.end.i.i.i, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %max_depth.1.i.i.i = phi i8 [ %max_depth.025.i.i.i, %for.body.i.i.i.for.inc.i.i.i_crit_edge ], [ %44, %if.end.i.i.i ]
  %45 = ptrtoint ptr %iter.122.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %iter.122.i.i.i, align 4
  %cmp.i14.i.i.i = icmp eq ptr %46, %adj_list.i.i.i
  br i1 %cmp.i14.i.i.i, label %for.inc.i.i.i.__netdev_update_upper_level.exit.i_crit_edge, label %__netdev_next_upper_dev.exit19.i.i.i

for.inc.i.i.i.__netdev_update_upper_level.exit.i_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit.i

__netdev_next_upper_dev.exit19.i.i.i:             ; preds = %for.inc.i.i.i
  %add.ptr.i15.i.i.i = getelementptr i8, ptr %46, i32 -16
  %47 = ptrtoint ptr %add.ptr.i15.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %add.ptr.i15.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %48, null
  br i1 %tobool.not.i.i.i, label %__netdev_next_upper_dev.exit19.i.i.i.__netdev_update_upper_level.exit.i_crit_edge, label %__netdev_next_upper_dev.exit19.i.i.i.for.body.i.i.i_crit_edge

__netdev_next_upper_dev.exit19.i.i.i.for.body.i.i.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit19.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i.i

__netdev_next_upper_dev.exit19.i.i.i.__netdev_update_upper_level.exit.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit19.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit.i

__netdev_update_upper_level.exit.i:               ; preds = %__netdev_next_upper_dev.exit19.i.i.i.__netdev_update_upper_level.exit.i_crit_edge, %for.inc.i.i.i.__netdev_update_upper_level.exit.i_crit_edge, %__netdev_next_upper_dev.exit.i.i.i.__netdev_update_upper_level.exit.i_crit_edge, %if.then.i84.__netdev_update_upper_level.exit.i_crit_edge
  %max_depth.0.lcssa.i.i.i = phi i8 [ 0, %__netdev_next_upper_dev.exit.i.i.i.__netdev_update_upper_level.exit.i_crit_edge ], [ 0, %if.then.i84.__netdev_update_upper_level.exit.i_crit_edge ], [ %max_depth.1.i.i.i, %for.inc.i.i.i.__netdev_update_upper_level.exit.i_crit_edge ], [ %max_depth.1.i.i.i, %__netdev_next_upper_dev.exit19.i.i.i.__netdev_update_upper_level.exit.i_crit_edge ]
  %add.i.i = add i8 %max_depth.0.lcssa.i.i.i, 1
  %upper_level.i.i85 = getelementptr inbounds %struct.net_device, ptr %now.0.i, i32 0, i32 57
  %49 = ptrtoint ptr %upper_level.i.i85 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %add.i.i, ptr %upper_level.i.i85, align 2
  br label %if.end2.i

if.end2.i:                                        ; preds = %__netdev_update_upper_level.exit.i, %while.cond.i.if.end2.i_crit_edge
  %lower1.i.i = getelementptr inbounds %struct.net_device, ptr %now.0.i, i32 0, i32 13, i32 1
  br label %while.cond3.i

while.cond3.i:                                    ; preds = %if.end8.i.while.cond3.i_crit_edge, %if.end2.i
  %iter.0.i = phi ptr [ %storemerge.i, %if.end2.i ], [ %51, %if.end8.i.while.cond3.i_crit_edge ]
  %50 = ptrtoint ptr %iter.0.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %iter.0.i, align 4
  %cmp.i.i = icmp eq ptr %51, %lower1.i.i
  br i1 %cmp.i.i, label %while.cond3.i.if.then16.i_crit_edge, label %__netdev_next_lower_dev.exit.i

while.cond3.i.if.then16.i_crit_edge:              ; preds = %while.cond3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16.i

__netdev_next_lower_dev.exit.i:                   ; preds = %while.cond3.i
  %add.ptr.i.i = getelementptr i8, ptr %51, i32 -16
  %52 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %add.ptr.i.i, align 4
  %tobool6.not.i = icmp eq ptr %53, null
  br i1 %tobool6.not.i, label %__netdev_next_lower_dev.exit.i.if.then16.i_crit_edge, label %if.end8.i

__netdev_next_lower_dev.exit.i.if.then16.i_crit_edge: ; preds = %__netdev_next_lower_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16.i

if.end8.i:                                        ; preds = %__netdev_next_lower_dev.exit.i
  %ignore3.i.i = getelementptr i8, ptr %51, i32 -7
  %54 = ptrtoint ptr %ignore3.i.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %ignore3.i.i, align 1, !range !1333
  %tobool9.not.i = icmp eq i8 %55, 0
  br i1 %tobool9.not.i, label %while.end.i, label %if.end8.i.while.cond3.i_crit_edge

if.end8.i.while.cond3.i_crit_edge:                ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond3.i

while.end.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #37
  %lower13.i = getelementptr inbounds %struct.net_device, ptr %53, i32 0, i32 13, i32 1
  %arrayidx.i = getelementptr [9 x ptr], ptr %dev_stack.i, i32 0, i32 %cur.0.i
  %56 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %now.0.i, ptr %arrayidx.i, align 4
  %inc.i = add i32 %cur.0.i, 1
  %arrayidx14.i = getelementptr [9 x ptr], ptr %iter_stack.i, i32 0, i32 %cur.0.i
  %57 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %51, ptr %arrayidx14.i, align 4
  br label %while.cond.i.backedge

if.then16.i:                                      ; preds = %__netdev_next_lower_dev.exit.i.if.then16.i_crit_edge, %while.cond3.i.if.then16.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0.i)
  %tobool17.not.i = icmp eq i32 %cur.0.i, 0
  br i1 %tobool17.not.i, label %__netdev_walk_all_lower_dev.exit, label %if.end19.i

if.end19.i:                                       ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #37
  %dec.i = add i32 %cur.0.i, -1
  %arrayidx20.i = getelementptr [9 x ptr], ptr %dev_stack.i, i32 0, i32 %dec.i
  %58 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx20.i, align 4
  %arrayidx21.i = getelementptr [9 x ptr], ptr %iter_stack.i, i32 0, i32 %dec.i
  %60 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx21.i, align 4
  br label %while.cond.i.backedge

while.cond.i.backedge:                            ; preds = %if.end19.i, %while.end.i
  %storemerge.i.be = phi ptr [ %lower13.i, %while.end.i ], [ %61, %if.end19.i ]
  %now.0.i.be = phi ptr [ %53, %while.end.i ], [ %59, %if.end19.i ]
  %cur.0.i.be = phi i32 [ %inc.i, %while.end.i ], [ %dec.i, %if.end19.i ]
  br label %while.cond.i

__netdev_walk_all_lower_dev.exit:                 ; preds = %if.then16.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack.i) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack.i) #35
  %62 = ptrtoint ptr %lower.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %lower.i, align 4
  %cmp.i.i.i86 = icmp eq ptr %63, %lower.i
  br i1 %cmp.i.i.i86, label %__netdev_walk_all_lower_dev.exit.__netdev_lower_depth.exit.i_crit_edge, label %__netdev_next_lower_dev.exit.i.i

__netdev_walk_all_lower_dev.exit.__netdev_lower_depth.exit.i_crit_edge: ; preds = %__netdev_walk_all_lower_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit.i

__netdev_next_lower_dev.exit.i.i:                 ; preds = %__netdev_walk_all_lower_dev.exit
  %add.ptr.i.i.i87 = getelementptr i8, ptr %63, i32 -16
  %64 = ptrtoint ptr %add.ptr.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %add.ptr.i.i.i87, align 4
  %tobool.not21.i.i88 = icmp eq ptr %65, null
  br i1 %tobool.not21.i.i88, label %__netdev_next_lower_dev.exit.i.i.__netdev_lower_depth.exit.i_crit_edge, label %__netdev_next_lower_dev.exit.i.i.for.body.i.i94_crit_edge

__netdev_next_lower_dev.exit.i.i.for.body.i.i94_crit_edge: ; preds = %__netdev_next_lower_dev.exit.i.i
  br label %for.body.i.i94

__netdev_next_lower_dev.exit.i.i.__netdev_lower_depth.exit.i_crit_edge: ; preds = %__netdev_next_lower_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit.i

for.body.i.i94:                                   ; preds = %__netdev_next_lower_dev.exit19.i.i.for.body.i.i94_crit_edge, %__netdev_next_lower_dev.exit.i.i.for.body.i.i94_crit_edge
  %max_depth.025.i.i89 = phi i8 [ %max_depth.1.i.i96, %__netdev_next_lower_dev.exit19.i.i.for.body.i.i94_crit_edge ], [ 0, %__netdev_next_lower_dev.exit.i.i.for.body.i.i94_crit_edge ]
  %ldev.024.i.i = phi ptr [ %73, %__netdev_next_lower_dev.exit19.i.i.for.body.i.i94_crit_edge ], [ %65, %__netdev_next_lower_dev.exit.i.i.for.body.i.i94_crit_edge ]
  %iter.122.i.i90 = phi ptr [ %71, %__netdev_next_lower_dev.exit19.i.i.for.body.i.i94_crit_edge ], [ %63, %__netdev_next_lower_dev.exit.i.i.for.body.i.i94_crit_edge ]
  %ignore.123.in.i.i91 = getelementptr i8, ptr %iter.122.i.i90, i32 -7
  %66 = ptrtoint ptr %ignore.123.in.i.i91 to i32
  call void @__asan_load1_noabort(i32 %66)
  %ignore.123.i.i92 = load i8, ptr %ignore.123.in.i.i91, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %ignore.123.i.i92)
  %tobool1.not.i.i93 = icmp eq i8 %ignore.123.i.i92, 0
  br i1 %tobool1.not.i.i93, label %if.end.i.i95, label %for.body.i.i94.for.inc.i.i98_crit_edge

for.body.i.i94.for.inc.i.i98_crit_edge:           ; preds = %for.body.i.i94
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i.i98

if.end.i.i95:                                     ; preds = %for.body.i.i94
  call void @__sanitizer_cov_trace_pc() #37
  %lower_level.i.i = getelementptr inbounds %struct.net_device, ptr %ldev.024.i.i, i32 0, i32 58
  %67 = ptrtoint ptr %lower_level.i.i to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %lower_level.i.i, align 1
  %69 = call i8 @llvm.umax.i8(i8 %max_depth.025.i.i89, i8 %68) #35
  br label %for.inc.i.i98

for.inc.i.i98:                                    ; preds = %if.end.i.i95, %for.body.i.i94.for.inc.i.i98_crit_edge
  %max_depth.1.i.i96 = phi i8 [ %max_depth.025.i.i89, %for.body.i.i94.for.inc.i.i98_crit_edge ], [ %69, %if.end.i.i95 ]
  %70 = ptrtoint ptr %iter.122.i.i90 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %iter.122.i.i90, align 4
  %cmp.i14.i.i97 = icmp eq ptr %71, %lower.i
  br i1 %cmp.i14.i.i97, label %for.inc.i.i98.__netdev_lower_depth.exit.i_crit_edge, label %__netdev_next_lower_dev.exit19.i.i

for.inc.i.i98.__netdev_lower_depth.exit.i_crit_edge: ; preds = %for.inc.i.i98
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit.i

__netdev_next_lower_dev.exit19.i.i:               ; preds = %for.inc.i.i98
  %add.ptr.i15.i.i99 = getelementptr i8, ptr %71, i32 -16
  %72 = ptrtoint ptr %add.ptr.i15.i.i99 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %add.ptr.i15.i.i99, align 4
  %tobool.not.i.i100 = icmp eq ptr %73, null
  br i1 %tobool.not.i.i100, label %__netdev_next_lower_dev.exit19.i.i.__netdev_lower_depth.exit.i_crit_edge, label %__netdev_next_lower_dev.exit19.i.i.for.body.i.i94_crit_edge

__netdev_next_lower_dev.exit19.i.i.for.body.i.i94_crit_edge: ; preds = %__netdev_next_lower_dev.exit19.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i94

__netdev_next_lower_dev.exit19.i.i.__netdev_lower_depth.exit.i_crit_edge: ; preds = %__netdev_next_lower_dev.exit19.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit.i

__netdev_lower_depth.exit.i:                      ; preds = %__netdev_next_lower_dev.exit19.i.i.__netdev_lower_depth.exit.i_crit_edge, %for.inc.i.i98.__netdev_lower_depth.exit.i_crit_edge, %__netdev_next_lower_dev.exit.i.i.__netdev_lower_depth.exit.i_crit_edge, %__netdev_walk_all_lower_dev.exit.__netdev_lower_depth.exit.i_crit_edge
  %max_depth.0.lcssa.i.i101 = phi i8 [ 0, %__netdev_next_lower_dev.exit.i.i.__netdev_lower_depth.exit.i_crit_edge ], [ 0, %__netdev_walk_all_lower_dev.exit.__netdev_lower_depth.exit.i_crit_edge ], [ %max_depth.1.i.i96, %for.inc.i.i98.__netdev_lower_depth.exit.i_crit_edge ], [ %max_depth.1.i.i96, %__netdev_next_lower_dev.exit19.i.i.__netdev_lower_depth.exit.i_crit_edge ]
  %add.i102 = add i8 %max_depth.0.lcssa.i.i101, 1
  %lower_level.i = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 58
  %74 = ptrtoint ptr %lower_level.i to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 %add.i102, ptr %lower_level.i, align 1
  %tobool.not.i103 = icmp eq ptr %priv, null
  br i1 %tobool.not.i103, label %__netdev_lower_depth.exit.i.__netdev_update_lower_level.exit_crit_edge, label %if.end.i

__netdev_lower_depth.exit.i.__netdev_update_lower_level.exit_crit_edge: ; preds = %__netdev_lower_depth.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_lower_level.exit

if.end.i:                                         ; preds = %__netdev_lower_depth.exit.i
  %75 = ptrtoint ptr %priv to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %priv, align 4
  %77 = and i8 %76, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool3.not.i = icmp eq i8 %77, 0
  br i1 %tobool3.not.i, label %if.end.i.if.end8.i104_crit_edge, label %if.then4.i

if.end.i.if.end8.i104_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8.i104

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  %nested_level.i = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 73
  %78 = ptrtoint ptr %nested_level.i to i32
  call void @__asan_store1_noabort(i32 %78)
  store i8 %max_depth.0.lcssa.i.i101, ptr %nested_level.i, align 1
  br label %if.end8.i104

if.end8.i104:                                     ; preds = %if.then4.i, %if.end.i.if.end8.i104_crit_edge
  %79 = ptrtoint ptr %priv to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %priv, align 4
  %81 = and i8 %80, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %tobool12.not.i = icmp eq i8 %81, 0
  br i1 %tobool12.not.i, label %if.end8.i104.__netdev_update_lower_level.exit_crit_edge, label %if.then13.i

if.end8.i104.__netdev_update_lower_level.exit_crit_edge: ; preds = %if.end8.i104
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_lower_level.exit

if.then13.i:                                      ; preds = %if.end8.i104
  %unlink_list.i.i = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 69
  %82 = ptrtoint ptr %unlink_list.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile ptr, ptr %unlink_list.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %83, %unlink_list.i.i
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %if.then13.i.__netdev_update_lower_level.exit_crit_edge

if.then13.i.__netdev_update_lower_level.exit_crit_edge: ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_lower_level.exit

if.then.i.i:                                      ; preds = %if.then13.i
  %84 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @net_unlink_list, i32 0, i32 1), align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %unlink_list.i.i, ptr noundef %84, ptr noundef nonnull @net_unlink_list) #35
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.__netdev_update_lower_level.exit_crit_edge

if.then.i.i.__netdev_update_lower_level.exit_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_lower_level.exit

if.end.i.i.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store ptr %unlink_list.i.i, ptr getelementptr inbounds (%struct.list_head, ptr @net_unlink_list, i32 0, i32 1), align 4
  %85 = ptrtoint ptr %unlink_list.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr @net_unlink_list, ptr %unlink_list.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 69, i32 1
  %86 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %84, ptr %prev3.i.i.i.i, align 4
  %87 = ptrtoint ptr %84 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile ptr %unlink_list.i.i, ptr %84, align 4
  br label %__netdev_update_lower_level.exit

__netdev_update_lower_level.exit:                 ; preds = %if.end.i.i.i.i, %if.then.i.i.__netdev_update_lower_level.exit_crit_edge, %if.then13.i.__netdev_update_lower_level.exit_crit_edge, %if.end8.i104.__netdev_update_lower_level.exit_crit_edge, %__netdev_lower_depth.exit.i.__netdev_update_lower_level.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack.i105) #35
  %88 = call ptr @memset(ptr %dev_stack.i105, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack.i106) #35
  %89 = call ptr @memset(ptr %iter_stack.i106, i32 255, i32 36)
  %adj_list.i107 = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 13
  br label %while.cond.i112

while.cond.i112:                                  ; preds = %while.cond.i112.backedge, %__netdev_update_lower_level.exit
  %storemerge.i108 = phi ptr [ %adj_list.i107, %__netdev_update_lower_level.exit ], [ %storemerge.i108.be, %while.cond.i112.backedge ]
  %now.0.i109 = phi ptr [ %upper_dev, %__netdev_update_lower_level.exit ], [ %now.0.i109.be, %while.cond.i112.backedge ]
  %cur.0.i110 = phi i32 [ 0, %__netdev_update_lower_level.exit ], [ %cur.0.i110.be, %while.cond.i112.backedge ]
  %cmp.not.i111 = icmp eq ptr %now.0.i109, %upper_dev
  br i1 %cmp.not.i111, label %while.cond.i112.if.end2.i117_crit_edge, label %if.then.i115

while.cond.i112.if.end2.i117_crit_edge:           ; preds = %while.cond.i112
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i117

if.then.i115:                                     ; preds = %while.cond.i112
  %lower.i.i141 = getelementptr inbounds %struct.net_device, ptr %now.0.i109, i32 0, i32 13, i32 1
  %90 = ptrtoint ptr %lower.i.i141 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %lower.i.i141, align 4
  %cmp.i.i.i142 = icmp eq ptr %91, %lower.i.i141
  br i1 %cmp.i.i.i142, label %if.then.i115.__netdev_lower_depth.exit.i165_crit_edge, label %__netdev_next_lower_dev.exit.i.i145

if.then.i115.__netdev_lower_depth.exit.i165_crit_edge: ; preds = %if.then.i115
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit.i165

__netdev_next_lower_dev.exit.i.i145:              ; preds = %if.then.i115
  %add.ptr.i.i.i143 = getelementptr i8, ptr %91, i32 -16
  %92 = ptrtoint ptr %add.ptr.i.i.i143 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %add.ptr.i.i.i143, align 4
  %tobool.not21.i.i144 = icmp eq ptr %93, null
  br i1 %tobool.not21.i.i144, label %__netdev_next_lower_dev.exit.i.i145.__netdev_lower_depth.exit.i165_crit_edge, label %__netdev_next_lower_dev.exit.i.i145.for.body.i.i152_crit_edge

__netdev_next_lower_dev.exit.i.i145.for.body.i.i152_crit_edge: ; preds = %__netdev_next_lower_dev.exit.i.i145
  br label %for.body.i.i152

__netdev_next_lower_dev.exit.i.i145.__netdev_lower_depth.exit.i165_crit_edge: ; preds = %__netdev_next_lower_dev.exit.i.i145
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit.i165

for.body.i.i152:                                  ; preds = %__netdev_next_lower_dev.exit19.i.i160.for.body.i.i152_crit_edge, %__netdev_next_lower_dev.exit.i.i145.for.body.i.i152_crit_edge
  %max_depth.025.i.i146 = phi i8 [ %max_depth.1.i.i155, %__netdev_next_lower_dev.exit19.i.i160.for.body.i.i152_crit_edge ], [ 0, %__netdev_next_lower_dev.exit.i.i145.for.body.i.i152_crit_edge ]
  %ldev.024.i.i147 = phi ptr [ %101, %__netdev_next_lower_dev.exit19.i.i160.for.body.i.i152_crit_edge ], [ %93, %__netdev_next_lower_dev.exit.i.i145.for.body.i.i152_crit_edge ]
  %iter.122.i.i148 = phi ptr [ %99, %__netdev_next_lower_dev.exit19.i.i160.for.body.i.i152_crit_edge ], [ %91, %__netdev_next_lower_dev.exit.i.i145.for.body.i.i152_crit_edge ]
  %ignore.123.in.i.i149 = getelementptr i8, ptr %iter.122.i.i148, i32 -7
  %94 = ptrtoint ptr %ignore.123.in.i.i149 to i32
  call void @__asan_load1_noabort(i32 %94)
  %ignore.123.i.i150 = load i8, ptr %ignore.123.in.i.i149, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %ignore.123.i.i150)
  %tobool1.not.i.i151 = icmp eq i8 %ignore.123.i.i150, 0
  br i1 %tobool1.not.i.i151, label %if.end.i.i154, label %for.body.i.i152.for.inc.i.i157_crit_edge

for.body.i.i152.for.inc.i.i157_crit_edge:         ; preds = %for.body.i.i152
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i.i157

if.end.i.i154:                                    ; preds = %for.body.i.i152
  call void @__sanitizer_cov_trace_pc() #37
  %lower_level.i.i153 = getelementptr inbounds %struct.net_device, ptr %ldev.024.i.i147, i32 0, i32 58
  %95 = ptrtoint ptr %lower_level.i.i153 to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %lower_level.i.i153, align 1
  %97 = call i8 @llvm.umax.i8(i8 %max_depth.025.i.i146, i8 %96) #35
  br label %for.inc.i.i157

for.inc.i.i157:                                   ; preds = %if.end.i.i154, %for.body.i.i152.for.inc.i.i157_crit_edge
  %max_depth.1.i.i155 = phi i8 [ %max_depth.025.i.i146, %for.body.i.i152.for.inc.i.i157_crit_edge ], [ %97, %if.end.i.i154 ]
  %98 = ptrtoint ptr %iter.122.i.i148 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %iter.122.i.i148, align 4
  %cmp.i14.i.i156 = icmp eq ptr %99, %lower.i.i141
  br i1 %cmp.i14.i.i156, label %for.inc.i.i157.__netdev_lower_depth.exit.i165_crit_edge, label %__netdev_next_lower_dev.exit19.i.i160

for.inc.i.i157.__netdev_lower_depth.exit.i165_crit_edge: ; preds = %for.inc.i.i157
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit.i165

__netdev_next_lower_dev.exit19.i.i160:            ; preds = %for.inc.i.i157
  %add.ptr.i15.i.i158 = getelementptr i8, ptr %99, i32 -16
  %100 = ptrtoint ptr %add.ptr.i15.i.i158 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %add.ptr.i15.i.i158, align 4
  %tobool.not.i.i159 = icmp eq ptr %101, null
  br i1 %tobool.not.i.i159, label %__netdev_next_lower_dev.exit19.i.i160.__netdev_lower_depth.exit.i165_crit_edge, label %__netdev_next_lower_dev.exit19.i.i160.for.body.i.i152_crit_edge

__netdev_next_lower_dev.exit19.i.i160.for.body.i.i152_crit_edge: ; preds = %__netdev_next_lower_dev.exit19.i.i160
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i152

__netdev_next_lower_dev.exit19.i.i160.__netdev_lower_depth.exit.i165_crit_edge: ; preds = %__netdev_next_lower_dev.exit19.i.i160
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit.i165

__netdev_lower_depth.exit.i165:                   ; preds = %__netdev_next_lower_dev.exit19.i.i160.__netdev_lower_depth.exit.i165_crit_edge, %for.inc.i.i157.__netdev_lower_depth.exit.i165_crit_edge, %__netdev_next_lower_dev.exit.i.i145.__netdev_lower_depth.exit.i165_crit_edge, %if.then.i115.__netdev_lower_depth.exit.i165_crit_edge
  %max_depth.0.lcssa.i.i161 = phi i8 [ 0, %__netdev_next_lower_dev.exit.i.i145.__netdev_lower_depth.exit.i165_crit_edge ], [ 0, %if.then.i115.__netdev_lower_depth.exit.i165_crit_edge ], [ %max_depth.1.i.i155, %for.inc.i.i157.__netdev_lower_depth.exit.i165_crit_edge ], [ %max_depth.1.i.i155, %__netdev_next_lower_dev.exit19.i.i160.__netdev_lower_depth.exit.i165_crit_edge ]
  %add.i162 = add i8 %max_depth.0.lcssa.i.i161, 1
  %lower_level.i163 = getelementptr inbounds %struct.net_device, ptr %now.0.i109, i32 0, i32 58
  %102 = ptrtoint ptr %lower_level.i163 to i32
  call void @__asan_store1_noabort(i32 %102)
  store i8 %add.i162, ptr %lower_level.i163, align 1
  br i1 %tobool.not.i103, label %__netdev_lower_depth.exit.i165.if.end2.i117_crit_edge, label %if.end.i167

__netdev_lower_depth.exit.i165.if.end2.i117_crit_edge: ; preds = %__netdev_lower_depth.exit.i165
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i117

if.end.i167:                                      ; preds = %__netdev_lower_depth.exit.i165
  %103 = ptrtoint ptr %priv to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %priv, align 4
  %105 = and i8 %104, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %105)
  %tobool3.not.i166 = icmp eq i8 %105, 0
  br i1 %tobool3.not.i166, label %if.end.i167.if.end8.i171_crit_edge, label %if.then4.i169

if.end.i167.if.end8.i171_crit_edge:               ; preds = %if.end.i167
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8.i171

if.then4.i169:                                    ; preds = %if.end.i167
  call void @__sanitizer_cov_trace_pc() #37
  %nested_level.i168 = getelementptr inbounds %struct.net_device, ptr %now.0.i109, i32 0, i32 73
  %106 = ptrtoint ptr %nested_level.i168 to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 %max_depth.0.lcssa.i.i161, ptr %nested_level.i168, align 1
  br label %if.end8.i171

if.end8.i171:                                     ; preds = %if.then4.i169, %if.end.i167.if.end8.i171_crit_edge
  %107 = ptrtoint ptr %priv to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %priv, align 4
  %109 = and i8 %108, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %109)
  %tobool12.not.i170 = icmp eq i8 %109, 0
  br i1 %tobool12.not.i170, label %if.end8.i171.if.end2.i117_crit_edge, label %if.then13.i174

if.end8.i171.if.end2.i117_crit_edge:              ; preds = %if.end8.i171
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i117

if.then13.i174:                                   ; preds = %if.end8.i171
  %unlink_list.i.i172 = getelementptr inbounds %struct.net_device, ptr %now.0.i109, i32 0, i32 69
  %110 = ptrtoint ptr %unlink_list.i.i172 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile ptr, ptr %unlink_list.i.i172, align 4
  %cmp.i.not.i.i173 = icmp eq ptr %111, %unlink_list.i.i172
  br i1 %cmp.i.not.i.i173, label %if.then.i.i176, label %if.then13.i174.if.end2.i117_crit_edge

if.then13.i174.if.end2.i117_crit_edge:            ; preds = %if.then13.i174
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i117

if.then.i.i176:                                   ; preds = %if.then13.i174
  %112 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @net_unlink_list, i32 0, i32 1), align 4
  %call.i.i.i.i175 = call zeroext i1 @__list_add_valid(ptr noundef %unlink_list.i.i172, ptr noundef %112, ptr noundef nonnull @net_unlink_list) #35
  br i1 %call.i.i.i.i175, label %if.end.i.i.i.i178, label %if.then.i.i176.if.end2.i117_crit_edge

if.then.i.i176.if.end2.i117_crit_edge:            ; preds = %if.then.i.i176
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2.i117

if.end.i.i.i.i178:                                ; preds = %if.then.i.i176
  call void @__sanitizer_cov_trace_pc() #37
  store ptr %unlink_list.i.i172, ptr getelementptr inbounds (%struct.list_head, ptr @net_unlink_list, i32 0, i32 1), align 4
  %113 = ptrtoint ptr %unlink_list.i.i172 to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr @net_unlink_list, ptr %unlink_list.i.i172, align 4
  %prev3.i.i.i.i177 = getelementptr inbounds %struct.net_device, ptr %now.0.i109, i32 0, i32 69, i32 1
  %114 = ptrtoint ptr %prev3.i.i.i.i177 to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %112, ptr %prev3.i.i.i.i177, align 4
  %115 = ptrtoint ptr %112 to i32
  call void @__asan_store4_noabort(i32 %115)
  store volatile ptr %unlink_list.i.i172, ptr %112, align 4
  br label %if.end2.i117

if.end2.i117:                                     ; preds = %if.end.i.i.i.i178, %if.then.i.i176.if.end2.i117_crit_edge, %if.then13.i174.if.end2.i117_crit_edge, %if.end8.i171.if.end2.i117_crit_edge, %__netdev_lower_depth.exit.i165.if.end2.i117_crit_edge, %while.cond.i112.if.end2.i117_crit_edge
  %adj_list.i.i116 = getelementptr inbounds %struct.net_device, ptr %now.0.i109, i32 0, i32 13
  br label %while.cond3.i120

while.cond3.i120:                                 ; preds = %if.end8.i125.while.cond3.i120_crit_edge, %if.end2.i117
  %iter.0.i118 = phi ptr [ %storemerge.i108, %if.end2.i117 ], [ %117, %if.end8.i125.while.cond3.i120_crit_edge ]
  %116 = ptrtoint ptr %iter.0.i118 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %iter.0.i118, align 4
  %cmp.i.i119 = icmp eq ptr %117, %adj_list.i.i116
  br i1 %cmp.i.i119, label %while.cond3.i120.if.then16.i131_crit_edge, label %__netdev_next_upper_dev.exit.i

while.cond3.i120.if.then16.i131_crit_edge:        ; preds = %while.cond3.i120
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16.i131

__netdev_next_upper_dev.exit.i:                   ; preds = %while.cond3.i120
  %add.ptr.i.i121 = getelementptr i8, ptr %117, i32 -16
  %118 = ptrtoint ptr %add.ptr.i.i121 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %add.ptr.i.i121, align 4
  %tobool6.not.i122 = icmp eq ptr %119, null
  br i1 %tobool6.not.i122, label %__netdev_next_upper_dev.exit.i.if.then16.i131_crit_edge, label %if.end8.i125

__netdev_next_upper_dev.exit.i.if.then16.i131_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16.i131

if.end8.i125:                                     ; preds = %__netdev_next_upper_dev.exit.i
  %ignore3.i.i123 = getelementptr i8, ptr %117, i32 -7
  %120 = ptrtoint ptr %ignore3.i.i123 to i32
  call void @__asan_load1_noabort(i32 %120)
  %121 = load i8, ptr %ignore3.i.i123, align 1, !range !1333
  %tobool9.not.i124 = icmp eq i8 %121, 0
  br i1 %tobool9.not.i124, label %while.end.i129, label %if.end8.i125.while.cond3.i120_crit_edge

if.end8.i125.while.cond3.i120_crit_edge:          ; preds = %if.end8.i125
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond3.i120

while.end.i129:                                   ; preds = %if.end8.i125
  call void @__sanitizer_cov_trace_pc() #37
  %adj_list12.i = getelementptr inbounds %struct.net_device, ptr %119, i32 0, i32 13
  %arrayidx.i126 = getelementptr [9 x ptr], ptr %dev_stack.i105, i32 0, i32 %cur.0.i110
  %122 = ptrtoint ptr %arrayidx.i126 to i32
  call void @__asan_store4_noabort(i32 %122)
  store ptr %now.0.i109, ptr %arrayidx.i126, align 4
  %inc.i127 = add i32 %cur.0.i110, 1
  %arrayidx14.i128 = getelementptr [9 x ptr], ptr %iter_stack.i106, i32 0, i32 %cur.0.i110
  %123 = ptrtoint ptr %arrayidx14.i128 to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr %117, ptr %arrayidx14.i128, align 4
  br label %while.cond.i112.backedge

if.then16.i131:                                   ; preds = %__netdev_next_upper_dev.exit.i.if.then16.i131_crit_edge, %while.cond3.i120.if.then16.i131_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0.i110)
  %tobool17.not.i130 = icmp eq i32 %cur.0.i110, 0
  br i1 %tobool17.not.i130, label %__netdev_walk_all_upper_dev.exit, label %if.end19.i135

if.end19.i135:                                    ; preds = %if.then16.i131
  call void @__sanitizer_cov_trace_pc() #37
  %dec.i132 = add i32 %cur.0.i110, -1
  %arrayidx20.i133 = getelementptr [9 x ptr], ptr %dev_stack.i105, i32 0, i32 %dec.i132
  %124 = ptrtoint ptr %arrayidx20.i133 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %arrayidx20.i133, align 4
  %arrayidx21.i134 = getelementptr [9 x ptr], ptr %iter_stack.i106, i32 0, i32 %dec.i132
  %126 = ptrtoint ptr %arrayidx21.i134 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %arrayidx21.i134, align 4
  br label %while.cond.i112.backedge

while.cond.i112.backedge:                         ; preds = %if.end19.i135, %while.end.i129
  %storemerge.i108.be = phi ptr [ %adj_list12.i, %while.end.i129 ], [ %127, %if.end19.i135 ]
  %now.0.i109.be = phi ptr [ %119, %while.end.i129 ], [ %125, %if.end19.i135 ]
  %cur.0.i110.be = phi i32 [ %inc.i127, %while.end.i129 ], [ %dec.i132, %if.end19.i135 ]
  br label %while.cond.i112

__netdev_walk_all_upper_dev.exit:                 ; preds = %if.then16.i131
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack.i106) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack.i105) #35
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %changeupper_info) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_adjacent_change_prepare(ptr noundef readonly %old_dev, ptr noundef %new_dev, ptr noundef %dev, ptr noundef %extack) #1 align 64 {
entry:
  %priv = alloca %struct.netdev_nested_priv, align 8
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %priv) #35
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 0, ptr %priv, align 8
  %tobool.not = icmp eq ptr %new_dev, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %old_dev, null
  %cmp.not = icmp eq ptr %new_dev, %old_dev
  %or.cond = or i1 %tobool1.not, %cmp.not
  br i1 %or.cond, label %if.end3.thread, label %if.then2

if.then2:                                         ; preds = %if.end
  %lower.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.then2
  %.pn.in.i.i.i = phi ptr [ %lower.i.i, %if.then2 ], [ %.pn.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %1 = ptrtoint ptr %.pn.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn.i.i.i = load ptr, ptr %.pn.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %lower.i.i
  br i1 %cmp.not.i.i.i, label %for.cond.i.i.i.if.end.i.i_crit_edge, label %for.body.i.i.i

for.cond.i.i.i.if.end.i.i_crit_edge:              ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %adj.0.i.i.i = getelementptr i8, ptr %.pn.i.i.i, i32 -16
  %2 = ptrtoint ptr %adj.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %adj.0.i.i.i, align 4
  %cmp1.i.i.i = icmp eq ptr %3, %old_dev
  br i1 %cmp1.i.i.i, label %__netdev_find_adj.exit.i.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.i.i

__netdev_find_adj.exit.i.i:                       ; preds = %for.body.i.i.i
  %adj.0.i.i.i.le = getelementptr i8, ptr %.pn.i.i.i, i32 -16
  %tobool.not.i.i = icmp eq ptr %adj.0.i.i.i.le, null
  br i1 %tobool.not.i.i, label %__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge, label %if.then.i.i

__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge:  ; preds = %__netdev_find_adj.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %__netdev_find_adj.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %ignore.i.i = getelementptr i8, ptr %.pn.i.i.i, i32 -7
  %4 = ptrtoint ptr %ignore.i.i to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %ignore.i.i, align 1
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge, %for.cond.i.i.i.if.end.i.i_crit_edge
  %adj_list3.i.i = getelementptr inbounds %struct.net_device, ptr %old_dev, i32 0, i32 13
  br label %for.cond.i20.i.i

for.cond.i20.i.i:                                 ; preds = %for.body.i23.i.i.for.cond.i20.i.i_crit_edge, %if.end.i.i
  %.pn.in.i17.i.i = phi ptr [ %adj_list3.i.i, %if.end.i.i ], [ %.pn.i18.i.i, %for.body.i23.i.i.for.cond.i20.i.i_crit_edge ]
  %5 = ptrtoint ptr %.pn.in.i17.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn.i18.i.i = load ptr, ptr %.pn.in.i17.i.i, align 4
  %cmp.not.i19.i.i = icmp eq ptr %.pn.i18.i.i, %adj_list3.i.i
  br i1 %cmp.not.i19.i.i, label %for.cond.i20.i.i.if.end3_crit_edge, label %for.body.i23.i.i

for.cond.i20.i.i.if.end3_crit_edge:               ; preds = %for.cond.i20.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

for.body.i23.i.i:                                 ; preds = %for.cond.i20.i.i
  %adj.0.i21.i.i = getelementptr i8, ptr %.pn.i18.i.i, i32 -16
  %6 = ptrtoint ptr %adj.0.i21.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adj.0.i21.i.i, align 4
  %cmp1.i22.i.i = icmp eq ptr %7, %dev
  br i1 %cmp1.i22.i.i, label %__netdev_find_adj.exit27.i.i, label %for.body.i23.i.i.for.cond.i20.i.i_crit_edge

for.body.i23.i.i.for.cond.i20.i.i_crit_edge:      ; preds = %for.body.i23.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i20.i.i

__netdev_find_adj.exit27.i.i:                     ; preds = %for.body.i23.i.i
  %adj.0.i21.i.i.le = getelementptr i8, ptr %.pn.i18.i.i, i32 -16
  %tobool5.not.i.i = icmp eq ptr %adj.0.i21.i.i.le, null
  br i1 %tobool5.not.i.i, label %__netdev_find_adj.exit27.i.i.if.end3_crit_edge, label %if.then6.i.i

__netdev_find_adj.exit27.i.i.if.end3_crit_edge:   ; preds = %__netdev_find_adj.exit27.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

if.then6.i.i:                                     ; preds = %__netdev_find_adj.exit27.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %ignore8.i.i = getelementptr i8, ptr %.pn.i18.i.i, i32 -7
  %8 = ptrtoint ptr %ignore8.i.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %ignore8.i.i, align 1
  br label %if.end3

if.end3:                                          ; preds = %if.then6.i.i, %__netdev_find_adj.exit27.i.i.if.end3_crit_edge, %for.cond.i20.i.i.if.end3_crit_edge
  %call = call fastcc i32 @__netdev_upper_dev_link(ptr noundef nonnull %new_dev, ptr noundef %dev, i1 noundef zeroext false, ptr noundef null, ptr noundef null, ptr noundef nonnull %priv, ptr noundef %extack)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.end3.cleanup_crit_edge, label %if.end3.for.cond.i.i.i29_crit_edge

if.end3.for.cond.i.i.i29_crit_edge:               ; preds = %if.end3
  br label %for.cond.i.i.i29

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end3.thread:                                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %call52 = call fastcc i32 @__netdev_upper_dev_link(ptr noundef nonnull %new_dev, ptr noundef %dev, i1 noundef zeroext false, ptr noundef null, ptr noundef null, ptr noundef nonnull %priv, ptr noundef %extack)
  br label %cleanup

for.cond.i.i.i29:                                 ; preds = %for.body.i.i.i32.for.cond.i.i.i29_crit_edge, %if.end3.for.cond.i.i.i29_crit_edge
  %.pn.in.i.i.i26 = phi ptr [ %.pn.i.i.i27, %for.body.i.i.i32.for.cond.i.i.i29_crit_edge ], [ %lower.i.i, %if.end3.for.cond.i.i.i29_crit_edge ]
  %9 = ptrtoint ptr %.pn.in.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn.i.i.i27 = load ptr, ptr %.pn.in.i.i.i26, align 4
  %cmp.not.i.i.i28 = icmp eq ptr %.pn.i.i.i27, %lower.i.i
  br i1 %cmp.not.i.i.i28, label %for.cond.i.i.i29.for.cond.i20.i.i43.preheader_crit_edge, label %for.body.i.i.i32

for.cond.i.i.i29.for.cond.i20.i.i43.preheader_crit_edge: ; preds = %for.cond.i.i.i29
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i20.i.i43.preheader

for.body.i.i.i32:                                 ; preds = %for.cond.i.i.i29
  %adj.0.i.i.i30 = getelementptr i8, ptr %.pn.i.i.i27, i32 -16
  %10 = ptrtoint ptr %adj.0.i.i.i30 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %adj.0.i.i.i30, align 4
  %cmp1.i.i.i31 = icmp eq ptr %11, %old_dev
  br i1 %cmp1.i.i.i31, label %__netdev_find_adj.exit.i.i35, label %for.body.i.i.i32.for.cond.i.i.i29_crit_edge

for.body.i.i.i32.for.cond.i.i.i29_crit_edge:      ; preds = %for.body.i.i.i32
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.i.i29

__netdev_find_adj.exit.i.i35:                     ; preds = %for.body.i.i.i32
  %adj.0.i.i.i30.le = getelementptr i8, ptr %.pn.i.i.i27, i32 -16
  %tobool.not.i.i34 = icmp eq ptr %adj.0.i.i.i30.le, null
  br i1 %tobool.not.i.i34, label %__netdev_find_adj.exit.i.i35.for.cond.i20.i.i43.preheader_crit_edge, label %if.then.i.i37

__netdev_find_adj.exit.i.i35.for.cond.i20.i.i43.preheader_crit_edge: ; preds = %__netdev_find_adj.exit.i.i35
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i20.i.i43.preheader

if.then.i.i37:                                    ; preds = %__netdev_find_adj.exit.i.i35
  call void @__sanitizer_cov_trace_pc() #37
  %ignore.i.i36 = getelementptr i8, ptr %.pn.i.i.i27, i32 -7
  %12 = ptrtoint ptr %ignore.i.i36 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %ignore.i.i36, align 1
  br label %for.cond.i20.i.i43.preheader

for.cond.i20.i.i43.preheader:                     ; preds = %if.then.i.i37, %__netdev_find_adj.exit.i.i35.for.cond.i20.i.i43.preheader_crit_edge, %for.cond.i.i.i29.for.cond.i20.i.i43.preheader_crit_edge
  br label %for.cond.i20.i.i43

for.cond.i20.i.i43:                               ; preds = %for.body.i23.i.i46.for.cond.i20.i.i43_crit_edge, %for.cond.i20.i.i43.preheader
  %.pn.in.i17.i.i40 = phi ptr [ %.pn.i18.i.i41, %for.body.i23.i.i46.for.cond.i20.i.i43_crit_edge ], [ %adj_list3.i.i, %for.cond.i20.i.i43.preheader ]
  %13 = ptrtoint ptr %.pn.in.i17.i.i40 to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn.i18.i.i41 = load ptr, ptr %.pn.in.i17.i.i40, align 4
  %cmp.not.i19.i.i42 = icmp eq ptr %.pn.i18.i.i41, %adj_list3.i.i
  br i1 %cmp.not.i19.i.i42, label %for.cond.i20.i.i43.cleanup_crit_edge, label %for.body.i23.i.i46

for.cond.i20.i.i43.cleanup_crit_edge:             ; preds = %for.cond.i20.i.i43
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body.i23.i.i46:                               ; preds = %for.cond.i20.i.i43
  %adj.0.i21.i.i44 = getelementptr i8, ptr %.pn.i18.i.i41, i32 -16
  %14 = ptrtoint ptr %adj.0.i21.i.i44 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %adj.0.i21.i.i44, align 4
  %cmp1.i22.i.i45 = icmp eq ptr %15, %dev
  br i1 %cmp1.i22.i.i45, label %__netdev_find_adj.exit27.i.i49, label %for.body.i23.i.i46.for.cond.i20.i.i43_crit_edge

for.body.i23.i.i46.for.cond.i20.i.i43_crit_edge:  ; preds = %for.body.i23.i.i46
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i20.i.i43

__netdev_find_adj.exit27.i.i49:                   ; preds = %for.body.i23.i.i46
  %adj.0.i21.i.i44.le = getelementptr i8, ptr %.pn.i18.i.i41, i32 -16
  %tobool5.not.i.i48 = icmp eq ptr %adj.0.i21.i.i44.le, null
  br i1 %tobool5.not.i.i48, label %__netdev_find_adj.exit27.i.i49.cleanup_crit_edge, label %if.then6.i.i51

__netdev_find_adj.exit27.i.i49.cleanup_crit_edge: ; preds = %__netdev_find_adj.exit27.i.i49
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then6.i.i51:                                   ; preds = %__netdev_find_adj.exit27.i.i49
  call void @__sanitizer_cov_trace_pc() #37
  %ignore8.i.i50 = getelementptr i8, ptr %.pn.i18.i.i41, i32 -7
  %16 = ptrtoint ptr %ignore8.i.i50 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 0, ptr %ignore8.i.i50, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.then6.i.i51, %__netdev_find_adj.exit27.i.i49.cleanup_crit_edge, %for.cond.i20.i.i43.cleanup_crit_edge, %if.end3.thread, %if.end3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end3.cleanup_crit_edge ], [ %call, %__netdev_find_adj.exit27.i.i49.cleanup_crit_edge ], [ %call, %if.then6.i.i51 ], [ %call52, %if.end3.thread ], [ %call, %for.cond.i20.i.i43.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %priv) #35
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_adjacent_change_commit(ptr noundef %old_dev, ptr noundef readnone %new_dev, ptr noundef %dev) #1 align 64 {
entry:
  %priv = alloca %struct.netdev_nested_priv, align 8
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %priv) #35
  %0 = load i64, ptr @__const.netdev_adjacent_change_commit.priv, align 8
  %1 = ptrtoint ptr %priv to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %0, ptr %priv, align 8
  %tobool.not = icmp eq ptr %new_dev, null
  %tobool1.not = icmp eq ptr %old_dev, null
  %or.cond = or i1 %tobool1.not, %tobool.not
  %cmp = icmp eq ptr %new_dev, %old_dev
  %or.cond9 = or i1 %cmp, %or.cond
  br i1 %or.cond9, label %entry.cleanup_crit_edge, label %if.end3

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end3:                                          ; preds = %entry
  %lower.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.end3
  %.pn.in.i.i.i = phi ptr [ %lower.i.i, %if.end3 ], [ %.pn.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %2 = ptrtoint ptr %.pn.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn.i.i.i = load ptr, ptr %.pn.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %lower.i.i
  br i1 %cmp.not.i.i.i, label %for.cond.i.i.i.if.end.i.i_crit_edge, label %for.body.i.i.i

for.cond.i.i.i.if.end.i.i_crit_edge:              ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %adj.0.i.i.i = getelementptr i8, ptr %.pn.i.i.i, i32 -16
  %3 = ptrtoint ptr %adj.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adj.0.i.i.i, align 4
  %cmp1.i.i.i = icmp eq ptr %4, %old_dev
  br i1 %cmp1.i.i.i, label %__netdev_find_adj.exit.i.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.i.i

__netdev_find_adj.exit.i.i:                       ; preds = %for.body.i.i.i
  %adj.0.i.i.i.le = getelementptr i8, ptr %.pn.i.i.i, i32 -16
  %tobool.not.i.i = icmp eq ptr %adj.0.i.i.i.le, null
  br i1 %tobool.not.i.i, label %__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge, label %if.then.i.i

__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge:  ; preds = %__netdev_find_adj.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %__netdev_find_adj.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %ignore.i.i = getelementptr i8, ptr %.pn.i.i.i, i32 -7
  %5 = ptrtoint ptr %ignore.i.i to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 0, ptr %ignore.i.i, align 1
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge, %for.cond.i.i.i.if.end.i.i_crit_edge
  %adj_list3.i.i = getelementptr inbounds %struct.net_device, ptr %old_dev, i32 0, i32 13
  br label %for.cond.i20.i.i

for.cond.i20.i.i:                                 ; preds = %for.body.i23.i.i.for.cond.i20.i.i_crit_edge, %if.end.i.i
  %.pn.in.i17.i.i = phi ptr [ %adj_list3.i.i, %if.end.i.i ], [ %.pn.i18.i.i, %for.body.i23.i.i.for.cond.i20.i.i_crit_edge ]
  %6 = ptrtoint ptr %.pn.in.i17.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn.i18.i.i = load ptr, ptr %.pn.in.i17.i.i, align 4
  %cmp.not.i19.i.i = icmp eq ptr %.pn.i18.i.i, %adj_list3.i.i
  br i1 %cmp.not.i19.i.i, label %for.cond.i20.i.i.netdev_adjacent_dev_enable.exit_crit_edge, label %for.body.i23.i.i

for.cond.i20.i.i.netdev_adjacent_dev_enable.exit_crit_edge: ; preds = %for.cond.i20.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_adjacent_dev_enable.exit

for.body.i23.i.i:                                 ; preds = %for.cond.i20.i.i
  %adj.0.i21.i.i = getelementptr i8, ptr %.pn.i18.i.i, i32 -16
  %7 = ptrtoint ptr %adj.0.i21.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adj.0.i21.i.i, align 4
  %cmp1.i22.i.i = icmp eq ptr %8, %dev
  br i1 %cmp1.i22.i.i, label %__netdev_find_adj.exit27.i.i, label %for.body.i23.i.i.for.cond.i20.i.i_crit_edge

for.body.i23.i.i.for.cond.i20.i.i_crit_edge:      ; preds = %for.body.i23.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i20.i.i

__netdev_find_adj.exit27.i.i:                     ; preds = %for.body.i23.i.i
  %adj.0.i21.i.i.le = getelementptr i8, ptr %.pn.i18.i.i, i32 -16
  %tobool5.not.i.i = icmp eq ptr %adj.0.i21.i.i.le, null
  br i1 %tobool5.not.i.i, label %__netdev_find_adj.exit27.i.i.netdev_adjacent_dev_enable.exit_crit_edge, label %if.then6.i.i

__netdev_find_adj.exit27.i.i.netdev_adjacent_dev_enable.exit_crit_edge: ; preds = %__netdev_find_adj.exit27.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_adjacent_dev_enable.exit

if.then6.i.i:                                     ; preds = %__netdev_find_adj.exit27.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %ignore8.i.i = getelementptr i8, ptr %.pn.i18.i.i, i32 -7
  %9 = ptrtoint ptr %ignore8.i.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 0, ptr %ignore8.i.i, align 1
  br label %netdev_adjacent_dev_enable.exit

netdev_adjacent_dev_enable.exit:                  ; preds = %if.then6.i.i, %__netdev_find_adj.exit27.i.i.netdev_adjacent_dev_enable.exit_crit_edge, %for.cond.i20.i.i.netdev_adjacent_dev_enable.exit_crit_edge
  call fastcc void @__netdev_upper_dev_unlink(ptr noundef nonnull %old_dev, ptr noundef %dev, ptr noundef nonnull %priv)
  br label %cleanup

cleanup:                                          ; preds = %netdev_adjacent_dev_enable.exit, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %priv) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_adjacent_change_abort(ptr noundef readonly %old_dev, ptr noundef %new_dev, ptr noundef %dev) #1 align 64 {
entry:
  %priv = alloca %struct.netdev_nested_priv, align 8
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %priv) #35
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 0, ptr %priv, align 8
  %tobool.not = icmp eq ptr %new_dev, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %old_dev, null
  %cmp.not = icmp eq ptr %new_dev, %old_dev
  %or.cond = or i1 %tobool1.not, %cmp.not
  br i1 %or.cond, label %if.end.if.end3_crit_edge, label %if.then2

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

if.then2:                                         ; preds = %if.end
  %lower.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.then2
  %.pn.in.i.i.i = phi ptr [ %lower.i.i, %if.then2 ], [ %.pn.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %1 = ptrtoint ptr %.pn.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn.i.i.i = load ptr, ptr %.pn.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %lower.i.i
  br i1 %cmp.not.i.i.i, label %for.cond.i.i.i.if.end.i.i_crit_edge, label %for.body.i.i.i

for.cond.i.i.i.if.end.i.i_crit_edge:              ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %adj.0.i.i.i = getelementptr i8, ptr %.pn.i.i.i, i32 -16
  %2 = ptrtoint ptr %adj.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %adj.0.i.i.i, align 4
  %cmp1.i.i.i = icmp eq ptr %3, %old_dev
  br i1 %cmp1.i.i.i, label %__netdev_find_adj.exit.i.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.i.i

__netdev_find_adj.exit.i.i:                       ; preds = %for.body.i.i.i
  %adj.0.i.i.i.le = getelementptr i8, ptr %.pn.i.i.i, i32 -16
  %tobool.not.i.i = icmp eq ptr %adj.0.i.i.i.le, null
  br i1 %tobool.not.i.i, label %__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge, label %if.then.i.i

__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge:  ; preds = %__netdev_find_adj.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %__netdev_find_adj.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %ignore.i.i = getelementptr i8, ptr %.pn.i.i.i, i32 -7
  %4 = ptrtoint ptr %ignore.i.i to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %ignore.i.i, align 1
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %__netdev_find_adj.exit.i.i.if.end.i.i_crit_edge, %for.cond.i.i.i.if.end.i.i_crit_edge
  %adj_list3.i.i = getelementptr inbounds %struct.net_device, ptr %old_dev, i32 0, i32 13
  br label %for.cond.i20.i.i

for.cond.i20.i.i:                                 ; preds = %for.body.i23.i.i.for.cond.i20.i.i_crit_edge, %if.end.i.i
  %.pn.in.i17.i.i = phi ptr [ %adj_list3.i.i, %if.end.i.i ], [ %.pn.i18.i.i, %for.body.i23.i.i.for.cond.i20.i.i_crit_edge ]
  %5 = ptrtoint ptr %.pn.in.i17.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn.i18.i.i = load ptr, ptr %.pn.in.i17.i.i, align 4
  %cmp.not.i19.i.i = icmp eq ptr %.pn.i18.i.i, %adj_list3.i.i
  br i1 %cmp.not.i19.i.i, label %for.cond.i20.i.i.if.end3_crit_edge, label %for.body.i23.i.i

for.cond.i20.i.i.if.end3_crit_edge:               ; preds = %for.cond.i20.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

for.body.i23.i.i:                                 ; preds = %for.cond.i20.i.i
  %adj.0.i21.i.i = getelementptr i8, ptr %.pn.i18.i.i, i32 -16
  %6 = ptrtoint ptr %adj.0.i21.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adj.0.i21.i.i, align 4
  %cmp1.i22.i.i = icmp eq ptr %7, %dev
  br i1 %cmp1.i22.i.i, label %__netdev_find_adj.exit27.i.i, label %for.body.i23.i.i.for.cond.i20.i.i_crit_edge

for.body.i23.i.i.for.cond.i20.i.i_crit_edge:      ; preds = %for.body.i23.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i20.i.i

__netdev_find_adj.exit27.i.i:                     ; preds = %for.body.i23.i.i
  %adj.0.i21.i.i.le = getelementptr i8, ptr %.pn.i18.i.i, i32 -16
  %tobool5.not.i.i = icmp eq ptr %adj.0.i21.i.i.le, null
  br i1 %tobool5.not.i.i, label %__netdev_find_adj.exit27.i.i.if.end3_crit_edge, label %if.then6.i.i

__netdev_find_adj.exit27.i.i.if.end3_crit_edge:   ; preds = %__netdev_find_adj.exit27.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

if.then6.i.i:                                     ; preds = %__netdev_find_adj.exit27.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %ignore8.i.i = getelementptr i8, ptr %.pn.i18.i.i, i32 -7
  %8 = ptrtoint ptr %ignore8.i.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 0, ptr %ignore8.i.i, align 1
  br label %if.end3

if.end3:                                          ; preds = %if.then6.i.i, %__netdev_find_adj.exit27.i.i.if.end3_crit_edge, %for.cond.i20.i.i.if.end3_crit_edge, %if.end.if.end3_crit_edge
  call fastcc void @__netdev_upper_dev_unlink(ptr noundef nonnull %new_dev, ptr noundef %dev, ptr noundef nonnull %priv)
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %priv) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_bonding_info_change(ptr noundef %dev, ptr nocapture noundef readonly %bonding_info) #1 align 64 {
entry:
  %info = alloca %struct.netdev_notifier_bonding_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %info) #35
  %0 = getelementptr inbounds i8, ptr %info, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %0, align 4
  %2 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dev, ptr %info, align 4
  %bonding_info4 = getelementptr inbounds %struct.netdev_notifier_bonding_info, ptr %info, i32 0, i32 1
  %3 = call ptr @memcpy(ptr %bonding_info4, ptr %bonding_info, i32 40)
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %4 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nd_net.i.i, align 4
  %call1.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %entry.if.end30.i_crit_edge

entry.if.end30.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

land.rhs.i:                                       ; preds = %entry
  %.b50.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i.if.end30.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end30.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end30.i_crit_edge, %entry.if.end30.i_crit_edge
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %5, i32 0, i32 25
  %call38.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i, i32 noundef 25, ptr noundef nonnull %info) #35
  %and.i = and i32 %call38.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool39.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool39.not.i, label %if.end41.i, label %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge

if.end30.i.call_netdevice_notifiers_info.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit

if.end41.i:                                       ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 25, ptr noundef nonnull %info) #35
  br label %call_netdevice_notifiers_info.exit

call_netdevice_notifiers_info.exit:               ; preds = %if.end41.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %info) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @netdev_get_xmit_slave(ptr noundef %dev, ptr noundef %skb, i1 noundef zeroext %all_slaves) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %ndo_get_xmit_slave = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 53
  %2 = ptrtoint ptr %ndo_get_xmit_slave to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_get_xmit_slave, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call = tail call ptr %3(ptr noundef %dev, ptr noundef %skb, i1 noundef zeroext %all_slaves) #35
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call, %if.end ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @netdev_sk_get_lowest_dev(ptr noundef %dev, ptr noundef %sk) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_sk_get_lower_dev.i = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 54
  %2 = ptrtoint ptr %ndo_sk_get_lower_dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_sk_get_lower_dev.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.while.end_crit_edge, label %netdev_sk_get_lower_dev.exit

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

netdev_sk_get_lower_dev.exit:                     ; preds = %entry
  %call.i = tail call ptr %3(ptr noundef %dev, ptr noundef %sk) #35
  %tobool.not13 = icmp eq ptr %call.i, null
  br i1 %tobool.not13, label %netdev_sk_get_lower_dev.exit.while.end_crit_edge, label %netdev_sk_get_lower_dev.exit.while.body_crit_edge

netdev_sk_get_lower_dev.exit.while.body_crit_edge: ; preds = %netdev_sk_get_lower_dev.exit
  br label %while.body

netdev_sk_get_lower_dev.exit.while.end_crit_edge: ; preds = %netdev_sk_get_lower_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.body:                                       ; preds = %netdev_sk_get_lower_dev.exit12.while.body_crit_edge, %netdev_sk_get_lower_dev.exit.while.body_crit_edge
  %lower.014 = phi ptr [ %call.i9, %netdev_sk_get_lower_dev.exit12.while.body_crit_edge ], [ %call.i, %netdev_sk_get_lower_dev.exit.while.body_crit_edge ]
  %netdev_ops.i6 = getelementptr inbounds %struct.net_device, ptr %lower.014, i32 0, i32 16
  %4 = ptrtoint ptr %netdev_ops.i6 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %netdev_ops.i6, align 8
  %ndo_sk_get_lower_dev.i7 = getelementptr inbounds %struct.net_device_ops, ptr %5, i32 0, i32 54
  %6 = ptrtoint ptr %ndo_sk_get_lower_dev.i7 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ndo_sk_get_lower_dev.i7, align 4
  %tobool.not.i8 = icmp eq ptr %7, null
  br i1 %tobool.not.i8, label %while.body.while.end_crit_edge, label %netdev_sk_get_lower_dev.exit12

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

netdev_sk_get_lower_dev.exit12:                   ; preds = %while.body
  %call.i9 = tail call ptr %7(ptr noundef nonnull %lower.014, ptr noundef %sk) #35
  %tobool.not = icmp eq ptr %call.i9, null
  br i1 %tobool.not, label %netdev_sk_get_lower_dev.exit12.while.end_crit_edge, label %netdev_sk_get_lower_dev.exit12.while.body_crit_edge

netdev_sk_get_lower_dev.exit12.while.body_crit_edge: ; preds = %netdev_sk_get_lower_dev.exit12
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body

netdev_sk_get_lower_dev.exit12.while.end_crit_edge: ; preds = %netdev_sk_get_lower_dev.exit12
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.end:                                        ; preds = %netdev_sk_get_lower_dev.exit12.while.end_crit_edge, %while.body.while.end_crit_edge, %netdev_sk_get_lower_dev.exit.while.end_crit_edge, %entry.while.end_crit_edge
  %dev.addr.0.lcssa = phi ptr [ %dev, %netdev_sk_get_lower_dev.exit.while.end_crit_edge ], [ %dev, %entry.while.end_crit_edge ], [ %lower.014, %netdev_sk_get_lower_dev.exit12.while.end_crit_edge ], [ %lower.014, %while.body.while.end_crit_edge ]
  ret ptr %dev.addr.0.lcssa
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @netdev_lower_dev_get_private(ptr noundef readonly %dev, ptr noundef readnone %lower_dev) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %lower_dev, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %lower1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end
  %.pn.in.i = phi ptr [ %lower1, %if.end ], [ %.pn.i, %for.body.i.for.cond.i_crit_edge ]
  %0 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %lower1
  br i1 %cmp.not.i, label %for.cond.i.cleanup_crit_edge, label %for.body.i

for.cond.i.cleanup_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body.i:                                       ; preds = %for.cond.i
  %adj.0.i = getelementptr i8, ptr %.pn.i, i32 -16
  %1 = ptrtoint ptr %adj.0.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adj.0.i, align 4
  %cmp1.i = icmp eq ptr %2, %lower_dev
  br i1 %cmp1.i, label %__netdev_find_adj.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

__netdev_find_adj.exit:                           ; preds = %for.body.i
  %adj.0.i.le = getelementptr i8, ptr %.pn.i, i32 -16
  %tobool2.not = icmp eq ptr %adj.0.i.le, null
  br i1 %tobool2.not, label %__netdev_find_adj.exit.cleanup_crit_edge, label %if.end4

__netdev_find_adj.exit.cleanup_crit_edge:         ; preds = %__netdev_find_adj.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end4:                                          ; preds = %__netdev_find_adj.exit
  call void @__sanitizer_cov_trace_pc() #37
  %private = getelementptr i8, ptr %.pn.i, i32 -4
  %3 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %__netdev_find_adj.exit.cleanup_crit_edge, %for.cond.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %4, %if.end4 ], [ null, %entry.cleanup_crit_edge ], [ null, %__netdev_find_adj.exit.cleanup_crit_edge ], [ null, %for.cond.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_lower_state_changed(ptr noundef %lower_dev, ptr noundef %lower_state_info) #1 align 64 {
entry:
  %changelowerstate_info = alloca %struct.netdev_notifier_changelowerstate_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %changelowerstate_info) #35
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %changelowerstate_info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.netdev_notifier_changelowerstate_info, ptr %changelowerstate_info, i32 0, i32 1
  %2 = ptrtoint ptr %changelowerstate_info to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %lower_dev, ptr %changelowerstate_info, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %0, align 4
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end30_crit_edge

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b43 = load i1, ptr @netdev_lower_state_changed.__already_done, align 1
  br i1 %.b43, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !1311

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_lower_state_changed.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7892, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 7892) #35
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %lower_state_info, ptr %1, align 4
  %5 = ptrtoint ptr %changelowerstate_info to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %changelowerstate_info, align 4
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %6, i32 0, i32 127
  %7 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %nd_net.i.i, align 4
  %call1.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end30.if.end30.i_crit_edge

if.end30.if.end30.i_crit_edge:                    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

land.rhs.i:                                       ; preds = %if.end30
  %.b50.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i.if.end30.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end30.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end30.i_crit_edge, %if.end30.if.end30.i_crit_edge
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %8, i32 0, i32 25
  %call38.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i, i32 noundef 27, ptr noundef nonnull %changelowerstate_info) #35
  %and.i = and i32 %call38.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool39.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool39.not.i, label %if.end41.i, label %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge

if.end30.i.call_netdevice_notifiers_info.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit

if.end41.i:                                       ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 27, ptr noundef nonnull %changelowerstate_info) #35
  br label %call_netdevice_notifiers_info.exit

call_netdevice_notifiers_info.exit:               ; preds = %if.end41.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %changelowerstate_info) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_promiscuity(ptr noundef %dev, i32 noundef %inc) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %call = tail call fastcc i32 @__dev_set_promiscuity(ptr noundef %dev, i32 noundef %inc, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %1)
  %cmp2.not = icmp eq i32 %3, %1
  br i1 %cmp2.not, label %if.end.cleanup_crit_edge, label %if.then3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @dev_set_rx_mode(ptr noundef %dev)
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__dev_set_promiscuity(ptr noundef %dev, i32 noundef %inc, i1 noundef zeroext %notify) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end30_crit_edge

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b118 = load i1, ptr @__dev_set_promiscuity.__already_done, align 1
  br i1 %.b118, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !1311

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__dev_set_promiscuity.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7913, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 7913) #35
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 8
  %or = or i32 %3, 256
  store i32 %or, ptr %flags, align 8
  %promiscuity = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 70
  %4 = ptrtoint ptr %promiscuity to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %promiscuity, align 4
  %add = add i32 %5, %inc
  store i32 %add, ptr %promiscuity, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %cmp = icmp eq i32 %add, 0
  br i1 %cmp, label %if.then40, label %if.end30.if.end46_crit_edge

if.end30.if.end46_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end46

if.then40:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %inc)
  %cmp41 = icmp slt i32 %inc, 0
  br i1 %cmp41, label %if.then42, label %if.else

if.then42:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #37
  %and = and i32 %3, -257
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %and, ptr %flags, align 8
  br label %if.end46

if.else:                                          ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #37
  %7 = ptrtoint ptr %promiscuity to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %5, ptr %promiscuity, align 4
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %dev, ptr noundef nonnull @.str.172) #43
  br label %cleanup

if.end46:                                         ; preds = %if.then42, %if.end30.if.end46_crit_edge
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %1)
  %cmp48.not = icmp eq i32 %9, %1
  br i1 %cmp48.not, label %if.end46.if.end89_crit_edge, label %do.end52

if.end46.if.end89_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end89

do.end52:                                         ; preds = %if.end46
  %and55 = and i32 %9, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and55)
  %tobool56.not = icmp eq i32 %and55, 0
  %cond = select i1 %tobool56.not, ptr @.str.176, ptr @.str.175
  %call57 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.173, ptr noundef %dev, ptr noundef nonnull %cond) #41
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @audit_enabled to i32))
  %10 = load i32, ptr @audit_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool58.not = icmp eq i32 %10, 0
  br i1 %tobool58.not, label %do.end52.if.end88_crit_edge, label %do.body60

do.end52.if.end88_crit_edge:                      ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end88

do.body60:                                        ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #37
  %11 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 99
  %15 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cred, align 16
  %uid66 = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 4
  %17 = ptrtoint ptr %uid66 to i32
  call void @__asan_load4_noabort(i32 %17)
  %uid.sroa.0.0.copyload = load i32, ptr %uid66, align 4
  %gid67 = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 5
  %18 = ptrtoint ptr %gid67 to i32
  call void @__asan_load4_noabort(i32 %18)
  %gid.sroa.0.0.copyload = load i32, ptr %gid67, align 4
  %19 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags, align 8
  %and74 = and i32 %20, 256
  %and75 = and i32 %1, 256
  %loginuid.i = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 121
  %21 = ptrtoint ptr %loginuid.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %retval.sroa.0.0.copyload.i = load i32, ptr %loginuid.i, align 16
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %retval.sroa.0.0.copyload.i, 0
  %call80 = tail call i32 @from_kuid(ptr noundef nonnull @init_user_ns, [1 x i32] %.fca.0.insert) #35
  %.fca.0.insert99 = insertvalue [1 x i32] poison, i32 %uid.sroa.0.0.copyload, 0
  %call82 = tail call i32 @from_kuid(ptr noundef nonnull @init_user_ns, [1 x i32] %.fca.0.insert99) #35
  %.fca.0.insert98 = insertvalue [1 x i32] poison, i32 %gid.sroa.0.0.copyload, 0
  %call84 = tail call i32 @from_kgid(ptr noundef nonnull @init_user_ns, [1 x i32] %.fca.0.insert98) #35
  %22 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task, align 8
  %sessionid.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 122
  %24 = ptrtoint ptr %sessionid.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sessionid.i, align 4
  tail call void (ptr, i32, i32, ptr, ...) @audit_log(ptr noundef null, i32 noundef 2592, i32 noundef 1700, ptr noundef nonnull @.str.177, ptr noundef %dev, i32 noundef %and74, i32 noundef %and75, i32 noundef %call80, i32 noundef %call82, i32 noundef %call84, i32 noundef %25) #35
  br label %if.end88

if.end88:                                         ; preds = %do.body60, %do.end52.if.end88_crit_edge
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %26 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_change_rx_flags.i = getelementptr inbounds %struct.net_device_ops, ptr %27, i32 0, i32 7
  %28 = ptrtoint ptr %ndo_change_rx_flags.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ndo_change_rx_flags.i, align 4
  %tobool.not.i = icmp eq ptr %29, null
  br i1 %tobool.not.i, label %if.end88.if.end89_crit_edge, label %if.then.i

if.end88.if.end89_crit_edge:                      ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end89

if.then.i:                                        ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #37
  tail call void %29(ptr noundef %dev, i32 noundef 256) #35
  br label %if.end89

if.end89:                                         ; preds = %if.then.i, %if.end88.if.end89_crit_edge, %if.end46.if.end89_crit_edge
  br i1 %notify, label %if.then91, label %if.end89.cleanup_crit_edge

if.end89.cleanup_crit_edge:                       ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then91:                                        ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__dev_notify_flags(ptr noundef %dev, i32 noundef %1, i32 noundef 256)
  br label %cleanup

cleanup:                                          ; preds = %if.then91, %if.end89.cleanup_crit_edge, %if.else
  %retval.0 = phi i32 [ -75, %if.else ], [ 0, %if.then91 ], [ 0, %if.end89.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_set_rx_mode(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %nested_level.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 73
  %0 = ptrtoint ptr %nested_level.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %nested_level.i, align 1
  tail call fastcc void @local_bh_disable() #35
  %addr_list_lock.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 63
  %conv.i = zext i8 %1 to i32
  tail call void @_raw_spin_lock_nested(ptr noundef %addr_list_lock.i, i32 noundef %conv.i) #35
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %2 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %netdev_ops.i, align 8
  %flags.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i, align 8
  %and.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.__dev_set_rx_mode.exit_crit_edge, label %if.end.i

entry.__dev_set_rx_mode.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_set_rx_mode.exit

if.end.i:                                         ; preds = %entry
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %6 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %state.i.i, align 4
  %8 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not.i = icmp eq i32 %8, 0
  br i1 %tobool.i.not.i, label %if.end.i.__dev_set_rx_mode.exit_crit_edge, label %if.end2.i

if.end.i.__dev_set_rx_mode.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_set_rx_mode.exit

if.end2.i:                                        ; preds = %if.end.i
  %priv_flags.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 15
  %9 = ptrtoint ptr %priv_flags.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %priv_flags.i, align 16
  %and3.i = and i64 %10, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and3.i)
  %tobool4.not.i = icmp eq i64 %and3.i, 0
  br i1 %tobool4.not.i, label %if.then5.i, label %if.end2.i.if.end21.i_crit_edge

if.end2.i.if.end21.i_crit_edge:                   ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21.i

if.then5.i:                                       ; preds = %if.end2.i
  %count.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 65, i32 1
  %11 = ptrtoint ptr %count.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp.i = icmp eq i32 %12, 0
  %uc_promisc14.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 72
  %13 = ptrtoint ptr %uc_promisc14.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %uc_promisc14.i, align 4, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool15.not.i = icmp eq i8 %14, 0
  br i1 %cmp.i, label %land.lhs.true13.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.then5.i
  br i1 %tobool15.not.i, label %land.lhs.true.i.if.end21.sink.split.i_crit_edge, label %land.lhs.true.i.if.end21.i_crit_edge

land.lhs.true.i.if.end21.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21.i

land.lhs.true.i.if.end21.sink.split.i_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21.sink.split.i

land.lhs.true13.i:                                ; preds = %if.then5.i
  br i1 %tobool15.not.i, label %land.lhs.true13.i.if.end21.i_crit_edge, label %land.lhs.true13.i.if.end21.sink.split.i_crit_edge

land.lhs.true13.i.if.end21.sink.split.i_crit_edge: ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21.sink.split.i

land.lhs.true13.i.if.end21.i_crit_edge:           ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21.i

if.end21.sink.split.i:                            ; preds = %land.lhs.true13.i.if.end21.sink.split.i_crit_edge, %land.lhs.true.i.if.end21.sink.split.i_crit_edge
  %.sink39.i = phi i32 [ 1, %land.lhs.true.i.if.end21.sink.split.i_crit_edge ], [ -1, %land.lhs.true13.i.if.end21.sink.split.i_crit_edge ]
  %.sink.i = phi i8 [ 1, %land.lhs.true.i.if.end21.sink.split.i_crit_edge ], [ 0, %land.lhs.true13.i.if.end21.sink.split.i_crit_edge ]
  %call8.i = tail call fastcc i32 @__dev_set_promiscuity(ptr noundef %dev, i32 noundef %.sink39.i, i1 noundef zeroext false) #35
  %15 = ptrtoint ptr %uc_promisc14.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %.sink.i, ptr %uc_promisc14.i, align 4
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.end21.sink.split.i, %land.lhs.true13.i.if.end21.i_crit_edge, %land.lhs.true.i.if.end21.i_crit_edge, %if.end2.i.if.end21.i_crit_edge
  %ndo_set_rx_mode.i = getelementptr inbounds %struct.net_device_ops, ptr %3, i32 0, i32 8
  %16 = ptrtoint ptr %ndo_set_rx_mode.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ndo_set_rx_mode.i, align 4
  %tobool22.not.i = icmp eq ptr %17, null
  br i1 %tobool22.not.i, label %if.end21.i.__dev_set_rx_mode.exit_crit_edge, label %if.then23.i

if.end21.i.__dev_set_rx_mode.exit_crit_edge:      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_set_rx_mode.exit

if.then23.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void %17(ptr noundef %dev) #35
  br label %__dev_set_rx_mode.exit

__dev_set_rx_mode.exit:                           ; preds = %if.then23.i, %if.end21.i.__dev_set_rx_mode.exit_crit_edge, %if.end.i.__dev_set_rx_mode.exit_crit_edge, %entry.__dev_set_rx_mode.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %addr_list_lock.i) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_allmulti(ptr noundef %dev, i32 noundef %inc) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__dev_set_allmulti(ptr noundef %dev, i32 noundef %inc, i1 noundef zeroext true)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__dev_set_allmulti(ptr noundef %dev, i32 noundef %inc, i1 noundef zeroext %notify) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %gflags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 18
  %2 = ptrtoint ptr %gflags to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %gflags, align 128
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end31_crit_edge

entry.if.end31_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end31

land.rhs:                                         ; preds = %entry
  %.b79 = load i1, ptr @__dev_set_allmulti.__already_done, align 1
  br i1 %.b79, label %land.rhs.if.end31_crit_edge, label %if.then, !prof !1311

land.rhs.if.end31_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end31

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__dev_set_allmulti.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7983, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 7983) #35
  br label %if.end31

if.end31:                                         ; preds = %if.then, %land.rhs.if.end31_crit_edge, %entry.if.end31_crit_edge
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 8
  %or = or i32 %5, 512
  store i32 %or, ptr %flags, align 8
  %allmulti = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 71
  %6 = ptrtoint ptr %allmulti to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %allmulti, align 8
  %add = add i32 %7, %inc
  store i32 %add, ptr %allmulti, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %cmp = icmp eq i32 %add, 0
  br i1 %cmp, label %if.then42, label %if.end31.if.end49_crit_edge

if.end31.if.end49_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end49

if.then42:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %inc)
  %cmp43 = icmp slt i32 %inc, 0
  br i1 %cmp43, label %if.then45, label %if.else

if.then45:                                        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #37
  %and = and i32 %5, -513
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %and, ptr %flags, align 8
  br label %if.end49

if.else:                                          ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #37
  %9 = ptrtoint ptr %allmulti to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %7, ptr %allmulti, align 8
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %dev, ptr noundef nonnull @.str.178) #43
  br label %cleanup

if.end49:                                         ; preds = %if.then45, %if.end31.if.end49_crit_edge
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %1)
  %tobool51.not = icmp eq i32 %11, %1
  br i1 %tobool51.not, label %if.end49.cleanup_crit_edge, label %if.then52

if.end49.cleanup_crit_edge:                       ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then52:                                        ; preds = %if.end49
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %12 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_change_rx_flags.i = getelementptr inbounds %struct.net_device_ops, ptr %13, i32 0, i32 7
  %14 = ptrtoint ptr %ndo_change_rx_flags.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ndo_change_rx_flags.i, align 4
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %if.then52.dev_change_rx_flags.exit_crit_edge, label %if.then.i

if.then52.dev_change_rx_flags.exit_crit_edge:     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_change_rx_flags.exit

if.then.i:                                        ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  tail call void %15(ptr noundef %dev, i32 noundef 512) #35
  br label %dev_change_rx_flags.exit

dev_change_rx_flags.exit:                         ; preds = %if.then.i, %if.then52.dev_change_rx_flags.exit_crit_edge
  tail call void @dev_set_rx_mode(ptr noundef %dev)
  br i1 %notify, label %if.then54, label %dev_change_rx_flags.exit.cleanup_crit_edge

dev_change_rx_flags.exit.cleanup_crit_edge:       ; preds = %dev_change_rx_flags.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then54:                                        ; preds = %dev_change_rx_flags.exit
  call void @__sanitizer_cov_trace_pc() #37
  %16 = ptrtoint ptr %gflags to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %gflags, align 128
  %xor5778 = xor i16 %17, %3
  %xor57 = zext i16 %xor5778 to i32
  tail call void @__dev_notify_flags(ptr noundef %dev, i32 noundef %1, i32 noundef %xor57)
  br label %cleanup

cleanup:                                          ; preds = %if.then54, %dev_change_rx_flags.exit.cleanup_crit_edge, %if.end49.cleanup_crit_edge, %if.else
  %retval.0 = phi i32 [ -75, %if.else ], [ 0, %dev_change_rx_flags.exit.cleanup_crit_edge ], [ 0, %if.then54 ], [ 0, %if.end49.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__dev_set_rx_mode(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 8
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not = icmp eq i32 %6, 0
  br i1 %tobool.i.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 15
  %7 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %priv_flags, align 16
  %and3 = and i64 %8, 4096
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and3)
  %tobool4.not = icmp eq i64 %and3, 0
  br i1 %tobool4.not, label %if.then5, label %if.end2.if.end21_crit_edge

if.end2.if.end21_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21

if.then5:                                         ; preds = %if.end2
  %count = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 65, i32 1
  %9 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp = icmp eq i32 %10, 0
  %uc_promisc14 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 72
  %11 = ptrtoint ptr %uc_promisc14 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %uc_promisc14, align 4, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool15.not = icmp eq i8 %12, 0
  br i1 %cmp, label %land.lhs.true13, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then5
  br i1 %tobool15.not, label %land.lhs.true.if.end21.sink.split_crit_edge, label %land.lhs.true.if.end21_crit_edge

land.lhs.true.if.end21_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21

land.lhs.true.if.end21.sink.split_crit_edge:      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21.sink.split

land.lhs.true13:                                  ; preds = %if.then5
  br i1 %tobool15.not, label %land.lhs.true13.if.end21_crit_edge, label %land.lhs.true13.if.end21.sink.split_crit_edge

land.lhs.true13.if.end21.sink.split_crit_edge:    ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21.sink.split

land.lhs.true13.if.end21_crit_edge:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end21

if.end21.sink.split:                              ; preds = %land.lhs.true13.if.end21.sink.split_crit_edge, %land.lhs.true.if.end21.sink.split_crit_edge
  %.sink39 = phi i32 [ 1, %land.lhs.true.if.end21.sink.split_crit_edge ], [ -1, %land.lhs.true13.if.end21.sink.split_crit_edge ]
  %.sink = phi i8 [ 1, %land.lhs.true.if.end21.sink.split_crit_edge ], [ 0, %land.lhs.true13.if.end21.sink.split_crit_edge ]
  %call8 = tail call fastcc i32 @__dev_set_promiscuity(ptr noundef %dev, i32 noundef %.sink39, i1 noundef zeroext false)
  %13 = ptrtoint ptr %uc_promisc14 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %.sink, ptr %uc_promisc14, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.end21.sink.split, %land.lhs.true13.if.end21_crit_edge, %land.lhs.true.if.end21_crit_edge, %if.end2.if.end21_crit_edge
  %ndo_set_rx_mode = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %ndo_set_rx_mode to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ndo_set_rx_mode, align 4
  %tobool22.not = icmp eq ptr %15, null
  br i1 %tobool22.not, label %if.end21.cleanup_crit_edge, label %if.then23

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then23:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #37
  tail call void %15(ptr noundef %dev) #35
  br label %cleanup

cleanup:                                          ; preds = %if.then23, %if.end21.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @dev_get_flags(ptr noundef %dev) #21 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags1, align 8
  %and = and i32 %1, -197441
  %gflags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 18
  %2 = ptrtoint ptr %gflags to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %gflags, align 128
  %4 = and i16 %3, 768
  %and2 = zext i16 %4 to i32
  %or = or i32 %and, %and2
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %5 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.if.end14_crit_edge, label %if.then

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end14

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %operstate.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 50
  %7 = ptrtoint ptr %operstate.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %operstate.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %8)
  %cmp.i = icmp eq i8 %8, 6
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %cmp4.i = icmp eq i8 %8, 0
  %spec.select.i = or i1 %cmp.i, %cmp4.i
  %or5 = or i32 %or, 64
  %spec.select = select i1 %spec.select.i, i32 %or5, i32 %or
  %9 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %state.i, align 4
  %11 = shl i32 %10, 14
  %12 = and i32 %11, 65536
  %13 = or i32 %12, %spec.select
  %14 = load volatile i32, ptr %state.i, align 4
  %15 = shl i32 %14, 13
  %16 = and i32 %15, 131072
  %17 = or i32 %13, %16
  %18 = xor i32 %17, 65536
  br label %if.end14

if.end14:                                         ; preds = %if.then, %entry.if.end14_crit_edge
  %flags.2 = phi i32 [ %or, %entry.if.end14_crit_edge ], [ %18, %if.then ]
  ret i32 %flags.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__dev_change_flags(ptr noundef %dev, i32 noundef %flags, ptr noundef %extack) local_unnamed_addr #1 align 64 {
entry:
  %single.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags1, align 8
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end30_crit_edge

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b118 = load i1, ptr @__dev_change_flags.__already_done, align 1
  br i1 %.b118, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !1311

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__dev_change_flags.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8107, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 8107) #35
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  %and = and i32 %flags, 61604
  %2 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags1, align 8
  %and39 = and i32 %3, 462683
  %or = or i32 %and39, %and
  store i32 %or, ptr %flags1, align 8
  %xor = xor i32 %1, %flags
  %and41 = and i32 %xor, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  br i1 %tobool42.not, label %if.end30.if.end44_crit_edge, label %if.then43

if.end30.if.end44_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end44

if.then43:                                        ; preds = %if.end30
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %4 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_change_rx_flags.i = getelementptr inbounds %struct.net_device_ops, ptr %5, i32 0, i32 7
  %6 = ptrtoint ptr %ndo_change_rx_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ndo_change_rx_flags.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.then43.if.end44_crit_edge, label %if.then.i

if.then43.if.end44_crit_edge:                     ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end44

if.then.i:                                        ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #37
  tail call void %7(ptr noundef %dev, i32 noundef 4096) #35
  br label %if.end44

if.end44:                                         ; preds = %if.then.i, %if.then43.if.end44_crit_edge, %if.end30.if.end44_crit_edge
  tail call void @dev_set_rx_mode(ptr noundef %dev)
  %and46 = and i32 %xor, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47.not = icmp eq i32 %and46, 0
  br i1 %tobool47.not, label %if.end44.if.end54_crit_edge, label %if.then48

if.end44.if.end54_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end54

if.then48:                                        ; preds = %if.end44
  %and49 = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and49)
  %tobool50.not = icmp eq i32 %and49, 0
  br i1 %tobool50.not, label %if.else, label %if.then51

if.then51:                                        ; preds = %if.then48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %single.i) #35
  %8 = getelementptr inbounds %struct.list_head, ptr %single.i, i32 0, i32 1
  %9 = ptrtoint ptr %single.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %single.i, ptr %single.i, align 4
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %single.i, ptr %8, align 4
  %close_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 10
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %close_list.i, ptr noundef nonnull %single.i, ptr noundef nonnull %single.i) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then51.list_add.exit.i_crit_edge

if.then51.list_add.exit.i_crit_edge:              ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add.exit.i

if.end.i.i.i:                                     ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #37
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %close_list.i, ptr %8, align 4
  %12 = ptrtoint ptr %close_list.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %single.i, ptr %close_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 10, i32 1
  %13 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %single.i, ptr %prev3.i.i.i, align 4
  %14 = ptrtoint ptr %single.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %close_list.i, ptr %single.i, align 4
  br label %list_add.exit.i

list_add.exit.i:                                  ; preds = %if.end.i.i.i, %if.then51.list_add.exit.i_crit_edge
  call fastcc void @__dev_close_many(ptr noundef nonnull %single.i) #35
  %call.i.i1.i = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %single.i) #35
  br i1 %call.i.i1.i, label %if.end.i.i2.i, label %list_add.exit.i.__dev_close.exit_crit_edge

list_add.exit.i.__dev_close.exit_crit_edge:       ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__dev_close.exit

if.end.i.i2.i:                                    ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %15 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %8, align 4
  %17 = ptrtoint ptr %single.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %single.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %__dev_close.exit

__dev_close.exit:                                 ; preds = %if.end.i.i2.i, %list_add.exit.i.__dev_close.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %single.i) #35
  br label %if.end54

if.else:                                          ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #37
  %call52 = tail call fastcc i32 @__dev_open(ptr noundef %dev, ptr noundef %extack)
  br label %if.end54

if.end54:                                         ; preds = %if.else, %__dev_close.exit, %if.end44.if.end54_crit_edge
  %ret.0 = phi i32 [ 0, %__dev_close.exit ], [ %call52, %if.else ], [ 0, %if.end44.if.end54_crit_edge ]
  %gflags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 18
  %21 = ptrtoint ptr %gflags to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %gflags, align 128
  %conv = zext i16 %22 to i32
  %xor55 = xor i32 %conv, %flags
  %and56 = and i32 %xor55, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and56)
  %tobool57.not = icmp eq i32 %and56, 0
  br i1 %tobool57.not, label %if.end54.if.end76_crit_edge, label %if.then58

if.end54.if.end76_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end76

if.then58:                                        ; preds = %if.end54
  %and59 = and i32 %flags, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  %cond = select i1 %tobool60.not, i32 -1, i32 1
  %23 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags1, align 8
  %xor65 = xor i16 %22, 256
  %25 = ptrtoint ptr %gflags to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 %xor65, ptr %gflags, align 128
  %call67 = call fastcc i32 @__dev_set_promiscuity(ptr noundef %dev, i32 noundef %cond, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call67)
  %cmp = icmp sgt i32 %call67, -1
  br i1 %cmp, label %if.then69, label %if.then58.if.end76_crit_edge

if.then58.if.end76_crit_edge:                     ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end76

if.then69:                                        ; preds = %if.then58
  %26 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags1, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %24)
  %cmp71.not = icmp eq i32 %27, %24
  br i1 %cmp71.not, label %if.then69.if.end76_crit_edge, label %if.then73

if.then69.if.end76_crit_edge:                     ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end76

if.then73:                                        ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #37
  call void @dev_set_rx_mode(ptr noundef %dev)
  br label %if.end76

if.end76:                                         ; preds = %if.then73, %if.then69.if.end76_crit_edge, %if.then58.if.end76_crit_edge, %if.end54.if.end76_crit_edge
  %28 = ptrtoint ptr %gflags to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %gflags, align 128
  %conv78 = zext i16 %29 to i32
  %xor79 = xor i32 %conv78, %flags
  %and80 = and i32 %xor79, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and80)
  %tobool81.not = icmp eq i32 %and80, 0
  br i1 %tobool81.not, label %if.end76.if.end92_crit_edge, label %if.then82

if.end76.if.end92_crit_edge:                      ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end92

if.then82:                                        ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #37
  %and84 = and i32 %flags, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  %cond86 = select i1 %tobool85.not, i32 -1, i32 1
  %xor89 = xor i16 %29, 512
  %30 = ptrtoint ptr %gflags to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %xor89, ptr %gflags, align 128
  %call91 = call fastcc i32 @__dev_set_allmulti(ptr noundef %dev, i32 noundef %cond86, i1 noundef zeroext false)
  br label %if.end92

if.end92:                                         ; preds = %if.then82, %if.end76.if.end92_crit_edge
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__dev_notify_flags(ptr noundef %dev, i32 noundef %old_flags, i32 noundef %gchanges) local_unnamed_addr #1 align 64 {
entry:
  %info.i.i29 = alloca %struct.netdev_notifier_info, align 4
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  %change_info = alloca %struct.netdev_notifier_change_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %xor = xor i32 %1, %old_flags
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %gchanges)
  %tobool.not = icmp eq i32 %gchanges, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %dev, i32 noundef %gchanges, i32 noundef 2592) #35
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %and = and i32 %xor, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.end.if.end9_crit_edge, label %if.then2

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end9

if.then2:                                         ; preds = %if.end
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 8
  %and4 = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %4 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %5 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %dev, ptr %info.i.i, align 4
  %6 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %4, align 4
  %nd_net.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %7 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %if.then6.if.end30.i.i.i_crit_edge

if.then6.if.end30.i.i.i_crit_edge:                ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.then6
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %if.then6.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %8, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 1, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 1, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  br label %if.end9

if.else:                                          ; preds = %if.then2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i29) #35
  %9 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i29, i32 0, i32 1
  %10 = ptrtoint ptr %info.i.i29 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %dev, ptr %info.i.i29, align 4
  %11 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %9, align 4
  %nd_net.i.i.i.i30 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %12 = ptrtoint ptr %nd_net.i.i.i.i30 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nd_net.i.i.i.i30, align 4
  %call1.i.i.i31 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i31)
  %tobool.not.i.i.i32 = icmp eq i32 %call1.i.i.i31, 0
  br i1 %tobool.not.i.i.i32, label %land.rhs.i.i.i34, label %if.else.if.end30.i.i.i40_crit_edge

if.else.if.end30.i.i.i40_crit_edge:               ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i40

land.rhs.i.i.i34:                                 ; preds = %if.else
  %.b50.i.i.i33 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i33, label %land.rhs.i.i.i34.if.end30.i.i.i40_crit_edge, label %if.then.i.i.i35, !prof !1311

land.rhs.i.i.i34.if.end30.i.i.i40_crit_edge:      ; preds = %land.rhs.i.i.i34
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i40

if.then.i.i.i35:                                  ; preds = %land.rhs.i.i.i34
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i40

if.end30.i.i.i40:                                 ; preds = %if.then.i.i.i35, %land.rhs.i.i.i34.if.end30.i.i.i40_crit_edge, %if.else.if.end30.i.i.i40_crit_edge
  %netdev_chain.i.i.i36 = getelementptr inbounds %struct.net, ptr %13, i32 0, i32 25
  %call38.i.i.i37 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i36, i32 noundef 2, ptr noundef nonnull %info.i.i29) #35
  %and.i.i.i38 = and i32 %call38.i.i.i37, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i38)
  %tobool39.not.i.i.i39 = icmp eq i32 %and.i.i.i38, 0
  br i1 %tobool39.not.i.i.i39, label %if.end41.i.i.i42, label %if.end30.i.i.i40.call_netdevice_notifiers.exit44_crit_edge

if.end30.i.i.i40.call_netdevice_notifiers.exit44_crit_edge: ; preds = %if.end30.i.i.i40
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit44

if.end41.i.i.i42:                                 ; preds = %if.end30.i.i.i40
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i41 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 2, ptr noundef nonnull %info.i.i29) #35
  br label %call_netdevice_notifiers.exit44

call_netdevice_notifiers.exit44:                  ; preds = %if.end41.i.i.i42, %if.end30.i.i.i40.call_netdevice_notifiers.exit44_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i29) #35
  br label %if.end9

if.end9:                                          ; preds = %call_netdevice_notifiers.exit44, %call_netdevice_notifiers.exit, %if.end.if.end9_crit_edge
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags, align 8
  %and11 = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  %and13 = and i32 %xor, -462684
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14.not = icmp eq i32 %and13, 0
  %or.cond = select i1 %tobool12.not, i1 true, i1 %tobool14.not
  br i1 %or.cond, label %if.end9.if.end19_crit_edge, label %if.then15

if.end9.if.end19_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end19

if.then15:                                        ; preds = %if.end9
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %change_info) #35
  %16 = getelementptr inbounds %struct.netdev_notifier_info, ptr %change_info, i32 0, i32 1
  %17 = getelementptr inbounds %struct.netdev_notifier_change_info, ptr %change_info, i32 0, i32 1
  %18 = ptrtoint ptr %change_info to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %dev, ptr %change_info, align 4
  %19 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %16, align 4
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %xor, ptr %17, align 4
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %21 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %nd_net.i.i, align 4
  %call1.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.then15.if.end30.i_crit_edge

if.then15.if.end30.i_crit_edge:                   ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

land.rhs.i:                                       ; preds = %if.then15
  %.b50.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i.if.end30.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end30.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end30.i_crit_edge, %if.then15.if.end30.i_crit_edge
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %22, i32 0, i32 25
  %call38.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i, i32 noundef 4, ptr noundef nonnull %change_info) #35
  %and.i = and i32 %call38.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool39.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool39.not.i, label %if.end41.i, label %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge

if.end30.i.call_netdevice_notifiers_info.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit

if.end41.i:                                       ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 4, ptr noundef nonnull %change_info) #35
  br label %call_netdevice_notifiers_info.exit

call_netdevice_notifiers_info.exit:               ; preds = %if.end41.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %change_info) #35
  br label %if.end19

if.end19:                                         ; preds = %call_netdevice_notifiers_info.exit, %if.end9.if.end19_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_change_flags(ptr noundef %dev, i32 noundef %flags, ptr noundef %extack) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %flags1 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags1, align 8
  %gflags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 18
  %2 = ptrtoint ptr %gflags to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %gflags, align 128
  %call = tail call i32 @__dev_change_flags(ptr noundef %dev, i32 noundef %flags, ptr noundef %extack)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %4 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags1, align 8
  %xor = xor i32 %5, %1
  %6 = ptrtoint ptr %gflags to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %gflags, align 128
  %xor618 = xor i16 %7, %3
  %xor6 = zext i16 %xor618 to i32
  %or = or i32 %xor, %xor6
  tail call void @__dev_notify_flags(ptr noundef %dev, i32 noundef %1, i32 noundef %or)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__dev_set_mtu(ptr noundef %dev, i32 noundef %new_mtu) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %ndo_change_mtu = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %ndo_change_mtu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_change_mtu, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %do.body3, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call = tail call i32 %3(ptr noundef %dev, i32 noundef %new_mtu) #35
  br label %cleanup

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %4 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile i32 %new_mtu, ptr %mtu, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.body3, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %do.body3 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_validate_mtu(ptr nocapture noundef readonly %dev, i32 noundef %new_mtu, ptr noundef writeonly %extack) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %new_mtu)
  %cmp = icmp slt i32 %new_mtu, 0
  br i1 %cmp, label %entry.do.body_crit_edge, label %lor.lhs.false

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body

lor.lhs.false:                                    ; preds = %entry
  %min_mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 30
  %0 = ptrtoint ptr %min_mtu to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %min_mtu, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %new_mtu)
  %cmp1 = icmp ugt i32 %1, %new_mtu
  br i1 %cmp1, label %lor.lhs.false.do.body_crit_edge, label %if.end3

lor.lhs.false.do.body_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body

do.body:                                          ; preds = %lor.lhs.false.do.body_crit_edge, %entry.do.body_crit_edge
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_validate_mtu.__msg) #35
  %tobool.not = icmp eq ptr %extack, null
  br i1 %tobool.not, label %do.body.return_crit_edge, label %do.body.return.sink.split_crit_edge

do.body.return.sink.split_crit_edge:              ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %return.sink.split

do.body.return_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end3:                                          ; preds = %lor.lhs.false
  %max_mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 31
  %2 = ptrtoint ptr %max_mtu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %max_mtu, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp4.not = icmp ne i32 %3, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %new_mtu)
  %cmp6 = icmp ult i32 %3, %new_mtu
  %or.cond = and i1 %cmp4.not, %cmp6
  br i1 %or.cond, label %do.body8, label %if.end3.return_crit_edge

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

do.body8:                                         ; preds = %if.end3
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_validate_mtu.__msg.62) #35
  %tobool10.not = icmp eq ptr %extack, null
  br i1 %tobool10.not, label %do.body8.return_crit_edge, label %do.body8.return.sink.split_crit_edge

do.body8.return.sink.split_crit_edge:             ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #37
  br label %return.sink.split

do.body8.return_crit_edge:                        ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

return.sink.split:                                ; preds = %do.body8.return.sink.split_crit_edge, %do.body.return.sink.split_crit_edge
  %dev_validate_mtu.__msg.62.sink = phi ptr [ @dev_validate_mtu.__msg, %do.body.return.sink.split_crit_edge ], [ @dev_validate_mtu.__msg.62, %do.body8.return.sink.split_crit_edge ]
  %4 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %dev_validate_mtu.__msg.62.sink, ptr %extack, align 4
  br label %return

return:                                           ; preds = %return.sink.split, %do.body8.return_crit_edge, %if.end3.return_crit_edge, %do.body.return_crit_edge
  %retval.0 = phi i32 [ -22, %do.body.return_crit_edge ], [ -22, %do.body8.return_crit_edge ], [ 0, %if.end3.return_crit_edge ], [ -22, %return.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @do_trace_netlink_extack(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_mtu_ext(ptr noundef %dev, i32 noundef %new_mtu, ptr noundef writeonly %extack) local_unnamed_addr #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %0 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mtu, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %new_mtu)
  %cmp = icmp eq i32 %1, %new_mtu
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %new_mtu)
  %cmp.i = icmp slt i32 %new_mtu, 0
  br i1 %cmp.i, label %if.end.do.body.i_crit_edge, label %lor.lhs.false.i

if.end.do.body.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

lor.lhs.false.i:                                  ; preds = %if.end
  %min_mtu.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 30
  %2 = ptrtoint ptr %min_mtu.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %min_mtu.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %new_mtu)
  %cmp1.i = icmp ugt i32 %3, %new_mtu
  br i1 %cmp1.i, label %lor.lhs.false.i.do.body.i_crit_edge, label %if.end3.i

lor.lhs.false.i.do.body.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

do.body.i:                                        ; preds = %lor.lhs.false.i.do.body.i_crit_edge, %if.end.do.body.i_crit_edge
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_validate_mtu.__msg) #35
  %tobool.not.i = icmp eq ptr %extack, null
  br i1 %tobool.not.i, label %do.body.i.cleanup_crit_edge, label %do.body.i.return.sink.split.i_crit_edge

do.body.i.return.sink.split.i_crit_edge:          ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return.sink.split.i

do.body.i.cleanup_crit_edge:                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end3.i:                                        ; preds = %lor.lhs.false.i
  %max_mtu.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 31
  %4 = ptrtoint ptr %max_mtu.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %max_mtu.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp4.not.i = icmp ne i32 %5, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %new_mtu)
  %cmp6.i = icmp ult i32 %5, %new_mtu
  %or.cond.i = and i1 %cmp4.not.i, %cmp6.i
  br i1 %or.cond.i, label %do.body8.i, label %if.end2

do.body8.i:                                       ; preds = %if.end3.i
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_validate_mtu.__msg.62) #35
  %tobool10.not.i = icmp eq ptr %extack, null
  br i1 %tobool10.not.i, label %do.body8.i.cleanup_crit_edge, label %do.body8.i.return.sink.split.i_crit_edge

do.body8.i.return.sink.split.i_crit_edge:         ; preds = %do.body8.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return.sink.split.i

do.body8.i.cleanup_crit_edge:                     ; preds = %do.body8.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

return.sink.split.i:                              ; preds = %do.body8.i.return.sink.split.i_crit_edge, %do.body.i.return.sink.split.i_crit_edge
  %dev_validate_mtu.__msg.62.sink.i = phi ptr [ @dev_validate_mtu.__msg, %do.body.i.return.sink.split.i_crit_edge ], [ @dev_validate_mtu.__msg.62, %do.body8.i.return.sink.split.i_crit_edge ]
  %6 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %dev_validate_mtu.__msg.62.sink.i, ptr %extack, align 4
  br label %cleanup

if.end2:                                          ; preds = %if.end3.i
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %7 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state.i, align 4
  %9 = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.not = icmp eq i32 %9, 0
  br i1 %tobool.i.not, label %if.end2.cleanup_crit_edge, label %if.end5

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end5:                                          ; preds = %if.end2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %10 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %dev, ptr %info.i.i, align 4
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %10, align 4
  %nd_net.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %13 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %if.end5.if.end30.i.i.i_crit_edge

if.end5.if.end30.i.i.i_crit_edge:                 ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end5
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %if.end5.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %14, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 23, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 23, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %call42.i.i.i, %if.end41.i.i.i ], [ %call38.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  %and.i = and i32 %retval.0.i.i.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i44 = icmp sgt i32 %and.i, 1
  %sub.i = sub i32 1, %and.i
  %spec.select.i = select i1 %cmp.i44, i32 %sub.i, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i)
  %tobool8.not = icmp eq i32 %spec.select.i, 0
  br i1 %tobool8.not, label %if.end10, label %call_netdevice_notifiers.exit.cleanup_crit_edge

call_netdevice_notifiers.exit.cleanup_crit_edge:  ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end10:                                         ; preds = %call_netdevice_notifiers.exit
  %15 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mtu, align 4
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %17 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_change_mtu.i = getelementptr inbounds %struct.net_device_ops, ptr %18, i32 0, i32 17
  %19 = ptrtoint ptr %ndo_change_mtu.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ndo_change_mtu.i, align 4
  %tobool.not.i45 = icmp eq ptr %20, null
  br i1 %tobool.not.i45, label %__dev_set_mtu.exit.thread, label %__dev_set_mtu.exit

__dev_set_mtu.exit.thread:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #37
  %21 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile i32 %new_mtu, ptr %mtu, align 4
  br label %if.then14

__dev_set_mtu.exit:                               ; preds = %if.end10
  %call.i = call i32 %20(ptr noundef %dev, i32 noundef %new_mtu) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool13.not = icmp eq i32 %call.i, 0
  br i1 %tobool13.not, label %__dev_set_mtu.exit.if.then14_crit_edge, label %__dev_set_mtu.exit.cleanup_crit_edge

__dev_set_mtu.exit.cleanup_crit_edge:             ; preds = %__dev_set_mtu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

__dev_set_mtu.exit.if.then14_crit_edge:           ; preds = %__dev_set_mtu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then14

if.then14:                                        ; preds = %__dev_set_mtu.exit.if.then14_crit_edge, %__dev_set_mtu.exit.thread
  %call15 = call fastcc i32 @call_netdevice_notifiers_mtu(ptr noundef %dev, i32 noundef %16)
  %and.i47 = and i32 %call15, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i47)
  %cmp.i48 = icmp sgt i32 %and.i47, 1
  %sub.i49 = sub i32 1, %and.i47
  %spec.select.i50 = select i1 %cmp.i48, i32 %sub.i49, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i50)
  %tobool17.not = icmp eq i32 %spec.select.i50, 0
  br i1 %tobool17.not, label %if.then14.cleanup_crit_edge, label %if.then18

if.then14.cleanup_crit_edge:                      ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then18:                                        ; preds = %if.then14
  %22 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_change_mtu.i52 = getelementptr inbounds %struct.net_device_ops, ptr %23, i32 0, i32 17
  %24 = ptrtoint ptr %ndo_change_mtu.i52 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ndo_change_mtu.i52, align 4
  %tobool.not.i53 = icmp eq ptr %25, null
  br i1 %tobool.not.i53, label %do.body3.i57, label %if.then.i55

if.then.i55:                                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #37
  %call.i54 = call i32 %25(ptr noundef %dev, i32 noundef %16) #35
  br label %__dev_set_mtu.exit59

do.body3.i57:                                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #37
  %26 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 %16, ptr %mtu, align 4
  br label %__dev_set_mtu.exit59

__dev_set_mtu.exit59:                             ; preds = %do.body3.i57, %if.then.i55
  %27 = call fastcc i32 @call_netdevice_notifiers_mtu(ptr noundef %dev, i32 noundef %new_mtu)
  br label %cleanup

cleanup:                                          ; preds = %__dev_set_mtu.exit59, %if.then14.cleanup_crit_edge, %__dev_set_mtu.exit.cleanup_crit_edge, %call_netdevice_notifiers.exit.cleanup_crit_edge, %if.end2.cleanup_crit_edge, %return.sink.split.i, %do.body8.i.cleanup_crit_edge, %do.body.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -19, %if.end2.cleanup_crit_edge ], [ %spec.select.i, %call_netdevice_notifiers.exit.cleanup_crit_edge ], [ %call.i, %__dev_set_mtu.exit.cleanup_crit_edge ], [ %spec.select.i50, %__dev_set_mtu.exit59 ], [ 0, %if.then14.cleanup_crit_edge ], [ -22, %do.body.i.cleanup_crit_edge ], [ -22, %do.body8.i.cleanup_crit_edge ], [ -22, %return.sink.split.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @call_netdevice_notifiers_mtu(ptr noundef %dev, i32 noundef %arg) unnamed_addr #1 align 64 {
entry:
  %info = alloca %struct.netdev_notifier_info_ext, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %info) #35
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.netdev_notifier_info_ext, ptr %info, i32 0, i32 1
  %2 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dev, ptr %info, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %0, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %arg, ptr %1, align 4
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %5 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nd_net.i.i, align 4
  %call1.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %entry.if.end30.i_crit_edge

entry.if.end30.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

land.rhs.i:                                       ; preds = %entry
  %.b50.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i.if.end30.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end30.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end30.i_crit_edge, %entry.if.end30.i_crit_edge
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %6, i32 0, i32 25
  %call38.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i, i32 noundef 7, ptr noundef nonnull %info) #35
  %and.i = and i32 %call38.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool39.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool39.not.i, label %if.end41.i, label %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge

if.end30.i.call_netdevice_notifiers_info.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit

if.end41.i:                                       ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 7, ptr noundef nonnull %info) #35
  br label %call_netdevice_notifiers_info.exit

call_netdevice_notifiers_info.exit:               ; preds = %if.end41.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge
  %retval.0.i = phi i32 [ %call42.i, %if.end41.i ], [ %call38.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %info) #35
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_mtu(ptr noundef %dev, i32 noundef %new_mtu) #1 align 64 {
entry:
  %extack = alloca %struct.netlink_ext_ack, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %extack) #35
  %0 = call ptr @memset(ptr %extack, i32 0, i32 36)
  %call = call i32 @dev_set_mtu_ext(ptr noundef %dev, i32 noundef %new_mtu, ptr noundef nonnull %extack)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end10_crit_edge, label %land.lhs.true

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

land.lhs.true:                                    ; preds = %entry
  %1 = ptrtoint ptr %extack to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %extack, align 4
  %tobool1.not = icmp eq ptr %2, null
  br i1 %tobool1.not, label %land.lhs.true.if.end10_crit_edge, label %do.body

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

do.body:                                          ; preds = %land.lhs.true
  %call2 = call i32 @net_ratelimit() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %do.body.if.end10_crit_edge, label %do.end

do.body.if.end10_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  %3 = ptrtoint ptr %extack to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %extack, align 4
  %call7 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.63, ptr noundef %dev, ptr noundef %4) #41
  br label %if.end10

if.end10:                                         ; preds = %do.end, %do.body.if.end10_crit_edge, %land.lhs.true.if.end10_crit_edge, %entry.if.end10_crit_edge
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %extack) #35
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_change_tx_queue_len(ptr noundef %dev, i32 noundef %new_len) local_unnamed_addr #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tx_queue_len = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 107
  %0 = ptrtoint ptr %tx_queue_len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %tx_queue_len, align 16
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %new_len)
  %cmp1.not = icmp eq i32 %1, %new_len
  br i1 %cmp1.not, label %entry.cleanup_crit_edge, label %if.then2

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then2:                                         ; preds = %entry
  %2 = ptrtoint ptr %tx_queue_len to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %new_len, ptr %tx_queue_len, align 16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %3 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %4 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %dev, ptr %info.i.i, align 4
  %5 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %3, align 4
  %nd_net.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %6 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %if.then2.if.end30.i.i.i_crit_edge

if.then2.if.end30.i.i.i_crit_edge:                ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.then2
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %if.then2.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %7, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 30, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 30, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %call42.i.i.i, %if.end41.i.i.i ], [ %call38.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  %and.i = and i32 %retval.0.i.i.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i = icmp sgt i32 %and.i, 1
  %sub.i = sub i32 1, %and.i
  %spec.select.i = select i1 %cmp.i, i32 %sub.i, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i)
  %tobool.not = icmp eq i32 %spec.select.i, 0
  br i1 %tobool.not, label %if.end6, label %call_netdevice_notifiers.exit.err_rollback_crit_edge

call_netdevice_notifiers.exit.err_rollback_crit_edge: ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %err_rollback

if.end6:                                          ; preds = %call_netdevice_notifiers.exit
  %call7 = call i32 @dev_qdisc_change_tx_queue_len(ptr noundef %dev) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end6.cleanup_crit_edge, label %if.end6.err_rollback_crit_edge

if.end6.err_rollback_crit_edge:                   ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  br label %err_rollback

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

err_rollback:                                     ; preds = %if.end6.err_rollback_crit_edge, %call_netdevice_notifiers.exit.err_rollback_crit_edge
  %res.0 = phi i32 [ %spec.select.i, %call_netdevice_notifiers.exit.err_rollback_crit_edge ], [ %call7, %if.end6.err_rollback_crit_edge ]
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.65) #43
  %8 = ptrtoint ptr %tx_queue_len to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %1, ptr %tx_queue_len, align 16
  br label %cleanup

cleanup:                                          ; preds = %err_rollback, %if.end6.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %res.0, %err_rollback ], [ 0, %if.end6.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_qdisc_change_tx_queue_len(ptr noundef) local_unnamed_addr #4

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @dev_set_group(ptr nocapture noundef writeonly %dev, i32 noundef %new_group) #22 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %group = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 35
  %0 = ptrtoint ptr %group to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %new_group, ptr %group, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_pre_changeaddr_notify(ptr noundef %dev, ptr noundef %addr, ptr noundef %extack) #1 align 64 {
entry:
  %info = alloca %struct.netdev_notifier_pre_changeaddr_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %info) #35
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.netdev_notifier_pre_changeaddr_info, ptr %info, i32 0, i32 1
  %2 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dev, ptr %info, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %extack, ptr %0, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %addr, ptr %1, align 4
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %5 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nd_net.i.i, align 4
  %call1.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %entry.if.end30.i_crit_edge

entry.if.end30.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

land.rhs.i:                                       ; preds = %entry
  %.b50.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i, label %land.rhs.i.if.end30.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end30.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end30.i_crit_edge, %entry.if.end30.i_crit_edge
  %netdev_chain.i = getelementptr inbounds %struct.net, ptr %6, i32 0, i32 25
  %call38.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i, i32 noundef 9, ptr noundef nonnull %info) #35
  %and.i = and i32 %call38.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool39.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool39.not.i, label %if.end41.i, label %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge

if.end30.i.call_netdevice_notifiers_info.exit_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers_info.exit

if.end41.i:                                       ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 9, ptr noundef nonnull %info) #35
  br label %call_netdevice_notifiers_info.exit

call_netdevice_notifiers_info.exit:               ; preds = %if.end41.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge
  %retval.0.i = phi i32 [ %call42.i, %if.end41.i ], [ %call38.i, %if.end30.i.call_netdevice_notifiers_info.exit_crit_edge ]
  %and.i6 = and i32 %retval.0.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i6)
  %cmp.i = icmp sgt i32 %and.i6, 1
  %sub.i = sub i32 1, %and.i6
  %spec.select.i = select i1 %cmp.i, i32 %sub.i, i32 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %info) #35
  ret i32 %spec.select.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_mac_address(ptr noundef %dev, ptr noundef %sa, ptr noundef %extack) #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i = alloca %struct.netdev_notifier_pre_changeaddr_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %ndo_set_mac_address = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %ndo_set_mac_address to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_set_mac_address, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %sa to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %sa, align 2
  %type = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 32
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %type, align 16
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %7)
  %cmp.not = icmp eq i16 %5, %7
  br i1 %cmp.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %8 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i, align 4
  %10 = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.i.not = icmp eq i32 %10, 0
  br i1 %tobool.i.not, label %if.end4.cleanup_crit_edge, label %if.end6

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end6:                                          ; preds = %if.end4
  %sa_data = getelementptr inbounds %struct.sockaddr, ptr %sa, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %info.i) #35
  %11 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i, i32 0, i32 1
  %12 = getelementptr inbounds %struct.netdev_notifier_pre_changeaddr_info, ptr %info.i, i32 0, i32 1
  %13 = ptrtoint ptr %info.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %dev, ptr %info.i, align 4
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %extack, ptr %11, align 4
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %sa_data, ptr %12, align 4
  %nd_net.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %16 = ptrtoint ptr %nd_net.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nd_net.i.i.i, align 4
  %call1.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %if.end6.if.end30.i.i_crit_edge

if.end6.if.end30.i.i_crit_edge:                   ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i

land.rhs.i.i:                                     ; preds = %if.end6
  %.b50.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i, label %land.rhs.i.i.if.end30.i.i_crit_edge, label %if.then.i.i, !prof !1311

land.rhs.i.i.if.end30.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i

if.end30.i.i:                                     ; preds = %if.then.i.i, %land.rhs.i.i.if.end30.i.i_crit_edge, %if.end6.if.end30.i.i_crit_edge
  %netdev_chain.i.i = getelementptr inbounds %struct.net, ptr %17, i32 0, i32 25
  %call38.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i, i32 noundef 9, ptr noundef nonnull %info.i) #35
  %and.i.i = and i32 %call38.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool39.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool39.not.i.i, label %if.end41.i.i, label %if.end30.i.i.dev_pre_changeaddr_notify.exit_crit_edge

if.end30.i.i.dev_pre_changeaddr_notify.exit_crit_edge: ; preds = %if.end30.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_pre_changeaddr_notify.exit

if.end41.i.i:                                     ; preds = %if.end30.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 9, ptr noundef nonnull %info.i) #35
  br label %dev_pre_changeaddr_notify.exit

dev_pre_changeaddr_notify.exit:                   ; preds = %if.end41.i.i, %if.end30.i.i.dev_pre_changeaddr_notify.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call42.i.i, %if.end41.i.i ], [ %call38.i.i, %if.end30.i.i.dev_pre_changeaddr_notify.exit_crit_edge ]
  %and.i6.i = and i32 %retval.0.i.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i6.i)
  %cmp.i.i = icmp sgt i32 %and.i6.i, 1
  %sub.i.i = sub i32 1, %and.i6.i
  %spec.select.i.i = select i1 %cmp.i.i, i32 %sub.i.i, i32 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %info.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i.i)
  %tobool8.not = icmp eq i32 %spec.select.i.i, 0
  br i1 %tobool8.not, label %if.end10, label %dev_pre_changeaddr_notify.exit.cleanup_crit_edge

dev_pre_changeaddr_notify.exit.cleanup_crit_edge: ; preds = %dev_pre_changeaddr_notify.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end10:                                         ; preds = %dev_pre_changeaddr_notify.exit
  %18 = ptrtoint ptr %ndo_set_mac_address to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ndo_set_mac_address, align 4
  %call12 = call i32 %19(ptr noundef %dev, ptr noundef %sa) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end15:                                         ; preds = %if.end10
  %addr_assign_type = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 55
  %20 = ptrtoint ptr %addr_assign_type to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 3, ptr %addr_assign_type, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %21 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %22 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %dev, ptr %info.i.i, align 4
  %23 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %21, align 4
  %24 = ptrtoint ptr %nd_net.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %nd_net.i.i.i, align 4
  %call1.i.i.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %if.end15.if.end30.i.i.i_crit_edge

if.end15.if.end30.i.i.i_crit_edge:                ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end15
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %if.end15.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %25, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 8, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 8, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %26 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev_addr, align 64
  %addr_len = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 56
  %28 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %addr_len, align 1
  %conv17 = zext i8 %29 to i32
  call void @add_device_randomness(ptr noundef %27, i32 noundef %conv17) #35
  br label %cleanup

cleanup:                                          ; preds = %call_netdevice_notifiers.exit, %if.end10.cleanup_crit_edge, %dev_pre_changeaddr_notify.exit.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %call_netdevice_notifiers.exit ], [ -95, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -19, %if.end4.cleanup_crit_edge ], [ %spec.select.i.i, %dev_pre_changeaddr_notify.exit.cleanup_crit_edge ], [ %call12, %if.end10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_device_randomness(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_set_mac_address_user(ptr noundef %dev, ptr noundef %sa, ptr noundef %extack) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_write(ptr noundef nonnull @dev_addr_sem) #35
  %call = tail call i32 @dev_set_mac_address(ptr noundef %dev, ptr noundef %sa, ptr noundef %extack)
  tail call void @up_write(ptr noundef nonnull @dev_addr_sem) #35
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_get_mac_address(ptr nocapture noundef writeonly %sa, ptr noundef %net, ptr noundef %dev_name) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @down_read(ptr noundef nonnull @dev_addr_sem) #35
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call ptr @dev_get_by_name_rcu(ptr noundef %net, ptr noundef %dev_name)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %rcu_read_lock.exit.unlock_crit_edge, label %if.end

rcu_read_lock.exit.unlock_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %unlock

if.end:                                           ; preds = %rcu_read_lock.exit
  %addr_len = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 56
  %4 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %addr_len, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not = icmp eq i8 %5, 0
  %sa_data = getelementptr inbounds %struct.sockaddr, ptr %sa, i32 0, i32 1
  br i1 %tobool1.not, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %6 = call ptr @memset(ptr %sa_data, i32 0, i32 14)
  br label %if.end7

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 86
  %7 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev_addr, align 64
  %9 = tail call i8 @llvm.umin.i8(i8 %5, i8 14)
  %cond = zext i8 %9 to i32
  %10 = call ptr @memcpy(ptr %sa_data, ptr %8, i32 %cond)
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then2
  %type = getelementptr inbounds %struct.net_device, ptr %call, i32 0, i32 32
  %11 = ptrtoint ptr %type to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %type, align 16
  %13 = ptrtoint ptr %sa to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %12, ptr %sa, align 2
  br label %unlock

unlock:                                           ; preds = %if.end7, %rcu_read_lock.exit.unlock_crit_edge
  %ret.0 = phi i32 [ 0, %if.end7 ], [ -19, %rcu_read_lock.exit.unlock_crit_edge ]
  %call.i17 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i17, label %unlock.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i20

unlock.rcu_read_unlock.exit_crit_edge:            ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i20:                                ; preds = %unlock
  %call1.i18 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i18)
  %tobool.not.i19 = icmp eq i32 %call1.i18, 0
  br i1 %tobool.not.i19, label %land.lhs.true.i20.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i22

land.lhs.true.i20.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i20
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i22:                               ; preds = %land.lhs.true.i20
  %.b4.i21 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i21, label %land.lhs.true2.i22.rcu_read_unlock.exit_crit_edge, label %if.then.i23

land.lhs.true2.i22.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i22
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i23:                                      ; preds = %land.lhs.true2.i22
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i23, %land.lhs.true2.i22.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i20.rcu_read_unlock.exit_crit_edge, %unlock.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %14 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i24 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i24 to ptr
  %preempt_count.i.i.i.i25 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i25 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i25, align 4
  %sub.i.i.i = add i32 %17, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i25, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  tail call void @up_read(ptr noundef nonnull @dev_addr_sem) #35
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_change_carrier(ptr noundef %dev, i1 noundef zeroext %new_carrier) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %ndo_change_carrier = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 66
  %2 = ptrtoint ptr %ndo_change_carrier to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_change_carrier, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %4 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not = icmp eq i32 %6, 0
  br i1 %tobool.i.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end2:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %call5 = tail call i32 %3(ptr noundef %dev, i1 noundef zeroext %new_carrier) #35
  br label %cleanup

cleanup:                                          ; preds = %if.end2, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end2 ], [ -95, %entry.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_get_phys_port_id(ptr noundef %dev, ptr noundef %ppid) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %ndo_get_phys_port_id = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 67
  %2 = ptrtoint ptr %ndo_get_phys_port_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_get_phys_port_id, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call = tail call i32 %3(ptr noundef %dev, ptr noundef %ppid) #35
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ -95, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_get_phys_port_name(ptr noundef %dev, ptr noundef %name, i32 noundef %len) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %ndo_get_phys_port_name = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 69
  %2 = ptrtoint ptr %ndo_get_phys_port_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_get_phys_port_name, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %if.then

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

if.then:                                          ; preds = %entry
  %call = tail call i32 %3(ptr noundef %dev, ptr noundef %name, i32 noundef %len) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 -95, i32 %call)
  %cmp.not = icmp eq i32 %call, -95
  br i1 %cmp.not, label %if.then.if.end3_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

if.end3:                                          ; preds = %if.then.if.end3_crit_edge, %entry.if.end3_crit_edge
  %call4 = tail call i32 @devlink_compat_phys_port_name_get(ptr noundef %dev, ptr noundef %name, i32 noundef %len) #35
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end3 ], [ %call, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_compat_phys_port_name_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_get_port_parent_id(ptr noundef %dev, ptr noundef %ppid, i1 noundef zeroext %recurse) #1 align 64 {
entry:
  %first = alloca %struct.netdev_phys_item_id, align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %first) #35
  %2 = call ptr @memset(ptr %first, i32 0, i32 33)
  %ndo_get_port_parent_id = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 68
  %3 = ptrtoint ptr %ndo_get_port_parent_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ndo_get_port_parent_id, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %if.then

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

if.then:                                          ; preds = %entry
  %call = tail call i32 %4(ptr noundef %dev, ptr noundef %ppid) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 -95, i32 %call)
  %cmp.not = icmp eq i32 %call, -95
  br i1 %cmp.not, label %if.then.if.end3_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

if.end3:                                          ; preds = %if.then.if.end3_crit_edge, %entry.if.end3_crit_edge
  %call4 = tail call i32 @devlink_compat_switch_id_get(ptr noundef %dev, ptr noundef %ppid) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 -95, i32 %call4)
  %cmp6.not = icmp eq i32 %call4, -95
  %or.cond = select i1 %recurse, i1 %cmp6.not, i1 false
  br i1 %or.cond, label %if.end8, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end8:                                          ; preds = %if.end3
  %lower = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %5 = ptrtoint ptr %lower to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %lower, align 8
  %cmp.i = icmp eq ptr %6, %lower
  br i1 %cmp.i, label %if.end8.cleanup_crit_edge, label %netdev_lower_get_next.exit

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

netdev_lower_get_next.exit:                       ; preds = %if.end8
  %add.ptr.i = getelementptr i8, ptr %6, i32 -16
  %7 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %add.ptr.i, align 4
  %tobool10.not50 = icmp eq ptr %8, null
  br i1 %tobool10.not50, label %netdev_lower_get_next.exit.cleanup_crit_edge, label %for.body.lr.ph

netdev_lower_get_next.exit.cleanup_crit_edge:     ; preds = %netdev_lower_get_next.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.body.lr.ph:                                   ; preds = %netdev_lower_get_next.exit
  %id_len = getelementptr inbounds %struct.netdev_phys_item_id, ptr %first, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %netdev_lower_get_next.exit48.for.body_crit_edge, %for.body.lr.ph
  %lower_dev.052 = phi ptr [ %8, %for.body.lr.ph ], [ %14, %netdev_lower_get_next.exit48.for.body_crit_edge ]
  %iter.151.in = phi ptr [ %6, %for.body.lr.ph ], [ %iter.151, %netdev_lower_get_next.exit48.for.body_crit_edge ]
  %9 = ptrtoint ptr %iter.151.in to i32
  call void @__asan_load4_noabort(i32 %9)
  %iter.151 = load ptr, ptr %iter.151.in, align 4
  %call11 = tail call i32 @dev_get_port_parent_id(ptr noundef nonnull %lower_dev.052, ptr noundef %ppid, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end14:                                         ; preds = %for.body
  %10 = ptrtoint ptr %id_len to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %id_len, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool15.not = icmp eq i8 %11, 0
  br i1 %tobool15.not, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #37
  %12 = call ptr @memcpy(ptr %first, ptr %ppid, i32 33)
  br label %for.inc

if.else:                                          ; preds = %if.end14
  %bcmp = call i32 @bcmp(ptr noundef nonnull dereferenceable(33) %first, ptr noundef dereferenceable(33) %ppid, i32 33) #42
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool18.not = icmp eq i32 %bcmp, 0
  br i1 %tobool18.not, label %if.else.for.inc_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

for.inc:                                          ; preds = %if.else.for.inc_crit_edge, %if.then16
  %cmp.i44 = icmp eq ptr %iter.151, %lower
  br i1 %cmp.i44, label %for.inc.cleanup_crit_edge, label %netdev_lower_get_next.exit48

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

netdev_lower_get_next.exit48:                     ; preds = %for.inc
  %add.ptr.i45 = getelementptr i8, ptr %iter.151, i32 -16
  %13 = ptrtoint ptr %add.ptr.i45 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %add.ptr.i45, align 4
  %tobool10.not = icmp eq ptr %14, null
  br i1 %tobool10.not, label %netdev_lower_get_next.exit48.cleanup_crit_edge, label %netdev_lower_get_next.exit48.for.body_crit_edge

netdev_lower_get_next.exit48.for.body_crit_edge:  ; preds = %netdev_lower_get_next.exit48
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

netdev_lower_get_next.exit48.cleanup_crit_edge:   ; preds = %netdev_lower_get_next.exit48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

cleanup:                                          ; preds = %netdev_lower_get_next.exit48.cleanup_crit_edge, %for.inc.cleanup_crit_edge, %if.else.cleanup_crit_edge, %for.body.cleanup_crit_edge, %netdev_lower_get_next.exit.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then.cleanup_crit_edge ], [ %call4, %if.end3.cleanup_crit_edge ], [ -95, %netdev_lower_get_next.exit.cleanup_crit_edge ], [ -95, %if.end8.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ -95, %if.else.cleanup_crit_edge ], [ %call11, %for.body.cleanup_crit_edge ], [ 0, %netdev_lower_get_next.exit48.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %first) #35
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devlink_compat_switch_id_get(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @netdev_port_same_parent_id(ptr noundef %a, ptr noundef %b) #1 align 64 {
entry:
  %a_id = alloca %struct.netdev_phys_item_id, align 1
  %b_id = alloca %struct.netdev_phys_item_id, align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %a_id) #35
  %0 = call ptr @memset(ptr %a_id, i32 0, i32 33)
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %b_id) #35
  %1 = call ptr @memset(ptr %b_id, i32 0, i32 33)
  %call = call i32 @dev_get_port_parent_id(ptr noundef %a, ptr noundef nonnull %a_id, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32 @dev_get_port_parent_id(ptr noundef %b, ptr noundef nonnull %b_id, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %id_len.i = getelementptr inbounds %struct.netdev_phys_item_id, ptr %a_id, i32 0, i32 1
  %2 = ptrtoint ptr %id_len.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %id_len.i, align 1
  %id_len1.i = getelementptr inbounds %struct.netdev_phys_item_id, ptr %b_id, i32 0, i32 1
  %4 = ptrtoint ptr %id_len1.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %id_len1.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %3, i8 %5)
  %cmp.i = icmp eq i8 %3, %5
  br i1 %cmp.i, label %land.rhs.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

land.rhs.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %conv.i = zext i8 %3 to i32
  %bcmp.i = call i32 @bcmp(ptr nonnull %a_id, ptr nonnull %b_id, i32 %conv.i) #38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp8.i = icmp eq i32 %bcmp.i, 0
  br label %cleanup

cleanup:                                          ; preds = %land.rhs.i, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %lor.lhs.false.cleanup_crit_edge ], [ false, %entry.cleanup_crit_edge ], [ false, %if.end.cleanup_crit_edge ], [ %cmp8.i, %land.rhs.i ]
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %b_id) #35
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %a_id) #35
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_change_proto_down(ptr noundef %dev, i1 noundef zeroext %proto_down) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %proto_down to i8
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 15
  %0 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %priv_flags, align 16
  %and = and i64 %1, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end:                                           ; preds = %entry
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %4 = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not = icmp eq i32 %4, 0
  br i1 %tobool.i.not, label %if.end.return_crit_edge, label %if.end2

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end2:                                          ; preds = %if.end
  br i1 %proto_down, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @netif_carrier_off(ptr noundef %dev) #35
  br label %if.end5

if.else:                                          ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @netif_carrier_on(ptr noundef %dev) #35
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %proto_down7 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 148
  %5 = ptrtoint ptr %proto_down7 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %frombool, ptr %proto_down7, align 4
  br label %return

return:                                           ; preds = %if.end5, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end5 ], [ -95, %entry.return_crit_edge ], [ -19, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_change_proto_down_reason(ptr nocapture noundef %dev, i32 noundef %mask, i32 noundef %value) #1 align 64 {
entry:
  %mask.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mask.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %mask, ptr %mask.addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mask)
  %tobool.not = icmp eq i32 %mask, 0
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %proto_down_reason = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 116
  %1 = ptrtoint ptr %proto_down_reason to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %value, ptr %proto_down_reason, align 8
  br label %if.end10

if.else:                                          ; preds = %entry
  %call = call i32 @_find_next_bit_be(ptr noundef nonnull %mask.addr, i32 noundef 32, i32 noundef 0) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %call)
  %cmp18 = icmp slt i32 %call, 32
  br i1 %cmp18, label %for.body.lr.ph, label %if.else.if.end10_crit_edge

if.else.if.end10_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

for.body.lr.ph:                                   ; preds = %if.else
  %proto_down_reason4 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 116
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %b.019 = phi i32 [ %call, %for.body.lr.ph ], [ %call9, %for.inc.for.body_crit_edge ]
  %shl = shl nuw i32 1, %b.019
  %and = and i32 %shl, %value
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.else5, label %if.then2

if.then2:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  %2 = ptrtoint ptr %proto_down_reason4 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %proto_down_reason4, align 8
  %or = or i32 %3, %shl
  br label %for.inc

if.else5:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  %neg = xor i32 %shl, -1
  %4 = ptrtoint ptr %proto_down_reason4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %proto_down_reason4, align 8
  %and8 = and i32 %5, %neg
  br label %for.inc

for.inc:                                          ; preds = %if.else5, %if.then2
  %storemerge = phi i32 [ %or, %if.then2 ], [ %and8, %if.else5 ]
  %6 = ptrtoint ptr %proto_down_reason4 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %storemerge, ptr %proto_down_reason4, align 8
  %add = add nsw i32 %b.019, 1
  %call9 = call i32 @_find_next_bit_be(ptr noundef nonnull %mask.addr, i32 noundef 32, i32 noundef %add) #35
  %cmp = icmp slt i32 %call9, 32
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.if.end10_crit_edge

for.inc.if.end10_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

if.end10:                                         ; preds = %for.inc.if.end10_crit_edge, %if.else.if.end10_crit_edge, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i8 @dev_xdp_prog_count(ptr nocapture noundef readonly %dev) #23 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 0
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %link = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 0, i32 1
  %2 = ptrtoint ptr %link to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %link, align 4
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %lor.lhs.false.for.inc_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  br label %for.inc

for.inc:                                          ; preds = %if.then, %lor.lhs.false.for.inc_crit_edge
  %count.1 = phi i8 [ 1, %if.then ], [ 0, %lor.lhs.false.for.inc_crit_edge ]
  %arrayidx.1 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 1
  %4 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.1, align 4
  %tobool.not.1 = icmp eq ptr %5, null
  br i1 %tobool.not.1, label %lor.lhs.false.1, label %for.inc.if.then.1_crit_edge

for.inc.if.then.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.1

lor.lhs.false.1:                                  ; preds = %for.inc
  %link.1 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 1, i32 1
  %6 = ptrtoint ptr %link.1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %link.1, align 4
  %tobool3.not.1 = icmp eq ptr %7, null
  br i1 %tobool3.not.1, label %lor.lhs.false.1.for.inc.1_crit_edge, label %lor.lhs.false.1.if.then.1_crit_edge

lor.lhs.false.1.if.then.1_crit_edge:              ; preds = %lor.lhs.false.1
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.1

lor.lhs.false.1.for.inc.1_crit_edge:              ; preds = %lor.lhs.false.1
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.1

if.then.1:                                        ; preds = %lor.lhs.false.1.if.then.1_crit_edge, %for.inc.if.then.1_crit_edge
  %inc.1 = add nuw nsw i8 %count.1, 1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %lor.lhs.false.1.for.inc.1_crit_edge
  %count.1.1 = phi i8 [ %inc.1, %if.then.1 ], [ %count.1, %lor.lhs.false.1.for.inc.1_crit_edge ]
  %arrayidx.2 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 2
  %8 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.2, align 4
  %tobool.not.2 = icmp eq ptr %9, null
  br i1 %tobool.not.2, label %lor.lhs.false.2, label %for.inc.1.if.then.2_crit_edge

for.inc.1.if.then.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.2

lor.lhs.false.2:                                  ; preds = %for.inc.1
  %link.2 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 2, i32 1
  %10 = ptrtoint ptr %link.2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %link.2, align 4
  %tobool3.not.2 = icmp eq ptr %11, null
  br i1 %tobool3.not.2, label %lor.lhs.false.2.for.inc.2_crit_edge, label %lor.lhs.false.2.if.then.2_crit_edge

lor.lhs.false.2.if.then.2_crit_edge:              ; preds = %lor.lhs.false.2
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.2

lor.lhs.false.2.for.inc.2_crit_edge:              ; preds = %lor.lhs.false.2
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.2

if.then.2:                                        ; preds = %lor.lhs.false.2.if.then.2_crit_edge, %for.inc.1.if.then.2_crit_edge
  %inc.2 = add nuw nsw i8 %count.1.1, 1
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %lor.lhs.false.2.for.inc.2_crit_edge
  %count.1.2 = phi i8 [ %inc.2, %if.then.2 ], [ %count.1.1, %lor.lhs.false.2.for.inc.2_crit_edge ]
  ret i8 %count.1.2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @dev_xdp_prog_id(ptr nocapture noundef readonly %dev, i32 noundef %mode) local_unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %link.i.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 %mode, i32 1
  %0 = ptrtoint ptr %link.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %link.i.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %prog.i = getelementptr inbounds %struct.bpf_link, ptr %1, i32 0, i32 4
  %arrayidx.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 %mode
  %retval.0.in.i = select i1 %tobool.not.i, ptr %arrayidx.i, ptr %prog.i
  %2 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %retval.0.i = load ptr, ptr %retval.0.in.i, align 4
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i, i32 0, i32 10
  %3 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %aux, align 4
  %id = getelementptr inbounds %struct.bpf_prog_aux, ptr %4, i32 0, i32 7
  %5 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %6, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  ret i32 %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_xdp_link_attach(ptr nocapture noundef readonly %attr, ptr noundef %prog) local_unnamed_addr #1 align 64 {
entry:
  %link_primer = alloca %struct.bpf_link_primer, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 110
  %4 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nsproxy, align 4
  %net_ns = getelementptr inbounds %struct.nsproxy, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %net_ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %net_ns, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %link_primer) #35
  %8 = call ptr @memset(ptr %link_primer, i32 255, i32 16)
  tail call void @rtnl_lock() #35
  %9 = getelementptr inbounds %struct.anon.117, ptr %attr, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %call1 = tail call ptr @dev_get_by_index(ptr noundef %7, i32 noundef %11)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @rtnl_unlock() #35
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %12 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %12, i32 noundef 1052096, i32 noundef 80) #40
  %tobool3.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool3.not, label %if.end.unlock_crit_edge, label %if.end5

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %unlock

if.end5:                                          ; preds = %if.end
  tail call void @bpf_link_init(ptr noundef nonnull %call7.i.i, i32 noundef 6, ptr noundef nonnull @bpf_xdp_link_lops, ptr noundef %prog) #35
  %dev7 = getelementptr inbounds %struct.bpf_xdp_link, ptr %call7.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %dev7 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call1, ptr %dev7, align 8
  %flags = getelementptr inbounds %struct.anon.117, ptr %attr, i32 0, i32 3
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags, align 4
  %flags8 = getelementptr inbounds %struct.bpf_xdp_link, ptr %call7.i.i, i32 0, i32 2
  %16 = ptrtoint ptr %flags8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %flags8, align 4
  %call10 = call i32 @bpf_link_prime(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %link_primer) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end13, label %if.then12

if.then12:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #37
  call void @kfree(ptr noundef nonnull %call7.i.i) #35
  br label %unlock

if.end13:                                         ; preds = %if.end5
  %17 = ptrtoint ptr %flags8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flags8, align 4
  %call.i = call fastcc i32 @dev_xdp_attach(ptr noundef nonnull %call1, ptr noundef null, ptr noundef nonnull %call7.i.i, ptr noundef null, ptr noundef null, i32 noundef %18) #35
  call void @rtnl_unlock() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool15.not = icmp eq i32 %call.i, 0
  br i1 %tobool15.not, label %do.body1.i, label %if.then16

if.then16:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #37
  %19 = ptrtoint ptr %dev7 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %dev7, align 8
  call void @bpf_link_cleanup(ptr noundef nonnull %link_primer) #35
  br label %do.body1.i48

do.body1.i:                                       ; preds = %if.end13
  %call19 = call i32 @bpf_link_settle(ptr noundef nonnull %link_primer) #35
  %20 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %call1, i32 0, i32 118
  %21 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pcpu_refcnt.i, align 4
  %23 = ptrtoint ptr %22 to i32
  %24 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %29, %23
  %30 = inttoptr i32 %add.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %add13.i = add i32 %32, -1
  store i32 %add13.i, ptr %30, align 4
  %33 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i = and i32 %33, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.dev_put.exit_crit_edge, !prof !1310

do.body1.i.dev_put.exit_crit_edge:                ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_put.exit

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @warn_bogus_irq_restore() #35
  br label %dev_put.exit

dev_put.exit:                                     ; preds = %if.then28.i, %do.body1.i.dev_put.exit_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %20) #35, !srcloc !1315
  br label %cleanup

unlock:                                           ; preds = %if.then12, %if.end.unlock_crit_edge
  %err.0 = phi i32 [ %call10, %if.then12 ], [ -12, %if.end.unlock_crit_edge ]
  call void @rtnl_unlock() #35
  br label %do.body1.i48

do.body1.i48:                                     ; preds = %unlock, %if.then16
  %err.1 = phi i32 [ %err.0, %unlock ], [ %call.i, %if.then16 ]
  %34 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i40 = getelementptr inbounds %struct.net_device, ptr %call1, i32 0, i32 118
  %35 = ptrtoint ptr %pcpu_refcnt.i40 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pcpu_refcnt.i40, align 4
  %37 = ptrtoint ptr %36 to i32
  %38 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i41 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i41 to ptr
  %cpu.i42 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %cpu.i42 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %cpu.i42, align 4
  %arrayidx.i43 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %41
  %42 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.i43, align 4
  %add.i44 = add i32 %43, %37
  %44 = inttoptr i32 %add.i44 to ptr
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %add13.i45 = add i32 %46, -1
  store i32 %add13.i45, ptr %44, align 4
  %47 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i46 = and i32 %47, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i46)
  %tobool24.not.i47 = icmp eq i32 %and.i.i.i46, 0
  br i1 %tobool24.not.i47, label %if.then28.i49, label %do.body1.i48.dev_put.exit51_crit_edge, !prof !1310

do.body1.i48.dev_put.exit51_crit_edge:            ; preds = %do.body1.i48
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_put.exit51

if.then28.i49:                                    ; preds = %do.body1.i48
  call void @__sanitizer_cov_trace_pc() #37
  call void @warn_bogus_irq_restore() #35
  br label %dev_put.exit51

dev_put.exit51:                                   ; preds = %if.then28.i49, %do.body1.i48.dev_put.exit51_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %34) #35, !srcloc !1315
  br label %cleanup

cleanup:                                          ; preds = %dev_put.exit51, %dev_put.exit, %if.then
  %retval.0 = phi i32 [ %err.1, %dev_put.exit51 ], [ %call19, %dev_put.exit ], [ -22, %if.then ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %link_primer) #35
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_link_init(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_link_prime(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_link_cleanup(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_link_settle(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @dev_change_xdp_fd(ptr noundef %dev, ptr noundef %extack, i32 noundef %fd, i32 noundef %expected_fd, i32 noundef %flags) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %and.i = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.dev_xdp_mode.exit_crit_edge

entry.dev_xdp_mode.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit

if.end.i:                                         ; preds = %entry
  %and1.i = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i.dev_xdp_mode.exit_crit_edge

if.end.i.dev_xdp_mode.exit_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit

if.end4.i:                                        ; preds = %if.end.i
  %and5.i = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end4.i.dev_xdp_mode.exit_crit_edge

if.end4.i.dev_xdp_mode.exit_crit_edge:            ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit

if.end8.i:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #37
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_bpf.i = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 76
  %2 = ptrtoint ptr %ndo_bpf.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_bpf.i, align 4
  %tobool9.not.i = icmp ne ptr %3, null
  %cond.i = zext i1 %tobool9.not.i to i32
  br label %dev_xdp_mode.exit

dev_xdp_mode.exit:                                ; preds = %if.end8.i, %if.end4.i.dev_xdp_mode.exit_crit_edge, %if.end.i.dev_xdp_mode.exit_crit_edge, %entry.dev_xdp_mode.exit_crit_edge
  %retval.0.i = phi i32 [ %cond.i, %if.end8.i ], [ 2, %entry.dev_xdp_mode.exit_crit_edge ], [ 1, %if.end.i.dev_xdp_mode.exit_crit_edge ], [ 0, %if.end4.i.dev_xdp_mode.exit_crit_edge ]
  %call1 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.rhs, label %dev_xdp_mode.exit.if.end30_crit_edge

dev_xdp_mode.exit.if.end30_crit_edge:             ; preds = %dev_xdp_mode.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

land.rhs:                                         ; preds = %dev_xdp_mode.exit
  %.b82 = load i1, ptr @dev_change_xdp_fd.__already_done, align 1
  br i1 %.b82, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !1311

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_change_xdp_fd.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9090, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 9090) #35
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %dev_xdp_mode.exit.if.end30_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %fd)
  %cmp = icmp sgt i32 %fd, -1
  br i1 %cmp, label %if.then38, label %if.end30.if.end45_crit_edge

if.end30.if.end45_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end45

if.then38:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp39 = icmp ne i32 %retval.0.i, 0
  %call40 = tail call ptr @bpf_prog_get_type_dev(i32 noundef %fd, i32 noundef 6, i1 noundef zeroext %cmp39) #35
  %cmp.i = icmp ugt ptr %call40, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then42, label %if.then38.if.end45_crit_edge

if.then38.if.end45_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end45

if.then42:                                        ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #37
  %4 = ptrtoint ptr %call40 to i32
  br label %cleanup

if.end45:                                         ; preds = %if.then38.if.end45_crit_edge, %if.end30.if.end45_crit_edge
  %new_prog.0 = phi ptr [ %call40, %if.then38.if.end45_crit_edge ], [ null, %if.end30.if.end45_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %expected_fd)
  %cmp46 = icmp sgt i32 %expected_fd, -1
  br i1 %cmp46, label %if.then47, label %if.end45.if.end54_crit_edge

if.end45.if.end54_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end54

if.then47:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp48 = icmp ne i32 %retval.0.i, 0
  %call49 = tail call ptr @bpf_prog_get_type_dev(i32 noundef %expected_fd, i32 noundef 6, i1 noundef zeroext %cmp48) #35
  %cmp.i83 = icmp ugt ptr %call49, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i83, label %if.then51, label %if.then47.if.end54_crit_edge

if.then47.if.end54_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end54

if.then51:                                        ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #37
  %5 = ptrtoint ptr %call49 to i32
  br label %err_out

if.end54:                                         ; preds = %if.then47.if.end54_crit_edge, %if.end45.if.end54_crit_edge
  %old_prog.0 = phi ptr [ %call49, %if.then47.if.end54_crit_edge ], [ null, %if.end45.if.end54_crit_edge ]
  %call55 = tail call fastcc i32 @dev_xdp_attach(ptr noundef %dev, ptr noundef %extack, ptr noundef null, ptr noundef %new_prog.0, ptr noundef %old_prog.0, i32 noundef %flags)
  br label %err_out

err_out:                                          ; preds = %if.end54, %if.then51
  %old_prog.1 = phi ptr [ null, %if.then51 ], [ %old_prog.0, %if.end54 ]
  %err.0 = phi i32 [ %5, %if.then51 ], [ %call55, %if.end54 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool56.not = icmp eq i32 %err.0, 0
  %tobool57.not = icmp eq ptr %new_prog.0, null
  %or.cond = or i1 %tobool57.not, %tobool56.not
  br i1 %or.cond, label %err_out.if.end59_crit_edge, label %if.then58

err_out.if.end59_crit_edge:                       ; preds = %err_out
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end59

if.then58:                                        ; preds = %err_out
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @bpf_prog_put(ptr noundef nonnull %new_prog.0) #35
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %err_out.if.end59_crit_edge
  %tobool60.not = icmp eq ptr %old_prog.1, null
  br i1 %tobool60.not, label %if.end59.cleanup_crit_edge, label %if.then61

if.end59.cleanup_crit_edge:                       ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then61:                                        ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @bpf_prog_put(ptr noundef nonnull %old_prog.1) #35
  br label %cleanup

cleanup:                                          ; preds = %if.then61, %if.end59.cleanup_crit_edge, %if.then42
  %retval.0 = phi i32 [ %4, %if.then42 ], [ %err.0, %if.then61 ], [ %err.0, %if.end59.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_prog_get_type_dev(i32 noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @dev_xdp_attach(ptr noundef %dev, ptr noundef %extack, ptr noundef %link, ptr noundef %new_prog, ptr noundef readnone %old_prog, i32 noundef %flags) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %flags, 14
  %call.i = tail call i32 @__sw_hweight32(i32 noundef %and) #35
  %call314 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call314)
  %tobool315.not = icmp eq i32 %call314, 0
  br i1 %tobool315.not, label %land.rhs, label %entry.if.end352_crit_edge

entry.if.end352_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end352

land.rhs:                                         ; preds = %entry
  %.b705 = load i1, ptr @dev_xdp_attach.__already_done, align 1
  br i1 %.b705, label %land.rhs.if.end352_crit_edge, label %if.then, !prof !1311

land.rhs.if.end352_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end352

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_xdp_attach.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8771, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 8771) #35
  br label %if.end352

if.end352:                                        ; preds = %if.then, %land.rhs.if.end352_crit_edge, %entry.if.end352_crit_edge
  %tobool360.not = icmp eq ptr %link, null
  br i1 %tobool360.not, label %if.end352.if.end376_crit_edge, label %land.lhs.true

if.end352.if.end376_crit_edge:                    ; preds = %if.end352
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end376

land.lhs.true:                                    ; preds = %if.end352
  %tobool361.not = icmp eq ptr %new_prog, null
  %tobool362.not = icmp eq ptr %old_prog, null
  %or.cond = and i1 %tobool361.not, %tobool362.not
  br i1 %or.cond, label %land.lhs.true366.critedge, label %land.lhs.true.cleanup585_crit_edge

land.lhs.true.cleanup585_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

land.lhs.true366.critedge:                        ; preds = %land.lhs.true
  %and367 = and i32 %flags, -15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and367)
  %tobool368.not = icmp eq i32 %and367, 0
  br i1 %tobool368.not, label %land.lhs.true366.critedge.if.end376_crit_edge, label %do.body370

land.lhs.true366.critedge.if.end376_crit_edge:    ; preds = %land.lhs.true366.critedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end376

do.body370:                                       ; preds = %land.lhs.true366.critedge
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg) #35
  %tobool371.not = icmp eq ptr %extack, null
  br i1 %tobool371.not, label %do.body370.cleanup585_crit_edge, label %if.then372

do.body370.cleanup585_crit_edge:                  ; preds = %do.body370
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then372:                                       ; preds = %do.body370
  call void @__sanitizer_cov_trace_pc() #37
  %0 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @dev_xdp_attach.__msg, ptr %extack, align 4
  br label %cleanup585

if.end376:                                        ; preds = %land.lhs.true366.critedge.if.end376_crit_edge, %if.end352.if.end376_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp = icmp ugt i32 %call.i, 1
  br i1 %cmp, label %do.body379, label %if.end387

do.body379:                                       ; preds = %if.end376
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.183) #35
  %tobool381.not = icmp eq ptr %extack, null
  br i1 %tobool381.not, label %do.body379.cleanup585_crit_edge, label %if.then382

do.body379.cleanup585_crit_edge:                  ; preds = %do.body379
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then382:                                       ; preds = %do.body379
  call void @__sanitizer_cov_trace_pc() #37
  %1 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @dev_xdp_attach.__msg.183, ptr %extack, align 4
  br label %cleanup585

if.end387:                                        ; preds = %if.end376
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool388.not = icmp eq i32 %call.i, 0
  br i1 %tobool388.not, label %land.lhs.true389, label %if.end387.if.end403_crit_edge

if.end387.if.end403_crit_edge:                    ; preds = %if.end387
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end403

land.lhs.true389:                                 ; preds = %if.end387
  %arrayidx.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 0
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %land.lhs.true389.if.then.i_crit_edge

land.lhs.true389.if.then.i_crit_edge:             ; preds = %land.lhs.true389
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true389
  %link.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 0, i32 1
  %4 = ptrtoint ptr %link.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %link.i, align 4
  %tobool3.not.i = icmp eq ptr %5, null
  br i1 %tobool3.not.i, label %lor.lhs.false.i.for.inc.i_crit_edge, label %lor.lhs.false.i.if.then.i_crit_edge

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %land.lhs.true389.if.then.i_crit_edge
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %lor.lhs.false.i.for.inc.i_crit_edge
  %count.1.i = phi i8 [ 1, %if.then.i ], [ 0, %lor.lhs.false.i.for.inc.i_crit_edge ]
  %arrayidx.1.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 1
  %6 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.1.i, align 4
  %tobool.not.1.i = icmp eq ptr %7, null
  br i1 %tobool.not.1.i, label %lor.lhs.false.1.i, label %for.inc.i.if.then.1.i_crit_edge

for.inc.i.if.then.1.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.1.i

lor.lhs.false.1.i:                                ; preds = %for.inc.i
  %link.1.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 1, i32 1
  %8 = ptrtoint ptr %link.1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %link.1.i, align 4
  %tobool3.not.1.i = icmp eq ptr %9, null
  br i1 %tobool3.not.1.i, label %lor.lhs.false.1.i.for.inc.1.i_crit_edge, label %lor.lhs.false.1.i.if.then.1.i_crit_edge

lor.lhs.false.1.i.if.then.1.i_crit_edge:          ; preds = %lor.lhs.false.1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.1.i

lor.lhs.false.1.i.for.inc.1.i_crit_edge:          ; preds = %lor.lhs.false.1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.1.i

if.then.1.i:                                      ; preds = %lor.lhs.false.1.i.if.then.1.i_crit_edge, %for.inc.i.if.then.1.i_crit_edge
  %inc.1.i = add nuw nsw i8 %count.1.i, 1
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %if.then.1.i, %lor.lhs.false.1.i.for.inc.1.i_crit_edge
  %count.1.1.i = phi i8 [ %inc.1.i, %if.then.1.i ], [ %count.1.i, %lor.lhs.false.1.i.for.inc.1.i_crit_edge ]
  %arrayidx.2.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 2
  %10 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx.2.i, align 4
  %tobool.not.2.i = icmp eq ptr %11, null
  br i1 %tobool.not.2.i, label %lor.lhs.false.2.i, label %for.inc.1.i.if.then.2.i_crit_edge

for.inc.1.i.if.then.2.i_crit_edge:                ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.2.i

lor.lhs.false.2.i:                                ; preds = %for.inc.1.i
  %link.2.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 2, i32 1
  %12 = ptrtoint ptr %link.2.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %link.2.i, align 4
  %tobool3.not.2.i = icmp eq ptr %13, null
  br i1 %tobool3.not.2.i, label %lor.lhs.false.2.i.dev_xdp_prog_count.exit_crit_edge, label %lor.lhs.false.2.i.if.then.2.i_crit_edge

lor.lhs.false.2.i.if.then.2.i_crit_edge:          ; preds = %lor.lhs.false.2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.2.i

lor.lhs.false.2.i.dev_xdp_prog_count.exit_crit_edge: ; preds = %lor.lhs.false.2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_prog_count.exit

if.then.2.i:                                      ; preds = %lor.lhs.false.2.i.if.then.2.i_crit_edge, %for.inc.1.i.if.then.2.i_crit_edge
  %inc.2.i = add nuw nsw i8 %count.1.1.i, 1
  br label %dev_xdp_prog_count.exit

dev_xdp_prog_count.exit:                          ; preds = %if.then.2.i, %lor.lhs.false.2.i.dev_xdp_prog_count.exit_crit_edge
  %count.1.2.i = phi i8 [ %inc.2.i, %if.then.2.i ], [ %count.1.1.i, %lor.lhs.false.2.i.dev_xdp_prog_count.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %count.1.2.i)
  %cmp392 = icmp ugt i8 %count.1.2.i, 1
  br i1 %cmp392, label %do.body395, label %dev_xdp_prog_count.exit.if.end403_crit_edge

dev_xdp_prog_count.exit.if.end403_crit_edge:      ; preds = %dev_xdp_prog_count.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end403

do.body395:                                       ; preds = %dev_xdp_prog_count.exit
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.184) #35
  %tobool397.not = icmp eq ptr %extack, null
  br i1 %tobool397.not, label %do.body395.cleanup585_crit_edge, label %if.then398

do.body395.cleanup585_crit_edge:                  ; preds = %do.body395
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then398:                                       ; preds = %do.body395
  call void @__sanitizer_cov_trace_pc() #37
  %14 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @dev_xdp_attach.__msg.184, ptr %extack, align 4
  br label %cleanup585

if.end403:                                        ; preds = %dev_xdp_prog_count.exit.if.end403_crit_edge, %if.end387.if.end403_crit_edge
  %tobool404.not = icmp ne ptr %old_prog, null
  %and406 = and i32 %flags, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and406)
  %tobool407.not = icmp eq i32 %and406, 0
  %or.cond706 = and i1 %tobool404.not, %tobool407.not
  br i1 %or.cond706, label %do.body409, label %if.end417

do.body409:                                       ; preds = %if.end403
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.185) #35
  %tobool411.not = icmp eq ptr %extack, null
  br i1 %tobool411.not, label %do.body409.cleanup585_crit_edge, label %if.then412

do.body409.cleanup585_crit_edge:                  ; preds = %do.body409
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then412:                                       ; preds = %do.body409
  call void @__sanitizer_cov_trace_pc() #37
  %15 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @dev_xdp_attach.__msg.185, ptr %extack, align 4
  br label %cleanup585

if.end417:                                        ; preds = %if.end403
  %and.i = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i710 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i710, label %if.end.i, label %if.end417.dev_xdp_mode.exit_crit_edge

if.end417.dev_xdp_mode.exit_crit_edge:            ; preds = %if.end417
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit

if.end.i:                                         ; preds = %if.end417
  %and1.i = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i.dev_xdp_mode.exit_crit_edge

if.end.i.dev_xdp_mode.exit_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit

if.end4.i:                                        ; preds = %if.end.i
  %and5.i = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.end4.i.dev_xdp_mode.exit_crit_edge

if.end4.i.dev_xdp_mode.exit_crit_edge:            ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit

if.end8.i:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #37
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %16 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_bpf.i = getelementptr inbounds %struct.net_device_ops, ptr %17, i32 0, i32 76
  %18 = ptrtoint ptr %ndo_bpf.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ndo_bpf.i, align 4
  %tobool9.not.i = icmp ne ptr %19, null
  %cond.i = zext i1 %tobool9.not.i to i32
  br label %dev_xdp_mode.exit

dev_xdp_mode.exit:                                ; preds = %if.end8.i, %if.end4.i.dev_xdp_mode.exit_crit_edge, %if.end.i.dev_xdp_mode.exit_crit_edge, %if.end417.dev_xdp_mode.exit_crit_edge
  %retval.0.i = phi i32 [ %cond.i, %if.end8.i ], [ 2, %if.end417.dev_xdp_mode.exit_crit_edge ], [ 1, %if.end.i.dev_xdp_mode.exit_crit_edge ], [ 0, %if.end4.i.dev_xdp_mode.exit_crit_edge ]
  %link.i711 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 %retval.0.i, i32 1
  %20 = ptrtoint ptr %link.i711 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %link.i711, align 4
  %tobool420.not = icmp eq ptr %21, null
  br i1 %tobool420.not, label %if.end430, label %do.body422

do.body422:                                       ; preds = %dev_xdp_mode.exit
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.186) #35
  %tobool424.not = icmp eq ptr %extack, null
  br i1 %tobool424.not, label %do.body422.cleanup585_crit_edge, label %if.then425

do.body422.cleanup585_crit_edge:                  ; preds = %do.body422
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then425:                                       ; preds = %do.body422
  call void @__sanitizer_cov_trace_pc() #37
  %22 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @dev_xdp_attach.__msg.186, ptr %extack, align 4
  br label %cleanup585

if.end430:                                        ; preds = %dev_xdp_mode.exit
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %call.i712 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i712)
  %tobool.not.i713 = icmp eq i32 %call.i712, 0
  br i1 %tobool.not.i713, label %land.rhs.i, label %if.end430.if.end32.i_crit_edge

if.end430.if.end32.i_crit_edge:                   ; preds = %if.end430
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

land.rhs.i:                                       ; preds = %if.end430
  %call1.i = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call1.i, label %land.rhs.i.if.end32.i_crit_edge, label %land.rhs5.i

land.rhs.i.if.end32.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

land.rhs5.i:                                      ; preds = %land.rhs.i
  %.b55.i = load i1, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  br i1 %.b55.i, label %land.rhs5.i.if.end32.i_crit_edge, label %if.then.i714, !prof !1311

land.rhs5.i.if.end32.i_crit_edge:                 ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

if.then.i714:                                     ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6720, i32 noundef 9, ptr noundef null) #35
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then.i714, %land.rhs5.i.if.end32.i_crit_edge, %land.rhs.i.if.end32.i_crit_edge, %if.end430.if.end32.i_crit_edge
  %23 = ptrtoint ptr %adj_list to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %adj_list, align 4
  %cmp.i = icmp eq ptr %24, %adj_list
  br i1 %cmp.i, label %if.end32.i.for.end_crit_edge, label %netdev_upper_get_next_dev_rcu.exit

if.end32.i.for.end_crit_edge:                     ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

netdev_upper_get_next_dev_rcu.exit:               ; preds = %if.end32.i
  %add.ptr.i = getelementptr i8, ptr %24, i32 -16
  %25 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %add.ptr.i, align 4
  %tobool433.not784 = icmp eq ptr %26, null
  br i1 %tobool433.not784, label %netdev_upper_get_next_dev_rcu.exit.for.end_crit_edge, label %netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge

netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge: ; preds = %netdev_upper_get_next_dev_rcu.exit
  br label %for.body

netdev_upper_get_next_dev_rcu.exit.for.end_crit_edge: ; preds = %netdev_upper_get_next_dev_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %netdev_upper_get_next_dev_rcu.exit755.for.body_crit_edge, %netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge
  %upper.0786 = phi ptr [ %43, %netdev_upper_get_next_dev_rcu.exit755.for.body_crit_edge ], [ %26, %netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge ]
  %iter.1785 = phi ptr [ %41, %netdev_upper_get_next_dev_rcu.exit755.for.body_crit_edge ], [ %24, %netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge ]
  %arrayidx.i716 = getelementptr %struct.net_device, ptr %upper.0786, i32 0, i32 154, i32 0
  %27 = ptrtoint ptr %arrayidx.i716 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx.i716, align 4
  %tobool.not.i717 = icmp eq ptr %28, null
  br i1 %tobool.not.i717, label %lor.lhs.false.i720, label %for.body.if.then.i721_crit_edge

for.body.if.then.i721_crit_edge:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i721

lor.lhs.false.i720:                               ; preds = %for.body
  %link.i718 = getelementptr %struct.net_device, ptr %upper.0786, i32 0, i32 154, i32 0, i32 1
  %29 = ptrtoint ptr %link.i718 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %link.i718, align 4
  %tobool3.not.i719 = icmp eq ptr %30, null
  br i1 %tobool3.not.i719, label %lor.lhs.false.i720.for.inc.i725_crit_edge, label %lor.lhs.false.i720.if.then.i721_crit_edge

lor.lhs.false.i720.if.then.i721_crit_edge:        ; preds = %lor.lhs.false.i720
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.i721

lor.lhs.false.i720.for.inc.i725_crit_edge:        ; preds = %lor.lhs.false.i720
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i725

if.then.i721:                                     ; preds = %lor.lhs.false.i720.if.then.i721_crit_edge, %for.body.if.then.i721_crit_edge
  br label %for.inc.i725

for.inc.i725:                                     ; preds = %if.then.i721, %lor.lhs.false.i720.for.inc.i725_crit_edge
  %count.1.i722 = phi i8 [ 1, %if.then.i721 ], [ 0, %lor.lhs.false.i720.for.inc.i725_crit_edge ]
  %arrayidx.1.i723 = getelementptr %struct.net_device, ptr %upper.0786, i32 0, i32 154, i32 1
  %31 = ptrtoint ptr %arrayidx.1.i723 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx.1.i723, align 4
  %tobool.not.1.i724 = icmp eq ptr %32, null
  br i1 %tobool.not.1.i724, label %lor.lhs.false.1.i728, label %for.inc.i725.if.then.1.i730_crit_edge

for.inc.i725.if.then.1.i730_crit_edge:            ; preds = %for.inc.i725
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.1.i730

lor.lhs.false.1.i728:                             ; preds = %for.inc.i725
  %link.1.i726 = getelementptr %struct.net_device, ptr %upper.0786, i32 0, i32 154, i32 1, i32 1
  %33 = ptrtoint ptr %link.1.i726 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %link.1.i726, align 4
  %tobool3.not.1.i727 = icmp eq ptr %34, null
  br i1 %tobool3.not.1.i727, label %lor.lhs.false.1.i728.for.inc.1.i734_crit_edge, label %lor.lhs.false.1.i728.if.then.1.i730_crit_edge

lor.lhs.false.1.i728.if.then.1.i730_crit_edge:    ; preds = %lor.lhs.false.1.i728
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then.1.i730

lor.lhs.false.1.i728.for.inc.1.i734_crit_edge:    ; preds = %lor.lhs.false.1.i728
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.1.i734

if.then.1.i730:                                   ; preds = %lor.lhs.false.1.i728.if.then.1.i730_crit_edge, %for.inc.i725.if.then.1.i730_crit_edge
  br label %for.inc.1.i734

for.inc.1.i734:                                   ; preds = %if.then.1.i730, %lor.lhs.false.1.i728.for.inc.1.i734_crit_edge
  %count.1.1.i731 = phi i8 [ 1, %if.then.1.i730 ], [ %count.1.i722, %lor.lhs.false.1.i728.for.inc.1.i734_crit_edge ]
  %arrayidx.2.i732 = getelementptr %struct.net_device, ptr %upper.0786, i32 0, i32 154, i32 2
  %35 = ptrtoint ptr %arrayidx.2.i732 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.2.i732, align 4
  %tobool.not.2.i733 = icmp eq ptr %36, null
  br i1 %tobool.not.2.i733, label %lor.lhs.false.2.i737, label %for.inc.1.i734.do.body439_crit_edge

for.inc.1.i734.do.body439_crit_edge:              ; preds = %for.inc.1.i734
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body439

lor.lhs.false.2.i737:                             ; preds = %for.inc.1.i734
  %link.2.i735 = getelementptr %struct.net_device, ptr %upper.0786, i32 0, i32 154, i32 2, i32 1
  %37 = ptrtoint ptr %link.2.i735 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %link.2.i735, align 4
  %tobool3.not.2.i736 = icmp eq ptr %38, null
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %count.1.1.i731)
  %cmp436.not = icmp eq i8 %count.1.1.i731, 0
  %or.cond782 = and i1 %cmp436.not, %tobool3.not.2.i736
  br i1 %or.cond782, label %for.inc, label %lor.lhs.false.2.i737.do.body439_crit_edge

lor.lhs.false.2.i737.do.body439_crit_edge:        ; preds = %lor.lhs.false.2.i737
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body439

do.body439:                                       ; preds = %lor.lhs.false.2.i737.do.body439_crit_edge, %for.inc.1.i734.do.body439_crit_edge
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.187) #35
  %tobool441.not = icmp eq ptr %extack, null
  br i1 %tobool441.not, label %do.body439.cleanup585_crit_edge, label %if.then442

do.body439.cleanup585_crit_edge:                  ; preds = %do.body439
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then442:                                       ; preds = %do.body439
  call void @__sanitizer_cov_trace_pc() #37
  %39 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @dev_xdp_attach.__msg.187, ptr %extack, align 4
  br label %cleanup585

for.inc:                                          ; preds = %lor.lhs.false.2.i737
  %call.i742 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i742)
  %tobool.not.i743 = icmp eq i32 %call.i742, 0
  br i1 %tobool.not.i743, label %land.rhs.i745, label %for.inc.if.end32.i751_crit_edge

for.inc.if.end32.i751_crit_edge:                  ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i751

land.rhs.i745:                                    ; preds = %for.inc
  %call1.i744 = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call1.i744, label %land.rhs.i745.if.end32.i751_crit_edge, label %land.rhs5.i747

land.rhs.i745.if.end32.i751_crit_edge:            ; preds = %land.rhs.i745
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i751

land.rhs5.i747:                                   ; preds = %land.rhs.i745
  %.b55.i746 = load i1, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  br i1 %.b55.i746, label %land.rhs5.i747.if.end32.i751_crit_edge, label %if.then.i748, !prof !1311

land.rhs5.i747.if.end32.i751_crit_edge:           ; preds = %land.rhs5.i747
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i751

if.then.i748:                                     ; preds = %land.rhs5.i747
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6720, i32 noundef 9, ptr noundef null) #35
  br label %if.end32.i751

if.end32.i751:                                    ; preds = %if.then.i748, %land.rhs5.i747.if.end32.i751_crit_edge, %land.rhs.i745.if.end32.i751_crit_edge, %for.inc.if.end32.i751_crit_edge
  %40 = ptrtoint ptr %iter.1785 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile ptr, ptr %iter.1785, align 4
  %cmp.i750 = icmp eq ptr %41, %adj_list
  br i1 %cmp.i750, label %if.end32.i751.for.end_crit_edge, label %netdev_upper_get_next_dev_rcu.exit755

if.end32.i751.for.end_crit_edge:                  ; preds = %if.end32.i751
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

netdev_upper_get_next_dev_rcu.exit755:            ; preds = %if.end32.i751
  %add.ptr.i752 = getelementptr i8, ptr %41, i32 -16
  %42 = ptrtoint ptr %add.ptr.i752 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %add.ptr.i752, align 4
  %tobool433.not = icmp eq ptr %43, null
  br i1 %tobool433.not, label %netdev_upper_get_next_dev_rcu.exit755.for.end_crit_edge, label %netdev_upper_get_next_dev_rcu.exit755.for.body_crit_edge

netdev_upper_get_next_dev_rcu.exit755.for.body_crit_edge: ; preds = %netdev_upper_get_next_dev_rcu.exit755
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

netdev_upper_get_next_dev_rcu.exit755.for.end_crit_edge: ; preds = %netdev_upper_get_next_dev_rcu.exit755
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %netdev_upper_get_next_dev_rcu.exit755.for.end_crit_edge, %if.end32.i751.for.end_crit_edge, %netdev_upper_get_next_dev_rcu.exit.for.end_crit_edge, %if.end32.i.for.end_crit_edge
  %44 = ptrtoint ptr %link.i711 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %link.i711, align 4
  %tobool.not.i756 = icmp eq ptr %45, null
  %prog.i = getelementptr inbounds %struct.bpf_link, ptr %45, i32 0, i32 4
  %arrayidx.i757 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 %retval.0.i
  %retval.0.in.i = select i1 %tobool.not.i756, ptr %arrayidx.i757, ptr %prog.i
  %46 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %retval.0.i758 = load ptr, ptr %retval.0.in.i, align 4
  %tobool452.not = icmp eq ptr %retval.0.i758, null
  %or.cond707 = select i1 %tobool360.not, i1 true, i1 %tobool452.not
  br i1 %or.cond707, label %if.end462, label %do.body454

do.body454:                                       ; preds = %for.end
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.188) #35
  %tobool456.not = icmp eq ptr %extack, null
  br i1 %tobool456.not, label %do.body454.cleanup585_crit_edge, label %if.then457

do.body454.cleanup585_crit_edge:                  ; preds = %do.body454
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then457:                                       ; preds = %do.body454
  call void @__sanitizer_cov_trace_pc() #37
  %47 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @dev_xdp_attach.__msg.188, ptr %extack, align 4
  br label %cleanup585

if.end462:                                        ; preds = %for.end
  %cmp466.not = icmp eq ptr %retval.0.i758, %old_prog
  %or.cond708 = select i1 %tobool407.not, i1 true, i1 %cmp466.not
  br i1 %or.cond708, label %if.end477, label %do.body469

do.body469:                                       ; preds = %if.end462
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.189) #35
  %tobool471.not = icmp eq ptr %extack, null
  br i1 %tobool471.not, label %do.body469.cleanup585_crit_edge, label %if.then472

do.body469.cleanup585_crit_edge:                  ; preds = %do.body469
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then472:                                       ; preds = %do.body469
  call void @__sanitizer_cov_trace_pc() #37
  %48 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @dev_xdp_attach.__msg.189, ptr %extack, align 4
  br label %cleanup585

if.end477:                                        ; preds = %if.end462
  br i1 %tobool360.not, label %if.end477.if.end481_crit_edge, label %if.then479

if.end477.if.end481_crit_edge:                    ; preds = %if.end477
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end481

if.then479:                                       ; preds = %if.end477
  call void @__sanitizer_cov_trace_pc() #37
  %prog = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 4
  %49 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %prog, align 4
  br label %if.end481

if.end481:                                        ; preds = %if.then479, %if.end477.if.end481_crit_edge
  %new_prog.addr.0. = phi ptr [ null, %if.then479 ], [ %new_prog, %if.end477.if.end481_crit_edge ]
  %new_prog.addr.0 = phi ptr [ %50, %if.then479 ], [ %new_prog, %if.end477.if.end481_crit_edge ]
  %tobool482.not = icmp eq ptr %new_prog.addr.0, null
  br i1 %tobool482.not, label %if.end481.if.end558_crit_edge, label %if.then483

if.end481.if.end558_crit_edge:                    ; preds = %if.end481
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end558

if.then483:                                       ; preds = %if.end481
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp487 = icmp eq i32 %retval.0.i, 0
  %cond489 = zext i1 %cmp487 to i32
  %and490 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and490)
  %tobool491.not = icmp eq i32 %and490, 0
  %or.cond709 = select i1 %tobool491.not, i1 true, i1 %tobool452.not
  br i1 %or.cond709, label %if.end503, label %do.body495

do.body495:                                       ; preds = %if.then483
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.190) #35
  %tobool497.not = icmp eq ptr %extack, null
  br i1 %tobool497.not, label %do.body495.cleanup585_crit_edge, label %if.then498

do.body495.cleanup585_crit_edge:                  ; preds = %do.body495
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then498:                                       ; preds = %do.body495
  call void @__sanitizer_cov_trace_pc() #37
  %51 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @dev_xdp_attach.__msg.190, ptr %extack, align 4
  br label %cleanup585

if.end503:                                        ; preds = %if.then483
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %retval.0.i)
  %cmp484 = icmp eq i32 %retval.0.i, 2
  br i1 %cmp484, label %if.end503.if.end531_crit_edge, label %land.lhs.true505

if.end503.if.end531_crit_edge:                    ; preds = %if.end503
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end531

land.lhs.true505:                                 ; preds = %if.end503
  %link.i.i759 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 %cond489, i32 1
  %52 = ptrtoint ptr %link.i.i759 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %link.i.i759, align 4
  %tobool.not.i760 = icmp eq ptr %53, null
  %prog.i761 = getelementptr inbounds %struct.bpf_link, ptr %53, i32 0, i32 4
  %arrayidx.i762 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 %cond489
  %retval.0.in.i763 = select i1 %tobool.not.i760, ptr %arrayidx.i762, ptr %prog.i761
  %54 = ptrtoint ptr %retval.0.in.i763 to i32
  call void @__asan_load4_noabort(i32 %54)
  %retval.0.i764 = load ptr, ptr %retval.0.in.i763, align 4
  %tobool507.not = icmp eq ptr %retval.0.i764, null
  br i1 %tobool507.not, label %land.lhs.true519.critedge, label %do.body509

do.body509:                                       ; preds = %land.lhs.true505
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.191) #35
  %tobool511.not = icmp eq ptr %extack, null
  br i1 %tobool511.not, label %do.body509.cleanup585_crit_edge, label %if.then512

do.body509.cleanup585_crit_edge:                  ; preds = %do.body509
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then512:                                       ; preds = %do.body509
  call void @__sanitizer_cov_trace_pc() #37
  %55 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr @dev_xdp_attach.__msg.191, ptr %extack, align 4
  br label %cleanup585

land.lhs.true519.critedge:                        ; preds = %land.lhs.true505
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %new_prog.addr.0, i32 0, i32 10
  %56 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %aux, align 4
  %offload_requested.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %57, i32 0, i32 22
  %58 = ptrtoint ptr %offload_requested.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %offload_requested.i, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool.i.not = icmp eq i8 %59, 0
  br i1 %tobool.i.not, label %land.lhs.true519.critedge.if.end531_crit_edge, label %do.body523

land.lhs.true519.critedge.if.end531_crit_edge:    ; preds = %land.lhs.true519.critedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end531

do.body523:                                       ; preds = %land.lhs.true519.critedge
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.192) #35
  %tobool525.not = icmp eq ptr %extack, null
  br i1 %tobool525.not, label %do.body523.cleanup585_crit_edge, label %if.then526

do.body523.cleanup585_crit_edge:                  ; preds = %do.body523
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then526:                                       ; preds = %do.body523
  call void @__sanitizer_cov_trace_pc() #37
  %60 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr @dev_xdp_attach.__msg.192, ptr %extack, align 4
  br label %cleanup585

if.end531:                                        ; preds = %land.lhs.true519.critedge.if.end531_crit_edge, %if.end503.if.end531_crit_edge
  %expected_attach_type = getelementptr inbounds %struct.bpf_prog, ptr %new_prog.addr.0, i32 0, i32 3
  %61 = ptrtoint ptr %expected_attach_type to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %expected_attach_type, align 4
  %63 = zext i32 %62 to i64
  call void @__sanitizer_cov_trace_switch(i64 %63, ptr @__sancov_gen_cov_switch_values.309)
  switch i32 %62, label %if.end531.if.end558_crit_edge [
    i32 33, label %do.body535
    i32 35, label %do.body548
  ]

if.end531.if.end558_crit_edge:                    ; preds = %if.end531
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end558

do.body535:                                       ; preds = %if.end531
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.193) #35
  %tobool537.not = icmp eq ptr %extack, null
  br i1 %tobool537.not, label %do.body535.cleanup585_crit_edge, label %if.then538

do.body535.cleanup585_crit_edge:                  ; preds = %do.body535
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then538:                                       ; preds = %do.body535
  call void @__sanitizer_cov_trace_pc() #37
  %64 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr @dev_xdp_attach.__msg.193, ptr %extack, align 4
  br label %cleanup585

do.body548:                                       ; preds = %if.end531
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.194) #35
  %tobool550.not = icmp eq ptr %extack, null
  br i1 %tobool550.not, label %do.body548.cleanup585_crit_edge, label %if.then551

do.body548.cleanup585_crit_edge:                  ; preds = %do.body548
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then551:                                       ; preds = %do.body548
  call void @__sanitizer_cov_trace_pc() #37
  %65 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr @dev_xdp_attach.__msg.194, ptr %extack, align 4
  br label %cleanup585

if.end558:                                        ; preds = %if.end531.if.end558_crit_edge, %if.end481.if.end558_crit_edge
  %cmp559.not = icmp eq ptr %new_prog.addr.0, %retval.0.i758
  br i1 %cmp559.not, label %if.end558.if.end578_crit_edge, label %if.then561

if.end558.if.end578_crit_edge:                    ; preds = %if.end558
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end578

if.then561:                                       ; preds = %if.end558
  %66 = zext i32 %retval.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %66, ptr @__sancov_gen_cov_switch_values.310)
  switch i32 %retval.0.i, label %if.then561.do.body565_crit_edge [
    i32 0, label %if.then561.if.end573_crit_edge
    i32 1, label %if.then561.dev_xdp_bpf_op.exit_crit_edge
    i32 2, label %if.then561.dev_xdp_bpf_op.exit_crit_edge797
  ]

if.then561.dev_xdp_bpf_op.exit_crit_edge797:      ; preds = %if.then561
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_bpf_op.exit

if.then561.dev_xdp_bpf_op.exit_crit_edge:         ; preds = %if.then561
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_bpf_op.exit

if.then561.if.end573_crit_edge:                   ; preds = %if.then561
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end573

if.then561.do.body565_crit_edge:                  ; preds = %if.then561
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body565

dev_xdp_bpf_op.exit:                              ; preds = %if.then561.dev_xdp_bpf_op.exit_crit_edge, %if.then561.dev_xdp_bpf_op.exit_crit_edge797
  %netdev_ops.i765 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %67 = ptrtoint ptr %netdev_ops.i765 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %netdev_ops.i765, align 8
  %ndo_bpf.i766 = getelementptr inbounds %struct.net_device_ops, ptr %68, i32 0, i32 76
  %69 = ptrtoint ptr %ndo_bpf.i766 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %ndo_bpf.i766, align 4
  %tobool563.not = icmp eq ptr %70, null
  br i1 %tobool563.not, label %dev_xdp_bpf_op.exit.do.body565_crit_edge, label %dev_xdp_bpf_op.exit.if.end573_crit_edge

dev_xdp_bpf_op.exit.if.end573_crit_edge:          ; preds = %dev_xdp_bpf_op.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end573

dev_xdp_bpf_op.exit.do.body565_crit_edge:         ; preds = %dev_xdp_bpf_op.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body565

do.body565:                                       ; preds = %dev_xdp_bpf_op.exit.do.body565_crit_edge, %if.then561.do.body565_crit_edge
  tail call void @do_trace_netlink_extack(ptr noundef nonnull @dev_xdp_attach.__msg.195) #35
  %tobool567.not = icmp eq ptr %extack, null
  br i1 %tobool567.not, label %do.body565.cleanup585_crit_edge, label %if.then568

do.body565.cleanup585_crit_edge:                  ; preds = %do.body565
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then568:                                       ; preds = %do.body565
  call void @__sanitizer_cov_trace_pc() #37
  %71 = ptrtoint ptr %extack to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr @dev_xdp_attach.__msg.195, ptr %extack, align 4
  br label %cleanup585

if.end573:                                        ; preds = %dev_xdp_bpf_op.exit.if.end573_crit_edge, %if.then561.if.end573_crit_edge
  %retval.0.i767781 = phi ptr [ %70, %dev_xdp_bpf_op.exit.if.end573_crit_edge ], [ @generic_xdp_install, %if.then561.if.end573_crit_edge ]
  %call574 = tail call fastcc i32 @dev_xdp_install(ptr noundef %dev, i32 noundef %retval.0.i, ptr noundef nonnull %retval.0.i767781, ptr noundef %extack, i32 noundef %flags, ptr noundef %new_prog.addr.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call574)
  %tobool575.not = icmp eq i32 %call574, 0
  br i1 %tobool575.not, label %if.end573.if.end578_crit_edge, label %if.end573.cleanup585_crit_edge

if.end573.cleanup585_crit_edge:                   ; preds = %if.end573
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.end573.if.end578_crit_edge:                    ; preds = %if.end573
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end578

if.end578:                                        ; preds = %if.end573.if.end578_crit_edge, %if.end558.if.end578_crit_edge
  %72 = ptrtoint ptr %link.i711 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %link, ptr %link.i711, align 4
  %73 = ptrtoint ptr %arrayidx.i757 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %new_prog.addr.0., ptr %arrayidx.i757, align 4
  br i1 %tobool452.not, label %if.end578.cleanup585_crit_edge, label %if.then583

if.end578.cleanup585_crit_edge:                   ; preds = %if.end578
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup585

if.then583:                                       ; preds = %if.end578
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @bpf_prog_put(ptr noundef nonnull %retval.0.i758) #35
  br label %cleanup585

cleanup585:                                       ; preds = %if.then583, %if.end578.cleanup585_crit_edge, %if.end573.cleanup585_crit_edge, %if.then568, %do.body565.cleanup585_crit_edge, %if.then551, %do.body548.cleanup585_crit_edge, %if.then538, %do.body535.cleanup585_crit_edge, %if.then526, %do.body523.cleanup585_crit_edge, %if.then512, %do.body509.cleanup585_crit_edge, %if.then498, %do.body495.cleanup585_crit_edge, %if.then472, %do.body469.cleanup585_crit_edge, %if.then457, %do.body454.cleanup585_crit_edge, %if.then442, %do.body439.cleanup585_crit_edge, %if.then425, %do.body422.cleanup585_crit_edge, %if.then412, %do.body409.cleanup585_crit_edge, %if.then398, %do.body395.cleanup585_crit_edge, %if.then382, %do.body379.cleanup585_crit_edge, %if.then372, %do.body370.cleanup585_crit_edge, %land.lhs.true.cleanup585_crit_edge
  %retval.1 = phi i32 [ -22, %land.lhs.true.cleanup585_crit_edge ], [ -22, %if.then372 ], [ -22, %do.body370.cleanup585_crit_edge ], [ -22, %if.then382 ], [ -22, %do.body379.cleanup585_crit_edge ], [ -22, %if.then398 ], [ -22, %do.body395.cleanup585_crit_edge ], [ -22, %if.then412 ], [ -22, %do.body409.cleanup585_crit_edge ], [ -16, %if.then425 ], [ -16, %do.body422.cleanup585_crit_edge ], [ -17, %if.then442 ], [ -17, %do.body439.cleanup585_crit_edge ], [ -16, %if.then457 ], [ -16, %do.body454.cleanup585_crit_edge ], [ -17, %if.then472 ], [ -17, %do.body469.cleanup585_crit_edge ], [ -95, %if.then568 ], [ -95, %do.body565.cleanup585_crit_edge ], [ %call574, %if.end573.cleanup585_crit_edge ], [ 0, %if.then583 ], [ 0, %if.end578.cleanup585_crit_edge ], [ -22, %do.body548.cleanup585_crit_edge ], [ -22, %if.then551 ], [ -22, %do.body535.cleanup585_crit_edge ], [ -22, %if.then538 ], [ -22, %do.body523.cleanup585_crit_edge ], [ -22, %if.then526 ], [ -17, %do.body509.cleanup585_crit_edge ], [ -17, %if.then512 ], [ -16, %do.body495.cleanup585_crit_edge ], [ -16, %if.then498 ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_put(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__netdev_update_features(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  %info.i.i.i309 = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i283 = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i263 = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i243 = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i218 = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %feature.i = alloca i64, align 8
  %features = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %features) #35
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b183 = load i1, ptr @__netdev_update_features.__already_done, align 1
  br i1 %.b183, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netdev_update_features.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9300, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 9300) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %features.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %0 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %features.i, align 16
  %hw_features.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 24
  %2 = ptrtoint ptr %hw_features.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %hw_features.i, align 8
  %neg.i = xor i64 %3, -1
  %and.i = and i64 %1, %neg.i
  %wanted_features.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 25
  %4 = ptrtoint ptr %wanted_features.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %wanted_features.i, align 32
  %or.i = or i64 %and.i, %5
  %6 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %or.i, ptr %features, align 8
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %7 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %netdev_ops, align 8
  %ndo_fix_features = getelementptr inbounds %struct.net_device_ops, ptr %8, i32 0, i32 55
  %9 = ptrtoint ptr %ndo_fix_features to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ndo_fix_features, align 4
  %tobool38.not = icmp eq ptr %10, null
  br i1 %tobool38.not, label %if.end29.if.end43_crit_edge, label %if.then39

if.end29.if.end43_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end43

if.then39:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  %call42 = tail call i64 %10(ptr noundef %dev, i64 noundef %or.i) #35
  %11 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %call42, ptr %features, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %if.end29.if.end43_crit_edge
  %12 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %features, align 8
  %call44 = tail call fastcc i64 @netdev_fix_features(ptr noundef %dev, i64 noundef %13)
  %14 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %call44, ptr %features, align 8
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %call.i = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end43.if.end32.i_crit_edge

if.end43.if.end32.i_crit_edge:                    ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

land.rhs.i:                                       ; preds = %if.end43
  %call1.i = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call1.i, label %land.rhs.i.if.end32.i_crit_edge, label %land.rhs5.i

land.rhs.i.if.end32.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

land.rhs5.i:                                      ; preds = %land.rhs.i
  %.b55.i = load i1, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  br i1 %.b55.i, label %land.rhs5.i.if.end32.i_crit_edge, label %if.then.i, !prof !1311

land.rhs5.i.if.end32.i_crit_edge:                 ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i

if.then.i:                                        ; preds = %land.rhs5.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6720, i32 noundef 9, ptr noundef null) #35
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then.i, %land.rhs5.i.if.end32.i_crit_edge, %land.rhs.i.if.end32.i_crit_edge, %if.end43.if.end32.i_crit_edge
  %15 = ptrtoint ptr %adj_list to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %adj_list, align 4
  %cmp.i = icmp eq ptr %16, %adj_list
  br i1 %cmp.i, label %if.end32.i.for.end_crit_edge, label %netdev_upper_get_next_dev_rcu.exit

if.end32.i.for.end_crit_edge:                     ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

netdev_upper_get_next_dev_rcu.exit:               ; preds = %if.end32.i
  %add.ptr.i = getelementptr i8, ptr %16, i32 -16
  %17 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %add.ptr.i, align 4
  %tobool47.not336 = icmp eq ptr %18, null
  br i1 %tobool47.not336, label %netdev_upper_get_next_dev_rcu.exit.for.end_crit_edge, label %netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge

netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge: ; preds = %netdev_upper_get_next_dev_rcu.exit
  br label %for.body

netdev_upper_get_next_dev_rcu.exit.for.end_crit_edge: ; preds = %netdev_upper_get_next_dev_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %netdev_upper_get_next_dev_rcu.exit202.for.body_crit_edge, %netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge
  %upper.0338 = phi ptr [ %30, %netdev_upper_get_next_dev_rcu.exit202.for.body_crit_edge ], [ %18, %netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge ]
  %iter.1337 = phi ptr [ %28, %netdev_upper_get_next_dev_rcu.exit202.for.body_crit_edge ], [ %16, %netdev_upper_get_next_dev_rcu.exit.for.body_crit_edge ]
  %19 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %features, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %feature.i) #35
  %wanted_features.i185 = getelementptr inbounds %struct.net_device, ptr %upper.0338, i32 0, i32 25
  %21 = ptrtoint ptr %feature.i to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 32768, ptr %feature.i, align 8
  %22 = ptrtoint ptr %wanted_features.i185 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %wanted_features.i185, align 32
  %and.i186 = and i64 %23, 32768
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i186)
  %tobool.not.i187 = icmp ne i64 %and.i186, 0
  %and1.i = and i64 %20, 32768
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i)
  %tobool2.not.i = icmp eq i64 %and1.i, 0
  %or.cond.i = or i1 %tobool2.not.i, %tobool.not.i187
  br i1 %or.cond.i, label %for.body.netdev_sync_upper_features.exit_crit_edge, label %do.body3.i

for.body.netdev_sync_upper_features.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_sync_upper_features.exit

do.body3.i:                                       ; preds = %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_sync_upper_features.__UNIQUE_ID_ddebug939, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__netdev_update_features, %if.then8.i)) #35
          to label %do.end10.i [label %if.then8.i], !srcloc !1328

if.then8.i:                                       ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_sync_upper_features.__UNIQUE_ID_ddebug939, ptr noundef %dev, ptr noundef nonnull @.str.210, ptr noundef nonnull %feature.i, ptr noundef nonnull %upper.0338) #35
  br label %do.end10.i

do.end10.i:                                       ; preds = %if.then8.i, %do.body3.i
  %24 = ptrtoint ptr %feature.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %feature.i, align 8
  %neg.i188 = xor i64 %25, -1
  %and11.i = and i64 %20, %neg.i188
  br label %netdev_sync_upper_features.exit

netdev_sync_upper_features.exit:                  ; preds = %do.end10.i, %for.body.netdev_sync_upper_features.exit_crit_edge
  %features.addr.1.i = phi i64 [ %20, %for.body.netdev_sync_upper_features.exit_crit_edge ], [ %and11.i, %do.end10.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %feature.i) #35
  %26 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %features.addr.1.i, ptr %features, align 8
  %call.i189 = call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i189)
  %tobool.not.i190 = icmp eq i32 %call.i189, 0
  br i1 %tobool.not.i190, label %land.rhs.i192, label %netdev_sync_upper_features.exit.if.end32.i198_crit_edge

netdev_sync_upper_features.exit.if.end32.i198_crit_edge: ; preds = %netdev_sync_upper_features.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i198

land.rhs.i192:                                    ; preds = %netdev_sync_upper_features.exit
  %call1.i191 = call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call1.i191, label %land.rhs.i192.if.end32.i198_crit_edge, label %land.rhs5.i194

land.rhs.i192.if.end32.i198_crit_edge:            ; preds = %land.rhs.i192
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i198

land.rhs5.i194:                                   ; preds = %land.rhs.i192
  %.b55.i193 = load i1, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  br i1 %.b55.i193, label %land.rhs5.i194.if.end32.i198_crit_edge, label %if.then.i195, !prof !1311

land.rhs5.i194.if.end32.i198_crit_edge:           ; preds = %land.rhs5.i194
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end32.i198

if.then.i195:                                     ; preds = %land.rhs5.i194
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_upper_get_next_dev_rcu.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6720, i32 noundef 9, ptr noundef null) #35
  br label %if.end32.i198

if.end32.i198:                                    ; preds = %if.then.i195, %land.rhs5.i194.if.end32.i198_crit_edge, %land.rhs.i192.if.end32.i198_crit_edge, %netdev_sync_upper_features.exit.if.end32.i198_crit_edge
  %27 = ptrtoint ptr %iter.1337 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %iter.1337, align 4
  %cmp.i197 = icmp eq ptr %28, %adj_list
  br i1 %cmp.i197, label %if.end32.i198.for.end_crit_edge, label %netdev_upper_get_next_dev_rcu.exit202

if.end32.i198.for.end_crit_edge:                  ; preds = %if.end32.i198
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

netdev_upper_get_next_dev_rcu.exit202:            ; preds = %if.end32.i198
  %add.ptr.i199 = getelementptr i8, ptr %28, i32 -16
  %29 = ptrtoint ptr %add.ptr.i199 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %add.ptr.i199, align 4
  %tobool47.not = icmp eq ptr %30, null
  br i1 %tobool47.not, label %netdev_upper_get_next_dev_rcu.exit202.for.end_crit_edge, label %netdev_upper_get_next_dev_rcu.exit202.for.body_crit_edge

netdev_upper_get_next_dev_rcu.exit202.for.body_crit_edge: ; preds = %netdev_upper_get_next_dev_rcu.exit202
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

netdev_upper_get_next_dev_rcu.exit202.for.end_crit_edge: ; preds = %netdev_upper_get_next_dev_rcu.exit202
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %netdev_upper_get_next_dev_rcu.exit202.for.end_crit_edge, %if.end32.i198.for.end_crit_edge, %netdev_upper_get_next_dev_rcu.exit.for.end_crit_edge, %if.end32.i.for.end_crit_edge
  %31 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %features.i, align 16
  %33 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %features, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %32, i64 %34)
  %cmp = icmp eq i64 %32, %34
  br i1 %cmp, label %for.end.sync_lower_crit_edge, label %do.body54

for.end.sync_lower_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %sync_lower

do.body54:                                        ; preds = %for.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__netdev_update_features.__UNIQUE_ID_ddebug952, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__netdev_update_features, %if.then65)) #35
          to label %do.end71 [label %if.then65], !srcloc !1328

if.then65:                                        ; preds = %do.body54
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @__netdev_update_features.__UNIQUE_ID_ddebug952, ptr noundef %dev, ptr noundef nonnull @.str.69, ptr noundef %features.i, ptr noundef nonnull %features) #35
  br label %do.end71

do.end71:                                         ; preds = %if.then65, %do.body54
  %35 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %netdev_ops, align 8
  %ndo_set_features = getelementptr inbounds %struct.net_device_ops, ptr %36, i32 0, i32 56
  %37 = ptrtoint ptr %ndo_set_features to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %ndo_set_features, align 4
  %tobool73.not = icmp eq ptr %38, null
  br i1 %tobool73.not, label %do.end71.sync_lower_crit_edge, label %if.end78

do.end71.sync_lower_crit_edge:                    ; preds = %do.end71
  call void @__sanitizer_cov_trace_pc() #37
  br label %sync_lower

if.end78:                                         ; preds = %do.end71
  %39 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %features, align 8
  %call77 = call i32 %38(ptr noundef %dev, i64 noundef %40) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %cmp79 = icmp slt i32 %call77, 0
  br i1 %cmp79, label %if.then86, label %if.end78.sync_lower_crit_edge, !prof !1310

if.end78.sync_lower_crit_edge:                    ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #37
  br label %sync_lower

if.then86:                                        ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.70, i32 noundef %call77, ptr noundef nonnull %features, ptr noundef %features.i) #43
  br label %cleanup

sync_lower:                                       ; preds = %if.end78.sync_lower_crit_edge, %do.end71.sync_lower_crit_edge, %for.end.sync_lower_crit_edge
  %err.1 = phi i32 [ -1, %for.end.sync_lower_crit_edge ], [ %call77, %if.end78.sync_lower_crit_edge ], [ 0, %do.end71.sync_lower_crit_edge ]
  %lower90 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %41 = ptrtoint ptr %lower90 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %lower90, align 8
  %cmp.i203 = icmp eq ptr %42, %lower90
  br i1 %cmp.i203, label %sync_lower.for.end97_crit_edge, label %netdev_lower_get_next.exit

sync_lower.for.end97_crit_edge:                   ; preds = %sync_lower
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end97

netdev_lower_get_next.exit:                       ; preds = %sync_lower
  %add.ptr.i204 = getelementptr i8, ptr %42, i32 -16
  %43 = ptrtoint ptr %add.ptr.i204 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %add.ptr.i204, align 4
  %tobool93.not339 = icmp eq ptr %44, null
  br i1 %tobool93.not339, label %netdev_lower_get_next.exit.for.end97_crit_edge, label %netdev_lower_get_next.exit.for.body94_crit_edge

netdev_lower_get_next.exit.for.body94_crit_edge:  ; preds = %netdev_lower_get_next.exit
  br label %for.body94

netdev_lower_get_next.exit.for.end97_crit_edge:   ; preds = %netdev_lower_get_next.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end97

for.body94:                                       ; preds = %netdev_lower_get_next.exit211.for.body94_crit_edge, %netdev_lower_get_next.exit.for.body94_crit_edge
  %lower.0341 = phi ptr [ %49, %netdev_lower_get_next.exit211.for.body94_crit_edge ], [ %44, %netdev_lower_get_next.exit.for.body94_crit_edge ]
  %iter.4340.in = phi ptr [ %iter.4340, %netdev_lower_get_next.exit211.for.body94_crit_edge ], [ %42, %netdev_lower_get_next.exit.for.body94_crit_edge ]
  %45 = ptrtoint ptr %iter.4340.in to i32
  call void @__asan_load4_noabort(i32 %45)
  %iter.4340 = load ptr, ptr %iter.4340.in, align 4
  %46 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %features, align 8
  call fastcc void @netdev_sync_lower_features(ptr noundef %dev, ptr noundef nonnull %lower.0341, i64 noundef %47)
  %cmp.i207 = icmp eq ptr %iter.4340, %lower90
  br i1 %cmp.i207, label %for.body94.for.end97_crit_edge, label %netdev_lower_get_next.exit211

for.body94.for.end97_crit_edge:                   ; preds = %for.body94
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end97

netdev_lower_get_next.exit211:                    ; preds = %for.body94
  %add.ptr.i208 = getelementptr i8, ptr %iter.4340, i32 -16
  %48 = ptrtoint ptr %add.ptr.i208 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %add.ptr.i208, align 4
  %tobool93.not = icmp eq ptr %49, null
  br i1 %tobool93.not, label %netdev_lower_get_next.exit211.for.end97_crit_edge, label %netdev_lower_get_next.exit211.for.body94_crit_edge

netdev_lower_get_next.exit211.for.body94_crit_edge: ; preds = %netdev_lower_get_next.exit211
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body94

netdev_lower_get_next.exit211.for.end97_crit_edge: ; preds = %netdev_lower_get_next.exit211
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end97

for.end97:                                        ; preds = %netdev_lower_get_next.exit211.for.end97_crit_edge, %for.body94.for.end97_crit_edge, %netdev_lower_get_next.exit.for.end97_crit_edge, %sync_lower.for.end97_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.1)
  %tobool98.not = icmp eq i32 %err.1, 0
  br i1 %tobool98.not, label %if.then99, label %for.end97.if.end134_crit_edge

for.end97.if.end134_crit_edge:                    ; preds = %for.end97
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end134

if.then99:                                        ; preds = %for.end97
  %50 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %features, align 8
  %52 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %features.i, align 16
  %xor = xor i64 %53, %51
  %and = and i64 %xor, 4503599627370496
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool101.not = icmp eq i64 %and, 0
  br i1 %tobool101.not, label %if.then99.if.end109_crit_edge, label %if.then102

if.then99.if.end109_crit_edge:                    ; preds = %if.then99
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end109

if.then102:                                       ; preds = %if.then99
  %and103 = and i64 %51, 4503599627370496
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and103)
  %tobool104.not = icmp eq i64 %and103, 0
  br i1 %tobool104.not, label %if.else107, label %if.then105

if.then105:                                       ; preds = %if.then102
  %54 = ptrtoint ptr %features.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %51, ptr %features.i, align 16
  %call.i212 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i212)
  %tobool.not.i213 = icmp eq i32 %call.i212, 0
  br i1 %tobool.not.i213, label %land.rhs.i214, label %if.then105.if.end29.i_crit_edge

if.then105.if.end29.i_crit_edge:                  ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

land.rhs.i214:                                    ; preds = %if.then105
  %.b44.i = load i1, ptr @udp_tunnel_get_rx_info.__already_done, align 1
  br i1 %.b44.i, label %land.rhs.i214.if.end29.i_crit_edge, label %if.then.i215, !prof !1311

land.rhs.i214.if.end29.i_crit_edge:               ; preds = %land.rhs.i214
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

if.then.i215:                                     ; preds = %land.rhs.i214
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @udp_tunnel_get_rx_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.214, i32 noundef 131, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.214, i32 noundef 131) #35
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then.i215, %land.rhs.i214.if.end29.i_crit_edge, %if.then105.if.end29.i_crit_edge
  %55 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %features.i, align 16
  %and.i217 = and i64 %56, 4503599627370496
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i217)
  %tobool37.not.i = icmp eq i64 %and.i217, 0
  br i1 %tobool37.not.i, label %if.end29.i.if.end109_crit_edge, label %if.end39.i

if.end29.i.if.end109_crit_edge:                   ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end109

if.end39.i:                                       ; preds = %if.end29.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i) #35
  %57 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i, i32 0, i32 1
  %58 = ptrtoint ptr %info.i.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %dev, ptr %info.i.i.i, align 4
  %59 = ptrtoint ptr %57 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr null, ptr %57, align 4
  %nd_net.i.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %60 = ptrtoint ptr %nd_net.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %nd_net.i.i.i.i.i, align 4
  %call1.i.i.i.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.rhs.i.i.i.i, label %if.end39.i.if.end30.i.i.i.i_crit_edge

if.end39.i.if.end30.i.i.i.i_crit_edge:            ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.end39.i
  %.b50.i.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i, label %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge:      ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i

if.end30.i.i.i.i:                                 ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, %if.end39.i.if.end30.i.i.i.i_crit_edge
  %netdev_chain.i.i.i.i = getelementptr inbounds %struct.net, ptr %61, i32 0, i32 25
  %call38.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i, i32 noundef 28, ptr noundef nonnull %info.i.i.i) #35
  %and.i.i.i.i = and i32 %call38.i.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool39.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool39.not.i.i.i.i, label %if.end41.i.i.i.i, label %if.end30.i.i.i.i.call_netdevice_notifiers.exit.i_crit_edge

if.end30.i.i.i.i.call_netdevice_notifiers.exit.i_crit_edge: ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit.i

if.end41.i.i.i.i:                                 ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 28, ptr noundef nonnull %info.i.i.i) #35
  br label %call_netdevice_notifiers.exit.i

call_netdevice_notifiers.exit.i:                  ; preds = %if.end41.i.i.i.i, %if.end30.i.i.i.i.call_netdevice_notifiers.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i) #35
  br label %if.end109

if.else107:                                       ; preds = %if.then102
  %call.i219 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i219)
  %tobool.not.i220 = icmp eq i32 %call.i219, 0
  br i1 %tobool.not.i220, label %land.rhs.i222, label %if.else107.if.end29.i227_crit_edge

if.else107.if.end29.i227_crit_edge:               ; preds = %if.else107
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i227

land.rhs.i222:                                    ; preds = %if.else107
  %.b44.i221 = load i1, ptr @udp_tunnel_drop_rx_info.__already_done, align 1
  br i1 %.b44.i221, label %land.rhs.i222.if.end29.i227_crit_edge, label %if.then.i223, !prof !1311

land.rhs.i222.if.end29.i227_crit_edge:            ; preds = %land.rhs.i222
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i227

if.then.i223:                                     ; preds = %land.rhs.i222
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @udp_tunnel_drop_rx_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.214, i32 noundef 139, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.214, i32 noundef 139) #35
  br label %if.end29.i227

if.end29.i227:                                    ; preds = %if.then.i223, %land.rhs.i222.if.end29.i227_crit_edge, %if.else107.if.end29.i227_crit_edge
  %62 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %features.i, align 16
  %and.i225 = and i64 %63, 4503599627370496
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i225)
  %tobool37.not.i226 = icmp eq i64 %and.i225, 0
  br i1 %tobool37.not.i226, label %if.end29.i227.if.end109_crit_edge, label %if.end39.i231

if.end29.i227.if.end109_crit_edge:                ; preds = %if.end29.i227
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end109

if.end39.i231:                                    ; preds = %if.end29.i227
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i218) #35
  %64 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i218, i32 0, i32 1
  %65 = ptrtoint ptr %info.i.i.i218 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %dev, ptr %info.i.i.i218, align 4
  %66 = ptrtoint ptr %64 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %64, align 4
  %nd_net.i.i.i.i.i228 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %67 = ptrtoint ptr %nd_net.i.i.i.i.i228 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %nd_net.i.i.i.i.i228, align 4
  %call1.i.i.i.i229 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i229)
  %tobool.not.i.i.i.i230 = icmp eq i32 %call1.i.i.i.i229, 0
  br i1 %tobool.not.i.i.i.i230, label %land.rhs.i.i.i.i233, label %if.end39.i231.if.end30.i.i.i.i239_crit_edge

if.end39.i231.if.end30.i.i.i.i239_crit_edge:      ; preds = %if.end39.i231
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i239

land.rhs.i.i.i.i233:                              ; preds = %if.end39.i231
  %.b50.i.i.i.i232 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i232, label %land.rhs.i.i.i.i233.if.end30.i.i.i.i239_crit_edge, label %if.then.i.i.i.i234, !prof !1311

land.rhs.i.i.i.i233.if.end30.i.i.i.i239_crit_edge: ; preds = %land.rhs.i.i.i.i233
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i239

if.then.i.i.i.i234:                               ; preds = %land.rhs.i.i.i.i233
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i239

if.end30.i.i.i.i239:                              ; preds = %if.then.i.i.i.i234, %land.rhs.i.i.i.i233.if.end30.i.i.i.i239_crit_edge, %if.end39.i231.if.end30.i.i.i.i239_crit_edge
  %netdev_chain.i.i.i.i235 = getelementptr inbounds %struct.net, ptr %68, i32 0, i32 25
  %call38.i.i.i.i236 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i235, i32 noundef 29, ptr noundef nonnull %info.i.i.i218) #35
  %and.i.i.i.i237 = and i32 %call38.i.i.i.i236, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i237)
  %tobool39.not.i.i.i.i238 = icmp eq i32 %and.i.i.i.i237, 0
  br i1 %tobool39.not.i.i.i.i238, label %if.end41.i.i.i.i241, label %if.end30.i.i.i.i239.call_netdevice_notifiers.exit.i242_crit_edge

if.end30.i.i.i.i239.call_netdevice_notifiers.exit.i242_crit_edge: ; preds = %if.end30.i.i.i.i239
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit.i242

if.end41.i.i.i.i241:                              ; preds = %if.end30.i.i.i.i239
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i240 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 29, ptr noundef nonnull %info.i.i.i218) #35
  br label %call_netdevice_notifiers.exit.i242

call_netdevice_notifiers.exit.i242:               ; preds = %if.end41.i.i.i.i241, %if.end30.i.i.i.i239.call_netdevice_notifiers.exit.i242_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i218) #35
  br label %if.end109

if.end109:                                        ; preds = %call_netdevice_notifiers.exit.i242, %if.end29.i227.if.end109_crit_edge, %call_netdevice_notifiers.exit.i, %if.end29.i.if.end109_crit_edge, %if.then99.if.end109_crit_edge
  %and110 = and i64 %xor, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and110)
  %tobool111.not = icmp eq i64 %and110, 0
  br i1 %tobool111.not, label %if.end109.if.end120_crit_edge, label %if.then112

if.end109.if.end120_crit_edge:                    ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end120

if.then112:                                       ; preds = %if.end109
  %69 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %features, align 8
  %and113 = and i64 %70, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and113)
  %tobool114.not = icmp eq i64 %and113, 0
  br i1 %tobool114.not, label %if.else118, label %if.then115

if.then115:                                       ; preds = %if.then112
  %71 = ptrtoint ptr %features.i to i32
  call void @__asan_store8_noabort(i32 %71)
  store i64 %70, ptr %features.i, align 16
  %call.i244 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i244)
  %tobool.not.i245 = icmp eq i32 %call.i244, 0
  br i1 %tobool.not.i245, label %land.rhs.i246, label %if.then115.if.end29.i251_crit_edge

if.then115.if.end29.i251_crit_edge:               ; preds = %if.then115
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i251

land.rhs.i246:                                    ; preds = %if.then115
  %.b41.i = load i1, ptr @vlan_get_rx_ctag_filter_info.__already_done, align 1
  br i1 %.b41.i, label %land.rhs.i246.if.end29.i251_crit_edge, label %if.then.i247, !prof !1311

land.rhs.i246.if.end29.i251_crit_edge:            ; preds = %land.rhs.i246
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i251

if.then.i247:                                     ; preds = %land.rhs.i246
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @vlan_get_rx_ctag_filter_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.116, i32 noundef 87, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.116, i32 noundef 87) #35
  br label %if.end29.i251

if.end29.i251:                                    ; preds = %if.then.i247, %land.rhs.i246.if.end29.i251_crit_edge, %if.then115.if.end29.i251_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i243) #35
  %72 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i243, i32 0, i32 1
  %73 = ptrtoint ptr %info.i.i.i243 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %dev, ptr %info.i.i.i243, align 4
  %74 = ptrtoint ptr %72 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr null, ptr %72, align 4
  %nd_net.i.i.i.i.i248 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %75 = ptrtoint ptr %nd_net.i.i.i.i.i248 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %nd_net.i.i.i.i.i248, align 4
  %call1.i.i.i.i249 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i249)
  %tobool.not.i.i.i.i250 = icmp eq i32 %call1.i.i.i.i249, 0
  br i1 %tobool.not.i.i.i.i250, label %land.rhs.i.i.i.i253, label %if.end29.i251.if.end30.i.i.i.i259_crit_edge

if.end29.i251.if.end30.i.i.i.i259_crit_edge:      ; preds = %if.end29.i251
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i259

land.rhs.i.i.i.i253:                              ; preds = %if.end29.i251
  %.b50.i.i.i.i252 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i252, label %land.rhs.i.i.i.i253.if.end30.i.i.i.i259_crit_edge, label %if.then.i.i.i.i254, !prof !1311

land.rhs.i.i.i.i253.if.end30.i.i.i.i259_crit_edge: ; preds = %land.rhs.i.i.i.i253
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i259

if.then.i.i.i.i254:                               ; preds = %land.rhs.i.i.i.i253
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i259

if.end30.i.i.i.i259:                              ; preds = %if.then.i.i.i.i254, %land.rhs.i.i.i.i253.if.end30.i.i.i.i259_crit_edge, %if.end29.i251.if.end30.i.i.i.i259_crit_edge
  %netdev_chain.i.i.i.i255 = getelementptr inbounds %struct.net, ptr %76, i32 0, i32 25
  %call38.i.i.i.i256 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i255, i32 noundef 31, ptr noundef nonnull %info.i.i.i243) #35
  %and.i.i.i.i257 = and i32 %call38.i.i.i.i256, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i257)
  %tobool39.not.i.i.i.i258 = icmp eq i32 %and.i.i.i.i257, 0
  br i1 %tobool39.not.i.i.i.i258, label %if.end41.i.i.i.i261, label %if.end30.i.i.i.i259.vlan_get_rx_ctag_filter_info.exit_crit_edge

if.end30.i.i.i.i259.vlan_get_rx_ctag_filter_info.exit_crit_edge: ; preds = %if.end30.i.i.i.i259
  call void @__sanitizer_cov_trace_pc() #37
  br label %vlan_get_rx_ctag_filter_info.exit

if.end41.i.i.i.i261:                              ; preds = %if.end30.i.i.i.i259
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i260 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 31, ptr noundef nonnull %info.i.i.i243) #35
  br label %vlan_get_rx_ctag_filter_info.exit

vlan_get_rx_ctag_filter_info.exit:                ; preds = %if.end41.i.i.i.i261, %if.end30.i.i.i.i259.vlan_get_rx_ctag_filter_info.exit_crit_edge
  %retval.0.i.i.i.i = phi i32 [ %call42.i.i.i.i260, %if.end41.i.i.i.i261 ], [ %call38.i.i.i.i256, %if.end30.i.i.i.i259.vlan_get_rx_ctag_filter_info.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i243) #35
  %and.i.i = and i32 %retval.0.i.i.i.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp.i.i = icmp sgt i32 %and.i.i, 1
  %sub.i.i = sub i32 1, %and.i.i
  %spec.select.i.i = select i1 %cmp.i.i, i32 %sub.i.i, i32 0
  br label %if.end120

if.else118:                                       ; preds = %if.then112
  %call.i264 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i264)
  %tobool.not.i265 = icmp eq i32 %call.i264, 0
  br i1 %tobool.not.i265, label %land.rhs.i266, label %if.else118.if.end29.i271_crit_edge

if.else118.if.end29.i271_crit_edge:               ; preds = %if.else118
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i271

land.rhs.i266:                                    ; preds = %if.else118
  %.b40.i = load i1, ptr @vlan_drop_rx_ctag_filter_info.__already_done, align 1
  br i1 %.b40.i, label %land.rhs.i266.if.end29.i271_crit_edge, label %if.then.i267, !prof !1311

land.rhs.i266.if.end29.i271_crit_edge:            ; preds = %land.rhs.i266
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i271

if.then.i267:                                     ; preds = %land.rhs.i266
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @vlan_drop_rx_ctag_filter_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.116, i32 noundef 93, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.116, i32 noundef 93) #35
  br label %if.end29.i271

if.end29.i271:                                    ; preds = %if.then.i267, %land.rhs.i266.if.end29.i271_crit_edge, %if.else118.if.end29.i271_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i263) #35
  %77 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i263, i32 0, i32 1
  %78 = ptrtoint ptr %info.i.i.i263 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %dev, ptr %info.i.i.i263, align 4
  %79 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr null, ptr %77, align 4
  %nd_net.i.i.i.i.i268 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %80 = ptrtoint ptr %nd_net.i.i.i.i.i268 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %nd_net.i.i.i.i.i268, align 4
  %call1.i.i.i.i269 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i269)
  %tobool.not.i.i.i.i270 = icmp eq i32 %call1.i.i.i.i269, 0
  br i1 %tobool.not.i.i.i.i270, label %land.rhs.i.i.i.i273, label %if.end29.i271.if.end30.i.i.i.i279_crit_edge

if.end29.i271.if.end30.i.i.i.i279_crit_edge:      ; preds = %if.end29.i271
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i279

land.rhs.i.i.i.i273:                              ; preds = %if.end29.i271
  %.b50.i.i.i.i272 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i272, label %land.rhs.i.i.i.i273.if.end30.i.i.i.i279_crit_edge, label %if.then.i.i.i.i274, !prof !1311

land.rhs.i.i.i.i273.if.end30.i.i.i.i279_crit_edge: ; preds = %land.rhs.i.i.i.i273
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i279

if.then.i.i.i.i274:                               ; preds = %land.rhs.i.i.i.i273
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i279

if.end30.i.i.i.i279:                              ; preds = %if.then.i.i.i.i274, %land.rhs.i.i.i.i273.if.end30.i.i.i.i279_crit_edge, %if.end29.i271.if.end30.i.i.i.i279_crit_edge
  %netdev_chain.i.i.i.i275 = getelementptr inbounds %struct.net, ptr %81, i32 0, i32 25
  %call38.i.i.i.i276 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i275, i32 noundef 32, ptr noundef nonnull %info.i.i.i263) #35
  %and.i.i.i.i277 = and i32 %call38.i.i.i.i276, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i277)
  %tobool39.not.i.i.i.i278 = icmp eq i32 %and.i.i.i.i277, 0
  br i1 %tobool39.not.i.i.i.i278, label %if.end41.i.i.i.i281, label %if.end30.i.i.i.i279.vlan_drop_rx_ctag_filter_info.exit_crit_edge

if.end30.i.i.i.i279.vlan_drop_rx_ctag_filter_info.exit_crit_edge: ; preds = %if.end30.i.i.i.i279
  call void @__sanitizer_cov_trace_pc() #37
  br label %vlan_drop_rx_ctag_filter_info.exit

if.end41.i.i.i.i281:                              ; preds = %if.end30.i.i.i.i279
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i280 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 32, ptr noundef nonnull %info.i.i.i263) #35
  br label %vlan_drop_rx_ctag_filter_info.exit

vlan_drop_rx_ctag_filter_info.exit:               ; preds = %if.end41.i.i.i.i281, %if.end30.i.i.i.i279.vlan_drop_rx_ctag_filter_info.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i263) #35
  br label %if.end120

if.end120:                                        ; preds = %vlan_drop_rx_ctag_filter_info.exit, %vlan_get_rx_ctag_filter_info.exit, %if.end109.if.end120_crit_edge
  %err.2 = phi i32 [ %spec.select.i.i, %vlan_get_rx_ctag_filter_info.exit ], [ 0, %vlan_drop_rx_ctag_filter_info.exit ], [ 0, %if.end109.if.end120_crit_edge ]
  %and121 = and i64 %xor, 140737488355328
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and121)
  %tobool122.not = icmp eq i64 %and121, 0
  br i1 %tobool122.not, label %if.end120.if.end132_crit_edge, label %if.then123

if.end120.if.end132_crit_edge:                    ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end132

if.then123:                                       ; preds = %if.end120
  %82 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %features, align 8
  %and124 = and i64 %83, 140737488355328
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and124)
  %tobool125.not = icmp eq i64 %and124, 0
  br i1 %tobool125.not, label %if.else130, label %if.then126

if.then126:                                       ; preds = %if.then123
  %84 = ptrtoint ptr %features.i to i32
  call void @__asan_store8_noabort(i32 %84)
  store i64 %83, ptr %features.i, align 16
  %call.i284 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i284)
  %tobool.not.i285 = icmp eq i32 %call.i284, 0
  br i1 %tobool.not.i285, label %land.rhs.i287, label %if.then126.if.end29.i292_crit_edge

if.then126.if.end29.i292_crit_edge:               ; preds = %if.then126
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i292

land.rhs.i287:                                    ; preds = %if.then126
  %.b41.i286 = load i1, ptr @vlan_get_rx_stag_filter_info.__already_done, align 1
  br i1 %.b41.i286, label %land.rhs.i287.if.end29.i292_crit_edge, label %if.then.i288, !prof !1311

land.rhs.i287.if.end29.i292_crit_edge:            ; preds = %land.rhs.i287
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i292

if.then.i288:                                     ; preds = %land.rhs.i287
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @vlan_get_rx_stag_filter_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.116, i32 noundef 99, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.116, i32 noundef 99) #35
  br label %if.end29.i292

if.end29.i292:                                    ; preds = %if.then.i288, %land.rhs.i287.if.end29.i292_crit_edge, %if.then126.if.end29.i292_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i283) #35
  %85 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i283, i32 0, i32 1
  %86 = ptrtoint ptr %info.i.i.i283 to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %dev, ptr %info.i.i.i283, align 4
  %87 = ptrtoint ptr %85 to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr null, ptr %85, align 4
  %nd_net.i.i.i.i.i289 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %88 = ptrtoint ptr %nd_net.i.i.i.i.i289 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %nd_net.i.i.i.i.i289, align 4
  %call1.i.i.i.i290 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i290)
  %tobool.not.i.i.i.i291 = icmp eq i32 %call1.i.i.i.i290, 0
  br i1 %tobool.not.i.i.i.i291, label %land.rhs.i.i.i.i294, label %if.end29.i292.if.end30.i.i.i.i300_crit_edge

if.end29.i292.if.end30.i.i.i.i300_crit_edge:      ; preds = %if.end29.i292
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i300

land.rhs.i.i.i.i294:                              ; preds = %if.end29.i292
  %.b50.i.i.i.i293 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i293, label %land.rhs.i.i.i.i294.if.end30.i.i.i.i300_crit_edge, label %if.then.i.i.i.i295, !prof !1311

land.rhs.i.i.i.i294.if.end30.i.i.i.i300_crit_edge: ; preds = %land.rhs.i.i.i.i294
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i300

if.then.i.i.i.i295:                               ; preds = %land.rhs.i.i.i.i294
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i300

if.end30.i.i.i.i300:                              ; preds = %if.then.i.i.i.i295, %land.rhs.i.i.i.i294.if.end30.i.i.i.i300_crit_edge, %if.end29.i292.if.end30.i.i.i.i300_crit_edge
  %netdev_chain.i.i.i.i296 = getelementptr inbounds %struct.net, ptr %89, i32 0, i32 25
  %call38.i.i.i.i297 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i296, i32 noundef 33, ptr noundef nonnull %info.i.i.i283) #35
  %and.i.i.i.i298 = and i32 %call38.i.i.i.i297, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i298)
  %tobool39.not.i.i.i.i299 = icmp eq i32 %and.i.i.i.i298, 0
  br i1 %tobool39.not.i.i.i.i299, label %if.end41.i.i.i.i302, label %if.end30.i.i.i.i300.vlan_get_rx_stag_filter_info.exit_crit_edge

if.end30.i.i.i.i300.vlan_get_rx_stag_filter_info.exit_crit_edge: ; preds = %if.end30.i.i.i.i300
  call void @__sanitizer_cov_trace_pc() #37
  br label %vlan_get_rx_stag_filter_info.exit

if.end41.i.i.i.i302:                              ; preds = %if.end30.i.i.i.i300
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i301 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 33, ptr noundef nonnull %info.i.i.i283) #35
  br label %vlan_get_rx_stag_filter_info.exit

vlan_get_rx_stag_filter_info.exit:                ; preds = %if.end41.i.i.i.i302, %if.end30.i.i.i.i300.vlan_get_rx_stag_filter_info.exit_crit_edge
  %retval.0.i.i.i.i303 = phi i32 [ %call42.i.i.i.i301, %if.end41.i.i.i.i302 ], [ %call38.i.i.i.i297, %if.end30.i.i.i.i300.vlan_get_rx_stag_filter_info.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i283) #35
  %and.i.i304 = and i32 %retval.0.i.i.i.i303, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i304)
  %cmp.i.i305 = icmp sgt i32 %and.i.i304, 1
  %sub.i.i306 = sub i32 1, %and.i.i304
  %spec.select.i.i307 = select i1 %cmp.i.i305, i32 %sub.i.i306, i32 0
  %or129 = or i32 %spec.select.i.i307, %err.2
  br label %if.end132

if.else130:                                       ; preds = %if.then123
  %call.i310 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i310)
  %tobool.not.i311 = icmp eq i32 %call.i310, 0
  br i1 %tobool.not.i311, label %land.rhs.i313, label %if.else130.if.end29.i318_crit_edge

if.else130.if.end29.i318_crit_edge:               ; preds = %if.else130
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i318

land.rhs.i313:                                    ; preds = %if.else130
  %.b40.i312 = load i1, ptr @vlan_drop_rx_stag_filter_info.__already_done, align 1
  br i1 %.b40.i312, label %land.rhs.i313.if.end29.i318_crit_edge, label %if.then.i314, !prof !1311

land.rhs.i313.if.end29.i318_crit_edge:            ; preds = %land.rhs.i313
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i318

if.then.i314:                                     ; preds = %land.rhs.i313
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @vlan_drop_rx_stag_filter_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.116, i32 noundef 105, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.116, i32 noundef 105) #35
  br label %if.end29.i318

if.end29.i318:                                    ; preds = %if.then.i314, %land.rhs.i313.if.end29.i318_crit_edge, %if.else130.if.end29.i318_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i309) #35
  %90 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i309, i32 0, i32 1
  %91 = ptrtoint ptr %info.i.i.i309 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %dev, ptr %info.i.i.i309, align 4
  %92 = ptrtoint ptr %90 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr null, ptr %90, align 4
  %nd_net.i.i.i.i.i315 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %93 = ptrtoint ptr %nd_net.i.i.i.i.i315 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %nd_net.i.i.i.i.i315, align 4
  %call1.i.i.i.i316 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i316)
  %tobool.not.i.i.i.i317 = icmp eq i32 %call1.i.i.i.i316, 0
  br i1 %tobool.not.i.i.i.i317, label %land.rhs.i.i.i.i320, label %if.end29.i318.if.end30.i.i.i.i326_crit_edge

if.end29.i318.if.end30.i.i.i.i326_crit_edge:      ; preds = %if.end29.i318
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i326

land.rhs.i.i.i.i320:                              ; preds = %if.end29.i318
  %.b50.i.i.i.i319 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i319, label %land.rhs.i.i.i.i320.if.end30.i.i.i.i326_crit_edge, label %if.then.i.i.i.i321, !prof !1311

land.rhs.i.i.i.i320.if.end30.i.i.i.i326_crit_edge: ; preds = %land.rhs.i.i.i.i320
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i326

if.then.i.i.i.i321:                               ; preds = %land.rhs.i.i.i.i320
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i326

if.end30.i.i.i.i326:                              ; preds = %if.then.i.i.i.i321, %land.rhs.i.i.i.i320.if.end30.i.i.i.i326_crit_edge, %if.end29.i318.if.end30.i.i.i.i326_crit_edge
  %netdev_chain.i.i.i.i322 = getelementptr inbounds %struct.net, ptr %94, i32 0, i32 25
  %call38.i.i.i.i323 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i322, i32 noundef 34, ptr noundef nonnull %info.i.i.i309) #35
  %and.i.i.i.i324 = and i32 %call38.i.i.i.i323, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i324)
  %tobool39.not.i.i.i.i325 = icmp eq i32 %and.i.i.i.i324, 0
  br i1 %tobool39.not.i.i.i.i325, label %if.end41.i.i.i.i328, label %if.end30.i.i.i.i326.vlan_drop_rx_stag_filter_info.exit_crit_edge

if.end30.i.i.i.i326.vlan_drop_rx_stag_filter_info.exit_crit_edge: ; preds = %if.end30.i.i.i.i326
  call void @__sanitizer_cov_trace_pc() #37
  br label %vlan_drop_rx_stag_filter_info.exit

if.end41.i.i.i.i328:                              ; preds = %if.end30.i.i.i.i326
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i327 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 34, ptr noundef nonnull %info.i.i.i309) #35
  br label %vlan_drop_rx_stag_filter_info.exit

vlan_drop_rx_stag_filter_info.exit:               ; preds = %if.end41.i.i.i.i328, %if.end30.i.i.i.i326.vlan_drop_rx_stag_filter_info.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i309) #35
  br label %if.end132

if.end132:                                        ; preds = %vlan_drop_rx_stag_filter_info.exit, %vlan_get_rx_stag_filter_info.exit, %if.end120.if.end132_crit_edge
  %err.3 = phi i32 [ %or129, %vlan_get_rx_stag_filter_info.exit ], [ %err.2, %vlan_drop_rx_stag_filter_info.exit ], [ %err.2, %if.end120.if.end132_crit_edge ]
  %95 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %features, align 8
  %97 = ptrtoint ptr %features.i to i32
  call void @__asan_store8_noabort(i32 %97)
  store i64 %96, ptr %features.i, align 16
  br label %if.end134

if.end134:                                        ; preds = %if.end132, %for.end97.if.end134_crit_edge
  %err.4 = phi i32 [ %err.1, %for.end97.if.end134_crit_edge ], [ %err.3, %if.end132 ]
  %98 = xor i32 %err.4, -1
  %err.4.lobit.not = lshr i32 %98, 31
  br label %cleanup

cleanup:                                          ; preds = %if.end134, %if.then86
  %retval.0 = phi i32 [ %err.4.lobit.not, %if.end134 ], [ -1, %if.then86 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %features) #35
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @netdev_fix_features(ptr noundef %dev, i64 noundef %features) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i64 %features, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  %and1 = and i64 %features, 18
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1)
  %tobool2.not = icmp eq i64 %and1, 0
  %or.cond = or i1 %tobool.not, %tobool2.not
  br i1 %or.cond, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %dev, ptr noundef nonnull @.str.196) #43
  %and3 = and i64 %features, -19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %features.addr.0 = phi i64 [ %and3, %if.then ], [ %features, %entry.if.end_crit_edge ]
  %and4 = and i64 %features.addr.0, 1900544
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and4)
  %tobool5.not = icmp ne i64 %and4, 0
  %and7 = and i64 %features.addr.0, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and7)
  %tobool8.not = icmp eq i64 %and7, 0
  %or.cond356 = and i1 %tobool5.not, %tobool8.not
  br i1 %or.cond356, label %do.body10, label %if.end.if.end18_crit_edge

if.end.if.end18_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end18

do.body10:                                        ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug941, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then14)) #35
          to label %do.end16 [label %if.then14], !srcloc !1328

if.then14:                                        ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug941, ptr noundef %dev, ptr noundef nonnull @.str.198) #35
  br label %do.end16

do.end16:                                         ; preds = %if.then14, %do.body10
  %and17 = and i64 %features.addr.0, -1900545
  br label %if.end18

if.end18:                                         ; preds = %do.end16, %if.end.if.end18_crit_edge
  %features.addr.1 = phi i64 [ %and17, %do.end16 ], [ %features.addr.0, %if.end.if.end18_crit_edge ]
  %0 = and i64 %features.addr.1, 65546
  call void @__sanitizer_cov_trace_const_cmp8(i64 65536, i64 %0)
  %1 = icmp eq i64 %0, 65536
  br i1 %1, label %do.body29, label %if.end18.if.end47_crit_edge

if.end18.if.end47_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end47

do.body29:                                        ; preds = %if.end18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug942, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then41)) #35
          to label %do.end44 [label %if.then41], !srcloc !1328

if.then41:                                        ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug942, ptr noundef %dev, ptr noundef nonnull @.str.199) #35
  br label %do.end44

do.end44:                                         ; preds = %if.then41, %do.body29
  %and46 = and i64 %features.addr.1, -327681
  br label %if.end47

if.end47:                                         ; preds = %do.end44, %if.end18.if.end47_crit_edge
  %features.addr.2 = phi i64 [ %and46, %do.end44 ], [ %features.addr.1, %if.end18.if.end47_crit_edge ]
  %2 = and i64 %features.addr.2, 1048600
  call void @__sanitizer_cov_trace_const_cmp8(i64 1048576, i64 %2)
  %3 = icmp eq i64 %2, 1048576
  br i1 %3, label %do.body58, label %if.end47.if.end75_crit_edge

if.end47.if.end75_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end75

do.body58:                                        ; preds = %if.end47
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug943, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then70)) #35
          to label %do.end73 [label %if.then70], !srcloc !1328

if.then70:                                        ; preds = %do.body58
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug943, ptr noundef %dev, ptr noundef nonnull @.str.200) #35
  br label %do.end73

do.end73:                                         ; preds = %if.then70, %do.body58
  %and74 = and i64 %features.addr.2, -1048577
  br label %if.end75

if.end75:                                         ; preds = %do.end73, %if.end47.if.end75_crit_edge
  %features.addr.3 = phi i64 [ %and74, %do.end73 ], [ %features.addr.2, %if.end47.if.end75_crit_edge ]
  %4 = and i64 %features.addr.3, 589824
  call void @__sanitizer_cov_trace_const_cmp8(i64 524288, i64 %4)
  %5 = icmp eq i64 %4, 524288
  %and82 = and i64 %features.addr.3, -524289
  %features.addr.4 = select i1 %5, i64 %and82, i64 %features.addr.3
  %and84 = and i64 %features.addr.4, 1900544
  call void @__sanitizer_cov_trace_const_cmp8(i64 262144, i64 %and84)
  %cmp = icmp eq i64 %and84, 262144
  %and86 = and i64 %features.addr.4, -262145
  %features.addr.5 = select i1 %cmp, i64 %and86, i64 %features.addr.4
  %6 = and i64 %features.addr.5, 2049
  call void @__sanitizer_cov_trace_const_cmp8(i64 2048, i64 %6)
  %7 = icmp eq i64 %6, 2048
  br i1 %7, label %do.body95, label %if.end75.if.end112_crit_edge

if.end75.if.end112_crit_edge:                     ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end112

do.body95:                                        ; preds = %if.end75
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug944, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then107)) #35
          to label %do.end110 [label %if.then107], !srcloc !1328

if.then107:                                       ; preds = %do.body95
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug944, ptr noundef %dev, ptr noundef nonnull @.str.201) #35
  br label %do.end110

do.end110:                                        ; preds = %if.then107, %do.body95
  %and111 = and i64 %features.addr.5, -2049
  br label %if.end112

if.end112:                                        ; preds = %do.end110, %if.end75.if.end112_crit_edge
  %features.addr.6 = phi i64 [ %and111, %do.end110 ], [ %features.addr.5, %if.end75.if.end112_crit_edge ]
  %gso_partial_features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 29
  %8 = ptrtoint ptr %gso_partial_features to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %gso_partial_features, align 64
  %and113 = and i64 %9, %features.addr.6
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and113)
  %tobool114.not = icmp ne i64 %and113, 0
  %and116 = and i64 %features.addr.6, 268435456
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and116)
  %tobool117.not = icmp eq i64 %and116, 0
  %or.cond363 = and i1 %tobool117.not, %tobool114.not
  br i1 %or.cond363, label %do.body120, label %if.end112.if.end138_crit_edge

if.end112.if.end138_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end138

do.body120:                                       ; preds = %if.end112
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug945, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then132)) #35
          to label %do.end135 [label %if.then132], !srcloc !1328

if.then132:                                       ; preds = %do.body120
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug945, ptr noundef %dev, ptr noundef nonnull @.str.202) #35
  br label %do.end135

do.end135:                                        ; preds = %if.then132, %do.body120
  %10 = ptrtoint ptr %gso_partial_features to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %gso_partial_features, align 64
  %neg = xor i64 %11, -1
  %and137 = and i64 %features.addr.6, %neg
  br label %if.end138

if.end138:                                        ; preds = %do.end135, %if.end112.if.end138_crit_edge
  %features.addr.7 = phi i64 [ %and137, %do.end135 ], [ %features.addr.6, %if.end112.if.end138_crit_edge ]
  %12 = and i64 %features.addr.7, 36029896530591744
  call void @__sanitizer_cov_trace_const_cmp8(i64 36028797018963968, i64 %12)
  %.not = icmp eq i64 %12, 36028797018963968
  br i1 %.not, label %do.body146, label %if.end138.if.end164_crit_edge

if.end138.if.end164_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end164

do.body146:                                       ; preds = %if.end138
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug946, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then158)) #35
          to label %do.end161 [label %if.then158], !srcloc !1328

if.then158:                                       ; preds = %do.body146
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug946, ptr noundef %dev, ptr noundef nonnull @.str.203) #35
  br label %do.end161

do.end161:                                        ; preds = %if.then158, %do.body146
  %and162 = and i64 %features.addr.7, -36028797018963969
  br label %if.end164

if.end164:                                        ; preds = %do.end161, %if.end138.if.end164_crit_edge
  %features.addr.8 = phi i64 [ %features.addr.7, %if.end138.if.end164_crit_edge ], [ %and162, %do.end161 ]
  %and165 = and i64 %features.addr.8, 8796093022208
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and165)
  %tobool166.not = icmp eq i64 %and165, 0
  br i1 %tobool166.not, label %if.end164.if.end212_crit_edge, label %if.then167

if.end164.if.end212_crit_edge:                    ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end212

if.then167:                                       ; preds = %if.end164
  %and168 = and i64 %features.addr.8, 32768
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and168)
  %tobool169.not = icmp eq i64 %and168, 0
  br i1 %tobool169.not, label %if.then167.if.end189_crit_edge, label %do.body172

if.then167.if.end189_crit_edge:                   ; preds = %if.then167
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end189

do.body172:                                       ; preds = %if.then167
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug947, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then184)) #35
          to label %do.end187 [label %if.then184], !srcloc !1328

if.then184:                                       ; preds = %do.body172
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug947, ptr noundef %dev, ptr noundef nonnull @.str.204) #35
  br label %do.end187

do.end187:                                        ; preds = %if.then184, %do.body172
  %and188 = and i64 %features.addr.8, -32769
  br label %if.end189

if.end189:                                        ; preds = %do.end187, %if.then167.if.end189_crit_edge
  %features.addr.9 = phi i64 [ %and188, %do.end187 ], [ %features.addr.8, %if.then167.if.end189_crit_edge ]
  %and190 = and i64 %features.addr.9, 36028797018963968
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and190)
  %tobool191.not = icmp eq i64 %and190, 0
  br i1 %tobool191.not, label %if.end189.if.end212_crit_edge, label %do.body194

if.end189.if.end212_crit_edge:                    ; preds = %if.end189
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end212

do.body194:                                       ; preds = %if.end189
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug948, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then206)) #35
          to label %do.end209 [label %if.then206], !srcloc !1328

if.then206:                                       ; preds = %do.body194
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug948, ptr noundef %dev, ptr noundef nonnull @.str.205) #35
  br label %do.end209

do.end209:                                        ; preds = %if.then206, %do.body194
  %and210 = and i64 %features.addr.9, -36028797018963969
  br label %if.end212

if.end212:                                        ; preds = %do.end209, %if.end189.if.end212_crit_edge, %if.end164.if.end212_crit_edge
  %features.addr.10 = phi i64 [ %and210, %do.end209 ], [ %features.addr.9, %if.end189.if.end212_crit_edge ], [ %features.addr.8, %if.end164.if.end212_crit_edge ]
  %13 = and i64 %features.addr.10, 36028797018996736
  call void @__sanitizer_cov_trace_const_cmp8(i64 36028797018996736, i64 %13)
  %.not409 = icmp eq i64 %13, 36028797018996736
  br i1 %.not409, label %do.body220, label %if.end212.if.end237_crit_edge

if.end212.if.end237_crit_edge:                    ; preds = %if.end212
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end237

do.body220:                                       ; preds = %if.end212
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug949, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then232)) #35
          to label %do.end235 [label %if.then232], !srcloc !1328

if.then232:                                       ; preds = %do.body220
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug949, ptr noundef %dev, ptr noundef nonnull @.str.206) #35
  br label %do.end235

do.end235:                                        ; preds = %if.then232, %do.body220
  %and236 = and i64 %features.addr.10, -32769
  br label %if.end237

if.end237:                                        ; preds = %do.end235, %if.end212.if.end237_crit_edge
  %features.addr.11 = phi i64 [ %and236, %do.end235 ], [ %features.addr.10, %if.end212.if.end237_crit_edge ]
  %and238 = and i64 %features.addr.11, 9007199254740992
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and238)
  %tobool239.not = icmp eq i64 %and238, 0
  br i1 %tobool239.not, label %if.end237.if.end271_crit_edge, label %if.then240

if.end237.if.end271_crit_edge:                    ; preds = %if.end237
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end271

if.then240:                                       ; preds = %if.end237
  %and241 = and i64 %features.addr.11, 18
  call void @__sanitizer_cov_trace_const_cmp8(i64 18, i64 %and241)
  %cmp242 = icmp ne i64 %and241, 18
  %and244 = and i64 %features.addr.11, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and244)
  %tobool245.not = icmp eq i64 %and244, 0
  %or.cond366 = and i1 %cmp242, %tobool245.not
  br i1 %or.cond366, label %do.body252, label %if.then240.if.end271_crit_edge

if.then240.if.end271_crit_edge:                   ; preds = %if.then240
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end271

do.body252:                                       ; preds = %if.then240
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug950, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then264)) #35
          to label %do.end268 [label %if.then264], !srcloc !1328

if.then264:                                       ; preds = %do.body252
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug950, ptr noundef %dev, ptr noundef nonnull @.str.207) #35
  br label %do.end268

do.end268:                                        ; preds = %if.then264, %do.body252
  %and269 = and i64 %features.addr.11, -9007199254740993
  br label %if.end271

if.end271:                                        ; preds = %do.end268, %if.then240.if.end271_crit_edge, %if.end237.if.end271_crit_edge
  %features.addr.13 = phi i64 [ %features.addr.11, %if.end237.if.end271_crit_edge ], [ %features.addr.11, %if.then240.if.end271_crit_edge ], [ %and269, %do.end268 ]
  %14 = and i64 %features.addr.13, 18015498021109760
  call void @__sanitizer_cov_trace_const_cmp8(i64 18014398509481984, i64 %14)
  %15 = icmp eq i64 %14, 18014398509481984
  br i1 %15, label %do.body279, label %if.end271.if.end298_crit_edge

if.end271.if.end298_crit_edge:                    ; preds = %if.end271
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end298

do.body279:                                       ; preds = %if.end271
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_fix_features.__UNIQUE_ID_ddebug951, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_fix_features, %if.then291)) #35
          to label %do.end296 [label %if.then291], !srcloc !1328

if.then291:                                       ; preds = %do.body279
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_fix_features.__UNIQUE_ID_ddebug951, ptr noundef %dev, ptr noundef nonnull @.str.208) #35
  br label %do.end296

do.end296:                                        ; preds = %if.then291, %do.body279
  %and297 = and i64 %features.addr.13, -18014398509481985
  br label %if.end298

if.end298:                                        ; preds = %do.end296, %if.end271.if.end298_crit_edge
  %features.addr.14 = phi i64 [ %and297, %do.end296 ], [ %features.addr.13, %if.end271.if.end298_crit_edge ]
  ret i64 %features.addr.14
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_netdev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @netdev_sync_lower_features(ptr noundef %upper, ptr noundef %lower, i64 noundef %features) unnamed_addr #1 align 64 {
entry:
  %info.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %feature = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %feature) #35
  %features1 = getelementptr inbounds %struct.net_device, ptr %lower, i32 0, i32 23
  %wanted_features = getelementptr inbounds %struct.net_device, ptr %lower, i32 0, i32 25
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i, i32 0, i32 1
  %nd_net.i.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %lower, i32 0, i32 127
  %1 = ptrtoint ptr %feature to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 32768, ptr %feature, align 8
  %and = and i64 %features, 32768
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.for.inc_crit_edge

entry.for.inc_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

land.lhs.true:                                    ; preds = %entry
  %2 = ptrtoint ptr %features1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %features1, align 16
  %and2 = and i64 %3, 32768
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2)
  %tobool3.not = icmp eq i64 %and2, 0
  br i1 %tobool3.not, label %land.lhs.true.for.inc_crit_edge, label %do.body4

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

do.body4:                                         ; preds = %land.lhs.true
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @netdev_sync_lower_features.__UNIQUE_ID_ddebug940, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@netdev_sync_lower_features, %if.then9)) #35
          to label %do.end11 [label %if.then9], !srcloc !1328

if.then9:                                         ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @netdev_sync_lower_features.__UNIQUE_ID_ddebug940, ptr noundef %upper, ptr noundef nonnull @.str.212, ptr noundef nonnull %feature, ptr noundef %lower) #35
  br label %do.end11

do.end11:                                         ; preds = %if.then9, %do.body4
  %4 = ptrtoint ptr %feature to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %feature, align 8
  %neg = xor i64 %5, -1
  %6 = ptrtoint ptr %wanted_features to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %wanted_features, align 32
  %and12 = and i64 %7, %neg
  store i64 %and12, ptr %wanted_features, align 32
  %call13 = call i32 @__netdev_update_features(ptr noundef %lower)
  %8 = ptrtoint ptr %features1 to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %features1, align 16
  %10 = ptrtoint ptr %feature to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %feature, align 8
  %and15 = and i64 %11, %9
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and15)
  %tobool16.not = icmp eq i64 %and15, 0
  br i1 %tobool16.not, label %if.else, label %do.end35, !prof !1311

do.end35:                                         ; preds = %do.end11
  %12 = ptrtoint ptr %upper to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %upper, align 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i, label %do.end35.netdev_name.exit_crit_edge, label %lor.lhs.false.i

do.end35.netdev_name.exit_crit_edge:              ; preds = %do.end35
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name.exit

lor.lhs.false.i:                                  ; preds = %do.end35
  call void @__sanitizer_cov_trace_pc() #37
  %call.i = call ptr @strchr(ptr noundef %upper, i32 noundef 37) #35
  %tobool2.not.i = icmp eq ptr %call.i, null
  %spec.select.i = select i1 %tobool2.not.i, ptr %upper, ptr @.str.97
  br label %netdev_name.exit

netdev_name.exit:                                 ; preds = %lor.lhs.false.i, %do.end35.netdev_name.exit_crit_edge
  %retval.0.i68 = phi ptr [ @.str.97, %do.end35.netdev_name.exit_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  %call37 = call fastcc ptr @netdev_reg_state(ptr noundef %upper)
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9186, i32 noundef 9, ptr noundef nonnull @.str.213, ptr noundef %retval.0.i68, ptr noundef nonnull %call37, ptr noundef nonnull %feature, ptr noundef %lower) #35
  br label %for.inc

if.else:                                          ; preds = %do.end11
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i) #35
  %14 = ptrtoint ptr %info.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %lower, ptr %info.i.i.i, align 4
  %15 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %0, align 4
  %16 = ptrtoint ptr %nd_net.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nd_net.i.i.i.i.i, align 4
  %call1.i.i.i.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.rhs.i.i.i.i, label %if.else.if.end30.i.i.i.i_crit_edge

if.else.if.end30.i.i.i.i_crit_edge:               ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.else
  %.b50.i.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i, label %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge:      ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i

if.end30.i.i.i.i:                                 ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, %if.else.if.end30.i.i.i.i_crit_edge
  %netdev_chain.i.i.i.i = getelementptr inbounds %struct.net, ptr %17, i32 0, i32 25
  %call38.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i, i32 noundef 12, ptr noundef nonnull %info.i.i.i) #35
  %and.i.i.i.i = and i32 %call38.i.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool39.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool39.not.i.i.i.i, label %if.end41.i.i.i.i, label %if.end30.i.i.i.i.netdev_features_change.exit_crit_edge

if.end30.i.i.i.i.netdev_features_change.exit_crit_edge: ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_features_change.exit

if.end41.i.i.i.i:                                 ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 12, ptr noundef nonnull %info.i.i.i) #35
  br label %netdev_features_change.exit

netdev_features_change.exit:                      ; preds = %if.end41.i.i.i.i, %if.end30.i.i.i.i.netdev_features_change.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i) #35
  br label %for.inc

for.inc:                                          ; preds = %netdev_features_change.exit, %netdev_name.exit, %land.lhs.true.for.inc_crit_edge, %entry.for.inc_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %feature) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_change_features(ptr noundef %dev) #1 align 64 {
entry:
  %info.i.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__netdev_update_features(ptr noundef %dev)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i) #35
  %0 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %info.i.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %dev, ptr %info.i.i.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %0, align 4
  %nd_net.i.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %3 = ptrtoint ptr %nd_net.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %nd_net.i.i.i.i.i, align 4
  %call1.i.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.rhs.i.i.i.i, label %entry.if.end30.i.i.i.i_crit_edge

entry.if.end30.i.i.i.i_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %entry
  %.b50.i.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i, label %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge:      ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i

if.end30.i.i.i.i:                                 ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, %entry.if.end30.i.i.i.i_crit_edge
  %netdev_chain.i.i.i.i = getelementptr inbounds %struct.net, ptr %4, i32 0, i32 25
  %call38.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i, i32 noundef 12, ptr noundef nonnull %info.i.i.i) #35
  %and.i.i.i.i = and i32 %call38.i.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool39.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool39.not.i.i.i.i, label %if.end41.i.i.i.i, label %if.end30.i.i.i.i.netdev_features_change.exit_crit_edge

if.end30.i.i.i.i.netdev_features_change.exit_crit_edge: ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_features_change.exit

if.end41.i.i.i.i:                                 ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 12, ptr noundef nonnull %info.i.i.i) #35
  br label %netdev_features_change.exit

netdev_features_change.exit:                      ; preds = %if.end41.i.i.i.i, %if.end30.i.i.i.i.netdev_features_change.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netif_stacked_transfer_operstate(ptr noundef %rootdev, ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %operstate = getelementptr inbounds %struct.net_device, ptr %rootdev, i32 0, i32 50
  %0 = ptrtoint ptr %operstate to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %operstate, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %1)
  %cmp = icmp eq i8 %1, 5
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call.i = tail call i32 @_test_and_set_bit(i32 noundef 4, ptr noundef %state.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.if.end.sink.split_crit_edge, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then.if.end.sink.split_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.sink.split

if.else:                                          ; preds = %entry
  %call.i20 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %state.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i20)
  %tobool.not.i21 = icmp eq i32 %call.i20, 0
  br i1 %tobool.not.i21, label %if.else.if.end_crit_edge, label %if.else.if.end.sink.split_crit_edge

if.else.if.end.sink.split_crit_edge:              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.sink.split

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.end.sink.split:                                ; preds = %if.else.if.end.sink.split_crit_edge, %if.then.if.end.sink.split_crit_edge
  tail call void @linkwatch_fire_event(ptr noundef %dev) #35
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %if.else.if.end_crit_edge, %if.then.if.end_crit_edge
  %2 = ptrtoint ptr %operstate to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %operstate, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %3)
  %cmp4 = icmp eq i8 %3, 4
  %state.i23 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  br i1 %cmp4, label %if.then6, label %if.else7

if.then6:                                         ; preds = %if.end
  %call.i24 = tail call i32 @_test_and_set_bit(i32 noundef 5, ptr noundef %state.i23) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i24)
  %tobool.not.i25 = icmp eq i32 %call.i24, 0
  br i1 %tobool.not.i25, label %if.then6.if.end8.sink.split_crit_edge, label %if.then6.if.end8_crit_edge

if.then6.if.end8_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8

if.then6.if.end8.sink.split_crit_edge:            ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8.sink.split

if.else7:                                         ; preds = %if.end
  %call.i28 = tail call i32 @_test_and_clear_bit(i32 noundef 5, ptr noundef %state.i23) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i28)
  %tobool.not.i29 = icmp eq i32 %call.i28, 0
  br i1 %tobool.not.i29, label %if.else7.if.end8_crit_edge, label %if.else7.if.end8.sink.split_crit_edge

if.else7.if.end8.sink.split_crit_edge:            ; preds = %if.else7
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8.sink.split

if.else7.if.end8_crit_edge:                       ; preds = %if.else7
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8

if.end8.sink.split:                               ; preds = %if.else7.if.end8.sink.split_crit_edge, %if.then6.if.end8.sink.split_crit_edge
  tail call void @linkwatch_fire_event(ptr noundef %dev) #35
  br label %if.end8

if.end8:                                          ; preds = %if.end8.sink.split, %if.else7.if.end8_crit_edge, %if.then6.if.end8_crit_edge
  %state.i31 = getelementptr inbounds %struct.net_device, ptr %rootdev, i32 0, i32 6
  %4 = ptrtoint ptr %state.i31 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i31, align 4
  %6 = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i32 = icmp eq i32 %6, 0
  br i1 %tobool.not.i32, label %if.then9, label %if.else10

if.then9:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @netif_carrier_on(ptr noundef %dev) #35
  br label %if.end11

if.else10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @netif_carrier_off(ptr noundef %dev) #35
  br label %if.end11

if.end11:                                         ; preds = %if.else10, %if.then9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @register_netdevice(ptr noundef %dev) #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  %.b = load i1, ptr @dev_boot_phase, align 4
  br i1 %.b, label %do.end11, label %do.body4, !prof !1311

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9570, 0\0A.popsection", ""() #35, !srcloc !1406
  unreachable

do.end11:                                         ; preds = %entry
  %call12 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %land.rhs, label %do.end11.if.end55_crit_edge

do.end11.if.end55_crit_edge:                      ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end55

land.rhs:                                         ; preds = %do.end11
  %.b367368 = load i1, ptr @register_netdevice.__already_done, align 1
  br i1 %.b367368, label %land.rhs.if.end55_crit_edge, label %if.then30, !prof !1311

land.rhs.if.end55_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end55

if.then30:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @register_netdevice.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9571, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 9571) #35
  br label %if.end55

if.end55:                                         ; preds = %if.then30, %land.rhs.if.end55_crit_edge, %do.end11.if.end55_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 9573) #35
  %reg_state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %2 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.load)
  %cmp.not = icmp eq i8 %bf.load, 0
  br i1 %cmp.not, label %do.body86, label %do.body77, !prof !1311

do.body77:                                        ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9576, 0\0A.popsection", ""() #35, !srcloc !1407
  unreachable

do.body86:                                        ; preds = %if.end55
  %tobool87.not = icmp eq ptr %1, null
  br i1 %tobool87.not, label %do.body97, label %do.end105, !prof !1310

do.body97:                                        ; preds = %do.body86
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9577, 0\0A.popsection", ""() #35, !srcloc !1408
  unreachable

do.end105:                                        ; preds = %do.body86
  %ethtool_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 44
  %3 = ptrtoint ptr %ethtool_ops to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ethtool_ops, align 16
  %call106 = tail call i32 @ethtool_check_ops(ptr noundef %4) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %do.body110, label %do.end105.cleanup_crit_edge

do.end105.cleanup_crit_edge:                      ; preds = %do.end105
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

do.body110:                                       ; preds = %do.end105
  %addr_list_lock = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 63
  tail call void @__raw_spin_lock_init(ptr noundef %addr_list_lock, ptr noundef nonnull @.str.71, ptr noundef nonnull @register_netdevice.__key, i16 noundef signext 3) #35
  %type.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 32
  %5 = ptrtoint ptr %type.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %type.i, align 16
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %do.body110
  %i.09.i.i = phi i32 [ 0, %do.body110 ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr [57 x i16], ptr @netdev_lock_type, i32 0, i32 %i.09.i.i
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %arrayidx.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %6)
  %cmp2.i.i = icmp eq i16 %8, %6
  br i1 %cmp2.i.i, label %if.then.i.i, label %for.inc.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %phi.cast.i = and i32 %i.09.i.i, 65535
  br label %netdev_set_addr_lockdep_class.exit

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.09.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 57
  br i1 %exitcond.not.i.i, label %for.inc.i.i.netdev_set_addr_lockdep_class.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i

for.inc.i.i.netdev_set_addr_lockdep_class.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_set_addr_lockdep_class.exit

netdev_set_addr_lockdep_class.exit:               ; preds = %for.inc.i.i.netdev_set_addr_lockdep_class.exit_crit_edge, %if.then.i.i
  %retval.0.i.i = phi i32 [ %phi.cast.i, %if.then.i.i ], [ 56, %for.inc.i.i.netdev_set_addr_lockdep_class.exit_crit_edge ]
  %dep_map.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 63, i32 0, i32 0, i32 4
  %arrayidx.i = getelementptr [57 x ptr], ptr @netdev_lock_name, i32 0, i32 %retval.0.i.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i, align 4
  %arrayidx1.i = getelementptr [57 x %struct.lock_class_key], ptr @netdev_addr_lock_key, i32 0, i32 %retval.0.i.i
  %wait_type_inner.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 63, i32 0, i32 0, i32 4, i32 4
  %11 = ptrtoint ptr %wait_type_inner.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %wait_type_inner.i, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef %10, ptr noundef %arrayidx1.i, i32 noundef 0, i8 noundef zeroext %12, i8 noundef zeroext 0, i8 noundef zeroext 0) #35
  %call114 = tail call fastcc i32 @dev_get_valid_name(ptr noundef nonnull %1, ptr noundef %dev, ptr noundef %dev)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114)
  %cmp115 = icmp slt i32 %call114, 0
  br i1 %cmp115, label %netdev_set_addr_lockdep_class.exit.cleanup_crit_edge, label %if.end117

netdev_set_addr_lockdep_class.exit.cleanup_crit_edge: ; preds = %netdev_set_addr_lockdep_class.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end117:                                        ; preds = %netdev_set_addr_lockdep_class.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %13 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %13, i32 noundef 3264, i32 noundef 24) #40
  %tobool.not.i.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i.i, label %netdev_name_node_head_alloc.exit.thread, label %if.end122

netdev_name_node_head_alloc.exit.thread:          ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #37
  %name_node383 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 1
  %14 = ptrtoint ptr %name_node383 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %name_node383, align 16
  br label %cleanup

if.end122:                                        ; preds = %if.end117
  %15 = ptrtoint ptr %call7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %call7.i.i.i, align 8
  %pprev.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %call7.i.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %pprev.i.i.i, align 4
  %dev1.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %call7.i.i.i, i32 0, i32 2
  %17 = ptrtoint ptr %dev1.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %dev, ptr %dev1.i.i, align 8
  %name2.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %call7.i.i.i, i32 0, i32 3
  %18 = ptrtoint ptr %name2.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %dev, ptr %name2.i.i, align 4
  %list.i = getelementptr inbounds %struct.netdev_name_node, ptr %call7.i.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %list.i, ptr %list.i, align 8
  %prev.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %call7.i.i.i, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %list.i, ptr %prev.i.i, align 4
  %name_node = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 1
  %21 = ptrtoint ptr %name_node to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call7.i.i.i, ptr %name_node, align 16
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %22 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %netdev_ops, align 8
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %tobool123.not = icmp eq ptr %25, null
  br i1 %tobool123.not, label %if.end122.if.end134_crit_edge, label %if.then124

if.end122.if.end134_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end134

if.then124:                                       ; preds = %if.end122
  %call127 = tail call i32 %25(ptr noundef %dev) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call127)
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %if.then124.if.end134_crit_edge, label %if.then129

if.then124.if.end134_crit_edge:                   ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end134

if.then129:                                       ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call127)
  %cmp130 = icmp sgt i32 %call127, 0
  %spec.select = select i1 %cmp130, i32 -5, i32 %call127
  br label %err_free_name

if.end134:                                        ; preds = %if.then124.if.end134_crit_edge, %if.end122.if.end134_crit_edge
  %hw_features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 24
  %26 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %hw_features, align 8
  %features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %28 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %features, align 16
  %or = or i64 %29, %27
  %and = and i64 %or, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool135.not = icmp eq i64 %and, 0
  br i1 %tobool135.not, label %if.end134.if.end169_crit_edge, label %land.lhs.true

if.end134.if.end169_crit_edge:                    ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end169

land.lhs.true:                                    ; preds = %if.end134
  %30 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %netdev_ops, align 8
  %ndo_vlan_rx_add_vid = getelementptr inbounds %struct.net_device_ops, ptr %31, i32 0, i32 24
  %32 = ptrtoint ptr %ndo_vlan_rx_add_vid to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ndo_vlan_rx_add_vid, align 4
  %tobool137.not = icmp eq ptr %33, null
  br i1 %tobool137.not, label %land.lhs.true.do.end153_crit_edge, label %lor.lhs.false

land.lhs.true.do.end153_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end153

lor.lhs.false:                                    ; preds = %land.lhs.true
  %ndo_vlan_rx_kill_vid = getelementptr inbounds %struct.net_device_ops, ptr %31, i32 0, i32 25
  %34 = ptrtoint ptr %ndo_vlan_rx_kill_vid to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ndo_vlan_rx_kill_vid, align 4
  %tobool139.not = icmp eq ptr %35, null
  br i1 %tobool139.not, label %lor.lhs.false.do.end153_crit_edge, label %lor.lhs.false.if.end169_crit_edge

lor.lhs.false.if.end169_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end169

lor.lhs.false.do.end153_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end153

do.end153:                                        ; preds = %lor.lhs.false.do.end153_crit_edge, %land.lhs.true.do.end153_crit_edge
  %36 = ptrtoint ptr %dev to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %dev, align 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool.not.i = icmp eq i8 %37, 0
  br i1 %tobool.not.i, label %do.end153.netdev_name.exit_crit_edge, label %lor.lhs.false.i

do.end153.netdev_name.exit_crit_edge:             ; preds = %do.end153
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name.exit

lor.lhs.false.i:                                  ; preds = %do.end153
  call void @__sanitizer_cov_trace_pc() #37
  %call.i = tail call ptr @strchr(ptr noundef %dev, i32 noundef 37) #35
  %tobool2.not.i = icmp eq ptr %call.i, null
  %spec.select.i = select i1 %tobool2.not.i, ptr %dev, ptr @.str.97
  br label %netdev_name.exit

netdev_name.exit:                                 ; preds = %lor.lhs.false.i, %do.end153.netdev_name.exit_crit_edge
  %retval.0.i = phi ptr [ @.str.97, %do.end153.netdev_name.exit_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  %38 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %38)
  %bf.load45.i = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %bf.load45.i)
  %39 = icmp ult i8 %bf.load45.i, 6
  br i1 %39, label %switch.lookup, label %land.end.i

land.end.i:                                       ; preds = %netdev_name.exit
  %.b46.i = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %.b46.i, label %land.end.i.netdev_reg_state.exit_crit_edge, label %if.then.i, !prof !1311

land.end.i.netdev_reg_state.exit_crit_edge:       ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_reg_state.exit

if.then.i:                                        ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %bf.cast21.i = zext i8 %bf.load45.i to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.104, ptr noundef %dev, i32 noundef %bf.cast21.i) #35
  br label %netdev_reg_state.exit

switch.lookup:                                    ; preds = %netdev_name.exit
  call void @__sanitizer_cov_trace_pc() #37
  %40 = sext i8 %bf.load45.i to i32
  %switch.gep = getelementptr inbounds [6 x ptr], ptr @switch.table.register_netdevice, i32 0, i32 %40
  %41 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %41)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %netdev_reg_state.exit

netdev_reg_state.exit:                            ; preds = %switch.lookup, %if.then.i, %land.end.i.netdev_reg_state.exit_crit_edge
  %retval.0.i369 = phi ptr [ @.str.105, %if.then.i ], [ @.str.105, %land.end.i.netdev_reg_state.exit_crit_edge ], [ %switch.load, %switch.lookup ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9609, i32 noundef 9, ptr noundef nonnull @.str.72, ptr noundef %retval.0.i, ptr noundef nonnull %retval.0.i369) #35
  br label %err_uninit

if.end169:                                        ; preds = %lor.lhs.false.if.end169_crit_edge, %if.end134.if.end169_crit_edge
  %ifindex = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 17
  %42 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %ifindex, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool170.not = icmp eq i32 %43, 0
  br i1 %tobool170.not, label %if.then171, label %if.else

if.then171:                                       ; preds = %if.end169
  %ifindex1.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 4
  %44 = ptrtoint ptr %ifindex1.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %ifindex1.i, align 8
  %dev_index_head.i.i.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 24
  %46 = ptrtoint ptr %dev_index_head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %dev_index_head.i.i.i, align 16
  %inc13.i = add i32 %45, 1
  %48 = tail call i32 @llvm.smax.i32(i32 %inc13.i, i32 1) #35
  %and.i.i14.i = and i32 %48, 255
  %arrayidx.i.i15.i = getelementptr %struct.hlist_head, ptr %47, i32 %and.i.i14.i
  %49 = ptrtoint ptr %arrayidx.i.i15.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx.i.i15.i, align 4
  %tobool.not.i16.i = icmp eq ptr %50, null
  %add.ptr.i17.i = getelementptr i8, ptr %50, i32 -664
  %tobool2.not2528.i18.i = icmp eq ptr %add.ptr.i17.i, null
  %tobool2.not25.i19.i = or i1 %tobool.not.i16.i, %tobool2.not2528.i18.i
  br i1 %tobool2.not25.i19.i, label %if.then171.dev_new_index.exit_crit_edge, label %if.then171.for.body.i.preheader.i_crit_edge

if.then171.for.body.i.preheader.i_crit_edge:      ; preds = %if.then171
  br label %for.body.i.preheader.i

if.then171.dev_new_index.exit_crit_edge:          ; preds = %if.then171
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_new_index.exit

for.cond.loopexit.i:                              ; preds = %for.body.i.i371
  %inc.i = add nuw i32 %54, 1
  %51 = tail call i32 @llvm.smax.i32(i32 %inc.i, i32 1) #35
  %and.i.i.i = and i32 %51, 255
  %arrayidx.i.i.i = getelementptr %struct.hlist_head, ptr %47, i32 %and.i.i.i
  %52 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx.i.i.i, align 4
  %tobool.not.i.i370 = icmp eq ptr %53, null
  %add.ptr.i.i = getelementptr i8, ptr %53, i32 -664
  %tobool2.not2528.i.i = icmp eq ptr %add.ptr.i.i, null
  %tobool2.not25.i.i = or i1 %tobool.not.i.i370, %tobool2.not2528.i.i
  br i1 %tobool2.not25.i.i, label %for.cond.loopexit.i.dev_new_index.exit_crit_edge, label %for.cond.loopexit.i.for.body.i.preheader.i_crit_edge

for.cond.loopexit.i.for.body.i.preheader.i_crit_edge: ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.preheader.i

for.cond.loopexit.i.dev_new_index.exit_crit_edge: ; preds = %for.cond.loopexit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_new_index.exit

for.body.i.preheader.i:                           ; preds = %for.cond.loopexit.i.for.body.i.preheader.i_crit_edge, %if.then171.for.body.i.preheader.i_crit_edge
  %add.ptr.i20.i = phi ptr [ %add.ptr.i.i, %for.cond.loopexit.i.for.body.i.preheader.i_crit_edge ], [ %add.ptr.i17.i, %if.then171.for.body.i.preheader.i_crit_edge ]
  %54 = phi i32 [ %51, %for.cond.loopexit.i.for.body.i.preheader.i_crit_edge ], [ %48, %if.then171.for.body.i.preheader.i_crit_edge ]
  br label %for.body.i.i371

for.body.i.i371:                                  ; preds = %for.inc.i.i372.for.body.i.i371_crit_edge, %for.body.i.preheader.i
  %dev.026.i.i = phi ptr [ %add.ptr10.i.i, %for.inc.i.i372.for.body.i.i371_crit_edge ], [ %add.ptr.i20.i, %for.body.i.preheader.i ]
  %ifindex3.i.i = getelementptr inbounds %struct.net_device, ptr %dev.026.i.i, i32 0, i32 17
  %55 = ptrtoint ptr %ifindex3.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %ifindex3.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %54)
  %cmp.i.i = icmp eq i32 %56, %54
  br i1 %cmp.i.i, label %for.cond.loopexit.i, label %for.inc.i.i372

for.inc.i.i372:                                   ; preds = %for.body.i.i371
  %index_hlist.i.i = getelementptr inbounds %struct.net_device, ptr %dev.026.i.i, i32 0, i32 101
  %57 = ptrtoint ptr %index_hlist.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %index_hlist.i.i, align 8
  %tobool6.not.i.i = icmp eq ptr %58, null
  %add.ptr10.i.i = getelementptr i8, ptr %58, i32 -664
  %tobool2.not29.i.i = icmp eq ptr %add.ptr10.i.i, null
  %tobool2.not.i.i = or i1 %tobool6.not.i.i, %tobool2.not29.i.i
  br i1 %tobool2.not.i.i, label %for.inc.i.i372.dev_new_index.exit_crit_edge, label %for.inc.i.i372.for.body.i.i371_crit_edge

for.inc.i.i372.for.body.i.i371_crit_edge:         ; preds = %for.inc.i.i372
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i371

for.inc.i.i372.dev_new_index.exit_crit_edge:      ; preds = %for.inc.i.i372
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_new_index.exit

dev_new_index.exit:                               ; preds = %for.inc.i.i372.dev_new_index.exit_crit_edge, %for.cond.loopexit.i.dev_new_index.exit_crit_edge, %if.then171.dev_new_index.exit_crit_edge
  %59 = phi i32 [ %48, %if.then171.dev_new_index.exit_crit_edge ], [ %54, %for.inc.i.i372.dev_new_index.exit_crit_edge ], [ %51, %for.cond.loopexit.i.dev_new_index.exit_crit_edge ]
  %60 = ptrtoint ptr %ifindex1.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %ifindex1.i, align 8
  %61 = ptrtoint ptr %ifindex to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %59, ptr %ifindex, align 4
  br label %if.end179

if.else:                                          ; preds = %if.end169
  %dev_index_head.i.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 24
  %62 = ptrtoint ptr %dev_index_head.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %dev_index_head.i.i, align 16
  %and.i.i = and i32 %43, 255
  %arrayidx.i.i373 = getelementptr %struct.hlist_head, ptr %63, i32 %and.i.i
  %64 = ptrtoint ptr %arrayidx.i.i373 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %arrayidx.i.i373, align 4
  %tobool.not.i374 = icmp eq ptr %65, null
  %add.ptr.i = getelementptr i8, ptr %65, i32 -664
  %tobool2.not2528.i = icmp eq ptr %add.ptr.i, null
  %tobool2.not25.i = or i1 %tobool.not.i374, %tobool2.not2528.i
  br i1 %tobool2.not25.i, label %if.else.if.end179_crit_edge, label %if.else.for.body.i_crit_edge

if.else.for.body.i_crit_edge:                     ; preds = %if.else
  br label %for.body.i

if.else.if.end179_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end179

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.else.for.body.i_crit_edge
  %dev.026.i = phi ptr [ %add.ptr10.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i, %if.else.for.body.i_crit_edge ]
  %ifindex3.i = getelementptr inbounds %struct.net_device, ptr %dev.026.i, i32 0, i32 17
  %66 = ptrtoint ptr %ifindex3.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %ifindex3.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %67, i32 %43)
  %cmp.i = icmp eq i32 %67, %43
  br i1 %cmp.i, label %for.body.i.err_uninit_crit_edge, label %for.inc.i

for.body.i.err_uninit_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %err_uninit

for.inc.i:                                        ; preds = %for.body.i
  %index_hlist.i = getelementptr inbounds %struct.net_device, ptr %dev.026.i, i32 0, i32 101
  %68 = ptrtoint ptr %index_hlist.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %index_hlist.i, align 8
  %tobool6.not.i = icmp eq ptr %69, null
  %add.ptr10.i = getelementptr i8, ptr %69, i32 -664
  %tobool2.not29.i = icmp eq ptr %add.ptr10.i, null
  %tobool2.not.i375 = or i1 %tobool6.not.i, %tobool2.not29.i
  br i1 %tobool2.not.i375, label %for.inc.i.if.end179_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.inc.i.if.end179_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end179

if.end179:                                        ; preds = %for.inc.i.if.end179_crit_edge, %if.else.if.end179_crit_edge, %dev_new_index.exit
  %70 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %hw_features, align 8
  %or181 = or i64 %71, 720575940379297792
  store i64 %or181, ptr %hw_features, align 8
  %72 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %features, align 16
  %or183 = or i64 %73, 18432
  store i64 %or183, ptr %features, align 16
  %udp_tunnel_nic_info = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 152
  %74 = ptrtoint ptr %udp_tunnel_nic_info to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %udp_tunnel_nic_info, align 4
  %tobool184.not = icmp eq ptr %75, null
  br i1 %tobool184.not, label %if.end179.if.end190_crit_edge, label %if.then185

if.end179.if.end190_crit_edge:                    ; preds = %if.end179
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end190

if.then185:                                       ; preds = %if.end179
  call void @__sanitizer_cov_trace_pc() #37
  %or187 = or i64 %73, 4503599627388928
  %76 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %76)
  store i64 %or187, ptr %features, align 16
  %or189 = or i64 %71, 725079540006668288
  %77 = ptrtoint ptr %hw_features to i32
  call void @__asan_store8_noabort(i32 %77)
  store i64 %or189, ptr %hw_features, align 8
  br label %if.end190

if.end190:                                        ; preds = %if.then185, %if.end179.if.end190_crit_edge
  %78 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %78)
  %79 = load i64, ptr %features, align 16
  %80 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %hw_features, align 8
  %and193 = and i64 %81, %79
  %wanted_features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 25
  %82 = ptrtoint ptr %wanted_features to i32
  call void @__asan_store8_noabort(i32 %82)
  store i64 %and193, ptr %wanted_features, align 32
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %83 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %flags, align 8
  %and194 = and i32 %84, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and194)
  %tobool195.not = icmp eq i32 %and194, 0
  br i1 %tobool195.not, label %if.then196, label %if.end190.if.end199_crit_edge

if.end190.if.end199_crit_edge:                    ; preds = %if.end190
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end199

if.then196:                                       ; preds = %if.end190
  call void @__sanitizer_cov_trace_pc() #37
  %or198 = or i64 %81, 2199023255552
  %85 = ptrtoint ptr %hw_features to i32
  call void @__asan_store8_noabort(i32 %85)
  store i64 %or198, ptr %hw_features, align 8
  br label %if.end199

if.end199:                                        ; preds = %if.then196, %if.end190.if.end199_crit_edge
  %86 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %86)
  %87 = load i64, ptr %hw_features, align 8
  %and201 = and i64 %87, 65536
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and201)
  %tobool202.not = icmp eq i64 %and201, 0
  br i1 %tobool202.not, label %if.end199.if.end206_crit_edge, label %if.then203

if.end199.if.end206_crit_edge:                    ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end206

if.then203:                                       ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #37
  %or205 = or i64 %87, 524288
  %88 = ptrtoint ptr %hw_features to i32
  call void @__asan_store8_noabort(i32 %88)
  store i64 %or205, ptr %hw_features, align 8
  br label %if.end206

if.end206:                                        ; preds = %if.then203, %if.end199.if.end206_crit_edge
  %vlan_features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 26
  %89 = ptrtoint ptr %vlan_features to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %vlan_features, align 8
  %and207 = and i64 %90, 65536
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and207)
  %tobool208.not = icmp eq i64 %and207, 0
  br i1 %tobool208.not, label %if.end206.if.end212_crit_edge, label %if.then209

if.end206.if.end212_crit_edge:                    ; preds = %if.end206
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end212

if.then209:                                       ; preds = %if.end206
  call void @__sanitizer_cov_trace_pc() #37
  %or211 = or i64 %90, 524288
  %91 = ptrtoint ptr %vlan_features to i32
  call void @__asan_store8_noabort(i32 %91)
  store i64 %or211, ptr %vlan_features, align 8
  br label %if.end212

if.end212:                                        ; preds = %if.then209, %if.end206.if.end212_crit_edge
  %mpls_features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 28
  %92 = ptrtoint ptr %mpls_features to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %mpls_features, align 8
  %and213 = and i64 %93, 65536
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and213)
  %tobool214.not = icmp eq i64 %and213, 0
  br i1 %tobool214.not, label %if.end212.if.end218_crit_edge, label %if.then215

if.end212.if.end218_crit_edge:                    ; preds = %if.end212
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end218

if.then215:                                       ; preds = %if.end212
  call void @__sanitizer_cov_trace_pc() #37
  %or217 = or i64 %93, 524288
  %94 = ptrtoint ptr %mpls_features to i32
  call void @__asan_store8_noabort(i32 %94)
  store i64 %or217, ptr %mpls_features, align 8
  br label %if.end218

if.end218:                                        ; preds = %if.then215, %if.end212.if.end218_crit_edge
  %hw_enc_features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 27
  %95 = ptrtoint ptr %hw_enc_features to i32
  call void @__asan_load8_noabort(i32 %95)
  %96 = load i64, ptr %hw_enc_features, align 16
  %and219 = and i64 %96, 65536
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and219)
  %tobool220.not = icmp eq i64 %and219, 0
  br i1 %tobool220.not, label %if.end218.if.end224_crit_edge, label %if.then221

if.end218.if.end224_crit_edge:                    ; preds = %if.end218
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end224

if.then221:                                       ; preds = %if.end218
  call void @__sanitizer_cov_trace_pc() #37
  %or223 = or i64 %96, 524288
  %97 = ptrtoint ptr %hw_enc_features to i32
  call void @__asan_store8_noabort(i32 %97)
  store i64 %or223, ptr %hw_enc_features, align 16
  br label %if.end224

if.end224:                                        ; preds = %if.then221, %if.end218.if.end224_crit_edge
  %98 = ptrtoint ptr %vlan_features to i32
  call void @__asan_load8_noabort(i32 %98)
  %99 = load i64, ptr %vlan_features, align 8
  %or226 = or i64 %99, 32
  store i64 %or226, ptr %vlan_features, align 8
  %100 = ptrtoint ptr %hw_enc_features to i32
  call void @__asan_load8_noabort(i32 %100)
  %101 = load i64, ptr %hw_enc_features, align 16
  %or228 = or i64 %101, 268435457
  store i64 %or228, ptr %hw_enc_features, align 16
  %102 = ptrtoint ptr %mpls_features to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %mpls_features, align 8
  %or230 = or i64 %103, 1
  store i64 %or230, ptr %mpls_features, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %104 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %105 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store ptr %dev, ptr %info.i.i, align 4
  %106 = ptrtoint ptr %104 to i32
  call void @__asan_store4_noabort(i32 %106)
  store ptr null, ptr %104, align 4
  %107 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %nd_net.i, align 4
  %call1.i.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %if.end224.if.end30.i.i.i_crit_edge

if.end224.if.end30.i.i.i_crit_edge:               ; preds = %if.end224
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.end224
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %if.end224.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %108, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 17, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i376 = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i376)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i376, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 17, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  %retval.0.i.i.i = phi i32 [ %call42.i.i.i, %if.end41.i.i.i ], [ %call38.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  %and.i = and i32 %retval.0.i.i.i, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i377 = icmp sgt i32 %and.i, 1
  %sub.i = sub i32 1, %and.i
  %spec.select.i378 = select i1 %cmp.i377, i32 %sub.i, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i378)
  %tobool233.not = icmp eq i32 %spec.select.i378, 0
  br i1 %tobool233.not, label %if.end235, label %call_netdevice_notifiers.exit.err_uninit_crit_edge

call_netdevice_notifiers.exit.err_uninit_crit_edge: ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %err_uninit

if.end235:                                        ; preds = %call_netdevice_notifiers.exit
  %call236 = call i32 @netdev_register_kobject(ptr noundef %dev) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call236)
  %tobool237.not = icmp eq i32 %call236, 0
  br i1 %tobool237.not, label %if.end240, label %if.then238

if.then238:                                       ; preds = %if.end235
  call void @__sanitizer_cov_trace_pc() #37
  %109 = ptrtoint ptr %reg_state to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 3, ptr %reg_state, align 4
  br label %err_uninit

if.end240:                                        ; preds = %if.end235
  %110 = ptrtoint ptr %reg_state to i32
  call void @__asan_store1_noabort(i32 %110)
  store i8 1, ptr %reg_state, align 4
  %call242 = call i32 @__netdev_update_features(ptr noundef %dev)
  %state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  call void @_set_bit(i32 noundef 1, ptr noundef %state) #35
  call void @linkwatch_init_dev(ptr noundef %dev) #35
  call void @dev_init_scheduler(ptr noundef %dev) #35
  call fastcc void @dev_hold(ptr noundef %dev)
  call fastcc void @list_netdevice(ptr noundef %dev)
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 86
  %111 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %dev_addr, align 64
  %addr_len = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 56
  %113 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %113)
  %114 = load i8, ptr %addr_len, align 1
  %conv = zext i8 %114 to i32
  call void @add_device_randomness(ptr noundef %112, i32 noundef %conv) #35
  %addr_assign_type = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 55
  %115 = ptrtoint ptr %addr_assign_type to i32
  call void @__asan_load1_noabort(i32 %115)
  %116 = load i8, ptr %addr_assign_type, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %116)
  %cmp244 = icmp eq i8 %116, 0
  br i1 %cmp244, label %if.then246, label %if.end240.if.end251_crit_edge

if.end240.if.end251_crit_edge:                    ; preds = %if.end240
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end251

if.then246:                                       ; preds = %if.end240
  call void @__sanitizer_cov_trace_pc() #37
  %perm_addr = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 54
  %117 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %dev_addr, align 64
  %119 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %addr_len, align 1
  %conv250 = zext i8 %120 to i32
  %121 = call ptr @memcpy(ptr %perm_addr, ptr %118, i32 %conv250)
  br label %if.end251

if.end251:                                        ; preds = %if.then246, %if.end240.if.end251_crit_edge
  %call252 = call i32 @call_netdevice_notifiers(i32 noundef 5, ptr noundef %dev)
  %and.i379 = and i32 %call252, -32769
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i379)
  %cmp.i380 = icmp sgt i32 %and.i379, 1
  %sub.i381 = sub i32 1, %and.i379
  %spec.select.i382 = select i1 %cmp.i380, i32 %sub.i381, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i382)
  %tobool254.not = icmp eq i32 %spec.select.i382, 0
  br i1 %tobool254.not, label %if.end256, label %if.then255

if.then255:                                       ; preds = %if.end251
  call void @__sanitizer_cov_trace_pc() #37
  %needs_free_netdev = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 124
  %122 = ptrtoint ptr %needs_free_netdev to i32
  call void @__asan_store1_noabort(i32 %122)
  store i8 0, ptr %needs_free_netdev, align 8
  call void @unregister_netdevice_queue(ptr noundef %dev, ptr noundef null)
  br label %cleanup

if.end256:                                        ; preds = %if.end251
  %rtnl_link_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 136
  %123 = ptrtoint ptr %rtnl_link_ops to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %rtnl_link_ops, align 4
  %tobool257.not = icmp eq ptr %124, null
  br i1 %tobool257.not, label %if.end256.if.then263_crit_edge, label %lor.lhs.false258

if.end256.if.then263_crit_edge:                   ; preds = %if.end256
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then263

lor.lhs.false258:                                 ; preds = %if.end256
  %rtnl_link_state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 123
  %125 = ptrtoint ptr %rtnl_link_state to i32
  call void @__asan_load2_noabort(i32 %125)
  %bf.load259 = load i16, ptr %rtnl_link_state, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load259)
  %cmp261 = icmp eq i16 %bf.load259, 0
  br i1 %cmp261, label %lor.lhs.false258.if.then263_crit_edge, label %lor.lhs.false258.cleanup_crit_edge

lor.lhs.false258.cleanup_crit_edge:               ; preds = %lor.lhs.false258
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false258.if.then263_crit_edge:            ; preds = %lor.lhs.false258
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then263

if.then263:                                       ; preds = %lor.lhs.false258.if.then263_crit_edge, %if.end256.if.then263_crit_edge
  call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %dev, i32 noundef -1, i32 noundef 3264) #35
  br label %cleanup

err_uninit:                                       ; preds = %if.then238, %call_netdevice_notifiers.exit.err_uninit_crit_edge, %for.body.i.err_uninit_crit_edge, %netdev_reg_state.exit
  %ret.1 = phi i32 [ %spec.select.i378, %call_netdevice_notifiers.exit.err_uninit_crit_edge ], [ %call236, %if.then238 ], [ -22, %netdev_reg_state.exit ], [ -16, %for.body.i.err_uninit_crit_edge ]
  %126 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %netdev_ops, align 8
  %ndo_uninit = getelementptr inbounds %struct.net_device_ops, ptr %127, i32 0, i32 1
  %128 = ptrtoint ptr %ndo_uninit to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %ndo_uninit, align 4
  %tobool266.not = icmp eq ptr %129, null
  br i1 %tobool266.not, label %err_uninit.if.end270_crit_edge, label %if.then267

err_uninit.if.end270_crit_edge:                   ; preds = %err_uninit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end270

if.then267:                                       ; preds = %err_uninit
  call void @__sanitizer_cov_trace_pc() #37
  call void %129(ptr noundef %dev) #35
  br label %if.end270

if.end270:                                        ; preds = %if.then267, %err_uninit.if.end270_crit_edge
  %priv_destructor = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 125
  %130 = ptrtoint ptr %priv_destructor to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %priv_destructor, align 4
  %tobool271.not = icmp eq ptr %131, null
  br i1 %tobool271.not, label %if.end270.err_free_name_crit_edge, label %if.then272

if.end270.err_free_name_crit_edge:                ; preds = %if.end270
  call void @__sanitizer_cov_trace_pc() #37
  br label %err_free_name

if.then272:                                       ; preds = %if.end270
  call void @__sanitizer_cov_trace_pc() #37
  call void %131(ptr noundef %dev) #35
  br label %err_free_name

err_free_name:                                    ; preds = %if.then272, %if.end270.err_free_name_crit_edge, %if.then129
  %ret.2 = phi i32 [ %ret.1, %if.then272 ], [ %ret.1, %if.end270.err_free_name_crit_edge ], [ %spec.select, %if.then129 ]
  %132 = ptrtoint ptr %name_node to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %name_node, align 16
  call void @kfree(ptr noundef %133) #35
  br label %cleanup

cleanup:                                          ; preds = %err_free_name, %if.then263, %lor.lhs.false258.cleanup_crit_edge, %if.then255, %netdev_name_node_head_alloc.exit.thread, %netdev_set_addr_lockdep_class.exit.cleanup_crit_edge, %do.end105.cleanup_crit_edge
  %retval.0 = phi i32 [ %call106, %do.end105.cleanup_crit_edge ], [ %call114, %netdev_set_addr_lockdep_class.exit.cleanup_crit_edge ], [ %ret.2, %err_free_name ], [ %spec.select.i382, %if.then255 ], [ 0, %if.then263 ], [ 0, %lor.lhs.false258.cleanup_crit_edge ], [ -12, %netdev_name_node_head_alloc.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ethtool_check_ops(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #4

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @dev_new_index(ptr nocapture noundef %net) unnamed_addr #24 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %ifindex1 = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 4
  %0 = ptrtoint ptr %ifindex1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ifindex1, align 8
  %dev_index_head.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %2 = ptrtoint ptr %dev_index_head.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_index_head.i.i, align 16
  %inc13 = add i32 %1, 1
  %4 = tail call i32 @llvm.smax.i32(i32 %inc13, i32 1)
  %and.i.i14 = and i32 %4, 255
  %arrayidx.i.i15 = getelementptr %struct.hlist_head, ptr %3, i32 %and.i.i14
  %5 = ptrtoint ptr %arrayidx.i.i15 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i.i15, align 4
  %tobool.not.i16 = icmp eq ptr %6, null
  %add.ptr.i17 = getelementptr i8, ptr %6, i32 -664
  %tobool2.not2528.i18 = icmp eq ptr %add.ptr.i17, null
  %tobool2.not25.i19 = or i1 %tobool.not.i16, %tobool2.not2528.i18
  br i1 %tobool2.not25.i19, label %entry.if.then2_crit_edge, label %entry.for.body.i.preheader_crit_edge

entry.for.body.i.preheader_crit_edge:             ; preds = %entry
  br label %for.body.i.preheader

entry.if.then2_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then2

for.cond.loopexit:                                ; preds = %for.body.i
  %inc = add nuw i32 %10, 1
  %7 = tail call i32 @llvm.smax.i32(i32 %inc, i32 1)
  %and.i.i = and i32 %7, 255
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %3, i32 %and.i.i
  %8 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool.not.i = icmp eq ptr %9, null
  %add.ptr.i = getelementptr i8, ptr %9, i32 -664
  %tobool2.not2528.i = icmp eq ptr %add.ptr.i, null
  %tobool2.not25.i = or i1 %tobool.not.i, %tobool2.not2528.i
  br i1 %tobool2.not25.i, label %for.cond.loopexit.if.then2_crit_edge, label %for.cond.loopexit.for.body.i.preheader_crit_edge

for.cond.loopexit.for.body.i.preheader_crit_edge: ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.preheader

for.cond.loopexit.if.then2_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then2

for.body.i.preheader:                             ; preds = %for.cond.loopexit.for.body.i.preheader_crit_edge, %entry.for.body.i.preheader_crit_edge
  %add.ptr.i20 = phi ptr [ %add.ptr.i, %for.cond.loopexit.for.body.i.preheader_crit_edge ], [ %add.ptr.i17, %entry.for.body.i.preheader_crit_edge ]
  %10 = phi i32 [ %7, %for.cond.loopexit.for.body.i.preheader_crit_edge ], [ %4, %entry.for.body.i.preheader_crit_edge ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.i.preheader
  %dev.026.i = phi ptr [ %add.ptr10.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i20, %for.body.i.preheader ]
  %ifindex3.i = getelementptr inbounds %struct.net_device, ptr %dev.026.i, i32 0, i32 17
  %11 = ptrtoint ptr %ifindex3.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ifindex3.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %10)
  %cmp.i = icmp eq i32 %12, %10
  br i1 %cmp.i, label %for.cond.loopexit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %index_hlist.i = getelementptr inbounds %struct.net_device, ptr %dev.026.i, i32 0, i32 101
  %13 = ptrtoint ptr %index_hlist.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %index_hlist.i, align 8
  %tobool6.not.i = icmp eq ptr %14, null
  %add.ptr10.i = getelementptr i8, ptr %14, i32 -664
  %tobool2.not29.i = icmp eq ptr %add.ptr10.i, null
  %tobool2.not.i = or i1 %tobool6.not.i, %tobool2.not29.i
  br i1 %tobool2.not.i, label %for.inc.i.if.then2_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.inc.i.if.then2_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then2

if.then2:                                         ; preds = %for.inc.i.if.then2_crit_edge, %for.cond.loopexit.if.then2_crit_edge, %entry.if.then2_crit_edge
  %15 = phi i32 [ %4, %entry.if.then2_crit_edge ], [ %10, %for.inc.i.if.then2_crit_edge ], [ %7, %for.cond.loopexit.if.then2_crit_edge ]
  %16 = ptrtoint ptr %ifindex1 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %ifindex1, align 8
  ret i32 %15
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_register_kobject(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_init_dev(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_init_scheduler(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_netdevice(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  %call1 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end30_crit_edge

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b48 = load i1, ptr @list_netdevice.__already_done, align 1
  br i1 %.b48, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !1311

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @list_netdevice.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 366, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 366) #35
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  tail call void @_raw_write_lock(ptr noundef nonnull @dev_base_lock) #35
  %dev_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 7
  %dev_base_head = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 16
  %prev.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 16, i32 1
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %dev_list, ptr noundef %3, ptr noundef %dev_base_head) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.end30.list_add_tail_rcu.exit_crit_edge

if.end30.list_add_tail_rcu.exit_crit_edge:        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_tail_rcu.exit

if.end.i.i:                                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  %4 = ptrtoint ptr %dev_list to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %dev_base_head, ptr %dev_list, align 4
  %prev2.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 7, i32 1
  %5 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %3, ptr %prev2.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1309
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %dev_list, ptr %3, align 4
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %dev_list, ptr %prev.i, align 4
  br label %list_add_tail_rcu.exit

list_add_tail_rcu.exit:                           ; preds = %if.end.i.i, %if.end30.list_add_tail_rcu.exit_crit_edge
  %name_node = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 1
  %8 = ptrtoint ptr %name_node to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %name_node, align 16
  %name.i = getelementptr inbounds %struct.netdev_name_node, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %name.i, align 4
  %call.i.i49 = tail call i32 @strnlen(ptr noundef %11, i32 noundef 16) #38
  %call1.i.i = tail call i32 @full_name_hash(ptr noundef %1, ptr noundef %11, i32 noundef %call.i.i49) #39
  %dev_name_head.i.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 23
  %12 = ptrtoint ptr %dev_name_head.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev_name_head.i.i, align 4
  %mul.i.i.i.i = mul i32 %call1.i.i, 1640531527
  %shr.i.i.i = lshr i32 %mul.i.i.i.i, 24
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %13, i32 %shr.i.i.i
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.i.i, align 4
  %16 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %9, align 4
  %pprev.i.i = getelementptr inbounds %struct.hlist_node, ptr %9, i32 0, i32 1
  %17 = ptrtoint ptr %pprev.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %arrayidx.i.i, ptr %pprev.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1308
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %9, ptr %arrayidx.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i, label %list_add_tail_rcu.exit.netdev_name_node_add.exit_crit_edge, label %do.body49.i.i

list_add_tail_rcu.exit.netdev_name_node_add.exit_crit_edge: ; preds = %list_add_tail_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_add.exit

do.body49.i.i:                                    ; preds = %list_add_tail_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  %pprev51.i.i = getelementptr inbounds %struct.hlist_node, ptr %15, i32 0, i32 1
  %19 = ptrtoint ptr %pprev51.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %9, ptr %pprev51.i.i, align 4
  br label %netdev_name_node_add.exit

netdev_name_node_add.exit:                        ; preds = %do.body49.i.i, %list_add_tail_rcu.exit.netdev_name_node_add.exit_crit_edge
  %index_hlist = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 101
  %ifindex = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 17
  %20 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ifindex, align 4
  %dev_index_head.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 24
  %22 = ptrtoint ptr %dev_index_head.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev_index_head.i, align 16
  %and.i = and i32 %21, 255
  %arrayidx.i = getelementptr %struct.hlist_head, ptr %23, i32 %and.i
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx.i, align 4
  %26 = ptrtoint ptr %index_hlist to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %25, ptr %index_hlist, align 4
  %pprev.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 101, i32 1
  %27 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %arrayidx.i, ptr %pprev.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1308
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %index_hlist, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp eq ptr %25, null
  br i1 %tobool.not.i, label %netdev_name_node_add.exit.hlist_add_head_rcu.exit_crit_edge, label %do.body49.i

netdev_name_node_add.exit.hlist_add_head_rcu.exit_crit_edge: ; preds = %netdev_name_node_add.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %hlist_add_head_rcu.exit

do.body49.i:                                      ; preds = %netdev_name_node_add.exit
  call void @__sanitizer_cov_trace_pc() #37
  %pprev51.i = getelementptr inbounds %struct.hlist_node, ptr %25, i32 0, i32 1
  %29 = ptrtoint ptr %pprev51.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %index_hlist, ptr %pprev51.i, align 4
  br label %hlist_add_head_rcu.exit

hlist_add_head_rcu.exit:                          ; preds = %do.body49.i, %netdev_name_node_add.exit.hlist_add_head_rcu.exit_crit_edge
  tail call void @_raw_write_unlock(ptr noundef nonnull @dev_base_lock) #35
  %dev_base_seq.i = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 3
  %30 = ptrtoint ptr %dev_base_seq.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %dev_base_seq.promoted.i = load i32, ptr %dev_base_seq.i, align 4
  %phi.bo.i = add i32 %dev_base_seq.promoted.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.bo.i)
  %cmp.i.peel = icmp eq i32 %phi.bo.i, 0
  %spec.select = select i1 %cmp.i.peel, i32 1, i32 %phi.bo.i
  %31 = ptrtoint ptr %dev_base_seq.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %spec.select, ptr %dev_base_seq.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unregister_netdevice_queue(ptr noundef %dev, ptr noundef %head) #1 align 64 {
entry:
  %single = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b45 = load i1, ptr @unregister_netdevice_queue.__already_done, align 1
  br i1 %.b45, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @unregister_netdevice_queue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10341, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 10341) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %tobool37.not = icmp eq ptr %head, null
  br i1 %tobool37.not, label %if.else, label %if.then38

if.then38:                                        ; preds = %if.end29
  %unreg_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %unreg_list) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.then38.__list_del_entry.exit.i_crit_edge

if.then38.__list_del_entry.exit.i_crit_edge:      ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #37
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 9, i32 1
  %0 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i.i, align 4
  %2 = ptrtoint ptr %unreg_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %unreg_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev1.i.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %3, ptr %1, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %if.then38.__list_del_entry.exit.i_crit_edge
  %prev.i2.i = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %6 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %unreg_list, ptr noundef %7, ptr noundef nonnull %head) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.if.end40_crit_edge

__list_del_entry.exit.i.if.end40_crit_edge:       ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end40

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %8 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %unreg_list, ptr %prev.i2.i, align 4
  %9 = ptrtoint ptr %unreg_list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %head, ptr %unreg_list, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 9, i32 1
  %10 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev3.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %unreg_list, ptr %7, align 4
  br label %if.end40

if.else:                                          ; preds = %if.end29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %single) #35
  %12 = getelementptr inbounds %struct.list_head, ptr %single, i32 0, i32 1
  %13 = ptrtoint ptr %single to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %single, ptr %single, align 4
  %14 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %single, ptr %12, align 4
  %unreg_list39 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 9
  %call.i.i46 = call zeroext i1 @__list_add_valid(ptr noundef %unreg_list39, ptr noundef nonnull %single, ptr noundef nonnull %single) #35
  br i1 %call.i.i46, label %if.end.i.i47, label %if.else.list_add.exit_crit_edge

if.else.list_add.exit_crit_edge:                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add.exit

if.end.i.i47:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  %15 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %unreg_list39, ptr %12, align 4
  %16 = ptrtoint ptr %unreg_list39 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %single, ptr %unreg_list39, align 4
  %prev3.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 9, i32 1
  %17 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %single, ptr %prev3.i.i, align 4
  %18 = ptrtoint ptr %single to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %unreg_list39, ptr %single, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i47, %if.else.list_add.exit_crit_edge
  call void @unregister_netdevice_many(ptr noundef nonnull %single)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %single) #35
  br label %if.end40

if.end40:                                         ; preds = %list_add.exit, %if.end.i.i.i, %__list_del_entry.exit.i.if.end40_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @init_dummy_netdev(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = call ptr @memset(ptr %dev, i32 0, i32 2304)
  %reg_state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %1 = ptrtoint ptr %reg_state to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 5, ptr %reg_state, align 4
  %napi_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 8
  %2 = ptrtoint ptr %napi_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %napi_list, ptr %napi_list, align 4
  %prev.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 8, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %napi_list, ptr %prev.i, align 4
  %state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  tail call void @_set_bit(i32 noundef 1, ptr noundef %state) #35
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state) #35
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %4 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @init_net, ptr %nd_net.i, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @register_netdev(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_lock_killable() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call1 = tail call i32 @register_netdevice(ptr noundef %dev)
  tail call void @rtnl_unlock() #35
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ -4, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rtnl_lock_killable() local_unnamed_addr #4

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @netdev_refcnt_read(ptr nocapture noundef readonly %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call6 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #39
  call void @__sanitizer_cov_trace_cmp4(i32 %call6, i32 %0)
  %cmp7 = icmp ult i32 %call6, %0
  br i1 %cmp7, label %do.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

do.body.lr.ph:                                    ; preds = %entry
  %pcpu_refcnt = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 118
  %1 = ptrtoint ptr %pcpu_refcnt to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pcpu_refcnt, align 4
  %3 = ptrtoint ptr %2 to i32
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %do.body.lr.ph
  %call9 = phi i32 [ %call6, %do.body.lr.ph ], [ %call, %do.body.do.body_crit_edge ]
  %refcnt.08 = phi i32 [ 0, %do.body.lr.ph ], [ %add2, %do.body.do.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, %3
  %6 = inttoptr i32 %add to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 4
  %add2 = add i32 %8, %refcnt.08
  %call = tail call i32 @cpumask_next(i32 noundef %call9, ptr noundef nonnull @__cpu_possible_mask) #39
  %cmp = icmp ult i32 %call, %0
  br i1 %cmp, label %do.body.do.body_crit_edge, label %do.body.for.end_crit_edge

do.body.for.end_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body

for.end:                                          ; preds = %do.body.for.end_crit_edge, %entry.for.end_crit_edge
  %refcnt.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %add2, %do.body.for.end_crit_edge ]
  ret i32 %refcnt.0.lcssa
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #25

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_run_todo() local_unnamed_addr #1 align 64 {
entry:
  %info.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %list = alloca %struct.list_head, align 4
  %unlink_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %list) #35
  %0 = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %unlink_list) #35
  %1 = getelementptr inbounds %struct.list_head, ptr %unlink_list, i32 0, i32 1
  %2 = load ptr, ptr @net_unlink_list, align 4
  %3 = ptrtoint ptr %unlink_list to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %2, ptr %unlink_list, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %unlink_list, ptr %prev.i.i, align 4
  %5 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @net_unlink_list, i32 0, i32 1), align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %1, align 4
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %unlink_list, ptr %5, align 4
  store volatile ptr @net_unlink_list, ptr @net_unlink_list, align 4
  store ptr @net_unlink_list, ptr getelementptr inbounds (%struct.list_head, ptr @net_unlink_list, i32 0, i32 1), align 4
  %8 = load volatile ptr, ptr %unlink_list, align 4
  %cmp.i.not245 = icmp eq ptr %8, %unlink_list
  br i1 %cmp.i.not245, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.body:                                       ; preds = %list_del_init.exit.while.body_crit_edge, %entry.while.body_crit_edge
  %9 = phi ptr [ %22, %list_del_init.exit.while.body_crit_edge ], [ %8, %entry.while.body_crit_edge ]
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %9) #35
  br i1 %call.i.i, label %if.end.i.i, label %while.body.list_del_init.exit_crit_edge

while.body.list_del_init.exit_crit_edge:          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i224 = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i.i224 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i224, align 4
  %12 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %9, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev1.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %11, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %while.body.list_del_init.exit_crit_edge
  %16 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %9, ptr %9, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %17 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %9, ptr %prev.i3.i, align 4
  %lower_level = getelementptr i8, ptr %9, i32 -109
  %18 = ptrtoint ptr %lower_level to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %lower_level, align 1
  %sub = add i8 %19, -1
  %nested_level = getelementptr i8, ptr %9, i32 17
  %20 = ptrtoint ptr %nested_level to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %sub, ptr %nested_level, align 1
  %21 = ptrtoint ptr %unlink_list to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %unlink_list, align 4
  %cmp.i.not = icmp eq ptr %22, %unlink_list
  br i1 %cmp.i.not, label %list_del_init.exit.while.end_crit_edge, label %list_del_init.exit.while.body_crit_edge

list_del_init.exit.while.body_crit_edge:          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body

list_del_init.exit.while.end_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.end:                                        ; preds = %list_del_init.exit.while.end_crit_edge, %entry.while.end_crit_edge
  %23 = load ptr, ptr @net_todo_list, align 4
  %24 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %23, ptr %list, align 4
  %prev.i.i225 = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %25 = ptrtoint ptr %prev.i.i225 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %list, ptr %prev.i.i225, align 4
  %26 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @net_todo_list, i32 0, i32 1), align 4
  %27 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %26, ptr %0, align 4
  %28 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %list, ptr %26, align 4
  store volatile ptr @net_todo_list, ptr @net_todo_list, align 4
  store ptr @net_todo_list, ptr getelementptr inbounds (%struct.list_head, ptr @net_todo_list, i32 0, i32 1), align 4
  call void @__rtnl_unlock() #35
  %29 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %list, align 4
  %cmp.i227.not = icmp eq ptr %30, %list
  br i1 %cmp.i227.not, label %while.end.if.end_crit_edge, label %if.then

while.end.if.end_crit_edge:                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #37
  call void @rcu_barrier() #35
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end.if.end_crit_edge
  %31 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile ptr, ptr %list, align 4
  %cmp.i229.not246 = icmp eq ptr %32, %list
  br i1 %cmp.i229.not246, label %if.end.while.end200_crit_edge, label %while.body9.lr.ph

if.end.while.end200_crit_edge:                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end200

while.body9.lr.ph:                                ; preds = %if.end
  %33 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i, i32 0, i32 1
  br label %while.body9

while.body9:                                      ; preds = %cleanup.while.body9_crit_edge, %while.body9.lr.ph
  %34 = phi ptr [ %32, %while.body9.lr.ph ], [ %105, %cleanup.while.body9_crit_edge ]
  %add.ptr14 = getelementptr i8, ptr %34, i32 -972
  %call.i.i231 = call zeroext i1 @__list_del_entry_valid(ptr noundef %34) #35
  br i1 %call.i.i231, label %if.end.i.i234, label %while.body9.list_del.exit_crit_edge

while.body9.list_del.exit_crit_edge:              ; preds = %while.body9
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del.exit

if.end.i.i234:                                    ; preds = %while.body9
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i232 = getelementptr inbounds %struct.list_head, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %prev.i.i232 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %prev.i.i232, align 4
  %37 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %34, align 4
  %prev1.i.i.i233 = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %prev1.i.i.i233 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %36, ptr %prev1.i.i.i233, align 4
  %40 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %38, ptr %36, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i234, %while.body9.list_del.exit_crit_edge
  %41 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr inttoptr (i32 256 to ptr), ptr %34, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %34, i32 0, i32 1
  %42 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %reg_state = getelementptr i8, ptr %34, i32 88
  %43 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %43)
  %bf.load = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %bf.load)
  %cmp.not = icmp eq i8 %bf.load, 2
  br i1 %cmp.not, label %if.end25, label %do.end, !prof !1311

do.end:                                           ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  %bf.cast = zext i8 %bf.load to i32
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.73, ptr noundef %add.ptr14, i32 noundef %bf.cast) #41
  call void @dump_stack() #41
  br label %cleanup

if.end25:                                         ; preds = %list_del.exit
  %44 = ptrtoint ptr %reg_state to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 3, ptr %reg_state, align 4
  call void @linkwatch_forget_dev(ptr noundef %add.ptr14) #35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %45 = load volatile i32, ptr @jiffies, align 128
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %46 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #39
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i.i, i32 %46)
  %cmp7.i.i = icmp ult i32 %call6.i.i, %46
  br i1 %cmp7.i.i, label %do.body.lr.ph.i.i, label %if.end25.while.body.lr.ph.i_crit_edge

if.end25.while.body.lr.ph.i_crit_edge:            ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.lr.ph.i

do.body.lr.ph.i.i:                                ; preds = %if.end25
  %pcpu_refcnt.i.i = getelementptr i8, ptr %34, i32 8
  %47 = ptrtoint ptr %pcpu_refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pcpu_refcnt.i.i, align 4
  %49 = ptrtoint ptr %48 to i32
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %do.body.lr.ph.i.i
  %call9.i.i = phi i32 [ %call6.i.i, %do.body.lr.ph.i.i ], [ %call.i.i235, %do.body.i.i.do.body.i.i_crit_edge ]
  %refcnt.08.i.i = phi i32 [ 0, %do.body.lr.ph.i.i ], [ %add2.i.i, %do.body.i.i.do.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i.i
  %50 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %51, %49
  %52 = inttoptr i32 %add.i.i to ptr
  %53 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %52, align 4
  %add2.i.i = add i32 %54, %refcnt.08.i.i
  %call.i.i235 = call i32 @cpumask_next(i32 noundef %call9.i.i, ptr noundef nonnull @__cpu_possible_mask) #39
  %cmp.i.i = icmp ult i32 %call.i.i235, %46
  br i1 %cmp.i.i, label %do.body.i.i.do.body.i.i_crit_edge, label %netdev_refcnt_read.exit.i

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i.i

netdev_refcnt_read.exit.i:                        ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %add2.i.i)
  %phi.cmp.i = icmp eq i32 %add2.i.i, 1
  br i1 %phi.cmp.i, label %netdev_refcnt_read.exit.i.netdev_wait_allrefs.exit_crit_edge, label %netdev_refcnt_read.exit.i.while.body.lr.ph.i_crit_edge

netdev_refcnt_read.exit.i.while.body.lr.ph.i_crit_edge: ; preds = %netdev_refcnt_read.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.lr.ph.i

netdev_refcnt_read.exit.i.netdev_wait_allrefs.exit_crit_edge: ; preds = %netdev_refcnt_read.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_wait_allrefs.exit

while.body.lr.ph.i:                               ; preds = %netdev_refcnt_read.exit.i.while.body.lr.ph.i_crit_edge, %if.end25.while.body.lr.ph.i_crit_edge
  %nd_net.i.i.i.i.i = getelementptr i8, ptr %34, i32 104
  %state.i = getelementptr i8, ptr %34, i32 -936
  %pcpu_refcnt.i33.i = getelementptr i8, ptr %34, i32 8
  %refcnt_tracker.i = getelementptr i8, ptr %34, i32 12
  br label %while.body.i.outer

while.body.i.outer:                               ; preds = %do.end.i, %while.body.lr.ph.i
  %rebroadcast_time.054.i.ph = phi i32 [ %rebroadcast_time.1.i, %do.end.i ], [ %45, %while.body.lr.ph.i ]
  %warning_time.052.i.ph = phi i32 [ %76, %do.end.i ], [ %45, %while.body.lr.ph.i ]
  %wait.051.i.ph = phi i32 [ %wait.1.i, %do.end.i ], [ 0, %while.body.lr.ph.i ]
  br label %while.body.i

while.body.i:                                     ; preds = %land.lhs.true.i.while.body.i_crit_edge, %while.body.i.outer
  %rebroadcast_time.054.i = phi i32 [ %rebroadcast_time.1.i, %land.lhs.true.i.while.body.i_crit_edge ], [ %rebroadcast_time.054.i.ph, %while.body.i.outer ]
  %wait.051.i = phi i32 [ %wait.1.i, %land.lhs.true.i.while.body.i_crit_edge ], [ %wait.051.i.ph, %while.body.i.outer ]
  %add.i = add i32 %rebroadcast_time.054.i, 100
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %55 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %add.i, %55
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp1.i = icmp slt i32 %sub.i, 0
  br i1 %cmp1.i, label %if.then.i, label %while.body.i.if.end5.i_crit_edge

while.body.i.if.end5.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end5.i

if.then.i:                                        ; preds = %while.body.i
  call void @rtnl_lock() #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i) #35
  %56 = ptrtoint ptr %info.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %add.ptr14, ptr %info.i.i.i, align 4
  %57 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr null, ptr %33, align 4
  %58 = ptrtoint ptr %nd_net.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %nd_net.i.i.i.i.i, align 4
  %call1.i.i.i.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.rhs.i.i.i.i, label %if.then.i.if.end30.i.i.i.i_crit_edge

if.then.i.if.end30.i.i.i.i_crit_edge:             ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.then.i
  %.b50.i.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i.i, label %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge:      ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i.i

if.end30.i.i.i.i:                                 ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.if.end30.i.i.i.i_crit_edge, %if.then.i.if.end30.i.i.i.i_crit_edge
  %netdev_chain.i.i.i.i = getelementptr inbounds %struct.net, ptr %59, i32 0, i32 25
  %call38.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i.i, i32 noundef 6, ptr noundef nonnull %info.i.i.i) #35
  %and.i.i.i.i = and i32 %call38.i.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool39.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool39.not.i.i.i.i, label %if.end41.i.i.i.i, label %if.end30.i.i.i.i.call_netdevice_notifiers.exit.i_crit_edge

if.end30.i.i.i.i.call_netdevice_notifiers.exit.i_crit_edge: ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit.i

if.end41.i.i.i.i:                                 ; preds = %if.end30.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 6, ptr noundef nonnull %info.i.i.i) #35
  br label %call_netdevice_notifiers.exit.i

call_netdevice_notifiers.exit.i:                  ; preds = %if.end41.i.i.i.i, %if.end30.i.i.i.i.call_netdevice_notifiers.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i) #35
  call void @__rtnl_unlock() #35
  call void @rcu_barrier() #35
  call void @rtnl_lock() #35
  %60 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %state.i, align 4
  %62 = and i32 %61, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i = icmp eq i32 %62, 0
  br i1 %tobool.not.i, label %call_netdevice_notifiers.exit.i.if.end.i_crit_edge, label %if.then4.i

call_netdevice_notifiers.exit.i.if.end.i_crit_edge: ; preds = %call_netdevice_notifiers.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then4.i:                                       ; preds = %call_netdevice_notifiers.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @linkwatch_run_queue() #35
  br label %if.end.i

if.end.i:                                         ; preds = %if.then4.i, %call_netdevice_notifiers.exit.i.if.end.i_crit_edge
  call void @__rtnl_unlock() #35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %63 = load volatile i32, ptr @jiffies, align 128
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.end.i, %while.body.i.if.end5.i_crit_edge
  %rebroadcast_time.1.i = phi i32 [ %63, %if.end.i ], [ %rebroadcast_time.054.i, %while.body.i.if.end5.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %wait.051.i)
  %tobool6.not.i = icmp eq i32 %wait.051.i, 0
  br i1 %tobool6.not.i, label %if.then7.i, label %if.else.i

if.then7.i:                                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @rcu_barrier() #35
  br label %if.end9.i

if.else.i:                                        ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @msleep(i32 noundef %wait.051.i) #35
  %shl.i = shl i32 %wait.051.i, 1
  %64 = call i32 @llvm.smin.i32(i32 %shl.i, i32 250) #35
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.else.i, %if.then7.i
  %wait.1.i = phi i32 [ %64, %if.else.i ], [ 1, %if.then7.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %65 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i31.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #39
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i31.i, i32 %65)
  %cmp7.i32.i = icmp ult i32 %call6.i31.i, %65
  br i1 %cmp7.i32.i, label %do.body.lr.ph.i34.i, label %if.end9.i.land.lhs.true.i_crit_edge

if.end9.i.land.lhs.true.i_crit_edge:              ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %land.lhs.true.i

do.body.lr.ph.i34.i:                              ; preds = %if.end9.i
  %66 = ptrtoint ptr %pcpu_refcnt.i33.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %pcpu_refcnt.i33.i, align 4
  %68 = ptrtoint ptr %67 to i32
  br label %do.body.i42.i

do.body.i42.i:                                    ; preds = %do.body.i42.i.do.body.i42.i_crit_edge, %do.body.lr.ph.i34.i
  %call9.i35.i = phi i32 [ %call6.i31.i, %do.body.lr.ph.i34.i ], [ %call.i40.i, %do.body.i42.i.do.body.i42.i_crit_edge ]
  %refcnt.08.i36.i = phi i32 [ 0, %do.body.lr.ph.i34.i ], [ %add2.i39.i, %do.body.i42.i.do.body.i42.i_crit_edge ]
  %arrayidx.i37.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i35.i
  %69 = ptrtoint ptr %arrayidx.i37.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx.i37.i, align 4
  %add.i38.i = add i32 %70, %68
  %71 = inttoptr i32 %add.i38.i to ptr
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 4
  %add2.i39.i = add i32 %73, %refcnt.08.i36.i
  %call.i40.i = call i32 @cpumask_next(i32 noundef %call9.i35.i, ptr noundef nonnull @__cpu_possible_mask) #39
  %cmp.i41.i = icmp ult i32 %call.i40.i, %65
  br i1 %cmp.i41.i, label %do.body.i42.i.do.body.i42.i_crit_edge, label %netdev_refcnt_read.exit44.i

do.body.i42.i.do.body.i42.i_crit_edge:            ; preds = %do.body.i42.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i42.i

netdev_refcnt_read.exit44.i:                      ; preds = %do.body.i42.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %add2.i39.i)
  %cmp11.not.i = icmp eq i32 %add2.i39.i, 1
  br i1 %cmp11.not.i, label %netdev_refcnt_read.exit44.i.netdev_wait_allrefs.exit_crit_edge, label %netdev_refcnt_read.exit44.i.land.lhs.true.i_crit_edge

netdev_refcnt_read.exit44.i.land.lhs.true.i_crit_edge: ; preds = %netdev_refcnt_read.exit44.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %land.lhs.true.i

netdev_refcnt_read.exit44.i.netdev_wait_allrefs.exit_crit_edge: ; preds = %netdev_refcnt_read.exit44.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_wait_allrefs.exit

land.lhs.true.i:                                  ; preds = %netdev_refcnt_read.exit44.i.land.lhs.true.i_crit_edge, %if.end9.i.land.lhs.true.i_crit_edge
  %refcnt.0.lcssa.i4347.i = phi i32 [ %add2.i39.i, %netdev_refcnt_read.exit44.i.land.lhs.true.i_crit_edge ], [ 0, %if.end9.i.land.lhs.true.i_crit_edge ]
  %74 = load i32, ptr @netdev_unregister_timeout_secs, align 4
  %mul.i = mul i32 %74, 100
  %add12.i = add i32 %mul.i, %warning_time.052.i.ph
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %75 = load volatile i32, ptr @jiffies, align 128
  %sub13.i = sub i32 %add12.i, %75
  %cmp14.i = icmp slt i32 %sub13.i, 0
  br i1 %cmp14.i, label %do.end.i, label %land.lhs.true.i.while.body.i_crit_edge

land.lhs.true.i.while.body.i_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.i

do.end.i:                                         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  %call17.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.272, ptr noundef %add.ptr14, i32 noundef %refcnt.0.lcssa.i4347.i) #41
  call void @ref_tracker_dir_print(ptr noundef %refcnt_tracker.i, i32 noundef 10) #35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %76 = load volatile i32, ptr @jiffies, align 128
  br label %while.body.i.outer

netdev_wait_allrefs.exit:                         ; preds = %netdev_refcnt_read.exit44.i.netdev_wait_allrefs.exit_crit_edge, %netdev_refcnt_read.exit.i.netdev_wait_allrefs.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %77 = load i32, ptr @nr_cpu_ids, align 4
  %call6.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #39
  call void @__sanitizer_cov_trace_cmp4(i32 %call6.i, i32 %77)
  %cmp7.i = icmp ult i32 %call6.i, %77
  br i1 %cmp7.i, label %do.body.lr.ph.i, label %netdev_wait_allrefs.exit.do.body38_crit_edge

netdev_wait_allrefs.exit.do.body38_crit_edge:     ; preds = %netdev_wait_allrefs.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body38

do.body.lr.ph.i:                                  ; preds = %netdev_wait_allrefs.exit
  %pcpu_refcnt.i = getelementptr i8, ptr %34, i32 8
  %78 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %pcpu_refcnt.i, align 4
  %80 = ptrtoint ptr %79 to i32
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body.lr.ph.i
  %call9.i = phi i32 [ %call6.i, %do.body.lr.ph.i ], [ %call.i, %do.body.i.do.body.i_crit_edge ]
  %refcnt.08.i = phi i32 [ 0, %do.body.lr.ph.i ], [ %add2.i, %do.body.i.do.body.i_crit_edge ]
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9.i
  %81 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx.i, align 4
  %add.i236 = add i32 %82, %80
  %83 = inttoptr i32 %add.i236 to ptr
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %83, align 4
  %add2.i = add i32 %85, %refcnt.08.i
  %call.i = call i32 @cpumask_next(i32 noundef %call9.i, ptr noundef nonnull @__cpu_possible_mask) #39
  %cmp.i237 = icmp ult i32 %call.i, %77
  br i1 %cmp.i237, label %do.body.i.do.body.i_crit_edge, label %netdev_refcnt_read.exit

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

netdev_refcnt_read.exit:                          ; preds = %do.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %add2.i)
  %cmp29.not = icmp eq i32 %add2.i, 1
  br i1 %cmp29.not, label %do.body47, label %netdev_refcnt_read.exit.do.body38_crit_edge, !prof !1311

netdev_refcnt_read.exit.do.body38_crit_edge:      ; preds = %netdev_refcnt_read.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body38

do.body38:                                        ; preds = %netdev_refcnt_read.exit.do.body38_crit_edge, %netdev_wait_allrefs.exit.do.body38_crit_edge
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9953, 0\0A.popsection", ""() #35, !srcloc !1409
  unreachable

do.body47:                                        ; preds = %netdev_refcnt_read.exit
  %ptype_all = getelementptr i8, ptr %34, i32 -900
  %86 = ptrtoint ptr %ptype_all to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile ptr, ptr %ptype_all, align 4
  %cmp.i238.not = icmp eq ptr %87, %ptype_all
  br i1 %cmp.i238.not, label %do.body68, label %do.body59, !prof !1311

do.body59:                                        ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #37
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9954, 0\0A.popsection", ""() #35, !srcloc !1410
  unreachable

do.body68:                                        ; preds = %do.body47
  %ptype_specific = getelementptr i8, ptr %34, i32 -892
  %88 = ptrtoint ptr %ptype_specific to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile ptr, ptr %ptype_specific, align 4
  %cmp.i240.not = icmp eq ptr %89, %ptype_specific
  br i1 %cmp.i240.not, label %do.end88, label %do.body80, !prof !1311

do.body80:                                        ; preds = %do.body68
  call void @__sanitizer_cov_trace_pc() #37
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 9955, 0\0A.popsection", ""() #35, !srcloc !1411
  unreachable

do.end88:                                         ; preds = %do.body68
  %ip_ptr = getelementptr i8, ptr %34, i32 -428
  %90 = ptrtoint ptr %ip_ptr to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile ptr, ptr %ip_ptr, align 32
  %tobool94.not = icmp eq ptr %91, null
  br i1 %tobool94.not, label %do.end88.if.end116_crit_edge, label %do.end110, !prof !1311

do.end88.if.end116_crit_edge:                     ; preds = %do.end88
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end116

do.end110:                                        ; preds = %do.end88
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9956, i32 noundef 9, ptr noundef null) #35
  br label %if.end116

if.end116:                                        ; preds = %do.end110, %do.end88.if.end116_crit_edge
  %ip6_ptr = getelementptr i8, ptr %34, i32 -420
  %92 = ptrtoint ptr %ip6_ptr to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile ptr, ptr %ip6_ptr, align 8
  %tobool130.not = icmp eq ptr %93, null
  br i1 %tobool130.not, label %if.end116.if.end152_crit_edge, label %do.end146, !prof !1311

if.end116.if.end152_crit_edge:                    ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end152

do.end146:                                        ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9957, i32 noundef 9, ptr noundef null) #35
  br label %if.end152

if.end152:                                        ; preds = %do.end146, %if.end116.if.end152_crit_edge
  %dn_ptr = getelementptr i8, ptr %34, i32 -424
  %94 = ptrtoint ptr %dn_ptr to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %dn_ptr, align 4
  %tobool161.not = icmp eq ptr %95, null
  br i1 %tobool161.not, label %if.end152.if.end183_crit_edge, label %do.end177, !prof !1311

if.end152.if.end183_crit_edge:                    ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end183

do.end177:                                        ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 9959, i32 noundef 9, ptr noundef null) #35
  br label %if.end183

if.end183:                                        ; preds = %do.end177, %if.end152.if.end183_crit_edge
  %priv_destructor = getelementptr i8, ptr %34, i32 96
  %96 = ptrtoint ptr %priv_destructor to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %priv_destructor, align 4
  %tobool191.not = icmp eq ptr %97, null
  br i1 %tobool191.not, label %if.end183.if.end194_crit_edge, label %if.then192

if.end183.if.end194_crit_edge:                    ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end194

if.then192:                                       ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #37
  call void %97(ptr noundef %add.ptr14) #35
  br label %if.end194

if.end194:                                        ; preds = %if.then192, %if.end183.if.end194_crit_edge
  %needs_free_netdev = getelementptr i8, ptr %34, i32 92
  %98 = ptrtoint ptr %needs_free_netdev to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %needs_free_netdev, align 8, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %99)
  %tobool195.not = icmp eq i8 %99, 0
  br i1 %tobool195.not, label %if.end194.if.end197_crit_edge, label %if.then196

if.end194.if.end197_crit_edge:                    ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end197

if.then196:                                       ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #37
  call void @free_netdev(ptr noundef %add.ptr14)
  br label %if.end197

if.end197:                                        ; preds = %if.then196, %if.end194.if.end197_crit_edge
  call void @rtnl_lock() #35
  %nd_net.i = getelementptr i8, ptr %34, i32 104
  %100 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %nd_net.i, align 4
  %dev_unreg_count = getelementptr inbounds %struct.net, ptr %101, i32 0, i32 2
  %102 = ptrtoint ptr %dev_unreg_count to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %dev_unreg_count, align 16
  %dec = add i32 %103, -1
  store i32 %dec, ptr %dev_unreg_count, align 16
  call void @__rtnl_unlock() #35
  call void @__wake_up(ptr noundef nonnull @netdev_unregistering_wq, i32 noundef 3, i32 noundef 1, ptr noundef null) #35
  %dev199 = getelementptr i8, ptr %34, i32 132
  call void @kobject_put(ptr noundef %dev199) #35
  br label %cleanup

cleanup:                                          ; preds = %if.end197, %do.end
  %104 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile ptr, ptr %list, align 4
  %cmp.i229.not = icmp eq ptr %105, %list
  br i1 %cmp.i229.not, label %cleanup.while.end200_crit_edge, label %cleanup.while.body9_crit_edge

cleanup.while.body9_crit_edge:                    ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body9

cleanup.while.end200_crit_edge:                   ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end200

while.end200:                                     ; preds = %cleanup.while.end200_crit_edge, %if.end.while.end200_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %unlink_list) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %list) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rtnl_unlock() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_netdev(ptr noundef %dev) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10265) #35
  %reg_state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %0 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %bf.load)
  %cmp = icmp eq i8 %bf.load, 2
  br i1 %cmp, label %if.then, label %if.end44

if.then:                                          ; preds = %entry
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %if.then.if.end36_crit_edge

if.then.if.end36_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end36

land.rhs:                                         ; preds = %if.then
  %.b118 = load i1, ptr @free_netdev.__already_done, align 1
  br i1 %.b118, label %land.rhs.if.end36_crit_edge, label %if.then12, !prof !1311

land.rhs.if.end36_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end36

if.then12:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @free_netdev.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10272, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 10272) #35
  br label %if.end36

if.end36:                                         ; preds = %if.then12, %land.rhs.if.end36_crit_edge, %if.then.if.end36_crit_edge
  %needs_free_netdev = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 124
  %1 = ptrtoint ptr %needs_free_netdev to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 1, ptr %needs_free_netdev, align 8
  br label %cleanup

if.end44:                                         ; preds = %entry
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %2 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %_tx.i, align 128
  tail call void @kvfree(ptr noundef %3) #35
  %num_rx_queues.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 88
  %4 = ptrtoint ptr %num_rx_queues.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_rx_queues.i, align 8
  %_rx.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 87
  %6 = ptrtoint ptr %_rx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %_rx.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end44.netif_free_rx_queues.exit_crit_edge, label %for.cond.preheader.i

if.end44.netif_free_rx_queues.exit_crit_edge:     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_free_rx_queues.exit

for.cond.preheader.i:                             ; preds = %if.end44
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp9.not.i = icmp eq i32 %5, 0
  br i1 %cmp9.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.010.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %8 = ptrtoint ptr %_rx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %_rx.i, align 4
  %arrayidx.i = getelementptr %struct.netdev_rx_queue, ptr %9, i32 %i.010.i
  tail call void @xdp_rxq_info_unreg(ptr noundef %arrayidx.i) #35
  %inc.i = add nuw i32 %i.010.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %5
  br i1 %exitcond.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %10 = ptrtoint ptr %_rx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %_rx.i, align 4
  tail call void @kvfree(ptr noundef %11) #35
  br label %netif_free_rx_queues.exit

netif_free_rx_queues.exit:                        ; preds = %for.end.i, %if.end44.netif_free_rx_queues.exit_crit_edge
  %ingress_queue = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 97
  %12 = ptrtoint ptr %ingress_queue to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ingress_queue, align 4
  tail call void @kfree(ptr noundef %13) #35
  tail call void @dev_addr_flush(ptr noundef %dev) #35
  %napi_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 8
  %14 = ptrtoint ptr %napi_list to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %napi_list, align 16
  %cmp56.not120 = icmp eq ptr %15, %napi_list
  br i1 %cmp56.not120, label %netif_free_rx_queues.exit.for.end_crit_edge, label %netif_free_rx_queues.exit.for.body_crit_edge

netif_free_rx_queues.exit.for.body_crit_edge:     ; preds = %netif_free_rx_queues.exit
  br label %for.body

netif_free_rx_queues.exit.for.end_crit_edge:      ; preds = %netif_free_rx_queues.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %netif_napi_del.exit.for.body_crit_edge, %netif_free_rx_queues.exit.for.body_crit_edge
  %.pn.in121 = phi ptr [ %.pn, %netif_napi_del.exit.for.body_crit_edge ], [ %15, %netif_free_rx_queues.exit.for.body_crit_edge ]
  %p.0 = getelementptr i8, ptr %.pn.in121, i32 -200
  %16 = ptrtoint ptr %.pn.in121 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn = load ptr, ptr %.pn.in121, align 8
  tail call void @__netif_napi_del(ptr noundef %p.0) #35
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu_expedited() #35
  br label %netif_napi_del.exit

if.else.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @synchronize_rcu() #35
  br label %netif_napi_del.exit

netif_napi_del.exit:                              ; preds = %if.else.i.i, %if.then.i.i
  %cmp56.not = icmp eq ptr %.pn, %napi_list
  br i1 %cmp56.not, label %netif_napi_del.exit.for.end_crit_edge, label %netif_napi_del.exit.for.body_crit_edge

netif_napi_del.exit.for.body_crit_edge:           ; preds = %netif_napi_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

netif_napi_del.exit.for.end_crit_edge:            ; preds = %netif_napi_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %netif_napi_del.exit.for.end_crit_edge, %netif_free_rx_queues.exit.for.end_crit_edge
  %refcnt_tracker = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 119
  tail call void @ref_tracker_dir_exit(ptr noundef %refcnt_tracker) #35
  %pcpu_refcnt = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 118
  %17 = ptrtoint ptr %pcpu_refcnt to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pcpu_refcnt, align 4
  tail call void @free_percpu(ptr noundef %18) #35
  %19 = ptrtoint ptr %pcpu_refcnt to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %pcpu_refcnt, align 4
  %xdp_bulkq = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 109
  %20 = ptrtoint ptr %xdp_bulkq to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %xdp_bulkq, align 64
  tail call void @free_percpu(ptr noundef %21) #35
  %22 = ptrtoint ptr %xdp_bulkq to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %xdp_bulkq, align 64
  %23 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %23)
  %bf.load67 = load i8, ptr %reg_state, align 4
  %24 = zext i8 %bf.load67 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.311)
  switch i8 %bf.load67, label %do.body84 [
    i8 0, label %if.then70
    i8 3, label %do.end92
  ], !prof !1412

if.then70:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  %padded.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 62
  %25 = ptrtoint ptr %padded.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %padded.i, align 2
  %conv.i = zext i16 %26 to i32
  %idx.neg.i = sub nsw i32 0, %conv.i
  %add.ptr.i = getelementptr i8, ptr %dev, i32 %idx.neg.i
  tail call void @kvfree(ptr noundef %add.ptr.i) #35
  br label %cleanup

do.body84:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10302, 0\0A.popsection", ""() #35, !srcloc !1413
  unreachable

do.end92:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  %27 = ptrtoint ptr %reg_state to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 4, ptr %reg_state, align 4
  %dev94 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  tail call void @put_device(ptr noundef %dev94) #35
  br label %cleanup

cleanup:                                          ; preds = %do.end92, %if.then70, %if.end36
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_put(ptr noundef) local_unnamed_addr #4

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_stats_to_stats64(ptr nocapture noundef writeonly %stats64, ptr nocapture noundef readonly %netdev_stats) #26 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %netdev_stats to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %netdev_stats, align 4
  %conv = zext i32 %1 to i64
  %2 = ptrtoint ptr %stats64 to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %conv, ptr %stats64, align 8
  %arrayidx.1 = getelementptr i32, ptr %netdev_stats, i32 1
  %3 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx.1, align 4
  %conv.1 = zext i32 %4 to i64
  %arrayidx2.1 = getelementptr i64, ptr %stats64, i32 1
  %5 = ptrtoint ptr %arrayidx2.1 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %conv.1, ptr %arrayidx2.1, align 8
  %arrayidx.2 = getelementptr i32, ptr %netdev_stats, i32 2
  %6 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.2, align 4
  %conv.2 = zext i32 %7 to i64
  %arrayidx2.2 = getelementptr i64, ptr %stats64, i32 2
  %8 = ptrtoint ptr %arrayidx2.2 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %conv.2, ptr %arrayidx2.2, align 8
  %arrayidx.3 = getelementptr i32, ptr %netdev_stats, i32 3
  %9 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.3, align 4
  %conv.3 = zext i32 %10 to i64
  %arrayidx2.3 = getelementptr i64, ptr %stats64, i32 3
  %11 = ptrtoint ptr %arrayidx2.3 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %conv.3, ptr %arrayidx2.3, align 8
  %arrayidx.4 = getelementptr i32, ptr %netdev_stats, i32 4
  %12 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.4, align 4
  %conv.4 = zext i32 %13 to i64
  %arrayidx2.4 = getelementptr i64, ptr %stats64, i32 4
  %14 = ptrtoint ptr %arrayidx2.4 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %conv.4, ptr %arrayidx2.4, align 8
  %arrayidx.5 = getelementptr i32, ptr %netdev_stats, i32 5
  %15 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.5, align 4
  %conv.5 = zext i32 %16 to i64
  %arrayidx2.5 = getelementptr i64, ptr %stats64, i32 5
  %17 = ptrtoint ptr %arrayidx2.5 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %conv.5, ptr %arrayidx2.5, align 8
  %arrayidx.6 = getelementptr i32, ptr %netdev_stats, i32 6
  %18 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.6, align 4
  %conv.6 = zext i32 %19 to i64
  %arrayidx2.6 = getelementptr i64, ptr %stats64, i32 6
  %20 = ptrtoint ptr %arrayidx2.6 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %conv.6, ptr %arrayidx2.6, align 8
  %arrayidx.7 = getelementptr i32, ptr %netdev_stats, i32 7
  %21 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx.7, align 4
  %conv.7 = zext i32 %22 to i64
  %arrayidx2.7 = getelementptr i64, ptr %stats64, i32 7
  %23 = ptrtoint ptr %arrayidx2.7 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %conv.7, ptr %arrayidx2.7, align 8
  %arrayidx.8 = getelementptr i32, ptr %netdev_stats, i32 8
  %24 = ptrtoint ptr %arrayidx.8 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.8, align 4
  %conv.8 = zext i32 %25 to i64
  %arrayidx2.8 = getelementptr i64, ptr %stats64, i32 8
  %26 = ptrtoint ptr %arrayidx2.8 to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %conv.8, ptr %arrayidx2.8, align 8
  %arrayidx.9 = getelementptr i32, ptr %netdev_stats, i32 9
  %27 = ptrtoint ptr %arrayidx.9 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.9, align 4
  %conv.9 = zext i32 %28 to i64
  %arrayidx2.9 = getelementptr i64, ptr %stats64, i32 9
  %29 = ptrtoint ptr %arrayidx2.9 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %conv.9, ptr %arrayidx2.9, align 8
  %arrayidx.10 = getelementptr i32, ptr %netdev_stats, i32 10
  %30 = ptrtoint ptr %arrayidx.10 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx.10, align 4
  %conv.10 = zext i32 %31 to i64
  %arrayidx2.10 = getelementptr i64, ptr %stats64, i32 10
  %32 = ptrtoint ptr %arrayidx2.10 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %conv.10, ptr %arrayidx2.10, align 8
  %arrayidx.11 = getelementptr i32, ptr %netdev_stats, i32 11
  %33 = ptrtoint ptr %arrayidx.11 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.11, align 4
  %conv.11 = zext i32 %34 to i64
  %arrayidx2.11 = getelementptr i64, ptr %stats64, i32 11
  %35 = ptrtoint ptr %arrayidx2.11 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %conv.11, ptr %arrayidx2.11, align 8
  %arrayidx.12 = getelementptr i32, ptr %netdev_stats, i32 12
  %36 = ptrtoint ptr %arrayidx.12 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx.12, align 4
  %conv.12 = zext i32 %37 to i64
  %arrayidx2.12 = getelementptr i64, ptr %stats64, i32 12
  %38 = ptrtoint ptr %arrayidx2.12 to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %conv.12, ptr %arrayidx2.12, align 8
  %arrayidx.13 = getelementptr i32, ptr %netdev_stats, i32 13
  %39 = ptrtoint ptr %arrayidx.13 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.13, align 4
  %conv.13 = zext i32 %40 to i64
  %arrayidx2.13 = getelementptr i64, ptr %stats64, i32 13
  %41 = ptrtoint ptr %arrayidx2.13 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %conv.13, ptr %arrayidx2.13, align 8
  %arrayidx.14 = getelementptr i32, ptr %netdev_stats, i32 14
  %42 = ptrtoint ptr %arrayidx.14 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.14, align 4
  %conv.14 = zext i32 %43 to i64
  %arrayidx2.14 = getelementptr i64, ptr %stats64, i32 14
  %44 = ptrtoint ptr %arrayidx2.14 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %conv.14, ptr %arrayidx2.14, align 8
  %arrayidx.15 = getelementptr i32, ptr %netdev_stats, i32 15
  %45 = ptrtoint ptr %arrayidx.15 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx.15, align 4
  %conv.15 = zext i32 %46 to i64
  %arrayidx2.15 = getelementptr i64, ptr %stats64, i32 15
  %47 = ptrtoint ptr %arrayidx2.15 to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %conv.15, ptr %arrayidx2.15, align 8
  %arrayidx.16 = getelementptr i32, ptr %netdev_stats, i32 16
  %48 = ptrtoint ptr %arrayidx.16 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx.16, align 4
  %conv.16 = zext i32 %49 to i64
  %arrayidx2.16 = getelementptr i64, ptr %stats64, i32 16
  %50 = ptrtoint ptr %arrayidx2.16 to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %conv.16, ptr %arrayidx2.16, align 8
  %arrayidx.17 = getelementptr i32, ptr %netdev_stats, i32 17
  %51 = ptrtoint ptr %arrayidx.17 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx.17, align 4
  %conv.17 = zext i32 %52 to i64
  %arrayidx2.17 = getelementptr i64, ptr %stats64, i32 17
  %53 = ptrtoint ptr %arrayidx2.17 to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %conv.17, ptr %arrayidx2.17, align 8
  %arrayidx.18 = getelementptr i32, ptr %netdev_stats, i32 18
  %54 = ptrtoint ptr %arrayidx.18 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.18, align 4
  %conv.18 = zext i32 %55 to i64
  %arrayidx2.18 = getelementptr i64, ptr %stats64, i32 18
  %56 = ptrtoint ptr %arrayidx2.18 to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %conv.18, ptr %arrayidx2.18, align 8
  %arrayidx.19 = getelementptr i32, ptr %netdev_stats, i32 19
  %57 = ptrtoint ptr %arrayidx.19 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx.19, align 4
  %conv.19 = zext i32 %58 to i64
  %arrayidx2.19 = getelementptr i64, ptr %stats64, i32 19
  %59 = ptrtoint ptr %arrayidx2.19 to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 %conv.19, ptr %arrayidx2.19, align 8
  %arrayidx.20 = getelementptr i32, ptr %netdev_stats, i32 20
  %60 = ptrtoint ptr %arrayidx.20 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx.20, align 4
  %conv.20 = zext i32 %61 to i64
  %arrayidx2.20 = getelementptr i64, ptr %stats64, i32 20
  %62 = ptrtoint ptr %arrayidx2.20 to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %conv.20, ptr %arrayidx2.20, align 8
  %arrayidx.21 = getelementptr i32, ptr %netdev_stats, i32 21
  %63 = ptrtoint ptr %arrayidx.21 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx.21, align 4
  %conv.21 = zext i32 %64 to i64
  %arrayidx2.21 = getelementptr i64, ptr %stats64, i32 21
  %65 = ptrtoint ptr %arrayidx2.21 to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 %conv.21, ptr %arrayidx2.21, align 8
  %arrayidx.22 = getelementptr i32, ptr %netdev_stats, i32 22
  %66 = ptrtoint ptr %arrayidx.22 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx.22, align 4
  %conv.22 = zext i32 %67 to i64
  %arrayidx2.22 = getelementptr i64, ptr %stats64, i32 22
  %68 = ptrtoint ptr %arrayidx2.22 to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %conv.22, ptr %arrayidx2.22, align 8
  %add.ptr = getelementptr i8, ptr %stats64, i32 184
  %69 = ptrtoint ptr %add.ptr to i32
  call void @__asan_storeN_noabort(i32 %69, i32 8)
  store i64 0, ptr %add.ptr, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_get_stats(ptr noundef %dev, ptr noundef returned %storage) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %0 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %netdev_ops, align 8
  %ndo_get_stats64 = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 20
  %2 = ptrtoint ptr %ndo_get_stats64 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ndo_get_stats64, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %4 = call ptr @memset(ptr %storage, i32 0, i32 192)
  %5 = ptrtoint ptr %ndo_get_stats64 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ndo_get_stats64, align 4
  tail call void %6(ptr noundef %dev, ptr noundef %storage) #35
  br label %if.end6

if.else:                                          ; preds = %entry
  %ndo_get_stats = getelementptr inbounds %struct.net_device_ops, ptr %1, i32 0, i32 23
  %7 = ptrtoint ptr %ndo_get_stats to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ndo_get_stats, align 4
  %tobool2.not = icmp eq ptr %8, null
  br i1 %tobool2.not, label %if.else5, label %if.then3

if.then3:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  %call = tail call ptr %8(ptr noundef %dev) #35
  %9 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %call, align 4
  %conv.i = zext i32 %10 to i64
  %11 = ptrtoint ptr %storage to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %conv.i, ptr %storage, align 8
  %arrayidx.1.i = getelementptr i32, ptr %call, i32 1
  %12 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.1.i, align 4
  %conv.1.i = zext i32 %13 to i64
  %arrayidx2.1.i = getelementptr i64, ptr %storage, i32 1
  %14 = ptrtoint ptr %arrayidx2.1.i to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %conv.1.i, ptr %arrayidx2.1.i, align 8
  %arrayidx.2.i = getelementptr i32, ptr %call, i32 2
  %15 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.2.i, align 4
  %conv.2.i = zext i32 %16 to i64
  %arrayidx2.2.i = getelementptr i64, ptr %storage, i32 2
  %17 = ptrtoint ptr %arrayidx2.2.i to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %conv.2.i, ptr %arrayidx2.2.i, align 8
  %arrayidx.3.i = getelementptr i32, ptr %call, i32 3
  %18 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.3.i, align 4
  %conv.3.i = zext i32 %19 to i64
  %arrayidx2.3.i = getelementptr i64, ptr %storage, i32 3
  %20 = ptrtoint ptr %arrayidx2.3.i to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %conv.3.i, ptr %arrayidx2.3.i, align 8
  %arrayidx.4.i = getelementptr i32, ptr %call, i32 4
  %21 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx.4.i, align 4
  %conv.4.i = zext i32 %22 to i64
  %arrayidx2.4.i = getelementptr i64, ptr %storage, i32 4
  %23 = ptrtoint ptr %arrayidx2.4.i to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %conv.4.i, ptr %arrayidx2.4.i, align 8
  %arrayidx.5.i = getelementptr i32, ptr %call, i32 5
  %24 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.5.i, align 4
  %conv.5.i = zext i32 %25 to i64
  %arrayidx2.5.i = getelementptr i64, ptr %storage, i32 5
  %26 = ptrtoint ptr %arrayidx2.5.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %conv.5.i, ptr %arrayidx2.5.i, align 8
  %arrayidx.6.i = getelementptr i32, ptr %call, i32 6
  %27 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.6.i, align 4
  %conv.6.i = zext i32 %28 to i64
  %arrayidx2.6.i = getelementptr i64, ptr %storage, i32 6
  %29 = ptrtoint ptr %arrayidx2.6.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %conv.6.i, ptr %arrayidx2.6.i, align 8
  %arrayidx.7.i = getelementptr i32, ptr %call, i32 7
  %30 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx.7.i, align 4
  %conv.7.i = zext i32 %31 to i64
  %arrayidx2.7.i = getelementptr i64, ptr %storage, i32 7
  %32 = ptrtoint ptr %arrayidx2.7.i to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %conv.7.i, ptr %arrayidx2.7.i, align 8
  %arrayidx.8.i = getelementptr i32, ptr %call, i32 8
  %33 = ptrtoint ptr %arrayidx.8.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.8.i, align 4
  %conv.8.i = zext i32 %34 to i64
  %arrayidx2.8.i = getelementptr i64, ptr %storage, i32 8
  %35 = ptrtoint ptr %arrayidx2.8.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %conv.8.i, ptr %arrayidx2.8.i, align 8
  %arrayidx.9.i = getelementptr i32, ptr %call, i32 9
  %36 = ptrtoint ptr %arrayidx.9.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx.9.i, align 4
  %conv.9.i = zext i32 %37 to i64
  %arrayidx2.9.i = getelementptr i64, ptr %storage, i32 9
  %38 = ptrtoint ptr %arrayidx2.9.i to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %conv.9.i, ptr %arrayidx2.9.i, align 8
  %arrayidx.10.i = getelementptr i32, ptr %call, i32 10
  %39 = ptrtoint ptr %arrayidx.10.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.10.i, align 4
  %conv.10.i = zext i32 %40 to i64
  %arrayidx2.10.i = getelementptr i64, ptr %storage, i32 10
  %41 = ptrtoint ptr %arrayidx2.10.i to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %conv.10.i, ptr %arrayidx2.10.i, align 8
  %arrayidx.11.i = getelementptr i32, ptr %call, i32 11
  %42 = ptrtoint ptr %arrayidx.11.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.11.i, align 4
  %conv.11.i = zext i32 %43 to i64
  %arrayidx2.11.i = getelementptr i64, ptr %storage, i32 11
  %44 = ptrtoint ptr %arrayidx2.11.i to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %conv.11.i, ptr %arrayidx2.11.i, align 8
  %arrayidx.12.i = getelementptr i32, ptr %call, i32 12
  %45 = ptrtoint ptr %arrayidx.12.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx.12.i, align 4
  %conv.12.i = zext i32 %46 to i64
  %arrayidx2.12.i = getelementptr i64, ptr %storage, i32 12
  %47 = ptrtoint ptr %arrayidx2.12.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %conv.12.i, ptr %arrayidx2.12.i, align 8
  %arrayidx.13.i = getelementptr i32, ptr %call, i32 13
  %48 = ptrtoint ptr %arrayidx.13.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx.13.i, align 4
  %conv.13.i = zext i32 %49 to i64
  %arrayidx2.13.i = getelementptr i64, ptr %storage, i32 13
  %50 = ptrtoint ptr %arrayidx2.13.i to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %conv.13.i, ptr %arrayidx2.13.i, align 8
  %arrayidx.14.i = getelementptr i32, ptr %call, i32 14
  %51 = ptrtoint ptr %arrayidx.14.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx.14.i, align 4
  %conv.14.i = zext i32 %52 to i64
  %arrayidx2.14.i = getelementptr i64, ptr %storage, i32 14
  %53 = ptrtoint ptr %arrayidx2.14.i to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %conv.14.i, ptr %arrayidx2.14.i, align 8
  %arrayidx.15.i = getelementptr i32, ptr %call, i32 15
  %54 = ptrtoint ptr %arrayidx.15.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.15.i, align 4
  %conv.15.i = zext i32 %55 to i64
  %arrayidx2.15.i = getelementptr i64, ptr %storage, i32 15
  %56 = ptrtoint ptr %arrayidx2.15.i to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %conv.15.i, ptr %arrayidx2.15.i, align 8
  %arrayidx.16.i = getelementptr i32, ptr %call, i32 16
  %57 = ptrtoint ptr %arrayidx.16.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx.16.i, align 4
  %conv.16.i = zext i32 %58 to i64
  %arrayidx2.16.i = getelementptr i64, ptr %storage, i32 16
  %59 = ptrtoint ptr %arrayidx2.16.i to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 %conv.16.i, ptr %arrayidx2.16.i, align 8
  %arrayidx.17.i = getelementptr i32, ptr %call, i32 17
  %60 = ptrtoint ptr %arrayidx.17.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx.17.i, align 4
  %conv.17.i = zext i32 %61 to i64
  %arrayidx2.17.i = getelementptr i64, ptr %storage, i32 17
  %62 = ptrtoint ptr %arrayidx2.17.i to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %conv.17.i, ptr %arrayidx2.17.i, align 8
  %arrayidx.18.i = getelementptr i32, ptr %call, i32 18
  %63 = ptrtoint ptr %arrayidx.18.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx.18.i, align 4
  %conv.18.i = zext i32 %64 to i64
  %arrayidx2.18.i = getelementptr i64, ptr %storage, i32 18
  %65 = ptrtoint ptr %arrayidx2.18.i to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 %conv.18.i, ptr %arrayidx2.18.i, align 8
  %arrayidx.19.i = getelementptr i32, ptr %call, i32 19
  %66 = ptrtoint ptr %arrayidx.19.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx.19.i, align 4
  %conv.19.i = zext i32 %67 to i64
  %arrayidx2.19.i = getelementptr i64, ptr %storage, i32 19
  %68 = ptrtoint ptr %arrayidx2.19.i to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %conv.19.i, ptr %arrayidx2.19.i, align 8
  %arrayidx.20.i = getelementptr i32, ptr %call, i32 20
  %69 = ptrtoint ptr %arrayidx.20.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx.20.i, align 4
  %conv.20.i = zext i32 %70 to i64
  %arrayidx2.20.i = getelementptr i64, ptr %storage, i32 20
  %71 = ptrtoint ptr %arrayidx2.20.i to i32
  call void @__asan_store8_noabort(i32 %71)
  store i64 %conv.20.i, ptr %arrayidx2.20.i, align 8
  %arrayidx.21.i = getelementptr i32, ptr %call, i32 21
  %72 = ptrtoint ptr %arrayidx.21.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx.21.i, align 4
  %conv.21.i = zext i32 %73 to i64
  %arrayidx2.21.i = getelementptr i64, ptr %storage, i32 21
  %74 = ptrtoint ptr %arrayidx2.21.i to i32
  call void @__asan_store8_noabort(i32 %74)
  store i64 %conv.21.i, ptr %arrayidx2.21.i, align 8
  %arrayidx.22.i = getelementptr i32, ptr %call, i32 22
  %75 = ptrtoint ptr %arrayidx.22.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx.22.i, align 4
  %conv.22.i = zext i32 %76 to i64
  %arrayidx2.22.i = getelementptr i64, ptr %storage, i32 22
  %77 = ptrtoint ptr %arrayidx2.22.i to i32
  call void @__asan_store8_noabort(i32 %77)
  store i64 %conv.22.i, ptr %arrayidx2.22.i, align 8
  %add.ptr.i = getelementptr i8, ptr %storage, i32 184
  %78 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %78, i32 8)
  store i64 0, ptr %add.ptr.i, align 1
  br label %if.end6

if.else5:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  %stats = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36
  %79 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %stats, align 4
  %conv.i35 = zext i32 %80 to i64
  %81 = ptrtoint ptr %storage to i32
  call void @__asan_store8_noabort(i32 %81)
  store i64 %conv.i35, ptr %storage, align 8
  %arrayidx.1.i36 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 1
  %82 = ptrtoint ptr %arrayidx.1.i36 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %arrayidx.1.i36, align 4
  %conv.1.i37 = zext i32 %83 to i64
  %arrayidx2.1.i38 = getelementptr i64, ptr %storage, i32 1
  %84 = ptrtoint ptr %arrayidx2.1.i38 to i32
  call void @__asan_store8_noabort(i32 %84)
  store i64 %conv.1.i37, ptr %arrayidx2.1.i38, align 8
  %arrayidx.2.i39 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 2
  %85 = ptrtoint ptr %arrayidx.2.i39 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx.2.i39, align 4
  %conv.2.i40 = zext i32 %86 to i64
  %arrayidx2.2.i41 = getelementptr i64, ptr %storage, i32 2
  %87 = ptrtoint ptr %arrayidx2.2.i41 to i32
  call void @__asan_store8_noabort(i32 %87)
  store i64 %conv.2.i40, ptr %arrayidx2.2.i41, align 8
  %arrayidx.3.i42 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 3
  %88 = ptrtoint ptr %arrayidx.3.i42 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %arrayidx.3.i42, align 4
  %conv.3.i43 = zext i32 %89 to i64
  %arrayidx2.3.i44 = getelementptr i64, ptr %storage, i32 3
  %90 = ptrtoint ptr %arrayidx2.3.i44 to i32
  call void @__asan_store8_noabort(i32 %90)
  store i64 %conv.3.i43, ptr %arrayidx2.3.i44, align 8
  %arrayidx.4.i45 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 4
  %91 = ptrtoint ptr %arrayidx.4.i45 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %arrayidx.4.i45, align 4
  %conv.4.i46 = zext i32 %92 to i64
  %arrayidx2.4.i47 = getelementptr i64, ptr %storage, i32 4
  %93 = ptrtoint ptr %arrayidx2.4.i47 to i32
  call void @__asan_store8_noabort(i32 %93)
  store i64 %conv.4.i46, ptr %arrayidx2.4.i47, align 8
  %arrayidx.5.i48 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 5
  %94 = ptrtoint ptr %arrayidx.5.i48 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %arrayidx.5.i48, align 4
  %conv.5.i49 = zext i32 %95 to i64
  %arrayidx2.5.i50 = getelementptr i64, ptr %storage, i32 5
  %96 = ptrtoint ptr %arrayidx2.5.i50 to i32
  call void @__asan_store8_noabort(i32 %96)
  store i64 %conv.5.i49, ptr %arrayidx2.5.i50, align 8
  %arrayidx.6.i51 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 6
  %97 = ptrtoint ptr %arrayidx.6.i51 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx.6.i51, align 4
  %conv.6.i52 = zext i32 %98 to i64
  %arrayidx2.6.i53 = getelementptr i64, ptr %storage, i32 6
  %99 = ptrtoint ptr %arrayidx2.6.i53 to i32
  call void @__asan_store8_noabort(i32 %99)
  store i64 %conv.6.i52, ptr %arrayidx2.6.i53, align 8
  %arrayidx.7.i54 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 7
  %100 = ptrtoint ptr %arrayidx.7.i54 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %arrayidx.7.i54, align 4
  %conv.7.i55 = zext i32 %101 to i64
  %arrayidx2.7.i56 = getelementptr i64, ptr %storage, i32 7
  %102 = ptrtoint ptr %arrayidx2.7.i56 to i32
  call void @__asan_store8_noabort(i32 %102)
  store i64 %conv.7.i55, ptr %arrayidx2.7.i56, align 8
  %arrayidx.8.i57 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 8
  %103 = ptrtoint ptr %arrayidx.8.i57 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %arrayidx.8.i57, align 4
  %conv.8.i58 = zext i32 %104 to i64
  %arrayidx2.8.i59 = getelementptr i64, ptr %storage, i32 8
  %105 = ptrtoint ptr %arrayidx2.8.i59 to i32
  call void @__asan_store8_noabort(i32 %105)
  store i64 %conv.8.i58, ptr %arrayidx2.8.i59, align 8
  %arrayidx.9.i60 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 9
  %106 = ptrtoint ptr %arrayidx.9.i60 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %arrayidx.9.i60, align 4
  %conv.9.i61 = zext i32 %107 to i64
  %arrayidx2.9.i62 = getelementptr i64, ptr %storage, i32 9
  %108 = ptrtoint ptr %arrayidx2.9.i62 to i32
  call void @__asan_store8_noabort(i32 %108)
  store i64 %conv.9.i61, ptr %arrayidx2.9.i62, align 8
  %arrayidx.10.i63 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 10
  %109 = ptrtoint ptr %arrayidx.10.i63 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %arrayidx.10.i63, align 4
  %conv.10.i64 = zext i32 %110 to i64
  %arrayidx2.10.i65 = getelementptr i64, ptr %storage, i32 10
  %111 = ptrtoint ptr %arrayidx2.10.i65 to i32
  call void @__asan_store8_noabort(i32 %111)
  store i64 %conv.10.i64, ptr %arrayidx2.10.i65, align 8
  %arrayidx.11.i66 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 11
  %112 = ptrtoint ptr %arrayidx.11.i66 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %arrayidx.11.i66, align 4
  %conv.11.i67 = zext i32 %113 to i64
  %arrayidx2.11.i68 = getelementptr i64, ptr %storage, i32 11
  %114 = ptrtoint ptr %arrayidx2.11.i68 to i32
  call void @__asan_store8_noabort(i32 %114)
  store i64 %conv.11.i67, ptr %arrayidx2.11.i68, align 8
  %arrayidx.12.i69 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 12
  %115 = ptrtoint ptr %arrayidx.12.i69 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %arrayidx.12.i69, align 4
  %conv.12.i70 = zext i32 %116 to i64
  %arrayidx2.12.i71 = getelementptr i64, ptr %storage, i32 12
  %117 = ptrtoint ptr %arrayidx2.12.i71 to i32
  call void @__asan_store8_noabort(i32 %117)
  store i64 %conv.12.i70, ptr %arrayidx2.12.i71, align 8
  %arrayidx.13.i72 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 13
  %118 = ptrtoint ptr %arrayidx.13.i72 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx.13.i72, align 4
  %conv.13.i73 = zext i32 %119 to i64
  %arrayidx2.13.i74 = getelementptr i64, ptr %storage, i32 13
  %120 = ptrtoint ptr %arrayidx2.13.i74 to i32
  call void @__asan_store8_noabort(i32 %120)
  store i64 %conv.13.i73, ptr %arrayidx2.13.i74, align 8
  %arrayidx.14.i75 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 14
  %121 = ptrtoint ptr %arrayidx.14.i75 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %arrayidx.14.i75, align 4
  %conv.14.i76 = zext i32 %122 to i64
  %arrayidx2.14.i77 = getelementptr i64, ptr %storage, i32 14
  %123 = ptrtoint ptr %arrayidx2.14.i77 to i32
  call void @__asan_store8_noabort(i32 %123)
  store i64 %conv.14.i76, ptr %arrayidx2.14.i77, align 8
  %arrayidx.15.i78 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 15
  %124 = ptrtoint ptr %arrayidx.15.i78 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %arrayidx.15.i78, align 4
  %conv.15.i79 = zext i32 %125 to i64
  %arrayidx2.15.i80 = getelementptr i64, ptr %storage, i32 15
  %126 = ptrtoint ptr %arrayidx2.15.i80 to i32
  call void @__asan_store8_noabort(i32 %126)
  store i64 %conv.15.i79, ptr %arrayidx2.15.i80, align 8
  %arrayidx.16.i81 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 16
  %127 = ptrtoint ptr %arrayidx.16.i81 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %arrayidx.16.i81, align 4
  %conv.16.i82 = zext i32 %128 to i64
  %arrayidx2.16.i83 = getelementptr i64, ptr %storage, i32 16
  %129 = ptrtoint ptr %arrayidx2.16.i83 to i32
  call void @__asan_store8_noabort(i32 %129)
  store i64 %conv.16.i82, ptr %arrayidx2.16.i83, align 8
  %arrayidx.17.i84 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 17
  %130 = ptrtoint ptr %arrayidx.17.i84 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %arrayidx.17.i84, align 4
  %conv.17.i85 = zext i32 %131 to i64
  %arrayidx2.17.i86 = getelementptr i64, ptr %storage, i32 17
  %132 = ptrtoint ptr %arrayidx2.17.i86 to i32
  call void @__asan_store8_noabort(i32 %132)
  store i64 %conv.17.i85, ptr %arrayidx2.17.i86, align 8
  %arrayidx.18.i87 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 18
  %133 = ptrtoint ptr %arrayidx.18.i87 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %arrayidx.18.i87, align 4
  %conv.18.i88 = zext i32 %134 to i64
  %arrayidx2.18.i89 = getelementptr i64, ptr %storage, i32 18
  %135 = ptrtoint ptr %arrayidx2.18.i89 to i32
  call void @__asan_store8_noabort(i32 %135)
  store i64 %conv.18.i88, ptr %arrayidx2.18.i89, align 8
  %arrayidx.19.i90 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 19
  %136 = ptrtoint ptr %arrayidx.19.i90 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %arrayidx.19.i90, align 4
  %conv.19.i91 = zext i32 %137 to i64
  %arrayidx2.19.i92 = getelementptr i64, ptr %storage, i32 19
  %138 = ptrtoint ptr %arrayidx2.19.i92 to i32
  call void @__asan_store8_noabort(i32 %138)
  store i64 %conv.19.i91, ptr %arrayidx2.19.i92, align 8
  %arrayidx.20.i93 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 20
  %139 = ptrtoint ptr %arrayidx.20.i93 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %arrayidx.20.i93, align 4
  %conv.20.i94 = zext i32 %140 to i64
  %arrayidx2.20.i95 = getelementptr i64, ptr %storage, i32 20
  %141 = ptrtoint ptr %arrayidx2.20.i95 to i32
  call void @__asan_store8_noabort(i32 %141)
  store i64 %conv.20.i94, ptr %arrayidx2.20.i95, align 8
  %arrayidx.21.i96 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 21
  %142 = ptrtoint ptr %arrayidx.21.i96 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %arrayidx.21.i96, align 4
  %conv.21.i97 = zext i32 %143 to i64
  %arrayidx2.21.i98 = getelementptr i64, ptr %storage, i32 21
  %144 = ptrtoint ptr %arrayidx2.21.i98 to i32
  call void @__asan_store8_noabort(i32 %144)
  store i64 %conv.21.i97, ptr %arrayidx2.21.i98, align 8
  %arrayidx.22.i99 = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 22
  %145 = ptrtoint ptr %arrayidx.22.i99 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %arrayidx.22.i99, align 4
  %conv.22.i100 = zext i32 %146 to i64
  %arrayidx2.22.i101 = getelementptr i64, ptr %storage, i32 22
  %147 = ptrtoint ptr %arrayidx2.22.i101 to i32
  call void @__asan_store8_noabort(i32 %147)
  store i64 %conv.22.i100, ptr %arrayidx2.22.i101, align 8
  %add.ptr.i102 = getelementptr i8, ptr %storage, i32 184
  %148 = ptrtoint ptr %add.ptr.i102 to i32
  call void @__asan_storeN_noabort(i32 %148, i32 8)
  store i64 0, ptr %add.ptr.i102, align 1
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.then3, %if.then
  %rx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 37
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %rx_dropped, i32 noundef 4) #35
  %149 = ptrtoint ptr %rx_dropped to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load volatile i32, ptr %rx_dropped, align 4
  %conv = zext i32 %150 to i64
  %rx_dropped8 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %storage, i32 0, i32 6
  %151 = ptrtoint ptr %rx_dropped8 to i32
  call void @__asan_load8_noabort(i32 %151)
  %152 = load i64, ptr %rx_dropped8, align 8
  %add = add i64 %152, %conv
  store i64 %add, ptr %rx_dropped8, align 8
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 38
  %call.i.i33 = tail call zeroext i1 @__kasan_check_read(ptr noundef %tx_dropped, i32 noundef 4) #35
  %153 = ptrtoint ptr %tx_dropped to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load volatile i32, ptr %tx_dropped, align 4
  %conv10 = zext i32 %154 to i64
  %tx_dropped11 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %storage, i32 0, i32 7
  %155 = ptrtoint ptr %tx_dropped11 to i32
  call void @__asan_load8_noabort(i32 %155)
  %156 = load i64, ptr %tx_dropped11, align 8
  %add12 = add i64 %156, %conv10
  store i64 %add12, ptr %tx_dropped11, align 8
  %rx_nohandler = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 39
  %call.i.i34 = tail call zeroext i1 @__kasan_check_read(ptr noundef %rx_nohandler, i32 noundef 4) #35
  %157 = ptrtoint ptr %rx_nohandler to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %rx_nohandler, align 4
  %conv14 = zext i32 %158 to i64
  %rx_nohandler15 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %storage, i32 0, i32 23
  %159 = ptrtoint ptr %rx_nohandler15 to i32
  call void @__asan_load8_noabort(i32 %159)
  %160 = load i64, ptr %rx_nohandler15, align 8
  %add16 = add i64 %160, %conv14
  store i64 %add16, ptr %rx_nohandler15, align 8
  ret ptr %storage
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_fetch_sw_netstats(ptr nocapture noundef %s, ptr noundef %netstats) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call39 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call39, i32 %0)
  %cmp40 = icmp ult i32 %call39, %0
  br i1 %cmp40, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %1 = ptrtoint ptr %netstats to i32
  %rx_bytes17 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %s, i32 0, i32 2
  %tx_packets20 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %s, i32 0, i32 1
  %tx_bytes23 = getelementptr inbounds %struct.rtnl_link_stats64, ptr %s, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %do.end12.for.body_crit_edge, %for.body.lr.ph
  %call41 = phi i32 [ %call39, %for.body.lr.ph ], [ %call, %do.end12.for.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call41
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %add = add i32 %3, %1
  %4 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %4, i32 0, i32 4
  %dep_map.c48.i.i.i = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %4, i32 0, i32 4, i32 0, i32 1
  %rx_bytes = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %4, i32 0, i32 1
  %tx_packets = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %4, i32 0, i32 2
  %tx_bytes = getelementptr inbounds %struct.pcpu_sw_netstats, ptr %4, i32 0, i32 3
  br label %do.body3

do.body3:                                         ; preds = %u64_stats_fetch_begin_irq.exit.do.body3_crit_edge, %for.body
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %and.i.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %do.body24.critedge.i.i.i

if.then.i.i.i:                                    ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  %6 = tail call ptr @llvm.returnaddress(i32 0) #35
  %7 = ptrtoint ptr %6 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %7) #35
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i.i, i32 noundef %7) #35
  tail call void @trace_hardirqs_on() #35
  br label %do.body24.i.i.i

do.body24.critedge.i.i.i:                         ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #37
  %8 = tail call ptr @llvm.returnaddress(i32 0) #35
  %9 = ptrtoint ptr %8 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %9) #35
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i.i, i32 noundef %9) #35
  br label %do.body24.i.i.i

do.body24.i.i.i:                                  ; preds = %do.body24.critedge.i.i.i, %if.then.i.i.i
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i.i.i = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool32.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i, label %if.then36.i.i.i, label %do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge, !prof !1310

do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge: ; preds = %do.body24.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %seqcount_lockdep_reader_access.exit.i.i

if.then36.i.i.i:                                  ; preds = %do.body24.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %seqcount_lockdep_reader_access.exit.i.i

seqcount_lockdep_reader_access.exit.i.i:          ; preds = %if.then36.i.i.i, %do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %5) #35, !srcloc !1315
  %11 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %syncp, align 4
  %and18.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i.i)
  %tobool.not19.i.i = icmp eq i32 %and18.i.i, 0
  br i1 %tobool.not19.i.i, label %seqcount_lockdep_reader_access.exit.i.i.u64_stats_fetch_begin_irq.exit_crit_edge, label %seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge

seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i.i
  br label %do.end.i.i

seqcount_lockdep_reader_access.exit.i.i.u64_stats_fetch_begin_irq.exit_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %u64_stats_fetch_begin_irq.exit

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1414
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #35, !srcloc !1415
  %13 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %syncp, align 4
  %and.i.i = and i32 %14, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.end.i.i.u64_stats_fetch_begin_irq.exit_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end.i.i

do.end.i.i.u64_stats_fetch_begin_irq.exit_crit_edge: ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %u64_stats_fetch_begin_irq.exit

u64_stats_fetch_begin_irq.exit:                   ; preds = %do.end.i.i.u64_stats_fetch_begin_irq.exit_crit_edge, %seqcount_lockdep_reader_access.exit.i.i.u64_stats_fetch_begin_irq.exit_crit_edge
  %.lcssa.i.i = phi i32 [ %12, %seqcount_lockdep_reader_access.exit.i.i.u64_stats_fetch_begin_irq.exit_crit_edge ], [ %14, %do.end.i.i.u64_stats_fetch_begin_irq.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1416
  %15 = ptrtoint ptr %4 to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %4, align 32
  %17 = ptrtoint ptr %rx_bytes to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %rx_bytes, align 8
  %19 = ptrtoint ptr %tx_packets to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %tx_packets, align 16
  %21 = ptrtoint ptr %tx_bytes to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %tx_bytes, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1417
  %23 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %syncp, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %24, %.lcssa.i.i
  br i1 %cmp.i.i.i.i.not, label %do.end12, label %u64_stats_fetch_begin_irq.exit.do.body3_crit_edge

u64_stats_fetch_begin_irq.exit.do.body3_crit_edge: ; preds = %u64_stats_fetch_begin_irq.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body3

do.end12:                                         ; preds = %u64_stats_fetch_begin_irq.exit
  %25 = ptrtoint ptr %s to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %s, align 8
  %add15 = add i64 %26, %16
  store i64 %add15, ptr %s, align 8
  %27 = ptrtoint ptr %rx_bytes17 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %rx_bytes17, align 8
  %add18 = add i64 %28, %18
  store i64 %add18, ptr %rx_bytes17, align 8
  %29 = ptrtoint ptr %tx_packets20 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %tx_packets20, align 8
  %add21 = add i64 %30, %20
  store i64 %add21, ptr %tx_packets20, align 8
  %31 = ptrtoint ptr %tx_bytes23 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %tx_bytes23, align 8
  %add24 = add i64 %32, %22
  store i64 %add24, ptr %tx_bytes23, align 8
  %call = tail call i32 @cpumask_next(i32 noundef %call41, ptr noundef nonnull @__cpu_possible_mask) #39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %33 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %33
  br i1 %cmp, label %do.end12.for.body_crit_edge, label %do.end12.for.end_crit_edge

do.end12.for.end_crit_edge:                       ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

do.end12.for.body_crit_edge:                      ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.end:                                          ; preds = %do.end12.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @dev_get_tstats64(ptr noundef readonly %dev, ptr noundef %s) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %stats = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36
  %0 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %stats, align 4
  %conv.i = zext i32 %1 to i64
  %2 = ptrtoint ptr %s to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %conv.i, ptr %s, align 8
  %arrayidx.1.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 1
  %3 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx.1.i, align 4
  %conv.1.i = zext i32 %4 to i64
  %arrayidx2.1.i = getelementptr i64, ptr %s, i32 1
  %5 = ptrtoint ptr %arrayidx2.1.i to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %conv.1.i, ptr %arrayidx2.1.i, align 8
  %arrayidx.2.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 2
  %6 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.2.i, align 4
  %conv.2.i = zext i32 %7 to i64
  %arrayidx2.2.i = getelementptr i64, ptr %s, i32 2
  %8 = ptrtoint ptr %arrayidx2.2.i to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %conv.2.i, ptr %arrayidx2.2.i, align 8
  %arrayidx.3.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 3
  %9 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.3.i, align 4
  %conv.3.i = zext i32 %10 to i64
  %arrayidx2.3.i = getelementptr i64, ptr %s, i32 3
  %11 = ptrtoint ptr %arrayidx2.3.i to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %conv.3.i, ptr %arrayidx2.3.i, align 8
  %arrayidx.4.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 4
  %12 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.4.i, align 4
  %conv.4.i = zext i32 %13 to i64
  %arrayidx2.4.i = getelementptr i64, ptr %s, i32 4
  %14 = ptrtoint ptr %arrayidx2.4.i to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %conv.4.i, ptr %arrayidx2.4.i, align 8
  %arrayidx.5.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 5
  %15 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.5.i, align 4
  %conv.5.i = zext i32 %16 to i64
  %arrayidx2.5.i = getelementptr i64, ptr %s, i32 5
  %17 = ptrtoint ptr %arrayidx2.5.i to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %conv.5.i, ptr %arrayidx2.5.i, align 8
  %arrayidx.6.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 6
  %18 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.6.i, align 4
  %conv.6.i = zext i32 %19 to i64
  %arrayidx2.6.i = getelementptr i64, ptr %s, i32 6
  %20 = ptrtoint ptr %arrayidx2.6.i to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %conv.6.i, ptr %arrayidx2.6.i, align 8
  %arrayidx.7.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 7
  %21 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx.7.i, align 4
  %conv.7.i = zext i32 %22 to i64
  %arrayidx2.7.i = getelementptr i64, ptr %s, i32 7
  %23 = ptrtoint ptr %arrayidx2.7.i to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %conv.7.i, ptr %arrayidx2.7.i, align 8
  %arrayidx.8.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 8
  %24 = ptrtoint ptr %arrayidx.8.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.8.i, align 4
  %conv.8.i = zext i32 %25 to i64
  %arrayidx2.8.i = getelementptr i64, ptr %s, i32 8
  %26 = ptrtoint ptr %arrayidx2.8.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %conv.8.i, ptr %arrayidx2.8.i, align 8
  %arrayidx.9.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 9
  %27 = ptrtoint ptr %arrayidx.9.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.9.i, align 4
  %conv.9.i = zext i32 %28 to i64
  %arrayidx2.9.i = getelementptr i64, ptr %s, i32 9
  %29 = ptrtoint ptr %arrayidx2.9.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %conv.9.i, ptr %arrayidx2.9.i, align 8
  %arrayidx.10.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 10
  %30 = ptrtoint ptr %arrayidx.10.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx.10.i, align 4
  %conv.10.i = zext i32 %31 to i64
  %arrayidx2.10.i = getelementptr i64, ptr %s, i32 10
  %32 = ptrtoint ptr %arrayidx2.10.i to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %conv.10.i, ptr %arrayidx2.10.i, align 8
  %arrayidx.11.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 11
  %33 = ptrtoint ptr %arrayidx.11.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.11.i, align 4
  %conv.11.i = zext i32 %34 to i64
  %arrayidx2.11.i = getelementptr i64, ptr %s, i32 11
  %35 = ptrtoint ptr %arrayidx2.11.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %conv.11.i, ptr %arrayidx2.11.i, align 8
  %arrayidx.12.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 12
  %36 = ptrtoint ptr %arrayidx.12.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx.12.i, align 4
  %conv.12.i = zext i32 %37 to i64
  %arrayidx2.12.i = getelementptr i64, ptr %s, i32 12
  %38 = ptrtoint ptr %arrayidx2.12.i to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %conv.12.i, ptr %arrayidx2.12.i, align 8
  %arrayidx.13.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 13
  %39 = ptrtoint ptr %arrayidx.13.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx.13.i, align 4
  %conv.13.i = zext i32 %40 to i64
  %arrayidx2.13.i = getelementptr i64, ptr %s, i32 13
  %41 = ptrtoint ptr %arrayidx2.13.i to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %conv.13.i, ptr %arrayidx2.13.i, align 8
  %arrayidx.14.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 14
  %42 = ptrtoint ptr %arrayidx.14.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.14.i, align 4
  %conv.14.i = zext i32 %43 to i64
  %arrayidx2.14.i = getelementptr i64, ptr %s, i32 14
  %44 = ptrtoint ptr %arrayidx2.14.i to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %conv.14.i, ptr %arrayidx2.14.i, align 8
  %arrayidx.15.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 15
  %45 = ptrtoint ptr %arrayidx.15.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx.15.i, align 4
  %conv.15.i = zext i32 %46 to i64
  %arrayidx2.15.i = getelementptr i64, ptr %s, i32 15
  %47 = ptrtoint ptr %arrayidx2.15.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %conv.15.i, ptr %arrayidx2.15.i, align 8
  %arrayidx.16.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 16
  %48 = ptrtoint ptr %arrayidx.16.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %arrayidx.16.i, align 4
  %conv.16.i = zext i32 %49 to i64
  %arrayidx2.16.i = getelementptr i64, ptr %s, i32 16
  %50 = ptrtoint ptr %arrayidx2.16.i to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %conv.16.i, ptr %arrayidx2.16.i, align 8
  %arrayidx.17.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 17
  %51 = ptrtoint ptr %arrayidx.17.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx.17.i, align 4
  %conv.17.i = zext i32 %52 to i64
  %arrayidx2.17.i = getelementptr i64, ptr %s, i32 17
  %53 = ptrtoint ptr %arrayidx2.17.i to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %conv.17.i, ptr %arrayidx2.17.i, align 8
  %arrayidx.18.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 18
  %54 = ptrtoint ptr %arrayidx.18.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx.18.i, align 4
  %conv.18.i = zext i32 %55 to i64
  %arrayidx2.18.i = getelementptr i64, ptr %s, i32 18
  %56 = ptrtoint ptr %arrayidx2.18.i to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %conv.18.i, ptr %arrayidx2.18.i, align 8
  %arrayidx.19.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 19
  %57 = ptrtoint ptr %arrayidx.19.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx.19.i, align 4
  %conv.19.i = zext i32 %58 to i64
  %arrayidx2.19.i = getelementptr i64, ptr %s, i32 19
  %59 = ptrtoint ptr %arrayidx2.19.i to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 %conv.19.i, ptr %arrayidx2.19.i, align 8
  %arrayidx.20.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 20
  %60 = ptrtoint ptr %arrayidx.20.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %arrayidx.20.i, align 4
  %conv.20.i = zext i32 %61 to i64
  %arrayidx2.20.i = getelementptr i64, ptr %s, i32 20
  %62 = ptrtoint ptr %arrayidx2.20.i to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %conv.20.i, ptr %arrayidx2.20.i, align 8
  %arrayidx.21.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 21
  %63 = ptrtoint ptr %arrayidx.21.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx.21.i, align 4
  %conv.21.i = zext i32 %64 to i64
  %arrayidx2.21.i = getelementptr i64, ptr %s, i32 21
  %65 = ptrtoint ptr %arrayidx2.21.i to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 %conv.21.i, ptr %arrayidx2.21.i, align 8
  %arrayidx.22.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 36, i32 22
  %66 = ptrtoint ptr %arrayidx.22.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx.22.i, align 4
  %conv.22.i = zext i32 %67 to i64
  %arrayidx2.22.i = getelementptr i64, ptr %s, i32 22
  %68 = ptrtoint ptr %arrayidx2.22.i to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %conv.22.i, ptr %arrayidx2.22.i, align 8
  %add.ptr.i = getelementptr i8, ptr %s, i32 184
  %69 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %69, i32 8)
  store i64 0, ptr %add.ptr.i, align 1
  %70 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 130
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %70, align 64
  tail call void @dev_fetch_sw_netstats(ptr noundef %s, ptr noundef %72)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @dev_ingress_queue_create(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call.i, label %entry.dev_ingress_queue.exit_crit_edge, label %land.lhs.true.i

entry.dev_ingress_queue.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_ingress_queue.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.dev_ingress_queue.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.dev_ingress_queue.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_ingress_queue.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @dev_ingress_queue.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.dev_ingress_queue.exit_crit_edge, label %if.then.i

land.lhs.true2.i.dev_ingress_queue.exit_crit_edge: ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_ingress_queue.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_ingress_queue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.274, i32 noundef 85, ptr noundef nonnull @.str.10) #35
  br label %dev_ingress_queue.exit

dev_ingress_queue.exit:                           ; preds = %if.then.i, %land.lhs.true2.i.dev_ingress_queue.exit_crit_edge, %land.lhs.true.i.dev_ingress_queue.exit_crit_edge, %entry.dev_ingress_queue.exit_crit_edge
  %ingress_queue.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 97
  %0 = ptrtoint ptr %ingress_queue.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ingress_queue.i, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %dev_ingress_queue.exit.cleanup_crit_edge

dev_ingress_queue.exit.cleanup_crit_edge:         ; preds = %dev_ingress_queue.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %dev_ingress_queue.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 640) #40
  %tobool2.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %_xmit_lock.i = getelementptr inbounds %struct.netdev_queue, ptr %call7.i.i, i32 0, i32 10
  tail call void @__raw_spin_lock_init(ptr noundef %_xmit_lock.i, ptr noundef nonnull @.str.275, ptr noundef nonnull @netdev_init_one_queue.__key, i16 noundef signext 3) #35
  %type.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 32
  %3 = ptrtoint ptr %type.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %type.i, align 16
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.end4
  %i.09.i.i.i = phi i32 [ 0, %if.end4 ], [ %inc.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ]
  %arrayidx.i.i.i = getelementptr [57 x i16], ptr @netdev_lock_type, i32 0, i32 %i.09.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %arrayidx.i.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %6, i16 %4)
  %cmp2.i.i.i = icmp eq i16 %6, %4
  br i1 %cmp2.i.i.i, label %if.then.i.i.i, label %for.inc.i.i.i

if.then.i.i.i:                                    ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %phi.cast.i.i = and i32 %i.09.i.i.i, 65535
  br label %netdev_init_one_queue.exit

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %inc.i.i.i = add nuw nsw i32 %i.09.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i32 %inc.i.i.i, 57
  br i1 %exitcond.not.i.i.i, label %for.inc.i.i.i.netdev_init_one_queue.exit_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i.i

for.inc.i.i.i.netdev_init_one_queue.exit_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_init_one_queue.exit

netdev_init_one_queue.exit:                       ; preds = %for.inc.i.i.i.netdev_init_one_queue.exit_crit_edge, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %phi.cast.i.i, %if.then.i.i.i ], [ 56, %for.inc.i.i.i.netdev_init_one_queue.exit_crit_edge ]
  %dep_map.i.i = getelementptr inbounds %struct.netdev_queue, ptr %call7.i.i, i32 0, i32 10, i32 0, i32 0, i32 4
  %arrayidx.i.i = getelementptr [57 x ptr], ptr @netdev_lock_name, i32 0, i32 %retval.0.i.i.i
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i.i, align 4
  %arrayidx1.i.i = getelementptr [57 x %struct.lock_class_key], ptr @netdev_xmit_lock_key, i32 0, i32 %retval.0.i.i.i
  %wait_type_inner.i.i = getelementptr inbounds %struct.netdev_queue, ptr %call7.i.i, i32 0, i32 10, i32 0, i32 0, i32 4, i32 4
  %9 = ptrtoint ptr %wait_type_inner.i.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %wait_type_inner.i.i, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i.i, ptr noundef %8, ptr noundef %arrayidx1.i.i, i32 noundef 0, i8 noundef zeroext %10, i8 noundef zeroext 0, i8 noundef zeroext 0) #35
  %xmit_lock_owner.i = getelementptr inbounds %struct.netdev_queue, ptr %call7.i.i, i32 0, i32 11
  %11 = ptrtoint ptr %xmit_lock_owner.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 -1, ptr %xmit_lock_owner.i, align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %dev, ptr %call7.i.i, align 128
  %dql.i = getelementptr inbounds %struct.netdev_queue, ptr %call7.i.i, i32 0, i32 15
  tail call void @dql_init(ptr noundef %dql.i, i32 noundef 100) #35
  %qdisc = getelementptr inbounds %struct.netdev_queue, ptr %call7.i.i, i32 0, i32 2
  %13 = ptrtoint ptr %qdisc to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr @noop_qdisc, ptr %qdisc, align 8
  %qdisc_sleeping = getelementptr inbounds %struct.netdev_queue, ptr %call7.i.i, i32 0, i32 3
  %14 = ptrtoint ptr %qdisc_sleeping to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @noop_qdisc, ptr %qdisc_sleeping, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1418
  %15 = ptrtoint ptr %ingress_queue.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %call7.i.i, ptr %ingress_queue.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %netdev_init_one_queue.exit, %if.end.cleanup_crit_edge, %dev_ingress_queue.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i, %netdev_init_one_queue.exit ], [ %1, %dev_ingress_queue.exit.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @netdev_set_default_ethtool_ops(ptr nocapture noundef %dev, ptr noundef %ops) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %ethtool_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 44
  %0 = ptrtoint ptr %ethtool_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ethtool_ops, align 16
  %cmp = icmp eq ptr %1, @default_ethtool_ops
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %2 = ptrtoint ptr %ethtool_ops to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %ops, ptr %ethtool_ops, align 16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_freemem(ptr noundef %dev) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %padded = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 62
  %0 = ptrtoint ptr %padded to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %padded, align 2
  %conv = zext i16 %1 to i32
  %idx.neg = sub nsw i32 0, %conv
  %add.ptr = getelementptr i8, ptr %dev, i32 %idx.neg
  tail call void @kvfree(ptr noundef %add.ptr) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_netdev_mqs(i32 noundef %sizeof_priv, ptr nocapture noundef readonly %name, i8 noundef zeroext %name_assign_type, ptr nocapture noundef readonly %setup, i32 noundef %txqs, i32 noundef %rxqs) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @strlen(ptr noundef %name) #42
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %call)
  %cmp = icmp ugt i32 %call, 15
  br i1 %cmp, label %do.body2, label %do.end7, !prof !1310

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10142, 0\0A.popsection", ""() #35, !srcloc !1419
  unreachable

do.end7:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %txqs)
  %cmp8 = icmp eq i32 %txqs, 0
  br i1 %cmp8, label %do.end12, label %if.end14

do.end12:                                         ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #37
  %call13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75) #41
  br label %cleanup

if.end14:                                         ; preds = %do.end7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rxqs)
  %cmp15 = icmp eq i32 %rxqs, 0
  br i1 %cmp15, label %do.end19, label %if.end22

do.end19:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #37
  %call21 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78) #41
  br label %cleanup

if.end22:                                         ; preds = %if.end14
  %phi.bo = add i32 %sizeof_priv, 2335
  %call.i.i = tail call noalias ptr @kvmalloc_node(i32 noundef %phi.bo, i32 noundef 4214208, i32 noundef -1) #44
  %tobool29.not = icmp eq ptr %call.i.i, null
  br i1 %tobool29.not, label %if.end22.cleanup_crit_edge, label %if.end31

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end31:                                         ; preds = %if.end22
  %0 = ptrtoint ptr %call.i.i to i32
  %add32 = add i32 %0, 31
  %and33 = and i32 %add32, -32
  %1 = inttoptr i32 %and33 to ptr
  %sub.ptr.sub = sub i32 %and33, %0
  %conv = trunc i32 %sub.ptr.sub to i16
  %padded = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 62
  %2 = ptrtoint ptr %padded to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 %conv, ptr %padded, align 2
  %refcnt_tracker = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 119
  %list.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 119, i32 3
  %3 = ptrtoint ptr %list.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %list.i, ptr %list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 119, i32 3, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %list.i, ptr %prev.i.i, align 16
  %quarantine.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 119, i32 4
  %5 = ptrtoint ptr %quarantine.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %quarantine.i, ptr %quarantine.i, align 4
  %prev.i1.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 119, i32 4, i32 1
  %6 = ptrtoint ptr %prev.i1.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %quarantine.i, ptr %prev.i1.i, align 8
  tail call void @__raw_spin_lock_init(ptr noundef %refcnt_tracker, ptr noundef nonnull @.str.276, ptr noundef nonnull @ref_tracker_dir_init.__key, i16 noundef signext 3) #35
  %quarantine_avail.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 119, i32 1
  %7 = ptrtoint ptr %quarantine_avail.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 128, ptr %quarantine_avail.i, align 4
  %untracked.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 119, i32 2
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %untracked.i, i32 noundef 4) #35
  %8 = ptrtoint ptr %untracked.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 1, ptr %untracked.i, align 8
  %call1.i = tail call i32 @stack_depot_init() #35
  %call34 = tail call noalias ptr @__alloc_percpu(i32 noundef 4, i32 noundef 4) #44
  %pcpu_refcnt = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 118
  %9 = ptrtoint ptr %pcpu_refcnt to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call34, ptr %pcpu_refcnt, align 4
  %tobool36.not = icmp eq ptr %call34, null
  br i1 %tobool36.not, label %if.end31.free_dev_crit_edge, label %if.end38

if.end31.free_dev_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #37
  br label %free_dev

if.end38:                                         ; preds = %if.end31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33)
  %tobool.not.i = icmp eq i32 %and33, 0
  br i1 %tobool.not.i, label %if.end38.dev_hold.exit_crit_edge, label %do.body1.i

if.end38.dev_hold.exit_crit_edge:                 ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_hold.exit

do.body1.i:                                       ; preds = %if.end38
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %11 = ptrtoint ptr %pcpu_refcnt to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pcpu_refcnt, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %19, %13
  %20 = inttoptr i32 %add.i to ptr
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add13.i = add i32 %22, 1
  store i32 %add13.i, ptr %20, align 4
  %23 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i = and i32 %23, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !1310

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #35, !srcloc !1315
  br label %dev_hold.exit

dev_hold.exit:                                    ; preds = %do.end30.i, %if.end38.dev_hold.exit_crit_edge
  %call39 = tail call i32 @dev_addr_init(ptr noundef %1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %if.end42, label %free_pcpu

if.end42:                                         ; preds = %dev_hold.exit
  tail call void @dev_mc_init(ptr noundef %1) #35
  tail call void @dev_uc_init(ptr noundef %1) #35
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 127
  %24 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @init_net, ptr %nd_net.i, align 4
  %gso_max_size = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 137
  %25 = ptrtoint ptr %gso_max_size to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 65536, ptr %gso_max_size, align 8
  %gso_max_segs = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 138
  %26 = ptrtoint ptr %gso_max_segs to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 -1, ptr %gso_max_segs, align 4
  %gro_max_size = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 93
  %27 = ptrtoint ptr %gro_max_size to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 65536, ptr %gro_max_size, align 4
  %upper_level = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 57
  %28 = ptrtoint ptr %upper_level to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 1, ptr %upper_level, align 2
  %lower_level = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 58
  %29 = ptrtoint ptr %lower_level to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 1, ptr %lower_level, align 1
  %nested_level = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 73
  %30 = ptrtoint ptr %nested_level to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 0, ptr %nested_level, align 1
  %unlink_list = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 69
  %31 = ptrtoint ptr %unlink_list to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %unlink_list, ptr %unlink_list, align 4
  %prev.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 69, i32 1
  %32 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %unlink_list, ptr %prev.i, align 32
  %napi_list = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 8
  %33 = ptrtoint ptr %napi_list to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %napi_list, ptr %napi_list, align 16
  %prev.i126 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 8, i32 1
  %34 = ptrtoint ptr %prev.i126 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %napi_list, ptr %prev.i126, align 4
  %unreg_list = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 9
  %35 = ptrtoint ptr %unreg_list to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %unreg_list, ptr %unreg_list, align 8
  %prev.i127 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 9, i32 1
  %36 = ptrtoint ptr %prev.i127 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %unreg_list, ptr %prev.i127, align 4
  %close_list = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 10
  %37 = ptrtoint ptr %close_list to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %close_list, ptr %close_list, align 32
  %prev.i128 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 10, i32 1
  %38 = ptrtoint ptr %prev.i128 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %close_list, ptr %prev.i128, align 4
  %link_watch_list = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 120
  %39 = ptrtoint ptr %link_watch_list to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %link_watch_list, ptr %link_watch_list, align 4
  %prev.i129 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 120, i32 1
  %40 = ptrtoint ptr %prev.i129 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %link_watch_list, ptr %prev.i129, align 32
  %adj_list = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13
  %41 = ptrtoint ptr %adj_list to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %adj_list, ptr %adj_list, align 8
  %prev.i130 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13, i32 0, i32 1
  %42 = ptrtoint ptr %prev.i130 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %adj_list, ptr %prev.i130, align 4
  %lower = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13, i32 1
  %43 = ptrtoint ptr %lower to i32
  call void @__asan_store4_noabort(i32 %43)
  store volatile ptr %lower, ptr %lower, align 32
  %prev.i131 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 13, i32 1, i32 1
  %44 = ptrtoint ptr %prev.i131 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %lower, ptr %prev.i131, align 4
  %ptype_all = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 11
  %45 = ptrtoint ptr %ptype_all to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %ptype_all, ptr %ptype_all, align 8
  %prev.i132 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 11, i32 1
  %46 = ptrtoint ptr %prev.i132 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %ptype_all, ptr %prev.i132, align 4
  %ptype_specific = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 12
  %47 = ptrtoint ptr %ptype_specific to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile ptr %ptype_specific, ptr %ptype_specific, align 16
  %prev.i133 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 12, i32 1
  %48 = ptrtoint ptr %prev.i133 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %ptype_specific, ptr %prev.i133, align 4
  %net_notifier_list = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 150
  %49 = ptrtoint ptr %net_notifier_list to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %net_notifier_list, ptr %net_notifier_list, align 32
  %prev.i134 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 150, i32 1
  %50 = ptrtoint ptr %prev.i134 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %net_notifier_list, ptr %prev.i134, align 4
  %qdisc_hash = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 113
  %51 = call ptr @memset(ptr %qdisc_hash, i32 0, i32 64)
  %priv_flags = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 15
  %52 = ptrtoint ptr %priv_flags to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 131104, ptr %priv_flags, align 16
  tail call void %setup(ptr noundef %1) #35
  %tx_queue_len = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 107
  %53 = ptrtoint ptr %tx_queue_len to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %tx_queue_len, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool44.not = icmp eq i32 %54, 0
  br i1 %tobool44.not, label %if.then45, label %if.end42.if.end48_crit_edge

if.end42.if.end48_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end48

if.then45:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #37
  %55 = ptrtoint ptr %priv_flags to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %priv_flags, align 16
  %or = or i64 %56, 524288
  store i64 %or, ptr %priv_flags, align 16
  %57 = ptrtoint ptr %tx_queue_len to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 1000, ptr %tx_queue_len, align 16
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %if.end42.if.end48_crit_edge
  %num_tx_queues = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 104
  %58 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %txqs, ptr %num_tx_queues, align 4
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 105
  %59 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %txqs, ptr %real_num_tx_queues, align 8
  %60 = add i32 %txqs, -65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 -65535, i32 %60)
  %61 = icmp ult i32 %60, -65535
  br i1 %61, label %if.end48.free_all_crit_edge, label %if.end.i

if.end48.free_all_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %free_all

if.end.i:                                         ; preds = %if.end48
  %mul.i = mul nuw nsw i32 %txqs, 640
  %call.i.i.i = tail call noalias ptr @kvmalloc_node(i32 noundef %mul.i, i32 noundef 4214208, i32 noundef -1) #44
  %tobool.not.i135 = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i135, label %if.end.i.free_all_crit_edge, label %if.end3.i

if.end.i.free_all_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %free_all

if.end3.i:                                        ; preds = %if.end.i
  %_tx.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 103
  %62 = ptrtoint ptr %_tx.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %call.i.i.i, ptr %_tx.i, align 128
  %63 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %num_tx_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %cmp2.not.i.i = icmp eq i32 %64, 0
  br i1 %cmp2.not.i.i, label %if.end3.i.do.end7.i_crit_edge, label %for.body.lr.ph.i.i

if.end3.i.do.end7.i_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

for.body.lr.ph.i.i:                               ; preds = %if.end3.i
  %type.i.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 32
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %netdev_init_one_queue.exit.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.03.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %netdev_init_one_queue.exit.i.i.for.body.i.i_crit_edge ]
  %65 = ptrtoint ptr %_tx.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %_tx.i, align 128
  %arrayidx.i.i = getelementptr %struct.netdev_queue, ptr %66, i32 %i.03.i.i
  %_xmit_lock.i.i.i = getelementptr %struct.netdev_queue, ptr %66, i32 %i.03.i.i, i32 10
  tail call void @__raw_spin_lock_init(ptr noundef %_xmit_lock.i.i.i, ptr noundef nonnull @.str.275, ptr noundef nonnull @netdev_init_one_queue.__key, i16 noundef signext 3) #35
  %67 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %type.i.i.i, align 16
  br label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.inc.i.i.i.i.i.for.body.i.i.i.i.i_crit_edge, %for.body.i.i
  %i.09.i.i.i.i.i = phi i32 [ 0, %for.body.i.i ], [ %inc.i.i.i.i.i, %for.inc.i.i.i.i.i.for.body.i.i.i.i.i_crit_edge ]
  %arrayidx.i.i.i.i.i = getelementptr [57 x i16], ptr @netdev_lock_type, i32 0, i32 %i.09.i.i.i.i.i
  %69 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %arrayidx.i.i.i.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %70, i16 %68)
  %cmp2.i.i.i.i.i = icmp eq i16 %70, %68
  br i1 %cmp2.i.i.i.i.i, label %if.then.i.i.i.i.i, label %for.inc.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %for.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %phi.cast.i.i.i.i = and i32 %i.09.i.i.i.i.i, 65535
  br label %netdev_init_one_queue.exit.i.i

for.inc.i.i.i.i.i:                                ; preds = %for.body.i.i.i.i.i
  %inc.i.i.i.i.i = add nuw nsw i32 %i.09.i.i.i.i.i, 1
  %exitcond.not.i.i.i.i.i = icmp eq i32 %inc.i.i.i.i.i, 57
  br i1 %exitcond.not.i.i.i.i.i, label %for.inc.i.i.i.i.i.netdev_init_one_queue.exit.i.i_crit_edge, label %for.inc.i.i.i.i.i.for.body.i.i.i.i.i_crit_edge

for.inc.i.i.i.i.i.for.body.i.i.i.i.i_crit_edge:   ; preds = %for.inc.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i.i.i.i

for.inc.i.i.i.i.i.netdev_init_one_queue.exit.i.i_crit_edge: ; preds = %for.inc.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_init_one_queue.exit.i.i

netdev_init_one_queue.exit.i.i:                   ; preds = %for.inc.i.i.i.i.i.netdev_init_one_queue.exit.i.i_crit_edge, %if.then.i.i.i.i.i
  %retval.0.i.i.i.i.i = phi i32 [ %phi.cast.i.i.i.i, %if.then.i.i.i.i.i ], [ 56, %for.inc.i.i.i.i.i.netdev_init_one_queue.exit.i.i_crit_edge ]
  %dep_map.i.i.i.i = getelementptr %struct.netdev_queue, ptr %66, i32 %i.03.i.i, i32 10, i32 0, i32 0, i32 4
  %arrayidx.i.i.i.i = getelementptr [57 x ptr], ptr @netdev_lock_name, i32 0, i32 %retval.0.i.i.i.i.i
  %71 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx.i.i.i.i, align 4
  %arrayidx1.i.i.i.i = getelementptr [57 x %struct.lock_class_key], ptr @netdev_xmit_lock_key, i32 0, i32 %retval.0.i.i.i.i.i
  %wait_type_inner.i.i.i.i = getelementptr %struct.netdev_queue, ptr %66, i32 %i.03.i.i, i32 10, i32 0, i32 0, i32 4, i32 4
  %73 = ptrtoint ptr %wait_type_inner.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %wait_type_inner.i.i.i.i, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i.i.i.i, ptr noundef %72, ptr noundef %arrayidx1.i.i.i.i, i32 noundef 0, i8 noundef zeroext %74, i8 noundef zeroext 0, i8 noundef zeroext 0) #35
  %xmit_lock_owner.i.i.i = getelementptr %struct.netdev_queue, ptr %66, i32 %i.03.i.i, i32 11
  %75 = ptrtoint ptr %xmit_lock_owner.i.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 -1, ptr %xmit_lock_owner.i.i.i, align 4
  %76 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %1, ptr %arrayidx.i.i, align 128
  %dql.i.i.i = getelementptr %struct.netdev_queue, ptr %66, i32 %i.03.i.i, i32 15
  tail call void @dql_init(ptr noundef %dql.i.i.i, i32 noundef 100) #35
  %inc.i.i = add nuw i32 %i.03.i.i, 1
  %77 = ptrtoint ptr %num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %num_tx_queues, align 4
  %cmp.i.i = icmp ult i32 %inc.i.i, %78
  br i1 %cmp.i.i, label %netdev_init_one_queue.exit.i.i.for.body.i.i_crit_edge, label %netdev_init_one_queue.exit.i.i.do.end7.i_crit_edge

netdev_init_one_queue.exit.i.i.do.end7.i_crit_edge: ; preds = %netdev_init_one_queue.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

netdev_init_one_queue.exit.i.i.for.body.i.i_crit_edge: ; preds = %netdev_init_one_queue.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i

do.end7.i:                                        ; preds = %netdev_init_one_queue.exit.i.i.do.end7.i_crit_edge, %if.end3.i.do.end7.i_crit_edge
  %tx_global_lock.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 108
  tail call void @__raw_spin_lock_init(ptr noundef %tx_global_lock.i, ptr noundef nonnull @.str.277, ptr noundef nonnull @netif_alloc_netdev_queues.__key, i16 noundef signext 3) #35
  %num_rx_queues = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 88
  %79 = ptrtoint ptr %num_rx_queues to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %rxqs, ptr %num_rx_queues, align 8
  %real_num_rx_queues = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 89
  %80 = ptrtoint ptr %real_num_rx_queues to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %rxqs, ptr %real_num_rx_queues, align 4
  %mul.i136 = mul i32 %rxqs, 384
  %call.i.i.i137 = tail call noalias ptr @kvmalloc_node(i32 noundef %mul.i136, i32 noundef 4214208, i32 noundef -1) #44
  %tobool8.not.i = icmp eq ptr %call.i.i.i137, null
  br i1 %tobool8.not.i, label %do.end7.i.free_all_crit_edge, label %for.body.preheader.i

do.end7.i.free_all_crit_edge:                     ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %free_all

for.body.preheader.i:                             ; preds = %do.end7.i
  %_rx.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 87
  %81 = ptrtoint ptr %_rx.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %call.i.i.i137, ptr %_rx.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.047.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %arrayidx.i138 = getelementptr %struct.netdev_rx_queue, ptr %call.i.i.i137, i32 %i.047.i
  %dev12.i = getelementptr %struct.netdev_rx_queue, ptr %call.i.i.i137, i32 %i.047.i, i32 4
  %82 = ptrtoint ptr %dev12.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %1, ptr %dev12.i, align 16
  %call14.i = tail call i32 @xdp_rxq_info_reg(ptr noundef %arrayidx.i138, ptr noundef %1, i32 noundef %i.047.i, i32 noundef 0) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %cmp15.i = icmp slt i32 %call14.i, 0
  br i1 %cmp15.i, label %while.cond.preheader.i, label %for.inc.i

while.cond.preheader.i:                           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.047.i)
  %tobool18.not48.i = icmp eq i32 %i.047.i, 0
  br i1 %tobool18.not48.i, label %while.cond.preheader.i.netif_alloc_rx_queues.exit_crit_edge, label %while.cond.preheader.i.while.body.i_crit_edge

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

while.cond.preheader.i.netif_alloc_rx_queues.exit_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_alloc_rx_queues.exit

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.047.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %rxqs
  br i1 %exitcond.not.i, label %if.end56, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  %i.149.i = phi i32 [ %dec.i, %while.body.i.while.body.i_crit_edge ], [ %i.047.i, %while.cond.preheader.i.while.body.i_crit_edge ]
  %dec.i = add i32 %i.149.i, -1
  %arrayidx19.i = getelementptr %struct.netdev_rx_queue, ptr %call.i.i.i137, i32 %dec.i
  tail call void @xdp_rxq_info_unreg(ptr noundef %arrayidx19.i) #35
  %tobool18.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool18.not.i, label %while.body.i.netif_alloc_rx_queues.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.i

while.body.i.netif_alloc_rx_queues.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_alloc_rx_queues.exit

netif_alloc_rx_queues.exit:                       ; preds = %while.body.i.netif_alloc_rx_queues.exit_crit_edge, %while.cond.preheader.i.netif_alloc_rx_queues.exit_crit_edge
  %83 = ptrtoint ptr %_rx.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %_rx.i, align 4
  tail call void @kvfree(ptr noundef %84) #35
  %85 = ptrtoint ptr %_rx.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr null, ptr %_rx.i, align 4
  br label %free_all

if.end56:                                         ; preds = %for.inc.i
  %call59 = tail call ptr @strcpy(ptr noundef %1, ptr noundef %name) #42
  %name_assign_type60 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 34
  %86 = ptrtoint ptr %name_assign_type60 to i32
  call void @__asan_store1_noabort(i32 %86)
  store i8 %name_assign_type, ptr %name_assign_type60, align 1
  %group = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 35
  %87 = ptrtoint ptr %group to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 0, ptr %group, align 4
  %ethtool_ops = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 44
  %88 = ptrtoint ptr %ethtool_ops to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %ethtool_ops, align 16
  %tobool61.not = icmp eq ptr %89, null
  br i1 %tobool61.not, label %if.then62, label %if.end56.if.end64_crit_edge

if.end56.if.end64_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end64

if.then62:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #37
  %90 = ptrtoint ptr %ethtool_ops to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr @default_ethtool_ops, ptr %ethtool_ops, align 16
  br label %if.end64

if.end64:                                         ; preds = %if.then62, %if.end56.if.end64_crit_edge
  %nf_hooks_ingress.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 98
  %91 = ptrtoint ptr %nf_hooks_ingress.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store volatile ptr null, ptr %nf_hooks_ingress.i, align 16
  %nf_hooks_egress.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 112
  %92 = ptrtoint ptr %nf_hooks_egress.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store volatile ptr null, ptr %nf_hooks_egress.i, align 16
  br label %cleanup

free_all:                                         ; preds = %netif_alloc_rx_queues.exit, %do.end7.i.free_all_crit_edge, %if.end.i.free_all_crit_edge, %if.end48.free_all_crit_edge
  tail call void @free_netdev(ptr noundef %1)
  br label %cleanup

free_pcpu:                                        ; preds = %dev_hold.exit
  call void @__sanitizer_cov_trace_pc() #37
  %93 = ptrtoint ptr %pcpu_refcnt to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %pcpu_refcnt, align 4
  tail call void @free_percpu(ptr noundef %94) #35
  br label %free_dev

free_dev:                                         ; preds = %free_pcpu, %if.end31.free_dev_crit_edge
  %95 = ptrtoint ptr %padded to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %padded, align 2
  %conv.i = zext i16 %96 to i32
  %idx.neg.i = sub nsw i32 0, %conv.i
  %add.ptr.i = getelementptr i8, ptr %1, i32 %idx.neg.i
  tail call void @kvfree(ptr noundef %add.ptr.i) #35
  br label %cleanup

cleanup:                                          ; preds = %free_dev, %free_all, %if.end64, %if.end22.cleanup_crit_edge, %do.end19, %do.end12
  %retval.0 = phi ptr [ null, %do.end12 ], [ null, %do.end19 ], [ null, %free_dev ], [ null, %free_all ], [ %1, %if.end64 ], [ null, %if.end22.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #27

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_addr_init(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_mc_init(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_uc_init(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_flush(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @ref_tracker_dir_exit(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu_expedited() local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unregister_netdevice_many(ptr noundef %head) #1 align 64 {
entry:
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  %xdp.i.i = alloca %struct.netdev_bpf, align 4
  %close_head = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %close_head) #35
  %0 = getelementptr inbounds %struct.list_head, ptr %close_head, i32 0, i32 1
  %1 = ptrtoint ptr %close_head to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %close_head, ptr %close_head, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %close_head, ptr %0, align 4
  %.b = load i1, ptr @dev_boot_phase, align 4
  br i1 %.b, label %do.end8, label %do.body3, !prof !1311

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10366, 0\0A.popsection", ""() #35, !srcloc !1420
  unreachable

do.end8:                                          ; preds = %entry
  %call = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool9.not = icmp eq i32 %call, 0
  br i1 %tobool9.not, label %land.rhs, label %do.end8.if.end52_crit_edge

do.end8.if.end52_crit_edge:                       ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end52

land.rhs:                                         ; preds = %do.end8
  %.b349354 = load i1, ptr @unregister_netdevice_many.__already_done, align 1
  br i1 %.b349354, label %land.rhs.if.end52_crit_edge, label %if.then26, !prof !1311

land.rhs.if.end52_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end52

if.then26:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @unregister_netdevice_many.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10367, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 10367) #35
  br label %if.end52

if.end52:                                         ; preds = %if.then26, %land.rhs.if.end52_crit_edge, %do.end8.if.end52_crit_edge
  %3 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %head, align 4
  %cmp.i.not = icmp eq ptr %4, %head
  br i1 %cmp.i.not, label %if.end52.cleanup_crit_edge, label %if.end52.for.body_crit_edge

if.end52.for.body_crit_edge:                      ; preds = %if.end52
  br label %for.body

if.end52.cleanup_crit_edge:                       ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.cond148.preheader:                            ; preds = %for.inc
  %5 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn350413 = load ptr, ptr %head, align 4
  %cmp150.not414 = icmp eq ptr %.pn350413, %head
  br i1 %cmp150.not414, label %for.cond148.preheader.for.end160_crit_edge, label %for.cond148.preheader.for.body153_crit_edge

for.cond148.preheader.for.body153_crit_edge:      ; preds = %for.cond148.preheader
  br label %for.body153

for.cond148.preheader.for.end160_crit_edge:       ; preds = %for.cond148.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end160

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end52.for.body_crit_edge
  %.pn.in409 = phi ptr [ %.pn412, %for.inc.for.body_crit_edge ], [ %4, %if.end52.for.body_crit_edge ]
  %dev.0411 = getelementptr i8, ptr %.pn.in409, i32 -56
  %6 = ptrtoint ptr %.pn.in409 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn412 = load ptr, ptr %.pn.in409, align 8
  %reg_state = getelementptr i8, ptr %.pn.in409, i32 1004
  %7 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.load)
  %cmp73 = icmp eq i8 %bf.load, 0
  br i1 %cmp73, label %do.body75, label %if.end117

do.body75:                                        ; preds = %for.body
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @unregister_netdevice_many.__UNIQUE_ID_ddebug965, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@unregister_netdevice_many, %if.then86)) #35
          to label %do.end102 [label %if.then86], !srcloc !1328

if.then86:                                        ; preds = %do.body75
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @unregister_netdevice_many.__UNIQUE_ID_ddebug965, ptr noundef nonnull @.str.81, ptr noundef %dev.0411, ptr noundef %dev.0411) #35
  br label %do.end102

do.end102:                                        ; preds = %if.then86, %do.body75
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10381, i32 noundef 9, ptr noundef null) #35
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in409) #35
  br i1 %call.i.i, label %if.end.i.i, label %do.end102.list_del.exit_crit_edge

do.end102.list_del.exit_crit_edge:                ; preds = %do.end102
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del.exit

if.end.i.i:                                       ; preds = %do.end102
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in409, i32 0, i32 1
  %8 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev.i.i, align 4
  %10 = ptrtoint ptr %.pn.in409 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %.pn.in409, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %prev1.i.i.i, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %9, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %do.end102.list_del.exit_crit_edge
  %14 = ptrtoint ptr %.pn.in409 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in409, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn.in409, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br label %for.inc

if.end117:                                        ; preds = %for.body
  %dismantle = getelementptr i8, ptr %.pn.in409, i32 1005
  %16 = ptrtoint ptr %dismantle to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %dismantle, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %bf.load)
  %cmp122.not = icmp eq i8 %bf.load, 1
  br i1 %cmp122.not, label %if.end117.for.inc_crit_edge, label %do.body130, !prof !1311

if.end117.for.inc_crit_edge:                      ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

do.body130:                                       ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #37
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10386, 0\0A.popsection", ""() #35, !srcloc !1421
  unreachable

for.inc:                                          ; preds = %if.end117.for.inc_crit_edge, %list_del.exit
  %cmp.not = icmp eq ptr %.pn412, %head
  br i1 %cmp.not, label %for.cond148.preheader, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.body153:                                      ; preds = %list_add_tail.exit.for.body153_crit_edge, %for.cond148.preheader.for.body153_crit_edge
  %.pn350415 = phi ptr [ %.pn350, %list_add_tail.exit.for.body153_crit_edge ], [ %.pn350413, %for.cond148.preheader.for.body153_crit_edge ]
  %close_list = getelementptr i8, ptr %.pn350415, i32 8
  %17 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %0, align 4
  %call.i.i357 = call zeroext i1 @__list_add_valid(ptr noundef %close_list, ptr noundef %18, ptr noundef nonnull %close_head) #35
  br i1 %call.i.i357, label %if.end.i.i358, label %for.body153.list_add_tail.exit_crit_edge

for.body153.list_add_tail.exit_crit_edge:         ; preds = %for.body153
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_tail.exit

if.end.i.i358:                                    ; preds = %for.body153
  call void @__sanitizer_cov_trace_pc() #37
  %19 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %close_list, ptr %0, align 4
  %20 = ptrtoint ptr %close_list to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %close_head, ptr %close_list, align 4
  %prev3.i.i = getelementptr i8, ptr %.pn350415, i32 12
  %21 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %18, ptr %prev3.i.i, align 4
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %close_list, ptr %18, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i358, %for.body153.list_add_tail.exit_crit_edge
  %23 = ptrtoint ptr %.pn350415 to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn350 = load ptr, ptr %.pn350415, align 4
  %cmp150.not = icmp eq ptr %.pn350, %head
  br i1 %cmp150.not, label %list_add_tail.exit.for.end160_crit_edge, label %list_add_tail.exit.for.body153_crit_edge

list_add_tail.exit.for.body153_crit_edge:         ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body153

list_add_tail.exit.for.end160_crit_edge:          ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end160

for.end160:                                       ; preds = %list_add_tail.exit.for.end160_crit_edge, %for.cond148.preheader.for.end160_crit_edge
  call void @dev_close_many(ptr noundef nonnull %close_head, i1 noundef zeroext true)
  %24 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %24)
  %.pn351417 = load ptr, ptr %head, align 4
  %cmp167.not418 = icmp eq ptr %.pn351417, %head
  br i1 %cmp167.not418, label %for.end160.for.end178_crit_edge, label %for.end160.for.body170_crit_edge

for.end160.for.body170_crit_edge:                 ; preds = %for.end160
  br label %for.body170

for.end160.for.end178_crit_edge:                  ; preds = %for.end160
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end178

for.body170:                                      ; preds = %for.body170.for.body170_crit_edge, %for.end160.for.body170_crit_edge
  %.pn351419 = phi ptr [ %.pn351, %for.body170.for.body170_crit_edge ], [ %.pn351417, %for.end160.for.body170_crit_edge ]
  %dev.2 = getelementptr i8, ptr %.pn351419, i32 -56
  call fastcc void @unlist_netdevice(ptr noundef %dev.2)
  %reg_state171 = getelementptr i8, ptr %.pn351419, i32 1004
  %25 = ptrtoint ptr %reg_state171 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 2, ptr %reg_state171, align 4
  %26 = ptrtoint ptr %.pn351419 to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn351 = load ptr, ptr %.pn351419, align 4
  %cmp167.not = icmp eq ptr %.pn351, %head
  br i1 %cmp167.not, label %for.body170.for.end178_crit_edge, label %for.body170.for.body170_crit_edge

for.body170.for.body170_crit_edge:                ; preds = %for.body170
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body170

for.body170.for.end178_crit_edge:                 ; preds = %for.body170
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end178

for.end178:                                       ; preds = %for.body170.for.end178_crit_edge, %for.end160.for.end178_crit_edge
  %call.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %for.end178.if.end29.i_crit_edge

for.end178.if.end29.i_crit_edge:                  ; preds = %for.end178
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

land.rhs.i:                                       ; preds = %for.end178
  %.b72.i = load i1, ptr @flush_all_backlogs.__already_done, align 1
  br i1 %.b72.i, label %land.rhs.i.if.end29.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end29.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @flush_all_backlogs.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5711, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 5711) #35
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end29.i_crit_edge, %for.end178.if.end29.i_crit_edge
  call void @cpus_read_lock() #35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %27 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %27, 31
  %28 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %28, 536870908
  %29 = call ptr @memset(ptr @flush_all_backlogs.flush_cpus, i32 0, i32 %mul.i.i.i)
  %call3773.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #39
  call void @__sanitizer_cov_trace_cmp4(i32 %call3773.i, i32 %27)
  %cmp74.i = icmp ult i32 %call3773.i, %27
  br i1 %cmp74.i, label %if.end29.i.for.body.i_crit_edge, label %if.end29.i.for.cond47.preheader.i_crit_edge

if.end29.i.for.cond47.preheader.i_crit_edge:      ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond47.preheader.i

if.end29.i.for.body.i_crit_edge:                  ; preds = %if.end29.i
  br label %for.body.i

for.cond47.preheader.i:                           ; preds = %if.end46.i.for.cond47.preheader.i_crit_edge, %if.end29.i.for.cond47.preheader.i_crit_edge
  %call4876.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @flush_all_backlogs.flush_cpus) #39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %30 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call4876.i, i32 %30)
  %cmp4977.i = icmp ult i32 %call4876.i, %30
  br i1 %cmp4977.i, label %for.cond47.preheader.i.do.body51.i_crit_edge, label %for.cond47.preheader.i.flush_all_backlogs.exit_crit_edge

for.cond47.preheader.i.flush_all_backlogs.exit_crit_edge: ; preds = %for.cond47.preheader.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %flush_all_backlogs.exit

for.cond47.preheader.i.do.body51.i_crit_edge:     ; preds = %for.cond47.preheader.i
  br label %do.body51.i

for.body.i:                                       ; preds = %if.end46.i.for.body.i_crit_edge, %if.end29.i.for.body.i_crit_edge
  %call3775.i = phi i32 [ %call37.i, %if.end46.i.for.body.i_crit_edge ], [ %call3773.i, %if.end29.i.for.body.i_crit_edge ]
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call3775.i
  %31 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %32, ptrtoint (ptr @softnet_data to i32)
  %33 = inttoptr i32 %add.i.i to ptr
  %34 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i.i = and i32 %34, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool.not.i.i, label %if.then.i.i, label %for.body.i.if.end.i.i359_crit_edge

for.body.i.if.end.i.i359_crit_edge:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i359

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @trace_hardirqs_off() #35
  br label %if.end.i.i359

if.end.i.i359:                                    ; preds = %if.then.i.i, %for.body.i.if.end.i.i359_crit_edge
  %lock.i.i.i = getelementptr inbounds %struct.softnet_data, ptr %33, i32 0, i32 20, i32 2
  call void @_raw_spin_lock(ptr noundef %lock.i.i.i) #35
  %input_pkt_queue.i.i = getelementptr inbounds %struct.softnet_data, ptr %33, i32 0, i32 20
  %35 = ptrtoint ptr %input_pkt_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %input_pkt_queue.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %36, %input_pkt_queue.i.i
  br i1 %cmp.i.not.i.i, label %lor.rhs.i.i, label %if.then39.critedge.i

lor.rhs.i.i:                                      ; preds = %if.end.i.i359
  %process_queue.i.i = getelementptr inbounds %struct.softnet_data, ptr %33, i32 0, i32 1
  %37 = ptrtoint ptr %process_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile ptr, ptr %process_queue.i.i, align 4
  %cmp.i17.i.not.i = icmp eq ptr %38, %process_queue.i.i
  call void @_raw_spin_unlock(ptr noundef %lock.i.i.i) #35
  call void @trace_hardirqs_on() #35
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  br i1 %cmp.i17.i.not.i, label %lor.rhs.i.i.if.end46.i_crit_edge, label %lor.rhs.i.i.if.then39.i_crit_edge

lor.rhs.i.i.if.then39.i_crit_edge:                ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then39.i

lor.rhs.i.i.if.end46.i_crit_edge:                 ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end46.i

if.then39.critedge.i:                             ; preds = %if.end.i.i359
  call void @__sanitizer_cov_trace_pc() #37
  call void @_raw_spin_unlock(ptr noundef %lock.i.i.i) #35
  call void @trace_hardirqs_on() #35
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  br label %if.then39.i

if.then39.i:                                      ; preds = %if.then39.critedge.i, %lor.rhs.i.i.if.then39.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_highpri_wq to i32))
  %39 = load ptr, ptr @system_highpri_wq, align 4
  %40 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx.i.i, align 4
  %add.i = add i32 %41, ptrtoint (ptr @flush_works to i32)
  %42 = inttoptr i32 %add.i to ptr
  %call45.i = call zeroext i1 @queue_work_on(i32 noundef %call3775.i, ptr noundef %39, ptr noundef %42) #35
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %43 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %call3775.i)
  %cmp.not.i.i.i.i = icmp ugt i32 %43, %call3775.i
  br i1 %cmp.not.i.i.i.i, label %if.then39.i.cpumask_set_cpu.exit.i_crit_edge, label %land.rhs.i.i.i.i

if.then39.i.cpumask_set_cpu.exit.i_crit_edge:     ; preds = %if.then39.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpumask_set_cpu.exit.i

land.rhs.i.i.i.i:                                 ; preds = %if.then39.i
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpumask_set_cpu.exit.i_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpumask_set_cpu.exit.i_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpumask_set_cpu.exit.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpumask_set_cpu.exit.i

cpumask_set_cpu.exit.i:                           ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpumask_set_cpu.exit.i_crit_edge, %if.then39.i.cpumask_set_cpu.exit.i_crit_edge
  call void @_set_bit(i32 noundef %call3775.i, ptr noundef nonnull @flush_all_backlogs.flush_cpus) #35
  br label %if.end46.i

if.end46.i:                                       ; preds = %cpumask_set_cpu.exit.i, %lor.rhs.i.i.if.end46.i_crit_edge
  %call37.i = call i32 @cpumask_next(i32 noundef %call3775.i, ptr noundef nonnull @__cpu_online_mask) #39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %44 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i360 = icmp ult i32 %call37.i, %44
  br i1 %cmp.i360, label %if.end46.i.for.body.i_crit_edge, label %if.end46.i.for.cond47.preheader.i_crit_edge

if.end46.i.for.cond47.preheader.i_crit_edge:      ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond47.preheader.i

if.end46.i.for.body.i_crit_edge:                  ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

do.body51.i:                                      ; preds = %do.body51.i.do.body51.i_crit_edge, %for.cond47.preheader.i.do.body51.i_crit_edge
  %call4878.i = phi i32 [ %call48.i, %do.body51.i.do.body51.i_crit_edge ], [ %call4876.i, %for.cond47.preheader.i.do.body51.i_crit_edge ]
  %arrayidx58.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call4878.i
  %45 = ptrtoint ptr %arrayidx58.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx58.i, align 4
  %add59.i = add i32 %46, ptrtoint (ptr @flush_works to i32)
  %47 = inttoptr i32 %add59.i to ptr
  %call60.i = call zeroext i1 @flush_work(ptr noundef %47) #35
  %call48.i = call i32 @cpumask_next(i32 noundef %call4878.i, ptr noundef nonnull @flush_all_backlogs.flush_cpus) #39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %48 = load i32, ptr @nr_cpu_ids, align 4
  %cmp49.i = icmp ult i32 %call48.i, %48
  br i1 %cmp49.i, label %do.body51.i.do.body51.i_crit_edge, label %do.body51.i.flush_all_backlogs.exit_crit_edge

do.body51.i.flush_all_backlogs.exit_crit_edge:    ; preds = %do.body51.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %flush_all_backlogs.exit

do.body51.i.do.body51.i_crit_edge:                ; preds = %do.body51.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body51.i

flush_all_backlogs.exit:                          ; preds = %do.body51.i.flush_all_backlogs.exit_crit_edge, %for.cond47.preheader.i.flush_all_backlogs.exit_crit_edge
  call void @cpus_read_unlock() #35
  call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call.i361 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i361)
  %tobool.not.i362 = icmp eq i32 %call.i361, 0
  br i1 %tobool.not.i362, label %if.else.i, label %if.then.i363

if.then.i363:                                     ; preds = %flush_all_backlogs.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @synchronize_rcu_expedited() #35
  br label %synchronize_net.exit

if.else.i:                                        ; preds = %flush_all_backlogs.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @synchronize_rcu() #35
  br label %synchronize_net.exit

synchronize_net.exit:                             ; preds = %if.else.i, %if.then.i363
  %49 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %49)
  %.pn352420 = load ptr, ptr %head, align 4
  %cmp185.not422 = icmp eq ptr %.pn352420, %head
  br i1 %cmp185.not422, label %synchronize_net.exit.for.end273_crit_edge, label %for.body188.lr.ph

synchronize_net.exit.for.end273_crit_edge:        ; preds = %synchronize_net.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end273

for.body188.lr.ph:                                ; preds = %synchronize_net.exit
  %50 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i.i, i32 0, i32 1
  %51 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i.i, i32 0, i32 1, i32 0, i32 1
  %52 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i.i, i32 0, i32 1, i32 0, i32 2
  %53 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  br label %for.body188

for.body188:                                      ; preds = %if.end259.for.body188_crit_edge, %for.body188.lr.ph
  %.pn352423 = phi ptr [ %.pn352420, %for.body188.lr.ph ], [ %.pn352, %if.end259.for.body188_crit_edge ]
  %dev.3424 = getelementptr i8, ptr %.pn352423, i32 -56
  call void @dev_shutdown(ptr noundef %dev.3424) #35
  %call.i364 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i364)
  %tobool.not.i365 = icmp eq i32 %call.i364, 0
  br i1 %tobool.not.i365, label %land.rhs.i366, label %for.body188.if.end29.i368_crit_edge

for.body188.if.end29.i368_crit_edge:              ; preds = %for.body188
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i368

land.rhs.i366:                                    ; preds = %for.body188
  %.b98.i = load i1, ptr @dev_xdp_uninstall.__already_done, align 1
  br i1 %.b98.i, label %land.rhs.i366.if.end29.i368_crit_edge, label %if.then.i367, !prof !1311

land.rhs.i366.if.end29.i368_crit_edge:            ; preds = %land.rhs.i366
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i368

if.then.i367:                                     ; preds = %land.rhs.i366
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_xdp_uninstall.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8735, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 8735) #35
  br label %if.end29.i368

if.end29.i368:                                    ; preds = %if.then.i367, %land.rhs.i366.if.end29.i368_crit_edge, %for.body188.if.end29.i368_crit_edge
  %netdev_ops.i.i = getelementptr i8, ptr %.pn352423, i32 64
  br label %for.body.i371

for.body.i371:                                    ; preds = %for.inc.i.for.body.i371_crit_edge, %if.end29.i368
  %mode.0110.i = phi i32 [ 0, %if.end29.i368 ], [ %inc.i, %for.inc.i.for.body.i371_crit_edge ]
  %link.i.i.i = getelementptr %struct.net_device, ptr %dev.3424, i32 0, i32 154, i32 %mode.0110.i, i32 1
  %54 = ptrtoint ptr %link.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %link.i.i.i, align 4
  %tobool.not.i.i369 = icmp eq ptr %55, null
  %prog.i.i = getelementptr inbounds %struct.bpf_link, ptr %55, i32 0, i32 4
  %arrayidx.i.i370 = getelementptr %struct.net_device, ptr %dev.3424, i32 0, i32 154, i32 %mode.0110.i
  %retval.0.in.i.i = select i1 %tobool.not.i.i369, ptr %arrayidx.i.i370, ptr %prog.i.i
  %56 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %retval.0.i.i = load ptr, ptr %retval.0.in.i.i, align 4
  %tobool38.not.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool38.not.i, label %for.body.i371.for.inc.i_crit_edge, label %if.end40.i

for.body.i371.for.inc.i_crit_edge:                ; preds = %for.body.i371
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.end40.i:                                       ; preds = %for.body.i371
  %57 = zext i32 %mode.0110.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.312)
  switch i32 %mode.0110.i, label %if.end40.i.for.inc.i_crit_edge [
    i32 0, label %if.end40.i.if.end44.i_crit_edge
    i32 1, label %if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge
    i32 2, label %if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge431
  ]

if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge431:    ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_bpf_op.exit.i

if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge:       ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_bpf_op.exit.i

if.end40.i.if.end44.i_crit_edge:                  ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end44.i

if.end40.i.for.inc.i_crit_edge:                   ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

dev_xdp_bpf_op.exit.i:                            ; preds = %if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge, %if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge431
  %58 = ptrtoint ptr %netdev_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %netdev_ops.i.i, align 8
  %ndo_bpf.i.i = getelementptr inbounds %struct.net_device_ops, ptr %59, i32 0, i32 76
  %60 = ptrtoint ptr %ndo_bpf.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ndo_bpf.i.i, align 4
  %tobool42.not.i = icmp eq ptr %61, null
  br i1 %tobool42.not.i, label %dev_xdp_bpf_op.exit.i.for.inc.i_crit_edge, label %dev_xdp_bpf_op.exit.i.if.end44.i_crit_edge

dev_xdp_bpf_op.exit.i.if.end44.i_crit_edge:       ; preds = %dev_xdp_bpf_op.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end44.i

dev_xdp_bpf_op.exit.i.for.inc.i_crit_edge:        ; preds = %dev_xdp_bpf_op.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.end44.i:                                       ; preds = %dev_xdp_bpf_op.exit.i.if.end44.i_crit_edge, %if.end40.i.if.end44.i_crit_edge
  %retval.0.i99107.i = phi ptr [ %61, %dev_xdp_bpf_op.exit.i.if.end44.i_crit_edge ], [ @generic_xdp_install, %if.end40.i.if.end44.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %xdp.i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode.0110.i)
  %cmp.i.i = icmp eq i32 %mode.0110.i, 2
  %cond.i.i = zext i1 %cmp.i.i to i32
  %62 = ptrtoint ptr %xdp.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %cond.i.i, ptr %xdp.i.i, align 4
  %63 = ptrtoint ptr %52 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr null, ptr %52, align 4
  %64 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 0, ptr %50, align 4
  %65 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr null, ptr %51, align 4
  %call.i.i372 = call i32 %retval.0.i99107.i(ptr noundef %dev.3424, ptr noundef nonnull %xdp.i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i372)
  %tobool4.not.i.i = icmp ne i32 %call.i.i372, 0
  %brmerge.i.i = or i1 %cmp.i.i, %tobool4.not.i.i
  br i1 %brmerge.i.i, label %dev_xdp_install.exit.i, label %dev_xdp_install.exit.thread.i

dev_xdp_install.exit.thread.i:                    ; preds = %if.end44.i
  call void @__sanitizer_cov_trace_pc() #37
  %66 = ptrtoint ptr %link.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %link.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %67, null
  %prog.i.i.i = getelementptr inbounds %struct.bpf_link, ptr %67, i32 0, i32 4
  %retval.0.in.i.i.i = select i1 %tobool.not.i.i.i, ptr %arrayidx.i.i370, ptr %prog.i.i.i
  %68 = ptrtoint ptr %retval.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %retval.0.i.i.i = load ptr, ptr %retval.0.in.i.i.i, align 4
  call void @bpf_prog_change_xdp(ptr noundef %retval.0.i.i.i, ptr noundef null) #35
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %xdp.i.i) #35
  br label %if.end69.i

dev_xdp_install.exit.i:                           ; preds = %if.end44.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %xdp.i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i372)
  %tobool47.not.i = icmp eq i32 %call.i.i372, 0
  br i1 %tobool47.not.i, label %dev_xdp_install.exit.i.if.end69.i_crit_edge, label %do.end63.i, !prof !1311

dev_xdp_install.exit.i.if.end69.i_crit_edge:      ; preds = %dev_xdp_install.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69.i

do.end63.i:                                       ; preds = %dev_xdp_install.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8746, i32 noundef 9, ptr noundef null) #35
  br label %if.end69.i

if.end69.i:                                       ; preds = %do.end63.i, %dev_xdp_install.exit.i.if.end69.i_crit_edge, %dev_xdp_install.exit.thread.i
  %69 = ptrtoint ptr %link.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %link.i.i.i, align 4
  %tobool78.not.i = icmp eq ptr %70, null
  br i1 %tobool78.not.i, label %if.else.i373, label %if.then79.i

if.then79.i:                                      ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #37
  %dev80.i = getelementptr inbounds %struct.bpf_xdp_link, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %dev80.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr null, ptr %dev80.i, align 8
  br label %if.end81.i

if.else.i373:                                     ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @bpf_prog_put(ptr noundef nonnull %retval.0.i.i) #35
  br label %if.end81.i

if.end81.i:                                       ; preds = %if.else.i373, %if.then79.i
  %72 = ptrtoint ptr %link.i.i.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr null, ptr %link.i.i.i, align 4
  %73 = ptrtoint ptr %arrayidx.i.i370 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr null, ptr %arrayidx.i.i370, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end81.i, %dev_xdp_bpf_op.exit.i.for.inc.i_crit_edge, %if.end40.i.for.inc.i_crit_edge, %for.body.i371.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %mode.0110.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 3
  br i1 %exitcond.not.i, label %dev_xdp_uninstall.exit, label %for.inc.i.for.body.i371_crit_edge

for.inc.i.for.body.i371_crit_edge:                ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i371

dev_xdp_uninstall.exit:                           ; preds = %for.inc.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %74 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %dev.3424, ptr %info.i.i, align 4
  %75 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr null, ptr %53, align 4
  %nd_net.i.i.i.i = getelementptr i8, ptr %.pn352423, i32 1020
  %76 = ptrtoint ptr %nd_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %nd_net.i.i.i.i, align 4
  %call1.i.i.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i374 = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i374, label %land.rhs.i.i.i, label %dev_xdp_uninstall.exit.if.end30.i.i.i_crit_edge

dev_xdp_uninstall.exit.if.end30.i.i.i_crit_edge:  ; preds = %dev_xdp_uninstall.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %dev_xdp_uninstall.exit
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %dev_xdp_uninstall.exit.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %77, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 6, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 6, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  %rtnl_link_ops = getelementptr i8, ptr %.pn352423, i32 1996
  %78 = ptrtoint ptr %rtnl_link_ops to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %rtnl_link_ops, align 4
  %tobool190.not = icmp eq ptr %79, null
  br i1 %tobool190.not, label %call_netdevice_notifiers.exit.if.then194_crit_edge, label %lor.lhs.false

call_netdevice_notifiers.exit.if.then194_crit_edge: ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then194

lor.lhs.false:                                    ; preds = %call_netdevice_notifiers.exit
  %rtnl_link_state = getelementptr i8, ptr %.pn352423, i32 1006
  %80 = ptrtoint ptr %rtnl_link_state to i32
  call void @__asan_load2_noabort(i32 %80)
  %bf.load191 = load i16, ptr %rtnl_link_state, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.load191)
  %cmp193 = icmp eq i16 %bf.load191, 0
  br i1 %cmp193, label %lor.lhs.false.if.then194_crit_edge, label %lor.lhs.false.if.end196_crit_edge

lor.lhs.false.if.end196_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end196

lor.lhs.false.if.then194_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then194

if.then194:                                       ; preds = %lor.lhs.false.if.then194_crit_edge, %call_netdevice_notifiers.exit.if.then194_crit_edge
  %call195 = call ptr @rtmsg_ifinfo_build_skb(i32 noundef 17, ptr noundef %dev.3424, i32 noundef -1, i32 noundef 0, i32 noundef 3264, ptr noundef null, i32 noundef 0) #35
  br label %if.end196

if.end196:                                        ; preds = %if.then194, %lor.lhs.false.if.end196_crit_edge
  %skb.0 = phi ptr [ %call195, %if.then194 ], [ null, %lor.lhs.false.if.end196_crit_edge ]
  call void @dev_uc_flush(ptr noundef %dev.3424) #35
  call void @dev_mc_flush(ptr noundef %dev.3424) #35
  %name_node1.i = getelementptr i8, ptr %.pn352423, i32 -40
  %81 = ptrtoint ptr %name_node1.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %name_node1.i, align 16
  %list.i = getelementptr inbounds %struct.netdev_name_node, ptr %82, i32 0, i32 1
  %83 = ptrtoint ptr %list.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %list.i, align 4
  %name_node.021.i = getelementptr i8, ptr %84, i32 -8
  %cmp.not22.i = icmp eq ptr %name_node.021.i, %82
  br i1 %cmp.not22.i, label %if.end196.netdev_name_node_alt_flush.exit_crit_edge, label %if.end196.for.body.i376_crit_edge

if.end196.for.body.i376_crit_edge:                ; preds = %if.end196
  br label %for.body.i376

if.end196.netdev_name_node_alt_flush.exit_crit_edge: ; preds = %if.end196
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_alt_flush.exit

for.body.i376:                                    ; preds = %__netdev_name_node_alt_destroy.exit.i.for.body.i376_crit_edge, %if.end196.for.body.i376_crit_edge
  %name_node.025.i = phi ptr [ %name_node.0.i, %__netdev_name_node_alt_destroy.exit.i.for.body.i376_crit_edge ], [ %name_node.021.i, %if.end196.for.body.i376_crit_edge ]
  %.pn.in23.i = phi ptr [ %.pn.i, %__netdev_name_node_alt_destroy.exit.i.for.body.i376_crit_edge ], [ %84, %if.end196.for.body.i376_crit_edge ]
  %85 = ptrtoint ptr %.pn.in23.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %.pn.i = load ptr, ptr %.pn.in23.i, align 4
  %call.i.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in23.i) #35
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %for.body.i376.list_del.exit.i.i_crit_edge

for.body.i376.list_del.exit.i.i_crit_edge:        ; preds = %for.body.i376
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del.exit.i.i

if.end.i.i.i.i:                                   ; preds = %for.body.i376
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i.i.i = getelementptr i8, ptr %.pn.in23.i, i32 4
  %86 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %prev.i.i.i.i, align 4
  %88 = ptrtoint ptr %.pn.in23.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %.pn.in23.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %89, i32 0, i32 1
  %90 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %87, ptr %prev1.i.i.i.i.i, align 4
  %91 = ptrtoint ptr %87 to i32
  call void @__asan_store4_noabort(i32 %91)
  store volatile ptr %89, ptr %87, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i.i, %for.body.i376.list_del.exit.i.i_crit_edge
  %92 = ptrtoint ptr %.pn.in23.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in23.i, align 4
  %prev.i.i.i = getelementptr i8, ptr %.pn.in23.i, i32 4
  %93 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  %94 = ptrtoint ptr %name_node.025.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %name_node.025.i, align 4
  %pprev2.i.i.i.i.i = getelementptr i8, ptr %.pn.in23.i, i32 -4
  %96 = ptrtoint ptr %pprev2.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %pprev2.i.i.i.i.i, align 4
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_store4_noabort(i32 %98)
  store volatile ptr %95, ptr %97, align 4
  %tobool.not.i.i.i.i.i = icmp eq ptr %95, null
  br i1 %tobool.not.i.i.i.i.i, label %list_del.exit.i.i.__netdev_name_node_alt_destroy.exit.i_crit_edge, label %do.body13.i.i.i.i.i

list_del.exit.i.i.__netdev_name_node_alt_destroy.exit.i_crit_edge: ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_name_node_alt_destroy.exit.i

do.body13.i.i.i.i.i:                              ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %pprev14.i.i.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %95, i32 0, i32 1
  %99 = ptrtoint ptr %pprev14.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store volatile ptr %97, ptr %pprev14.i.i.i.i.i, align 4
  br label %__netdev_name_node_alt_destroy.exit.i

__netdev_name_node_alt_destroy.exit.i:            ; preds = %do.body13.i.i.i.i.i, %list_del.exit.i.i.__netdev_name_node_alt_destroy.exit.i_crit_edge
  %100 = ptrtoint ptr %pprev2.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i.i.i, align 4
  %name.i.i = getelementptr i8, ptr %.pn.in23.i, i32 12
  %101 = ptrtoint ptr %name.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %name.i.i, align 4
  call void @kfree(ptr noundef %102) #35
  call void @kfree(ptr noundef %name_node.025.i) #35
  %name_node.0.i = getelementptr i8, ptr %.pn.i, i32 -8
  %103 = ptrtoint ptr %name_node1.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %name_node1.i, align 16
  %cmp.not.i = icmp eq ptr %name_node.0.i, %104
  br i1 %cmp.not.i, label %__netdev_name_node_alt_destroy.exit.i.netdev_name_node_alt_flush.exit_crit_edge, label %__netdev_name_node_alt_destroy.exit.i.for.body.i376_crit_edge

__netdev_name_node_alt_destroy.exit.i.for.body.i376_crit_edge: ; preds = %__netdev_name_node_alt_destroy.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i376

__netdev_name_node_alt_destroy.exit.i.netdev_name_node_alt_flush.exit_crit_edge: ; preds = %__netdev_name_node_alt_destroy.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_alt_flush.exit

netdev_name_node_alt_flush.exit:                  ; preds = %__netdev_name_node_alt_destroy.exit.i.netdev_name_node_alt_flush.exit_crit_edge, %if.end196.netdev_name_node_alt_flush.exit_crit_edge
  %105 = ptrtoint ptr %name_node1.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %name_node1.i, align 16
  call void @kfree(ptr noundef %106) #35
  %107 = ptrtoint ptr %netdev_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %netdev_ops.i.i, align 8
  %ndo_uninit = getelementptr inbounds %struct.net_device_ops, ptr %108, i32 0, i32 1
  %109 = ptrtoint ptr %ndo_uninit to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %ndo_uninit, align 4
  %tobool197.not = icmp eq ptr %110, null
  br i1 %tobool197.not, label %netdev_name_node_alt_flush.exit.if.end201_crit_edge, label %if.then198

netdev_name_node_alt_flush.exit.if.end201_crit_edge: ; preds = %netdev_name_node_alt_flush.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end201

if.then198:                                       ; preds = %netdev_name_node_alt_flush.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void %110(ptr noundef %dev.3424) #35
  br label %if.end201

if.end201:                                        ; preds = %if.then198, %netdev_name_node_alt_flush.exit.if.end201_crit_edge
  %tobool202.not = icmp eq ptr %skb.0, null
  br i1 %tobool202.not, label %if.end201.if.end204_crit_edge, label %if.then203

if.end201.if.end204_crit_edge:                    ; preds = %if.end201
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end204

if.then203:                                       ; preds = %if.end201
  call void @__sanitizer_cov_trace_pc() #37
  call void @rtmsg_ifinfo_send(ptr noundef nonnull %skb.0, ptr noundef %dev.3424, i32 noundef 3264) #35
  br label %if.end204

if.end204:                                        ; preds = %if.then203, %if.end201.if.end204_crit_edge
  %call.i377 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i377)
  %tobool.not.i378 = icmp eq i32 %call.i377, 0
  br i1 %tobool.not.i378, label %land.rhs.i379, label %if.end204.netdev_has_any_upper_dev.exit_crit_edge

if.end204.netdev_has_any_upper_dev.exit_crit_edge: ; preds = %if.end204
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_has_any_upper_dev.exit

land.rhs.i379:                                    ; preds = %if.end204
  %.b43.i = load i1, ptr @netdev_has_any_upper_dev.__already_done, align 1
  br i1 %.b43.i, label %land.rhs.i379.netdev_has_any_upper_dev.exit_crit_edge, label %if.then.i380, !prof !1311

land.rhs.i379.netdev_has_any_upper_dev.exit_crit_edge: ; preds = %land.rhs.i379
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_has_any_upper_dev.exit

if.then.i380:                                     ; preds = %land.rhs.i379
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_has_any_upper_dev.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6637, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6637) #35
  br label %netdev_has_any_upper_dev.exit

netdev_has_any_upper_dev.exit:                    ; preds = %if.then.i380, %land.rhs.i379.netdev_has_any_upper_dev.exit_crit_edge, %if.end204.netdev_has_any_upper_dev.exit_crit_edge
  %adj_list.i = getelementptr i8, ptr %.pn352423, i32 32
  %111 = ptrtoint ptr %adj_list.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile ptr, ptr %adj_list.i, align 4
  %cmp.i.i381.not = icmp eq ptr %112, %adj_list.i
  br i1 %cmp.i.i381.not, label %netdev_has_any_upper_dev.exit.if.end228_crit_edge, label %do.end222, !prof !1311

netdev_has_any_upper_dev.exit.if.end228_crit_edge: ; preds = %netdev_has_any_upper_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end228

do.end222:                                        ; preds = %netdev_has_any_upper_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10438, i32 noundef 9, ptr noundef null) #35
  br label %if.end228

if.end228:                                        ; preds = %do.end222, %netdev_has_any_upper_dev.exit.if.end228_crit_edge
  %call.i383 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i383)
  %tobool.not.i384 = icmp eq i32 %call.i383, 0
  br i1 %tobool.not.i384, label %land.rhs.i386, label %if.end228.netdev_has_any_lower_dev.exit_crit_edge

if.end228.netdev_has_any_lower_dev.exit_crit_edge: ; preds = %if.end228
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_has_any_lower_dev.exit

land.rhs.i386:                                    ; preds = %if.end228
  %.b43.i385 = load i1, ptr @netdev_has_any_lower_dev.__already_done, align 1
  br i1 %.b43.i385, label %land.rhs.i386.netdev_has_any_lower_dev.exit_crit_edge, label %if.then.i387, !prof !1311

land.rhs.i386.netdev_has_any_lower_dev.exit_crit_edge: ; preds = %land.rhs.i386
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_has_any_lower_dev.exit

if.then.i387:                                     ; preds = %land.rhs.i386
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_has_any_lower_dev.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6692, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 6692) #35
  br label %netdev_has_any_lower_dev.exit

netdev_has_any_lower_dev.exit:                    ; preds = %if.then.i387, %land.rhs.i386.netdev_has_any_lower_dev.exit_crit_edge, %if.end228.netdev_has_any_lower_dev.exit_crit_edge
  %lower.i = getelementptr i8, ptr %.pn352423, i32 40
  %113 = ptrtoint ptr %lower.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile ptr, ptr %lower.i, align 4
  %cmp.i.i388.not = icmp eq ptr %114, %lower.i
  br i1 %cmp.i.i388.not, label %netdev_has_any_lower_dev.exit.if.end259_crit_edge, label %do.end253, !prof !1311

netdev_has_any_lower_dev.exit.if.end259_crit_edge: ; preds = %netdev_has_any_lower_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end259

do.end253:                                        ; preds = %netdev_has_any_lower_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10439, i32 noundef 9, ptr noundef null) #35
  br label %if.end259

if.end259:                                        ; preds = %do.end253, %netdev_has_any_lower_dev.exit.if.end259_crit_edge
  call void @netdev_unregister_kobject(ptr noundef %dev.3424) #35
  call fastcc void @netif_reset_xps_queues_gt(ptr noundef %dev.3424, i16 noundef zeroext 0)
  %115 = ptrtoint ptr %.pn352423 to i32
  call void @__asan_load4_noabort(i32 %115)
  %.pn352 = load ptr, ptr %.pn352423, align 4
  %cmp185.not = icmp eq ptr %.pn352, %head
  br i1 %cmp185.not, label %if.end259.for.end273_crit_edge, label %if.end259.for.body188_crit_edge

if.end259.for.body188_crit_edge:                  ; preds = %if.end259
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body188

if.end259.for.end273_crit_edge:                   ; preds = %if.end259
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end273

for.end273:                                       ; preds = %if.end259.for.end273_crit_edge, %synchronize_net.exit.for.end273_crit_edge
  call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call.i390 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i390)
  %tobool.not.i391 = icmp eq i32 %call.i390, 0
  br i1 %tobool.not.i391, label %if.else.i393, label %if.then.i392

if.then.i392:                                     ; preds = %for.end273
  call void @__sanitizer_cov_trace_pc() #37
  call void @synchronize_rcu_expedited() #35
  br label %synchronize_net.exit394

if.else.i393:                                     ; preds = %for.end273
  call void @__sanitizer_cov_trace_pc() #37
  call void @synchronize_rcu() #35
  br label %synchronize_net.exit394

synchronize_net.exit394:                          ; preds = %if.else.i393, %if.then.i392
  %116 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %116)
  %.pn353428 = load ptr, ptr %head, align 4
  %cmp280.not429 = icmp eq ptr %.pn353428, %head
  br i1 %cmp280.not429, label %synchronize_net.exit394.for.end290_crit_edge, label %synchronize_net.exit394.for.body283_crit_edge

synchronize_net.exit394.for.body283_crit_edge:    ; preds = %synchronize_net.exit394
  br label %for.body283

synchronize_net.exit394.for.end290_crit_edge:     ; preds = %synchronize_net.exit394
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end290

for.body283:                                      ; preds = %net_set_todo.exit.for.body283_crit_edge, %synchronize_net.exit394.for.body283_crit_edge
  %.pn353430 = phi ptr [ %.pn353, %net_set_todo.exit.for.body283_crit_edge ], [ %.pn353428, %synchronize_net.exit394.for.body283_crit_edge ]
  %dev.4 = getelementptr i8, ptr %.pn353430, i32 -56
  %tobool.not.i395 = icmp eq ptr %dev.4, null
  br i1 %tobool.not.i395, label %for.body283.dev_put.exit_crit_edge, label %do.body1.i

for.body283.dev_put.exit_crit_edge:               ; preds = %for.body283
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_put.exit

do.body1.i:                                       ; preds = %for.body283
  %117 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i = getelementptr i8, ptr %.pn353430, i32 924
  %118 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %pcpu_refcnt.i, align 4
  %120 = ptrtoint ptr %119 to i32
  %121 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %121, -16384
  %122 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %122, i32 0, i32 3
  %123 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %124
  %125 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %arrayidx.i, align 4
  %add.i396 = add i32 %126, %120
  %127 = inttoptr i32 %add.i396 to ptr
  %128 = ptrtoint ptr %127 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %127, align 4
  %add13.i = add i32 %129, -1
  store i32 %add13.i, ptr %127, align 4
  %130 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i397 = and i32 %130, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i397)
  %tobool24.not.i = icmp eq i32 %and.i.i.i397, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !1310

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @warn_bogus_irq_restore() #35
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %117) #35, !srcloc !1315
  br label %dev_put.exit

dev_put.exit:                                     ; preds = %do.end30.i, %for.body283.dev_put.exit_crit_edge
  %todo_list.i = getelementptr i8, ptr %.pn353430, i32 916
  %131 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @net_todo_list, i32 0, i32 1), align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %todo_list.i, ptr noundef %131, ptr noundef nonnull @net_todo_list) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %dev_put.exit.net_set_todo.exit_crit_edge

dev_put.exit.net_set_todo.exit_crit_edge:         ; preds = %dev_put.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %net_set_todo.exit

if.end.i.i.i:                                     ; preds = %dev_put.exit
  call void @__sanitizer_cov_trace_pc() #37
  store ptr %todo_list.i, ptr getelementptr inbounds (%struct.list_head, ptr @net_todo_list, i32 0, i32 1), align 4
  %132 = ptrtoint ptr %todo_list.i to i32
  call void @__asan_store4_noabort(i32 %132)
  store ptr @net_todo_list, ptr %todo_list.i, align 4
  %prev3.i.i.i = getelementptr i8, ptr %.pn353430, i32 920
  %133 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %133)
  store ptr %131, ptr %prev3.i.i.i, align 4
  %134 = ptrtoint ptr %131 to i32
  call void @__asan_store4_noabort(i32 %134)
  store volatile ptr %todo_list.i, ptr %131, align 4
  br label %net_set_todo.exit

net_set_todo.exit:                                ; preds = %if.end.i.i.i, %dev_put.exit.net_set_todo.exit_crit_edge
  %nd_net.i.i = getelementptr i8, ptr %.pn353430, i32 1020
  %135 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %nd_net.i.i, align 4
  %dev_unreg_count.i = getelementptr inbounds %struct.net, ptr %136, i32 0, i32 2
  %137 = ptrtoint ptr %dev_unreg_count.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %dev_unreg_count.i, align 16
  %inc.i398 = add i32 %138, 1
  store i32 %inc.i398, ptr %dev_unreg_count.i, align 16
  %139 = ptrtoint ptr %.pn353430 to i32
  call void @__asan_load4_noabort(i32 %139)
  %.pn353 = load ptr, ptr %.pn353430, align 4
  %cmp280.not = icmp eq ptr %.pn353, %head
  br i1 %cmp280.not, label %net_set_todo.exit.for.end290_crit_edge, label %net_set_todo.exit.for.body283_crit_edge

net_set_todo.exit.for.body283_crit_edge:          ; preds = %net_set_todo.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body283

net_set_todo.exit.for.end290_crit_edge:           ; preds = %net_set_todo.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end290

for.end290:                                       ; preds = %net_set_todo.exit.for.end290_crit_edge, %synchronize_net.exit394.for.end290_crit_edge
  %call.i.i399 = call zeroext i1 @__list_del_entry_valid(ptr noundef %head) #35
  br i1 %call.i.i399, label %if.end.i.i402, label %for.end290.list_del.exit404_crit_edge

for.end290.list_del.exit404_crit_edge:            ; preds = %for.end290
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del.exit404

if.end.i.i402:                                    ; preds = %for.end290
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i400 = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %140 = ptrtoint ptr %prev.i.i400 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %prev.i.i400, align 4
  %142 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %head, align 4
  %prev1.i.i.i401 = getelementptr inbounds %struct.list_head, ptr %143, i32 0, i32 1
  %144 = ptrtoint ptr %prev1.i.i.i401 to i32
  call void @__asan_store4_noabort(i32 %144)
  store ptr %141, ptr %prev1.i.i.i401, align 4
  %145 = ptrtoint ptr %141 to i32
  call void @__asan_store4_noabort(i32 %145)
  store volatile ptr %143, ptr %141, align 4
  br label %list_del.exit404

list_del.exit404:                                 ; preds = %if.end.i.i402, %for.end290.list_del.exit404_crit_edge
  %146 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %146)
  store ptr inttoptr (i32 256 to ptr), ptr %head, align 4
  %prev.i403 = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %147 = ptrtoint ptr %prev.i403 to i32
  call void @__asan_store4_noabort(i32 %147)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i403, align 4
  br label %cleanup

cleanup:                                          ; preds = %list_del.exit404, %if.end52.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %close_head) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @unlist_netdevice(ptr noundef %dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b43 = load i1, ptr @unlist_netdevice.__already_done, align 1
  br i1 %.b43, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !1311

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @unlist_netdevice.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 383, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 383) #35
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  tail call void @_raw_write_lock(ptr noundef nonnull @dev_base_lock) #35
  %dev_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 7
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %dev_list) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.end29.list_del_rcu.exit_crit_edge

if.end29.list_del_rcu.exit_crit_edge:             ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 7, i32 1
  %0 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i.i, align 4
  %2 = ptrtoint ptr %dev_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev1.i.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %3, ptr %1, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.end29.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 7, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %name_node = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 1
  %7 = ptrtoint ptr %name_node to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name_node, align 16
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %pprev2.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %8, i32 0, i32 1
  %11 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pprev2.i.i.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %10, ptr %12, align 4
  %tobool.not.i.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i.i, label %list_del_rcu.exit.netdev_name_node_del.exit_crit_edge, label %do.body13.i.i.i

list_del_rcu.exit.netdev_name_node_del.exit_crit_edge: ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name_node_del.exit

do.body13.i.i.i:                                  ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %10, i32 0, i32 1
  %14 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %pprev14.i.i.i, align 4
  br label %netdev_name_node_del.exit

netdev_name_node_del.exit:                        ; preds = %do.body13.i.i.i, %list_del_rcu.exit.netdev_name_node_del.exit_crit_edge
  %15 = ptrtoint ptr %pprev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i.i, align 4
  %index_hlist = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 101
  %16 = ptrtoint ptr %index_hlist to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %index_hlist, align 4
  %pprev2.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 101, i32 1
  %18 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pprev2.i.i, align 4
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %17, ptr %19, align 4
  %tobool.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i, label %netdev_name_node_del.exit.hlist_del_rcu.exit_crit_edge, label %do.body13.i.i

netdev_name_node_del.exit.hlist_del_rcu.exit_crit_edge: ; preds = %netdev_name_node_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %hlist_del_rcu.exit

do.body13.i.i:                                    ; preds = %netdev_name_node_del.exit
  call void @__sanitizer_cov_trace_pc() #37
  %pprev14.i.i = getelementptr inbounds %struct.hlist_node, ptr %17, i32 0, i32 1
  %21 = ptrtoint ptr %pprev14.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %pprev14.i.i, align 4
  br label %hlist_del_rcu.exit

hlist_del_rcu.exit:                               ; preds = %do.body13.i.i, %netdev_name_node_del.exit.hlist_del_rcu.exit_crit_edge
  %22 = ptrtoint ptr %pprev2.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr inttoptr (i32 290 to ptr), ptr %pprev2.i.i, align 4
  tail call void @_raw_write_unlock(ptr noundef nonnull @dev_base_lock) #35
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %23 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %nd_net.i, align 4
  %dev_base_seq.i = getelementptr inbounds %struct.net, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %dev_base_seq.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %dev_base_seq.promoted.i = load i32, ptr %dev_base_seq.i, align 4
  %phi.bo.i = add i32 %dev_base_seq.promoted.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %phi.bo.i)
  %cmp.i.peel = icmp eq i32 %phi.bo.i, 0
  %spec.select = select i1 %cmp.i.peel, i32 1, i32 %phi.bo.i
  %26 = ptrtoint ptr %dev_base_seq.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %spec.select, ptr %dev_base_seq.i, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_shutdown(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rtmsg_ifinfo_build_skb(i32 noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_uc_flush(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_mc_flush(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtmsg_ifinfo_send(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_unregister_kobject(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unregister_netdev(ptr noundef %dev) #1 align 64 {
entry:
  %single.i.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %call.i.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i, label %entry.if.end29.i.i_crit_edge

entry.if.end29.i.i_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i.i

land.rhs.i.i:                                     ; preds = %entry
  %.b45.i.i = load i1, ptr @unregister_netdevice_queue.__already_done, align 1
  br i1 %.b45.i.i, label %land.rhs.i.i.if.end29.i.i_crit_edge, label %if.then.i.i, !prof !1311

land.rhs.i.i.if.end29.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i.i

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @unregister_netdevice_queue.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10341, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 10341) #35
  br label %if.end29.i.i

if.end29.i.i:                                     ; preds = %if.then.i.i, %land.rhs.i.i.if.end29.i.i_crit_edge, %entry.if.end29.i.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %single.i.i) #35
  %0 = getelementptr inbounds %struct.list_head, ptr %single.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %single.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %single.i.i, ptr %single.i.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %single.i.i, ptr %0, align 4
  %unreg_list39.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 9
  %call.i.i46.i.i = call zeroext i1 @__list_add_valid(ptr noundef %unreg_list39.i.i, ptr noundef nonnull %single.i.i, ptr noundef nonnull %single.i.i) #35
  br i1 %call.i.i46.i.i, label %if.end.i.i47.i.i, label %if.end29.i.i.unregister_netdevice.exit_crit_edge

if.end29.i.i.unregister_netdevice.exit_crit_edge: ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %unregister_netdevice.exit

if.end.i.i47.i.i:                                 ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %unreg_list39.i.i, ptr %0, align 4
  %4 = ptrtoint ptr %unreg_list39.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %single.i.i, ptr %unreg_list39.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 9, i32 1
  %5 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %single.i.i, ptr %prev3.i.i.i.i, align 4
  %6 = ptrtoint ptr %single.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %unreg_list39.i.i, ptr %single.i.i, align 4
  br label %unregister_netdevice.exit

unregister_netdevice.exit:                        ; preds = %if.end.i.i47.i.i, %if.end29.i.i.unregister_netdevice.exit_crit_edge
  call void @unregister_netdevice_many(ptr noundef nonnull %single.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %single.i.i) #35
  call void @rtnl_unlock() #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__dev_change_net_namespace(ptr noundef %dev, ptr noundef %net, ptr noundef %pat, i32 noundef %new_ifindex) #1 align 64 {
entry:
  %info.i.i259 = alloca %struct.netdev_notifier_info, align 4
  %linkname.i93.i = alloca [23 x i8], align 1
  %linkname.i87.i238 = alloca [23 x i8], align 1
  %linkname.i78.i = alloca [23 x i8], align 1
  %linkname.i.i239 = alloca [23 x i8], align 1
  %info.i10.i.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i8.i.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %info.i.i.i.i.i = alloca %struct.netdev_notifier_info, align 4
  %linkname.i91.i = alloca [23 x i8], align 1
  %linkname.i87.i = alloca [23 x i8], align 1
  %linkname.i80.i = alloca [23 x i8], align 1
  %linkname.i.i = alloca [23 x i8], align 1
  %info.i.i = alloca %struct.netdev_notifier_info, align 4
  %single.i = alloca %struct.list_head, align 4
  %new_nsid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %nd_net.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %0 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nd_net.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %new_nsid) #35
  %call1 = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end30_crit_edge

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b197 = load i1, ptr @__dev_change_net_namespace.__already_done, align 1
  br i1 %.b197, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !1311

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__dev_change_net_namespace.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10501, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 10501) #35
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  %features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %2 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %features, align 16
  %and = and i64 %3, 8192
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool38.not = icmp eq i64 %and, 0
  br i1 %tobool38.not, label %if.end40, label %if.end30.out_crit_edge

if.end30.out_crit_edge:                           ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end40:                                         ; preds = %if.end30
  %reg_state = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %4 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %bf.load)
  %cmp.not = icmp eq i8 %bf.load, 1
  br i1 %cmp.not, label %if.end42, label %if.end40.out_crit_edge

if.end40.out_crit_edge:                           ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end42:                                         ; preds = %if.end40
  %cmp.i.not = icmp eq ptr %1, %net
  br i1 %cmp.i.not, label %if.end42.out_crit_edge, label %if.end46

if.end42.out_crit_edge:                           ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end46:                                         ; preds = %if.end42
  %call.i.i.i = tail call i32 @strnlen(ptr noundef %dev, i32 noundef 16) #38
  %call1.i.i.i = tail call i32 @full_name_hash(ptr noundef %net, ptr noundef %dev, i32 noundef %call.i.i.i) #39
  %dev_name_head.i.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %5 = ptrtoint ptr %dev_name_head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev_name_head.i.i.i, align 4
  %mul.i.i.i.i.i = mul i32 %call1.i.i.i, 1640531527
  %shr.i.i.i.i = lshr i32 %mul.i.i.i.i.i, 24
  %arrayidx.i.i.i = getelementptr %struct.hlist_head, ptr %6, i32 %shr.i.i.i.i
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %if.end46
  %name_node.0.in.i.i = phi ptr [ %arrayidx.i.i.i, %if.end46 ], [ %name_node.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %7 = ptrtoint ptr %name_node.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %name_node.0.i.i = load ptr, ptr %name_node.0.in.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %name_node.0.i.i, null
  br i1 %tobool2.not.i.i, label %for.cond.i.i.if.end56_crit_edge, label %for.body.i.i

for.cond.i.i.if.end56_crit_edge:                  ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end56

for.body.i.i:                                     ; preds = %for.cond.i.i
  %name3.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i.i, i32 0, i32 3
  %8 = ptrtoint ptr %name3.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %name3.i.i, align 4
  %call4.i.i = tail call i32 @strcmp(ptr noundef %9, ptr noundef %dev) #38
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %if.then48, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.i

if.then48:                                        ; preds = %for.body.i.i
  %tobool49.not = icmp eq ptr %pat, null
  br i1 %tobool49.not, label %if.then48.out_crit_edge, label %if.end51

if.then48.out_crit_edge:                          ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end51:                                         ; preds = %if.then48
  %call52 = tail call fastcc i32 @dev_get_valid_name(ptr noundef %net, ptr noundef %dev, ptr noundef nonnull %pat)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %cmp53 = icmp slt i32 %call52, 0
  br i1 %cmp53, label %if.end51.out_crit_edge, label %if.end51.if.end56_crit_edge

if.end51.if.end56_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end56

if.end51.out_crit_edge:                           ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end56:                                         ; preds = %if.end51.if.end56_crit_edge, %for.cond.i.i.if.end56_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %new_ifindex)
  %tobool57.not = icmp eq i32 %new_ifindex, 0
  br i1 %tobool57.not, label %if.then66.critedge, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end56
  %dev_index_head.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %10 = ptrtoint ptr %dev_index_head.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev_index_head.i.i, align 16
  %and.i.i = and i32 %new_ifindex, 255
  %arrayidx.i.i = getelementptr %struct.hlist_head, ptr %11, i32 %and.i.i
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  %add.ptr.i = getelementptr i8, ptr %13, i32 -664
  %tobool2.not2528.i = icmp eq ptr %add.ptr.i, null
  %tobool2.not25.i = or i1 %tobool.not.i, %tobool2.not2528.i
  br i1 %tobool2.not25.i, label %land.lhs.true.if.end73.critedge_crit_edge, label %land.lhs.true.for.body.i_crit_edge

land.lhs.true.for.body.i_crit_edge:               ; preds = %land.lhs.true
  br label %for.body.i

land.lhs.true.if.end73.critedge_crit_edge:        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end73.critedge

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %land.lhs.true.for.body.i_crit_edge
  %dev.026.i = phi ptr [ %add.ptr10.i, %for.inc.i.for.body.i_crit_edge ], [ %add.ptr.i, %land.lhs.true.for.body.i_crit_edge ]
  %ifindex3.i = getelementptr inbounds %struct.net_device, ptr %dev.026.i, i32 0, i32 17
  %14 = ptrtoint ptr %ifindex3.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ifindex3.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %new_ifindex)
  %cmp.i201 = icmp eq i32 %15, %new_ifindex
  br i1 %cmp.i201, label %for.body.i.out_crit_edge, label %for.inc.i

for.body.i.out_crit_edge:                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

for.inc.i:                                        ; preds = %for.body.i
  %index_hlist.i = getelementptr inbounds %struct.net_device, ptr %dev.026.i, i32 0, i32 101
  %16 = ptrtoint ptr %index_hlist.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %index_hlist.i, align 8
  %tobool6.not.i = icmp eq ptr %17, null
  %add.ptr10.i = getelementptr i8, ptr %17, i32 -664
  %tobool2.not29.i = icmp eq ptr %add.ptr10.i, null
  %tobool2.not.i = or i1 %tobool6.not.i, %tobool2.not29.i
  br i1 %tobool2.not.i, label %for.inc.i.if.end73.critedge_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.inc.i.if.end73.critedge_crit_edge:            ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end73.critedge

if.then66.critedge:                               ; preds = %if.end56
  %flags.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %18 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.i, align 8
  %and.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i202 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i202, label %if.then66.critedge.dev_close.exit_crit_edge, label %if.then.i

if.then66.critedge.dev_close.exit_crit_edge:      ; preds = %if.then66.critedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_close.exit

if.then.i:                                        ; preds = %if.then66.critedge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %single.i) #35
  %20 = getelementptr inbounds %struct.list_head, ptr %single.i, i32 0, i32 1
  %21 = ptrtoint ptr %single.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %single.i, ptr %single.i, align 4
  %22 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %single.i, ptr %20, align 4
  %close_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 10
  %call.i.i.i203 = call zeroext i1 @__list_add_valid(ptr noundef %close_list.i, ptr noundef nonnull %single.i, ptr noundef nonnull %single.i) #35
  br i1 %call.i.i.i203, label %if.end.i.i.i, label %if.then.i.list_add.exit.i_crit_edge

if.then.i.list_add.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  %23 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %close_list.i, ptr %20, align 4
  %24 = ptrtoint ptr %close_list.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %single.i, ptr %close_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 10, i32 1
  %25 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %single.i, ptr %prev3.i.i.i, align 4
  %26 = ptrtoint ptr %single.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %close_list.i, ptr %single.i, align 4
  br label %list_add.exit.i

list_add.exit.i:                                  ; preds = %if.end.i.i.i, %if.then.i.list_add.exit.i_crit_edge
  call void @dev_close_many(ptr noundef nonnull %single.i, i1 noundef zeroext true) #35
  %call.i.i2.i = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %single.i) #35
  br i1 %call.i.i2.i, label %if.end.i.i3.i, label %list_add.exit.i.list_del.exit.i_crit_edge

list_add.exit.i.list_del.exit.i_crit_edge:        ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del.exit.i

if.end.i.i3.i:                                    ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %27 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %20, align 4
  %29 = ptrtoint ptr %single.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %single.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %prev1.i.i.i.i, align 4
  %32 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %30, ptr %28, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i3.i, %list_add.exit.i.list_del.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %single.i) #35
  br label %dev_close.exit

dev_close.exit:                                   ; preds = %list_del.exit.i, %if.then66.critedge.dev_close.exit_crit_edge
  call fastcc void @unlist_netdevice(ptr noundef %dev)
  call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i204 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i204, label %if.else.i, label %if.then.i205

if.then.i205:                                     ; preds = %dev_close.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @synchronize_rcu_expedited() #35
  br label %synchronize_net.exit

if.else.i:                                        ; preds = %dev_close.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @synchronize_rcu() #35
  br label %synchronize_net.exit

synchronize_net.exit:                             ; preds = %if.else.i, %if.then.i205
  call void @dev_shutdown(ptr noundef %dev) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i) #35
  %33 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i, i32 0, i32 1
  %34 = ptrtoint ptr %info.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %dev, ptr %info.i.i, align 4
  %35 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %33, align 4
  %36 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %nd_net.i, align 4
  %call1.i.i.i206 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i206)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i206, 0
  br i1 %tobool.not.i.i.i, label %land.rhs.i.i.i, label %synchronize_net.exit.if.end30.i.i.i_crit_edge

synchronize_net.exit.if.end30.i.i.i_crit_edge:    ; preds = %synchronize_net.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

land.rhs.i.i.i:                                   ; preds = %synchronize_net.exit
  %.b50.i.i.i = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i, label %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.if.end30.i.i.i_crit_edge:          ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i

if.end30.i.i.i:                                   ; preds = %if.then.i.i.i, %land.rhs.i.i.i.if.end30.i.i.i_crit_edge, %synchronize_net.exit.if.end30.i.i.i_crit_edge
  %netdev_chain.i.i.i = getelementptr inbounds %struct.net, ptr %37, i32 0, i32 25
  %call38.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i, i32 noundef 6, ptr noundef nonnull %info.i.i) #35
  %and.i.i.i = and i32 %call38.i.i.i, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool39.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool39.not.i.i.i, label %if.end41.i.i.i, label %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge

if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge: ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit

if.end41.i.i.i:                                   ; preds = %if.end30.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 6, ptr noundef nonnull %info.i.i) #35
  br label %call_netdevice_notifiers.exit

call_netdevice_notifiers.exit:                    ; preds = %if.end41.i.i.i, %if.end30.i.i.i.call_netdevice_notifiers.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i) #35
  call void @rcu_barrier() #35
  %38 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %nd_net.i, align 4
  %call64.c200 = call i32 @peernet2id_alloc(ptr noundef %39, ptr noundef %net, i32 noundef 3264) #35
  %40 = ptrtoint ptr %new_nsid to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %call64.c200, ptr %new_nsid, align 4
  %ifindex = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 17
  %41 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ifindex, align 4
  %dev_index_head.i.i208 = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %43 = ptrtoint ptr %dev_index_head.i.i208 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %dev_index_head.i.i208, align 16
  %and.i.i209 = and i32 %42, 255
  %arrayidx.i.i210 = getelementptr %struct.hlist_head, ptr %44, i32 %and.i.i209
  %45 = ptrtoint ptr %arrayidx.i.i210 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx.i.i210, align 4
  %tobool.not.i211 = icmp eq ptr %46, null
  %add.ptr.i212 = getelementptr i8, ptr %46, i32 -664
  %tobool2.not2528.i213 = icmp eq ptr %add.ptr.i212, null
  %tobool2.not25.i214 = or i1 %tobool.not.i211, %tobool2.not2528.i213
  br i1 %tobool2.not25.i214, label %call_netdevice_notifiers.exit.if.end73_crit_edge, label %call_netdevice_notifiers.exit.for.body.i218_crit_edge

call_netdevice_notifiers.exit.for.body.i218_crit_edge: ; preds = %call_netdevice_notifiers.exit
  br label %for.body.i218

call_netdevice_notifiers.exit.if.end73_crit_edge: ; preds = %call_netdevice_notifiers.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end73

for.body.i218:                                    ; preds = %for.inc.i224.for.body.i218_crit_edge, %call_netdevice_notifiers.exit.for.body.i218_crit_edge
  %dev.026.i215 = phi ptr [ %add.ptr10.i221, %for.inc.i224.for.body.i218_crit_edge ], [ %add.ptr.i212, %call_netdevice_notifiers.exit.for.body.i218_crit_edge ]
  %ifindex3.i216 = getelementptr inbounds %struct.net_device, ptr %dev.026.i215, i32 0, i32 17
  %47 = ptrtoint ptr %ifindex3.i216 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %ifindex3.i216, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %42)
  %cmp.i217 = icmp eq i32 %48, %42
  br i1 %cmp.i217, label %if.then69, label %for.inc.i224

for.inc.i224:                                     ; preds = %for.body.i218
  %index_hlist.i219 = getelementptr inbounds %struct.net_device, ptr %dev.026.i215, i32 0, i32 101
  %49 = ptrtoint ptr %index_hlist.i219 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %index_hlist.i219, align 8
  %tobool6.not.i220 = icmp eq ptr %50, null
  %add.ptr10.i221 = getelementptr i8, ptr %50, i32 -664
  %tobool2.not29.i222 = icmp eq ptr %add.ptr10.i221, null
  %tobool2.not.i223 = or i1 %tobool6.not.i220, %tobool2.not29.i222
  br i1 %tobool2.not.i223, label %for.inc.i224.if.end73_crit_edge, label %for.inc.i224.for.body.i218_crit_edge

for.inc.i224.for.body.i218_crit_edge:             ; preds = %for.inc.i224
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i218

for.inc.i224.if.end73_crit_edge:                  ; preds = %for.inc.i224
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end73

if.then69:                                        ; preds = %for.body.i218
  call void @__sanitizer_cov_trace_pc() #37
  %call70 = call fastcc i32 @dev_new_index(ptr noundef %net)
  br label %if.end73

if.end73.critedge:                                ; preds = %for.inc.i.if.end73.critedge_crit_edge, %land.lhs.true.if.end73.critedge_crit_edge
  tail call void @dev_close(ptr noundef %dev)
  tail call fastcc void @unlist_netdevice(ptr noundef %dev)
  tail call void @synchronize_net()
  tail call void @dev_shutdown(ptr noundef %dev) #35
  %call62.c = tail call i32 @call_netdevice_notifiers(i32 noundef 6, ptr noundef %dev)
  tail call void @rcu_barrier() #35
  %51 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %nd_net.i, align 4
  %call64.c = tail call i32 @peernet2id_alloc(ptr noundef %52, ptr noundef %net, i32 noundef 3264) #35
  %53 = ptrtoint ptr %new_nsid to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %call64.c, ptr %new_nsid, align 4
  br label %if.end73

if.end73:                                         ; preds = %if.end73.critedge, %if.then69, %for.inc.i224.if.end73_crit_edge, %call_netdevice_notifiers.exit.if.end73_crit_edge
  %new_ifindex.addr.0 = phi i32 [ %call70, %if.then69 ], [ %new_ifindex, %if.end73.critedge ], [ %42, %call_netdevice_notifiers.exit.if.end73_crit_edge ], [ %42, %for.inc.i224.if.end73_crit_edge ]
  call void @rtmsg_ifinfo_newnet(i32 noundef 17, ptr noundef %dev, i32 noundef -1, i32 noundef 3264, ptr noundef nonnull %new_nsid, i32 noundef %new_ifindex.addr.0) #35
  call void @dev_uc_flush(ptr noundef %dev) #35
  call void @dev_mc_flush(ptr noundef %dev) #35
  %dev74 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  %call75 = call i32 @kobject_uevent(ptr noundef %dev74, i32 noundef 1) #35
  %54 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %nd_net.i, align 4
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %56 = ptrtoint ptr %adj_list.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %.pn95.i = load ptr, ptr %adj_list.i, align 4
  %cmp.not97.i = icmp eq ptr %.pn95.i, %adj_list.i
  br i1 %cmp.not97.i, label %if.end73.for.end.i_crit_edge, label %if.end73.for.body.i228_crit_edge

if.end73.for.body.i228_crit_edge:                 ; preds = %if.end73
  br label %for.body.i228

if.end73.for.end.i_crit_edge:                     ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.body.i228:                                    ; preds = %for.inc.i229.for.body.i228_crit_edge, %if.end73.for.body.i228_crit_edge
  %.pn98.i = phi ptr [ %.pn.i, %for.inc.i229.for.body.i228_crit_edge ], [ %.pn95.i, %if.end73.for.body.i228_crit_edge ]
  %iter.099.i = getelementptr i8, ptr %.pn98.i, i32 -16
  %57 = ptrtoint ptr %iter.099.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %iter.099.i, align 4
  %nd_net.i79.i = getelementptr inbounds %struct.net_device, ptr %58, i32 0, i32 127
  %59 = ptrtoint ptr %nd_net.i79.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %nd_net.i79.i, align 4
  %cmp.i.not.i = icmp eq ptr %55, %60
  br i1 %cmp.i.not.i, label %if.end.i, label %for.body.i228.for.inc.i229_crit_edge

for.body.i228.for.inc.i229_crit_edge:             ; preds = %for.body.i228
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i229

if.end.i:                                         ; preds = %for.body.i228
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i.i) #35
  %61 = call ptr @memset(ptr %linkname.i.i, i32 255, i32 23)
  %call.i.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i.i, ptr noundef nonnull @.str.171, ptr noundef %dev) #35
  %dev1.i.i = getelementptr inbounds %struct.net_device, ptr %58, i32 0, i32 133
  call void @sysfs_remove_link(ptr noundef %dev1.i.i, ptr noundef nonnull %linkname.i.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i.i) #35
  %62 = ptrtoint ptr %iter.099.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %iter.099.i, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i80.i) #35
  %64 = call ptr @memset(ptr %linkname.i80.i, i32 255, i32 23)
  %call.i82.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i80.i, ptr noundef nonnull @.str.170, ptr noundef %63) #35
  call void @sysfs_remove_link(ptr noundef %dev74, ptr noundef nonnull %linkname.i80.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i80.i) #35
  br label %for.inc.i229

for.inc.i229:                                     ; preds = %if.end.i, %for.body.i228.for.inc.i229_crit_edge
  %65 = ptrtoint ptr %.pn98.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %.pn.i = load ptr, ptr %.pn98.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %adj_list.i
  br i1 %cmp.not.i, label %for.inc.i229.for.end.i_crit_edge, label %for.inc.i229.for.body.i228_crit_edge

for.inc.i229.for.body.i228_crit_edge:             ; preds = %for.inc.i229
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i228

for.inc.i229.for.end.i_crit_edge:                 ; preds = %for.inc.i229
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i229.for.end.i_crit_edge, %if.end73.for.end.i_crit_edge
  %lower21.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %66 = ptrtoint ptr %lower21.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %.pn78100.i = load ptr, ptr %lower21.i, align 4
  %cmp29.not102.i = icmp eq ptr %.pn78100.i, %lower21.i
  br i1 %cmp29.not102.i, label %for.end.i.netdev_adjacent_del_links.exit_crit_edge, label %for.end.i.for.body31.i_crit_edge

for.end.i.for.body31.i_crit_edge:                 ; preds = %for.end.i
  br label %for.body31.i

for.end.i.netdev_adjacent_del_links.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_adjacent_del_links.exit

for.body31.i:                                     ; preds = %for.inc49.i.for.body31.i_crit_edge, %for.end.i.for.body31.i_crit_edge
  %.pn78103.i = phi ptr [ %.pn78.i, %for.inc49.i.for.body31.i_crit_edge ], [ %.pn78100.i, %for.end.i.for.body31.i_crit_edge ]
  %iter.1104.i = getelementptr i8, ptr %.pn78103.i, i32 -16
  %67 = ptrtoint ptr %iter.1104.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %iter.1104.i, align 4
  %nd_net.i84.i = getelementptr inbounds %struct.net_device, ptr %68, i32 0, i32 127
  %69 = ptrtoint ptr %nd_net.i84.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %nd_net.i84.i, align 4
  %cmp.i85.not.i = icmp eq ptr %55, %70
  br i1 %cmp.i85.not.i, label %if.end37.i, label %for.body31.i.for.inc49.i_crit_edge

for.body31.i.for.inc49.i_crit_edge:               ; preds = %for.body31.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc49.i

if.end37.i:                                       ; preds = %for.body31.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i87.i) #35
  %71 = call ptr @memset(ptr %linkname.i87.i, i32 255, i32 23)
  %call.i89.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i87.i, ptr noundef nonnull @.str.170, ptr noundef %dev) #35
  %dev1.i90.i = getelementptr inbounds %struct.net_device, ptr %68, i32 0, i32 133
  call void @sysfs_remove_link(ptr noundef %dev1.i90.i, ptr noundef nonnull %linkname.i87.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i87.i) #35
  %72 = ptrtoint ptr %iter.1104.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %iter.1104.i, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i91.i) #35
  %74 = call ptr @memset(ptr %linkname.i91.i, i32 255, i32 23)
  %call.i93.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i91.i, ptr noundef nonnull @.str.171, ptr noundef %73) #35
  call void @sysfs_remove_link(ptr noundef %dev74, ptr noundef nonnull %linkname.i91.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i91.i) #35
  br label %for.inc49.i

for.inc49.i:                                      ; preds = %if.end37.i, %for.body31.i.for.inc49.i_crit_edge
  %75 = ptrtoint ptr %.pn78103.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %.pn78.i = load ptr, ptr %.pn78103.i, align 4
  %cmp29.not.i = icmp eq ptr %.pn78.i, %lower21.i
  br i1 %cmp29.not.i, label %for.inc49.i.netdev_adjacent_del_links.exit_crit_edge, label %for.inc49.i.for.body31.i_crit_edge

for.inc49.i.for.body31.i_crit_edge:               ; preds = %for.inc49.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body31.i

for.inc49.i.netdev_adjacent_del_links.exit_crit_edge: ; preds = %for.inc49.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_adjacent_del_links.exit

netdev_adjacent_del_links.exit:                   ; preds = %for.inc49.i.netdev_adjacent_del_links.exit_crit_edge, %for.end.i.netdev_adjacent_del_links.exit_crit_edge
  %net_notifier_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 150
  %76 = ptrtoint ptr %net_notifier_list.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %nn.020.i = load ptr, ptr %net_notifier_list.i, align 4
  %cmp.not21.i = icmp eq ptr %nn.020.i, %net_notifier_list.i
  br i1 %cmp.not21.i, label %netdev_adjacent_del_links.exit.move_netdevice_notifiers_dev_net.exit_crit_edge, label %for.body.lr.ph.i231

netdev_adjacent_del_links.exit.move_netdevice_notifiers_dev_net.exit_crit_edge: ; preds = %netdev_adjacent_del_links.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %move_netdevice_notifiers_dev_net.exit

for.body.lr.ph.i231:                              ; preds = %netdev_adjacent_del_links.exit
  %77 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i.i.i.i, i32 0, i32 1
  %78 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i8.i.i.i.i, i32 0, i32 1
  %79 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i10.i.i.i.i, i32 0, i32 1
  %netdev_chain.i15.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 25
  br label %for.body.i233

for.body.i233:                                    ; preds = %__register_netdevice_notifier_net.exit.i.for.body.i233_crit_edge, %for.body.lr.ph.i231
  %nn.022.i = phi ptr [ %nn.020.i, %for.body.lr.ph.i231 ], [ %nn.0.i, %__register_netdevice_notifier_net.exit.i.for.body.i233_crit_edge ]
  %80 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %nd_net.i, align 4
  %nb.i = getelementptr inbounds %struct.netdev_net_notifier, ptr %nn.022.i, i32 0, i32 1
  %82 = ptrtoint ptr %nb.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %nb.i, align 4
  %netdev_chain.i.i = getelementptr inbounds %struct.net, ptr %81, i32 0, i32 25
  %call.i.i232 = call i32 @raw_notifier_chain_unregister(ptr noundef %netdev_chain.i.i, ptr noundef %83) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i232)
  %tobool.not.i.i = icmp eq i32 %call.i.i232, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %for.body.i233.__unregister_netdevice_notifier_net.exit.i_crit_edge

for.body.i233.__unregister_netdevice_notifier_net.exit.i_crit_edge: ; preds = %for.body.i233
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit.i

if.end.i.i:                                       ; preds = %for.body.i233
  %dev_base_head.i.i.i = getelementptr inbounds %struct.net, ptr %81, i32 0, i32 16
  %84 = ptrtoint ptr %dev_base_head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %.pn10.i.i.i = load ptr, ptr %dev_base_head.i.i.i, align 4
  %cmp.not11.i.i.i = icmp eq ptr %.pn10.i.i.i, %dev_base_head.i.i.i
  br i1 %cmp.not11.i.i.i, label %if.end.i.i.__unregister_netdevice_notifier_net.exit.i_crit_edge, label %if.end.i.i.for.body.i.i.i_crit_edge

if.end.i.i.for.body.i.i.i_crit_edge:              ; preds = %if.end.i.i
  br label %for.body.i.i.i

if.end.i.i.__unregister_netdevice_notifier_net.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit.i

for.body.i.i.i:                                   ; preds = %call_netdevice_unregister_notifiers.exit.i.i.i.for.body.i.i.i_crit_edge, %if.end.i.i.for.body.i.i.i_crit_edge
  %.pn12.i.i.i = phi ptr [ %.pn.i.i.i, %call_netdevice_unregister_notifiers.exit.i.i.i.for.body.i.i.i_crit_edge ], [ %.pn10.i.i.i, %if.end.i.i.for.body.i.i.i_crit_edge ]
  %dev.0.i.i.i = getelementptr i8, ptr %.pn12.i.i.i, i32 -40
  %flags.i.i.i.i = getelementptr i8, ptr %.pn12.i.i.i, i32 64
  %85 = ptrtoint ptr %flags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %flags.i.i.i.i, align 8
  %and.i.i.i.i = and i32 %86, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %for.body.i.i.i.call_netdevice_unregister_notifiers.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

for.body.i.i.i.call_netdevice_unregister_notifiers.exit.i.i.i_crit_edge: ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_unregister_notifiers.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i.i.i.i) #35
  %87 = ptrtoint ptr %info.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %dev.0.i.i.i, ptr %info.i.i.i.i.i, align 4
  %88 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr null, ptr %77, align 4
  %89 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %83, align 4
  %call.i.i.i.i.i = call i32 %90(ptr noundef %83, i32 noundef 10, ptr noundef nonnull %info.i.i.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i.i.i.i) #35
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i8.i.i.i.i) #35
  %91 = ptrtoint ptr %info.i8.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %dev.0.i.i.i, ptr %info.i8.i.i.i.i, align 4
  %92 = ptrtoint ptr %78 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr null, ptr %78, align 4
  %93 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %83, align 4
  %call.i9.i.i.i.i = call i32 %94(ptr noundef %83, i32 noundef 2, ptr noundef nonnull %info.i8.i.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i8.i.i.i.i) #35
  br label %call_netdevice_unregister_notifiers.exit.i.i.i

call_netdevice_unregister_notifiers.exit.i.i.i:   ; preds = %if.then.i.i.i.i, %for.body.i.i.i.call_netdevice_unregister_notifiers.exit.i.i.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i10.i.i.i.i) #35
  %95 = ptrtoint ptr %info.i10.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %dev.0.i.i.i, ptr %info.i10.i.i.i.i, align 4
  %96 = ptrtoint ptr %79 to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr null, ptr %79, align 4
  %97 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %83, align 4
  %call.i11.i.i.i.i = call i32 %98(ptr noundef %83, i32 noundef 6, ptr noundef nonnull %info.i10.i.i.i.i) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i10.i.i.i.i) #35
  %99 = ptrtoint ptr %.pn12.i.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %.pn.i.i.i = load ptr, ptr %.pn12.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %dev_base_head.i.i.i
  br i1 %cmp.not.i.i.i, label %call_netdevice_unregister_notifiers.exit.i.i.i.__unregister_netdevice_notifier_net.exit.i_crit_edge, label %call_netdevice_unregister_notifiers.exit.i.i.i.for.body.i.i.i_crit_edge

call_netdevice_unregister_notifiers.exit.i.i.i.for.body.i.i.i_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i.i

call_netdevice_unregister_notifiers.exit.i.i.i.__unregister_netdevice_notifier_net.exit.i_crit_edge: ; preds = %call_netdevice_unregister_notifiers.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__unregister_netdevice_notifier_net.exit.i

__unregister_netdevice_notifier_net.exit.i:       ; preds = %call_netdevice_unregister_notifiers.exit.i.i.i.__unregister_netdevice_notifier_net.exit.i_crit_edge, %if.end.i.i.__unregister_netdevice_notifier_net.exit.i_crit_edge, %for.body.i233.__unregister_netdevice_notifier_net.exit.i_crit_edge
  %100 = ptrtoint ptr %nb.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %nb.i, align 4
  %call.i16.i = call i32 @raw_notifier_chain_register(ptr noundef %netdev_chain.i15.i, ptr noundef %101) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i16.i)
  %tobool.not.i17.i = icmp eq i32 %call.i16.i, 0
  br i1 %tobool.not.i17.i, label %if.end.i18.i, label %__unregister_netdevice_notifier_net.exit.i.__register_netdevice_notifier_net.exit.i_crit_edge

__unregister_netdevice_notifier_net.exit.i.__register_netdevice_notifier_net.exit.i_crit_edge: ; preds = %__unregister_netdevice_notifier_net.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__register_netdevice_notifier_net.exit.i

if.end.i18.i:                                     ; preds = %__unregister_netdevice_notifier_net.exit.i
  %.b.i.i = load i1, ptr @dev_boot_phase, align 4
  br i1 %.b.i.i, label %if.end3.i.i, label %if.end.i18.i.__register_netdevice_notifier_net.exit.i_crit_edge

if.end.i18.i.__register_netdevice_notifier_net.exit.i_crit_edge: ; preds = %if.end.i18.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__register_netdevice_notifier_net.exit.i

if.end3.i.i:                                      ; preds = %if.end.i18.i
  call void @__sanitizer_cov_trace_pc() #37
  %call4.i.i234 = call fastcc i32 @call_netdevice_register_net_notifiers(ptr noundef %101, ptr noundef %net) #35
  br label %__register_netdevice_notifier_net.exit.i

__register_netdevice_notifier_net.exit.i:         ; preds = %if.end3.i.i, %if.end.i18.i.__register_netdevice_notifier_net.exit.i_crit_edge, %__unregister_netdevice_notifier_net.exit.i.__register_netdevice_notifier_net.exit.i_crit_edge
  %102 = ptrtoint ptr %nn.022.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %nn.0.i = load ptr, ptr %nn.022.i, align 4
  %cmp.not.i235 = icmp eq ptr %nn.0.i, %net_notifier_list.i
  br i1 %cmp.not.i235, label %__register_netdevice_notifier_net.exit.i.move_netdevice_notifiers_dev_net.exit_crit_edge, label %__register_netdevice_notifier_net.exit.i.for.body.i233_crit_edge

__register_netdevice_notifier_net.exit.i.for.body.i233_crit_edge: ; preds = %__register_netdevice_notifier_net.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i233

__register_netdevice_notifier_net.exit.i.move_netdevice_notifiers_dev_net.exit_crit_edge: ; preds = %__register_netdevice_notifier_net.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %move_netdevice_notifiers_dev_net.exit

move_netdevice_notifiers_dev_net.exit:            ; preds = %__register_netdevice_notifier_net.exit.i.move_netdevice_notifiers_dev_net.exit_crit_edge, %netdev_adjacent_del_links.exit.move_netdevice_notifiers_dev_net.exit_crit_edge
  %103 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store ptr %net, ptr %nd_net.i, align 4
  %ifindex76 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 17
  %104 = ptrtoint ptr %ifindex76 to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %new_ifindex.addr.0, ptr %ifindex76, align 4
  %call79 = call i32 @kobject_uevent(ptr noundef %dev74, i32 noundef 0) #35
  %105 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %nd_net.i, align 4
  %107 = ptrtoint ptr %adj_list.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %.pn99.i = load ptr, ptr %adj_list.i, align 4
  %cmp.not101.i = icmp eq ptr %.pn99.i, %adj_list.i
  br i1 %cmp.not101.i, label %move_netdevice_notifiers_dev_net.exit.for.end.i251_crit_edge, label %move_netdevice_notifiers_dev_net.exit.for.body.i244_crit_edge

move_netdevice_notifiers_dev_net.exit.for.body.i244_crit_edge: ; preds = %move_netdevice_notifiers_dev_net.exit
  br label %for.body.i244

move_netdevice_notifiers_dev_net.exit.for.end.i251_crit_edge: ; preds = %move_netdevice_notifiers_dev_net.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i251

for.body.i244:                                    ; preds = %for.inc.i249.for.body.i244_crit_edge, %move_netdevice_notifiers_dev_net.exit.for.body.i244_crit_edge
  %.pn102.i = phi ptr [ %.pn.i247, %for.inc.i249.for.body.i244_crit_edge ], [ %.pn99.i, %move_netdevice_notifiers_dev_net.exit.for.body.i244_crit_edge ]
  %iter.0103.i = getelementptr i8, ptr %.pn102.i, i32 -16
  %108 = ptrtoint ptr %iter.0103.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %iter.0103.i, align 4
  %nd_net.i77.i = getelementptr inbounds %struct.net_device, ptr %109, i32 0, i32 127
  %110 = ptrtoint ptr %nd_net.i77.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %nd_net.i77.i, align 4
  %cmp.i.not.i243 = icmp eq ptr %106, %111
  br i1 %cmp.i.not.i243, label %if.end.i246, label %for.body.i244.for.inc.i249_crit_edge

for.body.i244.for.inc.i249_crit_edge:             ; preds = %for.body.i244
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i249

if.end.i246:                                      ; preds = %for.body.i244
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i.i239) #35
  %112 = call ptr @memset(ptr %linkname.i.i239, i32 255, i32 23)
  %call.i.i245 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i.i239, ptr noundef nonnull @.str.171, ptr noundef %dev) #35
  %dev2.i.i = getelementptr inbounds %struct.net_device, ptr %109, i32 0, i32 133
  %call6.i.i = call i32 @sysfs_create_link(ptr noundef %dev2.i.i, ptr noundef %dev74, ptr noundef nonnull %linkname.i.i239) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i.i239) #35
  %113 = ptrtoint ptr %iter.0103.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %iter.0103.i, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i78.i) #35
  %115 = call ptr @memset(ptr %linkname.i78.i, i32 255, i32 23)
  %call.i80.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i78.i, ptr noundef nonnull @.str.170, ptr noundef %114) #35
  %dev3.i82.i = getelementptr inbounds %struct.net_device, ptr %114, i32 0, i32 133
  %call6.i83.i = call i32 @sysfs_create_link(ptr noundef %dev74, ptr noundef %dev3.i82.i, ptr noundef nonnull %linkname.i78.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i78.i) #35
  br label %for.inc.i249

for.inc.i249:                                     ; preds = %if.end.i246, %for.body.i244.for.inc.i249_crit_edge
  %116 = ptrtoint ptr %.pn102.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %.pn.i247 = load ptr, ptr %.pn102.i, align 4
  %cmp.not.i248 = icmp eq ptr %.pn.i247, %adj_list.i
  br i1 %cmp.not.i248, label %for.inc.i249.for.end.i251_crit_edge, label %for.inc.i249.for.body.i244_crit_edge

for.inc.i249.for.body.i244_crit_edge:             ; preds = %for.inc.i249
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i244

for.inc.i249.for.end.i251_crit_edge:              ; preds = %for.inc.i249
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i251

for.end.i251:                                     ; preds = %for.inc.i249.for.end.i251_crit_edge, %move_netdevice_notifiers_dev_net.exit.for.end.i251_crit_edge
  %117 = ptrtoint ptr %lower21.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %.pn76104.i = load ptr, ptr %lower21.i, align 4
  %cmp29.not106.i = icmp eq ptr %.pn76104.i, %lower21.i
  br i1 %cmp29.not106.i, label %for.end.i251.netdev_adjacent_add_links.exit_crit_edge, label %for.end.i251.for.body31.i255_crit_edge

for.end.i251.for.body31.i255_crit_edge:           ; preds = %for.end.i251
  br label %for.body31.i255

for.end.i251.netdev_adjacent_add_links.exit_crit_edge: ; preds = %for.end.i251
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_adjacent_add_links.exit

for.body31.i255:                                  ; preds = %for.inc47.i.for.body31.i255_crit_edge, %for.end.i251.for.body31.i255_crit_edge
  %.pn76107.i = phi ptr [ %.pn76.i, %for.inc47.i.for.body31.i255_crit_edge ], [ %.pn76104.i, %for.end.i251.for.body31.i255_crit_edge ]
  %iter.1108.i = getelementptr i8, ptr %.pn76107.i, i32 -16
  %118 = ptrtoint ptr %iter.1108.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %iter.1108.i, align 4
  %nd_net.i84.i253 = getelementptr inbounds %struct.net_device, ptr %119, i32 0, i32 127
  %120 = ptrtoint ptr %nd_net.i84.i253 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %nd_net.i84.i253, align 4
  %cmp.i85.not.i254 = icmp eq ptr %106, %121
  br i1 %cmp.i85.not.i254, label %if.end37.i257, label %for.body31.i255.for.inc47.i_crit_edge

for.body31.i255.for.inc47.i_crit_edge:            ; preds = %for.body31.i255
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc47.i

if.end37.i257:                                    ; preds = %for.body31.i255
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i87.i238) #35
  %122 = call ptr @memset(ptr %linkname.i87.i238, i32 255, i32 23)
  %call.i89.i256 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i87.i238, ptr noundef nonnull @.str.170, ptr noundef %dev) #35
  %dev2.i90.i = getelementptr inbounds %struct.net_device, ptr %119, i32 0, i32 133
  %call6.i92.i = call i32 @sysfs_create_link(ptr noundef %dev2.i90.i, ptr noundef %dev74, ptr noundef nonnull %linkname.i87.i238) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i87.i238) #35
  %123 = ptrtoint ptr %iter.1108.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %iter.1108.i, align 4
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i93.i) #35
  %125 = call ptr @memset(ptr %linkname.i93.i, i32 255, i32 23)
  %call.i95.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i93.i, ptr noundef nonnull @.str.171, ptr noundef %124) #35
  %dev3.i97.i = getelementptr inbounds %struct.net_device, ptr %124, i32 0, i32 133
  %call6.i98.i = call i32 @sysfs_create_link(ptr noundef %dev74, ptr noundef %dev3.i97.i, ptr noundef nonnull %linkname.i93.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i93.i) #35
  br label %for.inc47.i

for.inc47.i:                                      ; preds = %if.end37.i257, %for.body31.i255.for.inc47.i_crit_edge
  %126 = ptrtoint ptr %.pn76107.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %.pn76.i = load ptr, ptr %.pn76107.i, align 4
  %cmp29.not.i258 = icmp eq ptr %.pn76.i, %lower21.i
  br i1 %cmp29.not.i258, label %for.inc47.i.netdev_adjacent_add_links.exit_crit_edge, label %for.inc47.i.for.body31.i255_crit_edge

for.inc47.i.for.body31.i255_crit_edge:            ; preds = %for.inc47.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body31.i255

for.inc47.i.netdev_adjacent_add_links.exit_crit_edge: ; preds = %for.inc47.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_adjacent_add_links.exit

netdev_adjacent_add_links.exit:                   ; preds = %for.inc47.i.netdev_adjacent_add_links.exit_crit_edge, %for.end.i251.netdev_adjacent_add_links.exit_crit_edge
  %call83 = call i32 @device_rename(ptr noundef %dev74, ptr noundef %dev) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool85.not = icmp eq i32 %call83, 0
  br i1 %tobool85.not, label %netdev_adjacent_add_links.exit.if.end107_crit_edge, label %do.end101, !prof !1311

netdev_adjacent_add_links.exit.if.end107_crit_edge: ; preds = %netdev_adjacent_add_links.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end107

do.end101:                                        ; preds = %netdev_adjacent_add_links.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10595, i32 noundef 9, ptr noundef null) #35
  br label %if.end107

if.end107:                                        ; preds = %do.end101, %netdev_adjacent_add_links.exit.if.end107_crit_edge
  %call115 = call i32 @netdev_change_owner(ptr noundef %dev, ptr noundef %1, ptr noundef %net) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call115)
  %tobool117.not = icmp eq i32 %call115, 0
  br i1 %tobool117.not, label %if.end107.if.end139_crit_edge, label %do.end133, !prof !1311

if.end107.if.end139_crit_edge:                    ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end139

do.end133:                                        ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10601, i32 noundef 9, ptr noundef null) #35
  br label %if.end139

if.end139:                                        ; preds = %do.end133, %if.end107.if.end139_crit_edge
  call fastcc void @list_netdevice(ptr noundef %dev)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %info.i.i259) #35
  %127 = getelementptr inbounds %struct.netdev_notifier_info, ptr %info.i.i259, i32 0, i32 1
  %128 = ptrtoint ptr %info.i.i259 to i32
  call void @__asan_store4_noabort(i32 %128)
  store ptr %dev, ptr %info.i.i259, align 4
  %129 = ptrtoint ptr %127 to i32
  call void @__asan_store4_noabort(i32 %129)
  store ptr null, ptr %127, align 4
  %130 = ptrtoint ptr %nd_net.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %nd_net.i, align 4
  %call1.i.i.i261 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i261)
  %tobool.not.i.i.i262 = icmp eq i32 %call1.i.i.i261, 0
  br i1 %tobool.not.i.i.i262, label %land.rhs.i.i.i264, label %if.end139.if.end30.i.i.i270_crit_edge

if.end139.if.end30.i.i.i270_crit_edge:            ; preds = %if.end139
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i270

land.rhs.i.i.i264:                                ; preds = %if.end139
  %.b50.i.i.i263 = load i1, ptr @call_netdevice_notifiers_info.__already_done, align 1
  br i1 %.b50.i.i.i263, label %land.rhs.i.i.i264.if.end30.i.i.i270_crit_edge, label %if.then.i.i.i265, !prof !1311

land.rhs.i.i.i264.if.end30.i.i.i270_crit_edge:    ; preds = %land.rhs.i.i.i264
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end30.i.i.i270

if.then.i.i.i265:                                 ; preds = %land.rhs.i.i.i264
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @call_netdevice_notifiers_info.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1910, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 1910) #35
  br label %if.end30.i.i.i270

if.end30.i.i.i270:                                ; preds = %if.then.i.i.i265, %land.rhs.i.i.i264.if.end30.i.i.i270_crit_edge, %if.end139.if.end30.i.i.i270_crit_edge
  %netdev_chain.i.i.i266 = getelementptr inbounds %struct.net, ptr %131, i32 0, i32 25
  %call38.i.i.i267 = call i32 @raw_notifier_call_chain(ptr noundef %netdev_chain.i.i.i266, i32 noundef 5, ptr noundef nonnull %info.i.i259) #35
  %and.i.i.i268 = and i32 %call38.i.i.i267, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i268)
  %tobool39.not.i.i.i269 = icmp eq i32 %and.i.i.i268, 0
  br i1 %tobool39.not.i.i.i269, label %if.end41.i.i.i272, label %if.end30.i.i.i270.call_netdevice_notifiers.exit274_crit_edge

if.end30.i.i.i270.call_netdevice_notifiers.exit274_crit_edge: ; preds = %if.end30.i.i.i270
  call void @__sanitizer_cov_trace_pc() #37
  br label %call_netdevice_notifiers.exit274

if.end41.i.i.i272:                                ; preds = %if.end30.i.i.i270
  call void @__sanitizer_cov_trace_pc() #37
  %call42.i.i.i271 = call i32 @raw_notifier_call_chain(ptr noundef nonnull @netdev_chain, i32 noundef 5, ptr noundef nonnull %info.i.i259) #35
  br label %call_netdevice_notifiers.exit274

call_netdevice_notifiers.exit274:                 ; preds = %if.end41.i.i.i272, %if.end30.i.i.i270.call_netdevice_notifiers.exit274_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %info.i.i259) #35
  call void @rtmsg_ifinfo(i32 noundef 16, ptr noundef %dev, i32 noundef -1, i32 noundef 3264) #35
  call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 10318) #35
  %call.i275 = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i275)
  %tobool.not.i276 = icmp eq i32 %call.i275, 0
  br i1 %tobool.not.i276, label %if.else.i278, label %if.then.i277

if.then.i277:                                     ; preds = %call_netdevice_notifiers.exit274
  call void @__sanitizer_cov_trace_pc() #37
  call void @synchronize_rcu_expedited() #35
  br label %out

if.else.i278:                                     ; preds = %call_netdevice_notifiers.exit274
  call void @__sanitizer_cov_trace_pc() #37
  call void @synchronize_rcu() #35
  br label %out

out:                                              ; preds = %if.else.i278, %if.then.i277, %for.body.i.out_crit_edge, %if.end51.out_crit_edge, %if.then48.out_crit_edge, %if.end42.out_crit_edge, %if.end40.out_crit_edge, %if.end30.out_crit_edge
  %err.0 = phi i32 [ -22, %if.end30.out_crit_edge ], [ -22, %if.end40.out_crit_edge ], [ 0, %if.end42.out_crit_edge ], [ %call52, %if.end51.out_crit_edge ], [ -17, %if.then48.out_crit_edge ], [ 0, %if.then.i277 ], [ 0, %if.else.i278 ], [ -16, %for.body.i.out_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %new_nsid) #35
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @peernet2id_alloc(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtmsg_ifinfo_newnet(i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_uevent(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_change_owner(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i64 @netdev_increment_features(i64 noundef %all, i64 noundef %one, i64 noundef %mask) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i64 %mask, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  %or = or i64 %mask, 26
  %spec.select = select i1 %tobool.not, i64 %mask, i64 %or
  %or1 = or i64 %spec.select, 1024
  %and2 = and i64 %one, 26845578363
  %and3 = and i64 %and2, %or1
  %or4 = or i64 %and3, %all
  %or5 = or i64 %one, -2199025352705
  %and6 = and i64 %or4, %or5
  %and7 = and i64 %or4, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and7)
  %tobool8.not = icmp eq i64 %and7, 0
  %and10 = and i64 %and6, -19
  %all.addr.0 = select i1 %tobool8.not, i64 %and6, i64 %and10
  ret i64 %all.addr.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @netdev_drivername(ptr nocapture noundef readonly %dev) local_unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %parent2 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133, i32 1
  %0 = ptrtoint ptr %parent2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent2, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %entry
  %driver3 = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %driver3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver3, align 4
  %tobool4.not = icmp eq ptr %3, null
  br i1 %tobool4.not, label %if.end.if.end8_crit_edge, label %land.lhs.true

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool5.not = icmp eq ptr %5, null
  br i1 %tobool5.not, label %land.lhs.true.if.end8_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8

if.end8:                                          ; preds = %land.lhs.true.if.end8_crit_edge, %if.end.if.end8_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ @.str.82, %if.end8 ], [ @.str.82, %entry.cleanup_crit_edge ], [ %5, %land.lhs.true.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #28

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__netdev_printk(ptr noundef %level, ptr noundef %dev, ptr noundef %vaf) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %do.end20, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %parent = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133, i32 1
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 8
  %tobool2.not = icmp eq ptr %1, null
  br i1 %tobool2.not, label %do.end.critedge, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %arrayidx = getelementptr i8, ptr %level, i32 1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %3 to i32
  %sub = add nsw i32 %conv, -48
  %call = tail call ptr @dev_driver_string(ptr noundef nonnull %1) #35
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 8
  %init_name.i = getelementptr inbounds %struct.device, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.dev_name.exit_crit_edge

if.then.dev_name.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.then.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %9, %if.end.i ], [ %7, %if.then.dev_name.exit_crit_edge ]
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %dev, align 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.i37 = icmp eq i8 %11, 0
  br i1 %tobool.not.i37, label %dev_name.exit.netdev_name.exit_crit_edge, label %lor.lhs.false.i

dev_name.exit.netdev_name.exit_crit_edge:         ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name.exit

lor.lhs.false.i:                                  ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #37
  %call.i = tail call ptr @strchr(ptr noundef nonnull %dev, i32 noundef 37) #35
  %tobool2.not.i = icmp eq ptr %call.i, null
  %spec.select.i = select i1 %tobool2.not.i, ptr %dev, ptr @.str.97
  br label %netdev_name.exit

netdev_name.exit:                                 ; preds = %lor.lhs.false.i, %dev_name.exit.netdev_name.exit_crit_edge
  %retval.0.i38 = phi ptr [ @.str.97, %dev_name.exit.netdev_name.exit_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  %reg_state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %12 = ptrtoint ptr %reg_state.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load45.i = load i8, ptr %reg_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %bf.load45.i)
  %13 = icmp ult i8 %bf.load45.i, 6
  br i1 %13, label %switch.lookup, label %land.end.i

land.end.i:                                       ; preds = %netdev_name.exit
  %.b46.i = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %.b46.i, label %land.end.i.netdev_reg_state.exit_crit_edge, label %if.then.i, !prof !1311

land.end.i.netdev_reg_state.exit_crit_edge:       ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_reg_state.exit

if.then.i:                                        ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %bf.cast21.i = zext i8 %bf.load45.i to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.104, ptr noundef nonnull %dev, i32 noundef %bf.cast21.i) #35
  br label %netdev_reg_state.exit

switch.lookup:                                    ; preds = %netdev_name.exit
  call void @__sanitizer_cov_trace_pc() #37
  %14 = sext i8 %bf.load45.i to i32
  %switch.gep = getelementptr inbounds [6 x ptr], ptr @switch.table.__netdev_printk, i32 0, i32 %14
  %15 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %15)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %netdev_reg_state.exit

netdev_reg_state.exit:                            ; preds = %switch.lookup, %if.then.i, %land.end.i.netdev_reg_state.exit_crit_edge
  %retval.0.i39 = phi ptr [ @.str.105, %if.then.i ], [ @.str.105, %land.end.i.netdev_reg_state.exit_crit_edge ], [ %switch.load, %switch.lookup ]
  %call12 = tail call i32 (i32, ptr, ptr, ...) @dev_printk_emit(i32 noundef %sub, ptr noundef nonnull %1, ptr noundef nonnull @.str.278, ptr noundef %call, ptr noundef %retval.0.i, ptr noundef %retval.0.i38, ptr noundef nonnull %retval.0.i39, ptr noundef %vaf) #41
  br label %if.end23

do.end.critedge:                                  ; preds = %land.lhs.true
  %16 = ptrtoint ptr %dev to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %dev, align 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.i40 = icmp eq i8 %17, 0
  br i1 %tobool.not.i40, label %do.end.critedge.netdev_name.exit46_crit_edge, label %lor.lhs.false.i44

do.end.critedge.netdev_name.exit46_crit_edge:     ; preds = %do.end.critedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name.exit46

lor.lhs.false.i44:                                ; preds = %do.end.critedge
  call void @__sanitizer_cov_trace_pc() #37
  %call.i41 = tail call ptr @strchr(ptr noundef nonnull %dev, i32 noundef 37) #35
  %tobool2.not.i42 = icmp eq ptr %call.i41, null
  %spec.select.i43 = select i1 %tobool2.not.i42, ptr %dev, ptr @.str.97
  br label %netdev_name.exit46

netdev_name.exit46:                               ; preds = %lor.lhs.false.i44, %do.end.critedge.netdev_name.exit46_crit_edge
  %retval.0.i45 = phi ptr [ @.str.97, %do.end.critedge.netdev_name.exit46_crit_edge ], [ %spec.select.i43, %lor.lhs.false.i44 ]
  %reg_state.i47 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 121
  %18 = ptrtoint ptr %reg_state.i47 to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load45.i48 = load i8, ptr %reg_state.i47, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %bf.load45.i48)
  %19 = icmp ult i8 %bf.load45.i48, 6
  br i1 %19, label %switch.lookup60, label %land.end.i55

land.end.i55:                                     ; preds = %netdev_name.exit46
  %.b46.i54 = load i1, ptr @netdev_reg_state.__already_done, align 1
  br i1 %.b46.i54, label %land.end.i55.netdev_reg_state.exit59_crit_edge, label %if.then.i57, !prof !1311

land.end.i55.netdev_reg_state.exit59_crit_edge:   ; preds = %land.end.i55
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_reg_state.exit59

if.then.i57:                                      ; preds = %land.end.i55
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_reg_state.__already_done, align 1
  %bf.cast21.i56 = zext i8 %bf.load45.i48 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 4983, i32 noundef 9, ptr noundef nonnull @.str.104, ptr noundef nonnull %dev, i32 noundef %bf.cast21.i56) #35
  br label %netdev_reg_state.exit59

switch.lookup60:                                  ; preds = %netdev_name.exit46
  call void @__sanitizer_cov_trace_pc() #37
  %20 = sext i8 %bf.load45.i48 to i32
  %switch.gep61 = getelementptr inbounds [6 x ptr], ptr @switch.table.__netdev_printk.292, i32 0, i32 %20
  %21 = ptrtoint ptr %switch.gep61 to i32
  call void @__asan_load4_noabort(i32 %21)
  %switch.load62 = load ptr, ptr %switch.gep61, align 4
  br label %netdev_reg_state.exit59

netdev_reg_state.exit59:                          ; preds = %switch.lookup60, %if.then.i57, %land.end.i55.netdev_reg_state.exit59_crit_edge
  %retval.0.i58 = phi ptr [ @.str.105, %if.then.i57 ], [ @.str.105, %land.end.i55.netdev_reg_state.exit59_crit_edge ], [ %switch.load62, %switch.lookup60 ]
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.279, ptr noundef %level, ptr noundef %retval.0.i45, ptr noundef nonnull %retval.0.i58, ptr noundef %vaf) #41
  br label %if.end23

do.end20:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.282, ptr noundef %level, ptr noundef %vaf) #41
  br label %if.end23

if.end23:                                         ; preds = %do.end20, %netdev_reg_state.exit59, %netdev_reg_state.exit
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #28

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_emerg(ptr noundef %dev, ptr noundef %fmt, ...) #9 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #35
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #35
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !1320
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.83, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #35
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_alert(ptr noundef %dev, ptr noundef %fmt, ...) #9 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #35
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #35
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !1320
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.84, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #35
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_crit(ptr noundef %dev, ptr noundef %fmt, ...) #9 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #35
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #35
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !1320
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.85, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #35
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_warn(ptr noundef %dev, ptr noundef %fmt, ...) #9 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #35
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #35
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !1320
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.86, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #35
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @netdev_notice(ptr noundef %dev, ptr noundef %fmt, ...) #9 align 64 {
entry:
  %vaf = alloca %struct.va_format, align 4
  %args = alloca %struct.__va_list, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %vaf) #35
  %0 = getelementptr inbounds %struct.va_format, ptr %vaf, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %args) #35
  %1 = ptrtoint ptr %args to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %args, align 4, !annotation !1320
  call void @llvm.va_start(ptr nonnull %args)
  %2 = ptrtoint ptr %vaf to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fmt, ptr %vaf, align 4
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %args, ptr %0, align 4
  call fastcc void @__netdev_printk(ptr noundef nonnull @.str.87, ptr noundef %dev, ptr noundef nonnull %vaf)
  call void @llvm.va_end(ptr nonnull %args)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %args) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %vaf) #35
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @net_dev_init() #9 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %.b = load i1, ptr @dev_boot_phase, align 4
  br i1 %.b, label %do.body4, label %do.end9, !prof !1310

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10969, 0\0A.popsection", ""() #35, !srcloc !1424
  unreachable

do.end9:                                          ; preds = %entry
  %call = tail call i32 @dev_proc_init() #41
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool10.not = icmp eq i32 %call, 0
  br i1 %tobool10.not, label %if.end12, label %do.end9.out_crit_edge

do.end9.out_crit_edge:                            ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end12:                                         ; preds = %do.end9
  %call13 = tail call i32 @netdev_kobject_init() #41
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.end12.out_crit_edge

if.end12.out_crit_edge:                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end16:                                         ; preds = %if.end12
  store volatile ptr @ptype_all, ptr @ptype_all, align 4
  store ptr @ptype_all, ptr getelementptr inbounds (%struct.list_head, ptr @ptype_all, i32 0, i32 1), align 4
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end16
  %i.0123 = phi i32 [ 0, %if.end16 ], [ %inc, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %i.0123
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %arrayidx, ptr %arrayidx, align 4
  %prev.i = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %i.0123, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %arrayidx, ptr %prev.i, align 4
  %inc = add nuw nsw i32 %i.0123, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.end:                                          ; preds = %for.body
  %call17 = tail call i32 @register_pernet_subsys(ptr noundef nonnull @netdev_net_ops) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %for.cond21.preheader, label %for.end.out_crit_edge

for.end.out_crit_edge:                            ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

for.cond21.preheader:                             ; preds = %for.end
  %call22124 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call22124, i32 %2)
  %cmp23125 = icmp ult i32 %call22124, %2
  br i1 %cmp23125, label %for.cond21.preheader.for.body24_crit_edge, label %for.cond21.preheader.for.end50_crit_edge

for.cond21.preheader.for.end50_crit_edge:         ; preds = %for.cond21.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end50

for.cond21.preheader.for.body24_crit_edge:        ; preds = %for.cond21.preheader
  br label %for.body24

for.body24:                                       ; preds = %for.body24.for.body24_crit_edge, %for.cond21.preheader.for.body24_crit_edge
  %call22126 = phi i32 [ %call22, %for.body24.for.body24_crit_edge ], [ %call22124, %for.cond21.preheader.for.body24_crit_edge ]
  %arrayidx29 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call22126
  %3 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %arrayidx29, align 4
  %add = add i32 %4, ptrtoint (ptr @flush_works to i32)
  %5 = inttoptr i32 %add to ptr
  %add38 = add i32 %4, ptrtoint (ptr @softnet_data to i32)
  %6 = inttoptr i32 %add38 to ptr
  tail call void @__init_work(ptr noundef %5, i32 noundef 0) #35
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -64, ptr %5, align 4
  %lockdep_map = getelementptr inbounds %struct.work_struct, ptr %5, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.284, ptr noundef nonnull @net_dev_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #35
  %entry40 = getelementptr inbounds %struct.work_struct, ptr %5, i32 0, i32 1
  %8 = ptrtoint ptr %entry40 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %entry40, ptr %entry40, align 4
  %prev.i114 = getelementptr inbounds %struct.work_struct, ptr %5, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %prev.i114 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %entry40, ptr %prev.i114, align 4
  %func = getelementptr inbounds %struct.work_struct, ptr %5, i32 0, i32 2
  %10 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @flush_backlog, ptr %func, align 4
  %input_pkt_queue = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 20
  %lock.i = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 20, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i, ptr noundef nonnull @.str.286, ptr noundef nonnull @skb_queue_head_init.__key, i16 noundef signext 3) #35
  %11 = ptrtoint ptr %input_pkt_queue to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %input_pkt_queue, ptr %input_pkt_queue, align 4
  %prev.i.i = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 20, i32 0, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %input_pkt_queue, ptr %prev.i.i, align 4
  %qlen.i.i = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 20, i32 1
  %13 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %qlen.i.i, align 4
  %process_queue = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 1
  %lock.i115 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 1, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i115, ptr noundef nonnull @.str.286, ptr noundef nonnull @skb_queue_head_init.__key, i16 noundef signext 3) #35
  %14 = ptrtoint ptr %process_queue to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %process_queue, ptr %process_queue, align 4
  %prev.i.i116 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 1, i32 0, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i.i116 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %process_queue, ptr %prev.i.i116, align 4
  %qlen.i.i117 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %qlen.i.i117 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %qlen.i.i117, align 4
  %xfrm_backlog = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 10
  %lock.i118 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 10, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i118, ptr noundef nonnull @.str.286, ptr noundef nonnull @skb_queue_head_init.__key, i16 noundef signext 3) #35
  %17 = ptrtoint ptr %xfrm_backlog to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %xfrm_backlog, ptr %xfrm_backlog, align 4
  %prev.i.i119 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 10, i32 0, i32 0, i32 1
  %18 = ptrtoint ptr %prev.i.i119 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %xfrm_backlog, ptr %prev.i.i119, align 4
  %qlen.i.i120 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 10, i32 1
  %19 = ptrtoint ptr %qlen.i.i120 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %qlen.i.i120, align 4
  %20 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %6, ptr %6, align 4
  %prev.i121 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i121 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %6, ptr %prev.i121, align 4
  %output_queue = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 7
  %output_queue_tailp = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 8
  %22 = ptrtoint ptr %output_queue_tailp to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %output_queue, ptr %output_queue_tailp, align 8
  %csd = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 15
  %23 = ptrtoint ptr %csd to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 0, ptr %csd, align 128
  %.compoundliteral44.sroa.2.0.csd.sroa_idx = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 15, i32 1
  %24 = ptrtoint ptr %.compoundliteral44.sroa.2.0.csd.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @rps_trigger_softirq, ptr %.compoundliteral44.sroa.2.0.csd.sroa_idx, align 8
  %.compoundliteral44.sroa.3.0.csd.sroa_idx = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 15, i32 2
  %25 = ptrtoint ptr %.compoundliteral44.sroa.3.0.csd.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %6, ptr %.compoundliteral44.sroa.3.0.csd.sroa_idx, align 4
  %cpu = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 17
  %26 = ptrtoint ptr %cpu to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %call22126, ptr %cpu, align 4
  %arrayidx.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %arrayidx.i, ptr %arrayidx.i, align 4
  %prev.i.i122 = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 0, i32 0, i32 1
  %28 = ptrtoint ptr %prev.i.i122 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %arrayidx.i, ptr %prev.i.i122, align 4
  %count.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 0, i32 1
  %29 = ptrtoint ptr %count.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %count.i, align 4
  %arrayidx.1.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 1
  %30 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %arrayidx.1.i, ptr %arrayidx.1.i, align 4
  %prev.i.1.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 1, i32 0, i32 1
  %31 = ptrtoint ptr %prev.i.1.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %arrayidx.1.i, ptr %prev.i.1.i, align 4
  %count.1.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 1, i32 1
  %32 = ptrtoint ptr %count.1.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %count.1.i, align 4
  %arrayidx.2.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 2
  %33 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %arrayidx.2.i, ptr %arrayidx.2.i, align 4
  %prev.i.2.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 2, i32 0, i32 1
  %34 = ptrtoint ptr %prev.i.2.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %arrayidx.2.i, ptr %prev.i.2.i, align 4
  %count.2.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 2, i32 1
  %35 = ptrtoint ptr %count.2.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %count.2.i, align 4
  %arrayidx.3.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 3
  %36 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %arrayidx.3.i, ptr %arrayidx.3.i, align 4
  %prev.i.3.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 3, i32 0, i32 1
  %37 = ptrtoint ptr %prev.i.3.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %arrayidx.3.i, ptr %prev.i.3.i, align 4
  %count.3.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 3, i32 1
  %38 = ptrtoint ptr %count.3.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %count.3.i, align 4
  %arrayidx.4.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 4
  %39 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %arrayidx.4.i, ptr %arrayidx.4.i, align 4
  %prev.i.4.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 4, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i.4.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %arrayidx.4.i, ptr %prev.i.4.i, align 4
  %count.4.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 4, i32 1
  %41 = ptrtoint ptr %count.4.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %count.4.i, align 4
  %arrayidx.5.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 5
  %42 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %arrayidx.5.i, ptr %arrayidx.5.i, align 4
  %prev.i.5.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 5, i32 0, i32 1
  %43 = ptrtoint ptr %prev.i.5.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %arrayidx.5.i, ptr %prev.i.5.i, align 4
  %count.5.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 5, i32 1
  %44 = ptrtoint ptr %count.5.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %count.5.i, align 4
  %arrayidx.6.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 6
  %45 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %arrayidx.6.i, ptr %arrayidx.6.i, align 4
  %prev.i.6.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 6, i32 0, i32 1
  %46 = ptrtoint ptr %prev.i.6.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %arrayidx.6.i, ptr %prev.i.6.i, align 4
  %count.6.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 6, i32 1
  %47 = ptrtoint ptr %count.6.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %count.6.i, align 4
  %arrayidx.7.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 7
  %48 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile ptr %arrayidx.7.i, ptr %arrayidx.7.i, align 4
  %prev.i.7.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 7, i32 0, i32 1
  %49 = ptrtoint ptr %prev.i.7.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %arrayidx.7.i, ptr %prev.i.7.i, align 4
  %count.7.i = getelementptr %struct.softnet_data, ptr %6, i32 0, i32 21, i32 8, i32 7, i32 1
  %50 = ptrtoint ptr %count.7.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %count.7.i, align 4
  %gro_bitmask.i = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 21, i32 4
  %51 = ptrtoint ptr %gro_bitmask.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %gro_bitmask.i, align 4
  %poll = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 21, i32 5
  %52 = ptrtoint ptr %poll to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr @process_backlog, ptr %poll, align 8
  %53 = load i32, ptr @weight_p, align 4
  %weight = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 21, i32 2
  %54 = ptrtoint ptr %weight to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %weight, align 4
  %call22 = tail call i32 @cpumask_next(i32 noundef %call22126, ptr noundef nonnull @__cpu_possible_mask) #39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %55 = load i32, ptr @nr_cpu_ids, align 4
  %cmp23 = icmp ult i32 %call22, %55
  br i1 %cmp23, label %for.body24.for.body24_crit_edge, label %for.body24.for.end50_crit_edge

for.body24.for.end50_crit_edge:                   ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end50

for.body24.for.body24_crit_edge:                  ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body24

for.end50:                                        ; preds = %for.body24.for.end50_crit_edge, %for.cond21.preheader.for.end50_crit_edge
  store i1 true, ptr @dev_boot_phase, align 4
  %call51 = tail call i32 @register_pernet_device(ptr noundef nonnull @loopback_net_ops) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %if.end54, label %for.end50.out_crit_edge

for.end50.out_crit_edge:                          ; preds = %for.end50
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end54:                                         ; preds = %for.end50
  %call55 = tail call i32 @register_pernet_device(ptr noundef nonnull @default_device_ops) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.end58, label %if.end54.out_crit_edge

if.end54.out_crit_edge:                           ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

if.end58:                                         ; preds = %if.end54
  tail call void @open_softirq(i32 noundef 2, ptr noundef nonnull @net_tx_action) #35
  tail call void @open_softirq(i32 noundef 3, ptr noundef nonnull @net_rx_action) #35
  %call.i = tail call i32 @__cpuhp_setup_state(i32 noundef 34, ptr noundef nonnull @.str.285, i1 noundef zeroext false, ptr noundef null, ptr noundef nonnull @dev_cpu_dead, i1 noundef zeroext false) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp60 = icmp slt i32 %call.i, 0
  br i1 %cmp60, label %do.end76, label %if.end58.out_crit_edge, !prof !1310

if.end58.out_crit_edge:                           ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #37
  br label %out

do.end76:                                         ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 11033, i32 noundef 9, ptr noundef null) #35
  br label %out

out:                                              ; preds = %do.end76, %if.end58.out_crit_edge, %if.end54.out_crit_edge, %for.end50.out_crit_edge, %for.end.out_crit_edge, %if.end12.out_crit_edge, %do.end9.out_crit_edge
  %rc.0 = phi i32 [ -12, %do.end9.out_crit_edge ], [ -12, %if.end12.out_crit_edge ], [ -12, %for.end.out_crit_edge ], [ -12, %for.end50.out_crit_edge ], [ -12, %if.end54.out_crit_edge ], [ 0, %do.end76 ], [ 0, %if.end58.out_crit_edge ]
  ret i32 %rc.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @full_name_hash(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #25

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @metadata_dst_alloc(i8 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dst_cache_init(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @metadata_dst_free(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dst_release(ptr noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr noundef %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @lock_acquire(ptr noundef %map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr noundef %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @lock_release(ptr noundef %map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #29

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_zeroed_page(i32 noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_zero_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #30

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #27

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_check(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @netpoll_poll_disable(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @netpoll_poll_enable(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_activate(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_deactivate_many(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @raw_notifier_call_chain(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #31

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @netstamp_clear(ptr nocapture noundef readnone %work) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @netstamp_needed_deferred, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1425
  tail call void @llvm.prefetch.p0(ptr nonnull @netstamp_needed_deferred, i32 1, i32 3, i32 1) #35
  %0 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr nonnull @netstamp_needed_deferred) #35, !srcloc !1426
  %asmresult.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1427
  %call.i.i2 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @netstamp_wanted, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1428
  tail call void @llvm.prefetch.p0(ptr nonnull @netstamp_wanted, i32 1, i32 3, i32 1) #35
  %1 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @netstamp_wanted, ptr nonnull @netstamp_wanted, i32 %asmresult.i.i, ptr nonnull elementtype(i32) @netstamp_wanted) #35, !srcloc !1429
  %asmresult.i.i.i = extractvalue { i32, i32 } %1, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1430
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp = icmp sgt i32 %asmresult.i.i.i, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @static_key_enable(ptr noundef nonnull @netstamp_needed_key) #35
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @static_key_disable(ptr noundef nonnull @netstamp_needed_key) #35
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_enable(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_disable(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_scrub_packet(ptr noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @msg_zerocopy_callback(ptr noundef, ptr noundef, i1 noundef zeroext) #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_ubufs(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @csum_partial(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_slow_dec_cpuslocked(ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @clean_xps_maps(ptr noundef %dev, i32 noundef %type, i16 noundef zeroext %offset, i16 noundef zeroext %count) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @xps_map_mutex, i32 0, i32 5), i32 noundef -1) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b47 = load i1, ptr @clean_xps_maps.__warned, align 1
  br i1 %.b47, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @clean_xps_maps.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2388, ptr noundef nonnull @.str.10) #35
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %arrayidx = getelementptr %struct.net_device, ptr %dev, i32 0, i32 110, i32 %type
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool5.not = icmp eq ptr %1, null
  br i1 %tobool5.not, label %do.end.cleanup_crit_edge, label %for.cond.preheader

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

for.cond.preheader:                               ; preds = %do.end
  %nr_ids = getelementptr inbounds %struct.xps_dev_maps, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nr_ids to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_ids, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp51.not = icmp eq i32 %3, 0
  br i1 %cmp51.not, label %for.cond.preheader.if.then13_crit_edge, label %for.body.lr.ph

for.cond.preheader.if.then13_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %num_tc1.i = getelementptr inbounds %struct.xps_dev_maps, ptr %1, i32 0, i32 2
  %conv2.i = zext i16 %count to i32
  %conv3.i = zext i16 %offset to i32
  %dec51.i = add nsw i32 %conv2.i, -1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %count)
  %tobool6.not2.i = icmp eq i16 %count, 0
  br label %for.body

for.body:                                         ; preds = %remove_xps_queue_cpu.exit.for.body_crit_edge, %for.body.lr.ph
  %j.053 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %remove_xps_queue_cpu.exit.for.body_crit_edge ]
  %active.0.off052 = phi i1 [ false, %for.body.lr.ph ], [ %or46, %remove_xps_queue_cpu.exit.for.body_crit_edge ]
  %4 = ptrtoint ptr %num_tc1.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %num_tc1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.not7.i = icmp eq i16 %5, 0
  br i1 %tobool.not7.i, label %for.body.remove_xps_queue_cpu.exit_crit_edge, label %for.body.lr.ph.i

for.body.remove_xps_queue_cpu.exit_crit_edge:     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %remove_xps_queue_cpu.exit

for.body.lr.ph.i:                                 ; preds = %for.body
  %conv.i = sext i16 %5 to i32
  %mul.i = mul i32 %j.053, %conv.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.end.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %dec10.in.i = phi i32 [ %conv.i, %for.body.lr.ph.i ], [ %dec10.i, %for.end.i.for.body.i_crit_edge ]
  %tci.09.i = phi i32 [ %mul.i, %for.body.lr.ph.i ], [ %inc14.i, %for.end.i.for.body.i_crit_edge ]
  %active.0.off08.i = phi i1 [ false, %for.body.lr.ph.i ], [ %tobool12.i, %for.end.i.for.body.i_crit_edge ]
  %dec10.i = add i32 %dec10.in.i, -1
  br i1 %tobool6.not2.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body7.i_crit_edge

for.body.i.for.body7.i_crit_edge:                 ; preds = %for.body.i
  br label %for.body7.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.cond4.i:                                      ; preds = %for.body7.i
  %inc.i = add nuw nsw i32 %j.03.i, 1
  %dec5.i = add nsw i32 %dec54.i, -1
  %tobool6.not.i = icmp eq i32 %dec54.i, 0
  br i1 %tobool6.not.i, label %for.cond4.i.for.end.i_crit_edge, label %for.cond4.i.for.body7.i_crit_edge

for.cond4.i.for.body7.i_crit_edge:                ; preds = %for.cond4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body7.i

for.cond4.i.for.end.i_crit_edge:                  ; preds = %for.cond4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.body7.i:                                      ; preds = %for.cond4.i.for.body7.i_crit_edge, %for.body.i.for.body7.i_crit_edge
  %dec54.i = phi i32 [ %dec5.i, %for.cond4.i.for.body7.i_crit_edge ], [ %dec51.i, %for.body.i.for.body7.i_crit_edge ]
  %j.03.i = phi i32 [ %inc.i, %for.cond4.i.for.body7.i_crit_edge ], [ %conv3.i, %for.body.i.for.body7.i_crit_edge ]
  %conv8.i = trunc i32 %j.03.i to i16
  %call.i48 = tail call fastcc zeroext i1 @remove_xps_queue(ptr noundef nonnull %1, ptr noundef null, i32 noundef %tci.09.i, i16 noundef zeroext %conv8.i) #35
  br i1 %call.i48, label %for.cond4.i, label %for.body7.i.for.end.i_crit_edge

for.body7.i.for.end.i_crit_edge:                  ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end.i

for.end.i:                                        ; preds = %for.body7.i.for.end.i_crit_edge, %for.cond4.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge
  %dec5.lcssa.i = phi i32 [ %dec51.i, %for.body.i.for.end.i_crit_edge ], [ -1, %for.cond4.i.for.end.i_crit_edge ], [ %dec54.i, %for.body7.i.for.end.i_crit_edge ]
  %dec5.lobit.i = lshr i32 %dec5.lcssa.i, 31
  %conv11.i = zext i1 %active.0.off08.i to i32
  %or.i = or i32 %dec5.lobit.i, %conv11.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %tobool12.i = icmp ne i32 %or.i, 0
  %inc14.i = add i32 %tci.09.i, 1
  %tobool.not.i = icmp eq i32 %dec10.i, 0
  br i1 %tobool.not.i, label %for.end.i.remove_xps_queue_cpu.exit_crit_edge, label %for.end.i.for.body.i_crit_edge

for.end.i.for.body.i_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

for.end.i.remove_xps_queue_cpu.exit_crit_edge:    ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %remove_xps_queue_cpu.exit

remove_xps_queue_cpu.exit:                        ; preds = %for.end.i.remove_xps_queue_cpu.exit_crit_edge, %for.body.remove_xps_queue_cpu.exit_crit_edge
  %active.0.off0.lcssa.i = phi i1 [ false, %for.body.remove_xps_queue_cpu.exit_crit_edge ], [ %tobool12.i, %for.end.i.remove_xps_queue_cpu.exit_crit_edge ]
  %or46 = or i1 %active.0.off052, %active.0.off0.lcssa.i
  %inc = add nuw i32 %j.053, 1
  %6 = ptrtoint ptr %nr_ids to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_ids, align 4
  %cmp = icmp ult i32 %inc, %7
  br i1 %cmp, label %remove_xps_queue_cpu.exit.for.body_crit_edge, label %for.end

remove_xps_queue_cpu.exit.for.body_crit_edge:     ; preds = %remove_xps_queue_cpu.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.end:                                          ; preds = %remove_xps_queue_cpu.exit
  br i1 %or46, label %for.end.cleanup_crit_edge, label %for.end.if.then13_crit_edge

for.end.if.then13_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then13

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then13:                                        ; preds = %for.end.if.then13_crit_edge, %for.cond.preheader.if.then13_crit_edge
  tail call void @static_key_slow_dec_cpuslocked(ptr noundef nonnull @xps_needed) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %type)
  %cmp.i = icmp eq i32 %type, 1
  br i1 %cmp.i, label %if.then.i, label %if.then13.reset_xps_maps.exit_crit_edge

if.then13.reset_xps_maps.exit_crit_edge:          ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  br label %reset_xps_maps.exit

if.then.i:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @static_key_slow_dec_cpuslocked(ptr noundef nonnull @xps_rxqs_needed) #35
  br label %reset_xps_maps.exit

reset_xps_maps.exit:                              ; preds = %if.then.i, %if.then13.reset_xps_maps.exit_crit_edge
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr null, ptr %arrayidx, align 4
  tail call void @kvfree_call_rcu(ptr noundef nonnull %1, ptr noundef null) #35
  br label %cleanup

cleanup:                                          ; preds = %reset_xps_maps.exit, %for.end.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @qdisc_reset(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #32

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_dump(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__pskb_pull_tail(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @skb_header_pointer(ptr noundef %skb, i32 noundef %offset, i32 noundef %len, ptr noundef %buffer) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %4 = add i32 %3, %offset
  %sub.i4 = sub i32 %1, %4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i4, i32 %len)
  %cmp.not.i = icmp slt i32 %sub.i4, %len
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i, !prof !1310

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data, align 4
  %add.ptr.i = getelementptr i8, ptr %6, i32 %offset
  br label %__skb_header_pointer.exit

if.end.i:                                         ; preds = %entry
  %tobool2.not.i = icmp eq ptr %skb, null
  br i1 %tobool2.not.i, label %if.end.i.__skb_header_pointer.exit_crit_edge, label %lor.lhs.false.i

if.end.i.__skb_header_pointer.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__skb_header_pointer.exit

lor.lhs.false.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  %call.i = tail call i32 @skb_copy_bits(ptr noundef nonnull %skb, i32 noundef %offset, ptr noundef %buffer, i32 noundef %len) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp3.i = icmp slt i32 %call.i, 0
  %spec.select.i = select i1 %cmp3.i, ptr null, ptr %buffer, !prof !1310
  br label %__skb_header_pointer.exit

__skb_header_pointer.exit:                        ; preds = %lor.lhs.false.i, %if.end.i.__skb_header_pointer.exit_crit_edge, %if.then.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.then.i ], [ null, %if.end.i.__skb_header_pointer.exit_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  ret ptr %retval.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_bits(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pskb_expand_head(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_net_dev_start_xmit(ptr noundef %skb, ptr noundef %dev) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_start_xmit, i32 0, i32 1), ptr blockaddress(@trace_net_dev_start_xmit, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1431
  %call42 = tail call i32 @__traceiter_net_dev_start_xmit(ptr noundef null, ptr noundef %skb, ptr noundef %dev) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1432
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_start_xmit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_start_xmit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_net_dev_start_xmit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_net_dev_start_xmit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 69, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_net_dev_xmit(ptr noundef %skb, i32 noundef %rc, ptr noundef %dev, i32 noundef %skb_len) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_xmit, i32 0, i32 1), ptr blockaddress(@trace_net_dev_xmit, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1433
  %call42 = tail call i32 @__traceiter_net_dev_xmit(ptr noundef null, ptr noundef %skb, i32 noundef %rc, ptr noundef %dev, i32 noundef %skb_len) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1434
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_xmit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_xmit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_net_dev_xmit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_net_dev_xmit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 96, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @cpu_online(i32 noundef %cpu) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %0, i32 %cpu)
  %cmp.not.i.i.i = icmp ugt i32 %0, %cpu
  br i1 %cmp.not.i.i.i, label %entry.cpumask_test_cpu.exit_crit_edge, label %land.rhs.i.i.i

entry.cpumask_test_cpu.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpumask_test_cpu.exit

land.rhs.i.i.i:                                   ; preds = %entry
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge:   ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpumask_test_cpu.exit

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, %entry.cpumask_test_cpu.exit_crit_edge
  %div3.i.i = lshr i32 %cpu, 5
  %arrayidx.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i
  %1 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %cpu, 31
  %3 = shl nuw i32 1, %and.i.i
  %4 = and i32 %2, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool = icmp ne i32 %4, 0
  ret i1 %tobool
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_net_dev_start_xmit(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_net_dev_xmit(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @validate_xmit_xfrm(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_push(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__get_xps_queue_idx(ptr nocapture noundef readonly %dev, ptr noundef %skb, ptr noundef %dev_maps, i32 noundef %tci) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %priority = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 6
  %0 = ptrtoint ptr %priority to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %priority, align 4
  %and.i = and i32 %1, 15
  %arrayidx.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 142, i32 %and.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %3 to i32
  %num_tc = getelementptr inbounds %struct.xps_dev_maps, ptr %dev_maps, i32 0, i32 2
  %4 = ptrtoint ptr %num_tc to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %num_tc, align 4
  %conv = sext i16 %5 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv)
  %cmp.not = icmp slt i32 %conv.i, %conv
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %nr_ids = getelementptr inbounds %struct.xps_dev_maps, ptr %dev_maps, i32 0, i32 1
  %6 = ptrtoint ptr %nr_ids to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %tci)
  %cmp2.not = icmp ugt i32 %7, %tci
  br i1 %cmp2.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %mul = mul i32 %conv, %tci
  %add = add i32 %mul, %conv.i
  %arrayidx = getelementptr %struct.xps_dev_maps, ptr %dev_maps, i32 0, i32 3, i32 %add
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %arrayidx, align 4
  %call7 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end.do.end15_crit_edge

if.end.do.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end15

land.lhs.true:                                    ; preds = %if.end
  %call8 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %land.lhs.true.do.end15_crit_edge, label %land.lhs.true10

land.lhs.true.do.end15_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end15

land.lhs.true10:                                  ; preds = %land.lhs.true
  %.b55 = load i1, ptr @__get_xps_queue_idx.__warned, align 1
  br i1 %.b55, label %land.lhs.true10.do.end15_crit_edge, label %if.then12

land.lhs.true10.do.end15_crit_edge:               ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end15

if.then12:                                        ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__get_xps_queue_idx.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 3879, ptr noundef nonnull @.str.11) #35
  br label %do.end15

do.end15:                                         ; preds = %if.then12, %land.lhs.true10.do.end15_crit_edge, %land.lhs.true.do.end15_crit_edge, %if.end.do.end15_crit_edge
  %tobool17.not = icmp eq ptr %9, null
  br i1 %tobool17.not, label %do.end15.cleanup_crit_edge, label %if.then18

do.end15.cleanup_crit_edge:                       ; preds = %do.end15
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then18:                                        ; preds = %do.end15
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp19 = icmp eq i32 %11, 1
  br i1 %cmp19, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #37
  %queues = getelementptr inbounds %struct.xps_map, ptr %9, i32 0, i32 3
  br label %if.end30

if.else:                                          ; preds = %if.then18
  %l4_hash.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %12 = ptrtoint ptr %l4_hash.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %bf.load.i = load i16, ptr %l4_hash.i, align 8
  %13 = and i16 %bf.load.i, 192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %if.then.i, label %if.else.skb_get_hash.exit_crit_edge

if.else.skb_get_hash.exit_crit_edge:              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_get_hash.exit

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__skb_get_hash(ptr noundef %skb) #35
  br label %skb_get_hash.exit

skb_get_hash.exit:                                ; preds = %if.then.i, %if.else.skb_get_hash.exit_crit_edge
  %hash.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %15 = ptrtoint ptr %hash.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %hash.i, align 4
  %17 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %9, align 4
  %conv.i56 = zext i32 %16 to i64
  %conv1.i = zext i32 %18 to i64
  %mul.i = mul nuw i64 %conv1.i, %conv.i56
  %shr.i = lshr i64 %mul.i, 32
  %conv2.i = trunc i64 %shr.i to i32
  %arrayidx28 = getelementptr %struct.xps_map, ptr %9, i32 0, i32 3, i32 %conv2.i
  br label %if.end30

if.end30:                                         ; preds = %skb_get_hash.exit, %if.then21
  %queue_index.0.in.in = phi ptr [ %queues, %if.then21 ], [ %arrayidx28, %skb_get_hash.exit ]
  %19 = ptrtoint ptr %queue_index.0.in.in to i32
  call void @__asan_load2_noabort(i32 %19)
  %queue_index.0.in = load i16, ptr %queue_index.0.in.in, align 2
  %queue_index.0 = zext i16 %queue_index.0.in to i32
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 105
  %20 = ptrtoint ptr %real_num_tx_queues to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %real_num_tx_queues, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %queue_index.0)
  %cmp31.not = icmp ugt i32 %21, %queue_index.0
  br i1 %cmp31.not, label %if.end30.cleanup_crit_edge, label %if.then35, !prof !1311

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then35:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

cleanup:                                          ; preds = %if.then35, %if.end30.cleanup_crit_edge, %do.end15.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %lor.lhs.false.cleanup_crit_edge ], [ -1, %entry.cleanup_crit_edge ], [ -1, %if.then35 ], [ %queue_index.0, %if.end30.cleanup_crit_edge ], [ -1, %do.end15.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__skb_get_hash(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__skb_tstamp_tx(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_net_dev_queue(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_queue, i32 0, i32 1), ptr blockaddress(@trace_net_dev_queue, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1435
  %call42 = tail call i32 @__traceiter_net_dev_queue(ptr noundef null, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1436
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_queue, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_net_dev_queue, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_net_dev_queue.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_net_dev_queue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 148, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nf_hook_slow(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcf_classify(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_do_redirect(ptr noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @bstats_update(ptr noundef %bstats, ptr nocapture noundef readonly %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %cb.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3
  %0 = ptrtoint ptr %cb.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cb.i.i, align 4
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %2 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %gso_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool.i.not = icmp eq i16 %5, 0
  br i1 %tobool.i.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %gso_segs = getelementptr inbounds %struct.skb_shared_info, ptr %3, i32 0, i32 5
  %6 = ptrtoint ptr %gso_segs to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %gso_segs, align 2
  %conv4 = zext i16 %7 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %conv4, %cond.true ], [ 1, %entry.cond.end_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %8 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i.i.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i.i.i, label %cond.end._bstats_update.exit_crit_edge, label %land.lhs.true.i.i.i

cond.end._bstats_update.exit_crit_edge:           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %_bstats_update.exit

land.lhs.true.i.i.i:                              ; preds = %cond.end
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %12, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1352
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %18, ptrtoint (ptr @lockdep_recursion to i32)
  %19 = inttoptr i32 %add.i.i.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1353
  %22 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i7.i.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i7.i.i.i to ptr
  %preempt_count.i.i8.i.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i8.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i8.i.i.i, align 4
  %sub.i.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i8.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool20.not.i.i.i = icmp eq i32 %21, 0
  br i1 %tobool20.not.i.i.i, label %land.rhs.i.i.i, label %land.lhs.true.i.i.i._bstats_update.exit_crit_edge

land.lhs.true.i.i.i._bstats_update.exit_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %_bstats_update.exit

land.rhs.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp.i.i.i = icmp eq i32 %29, 0
  br i1 %cmp.i.i.i, label %land.rhs22.i.i.i, label %land.rhs.i.i.i._bstats_update.exit_crit_edge

land.rhs.i.i.i._bstats_update.exit_crit_edge:     ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %_bstats_update.exit

land.rhs22.i.i.i:                                 ; preds = %land.rhs.i.i.i
  %30 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i9.i.i.i = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i9.i.i.i to ptr
  %preempt_count.i.i10.i.i.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i10.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i10.i.i.i, align 4
  %add.i11.i.i.i = add i32 %33, 1
  store volatile i32 %add.i11.i.i.i, ptr %preempt_count.i.i10.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1354
  %34 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx46.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %35
  %36 = ptrtoint ptr %arrayidx46.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx46.i.i.i, align 4
  %add47.i.i.i = add i32 %37, ptrtoint (ptr @hardirqs_enabled to i32)
  %38 = inttoptr i32 %add47.i.i.i to ptr
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %38, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1355
  %41 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i12.i.i.i = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i.i12.i.i.i to ptr
  %preempt_count.i.i13.i.i.i = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %preempt_count.i.i13.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %preempt_count.i.i13.i.i.i, align 4
  %sub.i14.i.i.i = add i32 %44, -1
  store volatile i32 %sub.i14.i.i.i, ptr %preempt_count.i.i13.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool54.not.i.i.i = icmp eq i32 %40, 0
  br i1 %tobool54.not.i.i.i, label %land.rhs22.i.i.i._bstats_update.exit_crit_edge, label %land.rhs58.i.i.i

land.rhs22.i.i.i._bstats_update.exit_crit_edge:   ; preds = %land.rhs22.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %_bstats_update.exit

land.rhs58.i.i.i:                                 ; preds = %land.rhs22.i.i.i
  %.b1.i.i.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i.i.i, label %land.rhs58.i.i.i._bstats_update.exit_crit_edge, label %if.then.i.i.i, !prof !1311

land.rhs58.i.i.i._bstats_update.exit_crit_edge:   ; preds = %land.rhs58.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %_bstats_update.exit

if.then.i.i.i:                                    ; preds = %land.rhs58.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.136, i32 noundef 271, i32 noundef 9, ptr noundef null) #35
  br label %_bstats_update.exit

_bstats_update.exit:                              ; preds = %if.then.i.i.i, %land.rhs58.i.i.i._bstats_update.exit_crit_edge, %land.rhs22.i.i.i._bstats_update.exit_crit_edge, %land.rhs.i.i.i._bstats_update.exit_crit_edge, %land.lhs.true.i.i.i._bstats_update.exit_crit_edge, %cond.end._bstats_update.exit_crit_edge
  %conv = zext i32 %1 to i64
  %syncp.i = getelementptr inbounds %struct.gnet_stats_basic_sync, ptr %bstats, i32 0, i32 2
  %45 = ptrtoint ptr %syncp.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %syncp.i, align 4
  %inc.i.i.i.i.i = add i32 %46, 1
  store i32 %inc.i.i.i.i.i, ptr %syncp.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1356
  %dep_map.i.i.i.i = getelementptr inbounds %struct.gnet_stats_basic_sync, ptr %bstats, i32 0, i32 2, i32 0, i32 1
  %47 = tail call ptr @llvm.returnaddress(i32 0) #35
  %48 = ptrtoint ptr %47 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %48) #35
  %49 = ptrtoint ptr %bstats to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %bstats, align 8
  %add.i.i = add i64 %50, %conv
  store i64 %add.i.i, ptr %bstats, align 8
  %packets2.i = getelementptr inbounds %struct.gnet_stats_basic_sync, ptr %bstats, i32 0, i32 1
  %conv.i7.i = zext i32 %cond to i64
  %51 = ptrtoint ptr %packets2.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %packets2.i, align 8
  %add.i8.i = add i64 %52, %conv.i7.i
  store i64 %add.i8.i, ptr %packets2.i, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i.i.i, i32 noundef %48) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1357
  %53 = ptrtoint ptr %syncp.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %syncp.i, align 4
  %inc.i.i.i.i = add i32 %54, 1
  store i32 %inc.i.i.i.i, ptr %syncp.i, align 4
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #33

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_net_dev_queue(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__qdisc_run(ptr noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @qdisc_run_end(ptr noundef %qdisc) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %flags = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 2
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = and i32 %1, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %seqlock = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 26
  tail call void @_raw_spin_unlock(ptr noundef %seqlock) #35
  %state = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 20
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool1.not = icmp eq i32 %4, 0
  br i1 %tobool1.not, label %if.then.if.end5_crit_edge, label %if.then4, !prof !1311

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end5

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__netif_schedule(ptr noundef %qdisc)
  br label %if.end5

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %state2 = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 21
  %5 = ptrtoint ptr %state2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %state2, align 4
  %and.i = and i32 %6, -2
  store i32 %and.i, ptr %state2, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4, %if.then.if.end5_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sch_direct_xmit(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @qdisc_run(ptr noundef %q) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %flags.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 2
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 8
  %and.i = and i32 %1, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %qdisc_run_begin.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %seqlock.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 26
  %call.i.i = tail call i32 @_raw_spin_trylock(ptr noundef %seqlock.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i, label %do.end.i, label %if.then.i.if.then_crit_edge

if.then.i.if.then_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

do.end.i:                                         ; preds = %if.then.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1350
  %state.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 20
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool6.not.i = icmp eq i32 %4, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %do.end.i.if.end_crit_edge

do.end.i.if.end_crit_edge:                        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.end8.i:                                        ; preds = %do.end.i
  tail call void @_set_bit(i32 noundef 2, ptr noundef %state.i) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1351
  %call.i25.i = tail call i32 @_raw_spin_trylock(ptr noundef %seqlock.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i25.i)
  %tobool16.i.not = icmp eq i32 %call.i25.i, 0
  br i1 %tobool16.i.not, label %if.end8.i.if.end_crit_edge, label %if.end8.i.if.then_crit_edge

if.end8.i.if.then_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

if.end8.i.if.end_crit_edge:                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

qdisc_run_begin.exit:                             ; preds = %entry
  %state2.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 21
  %5 = ptrtoint ptr %state2.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %state2.i, align 4
  %or.i.i = or i32 %6, 1
  store i32 %or.i.i, ptr %state2.i, align 4
  %and.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool19.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool19.not.i, label %qdisc_run_begin.exit.if.then_crit_edge, label %qdisc_run_begin.exit.if.end_crit_edge

qdisc_run_begin.exit.if.end_crit_edge:            ; preds = %qdisc_run_begin.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

qdisc_run_begin.exit.if.then_crit_edge:           ; preds = %qdisc_run_begin.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then

if.then:                                          ; preds = %qdisc_run_begin.exit.if.then_crit_edge, %if.end8.i.if.then_crit_edge, %if.then.i.if.then_crit_edge
  tail call void @__qdisc_run(ptr noundef %q) #35
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i, align 8
  %and.i4 = and i32 %8, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i4)
  %tobool.not.i5 = icmp eq i32 %and.i4, 0
  br i1 %tobool.not.i5, label %if.else.i, label %if.then.i9

if.then.i9:                                       ; preds = %if.then
  %seqlock.i6 = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 26
  tail call void @_raw_spin_unlock(ptr noundef %seqlock.i6) #35
  %state.i7 = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 20
  %9 = ptrtoint ptr %state.i7 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %state.i7, align 4
  %11 = and i32 %10, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool1.not.i8 = icmp eq i32 %11, 0
  br i1 %tobool1.not.i8, label %if.then.i9.if.end_crit_edge, label %if.then4.i, !prof !1311

if.then.i9.if.end_crit_edge:                      ; preds = %if.then.i9
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then4.i:                                       ; preds = %if.then.i9
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__netif_schedule(ptr noundef %q) #35
  br label %if.end

if.else.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %state2.i10 = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 21
  %12 = ptrtoint ptr %state2.i10 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %state2.i10, align 4
  %and.i.i11 = and i32 %13, -2
  store i32 %and.i.i11, ptr %state2.i10, align 4
  br label %if.end

if.end:                                           ; preds = %if.else.i, %if.then4.i, %if.then.i9.if.end_crit_edge, %qdisc_run_begin.exit.if.end_crit_edge, %if.end8.i.if.end_crit_edge, %do.end.i.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__qdisc_calculate_pkt_len(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_qdisc_enqueue(ptr noundef %qdisc, ptr noundef %txq, ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_qdisc_enqueue, i32 0, i32 1), ptr blockaddress(@trace_qdisc_enqueue, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1437
  %call42 = tail call i32 @__traceiter_qdisc_enqueue(ptr noundef null, ptr noundef %qdisc, ptr noundef %txq, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1438
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_qdisc_enqueue, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_qdisc_enqueue, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_qdisc_enqueue.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_qdisc_enqueue.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.137, i32 noundef 75, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_qdisc_enqueue(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_dispatcher_xdp_func(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_master_redirect(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__cant_migrate(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xdp_exception(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_warn_invalid_xdp_action(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_rx(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx, i32 0, i32 1), ptr blockaddress(@trace_netif_rx, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1439
  %call42 = tail call i32 @__traceiter_netif_rx(ptr noundef null, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1440
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_rx, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_rx.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_rx.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 162, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx_entry(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx_exit(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx_ni_entry(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_rx_ni_exit(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__netif_receive_skb_core(ptr nocapture noundef %pskb, i1 noundef zeroext %pfmemalloc, ptr nocapture noundef writeonly %ppt_prev) unnamed_addr #1 align 64 {
entry:
  %cl_res.i = alloca %struct.tcf_result, align 4
  %pt_prev = alloca ptr, align 4
  %skb = alloca ptr, align 4
  %ret = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pt_prev) #35
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb) #35
  %0 = ptrtoint ptr %pskb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pskb, align 4
  %2 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %1, ptr %skb, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ret) #35
  %3 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %ret, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @netstamp_needed_key, ptr blockaddress(@__netif_receive_skb_core, %if.then)) #35
          to label %if.end7 [label %if.then], !srcloc !1328

if.then:                                          ; preds = %entry
  %4 = load i32, ptr @netdev_tstamp_prequeue, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool4.not = icmp eq i32 %4, 0
  br i1 %tobool4.not, label %land.lhs.true, label %if.then.if.end7_crit_edge

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end7

land.lhs.true:                                    ; preds = %if.then
  %5 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %skb, align 4
  %7 = getelementptr inbounds %struct.sk_buff, ptr %6, i32 0, i32 2
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %9)
  %tobool5.not = icmp eq i64 %9, 0
  br i1 %tobool5.not, label %if.then6, label %land.lhs.true.if.end7_crit_edge

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end7

if.then6:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i387 = tail call i64 @ktime_get_with_offset(i32 noundef 0) #35
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %call.i.i387, ptr %7, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %land.lhs.true.if.end7_crit_edge, %if.then.if.end7_crit_edge, %entry
  %11 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %skb, align 4
  tail call fastcc void @trace_netif_receive_skb(ptr noundef %12)
  %13 = getelementptr inbounds %struct.anon.83, ptr %12, i32 0, i32 2
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 19
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 18
  %18 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %17 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %19 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = trunc i32 %sub.ptr.sub.i to i16
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 15, i32 0, i32 20
  %20 = ptrtoint ptr %network_header.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %conv.i, ptr %network_header.i, align 4
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 15, i32 0, i32 19
  %21 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %transport_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %22)
  %cmp.i.not = icmp eq i16 %22, -1
  br i1 %cmp.i.not, label %if.then9, label %if.end7.if.end10_crit_edge

if.end7.if.end10_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #37
  %23 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %conv.i, ptr %transport_header.i, align 2
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end7.if.end10_crit_edge
  %24 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %network_header.i, align 4
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 15, i32 0, i32 21
  %26 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %mac_header.i, align 2
  %sub.i = sub i16 %25, %27
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 8
  %28 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %sub.i, ptr %mac_len.i, align 4
  %29 = ptrtoint ptr %pt_prev to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %pt_prev, align 4
  %30 = getelementptr inbounds %struct.anon.181, ptr %cl_res.i, i32 0, i32 1
  br label %another_round.outer

another_round.outer:                              ; preds = %if.end268.another_round.outer_crit_edge, %if.end10
  %deliver_exact.0.off0.ph = phi i1 [ false, %if.end10 ], [ %deliver_exact.1.off0, %if.end268.another_round.outer_crit_edge ]
  br label %another_round

another_round:                                    ; preds = %another_round.backedge, %another_round.outer
  %31 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %skb, align 4
  %33 = getelementptr inbounds %struct.anon.83, ptr %32, i32 0, i32 2
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 8
  %ifindex = getelementptr inbounds %struct.net_device, ptr %35, i32 0, i32 17
  %36 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ifindex, align 4
  %skb_iif = getelementptr inbounds %struct.sk_buff, ptr %32, i32 0, i32 15, i32 0, i32 7
  %38 = ptrtoint ptr %skb_iif to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %skb_iif, align 8
  %39 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 3
  %41 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx, align 4
  %add = add i32 %44, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 2) to i32)
  %45 = inttoptr i32 %add to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %add20 = add i32 %47, 1
  store i32 %add20, ptr %45, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @generic_xdp_needed_key, ptr blockaddress(@__netif_receive_skb_core, %if.then36)) #35
          to label %if.end57 [label %if.then36], !srcloc !1328

if.then36:                                        ; preds = %another_round
  call void @migrate_disable() #35
  %48 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %skb, align 4
  %50 = getelementptr inbounds %struct.anon.83, ptr %49, i32 0, i32 2
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %50, align 8
  %xdp_prog = getelementptr inbounds %struct.net_device, ptr %52, i32 0, i32 90
  %53 = ptrtoint ptr %xdp_prog to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile ptr, ptr %xdp_prog, align 16
  %call42 = call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %land.lhs.true44, label %if.then36.do.end52_crit_edge

if.then36.do.end52_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end52

land.lhs.true44:                                  ; preds = %if.then36
  %call45 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %land.lhs.true44.do.end52_crit_edge, label %land.lhs.true47

land.lhs.true44.do.end52_crit_edge:               ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end52

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %.b379 = load i1, ptr @__netif_receive_skb_core.__warned, align 1
  br i1 %.b379, label %land.lhs.true47.do.end52_crit_edge, label %if.then49

land.lhs.true47.do.end52_crit_edge:               ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end52

if.then49:                                        ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_receive_skb_core.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5172, ptr noundef nonnull @.str.11) #35
  br label %do.end52

do.end52:                                         ; preds = %if.then49, %land.lhs.true47.do.end52_crit_edge, %land.lhs.true44.do.end52_crit_edge, %if.then36.do.end52_crit_edge
  %55 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %skb, align 4
  %call54 = call i32 @do_xdp_generic(ptr noundef %54, ptr noundef %56)
  call void @migrate_enable() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call54)
  %cmp.not = icmp eq i32 %call54, 2
  br i1 %cmp.not, label %do.end52.if.end57_crit_edge, label %cleanup

do.end52.if.end57_crit_edge:                      ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end57

cleanup:                                          ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #37
  %57 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 1, ptr %ret, align 4
  br label %cleanup330

if.end57:                                         ; preds = %do.end52.if.end57_crit_edge, %another_round
  %58 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %skb, align 4
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %59, i32 0, i32 15, i32 0, i32 18
  %60 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %protocol, align 8
  %62 = zext i16 %61 to i64
  call void @__sanitizer_cov_trace_switch(i64 %62, ptr @__sancov_gen_cov_switch_values.313)
  switch i16 %61, label %if.end57.if.end72_crit_edge [
    i16 -30552, label %if.end57.if.then59_crit_edge
    i16 -32512, label %if.end57.if.then59_crit_edge649
  ]

if.end57.if.then59_crit_edge649:                  ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then59

if.end57.if.then59_crit_edge:                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then59

if.end57.if.end72_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end72

if.then59:                                        ; preds = %if.end57.if.then59_crit_edge, %if.end57.if.then59_crit_edge649
  %call60 = call ptr @skb_vlan_untag(ptr noundef %59) #35
  %63 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %call60, ptr %skb, align 4
  %tobool61.not = icmp eq ptr %call60, null
  br i1 %tobool61.not, label %if.then59.cleanup330_crit_edge, label %if.then59.if.end72_crit_edge, !prof !1310

if.then59.if.end72_crit_edge:                     ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end72

if.then59.cleanup330_crit_edge:                   ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup330

if.end72:                                         ; preds = %if.then59.if.end72_crit_edge, %if.end57.if.end72_crit_edge
  %64 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %skb, align 4
  %tc_skip_classify.i = getelementptr inbounds %struct.sk_buff, ptr %65, i32 0, i32 15, i32 0, i32 3
  %66 = ptrtoint ptr %tc_skip_classify.i to i32
  call void @__asan_loadN_noabort(i32 %66, i32 4)
  %bf.load.i = load i32, ptr %tc_skip_classify.i, align 2
  %67 = and i32 %bf.load.i, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %tobool.not.i = icmp eq i32 %67, 0
  br i1 %tobool.not.i, label %if.end75, label %skb_skip_tc_classify.exit.thread

skb_skip_tc_classify.exit.thread:                 ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #37
  %bf.clear3.i = and i32 %bf.load.i, -262145
  %68 = ptrtoint ptr %tc_skip_classify.i to i32
  call void @__asan_storeN_noabort(i32 %68, i32 4)
  store i32 %bf.clear3.i, ptr %tc_skip_classify.i, align 2
  br label %skip_classify

if.end75:                                         ; preds = %if.end72
  br i1 %pfmemalloc, label %if.end75.skip_taps_crit_edge, label %do.body79

if.end75.skip_taps_crit_edge:                     ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #37
  br label %skip_taps

do.body79:                                        ; preds = %if.end75
  %call80 = call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80)
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %land.lhs.true82, label %do.body79.do.end90_crit_edge

do.body79.do.end90_crit_edge:                     ; preds = %do.body79
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end90

land.lhs.true82:                                  ; preds = %do.body79
  %call83 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call83)
  %tobool84.not = icmp eq i32 %call83, 0
  br i1 %tobool84.not, label %land.lhs.true82.do.end90_crit_edge, label %land.lhs.true85

land.lhs.true82.do.end90_crit_edge:               ; preds = %land.lhs.true82
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end90

land.lhs.true85:                                  ; preds = %land.lhs.true82
  %.b367378 = load i1, ptr @__netif_receive_skb_core.__warned.142, align 1
  br i1 %.b367378, label %land.lhs.true85.do.end90_crit_edge, label %if.then87

land.lhs.true85.do.end90_crit_edge:               ; preds = %land.lhs.true85
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end90

if.then87:                                        ; preds = %land.lhs.true85
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_receive_skb_core.__warned.142, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5193, ptr noundef nonnull @.str.4) #35
  br label %do.end90

do.end90:                                         ; preds = %if.then87, %land.lhs.true85.do.end90_crit_edge, %land.lhs.true82.do.end90_crit_edge, %do.body79.do.end90_crit_edge
  %69 = ptrtoint ptr %pt_prev to i32
  call void @__asan_load4_noabort(i32 %69)
  %pt_prev.promoted = load ptr, ptr %pt_prev, align 4
  %70 = ptrtoint ptr %ret to i32
  call void @__asan_load4_noabort(i32 %70)
  %ret.promoted = load i32, ptr %ret, align 4
  %.pn544 = load volatile ptr, ptr @ptype_all, align 4
  %cmp96.not546 = icmp eq ptr %.pn544, @ptype_all
  br i1 %cmp96.not546, label %do.end90.do.body109_crit_edge, label %do.end90.for.body_crit_edge

do.end90.for.body_crit_edge:                      ; preds = %do.end90
  br label %for.body

do.end90.do.body109_crit_edge:                    ; preds = %do.end90
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body109

for.body:                                         ; preds = %if.end100.for.body_crit_edge, %do.end90.for.body_crit_edge
  %.pn549 = phi ptr [ %.pn, %if.end100.for.body_crit_edge ], [ %.pn544, %do.end90.for.body_crit_edge ]
  %ptype.0541548 = phi ptr [ %ptype.0550, %if.end100.for.body_crit_edge ], [ %pt_prev.promoted, %do.end90.for.body_crit_edge ]
  %retval.0.i397543547 = phi i32 [ %retval.0.i397542, %if.end100.for.body_crit_edge ], [ %ret.promoted, %do.end90.for.body_crit_edge ]
  %ptype.0550 = getelementptr i8, ptr %.pn549, i32 -32
  %tobool97.not = icmp eq ptr %ptype.0541548, null
  br i1 %tobool97.not, label %for.body.if.end100_crit_edge, label %if.then98

for.body.if.end100_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end100

if.then98:                                        ; preds = %for.body
  %71 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %skb, align 4
  %tobool.not.i.i.i = icmp eq ptr %72, null
  br i1 %tobool.not.i.i.i, label %if.then98.if.end.i_crit_edge, label %land.rhs.i.i.i

if.then98.if.end.i_crit_edge:                     ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

land.rhs.i.i.i:                                   ; preds = %if.then98
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %72, i32 0, i32 17
  %73 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %end.i.i.i.i, align 4
  %75 = ptrtoint ptr %74 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %74, align 8
  %77 = and i8 %76, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool1.not.i.i.i = icmp eq i8 %77, 0
  br i1 %tobool1.not.i.i.i, label %land.rhs.i.i.i.if.end.i_crit_edge, label %skb_zcopy.exit.i.i

land.rhs.i.i.i.if.end.i_crit_edge:                ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

skb_zcopy.exit.i.i:                               ; preds = %land.rhs.i.i.i
  %destructor_arg.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %74, i32 0, i32 11
  %78 = ptrtoint ptr %destructor_arg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %destructor_arg.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %79, null
  br i1 %tobool.not.i.i, label %skb_zcopy.exit.i.i.if.end.i_crit_edge, label %skb_orphan_frags_rx.exit.i, !prof !1311

skb_zcopy.exit.i.i.if.end.i_crit_edge:            ; preds = %skb_zcopy.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

skb_orphan_frags_rx.exit.i:                       ; preds = %skb_zcopy.exit.i.i
  %call4.i.i = call i32 @skb_copy_ubufs(ptr noundef nonnull %72, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool.not.i396 = icmp eq i32 %call4.i.i, 0
  br i1 %tobool.not.i396, label %skb_orphan_frags_rx.exit.i.if.end.i_crit_edge, label %skb_orphan_frags_rx.exit.i.if.end100_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.i.if.end100_crit_edge:   ; preds = %skb_orphan_frags_rx.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end100

skb_orphan_frags_rx.exit.i.if.end.i_crit_edge:    ; preds = %skb_orphan_frags_rx.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.end.i:                                         ; preds = %skb_orphan_frags_rx.exit.i.if.end.i_crit_edge, %skb_zcopy.exit.i.i.if.end.i_crit_edge, %land.rhs.i.i.i.if.end.i_crit_edge, %if.then98.if.end.i_crit_edge
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %72, i32 0, i32 21
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %users.i, i32 1, i32 3, i32 1) #35
  %80 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i, ptr %users.i, i32 1, ptr elementtype(i32) %users.i) #35, !srcloc !1334
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %80, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !1310

if.end.i.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %81 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %81)
  %.not.i.i.i.i = icmp sgt i32 %81, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !1311

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %users.i, i32 noundef %.sink.i.i.i.i) #35
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %func.i = getelementptr inbounds %struct.packet_type, ptr %ptype.0541548, i32 0, i32 4
  %82 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %func.i, align 4
  %84 = getelementptr inbounds %struct.anon.83, ptr %72, i32 0, i32 2
  %85 = ptrtoint ptr %84 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %84, align 8
  %call3.i = call i32 %83(ptr noundef %72, ptr noundef %86, ptr noundef nonnull %ptype.0541548, ptr noundef %15) #35
  br label %if.end100

if.end100:                                        ; preds = %refcount_inc.exit.i, %skb_orphan_frags_rx.exit.i.if.end100_crit_edge, %for.body.if.end100_crit_edge
  %retval.0.i397542 = phi i32 [ %retval.0.i397543547, %for.body.if.end100_crit_edge ], [ %call3.i, %refcount_inc.exit.i ], [ -12, %skb_orphan_frags_rx.exit.i.if.end100_crit_edge ]
  %87 = ptrtoint ptr %.pn549 to i32
  call void @__asan_load4_noabort(i32 %87)
  %.pn = load volatile ptr, ptr %.pn549, align 4
  %cmp96.not = icmp eq ptr %.pn, @ptype_all
  br i1 %cmp96.not, label %if.end100.do.body109_crit_edge, label %if.end100.for.body_crit_edge

if.end100.for.body_crit_edge:                     ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

if.end100.do.body109_crit_edge:                   ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body109

do.body109:                                       ; preds = %if.end100.do.body109_crit_edge, %do.end90.do.body109_crit_edge
  %retval.0.i397543.lcssa = phi i32 [ %ret.promoted, %do.end90.do.body109_crit_edge ], [ %retval.0.i397542, %if.end100.do.body109_crit_edge ]
  %ptype.0541.lcssa = phi ptr [ %pt_prev.promoted, %do.end90.do.body109_crit_edge ], [ %ptype.0550, %if.end100.do.body109_crit_edge ]
  %88 = ptrtoint ptr %pt_prev to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %ptype.0541.lcssa, ptr %pt_prev, align 4
  %89 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %retval.0.i397543.lcssa, ptr %ret, align 4
  %call110 = call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call110)
  %tobool111.not = icmp eq i32 %call110, 0
  br i1 %tobool111.not, label %land.lhs.true112, label %do.body109.do.end120_crit_edge

do.body109.do.end120_crit_edge:                   ; preds = %do.body109
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end120

land.lhs.true112:                                 ; preds = %do.body109
  %call113 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call113)
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %land.lhs.true112.do.end120_crit_edge, label %land.lhs.true115

land.lhs.true112.do.end120_crit_edge:             ; preds = %land.lhs.true112
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end120

land.lhs.true115:                                 ; preds = %land.lhs.true112
  %.b368377 = load i1, ptr @__netif_receive_skb_core.__warned.143, align 1
  br i1 %.b368377, label %land.lhs.true115.do.end120_crit_edge, label %if.then117

land.lhs.true115.do.end120_crit_edge:             ; preds = %land.lhs.true115
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end120

if.then117:                                       ; preds = %land.lhs.true115
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_receive_skb_core.__warned.143, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5199, ptr noundef nonnull @.str.4) #35
  br label %do.end120

do.end120:                                        ; preds = %if.then117, %land.lhs.true115.do.end120_crit_edge, %land.lhs.true112.do.end120_crit_edge, %do.body109.do.end120_crit_edge
  %90 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %skb, align 4
  %92 = getelementptr inbounds %struct.anon.83, ptr %91, i32 0, i32 2
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %92, align 8
  %ptype_all = getelementptr inbounds %struct.net_device, ptr %94, i32 0, i32 11
  %95 = ptrtoint ptr %ptype_all to i32
  call void @__asan_load4_noabort(i32 %95)
  %.pn375552 = load volatile ptr, ptr %ptype_all, align 4
  %cmp132.not555 = icmp eq ptr %.pn375552, %ptype_all
  br i1 %cmp132.not555, label %do.end120.skip_taps_crit_edge, label %do.end120.for.body133_crit_edge

do.end120.for.body133_crit_edge:                  ; preds = %do.end120
  br label %for.body133

do.end120.skip_taps_crit_edge:                    ; preds = %do.end120
  call void @__sanitizer_cov_trace_pc() #37
  br label %skip_taps

for.body133:                                      ; preds = %if.end137.for.body133_crit_edge, %do.end120.for.body133_crit_edge
  %96 = phi ptr [ %117, %if.end137.for.body133_crit_edge ], [ %92, %do.end120.for.body133_crit_edge ]
  %.pn375556 = phi ptr [ %.pn375, %if.end137.for.body133_crit_edge ], [ %.pn375552, %do.end120.for.body133_crit_edge ]
  %97 = phi ptr [ %.pr, %if.end137.for.body133_crit_edge ], [ %91, %do.end120.for.body133_crit_edge ]
  %ptype.1557 = getelementptr i8, ptr %.pn375556, i32 -32
  %98 = ptrtoint ptr %pt_prev to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %pt_prev, align 4
  %tobool134.not = icmp eq ptr %99, null
  br i1 %tobool134.not, label %for.body133.if.end137_crit_edge, label %if.then135

for.body133.if.end137_crit_edge:                  ; preds = %for.body133
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end137

if.then135:                                       ; preds = %for.body133
  %tobool.not.i.i.i398 = icmp eq ptr %97, null
  br i1 %tobool.not.i.i.i398, label %if.then135.if.end.i412_crit_edge, label %land.rhs.i.i.i401

if.then135.if.end.i412_crit_edge:                 ; preds = %if.then135
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i412

land.rhs.i.i.i401:                                ; preds = %if.then135
  %end.i.i.i.i399 = getelementptr inbounds %struct.sk_buff, ptr %97, i32 0, i32 17
  %100 = ptrtoint ptr %end.i.i.i.i399 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %end.i.i.i.i399, align 4
  %102 = ptrtoint ptr %101 to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %101, align 8
  %104 = and i8 %103, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %104)
  %tobool1.not.i.i.i400 = icmp eq i8 %104, 0
  br i1 %tobool1.not.i.i.i400, label %land.rhs.i.i.i401.if.end.i412_crit_edge, label %skb_zcopy.exit.i.i404

land.rhs.i.i.i401.if.end.i412_crit_edge:          ; preds = %land.rhs.i.i.i401
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i412

skb_zcopy.exit.i.i404:                            ; preds = %land.rhs.i.i.i401
  %destructor_arg.i.i.i402 = getelementptr inbounds %struct.skb_shared_info, ptr %101, i32 0, i32 11
  %105 = ptrtoint ptr %destructor_arg.i.i.i402 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %destructor_arg.i.i.i402, align 4
  %tobool.not.i.i403 = icmp eq ptr %106, null
  br i1 %tobool.not.i.i403, label %skb_zcopy.exit.i.i404.if.end.i412_crit_edge, label %skb_orphan_frags_rx.exit.i407, !prof !1311

skb_zcopy.exit.i.i404.if.end.i412_crit_edge:      ; preds = %skb_zcopy.exit.i.i404
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i412

skb_orphan_frags_rx.exit.i407:                    ; preds = %skb_zcopy.exit.i.i404
  %call4.i.i405 = call i32 @skb_copy_ubufs(ptr noundef nonnull %97, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i405)
  %tobool.not.i406 = icmp eq i32 %call4.i.i405, 0
  br i1 %tobool.not.i406, label %skb_orphan_frags_rx.exit.i407.if.end.i412_crit_edge, label %skb_orphan_frags_rx.exit.i407.deliver_skb.exit422_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.i407.deliver_skb.exit422_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i407
  call void @__sanitizer_cov_trace_pc() #37
  br label %deliver_skb.exit422

skb_orphan_frags_rx.exit.i407.if.end.i412_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i407
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i412

if.end.i412:                                      ; preds = %skb_orphan_frags_rx.exit.i407.if.end.i412_crit_edge, %skb_zcopy.exit.i.i404.if.end.i412_crit_edge, %land.rhs.i.i.i401.if.end.i412_crit_edge, %if.then135.if.end.i412_crit_edge
  %users.i408 = getelementptr inbounds %struct.sk_buff, ptr %97, i32 0, i32 21
  %call.i.i.i.i.i.i409 = call zeroext i1 @__kasan_check_write(ptr noundef %users.i408, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %users.i408, i32 1, i32 3, i32 1) #35
  %107 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i408, ptr %users.i408, i32 1, ptr elementtype(i32) %users.i408) #35, !srcloc !1334
  %asmresult.i.i.i.i.i.i410 = extractvalue { i32, i32, i32 } %107, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i410)
  %tobool1.not.i.i.i.i411 = icmp eq i32 %asmresult.i.i.i.i.i.i410, 0
  br i1 %tobool1.not.i.i.i.i411, label %if.end.i412.if.end15.sink.split.i.i.i.i417_crit_edge, label %if.else.i.i.i.i415, !prof !1310

if.end.i412.if.end15.sink.split.i.i.i.i417_crit_edge: ; preds = %if.end.i412
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i417

if.else.i.i.i.i415:                               ; preds = %if.end.i412
  %add.i.i.i.i413 = add i32 %asmresult.i.i.i.i.i.i410, 1
  %108 = or i32 %add.i.i.i.i413, %asmresult.i.i.i.i.i.i410
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %108)
  %.not.i.i.i.i414 = icmp sgt i32 %108, -1
  br i1 %.not.i.i.i.i414, label %if.else.i.i.i.i415.refcount_inc.exit.i420_crit_edge, label %if.else.i.i.i.i415.if.end15.sink.split.i.i.i.i417_crit_edge, !prof !1311

if.else.i.i.i.i415.if.end15.sink.split.i.i.i.i417_crit_edge: ; preds = %if.else.i.i.i.i415
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i417

if.else.i.i.i.i415.refcount_inc.exit.i420_crit_edge: ; preds = %if.else.i.i.i.i415
  call void @__sanitizer_cov_trace_pc() #37
  br label %refcount_inc.exit.i420

if.end15.sink.split.i.i.i.i417:                   ; preds = %if.else.i.i.i.i415.if.end15.sink.split.i.i.i.i417_crit_edge, %if.end.i412.if.end15.sink.split.i.i.i.i417_crit_edge
  %.sink.i.i.i.i416 = phi i32 [ 2, %if.end.i412.if.end15.sink.split.i.i.i.i417_crit_edge ], [ 1, %if.else.i.i.i.i415.if.end15.sink.split.i.i.i.i417_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %users.i408, i32 noundef %.sink.i.i.i.i416) #35
  br label %refcount_inc.exit.i420

refcount_inc.exit.i420:                           ; preds = %if.end15.sink.split.i.i.i.i417, %if.else.i.i.i.i415.refcount_inc.exit.i420_crit_edge
  %func.i418 = getelementptr inbounds %struct.packet_type, ptr %99, i32 0, i32 4
  %109 = ptrtoint ptr %func.i418 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %func.i418, align 4
  %111 = ptrtoint ptr %96 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %96, align 8
  %call3.i419 = call i32 %110(ptr noundef %97, ptr noundef %112, ptr noundef nonnull %99, ptr noundef %15) #35
  br label %deliver_skb.exit422

deliver_skb.exit422:                              ; preds = %refcount_inc.exit.i420, %skb_orphan_frags_rx.exit.i407.deliver_skb.exit422_crit_edge
  %retval.0.i421 = phi i32 [ %call3.i419, %refcount_inc.exit.i420 ], [ -12, %skb_orphan_frags_rx.exit.i407.deliver_skb.exit422_crit_edge ]
  %113 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %retval.0.i421, ptr %ret, align 4
  br label %if.end137

if.end137:                                        ; preds = %deliver_skb.exit422, %for.body133.if.end137_crit_edge
  %114 = ptrtoint ptr %pt_prev to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %ptype.1557, ptr %pt_prev, align 4
  %115 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %115)
  %.pr = load ptr, ptr %skb, align 4
  %116 = ptrtoint ptr %.pn375556 to i32
  call void @__asan_load4_noabort(i32 %116)
  %.pn375 = load volatile ptr, ptr %.pn375556, align 4
  %117 = getelementptr inbounds %struct.anon.83, ptr %.pr, i32 0, i32 2
  %118 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %117, align 8
  %ptype_all131 = getelementptr inbounds %struct.net_device, ptr %119, i32 0, i32 11
  %cmp132.not = icmp eq ptr %.pn375, %ptype_all131
  br i1 %cmp132.not, label %if.end137.skip_taps_crit_edge, label %if.end137.for.body133_crit_edge

if.end137.for.body133_crit_edge:                  ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body133

if.end137.skip_taps_crit_edge:                    ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #37
  br label %skip_taps

skip_taps:                                        ; preds = %if.end137.skip_taps_crit_edge, %do.end120.skip_taps_crit_edge, %if.end75.skip_taps_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @ingress_needed_key, ptr blockaddress(@__netif_receive_skb_core, %if.then160)) #35
          to label %if.end175 [label %if.then160], !srcloc !1328

if.then160:                                       ; preds = %skip_taps
  %120 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %skb, align 4
  %nf_skip_egress.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 15, i32 0, i32 3
  %122 = ptrtoint ptr %nf_skip_egress.i to i32
  call void @__asan_loadN_noabort(i32 %122, i32 4)
  %bf.load.i423 = load i32, ptr %nf_skip_egress.i, align 2
  %bf.set.i = or i32 %bf.load.i423, 16384
  store i32 %bf.set.i, ptr %nf_skip_egress.i, align 2
  %123 = getelementptr inbounds %struct.anon.83, ptr %121, i32 0, i32 2
  %124 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %123, align 8
  %miniq_ingress.i = getelementptr inbounds %struct.net_device, ptr %125, i32 0, i32 96
  %126 = ptrtoint ptr %miniq_ingress.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load volatile ptr, ptr %miniq_ingress.i, align 8
  %call.i = call i32 @rcu_read_lock_bh_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i424 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i424, label %land.lhs.true.i, label %if.then160.do.end7.i_crit_edge

if.then160.do.end7.i_crit_edge:                   ; preds = %if.then160
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

land.lhs.true.i:                                  ; preds = %if.then160
  %call2.i = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.do.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b62.i = load i1, ptr @sch_handle_ingress.__warned, align 1
  br i1 %.b62.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i425

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

if.then.i425:                                     ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @sch_handle_ingress.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 4975, ptr noundef nonnull @.str.11) #35
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i425, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i.do.end7.i_crit_edge, %if.then160.do.end7.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cl_res.i) #35
  %128 = ptrtoint ptr %cl_res.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 -1, ptr %cl_res.i, align 4, !annotation !1320
  %129 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %129)
  store i32 -1, ptr %30, align 4, !annotation !1320
  %tobool9.not.i = icmp eq ptr %127, null
  br i1 %tobool9.not.i, label %do.end7.i.sch_handle_ingress.exit.thread_crit_edge, label %if.end11.i

do.end7.i.sch_handle_ingress.exit.thread_crit_edge: ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sch_handle_ingress.exit.thread

if.end11.i:                                       ; preds = %do.end7.i
  %130 = ptrtoint ptr %pt_prev to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %pt_prev, align 4
  %tobool12.not.i = icmp eq ptr %131, null
  br i1 %tobool12.not.i, label %if.end11.i.if.end15.i_crit_edge, label %if.then13.i

if.end11.i.if.end15.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.i

if.then13.i:                                      ; preds = %if.end11.i
  %tobool.not.i.i.i.i = icmp eq ptr %121, null
  br i1 %tobool.not.i.i.i.i, label %if.then13.i.if.end.i.i_crit_edge, label %land.rhs.i.i.i.i

if.then13.i.if.end.i.i_crit_edge:                 ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.then13.i
  %end.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 17
  %132 = ptrtoint ptr %end.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %end.i.i.i.i.i, align 4
  %134 = ptrtoint ptr %133 to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %133, align 8
  %136 = and i8 %135, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %136)
  %tobool1.not.i.i.i.i426 = icmp eq i8 %136, 0
  br i1 %tobool1.not.i.i.i.i426, label %land.rhs.i.i.i.i.if.end.i.i_crit_edge, label %skb_zcopy.exit.i.i.i

land.rhs.i.i.i.i.if.end.i.i_crit_edge:            ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

skb_zcopy.exit.i.i.i:                             ; preds = %land.rhs.i.i.i.i
  %destructor_arg.i.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %133, i32 0, i32 11
  %137 = ptrtoint ptr %destructor_arg.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %destructor_arg.i.i.i.i, align 4
  %tobool.not.i.i.i427 = icmp eq ptr %138, null
  br i1 %tobool.not.i.i.i427, label %skb_zcopy.exit.i.i.i.if.end.i.i_crit_edge, label %skb_orphan_frags_rx.exit.i.i, !prof !1311

skb_zcopy.exit.i.i.i.if.end.i.i_crit_edge:        ; preds = %skb_zcopy.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

skb_orphan_frags_rx.exit.i.i:                     ; preds = %skb_zcopy.exit.i.i.i
  %call4.i.i.i = call i32 @skb_copy_ubufs(ptr noundef nonnull %121, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %tobool.not.i.i428 = icmp eq i32 %call4.i.i.i, 0
  br i1 %tobool.not.i.i428, label %skb_orphan_frags_rx.exit.i.i.if.end.i.i_crit_edge, label %skb_orphan_frags_rx.exit.i.i.deliver_skb.exit.i_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.i.i.deliver_skb.exit.i_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %deliver_skb.exit.i

skb_orphan_frags_rx.exit.i.i.if.end.i.i_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %skb_orphan_frags_rx.exit.i.i.if.end.i.i_crit_edge, %skb_zcopy.exit.i.i.i.if.end.i.i_crit_edge, %land.rhs.i.i.i.i.if.end.i.i_crit_edge, %if.then13.i.if.end.i.i_crit_edge
  %users.i.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 21
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %users.i.i, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %users.i.i, i32 1, i32 3, i32 1) #35
  %139 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i.i, ptr %users.i.i, i32 1, ptr elementtype(i32) %users.i.i) #35, !srcloc !1334
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %139, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.end.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !1310

if.end.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.end.i.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %140 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %140)
  %.not.i.i.i.i.i = icmp sgt i32 %140, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.refcount_inc.exit.i.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !1311

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.refcount_inc.exit.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %refcount_inc.exit.i.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.end.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.end.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %users.i.i, i32 noundef %.sink.i.i.i.i.i) #35
  br label %refcount_inc.exit.i.i

refcount_inc.exit.i.i:                            ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.refcount_inc.exit.i.i_crit_edge
  %func.i.i = getelementptr inbounds %struct.packet_type, ptr %131, i32 0, i32 4
  %141 = ptrtoint ptr %func.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %func.i.i, align 4
  %143 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %123, align 8
  %call3.i.i = call i32 %142(ptr noundef %121, ptr noundef %144, ptr noundef nonnull %131, ptr noundef %15) #35
  br label %deliver_skb.exit.i

deliver_skb.exit.i:                               ; preds = %refcount_inc.exit.i.i, %skb_orphan_frags_rx.exit.i.i.deliver_skb.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %call3.i.i, %refcount_inc.exit.i.i ], [ -12, %skb_orphan_frags_rx.exit.i.i.deliver_skb.exit.i_crit_edge ]
  %145 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 %retval.0.i.i, ptr %ret, align 4
  %146 = ptrtoint ptr %pt_prev to i32
  call void @__asan_store4_noabort(i32 %146)
  store ptr null, ptr %pt_prev, align 4
  br label %if.end15.i

if.end15.i:                                       ; preds = %deliver_skb.exit.i, %if.end11.i.if.end15.i_crit_edge
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 6
  %147 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %len.i, align 4
  %cb.i.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 3
  %149 = ptrtoint ptr %cb.i.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 %148, ptr %cb.i.i, align 4
  %mru.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 3, i32 28
  %150 = ptrtoint ptr %mru.i to i32
  call void @__asan_store2_noabort(i32 %150)
  store i16 0, ptr %mru.i, align 4
  %post_ct.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 3, i32 30
  %151 = ptrtoint ptr %post_ct.i to i32
  call void @__asan_load1_noabort(i32 %151)
  %bf.load.i429 = load i8, ptr %post_ct.i, align 2
  %bf.clear.i430 = and i8 %bf.load.i429, 127
  store i8 %bf.clear.i430, ptr %post_ct.i, align 2
  %152 = ptrtoint ptr %nf_skip_egress.i to i32
  call void @__asan_loadN_noabort(i32 %152, i32 4)
  %bf.load19.i = load i32, ptr %nf_skip_egress.i, align 2
  %bf.set21.i = or i32 %bf.load19.i, 131072
  store i32 %bf.set21.i, ptr %nf_skip_egress.i, align 2
  %cpu_bstats.i.i = getelementptr inbounds %struct.mini_Qdisc, ptr %127, i32 0, i32 2
  %153 = ptrtoint ptr %cpu_bstats.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %cpu_bstats.i.i, align 4
  %155 = ptrtoint ptr %154 to i32
  %156 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %156, -16384
  %157 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %157, i32 0, i32 3
  %158 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %159
  %160 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %161, %155
  %162 = inttoptr i32 %add.i.i to ptr
  call fastcc void @bstats_update(ptr noundef %162, ptr noundef %121) #35
  %block.i = getelementptr inbounds %struct.mini_Qdisc, ptr %127, i32 0, i32 1
  %163 = ptrtoint ptr %block.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %block.i, align 4
  %165 = ptrtoint ptr %127 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %127, align 4
  %call22.i = call i32 @tcf_classify(ptr noundef %121, ptr noundef %164, ptr noundef %166, ptr noundef nonnull %cl_res.i, i1 noundef zeroext false) #35
  %167 = zext i32 %call22.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %167, ptr @__sancov_gen_cov_switch_values.314)
  switch i32 %call22.i, label %if.end15.i.sch_handle_ingress.exit.thread513_crit_edge [
    i32 0, label %if.end15.i.sw.bb.i_crit_edge
    i32 1, label %if.end15.i.sw.bb.i_crit_edge650
    i32 2, label %sw.bb23.i
    i32 4, label %if.end15.i.sw.bb24.i_crit_edge
    i32 5, label %if.end15.i.sw.bb24.i_crit_edge651
    i32 8, label %if.end15.i.sw.bb24.i_crit_edge652
    i32 7, label %sw.bb25.i
    i32 9, label %if.end15.i.sch_handle_ingress.exit.thread_crit_edge
  ]

if.end15.i.sch_handle_ingress.exit.thread_crit_edge: ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sch_handle_ingress.exit.thread

if.end15.i.sw.bb24.i_crit_edge652:                ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb24.i

if.end15.i.sw.bb24.i_crit_edge651:                ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb24.i

if.end15.i.sw.bb24.i_crit_edge:                   ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb24.i

if.end15.i.sw.bb.i_crit_edge650:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb.i

if.end15.i.sw.bb.i_crit_edge:                     ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb.i

if.end15.i.sch_handle_ingress.exit.thread513_crit_edge: ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sch_handle_ingress.exit.thread513

sw.bb.i:                                          ; preds = %if.end15.i.sw.bb.i_crit_edge, %if.end15.i.sw.bb.i_crit_edge650
  %168 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %30, align 4
  %conv.i431 = trunc i32 %169 to i16
  %tc_index.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 15, i32 0, i32 4
  %170 = ptrtoint ptr %tc_index.i to i32
  call void @__asan_store2_noabort(i32 %170)
  store i16 %conv.i431, ptr %tc_index.i, align 2
  br label %sch_handle_ingress.exit.thread513

sw.bb23.i:                                        ; preds = %if.end15.i
  %171 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %cpu_qstats.i.i = getelementptr inbounds %struct.mini_Qdisc, ptr %127, i32 0, i32 3
  %172 = ptrtoint ptr %cpu_qstats.i.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %cpu_qstats.i.i, align 4
  %drops.i.i = getelementptr inbounds %struct.gnet_stats_queue, ptr %173, i32 0, i32 2
  %174 = ptrtoint ptr %drops.i.i to i32
  %175 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i64.i = and i32 %175, -16384
  %176 = inttoptr i32 %and.i.i64.i to ptr
  %cpu.i65.i = getelementptr inbounds %struct.thread_info, ptr %176, i32 0, i32 3
  %177 = ptrtoint ptr %cpu.i65.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %cpu.i65.i, align 4
  %arrayidx.i66.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %178
  %179 = ptrtoint ptr %arrayidx.i66.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %arrayidx.i66.i, align 4
  %add.i67.i = add i32 %180, %174
  %181 = inttoptr i32 %add.i67.i to ptr
  %182 = ptrtoint ptr %181 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %181, align 4
  %add13.i.i = add i32 %183, 1
  store i32 %add13.i.i, ptr %181, align 4
  %184 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i.i = and i32 %184, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i68.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i68.i, label %if.then.i.i, label %sw.bb23.i.mini_qdisc_qstats_cpu_drop.exit.i_crit_edge, !prof !1310

sw.bb23.i.mini_qdisc_qstats_cpu_drop.exit.i_crit_edge: ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %mini_qdisc_qstats_cpu_drop.exit.i

if.then.i.i:                                      ; preds = %sw.bb23.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @warn_bogus_irq_restore() #35
  br label %mini_qdisc_qstats_cpu_drop.exit.i

mini_qdisc_qstats_cpu_drop.exit.i:                ; preds = %if.then.i.i, %sw.bb23.i.mini_qdisc_qstats_cpu_drop.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %171) #35, !srcloc !1315
  call void @kfree_skb_reason(ptr noundef %121, i32 noundef 0) #35
  br label %sch_handle_ingress.exit.thread

sw.bb24.i:                                        ; preds = %if.end15.i.sw.bb24.i_crit_edge, %if.end15.i.sw.bb24.i_crit_edge651, %if.end15.i.sw.bb24.i_crit_edge652
  call void @consume_skb(ptr noundef %121) #35
  br label %sch_handle_ingress.exit.thread

sw.bb25.i:                                        ; preds = %if.end15.i
  %mac_len.i432 = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 8
  %185 = ptrtoint ptr %mac_len.i432 to i32
  call void @__asan_load2_noabort(i32 %185)
  %186 = load i16, ptr %mac_len.i432, align 4
  %conv26.i = zext i16 %186 to i32
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 19
  %187 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %data.i.i, align 4
  %idx.neg.i.i = sub nsw i32 0, %conv26.i
  %add.ptr.i.i = getelementptr i8, ptr %188, i32 %idx.neg.i.i
  store ptr %add.ptr.i.i, ptr %data.i.i, align 4
  %189 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %len.i, align 4
  %add.i69.i = add i32 %190, %conv26.i
  store i32 %add.i69.i, ptr %len.i, align 4
  %call28.i = call i32 @skb_do_redirect(ptr noundef %121) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call28.i)
  %cmp.i433 = icmp eq i32 %call28.i, -11
  br i1 %cmp.i433, label %if.then30.i, label %sw.bb25.i.sch_handle_ingress.exit.thread_crit_edge

sw.bb25.i.sch_handle_ingress.exit.thread_crit_edge: ; preds = %sw.bb25.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sch_handle_ingress.exit.thread

if.then30.i:                                      ; preds = %sw.bb25.i
  %191 = ptrtoint ptr %mac_len.i432 to i32
  call void @__asan_load2_noabort(i32 %191)
  %192 = load i16, ptr %mac_len.i432, align 4
  %conv32.i = zext i16 %192 to i32
  %193 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %len.i, align 4
  %sub.i.i = sub i32 %194, %conv32.i
  store i32 %sub.i.i, ptr %len.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %121, i32 0, i32 7
  %195 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %196)
  %cmp.i.i = icmp ult i32 %sub.i.i, %196
  br i1 %cmp.i.i, label %do.body4.i.i, label %cleanup172, !prof !1310

do.body4.i.i:                                     ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #37
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #35, !srcloc !1344
  unreachable

sch_handle_ingress.exit.thread:                   ; preds = %sw.bb25.i.sch_handle_ingress.exit.thread_crit_edge, %sw.bb24.i, %mini_qdisc_qstats_cpu_drop.exit.i, %if.end15.i.sch_handle_ingress.exit.thread_crit_edge, %do.end7.i.sch_handle_ingress.exit.thread_crit_edge
  %retval.0.i434.ph = phi ptr [ null, %if.end15.i.sch_handle_ingress.exit.thread_crit_edge ], [ null, %sw.bb25.i.sch_handle_ingress.exit.thread_crit_edge ], [ %121, %do.end7.i.sch_handle_ingress.exit.thread_crit_edge ], [ null, %mini_qdisc_qstats_cpu_drop.exit.i ], [ null, %sw.bb24.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cl_res.i) #35
  br label %if.end164

sch_handle_ingress.exit.thread513:                ; preds = %sw.bb.i, %if.end15.i.sch_handle_ingress.exit.thread513_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cl_res.i) #35
  br label %if.end164

if.end164:                                        ; preds = %sch_handle_ingress.exit.thread513, %sch_handle_ingress.exit.thread
  %retval.0.i434511 = phi ptr [ %retval.0.i434.ph, %sch_handle_ingress.exit.thread ], [ %121, %sch_handle_ingress.exit.thread513 ]
  %197 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %197)
  store ptr %retval.0.i434511, ptr %skb, align 4
  %tobool165.not = icmp eq ptr %retval.0.i434511, null
  br i1 %tobool165.not, label %if.end164.cleanup330_crit_edge, label %if.end167

if.end164.cleanup330_crit_edge:                   ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup330

if.end167:                                        ; preds = %if.end164
  %nf_skip_egress.i435 = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i434511, i32 0, i32 15, i32 0, i32 3
  %198 = ptrtoint ptr %nf_skip_egress.i435 to i32
  call void @__asan_loadN_noabort(i32 %198, i32 4)
  %bf.load.i436 = load i32, ptr %nf_skip_egress.i435, align 2
  %bf.clear.i437 = and i32 %bf.load.i436, -16385
  store i32 %bf.clear.i437, ptr %nf_skip_egress.i435, align 2
  %call168 = call fastcc i32 @nf_ingress(ptr noundef nonnull %retval.0.i434511, ptr noundef nonnull %pt_prev, ptr noundef nonnull %ret, ptr noundef %15)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call168)
  %cmp169 = icmp slt i32 %call168, 0
  br i1 %cmp169, label %if.end167.cleanup330_crit_edge, label %if.end167.if.end175_crit_edge

if.end167.if.end175_crit_edge:                    ; preds = %if.end167
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end175

if.end167.cleanup330_crit_edge:                   ; preds = %if.end167
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup330

cleanup172:                                       ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #37
  %199 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i72.i = getelementptr i8, ptr %200, i32 %conv32.i
  store ptr %add.ptr.i72.i, ptr %data.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cl_res.i) #35
  %201 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %201)
  store ptr %121, ptr %skb, align 4
  br label %another_round.backedge

if.end175:                                        ; preds = %if.end167.if.end175_crit_edge, %skip_taps
  call void @__sanitizer_cov_trace_pc() #37
  %202 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %skb, align 4
  %redirected.i = getelementptr inbounds %struct.sk_buff, ptr %203, i32 0, i32 15, i32 0, i32 3
  %204 = ptrtoint ptr %redirected.i to i32
  call void @__asan_loadN_noabort(i32 %204, i32 4)
  %bf.load.i438 = load i32, ptr %redirected.i, align 2
  %bf.clear.i439 = and i32 %bf.load.i438, -65537
  store i32 %bf.clear.i439, ptr %redirected.i, align 2
  br label %skip_classify

skip_classify:                                    ; preds = %if.end175, %skb_skip_tc_classify.exit.thread
  %205 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %skb, align 4
  br i1 %pfmemalloc, label %land.lhs.true177, label %skip_classify.if.end180_crit_edge

skip_classify.if.end180_crit_edge:                ; preds = %skip_classify
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end180

land.lhs.true177:                                 ; preds = %skip_classify
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %206, i32 0, i32 15, i32 0, i32 18
  %207 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %207)
  %208 = load i16, ptr %protocol.i, align 8
  %209 = zext i16 %208 to i64
  call void @__sanitizer_cov_trace_switch(i64 %209, ptr @__sancov_gen_cov_switch_values.315)
  switch i16 %208, label %land.lhs.true177.drop_crit_edge [
    i16 2054, label %land.lhs.true177.if.end180_crit_edge
    i16 2048, label %land.lhs.true177.if.end180_crit_edge653
    i16 -31011, label %land.lhs.true177.if.end180_crit_edge654
    i16 -32512, label %land.lhs.true177.if.end180_crit_edge655
    i16 -30552, label %land.lhs.true177.if.end180_crit_edge656
  ]

land.lhs.true177.if.end180_crit_edge656:          ; preds = %land.lhs.true177
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end180

land.lhs.true177.if.end180_crit_edge655:          ; preds = %land.lhs.true177
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end180

land.lhs.true177.if.end180_crit_edge654:          ; preds = %land.lhs.true177
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end180

land.lhs.true177.if.end180_crit_edge653:          ; preds = %land.lhs.true177
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end180

land.lhs.true177.if.end180_crit_edge:             ; preds = %land.lhs.true177
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end180

land.lhs.true177.drop_crit_edge:                  ; preds = %land.lhs.true177
  call void @__sanitizer_cov_trace_pc() #37
  br label %drop

if.end180:                                        ; preds = %land.lhs.true177.if.end180_crit_edge, %land.lhs.true177.if.end180_crit_edge653, %land.lhs.true177.if.end180_crit_edge654, %land.lhs.true177.if.end180_crit_edge655, %land.lhs.true177.if.end180_crit_edge656, %skip_classify.if.end180_crit_edge
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %206, i32 0, i32 15, i32 0, i32 3
  %210 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %210, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load)
  %tobool181.not = icmp sgt i32 %bf.load, -1
  br i1 %tobool181.not, label %if.end180.if.end201_crit_edge, label %if.then182

if.end180.if.end201_crit_edge:                    ; preds = %if.end180
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end201

if.then182:                                       ; preds = %if.end180
  %211 = ptrtoint ptr %pt_prev to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %pt_prev, align 4
  %tobool183.not = icmp eq ptr %212, null
  br i1 %tobool183.not, label %if.then182.if.end186_crit_edge, label %if.then184

if.then182.if.end186_crit_edge:                   ; preds = %if.then182
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end186

if.then184:                                       ; preds = %if.then182
  %tobool.not.i.i.i441 = icmp eq ptr %206, null
  br i1 %tobool.not.i.i.i441, label %if.then184.if.end.i455_crit_edge, label %land.rhs.i.i.i444

if.then184.if.end.i455_crit_edge:                 ; preds = %if.then184
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i455

land.rhs.i.i.i444:                                ; preds = %if.then184
  %end.i.i.i.i442 = getelementptr inbounds %struct.sk_buff, ptr %206, i32 0, i32 17
  %213 = ptrtoint ptr %end.i.i.i.i442 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %end.i.i.i.i442, align 4
  %215 = ptrtoint ptr %214 to i32
  call void @__asan_load1_noabort(i32 %215)
  %216 = load i8, ptr %214, align 8
  %217 = and i8 %216, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %217)
  %tobool1.not.i.i.i443 = icmp eq i8 %217, 0
  br i1 %tobool1.not.i.i.i443, label %land.rhs.i.i.i444.if.end.i455_crit_edge, label %skb_zcopy.exit.i.i447

land.rhs.i.i.i444.if.end.i455_crit_edge:          ; preds = %land.rhs.i.i.i444
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i455

skb_zcopy.exit.i.i447:                            ; preds = %land.rhs.i.i.i444
  %destructor_arg.i.i.i445 = getelementptr inbounds %struct.skb_shared_info, ptr %214, i32 0, i32 11
  %218 = ptrtoint ptr %destructor_arg.i.i.i445 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %destructor_arg.i.i.i445, align 4
  %tobool.not.i.i446 = icmp eq ptr %219, null
  br i1 %tobool.not.i.i446, label %skb_zcopy.exit.i.i447.if.end.i455_crit_edge, label %skb_orphan_frags_rx.exit.i450, !prof !1311

skb_zcopy.exit.i.i447.if.end.i455_crit_edge:      ; preds = %skb_zcopy.exit.i.i447
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i455

skb_orphan_frags_rx.exit.i450:                    ; preds = %skb_zcopy.exit.i.i447
  %call4.i.i448 = call i32 @skb_copy_ubufs(ptr noundef nonnull %206, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i448)
  %tobool.not.i449 = icmp eq i32 %call4.i.i448, 0
  br i1 %tobool.not.i449, label %skb_orphan_frags_rx.exit.i450.if.end.i455_crit_edge, label %skb_orphan_frags_rx.exit.i450.deliver_skb.exit465_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.i450.deliver_skb.exit465_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i450
  call void @__sanitizer_cov_trace_pc() #37
  br label %deliver_skb.exit465

skb_orphan_frags_rx.exit.i450.if.end.i455_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i450
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i455

if.end.i455:                                      ; preds = %skb_orphan_frags_rx.exit.i450.if.end.i455_crit_edge, %skb_zcopy.exit.i.i447.if.end.i455_crit_edge, %land.rhs.i.i.i444.if.end.i455_crit_edge, %if.then184.if.end.i455_crit_edge
  %users.i451 = getelementptr inbounds %struct.sk_buff, ptr %206, i32 0, i32 21
  %call.i.i.i.i.i.i452 = call zeroext i1 @__kasan_check_write(ptr noundef %users.i451, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %users.i451, i32 1, i32 3, i32 1) #35
  %220 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i451, ptr %users.i451, i32 1, ptr elementtype(i32) %users.i451) #35, !srcloc !1334
  %asmresult.i.i.i.i.i.i453 = extractvalue { i32, i32, i32 } %220, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i453)
  %tobool1.not.i.i.i.i454 = icmp eq i32 %asmresult.i.i.i.i.i.i453, 0
  br i1 %tobool1.not.i.i.i.i454, label %if.end.i455.if.end15.sink.split.i.i.i.i460_crit_edge, label %if.else.i.i.i.i458, !prof !1310

if.end.i455.if.end15.sink.split.i.i.i.i460_crit_edge: ; preds = %if.end.i455
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i460

if.else.i.i.i.i458:                               ; preds = %if.end.i455
  %add.i.i.i.i456 = add i32 %asmresult.i.i.i.i.i.i453, 1
  %221 = or i32 %add.i.i.i.i456, %asmresult.i.i.i.i.i.i453
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %221)
  %.not.i.i.i.i457 = icmp sgt i32 %221, -1
  br i1 %.not.i.i.i.i457, label %if.else.i.i.i.i458.refcount_inc.exit.i463_crit_edge, label %if.else.i.i.i.i458.if.end15.sink.split.i.i.i.i460_crit_edge, !prof !1311

if.else.i.i.i.i458.if.end15.sink.split.i.i.i.i460_crit_edge: ; preds = %if.else.i.i.i.i458
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i460

if.else.i.i.i.i458.refcount_inc.exit.i463_crit_edge: ; preds = %if.else.i.i.i.i458
  call void @__sanitizer_cov_trace_pc() #37
  br label %refcount_inc.exit.i463

if.end15.sink.split.i.i.i.i460:                   ; preds = %if.else.i.i.i.i458.if.end15.sink.split.i.i.i.i460_crit_edge, %if.end.i455.if.end15.sink.split.i.i.i.i460_crit_edge
  %.sink.i.i.i.i459 = phi i32 [ 2, %if.end.i455.if.end15.sink.split.i.i.i.i460_crit_edge ], [ 1, %if.else.i.i.i.i458.if.end15.sink.split.i.i.i.i460_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %users.i451, i32 noundef %.sink.i.i.i.i459) #35
  br label %refcount_inc.exit.i463

refcount_inc.exit.i463:                           ; preds = %if.end15.sink.split.i.i.i.i460, %if.else.i.i.i.i458.refcount_inc.exit.i463_crit_edge
  %func.i461 = getelementptr inbounds %struct.packet_type, ptr %212, i32 0, i32 4
  %222 = ptrtoint ptr %func.i461 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %func.i461, align 4
  %224 = getelementptr inbounds %struct.anon.83, ptr %206, i32 0, i32 2
  %225 = ptrtoint ptr %224 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %224, align 8
  %call3.i462 = call i32 %223(ptr noundef %206, ptr noundef %226, ptr noundef nonnull %212, ptr noundef %15) #35
  br label %deliver_skb.exit465

deliver_skb.exit465:                              ; preds = %refcount_inc.exit.i463, %skb_orphan_frags_rx.exit.i450.deliver_skb.exit465_crit_edge
  %retval.0.i464 = phi i32 [ %call3.i462, %refcount_inc.exit.i463 ], [ -12, %skb_orphan_frags_rx.exit.i450.deliver_skb.exit465_crit_edge ]
  %227 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %227)
  store i32 %retval.0.i464, ptr %ret, align 4
  %228 = ptrtoint ptr %pt_prev to i32
  call void @__asan_store4_noabort(i32 %228)
  store ptr null, ptr %pt_prev, align 4
  br label %if.end186

if.end186:                                        ; preds = %deliver_skb.exit465, %if.then182.if.end186_crit_edge
  %call187 = call zeroext i1 @vlan_do_receive(ptr noundef nonnull %skb) #35
  br i1 %call187, label %if.end186.another_round.backedge_crit_edge, label %if.else

if.end186.another_round.backedge_crit_edge:       ; preds = %if.end186
  call void @__sanitizer_cov_trace_pc() #37
  br label %another_round.backedge

another_round.backedge:                           ; preds = %if.end225.another_round.backedge_crit_edge, %if.end186.another_round.backedge_crit_edge, %cleanup172
  br label %another_round

if.else:                                          ; preds = %if.end186
  %229 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %skb, align 4
  %tobool189.not = icmp eq ptr %230, null
  br i1 %tobool189.not, label %if.else.cleanup330_crit_edge, label %if.else.if.end201_crit_edge, !prof !1310

if.else.if.end201_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end201

if.else.cleanup330_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup330

if.end201:                                        ; preds = %if.else.if.end201_crit_edge, %if.end180.if.end201_crit_edge
  %231 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %skb, align 4
  %233 = getelementptr inbounds %struct.anon.83, ptr %232, i32 0, i32 2
  %234 = ptrtoint ptr %233 to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load ptr, ptr %233, align 8
  %rx_handler206 = getelementptr inbounds %struct.net_device, ptr %235, i32 0, i32 94
  %236 = ptrtoint ptr %rx_handler206 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load volatile ptr, ptr %rx_handler206, align 32
  %call208 = call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call208)
  %tobool209.not = icmp eq i32 %call208, 0
  br i1 %tobool209.not, label %land.lhs.true210, label %if.end201.do.end218_crit_edge

if.end201.do.end218_crit_edge:                    ; preds = %if.end201
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end218

land.lhs.true210:                                 ; preds = %if.end201
  %call211 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call211)
  %tobool212.not = icmp eq i32 %call211, 0
  br i1 %tobool212.not, label %land.lhs.true210.do.end218_crit_edge, label %land.lhs.true213

land.lhs.true210.do.end218_crit_edge:             ; preds = %land.lhs.true210
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end218

land.lhs.true213:                                 ; preds = %land.lhs.true210
  %.b369376 = load i1, ptr @__netif_receive_skb_core.__warned.144, align 1
  br i1 %.b369376, label %land.lhs.true213.do.end218_crit_edge, label %if.then215

land.lhs.true213.do.end218_crit_edge:             ; preds = %land.lhs.true213
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end218

if.then215:                                       ; preds = %land.lhs.true213
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__netif_receive_skb_core.__warned.144, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5239, ptr noundef nonnull @.str.11) #35
  br label %do.end218

do.end218:                                        ; preds = %if.then215, %land.lhs.true213.do.end218_crit_edge, %land.lhs.true210.do.end218_crit_edge, %if.end201.do.end218_crit_edge
  %tobool220.not = icmp eq ptr %237, null
  br i1 %tobool220.not, label %do.end218.if.end235.loopexit_crit_edge, label %if.then221

do.end218.if.end235.loopexit_crit_edge:           ; preds = %do.end218
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end235.loopexit

if.then221:                                       ; preds = %do.end218
  %238 = ptrtoint ptr %pt_prev to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load ptr, ptr %pt_prev, align 4
  %tobool222.not = icmp eq ptr %239, null
  br i1 %tobool222.not, label %if.then221.if.end225_crit_edge, label %if.then223

if.then221.if.end225_crit_edge:                   ; preds = %if.then221
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end225

if.then223:                                       ; preds = %if.then221
  %240 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %skb, align 4
  %tobool.not.i.i.i466 = icmp eq ptr %241, null
  br i1 %tobool.not.i.i.i466, label %if.then223.if.end.i480_crit_edge, label %land.rhs.i.i.i469

if.then223.if.end.i480_crit_edge:                 ; preds = %if.then223
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i480

land.rhs.i.i.i469:                                ; preds = %if.then223
  %end.i.i.i.i467 = getelementptr inbounds %struct.sk_buff, ptr %241, i32 0, i32 17
  %242 = ptrtoint ptr %end.i.i.i.i467 to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %end.i.i.i.i467, align 4
  %244 = ptrtoint ptr %243 to i32
  call void @__asan_load1_noabort(i32 %244)
  %245 = load i8, ptr %243, align 8
  %246 = and i8 %245, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %246)
  %tobool1.not.i.i.i468 = icmp eq i8 %246, 0
  br i1 %tobool1.not.i.i.i468, label %land.rhs.i.i.i469.if.end.i480_crit_edge, label %skb_zcopy.exit.i.i472

land.rhs.i.i.i469.if.end.i480_crit_edge:          ; preds = %land.rhs.i.i.i469
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i480

skb_zcopy.exit.i.i472:                            ; preds = %land.rhs.i.i.i469
  %destructor_arg.i.i.i470 = getelementptr inbounds %struct.skb_shared_info, ptr %243, i32 0, i32 11
  %247 = ptrtoint ptr %destructor_arg.i.i.i470 to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %destructor_arg.i.i.i470, align 4
  %tobool.not.i.i471 = icmp eq ptr %248, null
  br i1 %tobool.not.i.i471, label %skb_zcopy.exit.i.i472.if.end.i480_crit_edge, label %skb_orphan_frags_rx.exit.i475, !prof !1311

skb_zcopy.exit.i.i472.if.end.i480_crit_edge:      ; preds = %skb_zcopy.exit.i.i472
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i480

skb_orphan_frags_rx.exit.i475:                    ; preds = %skb_zcopy.exit.i.i472
  %call4.i.i473 = call i32 @skb_copy_ubufs(ptr noundef nonnull %241, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i473)
  %tobool.not.i474 = icmp eq i32 %call4.i.i473, 0
  br i1 %tobool.not.i474, label %skb_orphan_frags_rx.exit.i475.if.end.i480_crit_edge, label %skb_orphan_frags_rx.exit.i475.deliver_skb.exit490_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.i475.deliver_skb.exit490_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i475
  call void @__sanitizer_cov_trace_pc() #37
  br label %deliver_skb.exit490

skb_orphan_frags_rx.exit.i475.if.end.i480_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i475
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i480

if.end.i480:                                      ; preds = %skb_orphan_frags_rx.exit.i475.if.end.i480_crit_edge, %skb_zcopy.exit.i.i472.if.end.i480_crit_edge, %land.rhs.i.i.i469.if.end.i480_crit_edge, %if.then223.if.end.i480_crit_edge
  %users.i476 = getelementptr inbounds %struct.sk_buff, ptr %241, i32 0, i32 21
  %call.i.i.i.i.i.i477 = call zeroext i1 @__kasan_check_write(ptr noundef %users.i476, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %users.i476, i32 1, i32 3, i32 1) #35
  %249 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i476, ptr %users.i476, i32 1, ptr elementtype(i32) %users.i476) #35, !srcloc !1334
  %asmresult.i.i.i.i.i.i478 = extractvalue { i32, i32, i32 } %249, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i478)
  %tobool1.not.i.i.i.i479 = icmp eq i32 %asmresult.i.i.i.i.i.i478, 0
  br i1 %tobool1.not.i.i.i.i479, label %if.end.i480.if.end15.sink.split.i.i.i.i485_crit_edge, label %if.else.i.i.i.i483, !prof !1310

if.end.i480.if.end15.sink.split.i.i.i.i485_crit_edge: ; preds = %if.end.i480
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i485

if.else.i.i.i.i483:                               ; preds = %if.end.i480
  %add.i.i.i.i481 = add i32 %asmresult.i.i.i.i.i.i478, 1
  %250 = or i32 %add.i.i.i.i481, %asmresult.i.i.i.i.i.i478
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %250)
  %.not.i.i.i.i482 = icmp sgt i32 %250, -1
  br i1 %.not.i.i.i.i482, label %if.else.i.i.i.i483.refcount_inc.exit.i488_crit_edge, label %if.else.i.i.i.i483.if.end15.sink.split.i.i.i.i485_crit_edge, !prof !1311

if.else.i.i.i.i483.if.end15.sink.split.i.i.i.i485_crit_edge: ; preds = %if.else.i.i.i.i483
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i485

if.else.i.i.i.i483.refcount_inc.exit.i488_crit_edge: ; preds = %if.else.i.i.i.i483
  call void @__sanitizer_cov_trace_pc() #37
  br label %refcount_inc.exit.i488

if.end15.sink.split.i.i.i.i485:                   ; preds = %if.else.i.i.i.i483.if.end15.sink.split.i.i.i.i485_crit_edge, %if.end.i480.if.end15.sink.split.i.i.i.i485_crit_edge
  %.sink.i.i.i.i484 = phi i32 [ 2, %if.end.i480.if.end15.sink.split.i.i.i.i485_crit_edge ], [ 1, %if.else.i.i.i.i483.if.end15.sink.split.i.i.i.i485_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %users.i476, i32 noundef %.sink.i.i.i.i484) #35
  br label %refcount_inc.exit.i488

refcount_inc.exit.i488:                           ; preds = %if.end15.sink.split.i.i.i.i485, %if.else.i.i.i.i483.refcount_inc.exit.i488_crit_edge
  %func.i486 = getelementptr inbounds %struct.packet_type, ptr %239, i32 0, i32 4
  %251 = ptrtoint ptr %func.i486 to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load ptr, ptr %func.i486, align 4
  %253 = getelementptr inbounds %struct.anon.83, ptr %241, i32 0, i32 2
  %254 = ptrtoint ptr %253 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %253, align 8
  %call3.i487 = call i32 %252(ptr noundef %241, ptr noundef %255, ptr noundef nonnull %239, ptr noundef %15) #35
  br label %deliver_skb.exit490

deliver_skb.exit490:                              ; preds = %refcount_inc.exit.i488, %skb_orphan_frags_rx.exit.i475.deliver_skb.exit490_crit_edge
  %retval.0.i489 = phi i32 [ %call3.i487, %refcount_inc.exit.i488 ], [ -12, %skb_orphan_frags_rx.exit.i475.deliver_skb.exit490_crit_edge ]
  %256 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %256)
  store i32 %retval.0.i489, ptr %ret, align 4
  %257 = ptrtoint ptr %pt_prev to i32
  call void @__asan_store4_noabort(i32 %257)
  store ptr null, ptr %pt_prev, align 4
  br label %if.end225

if.end225:                                        ; preds = %deliver_skb.exit490, %if.then221.if.end225_crit_edge
  %call226 = call i32 %237(ptr noundef nonnull %skb) #35
  %258 = zext i32 %call226 to i64
  call void @__sanitizer_cov_trace_switch(i64 %258, ptr @__sancov_gen_cov_switch_values.316)
  switch i32 %call226, label %do.body229 [
    i32 0, label %sw.bb
    i32 1, label %if.end225.another_round.backedge_crit_edge
    i32 2, label %if.end225.if.end235_crit_edge
    i32 3, label %if.end225.if.end235.loopexit_crit_edge
  ]

if.end225.if.end235.loopexit_crit_edge:           ; preds = %if.end225
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end235.loopexit

if.end225.if.end235_crit_edge:                    ; preds = %if.end225
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end235

if.end225.another_round.backedge_crit_edge:       ; preds = %if.end225
  call void @__sanitizer_cov_trace_pc() #37
  br label %another_round.backedge

sw.bb:                                            ; preds = %if.end225
  call void @__sanitizer_cov_trace_pc() #37
  %259 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %259)
  store i32 0, ptr %ret, align 4
  br label %cleanup330

do.body229:                                       ; preds = %if.end225
  call void @__sanitizer_cov_trace_pc() #37
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5257, 0\0A.popsection", ""() #35, !srcloc !1441
  unreachable

if.end235.loopexit:                               ; preds = %if.end225.if.end235.loopexit_crit_edge, %do.end218.if.end235.loopexit_crit_edge
  br label %if.end235

if.end235:                                        ; preds = %if.end235.loopexit, %if.end225.if.end235_crit_edge
  %deliver_exact.1.off0 = phi i1 [ %deliver_exact.0.off0.ph, %if.end235.loopexit ], [ true, %if.end225.if.end235_crit_edge ]
  %260 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %skb, align 4
  %vlan_present236 = getelementptr inbounds %struct.sk_buff, ptr %261, i32 0, i32 15, i32 0, i32 3
  %262 = ptrtoint ptr %vlan_present236 to i32
  call void @__asan_loadN_noabort(i32 %262, i32 4)
  %bf.load237 = load i32, ptr %vlan_present236, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load237)
  %tobool240.not = icmp sgt i32 %bf.load237, -1
  br i1 %tobool240.not, label %if.end235.if.end285_crit_edge, label %land.lhs.true247, !prof !1311

if.end235.if.end285_crit_edge:                    ; preds = %if.end235
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end285

land.lhs.true247:                                 ; preds = %if.end235
  %263 = getelementptr inbounds %struct.anon.83, ptr %261, i32 0, i32 2
  %264 = ptrtoint ptr %263 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %263, align 8
  %dsa_ptr.i = getelementptr inbounds %struct.net_device, ptr %265, i32 0, i32 75
  %266 = ptrtoint ptr %dsa_ptr.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %dsa_ptr.i, align 4
  %tobool.not.i491 = icmp eq ptr %267, null
  br i1 %tobool.not.i491, label %land.lhs.true247.check_vlan_id.preheader_crit_edge, label %land.rhs.i

land.lhs.true247.check_vlan_id.preheader_crit_edge: ; preds = %land.lhs.true247
  call void @__sanitizer_cov_trace_pc() #37
  br label %check_vlan_id.preheader

land.rhs.i:                                       ; preds = %land.lhs.true247
  %rcv.i = getelementptr inbounds %struct.dsa_port, ptr %267, i32 0, i32 3
  %268 = ptrtoint ptr %rcv.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load ptr, ptr %rcv.i, align 4
  %tobool2.i.not = icmp eq ptr %269, null
  br i1 %tobool2.i.not, label %land.rhs.i.check_vlan_id.preheader_crit_edge, label %land.rhs.i.if.end285_crit_edge

land.rhs.i.if.end285_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end285

land.rhs.i.check_vlan_id.preheader_crit_edge:     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %check_vlan_id.preheader

check_vlan_id.preheader:                          ; preds = %land.rhs.i.check_vlan_id.preheader_crit_edge, %land.lhs.true247.check_vlan_id.preheader_crit_edge
  br label %check_vlan_id

check_vlan_id:                                    ; preds = %if.else271.check_vlan_id_crit_edge, %check_vlan_id.preheader
  %270 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %skb, align 4
  %vlan_tci = getelementptr inbounds %struct.sk_buff, ptr %271, i32 0, i32 15, i32 0, i32 10
  %272 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %272)
  %273 = load i16, ptr %vlan_tci, align 2
  %274 = and i16 %273, 4095
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %274)
  %tobool250.not = icmp eq i16 %274, 0
  br i1 %tobool250.not, label %if.else253, label %if.then251

if.then251:                                       ; preds = %check_vlan_id
  call void @__sanitizer_cov_trace_pc() #37
  %pkt_type = getelementptr inbounds %struct.sk_buff, ptr %271, i32 0, i32 15
  %275 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %275)
  %bf.load252 = load i16, ptr %pkt_type, align 8
  %bf.clear = and i16 %bf.load252, 8191
  %bf.set = or i16 %bf.clear, 24576
  store i16 %bf.set, ptr %pkt_type, align 8
  br label %if.end284

if.else253:                                       ; preds = %check_vlan_id
  %protocol254 = getelementptr inbounds %struct.sk_buff, ptr %271, i32 0, i32 15, i32 0, i32 18
  %276 = ptrtoint ptr %protocol254 to i32
  call void @__asan_load2_noabort(i32 %276)
  %277 = load i16, ptr %protocol254, align 8
  %278 = zext i16 %277 to i64
  call void @__sanitizer_cov_trace_switch(i64 %278, ptr @__sancov_gen_cov_switch_values.317)
  switch i16 %277, label %if.else253.if.end284_crit_edge [
    i16 -30552, label %if.else253.if.then256_crit_edge
    i16 -32512, label %if.else253.if.then256_crit_edge657
  ]

if.else253.if.then256_crit_edge657:               ; preds = %if.else253
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then256

if.else253.if.then256_crit_edge:                  ; preds = %if.else253
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then256

if.else253.if.end284_crit_edge:                   ; preds = %if.else253
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end284

if.then256:                                       ; preds = %if.else253.if.then256_crit_edge, %if.else253.if.then256_crit_edge657
  %vlan_present.i = getelementptr inbounds %struct.sk_buff, ptr %271, i32 0, i32 15, i32 0, i32 3
  %279 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %279, i32 4)
  %bf.load.i495 = load i32, ptr %vlan_present.i, align 2
  %bf.clear.i496 = and i32 %bf.load.i495, 2147483647
  store i32 %bf.clear.i496, ptr %vlan_present.i, align 2
  %call257 = call ptr @skb_vlan_untag(ptr noundef %271) #35
  %280 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %280)
  store ptr %call257, ptr %skb, align 4
  %tobool258.not = icmp eq ptr %call257, null
  br i1 %tobool258.not, label %if.then256.cleanup330_crit_edge, label %if.end268, !prof !1310

if.then256.cleanup330_crit_edge:                  ; preds = %if.then256
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup330

if.end268:                                        ; preds = %if.then256
  %call269 = call zeroext i1 @vlan_do_receive(ptr noundef nonnull %skb) #35
  br i1 %call269, label %if.end268.another_round.outer_crit_edge, label %if.else271

if.end268.another_round.outer_crit_edge:          ; preds = %if.end268
  call void @__sanitizer_cov_trace_pc() #37
  br label %another_round.outer

if.else271:                                       ; preds = %if.end268
  %281 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %281)
  %282 = load ptr, ptr %skb, align 4
  %tobool272.not = icmp eq ptr %282, null
  br i1 %tobool272.not, label %if.else271.cleanup330_crit_edge, label %if.else271.check_vlan_id_crit_edge, !prof !1310

if.else271.check_vlan_id_crit_edge:               ; preds = %if.else271
  call void @__sanitizer_cov_trace_pc() #37
  br label %check_vlan_id

if.else271.cleanup330_crit_edge:                  ; preds = %if.else271
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup330

if.end284:                                        ; preds = %if.else253.if.end284_crit_edge, %if.then251
  %vlan_present.i497 = getelementptr inbounds %struct.sk_buff, ptr %271, i32 0, i32 15, i32 0, i32 3
  %283 = ptrtoint ptr %vlan_present.i497 to i32
  call void @__asan_loadN_noabort(i32 %283, i32 4)
  %bf.load.i498 = load i32, ptr %vlan_present.i497, align 2
  %bf.clear.i499 = and i32 %bf.load.i498, 2147483647
  store i32 %bf.clear.i499, ptr %vlan_present.i497, align 2
  br label %if.end285

if.end285:                                        ; preds = %if.end284, %land.rhs.i.if.end285_crit_edge, %if.end235.if.end285_crit_edge
  %284 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load ptr, ptr %skb, align 4
  %protocol286 = getelementptr inbounds %struct.sk_buff, ptr %285, i32 0, i32 15, i32 0, i32 18
  %286 = ptrtoint ptr %protocol286 to i32
  call void @__asan_load2_noabort(i32 %286)
  %287 = load i16, ptr %protocol286, align 8
  br i1 %deliver_exact.1.off0, label %if.end285.if.end300_crit_edge, label %if.then296, !prof !1310

if.end285.if.end300_crit_edge:                    ; preds = %if.end285
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end300

if.then296:                                       ; preds = %if.end285
  call void @__sanitizer_cov_trace_pc() #37
  %288 = and i16 %287, 15
  %and298 = zext i16 %288 to i32
  %arrayidx299 = getelementptr [16 x %struct.list_head], ptr @ptype_base, i32 0, i32 %and298
  call fastcc void @deliver_ptype_list_skb(ptr noundef %285, ptr noundef nonnull %pt_prev, ptr noundef %15, i16 noundef zeroext %287, ptr noundef %arrayidx299)
  br label %if.end300

if.end300:                                        ; preds = %if.then296, %if.end285.if.end300_crit_edge
  %289 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %skb, align 4
  %ptype_specific = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 12
  call fastcc void @deliver_ptype_list_skb(ptr noundef %290, ptr noundef nonnull %pt_prev, ptr noundef %15, i16 noundef zeroext %287, ptr noundef %ptype_specific)
  %291 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %skb, align 4
  %293 = getelementptr inbounds %struct.anon.83, ptr %292, i32 0, i32 2
  %294 = ptrtoint ptr %293 to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load ptr, ptr %293, align 8
  %cmp301.not = icmp eq ptr %295, %15
  br i1 %cmp301.not, label %if.end300.if.end311_crit_edge, label %if.then309, !prof !1311

if.end300.if.end311_crit_edge:                    ; preds = %if.end300
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end311

if.then309:                                       ; preds = %if.end300
  call void @__sanitizer_cov_trace_pc() #37
  %ptype_specific310 = getelementptr inbounds %struct.net_device, ptr %295, i32 0, i32 12
  call fastcc void @deliver_ptype_list_skb(ptr noundef %292, ptr noundef nonnull %pt_prev, ptr noundef %15, i16 noundef zeroext %287, ptr noundef %ptype_specific310)
  br label %if.end311

if.end311:                                        ; preds = %if.then309, %if.end300.if.end311_crit_edge
  %296 = ptrtoint ptr %pt_prev to i32
  call void @__asan_load4_noabort(i32 %296)
  %297 = load ptr, ptr %pt_prev, align 4
  %tobool312.not = icmp eq ptr %297, null
  br i1 %tobool312.not, label %if.end311.drop_crit_edge, label %if.then313

if.end311.drop_crit_edge:                         ; preds = %if.end311
  call void @__sanitizer_cov_trace_pc() #37
  br label %drop

if.then313:                                       ; preds = %if.end311
  %298 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %298)
  %299 = load ptr, ptr %skb, align 4
  %tobool.not.i.i500 = icmp eq ptr %299, null
  br i1 %tobool.not.i.i500, label %if.then313.if.end323_crit_edge, label %land.rhs.i.i

if.then313.if.end323_crit_edge:                   ; preds = %if.then313
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end323

land.rhs.i.i:                                     ; preds = %if.then313
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %299, i32 0, i32 17
  %300 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %end.i.i.i, align 4
  %302 = ptrtoint ptr %301 to i32
  call void @__asan_load1_noabort(i32 %302)
  %303 = load i8, ptr %301, align 8
  %304 = and i8 %303, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %304)
  %tobool1.not.i.i = icmp eq i8 %304, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.if.end323_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.if.end323_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end323

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %301, i32 0, i32 11
  %305 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i501 = icmp eq ptr %306, null
  br i1 %tobool.not.i501, label %skb_zcopy.exit.i.if.end323_crit_edge, label %skb_orphan_frags_rx.exit, !prof !1311

skb_zcopy.exit.i.if.end323_crit_edge:             ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end323

skb_orphan_frags_rx.exit:                         ; preds = %skb_zcopy.exit.i
  %call4.i = call i32 @skb_copy_ubufs(ptr noundef nonnull %299, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool315.not = icmp eq i32 %call4.i, 0
  br i1 %tobool315.not, label %skb_orphan_frags_rx.exit.if.end323_crit_edge, label %skb_orphan_frags_rx.exit.drop_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.drop_crit_edge:          ; preds = %skb_orphan_frags_rx.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %drop

skb_orphan_frags_rx.exit.if.end323_crit_edge:     ; preds = %skb_orphan_frags_rx.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end323

if.end323:                                        ; preds = %skb_orphan_frags_rx.exit.if.end323_crit_edge, %skb_zcopy.exit.i.if.end323_crit_edge, %land.rhs.i.i.if.end323_crit_edge, %if.then313.if.end323_crit_edge
  %307 = ptrtoint ptr %ppt_prev to i32
  call void @__asan_store4_noabort(i32 %307)
  store ptr %297, ptr %ppt_prev, align 4
  br label %cleanup330

drop:                                             ; preds = %skb_orphan_frags_rx.exit.drop_crit_edge, %if.end311.drop_crit_edge, %land.lhs.true177.drop_crit_edge
  %deliver_exact.2.off0 = phi i1 [ %deliver_exact.1.off0, %skb_orphan_frags_rx.exit.drop_crit_edge ], [ %deliver_exact.1.off0, %if.end311.drop_crit_edge ], [ %deliver_exact.0.off0.ph, %land.lhs.true177.drop_crit_edge ]
  %308 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load ptr, ptr %skb, align 4
  %310 = getelementptr inbounds %struct.anon.83, ptr %309, i32 0, i32 2
  %311 = ptrtoint ptr %310 to i32
  call void @__asan_load4_noabort(i32 %311)
  %312 = load ptr, ptr %310, align 8
  br i1 %deliver_exact.2.off0, label %if.else327, label %if.then326

if.then326:                                       ; preds = %drop
  call void @__sanitizer_cov_trace_pc() #37
  %rx_dropped = getelementptr inbounds %struct.net_device, ptr %312, i32 0, i32 37
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %rx_dropped, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %rx_dropped, i32 1, i32 3, i32 1) #35
  %313 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %rx_dropped, ptr %rx_dropped, i32 1, ptr elementtype(i32) %rx_dropped) #35, !srcloc !1326
  br label %if.end328

if.else327:                                       ; preds = %drop
  call void @__sanitizer_cov_trace_pc() #37
  %rx_nohandler = getelementptr inbounds %struct.net_device, ptr %312, i32 0, i32 39
  %call.i.i386 = call zeroext i1 @__kasan_check_write(ptr noundef %rx_nohandler, i32 noundef 4) #35
  call void @llvm.prefetch.p0(ptr %rx_nohandler, i32 1, i32 3, i32 1) #35
  %314 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %rx_nohandler, ptr %rx_nohandler, i32 1, ptr elementtype(i32) %rx_nohandler) #35, !srcloc !1326
  br label %if.end328

if.end328:                                        ; preds = %if.else327, %if.then326
  %315 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load ptr, ptr %skb, align 4
  call void @kfree_skb_reason(ptr noundef %316, i32 noundef 0) #35
  %317 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %317)
  store i32 1, ptr %ret, align 4
  br label %cleanup330

cleanup330:                                       ; preds = %if.end328, %if.end323, %if.else271.cleanup330_crit_edge, %if.then256.cleanup330_crit_edge, %sw.bb, %if.else.cleanup330_crit_edge, %if.end167.cleanup330_crit_edge, %if.end164.cleanup330_crit_edge, %if.then59.cleanup330_crit_edge, %cleanup
  %318 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %skb, align 4
  %320 = ptrtoint ptr %pskb to i32
  call void @__asan_store4_noabort(i32 %320)
  store ptr %319, ptr %pskb, align 4
  %321 = ptrtoint ptr %ret to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %ret, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ret) #35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb) #35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pt_prev) #35
  ret i32 %322
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_netif_receive_skb(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb, i32 0, i32 1), ptr blockaddress(@trace_netif_receive_skb, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1442
  %call42 = tail call i32 @__traceiter_netif_receive_skb(ptr noundef null, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1443
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_netif_receive_skb, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_netif_receive_skb.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_netif_receive_skb.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 155, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_disable() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_enable() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_vlan_untag(ptr noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nf_ingress(ptr noundef %skb, ptr nocapture noundef %pt_prev, ptr nocapture noundef writeonly %ret, ptr noundef %orig_dev) unnamed_addr #5 align 64 {
entry:
  %state.i = alloca %struct.nf_hook_state, align 4
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ([13 x [7 x %struct.static_key]], ptr @nf_hooks_needed, i32 0, i32 5), ptr blockaddress(@nf_ingress, %if.end.i)) #35
          to label %return [label %if.end.i], !srcloc !1328

if.end.i:                                         ; preds = %entry
  %0 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  %nf_hooks_ingress.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 98
  %3 = ptrtoint ptr %nf_hooks_ingress.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %nf_hooks_ingress.i, align 16
  %tobool.i.not = icmp eq ptr %4, null
  br i1 %tobool.i.not, label %if.end.i.return_crit_edge, label %if.then

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then:                                          ; preds = %if.end.i
  %5 = ptrtoint ptr %pt_prev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pt_prev, align 4
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %if.then.if.end_crit_edge, label %if.then1

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then1:                                         ; preds = %if.then
  %tobool.not.i.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i.i, label %if.then1.if.end.i10_crit_edge, label %land.rhs.i.i.i

if.then1.if.end.i10_crit_edge:                    ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i10

land.rhs.i.i.i:                                   ; preds = %if.then1
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %7 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %end.i.i.i.i, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %8, align 8
  %11 = and i8 %10, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool1.not.i.i.i = icmp eq i8 %11, 0
  br i1 %tobool1.not.i.i.i, label %land.rhs.i.i.i.if.end.i10_crit_edge, label %skb_zcopy.exit.i.i

land.rhs.i.i.i.if.end.i10_crit_edge:              ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i10

skb_zcopy.exit.i.i:                               ; preds = %land.rhs.i.i.i
  %destructor_arg.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %8, i32 0, i32 11
  %12 = ptrtoint ptr %destructor_arg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %destructor_arg.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i, label %skb_zcopy.exit.i.i.if.end.i10_crit_edge, label %skb_orphan_frags_rx.exit.i, !prof !1311

skb_zcopy.exit.i.i.if.end.i10_crit_edge:          ; preds = %skb_zcopy.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i10

skb_orphan_frags_rx.exit.i:                       ; preds = %skb_zcopy.exit.i.i
  %call4.i.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool.not.i9 = icmp eq i32 %call4.i.i, 0
  br i1 %tobool.not.i9, label %skb_orphan_frags_rx.exit.i.if.end.i10_crit_edge, label %skb_orphan_frags_rx.exit.i.deliver_skb.exit_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.i.deliver_skb.exit_crit_edge: ; preds = %skb_orphan_frags_rx.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %deliver_skb.exit

skb_orphan_frags_rx.exit.i.if.end.i10_crit_edge:  ; preds = %skb_orphan_frags_rx.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i10

if.end.i10:                                       ; preds = %skb_orphan_frags_rx.exit.i.if.end.i10_crit_edge, %skb_zcopy.exit.i.i.if.end.i10_crit_edge, %land.rhs.i.i.i.if.end.i10_crit_edge, %if.then1.if.end.i10_crit_edge
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #35
  tail call void @llvm.prefetch.p0(ptr %users.i, i32 1, i32 3, i32 1) #35
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i, ptr %users.i, i32 1, ptr elementtype(i32) %users.i) #35, !srcloc !1334
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.i10.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !1310

if.end.i10.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.end.i10
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end.i10
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %15 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %.not.i.i.i.i = icmp sgt i32 %15, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !1311

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end.i10.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end.i10.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %users.i, i32 noundef %.sink.i.i.i.i) #35
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %func.i = getelementptr inbounds %struct.packet_type, ptr %6, i32 0, i32 4
  %16 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %func.i, align 4
  %18 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %0, align 8
  %call3.i = tail call i32 %17(ptr noundef %skb, ptr noundef %19, ptr noundef nonnull %6, ptr noundef %orig_dev) #35
  br label %deliver_skb.exit

deliver_skb.exit:                                 ; preds = %refcount_inc.exit.i, %skb_orphan_frags_rx.exit.i.deliver_skb.exit_crit_edge
  %retval.0.i11 = phi i32 [ %call3.i, %refcount_inc.exit.i ], [ -12, %skb_orphan_frags_rx.exit.i.deliver_skb.exit_crit_edge ]
  %20 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %retval.0.i11, ptr %ret, align 4
  %21 = ptrtoint ptr %pt_prev to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %pt_prev, align 4
  br label %if.end

if.end:                                           ; preds = %deliver_skb.exit, %if.then.if.end_crit_edge
  %22 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %25, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %26 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %0, align 8
  %nf_hooks_ingress.i12 = getelementptr inbounds %struct.net_device, ptr %27, i32 0, i32 98
  %28 = ptrtoint ptr %nf_hooks_ingress.i12 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %nf_hooks_ingress.i12, align 16
  %call.i13 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i13)
  %tobool.not.i14 = icmp eq i32 %call.i13, 0
  br i1 %tobool.not.i14, label %land.lhs.true.i15, label %rcu_read_lock.exit.do.end7.i_crit_edge

rcu_read_lock.exit.do.end7.i_crit_edge:           ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

land.lhs.true.i15:                                ; preds = %rcu_read_lock.exit
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i15.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i15.do.end7.i_crit_edge:            ; preds = %land.lhs.true.i15
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i15
  %.b26.i = load i1, ptr @nf_hook_ingress.__warned, align 1
  br i1 %.b26.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i16

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end7.i

if.then.i16:                                      ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @nf_hook_ingress.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.135, i32 noundef 21, ptr noundef nonnull @.str.11) #35
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i16, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i15.do.end7.i_crit_edge, %rcu_read_lock.exit.do.end7.i_crit_edge
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %state.i) #35
  %30 = ptrtoint ptr %state.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 393215, ptr %state.i, align 4
  %tobool9.not.i = icmp eq ptr %29, null
  br i1 %tobool9.not.i, label %do.end7.i.nf_hook_ingress.exit_crit_edge, label %if.end14.i, !prof !1310

do.end7.i.nf_hook_ingress.exit_crit_edge:         ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %nf_hook_ingress.exit

if.end14.i:                                       ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #37
  %31 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %0, align 8
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %32, i32 0, i32 127
  %33 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %nd_net.i.i, align 4
  %in.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 2
  %35 = ptrtoint ptr %in.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %32, ptr %in.i.i, align 4
  %out.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 3
  %36 = ptrtoint ptr %out.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %out.i.i, align 4
  %sk3.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 4
  %37 = ptrtoint ptr %sk3.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %sk3.i.i, align 4
  %net4.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 5
  %38 = ptrtoint ptr %net4.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %34, ptr %net4.i.i, align 4
  %okfn5.i.i = getelementptr inbounds %struct.nf_hook_state, ptr %state.i, i32 0, i32 6
  %39 = ptrtoint ptr %okfn5.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %okfn5.i.i, align 4
  %call16.i = call i32 @nf_hook_slow(ptr noundef %skb, ptr noundef nonnull %state.i, ptr noundef nonnull %29, i32 noundef 0) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %cmp.i = icmp eq i32 %call16.i, 0
  %.call16.i = select i1 %cmp.i, i32 -1, i32 %call16.i
  br label %nf_hook_ingress.exit

nf_hook_ingress.exit:                             ; preds = %if.end14.i, %do.end7.i.nf_hook_ingress.exit_crit_edge
  %retval.0.i17 = phi i32 [ 0, %do.end7.i.nf_hook_ingress.exit_crit_edge ], [ %.call16.i, %if.end14.i ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %state.i) #35
  %call.i18 = call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i18, label %nf_hook_ingress.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i21

nf_hook_ingress.exit.rcu_read_unlock.exit_crit_edge: ; preds = %nf_hook_ingress.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i21:                                ; preds = %nf_hook_ingress.exit
  %call1.i19 = call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i19)
  %tobool.not.i20 = icmp eq i32 %call1.i19, 0
  br i1 %tobool.not.i20, label %land.lhs.true.i21.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i23

land.lhs.true.i21.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i21
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i23:                               ; preds = %land.lhs.true.i21
  %.b4.i22 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i22, label %land.lhs.true2.i23.rcu_read_unlock.exit_crit_edge, label %if.then.i24

land.lhs.true2.i23.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i23
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i24:                                      ; preds = %land.lhs.true2.i23
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i24, %land.lhs.true2.i23.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i21.rcu_read_unlock.exit_crit_edge, %nf_hook_ingress.exit.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %40 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i25 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i.i.i25 to ptr
  %preempt_count.i.i.i.i26 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %preempt_count.i.i.i.i26 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %preempt_count.i.i.i.i26, align 4
  %sub.i.i.i = add i32 %43, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i26, align 4
  call void @rcu_read_unlock_strict() #35
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  br label %return

return:                                           ; preds = %rcu_read_unlock.exit, %if.end.i.return_crit_edge, %entry
  %retval.0 = phi i32 [ %retval.0.i17, %rcu_read_unlock.exit ], [ 0, %if.end.i.return_crit_edge ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @vlan_do_receive(ptr noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @deliver_ptype_list_skb(ptr noundef %skb, ptr nocapture noundef %pt, ptr noundef %orig_dev, i16 noundef zeroext %type, ptr noundef %ptype_list) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %0 = ptrtoint ptr %pt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pt, align 4
  %call = tail call i32 @rcu_read_lock_any_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b35 = load i1, ptr @deliver_ptype_list_skb.__warned, align 1
  br i1 %.b35, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @deliver_ptype_list_skb.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 2146, ptr noundef nonnull @.str.4) #35
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %2 = ptrtoint ptr %ptype_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn36 = load volatile ptr, ptr %ptype_list, align 4
  %cmp.not38 = icmp eq ptr %.pn36, %ptype_list
  br i1 %cmp.not38, label %do.end.for.end_crit_edge, label %for.body.lr.ph

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end
  %tobool.not.i.i.i = icmp eq ptr %skb, null
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %3 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn40 = phi ptr [ %.pn36, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %pt_prev.039 = phi ptr [ %1, %for.body.lr.ph ], [ %pt_prev.1, %for.inc.for.body_crit_edge ]
  %ptype.041 = getelementptr i8, ptr %.pn40, i32 -32
  %4 = ptrtoint ptr %ptype.041 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %ptype.041, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %5, i16 %type)
  %cmp11.not = icmp eq i16 %5, %type
  br i1 %cmp11.not, label %if.end14, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.end14:                                         ; preds = %for.body
  %tobool15.not = icmp eq ptr %pt_prev.039, null
  br i1 %tobool15.not, label %if.end14.for.inc_crit_edge, label %if.then16

if.end14.for.inc_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.then16:                                        ; preds = %if.end14
  br i1 %tobool.not.i.i.i, label %if.then16.if.end.i_crit_edge, label %land.rhs.i.i.i

if.then16.if.end.i_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

land.rhs.i.i.i:                                   ; preds = %if.then16
  %6 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %end.i.i.i.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 8
  %10 = and i8 %9, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool1.not.i.i.i = icmp eq i8 %10, 0
  br i1 %tobool1.not.i.i.i, label %land.rhs.i.i.i.if.end.i_crit_edge, label %skb_zcopy.exit.i.i

land.rhs.i.i.i.if.end.i_crit_edge:                ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

skb_zcopy.exit.i.i:                               ; preds = %land.rhs.i.i.i
  %destructor_arg.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 11
  %11 = ptrtoint ptr %destructor_arg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %destructor_arg.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i, label %skb_zcopy.exit.i.i.if.end.i_crit_edge, label %skb_orphan_frags_rx.exit.i, !prof !1311

skb_zcopy.exit.i.i.if.end.i_crit_edge:            ; preds = %skb_zcopy.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

skb_orphan_frags_rx.exit.i:                       ; preds = %skb_zcopy.exit.i.i
  %call4.i.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb, i32 noundef 2592) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool.not.i, label %skb_orphan_frags_rx.exit.i.if.end.i_crit_edge, label %skb_orphan_frags_rx.exit.i.for.inc_crit_edge, !prof !1311

skb_orphan_frags_rx.exit.i.for.inc_crit_edge:     ; preds = %skb_orphan_frags_rx.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

skb_orphan_frags_rx.exit.i.if.end.i_crit_edge:    ; preds = %skb_orphan_frags_rx.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.end.i:                                         ; preds = %skb_orphan_frags_rx.exit.i.if.end.i_crit_edge, %skb_zcopy.exit.i.i.if.end.i_crit_edge, %land.rhs.i.i.i.if.end.i_crit_edge, %if.then16.if.end.i_crit_edge
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #35
  tail call void @llvm.prefetch.p0(ptr %users.i, i32 1, i32 3, i32 1) #35
  %13 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i, ptr %users.i, i32 1, ptr elementtype(i32) %users.i) #35, !srcloc !1334
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !1310

if.end.i.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %14 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %14)
  %.not.i.i.i.i = icmp sgt i32 %14, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !1311

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %users.i, i32 noundef %.sink.i.i.i.i) #35
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %func.i = getelementptr inbounds %struct.packet_type, ptr %pt_prev.039, i32 0, i32 4
  %15 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %func.i, align 4
  %17 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %3, align 8
  %call3.i = tail call i32 %16(ptr noundef %skb, ptr noundef %18, ptr noundef nonnull %pt_prev.039, ptr noundef %orig_dev) #35
  br label %for.inc

for.inc:                                          ; preds = %refcount_inc.exit.i, %skb_orphan_frags_rx.exit.i.for.inc_crit_edge, %if.end14.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %pt_prev.1 = phi ptr [ %pt_prev.039, %for.body.for.inc_crit_edge ], [ %ptype.041, %if.end14.for.inc_crit_edge ], [ %ptype.041, %skb_orphan_frags_rx.exit.i.for.inc_crit_edge ], [ %ptype.041, %refcount_inc.exit.i ]
  %19 = ptrtoint ptr %.pn40 to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn = load volatile ptr, ptr %.pn40, align 4
  %cmp.not = icmp eq ptr %.pn, %ptype_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %pt_prev.0.lcssa = phi ptr [ %1, %do.end.for.end_crit_edge ], [ %pt_prev.1, %for.inc.for.end_crit_edge ]
  %20 = ptrtoint ptr %pt to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %pt_prev.0.lcssa, ptr %pt, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_with_offset(i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @set_rps_cpu(ptr noundef %dev, ptr noundef %skb, ptr noundef %rflow, i16 noundef zeroext %next_cpu) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i16 %next_cpu to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %0, i32 %conv)
  %cmp = icmp ugt i32 %0, %conv
  br i1 %cmp, label %if.then, label %entry.if.end54_crit_edge

entry.if.end54_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end54

if.then:                                          ; preds = %entry
  %queue_mapping.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %1 = ptrtoint ptr %queue_mapping.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %queue_mapping.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %cmp.i.not = icmp eq i16 %2, 0
  br i1 %cmp.i.not, label %if.then.do.body48_crit_edge, label %lor.lhs.false

if.then.do.body48_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body48

lor.lhs.false:                                    ; preds = %if.then
  %rx_cpu_rmap = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 100
  %3 = ptrtoint ptr %rx_cpu_rmap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rx_cpu_rmap, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %lor.lhs.false.do.body48_crit_edge, label %lor.lhs.false2

lor.lhs.false.do.body48_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body48

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %5 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %features, align 16
  %and = and i64 %6, 274877906944
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool3.not = icmp eq i64 %and, 0
  br i1 %tobool3.not, label %lor.lhs.false2.do.body48_crit_edge, label %if.end

lor.lhs.false2.do.body48_crit_edge:               ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body48

if.end:                                           ; preds = %lor.lhs.false2
  %arrayidx.i = getelementptr %struct.cpu_rmap, ptr %4, i32 0, i32 4, i32 %conv
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %arrayidx.i, align 4
  %sub.i = add i16 %2, -1
  call void @__sanitizer_cov_trace_cmp2(i16 %8, i16 %sub.i)
  %cmp11 = icmp eq i16 %8, %sub.i
  br i1 %cmp11, label %if.end.do.body48_crit_edge, label %if.end14

if.end.do.body48_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body48

if.end14:                                         ; preds = %if.end
  %conv8 = zext i16 %8 to i32
  %_rx = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 87
  %9 = ptrtoint ptr %_rx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %_rx, align 4
  %rps_flow_table = getelementptr %struct.netdev_rx_queue, ptr %10, i32 %conv8, i32 2
  %11 = ptrtoint ptr %rps_flow_table to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %rps_flow_table, align 4
  %call17 = tail call i32 @rcu_read_lock_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %land.lhs.true, label %if.end14.do.end26_crit_edge

if.end14.do.end26_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end26

land.lhs.true:                                    ; preds = %if.end14
  %call19 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %land.lhs.true.do.end26_crit_edge, label %land.lhs.true21

land.lhs.true.do.end26_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end26

land.lhs.true21:                                  ; preds = %land.lhs.true
  %.b79 = load i1, ptr @set_rps_cpu.__warned, align 1
  br i1 %.b79, label %land.lhs.true21.do.end26_crit_edge, label %if.then23

land.lhs.true21.do.end26_crit_edge:               ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end26

if.then23:                                        ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @set_rps_cpu.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 4280, ptr noundef nonnull @.str.11) #35
  br label %do.end26

do.end26:                                         ; preds = %if.then23, %land.lhs.true21.do.end26_crit_edge, %land.lhs.true.do.end26_crit_edge, %if.end14.do.end26_crit_edge
  %tobool28.not = icmp eq ptr %12, null
  br i1 %tobool28.not, label %do.end26.do.body48_crit_edge, label %if.end30

do.end26.do.body48_crit_edge:                     ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body48

if.end30:                                         ; preds = %do.end26
  %l4_hash.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %13 = ptrtoint ptr %l4_hash.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %bf.load.i = load i16, ptr %l4_hash.i, align 8
  %14 = and i16 %bf.load.i, 192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %if.then.i, label %if.end30.skb_get_hash.exit_crit_edge

if.end30.skb_get_hash.exit_crit_edge:             ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_get_hash.exit

if.then.i:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__skb_get_hash(ptr noundef %skb) #35
  br label %skb_get_hash.exit

skb_get_hash.exit:                                ; preds = %if.then.i, %if.end30.skb_get_hash.exit_crit_edge
  %hash.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %16 = ptrtoint ptr %hash.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %hash.i, align 4
  %18 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %12, align 4
  %and32 = and i32 %19, %17
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 16
  %20 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %netdev_ops, align 8
  %ndo_rx_flow_steer = getelementptr inbounds %struct.net_device_ops, ptr %21, i32 0, i32 50
  %22 = ptrtoint ptr %ndo_rx_flow_steer to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ndo_rx_flow_steer, align 4
  %call33 = tail call i32 %23(ptr noundef %dev, ptr noundef %skb, i16 noundef zeroext %8, i32 noundef %and32) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %cmp34 = icmp slt i32 %call33, 0
  br i1 %cmp34, label %skb_get_hash.exit.do.body48_crit_edge, label %if.end37

skb_get_hash.exit.do.body48_crit_edge:            ; preds = %skb_get_hash.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body48

if.end37:                                         ; preds = %skb_get_hash.exit
  %arrayidx = getelementptr %struct.rps_dev_flow_table, ptr %12, i32 0, i32 2, i32 %and32
  %conv38 = trunc i32 %call33 to i16
  %filter = getelementptr %struct.rps_dev_flow_table, ptr %12, i32 0, i32 2, i32 %and32, i32 1
  %24 = ptrtoint ptr %filter to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv38, ptr %filter, align 2
  %filter39 = getelementptr inbounds %struct.rps_dev_flow, ptr %rflow, i32 0, i32 1
  %25 = ptrtoint ptr %filter39 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %filter39, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %26, i16 %conv38)
  %cmp43 = icmp eq i16 %26, %conv38
  br i1 %cmp43, label %if.then45, label %if.end37.do.body48_crit_edge

if.end37.do.body48_crit_edge:                     ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body48

if.then45:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #37
  %27 = ptrtoint ptr %filter39 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 -1, ptr %filter39, align 2
  br label %do.body48

do.body48:                                        ; preds = %if.then45, %if.end37.do.body48_crit_edge, %skb_get_hash.exit.do.body48_crit_edge, %do.end26.do.body48_crit_edge, %if.end.do.body48_crit_edge, %lor.lhs.false2.do.body48_crit_edge, %lor.lhs.false.do.body48_crit_edge, %if.then.do.body48_crit_edge
  %rflow.addr.0 = phi ptr [ %rflow, %if.end.do.body48_crit_edge ], [ %rflow, %skb_get_hash.exit.do.body48_crit_edge ], [ %arrayidx, %if.then45 ], [ %arrayidx, %if.end37.do.body48_crit_edge ], [ %rflow, %do.end26.do.body48_crit_edge ], [ %rflow, %lor.lhs.false2.do.body48_crit_edge ], [ %rflow, %lor.lhs.false.do.body48_crit_edge ], [ %rflow, %if.then.do.body48_crit_edge ]
  %arrayidx53 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %conv
  %28 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx53, align 4
  %add = add i32 %29, ptrtoint (ptr @softnet_data to i32)
  %30 = inttoptr i32 %add to ptr
  %input_queue_head = getelementptr inbounds %struct.softnet_data, ptr %30, i32 0, i32 13
  %31 = ptrtoint ptr %input_queue_head to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %input_queue_head, align 128
  %last_qtail = getelementptr inbounds %struct.rps_dev_flow, ptr %rflow.addr.0, i32 0, i32 2
  %33 = ptrtoint ptr %last_qtail to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %last_qtail, align 4
  br label %if.end54

if.end54:                                         ; preds = %do.body48, %entry.if.end54_crit_edge
  %rflow.addr.1 = phi ptr [ %rflow.addr.0, %do.body48 ], [ %rflow, %entry.if.end54_crit_edge ]
  %34 = ptrtoint ptr %rflow.addr.1 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %next_cpu, ptr %rflow.addr.1, align 4
  ret ptr %rflow.addr.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raise_softirq_irqoff(i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__netif_receive_skb_list_core(ptr noundef readonly %head, i1 noundef zeroext %pfmemalloc) unnamed_addr #1 align 64 {
entry:
  %sublist = alloca %struct.list_head, align 4
  %skb = alloca ptr, align 4
  %pt_prev = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sublist) #35
  %0 = getelementptr inbounds %struct.list_head, ptr %sublist, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb) #35
  %1 = ptrtoint ptr %sublist to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %sublist, ptr %sublist, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %sublist, ptr %0, align 4
  %3 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %head, align 4
  %5 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %skb, align 4
  %cmp.not48 = icmp eq ptr %4, %head
  br i1 %cmp.not48, label %entry.__netif_receive_skb_list_ptype.exit46_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.__netif_receive_skb_list_ptype.exit46_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_list_ptype.exit46

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry.for.body_crit_edge
  %pt_curr.051 = phi ptr [ %pt_curr.2, %cleanup.for.body_crit_edge ], [ null, %entry.for.body_crit_edge ]
  %od_curr.050 = phi ptr [ %od_curr.2, %cleanup.for.body_crit_edge ], [ null, %entry.for.body_crit_edge ]
  %storemerge49 = phi ptr [ %next.052, %cleanup.for.body_crit_edge ], [ %4, %entry.for.body_crit_edge ]
  %6 = ptrtoint ptr %storemerge49 to i32
  call void @__asan_load4_noabort(i32 %6)
  %next.052 = load ptr, ptr %storemerge49, align 8
  %7 = getelementptr inbounds %struct.anon.83, ptr %storemerge49, i32 0, i32 2
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pt_prev) #35
  %10 = ptrtoint ptr %pt_prev to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %pt_prev, align 4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %storemerge49) #35
  br i1 %call.i.i, label %if.end.i.i, label %for.body.skb_list_del_init.exit_crit_edge

for.body.skb_list_del_init.exit_crit_edge:        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_list_del_init.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %storemerge49, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev.i.i, align 4
  %13 = ptrtoint ptr %storemerge49 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %storemerge49, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev1.i.i.i, align 4
  %16 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %14, ptr %12, align 4
  br label %skb_list_del_init.exit

skb_list_del_init.exit:                           ; preds = %if.end.i.i, %for.body.skb_list_del_init.exit_crit_edge
  %17 = ptrtoint ptr %storemerge49 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %storemerge49, align 8
  %call = call fastcc i32 @__netif_receive_skb_core(ptr noundef nonnull %skb, i1 noundef zeroext %pfmemalloc, ptr noundef nonnull %pt_prev)
  %18 = ptrtoint ptr %pt_prev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pt_prev, align 4
  %tobool6.not = icmp eq ptr %19, null
  br i1 %tobool6.not, label %skb_list_del_init.exit.cleanup_crit_edge, label %if.end

skb_list_del_init.exit.cleanup_crit_edge:         ; preds = %skb_list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %skb_list_del_init.exit
  %cmp7.not = icmp eq ptr %pt_curr.051, %19
  %cmp8.not = icmp eq ptr %od_curr.050, %9
  %or.cond = select i1 %cmp7.not, i1 %cmp8.not, i1 false
  br i1 %or.cond, label %if.end.if.end10_crit_edge, label %if.then9

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

if.then9:                                         ; preds = %if.end
  %tobool.not.i = icmp eq ptr %pt_curr.051, null
  br i1 %tobool.not.i, label %if.then9.__netif_receive_skb_list_ptype.exit_crit_edge, label %if.end.i

if.then9.__netif_receive_skb_list_ptype.exit_crit_edge: ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_list_ptype.exit

if.end.i:                                         ; preds = %if.then9
  %20 = ptrtoint ptr %sublist to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %sublist, align 4
  %cmp.i.not.i = icmp eq ptr %21, %sublist
  br i1 %cmp.i.not.i, label %if.end.i.__netif_receive_skb_list_ptype.exit_crit_edge, label %if.end3.i

if.end.i.__netif_receive_skb_list_ptype.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_list_ptype.exit

if.end3.i:                                        ; preds = %if.end.i
  %list_func.i = getelementptr inbounds %struct.packet_type, ptr %pt_curr.051, i32 0, i32 5
  %22 = ptrtoint ptr %list_func.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %list_func.i, align 4
  %cmp.not.i = icmp eq ptr %23, null
  br i1 %cmp.not.i, label %for.body.lr.ph.i, label %if.then4.i

for.body.lr.ph.i:                                 ; preds = %if.end3.i
  %func.i = getelementptr inbounds %struct.packet_type, ptr %pt_curr.051, i32 0, i32 4
  br label %for.body.i

if.then4.i:                                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #37
  call void %23(ptr noundef nonnull %sublist, ptr noundef nonnull %pt_curr.051, ptr noundef %od_curr.050) #35
  br label %__netif_receive_skb_list_ptype.exit

for.body.i:                                       ; preds = %skb_list_del_init.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %skb.034.i = phi ptr [ %21, %for.body.lr.ph.i ], [ %next.0.i, %skb_list_del_init.exit.i.for.body.i_crit_edge ]
  %24 = ptrtoint ptr %skb.034.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %next.0.i = load ptr, ptr %skb.034.i, align 8
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %skb.034.i) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.skb_list_del_init.exit.i_crit_edge

for.body.i.skb_list_del_init.exit.i_crit_edge:    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %skb.034.i, i32 0, i32 1
  %25 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %prev.i.i.i, align 4
  %27 = ptrtoint ptr %skb.034.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %skb.034.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %26, ptr %prev1.i.i.i.i, align 4
  %30 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %28, ptr %26, align 4
  br label %skb_list_del_init.exit.i

skb_list_del_init.exit.i:                         ; preds = %if.end.i.i.i, %for.body.i.skb_list_del_init.exit.i_crit_edge
  %31 = ptrtoint ptr %skb.034.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %skb.034.i, align 8
  %32 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %func.i, align 4
  %34 = getelementptr inbounds %struct.anon.83, ptr %skb.034.i, i32 0, i32 2
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 8
  %call12.i = call i32 %33(ptr noundef %skb.034.i, ptr noundef %36, ptr noundef nonnull %pt_curr.051, ptr noundef %od_curr.050) #35
  %cmp11.not.i = icmp eq ptr %next.0.i, %sublist
  br i1 %cmp11.not.i, label %skb_list_del_init.exit.i.__netif_receive_skb_list_ptype.exit_crit_edge, label %skb_list_del_init.exit.i.for.body.i_crit_edge

skb_list_del_init.exit.i.for.body.i_crit_edge:    ; preds = %skb_list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

skb_list_del_init.exit.i.__netif_receive_skb_list_ptype.exit_crit_edge: ; preds = %skb_list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_list_ptype.exit

__netif_receive_skb_list_ptype.exit:              ; preds = %skb_list_del_init.exit.i.__netif_receive_skb_list_ptype.exit_crit_edge, %if.then4.i, %if.end.i.__netif_receive_skb_list_ptype.exit_crit_edge, %if.then9.__netif_receive_skb_list_ptype.exit_crit_edge
  %37 = ptrtoint ptr %sublist to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %sublist, ptr %sublist, align 4
  %38 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %sublist, ptr %0, align 4
  br label %if.end10

if.end10:                                         ; preds = %__netif_receive_skb_list_ptype.exit, %if.end.if.end10_crit_edge
  %od_curr.1 = phi ptr [ %9, %__netif_receive_skb_list_ptype.exit ], [ %od_curr.050, %if.end.if.end10_crit_edge ]
  %pt_curr.1 = phi ptr [ %19, %__netif_receive_skb_list_ptype.exit ], [ %pt_curr.051, %if.end.if.end10_crit_edge ]
  %39 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %skb, align 4
  %41 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %0, align 4
  %call.i.i25 = call zeroext i1 @__list_add_valid(ptr noundef %40, ptr noundef %42, ptr noundef nonnull %sublist) #35
  br i1 %call.i.i25, label %if.end.i.i26, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end.i.i26:                                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #37
  %43 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %40, ptr %0, align 4
  %44 = ptrtoint ptr %40 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %sublist, ptr %40, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %40, i32 0, i32 1
  %45 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %42, ptr %prev3.i.i, align 4
  %46 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %40, ptr %42, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i26, %if.end10.cleanup_crit_edge, %skb_list_del_init.exit.cleanup_crit_edge
  %od_curr.2 = phi ptr [ %od_curr.050, %skb_list_del_init.exit.cleanup_crit_edge ], [ %od_curr.1, %if.end10.cleanup_crit_edge ], [ %od_curr.1, %if.end.i.i26 ]
  %pt_curr.2 = phi ptr [ %pt_curr.051, %skb_list_del_init.exit.cleanup_crit_edge ], [ %pt_curr.1, %if.end10.cleanup_crit_edge ], [ %pt_curr.1, %if.end.i.i26 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pt_prev) #35
  %47 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %next.052, ptr %skb, align 4
  %cmp.not = icmp eq ptr %next.052, %head
  br i1 %cmp.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.end:                                          ; preds = %cleanup
  %tobool.not.i27 = icmp eq ptr %pt_curr.2, null
  br i1 %tobool.not.i27, label %for.end.__netif_receive_skb_list_ptype.exit46_crit_edge, label %if.end.i29

for.end.__netif_receive_skb_list_ptype.exit46_crit_edge: ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_list_ptype.exit46

if.end.i29:                                       ; preds = %for.end
  %48 = ptrtoint ptr %sublist to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile ptr, ptr %sublist, align 4
  %cmp.i.not.i28 = icmp eq ptr %49, %sublist
  br i1 %cmp.i.not.i28, label %if.end.i29.__netif_receive_skb_list_ptype.exit46_crit_edge, label %if.end3.i32

if.end.i29.__netif_receive_skb_list_ptype.exit46_crit_edge: ; preds = %if.end.i29
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_list_ptype.exit46

if.end3.i32:                                      ; preds = %if.end.i29
  %list_func.i30 = getelementptr inbounds %struct.packet_type, ptr %pt_curr.2, i32 0, i32 5
  %50 = ptrtoint ptr %list_func.i30 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %list_func.i30, align 4
  %cmp.not.i31 = icmp eq ptr %51, null
  br i1 %cmp.not.i31, label %for.body.lr.ph.i34, label %if.then4.i35

for.body.lr.ph.i34:                               ; preds = %if.end3.i32
  %func.i33 = getelementptr inbounds %struct.packet_type, ptr %pt_curr.2, i32 0, i32 4
  br label %for.body.i39

if.then4.i35:                                     ; preds = %if.end3.i32
  call void @__sanitizer_cov_trace_pc() #37
  call void %51(ptr noundef nonnull %sublist, ptr noundef nonnull %pt_curr.2, ptr noundef %od_curr.2) #35
  br label %__netif_receive_skb_list_ptype.exit46

for.body.i39:                                     ; preds = %skb_list_del_init.exit.i45.for.body.i39_crit_edge, %for.body.lr.ph.i34
  %skb.034.i36 = phi ptr [ %49, %for.body.lr.ph.i34 ], [ %next.0.i37, %skb_list_del_init.exit.i45.for.body.i39_crit_edge ]
  %52 = ptrtoint ptr %skb.034.i36 to i32
  call void @__asan_load4_noabort(i32 %52)
  %next.0.i37 = load ptr, ptr %skb.034.i36, align 8
  %call.i.i.i38 = call zeroext i1 @__list_del_entry_valid(ptr noundef %skb.034.i36) #35
  br i1 %call.i.i.i38, label %if.end.i.i.i42, label %for.body.i39.skb_list_del_init.exit.i45_crit_edge

for.body.i39.skb_list_del_init.exit.i45_crit_edge: ; preds = %for.body.i39
  call void @__sanitizer_cov_trace_pc() #37
  br label %skb_list_del_init.exit.i45

if.end.i.i.i42:                                   ; preds = %for.body.i39
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i.i40 = getelementptr inbounds %struct.list_head, ptr %skb.034.i36, i32 0, i32 1
  %53 = ptrtoint ptr %prev.i.i.i40 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %prev.i.i.i40, align 4
  %55 = ptrtoint ptr %skb.034.i36 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %skb.034.i36, align 4
  %prev1.i.i.i.i41 = getelementptr inbounds %struct.list_head, ptr %56, i32 0, i32 1
  %57 = ptrtoint ptr %prev1.i.i.i.i41 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %54, ptr %prev1.i.i.i.i41, align 4
  %58 = ptrtoint ptr %54 to i32
  call void @__asan_store4_noabort(i32 %58)
  store volatile ptr %56, ptr %54, align 4
  br label %skb_list_del_init.exit.i45

skb_list_del_init.exit.i45:                       ; preds = %if.end.i.i.i42, %for.body.i39.skb_list_del_init.exit.i45_crit_edge
  %59 = ptrtoint ptr %skb.034.i36 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr null, ptr %skb.034.i36, align 8
  %60 = ptrtoint ptr %func.i33 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %func.i33, align 4
  %62 = getelementptr inbounds %struct.anon.83, ptr %skb.034.i36, i32 0, i32 2
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %62, align 8
  %call12.i43 = call i32 %61(ptr noundef %skb.034.i36, ptr noundef %64, ptr noundef nonnull %pt_curr.2, ptr noundef %od_curr.2) #35
  %cmp11.not.i44 = icmp eq ptr %next.0.i37, %sublist
  br i1 %cmp11.not.i44, label %skb_list_del_init.exit.i45.__netif_receive_skb_list_ptype.exit46_crit_edge, label %skb_list_del_init.exit.i45.for.body.i39_crit_edge

skb_list_del_init.exit.i45.for.body.i39_crit_edge: ; preds = %skb_list_del_init.exit.i45
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i39

skb_list_del_init.exit.i45.__netif_receive_skb_list_ptype.exit46_crit_edge: ; preds = %skb_list_del_init.exit.i45
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_list_ptype.exit46

__netif_receive_skb_list_ptype.exit46:            ; preds = %skb_list_del_init.exit.i45.__netif_receive_skb_list_ptype.exit46_crit_edge, %if.then4.i35, %if.end.i29.__netif_receive_skb_list_ptype.exit46_crit_edge, %for.end.__netif_receive_skb_list_ptype.exit46_crit_edge, %entry.__netif_receive_skb_list_ptype.exit46_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sublist) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb_entry(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__netif_receive_skb(ptr noundef %skb) unnamed_addr #1 align 64 {
entry:
  %skb.addr.i12 = alloca ptr, align 4
  %pt_prev.i13 = alloca ptr, align 4
  %skb.addr.i = alloca ptr, align 4
  %pt_prev.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memalloc_socks_key, ptr blockaddress(@__netif_receive_skb, %land.lhs.true)) #35
          to label %if.else [label %land.lhs.true], !srcloc !1328

land.lhs.true:                                    ; preds = %entry
  %pfmemalloc.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %0 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i = load i8, ptr %pfmemalloc.i, align 2
  %1 = and i8 %bf.load.i, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.i.not = icmp eq i8 %1, 0
  br i1 %tobool.i.not, label %land.lhs.true.if.else_crit_edge, label %if.then

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  %2 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags1.i, align 4
  %and.i = and i32 %7, 2048
  %or.i = or i32 %7, 2048
  store i32 %or.i, ptr %flags1.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb.addr.i)
  %8 = ptrtoint ptr %skb.addr.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %skb, ptr %skb.addr.i, align 4
  %9 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pt_prev.i) #35
  %12 = ptrtoint ptr %pt_prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %pt_prev.i, align 4
  %call.i = call fastcc i32 @__netif_receive_skb_core(ptr noundef nonnull %skb.addr.i, i1 noundef zeroext true, ptr noundef nonnull %pt_prev.i) #35
  %13 = ptrtoint ptr %pt_prev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pt_prev.i, align 4
  %tobool1.not.i = icmp eq ptr %14, null
  br i1 %tobool1.not.i, label %if.then.__netif_receive_skb_one_core.exit_crit_edge, label %if.then.i

if.then.__netif_receive_skb_one_core.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_one_core.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %func.i = getelementptr inbounds %struct.packet_type, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %func.i, align 4
  %17 = ptrtoint ptr %skb.addr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %skb.addr.i, align 4
  %19 = getelementptr inbounds %struct.anon.83, ptr %18, i32 0, i32 2
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 8
  %call2.i = tail call i32 %16(ptr noundef %18, ptr noundef %21, ptr noundef nonnull %14, ptr noundef %11) #35
  br label %__netif_receive_skb_one_core.exit

__netif_receive_skb_one_core.exit:                ; preds = %if.then.i, %if.then.__netif_receive_skb_one_core.exit_crit_edge
  %ret.0.i = phi i32 [ %call2.i, %if.then.i ], [ %call.i, %if.then.__netif_receive_skb_one_core.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pt_prev.i) #35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb.addr.i)
  %22 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i7 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i7 to ptr
  %task.i8 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %task.i8 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %task.i8, align 8
  %flags1.i9 = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %flags1.i9 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags1.i9, align 4
  %and.i10 = and i32 %27, -2049
  %or.i11 = or i32 %and.i10, %and.i
  store i32 %or.i11, ptr %flags1.i9, align 4
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %skb.addr.i12)
  %28 = ptrtoint ptr %skb.addr.i12 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %skb, ptr %skb.addr.i12, align 4
  %29 = getelementptr inbounds %struct.anon.83, ptr %skb, i32 0, i32 2
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pt_prev.i13) #35
  %32 = ptrtoint ptr %pt_prev.i13 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %pt_prev.i13, align 4
  %call.i14 = call fastcc i32 @__netif_receive_skb_core(ptr noundef nonnull %skb.addr.i12, i1 noundef zeroext false, ptr noundef nonnull %pt_prev.i13) #35
  %33 = ptrtoint ptr %pt_prev.i13 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pt_prev.i13, align 4
  %tobool1.not.i15 = icmp eq ptr %34, null
  br i1 %tobool1.not.i15, label %if.else.__netif_receive_skb_one_core.exit20_crit_edge, label %if.then.i18

if.else.__netif_receive_skb_one_core.exit20_crit_edge: ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netif_receive_skb_one_core.exit20

if.then.i18:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  %func.i16 = getelementptr inbounds %struct.packet_type, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %func.i16 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %func.i16, align 4
  %37 = ptrtoint ptr %skb.addr.i12 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %skb.addr.i12, align 4
  %39 = getelementptr inbounds %struct.anon.83, ptr %38, i32 0, i32 2
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 8
  %call2.i17 = tail call i32 %36(ptr noundef %38, ptr noundef %41, ptr noundef nonnull %34, ptr noundef %31) #35
  br label %__netif_receive_skb_one_core.exit20

__netif_receive_skb_one_core.exit20:              ; preds = %if.then.i18, %if.else.__netif_receive_skb_one_core.exit20_crit_edge
  %ret.0.i19 = phi i32 [ %call2.i17, %if.then.i18 ], [ %call.i14, %if.else.__netif_receive_skb_one_core.exit20_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pt_prev.i13) #35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %skb.addr.i12)
  br label %if.end

if.end:                                           ; preds = %__netif_receive_skb_one_core.exit20, %__netif_receive_skb_one_core.exit
  %ret.0 = phi i32 [ %ret.0.i, %__netif_receive_skb_one_core.exit ], [ %ret.0.i19, %__netif_receive_skb_one_core.exit20 ]
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb_exit(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb_list_entry(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_netif_receive_skb_list_exit(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_start_range_ns(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_napi_poll(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @napi_threaded_poll(ptr noundef %data) #1 align 64 {
entry:
  %repoll = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call14 = tail call fastcc i32 @napi_thread_wait(ptr noundef %data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool.not15 = icmp eq i32 %call14, 0
  br i1 %tobool.not15, label %for.cond.preheader.lr.ph, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

for.cond.preheader.lr.ph:                         ; preds = %entry
  %dev1.i = getelementptr inbounds %struct.napi_struct, ptr %data, i32 0, i32 7
  %poll_owner.i = getelementptr inbounds %struct.napi_struct, ptr %data, i32 0, i32 6
  %tobool.not.i9 = icmp eq ptr %data, null
  br label %for.cond

while.cond.critedge:                              ; preds = %netpoll_poll_unlock.exit
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %repoll) #35
  %call = tail call fastcc i32 @napi_thread_wait(ptr noundef %data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %while.cond.critedge.for.cond.backedge_crit_edge, label %while.cond.critedge.while.end_crit_edge

while.cond.critedge.while.end_crit_edge:          ; preds = %while.cond.critedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end

while.cond.critedge.for.cond.backedge_crit_edge:  ; preds = %while.cond.critedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.backedge

for.cond:                                         ; preds = %for.cond.backedge, %for.cond.preheader.lr.ph
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %repoll) #35
  %0 = ptrtoint ptr %repoll to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %repoll, align 1
  tail call fastcc void @local_bh_disable()
  %1 = ptrtoint ptr %dev1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dev1.i, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %for.cond.netpoll_poll_lock.exit.thread_crit_edge, label %land.lhs.true.i

for.cond.netpoll_poll_lock.exit.thread_crit_edge: ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %netpoll_poll_lock.exit.thread

land.lhs.true.i:                                  ; preds = %for.cond
  %npinfo.i = getelementptr inbounds %struct.net_device, ptr %2, i32 0, i32 126
  %3 = ptrtoint ptr %npinfo.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %npinfo.i, align 16
  %tobool2.not.i = icmp eq ptr %4, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.netpoll_poll_lock.exit.thread_crit_edge, label %if.then.i

land.lhs.true.i.netpoll_poll_lock.exit.thread_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netpoll_poll_lock.exit.thread

if.then.i:                                        ; preds = %land.lhs.true.i
  %5 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  br label %while.cond.i

while.cond.i:                                     ; preds = %do.end22.i, %if.then.i
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %poll_owner.i, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1389
  tail call void @llvm.prefetch.p0(ptr %poll_owner.i, i32 1, i32 3, i32 1) #35
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %while.cond.i
  %9 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %poll_owner.i, i32 -1, i32 %8) #35, !srcloc !1382
  %asmresult.i.i = extractvalue { i32, i32 } %9, 0
  %tobool.not.i.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool.not.i.i, label %__cmpxchg.exit.i, label %do.body.i.i.do.body.i.i_crit_edge

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i.i

__cmpxchg.exit.i:                                 ; preds = %do.body.i.i
  %asmresult1.i.i = extractvalue { i32, i32 } %9, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1390
  %cmp.not.i = icmp eq i32 %asmresult1.i.i, -1
  br i1 %cmp.not.i, label %netpoll_poll_lock.exit, label %do.end22.i

do.end22.i:                                       ; preds = %__cmpxchg.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1391
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #35, !srcloc !1392
  br label %while.cond.i

netpoll_poll_lock.exit.thread:                    ; preds = %land.lhs.true.i.netpoll_poll_lock.exit.thread_crit_edge, %for.cond.netpoll_poll_lock.exit.thread_crit_edge
  %call212 = call fastcc i32 @__napi_poll(ptr noundef %data, ptr noundef nonnull %repoll)
  br label %netpoll_poll_unlock.exit

netpoll_poll_lock.exit:                           ; preds = %__cmpxchg.exit.i
  %call2 = call fastcc i32 @__napi_poll(ptr noundef %data, ptr noundef nonnull %repoll)
  br i1 %tobool.not.i9, label %netpoll_poll_lock.exit.netpoll_poll_unlock.exit_crit_edge, label %do.end5.i

netpoll_poll_lock.exit.netpoll_poll_unlock.exit_crit_edge: ; preds = %netpoll_poll_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %netpoll_poll_unlock.exit

do.end5.i:                                        ; preds = %netpoll_poll_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1399
  %10 = ptrtoint ptr %poll_owner.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile i32 -1, ptr %poll_owner.i, align 4
  br label %netpoll_poll_unlock.exit

netpoll_poll_unlock.exit:                         ; preds = %do.end5.i, %netpoll_poll_lock.exit.netpoll_poll_unlock.exit_crit_edge, %netpoll_poll_lock.exit.thread
  tail call fastcc void @local_bh_enable()
  %11 = ptrtoint ptr %repoll to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %repoll, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool3.not = icmp eq i8 %12, 0
  br i1 %tobool3.not, label %while.cond.critedge, label %if.end

if.end:                                           ; preds = %netpoll_poll_unlock.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__might_resched(ptr noundef nonnull @.str.3, i32 noundef 6490, i32 noundef 0) #35
  %call.i = tail call i32 @__cond_resched() #35
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %repoll) #35
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end, %while.cond.critedge.for.cond.backedge_crit_edge
  br label %for.cond

while.end:                                        ; preds = %while.cond.critedge.while.end_crit_edge, %entry.while.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @napi_thread_wait(ptr noundef %napi) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  br label %__here

__here:                                           ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 212
  %4 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 ptrtoint (ptr blockaddress(@napi_thread_wait, %__here) to i32), ptr %task_state_change, align 4
  %5 = load ptr, ptr %task, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 1, ptr %5, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1444
  %call60334 = tail call zeroext i1 @kthread_should_stop() #35
  br i1 %call60334, label %__here.cleanup_crit_edge, label %while.body.lr.ph

__here.cleanup_crit_edge:                         ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

while.body.lr.ph:                                 ; preds = %__here
  %state = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 1
  %7 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %state, align 4
  %9 = and i32 %8, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool64.not.not = icmp eq i32 %9, 0
  br i1 %tobool64.not.not, label %if.end172, label %while.body.lr.ph.if.then66_crit_edge

while.body.lr.ph.if.then66_crit_edge:             ; preds = %while.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then66

if.then66:                                        ; preds = %while.body.1, %while.body.lr.ph.if.then66_crit_edge
  %10 = ptrtoint ptr %napi to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %napi, align 4
  %cmp.i.not = icmp eq ptr %11, %napi
  br i1 %cmp.i.not, label %if.then66.cleanup_crit_edge, label %do.end87, !prof !1311

if.then66.cleanup_crit_edge:                      ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

do.end87:                                         ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 6455, i32 noundef 9, ptr noundef null) #35
  br label %cleanup

if.end172:                                        ; preds = %while.body.lr.ph
  tail call void @schedule() #35
  br label %__here223

__here223:                                        ; preds = %if.end172
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %task_state_change227 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 212
  %14 = ptrtoint ptr %task_state_change227 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 ptrtoint (ptr blockaddress(@napi_thread_wait, %__here223) to i32), ptr %task_state_change227, align 4
  %15 = load ptr, ptr %task, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile i32 1, ptr %15, align 128
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1445
  %call60 = tail call zeroext i1 @kthread_should_stop() #35
  br i1 %call60, label %__here223.cleanup_crit_edge, label %while.body.1

__here223.cleanup_crit_edge:                      ; preds = %__here223
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

while.body.1:                                     ; preds = %__here223
  call void @__sanitizer_cov_trace_pc() #37
  %17 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %state, align 4
  br label %if.then66

cleanup:                                          ; preds = %__here223.cleanup_crit_edge, %do.end87, %if.then66.cleanup_crit_edge, %__here.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then66.cleanup_crit_edge ], [ 0, %do.end87 ], [ -1, %__here.cleanup_crit_edge ], [ -1, %__here223.cleanup_crit_edge ]
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %task_state_change307 = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 212
  %21 = ptrtoint ptr %task_state_change307 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 ptrtoint (ptr blockaddress(@napi_thread_wait, %cleanup) to i32), ptr %task_state_change307, align 4
  %22 = load ptr, ptr %task, align 8
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile i32 0, ptr %22, align 128
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__napi_poll(ptr noundef %n, ptr nocapture noundef writeonly %repoll) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %weight1 = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 2
  %0 = ptrtoint ptr %weight1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %weight1, align 4
  %state = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 1
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state, align 4
  %and1.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %poll = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 5
  %4 = ptrtoint ptr %poll to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %poll, align 8
  %call2 = tail call i32 %5(ptr noundef %n, i32 noundef %1) #35
  tail call fastcc void @trace_napi_poll(ptr noundef %n, i32 noundef %call2, i32 noundef %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %work.0 = phi i32 [ %call2, %if.then ], [ 0, %entry.if.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %work.0, i32 %1)
  %cmp = icmp sgt i32 %work.0, %1
  br i1 %cmp, label %do.body, label %if.end.if.end10_crit_edge, !prof !1310

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

do.body:                                          ; preds = %if.end
  %.b112 = load i1, ptr @__napi_poll.__print_once, align 1
  br i1 %.b112, label %do.body.if.end10_crit_edge, label %if.then7

do.body.if.end10_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end10

if.then7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__napi_poll.__print_once, align 1
  %dev = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 7
  %6 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev, align 8
  %poll8 = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 5
  %8 = ptrtoint ptr %poll8 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %poll8, align 8
  tail call void (ptr, ptr, ptr, ...) @netdev_printk(ptr noundef nonnull @.str.60, ptr noundef %7, ptr noundef nonnull @.str.156, ptr noundef %9, i32 noundef %work.0, i32 noundef %1) #43
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %do.body.if.end10_crit_edge, %if.end.if.end10_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %work.0, i32 %1)
  %cmp11 = icmp slt i32 %work.0, %1
  br i1 %cmp11, label %if.end10.cleanup_crit_edge, label %if.end19, !prof !1311

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end19:                                         ; preds = %if.end10
  %10 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %state, align 4
  %12 = and i32 %11, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i.not = icmp eq i32 %12, 0
  br i1 %tobool.i.not, label %if.end29, label %if.then27, !prof !1311

if.then27:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #37
  %call.i = tail call zeroext i1 @napi_complete_done(ptr noundef %n, i32 noundef 0) #35
  br label %cleanup

if.end29:                                         ; preds = %if.end19
  %13 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %state, align 4
  %15 = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i114.not = icmp eq i32 %15, 0
  br i1 %tobool.i114.not, label %if.end35, label %if.then31

if.then31:                                        ; preds = %if.end29
  %call32 = tail call zeroext i1 @napi_complete_done(ptr noundef %n, i32 noundef %work.0)
  br i1 %call32, label %if.then33, label %if.then31.cleanup_crit_edge

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then33:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @napi_schedule(ptr noundef %n)
  br label %cleanup

if.end35:                                         ; preds = %if.end29
  %gro_bitmask = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 4
  %16 = ptrtoint ptr %gro_bitmask to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %gro_bitmask, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool36.not = icmp eq i32 %17, 0
  br i1 %tobool36.not, label %if.end35.if.end38_crit_edge, label %if.then37

if.end35.if.end38_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end38

if.then37:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @napi_gro_flush(ptr noundef %n, i1 noundef zeroext false) #35
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %if.end35.if.end38_crit_edge
  %rx_count.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 11
  %18 = ptrtoint ptr %rx_count.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rx_count.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i, label %if.end38.gro_normal_list.exit_crit_edge, label %if.end.i

if.end38.gro_normal_list.exit_crit_edge:          ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #37
  br label %gro_normal_list.exit

if.end.i:                                         ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #37
  %rx_list.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 10
  tail call void @netif_receive_skb_list_internal(ptr noundef %rx_list.i) #35
  %20 = ptrtoint ptr %rx_list.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %rx_list.i, ptr %rx_list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 10, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %rx_list.i, ptr %prev.i.i, align 4
  %22 = ptrtoint ptr %rx_count.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %rx_count.i, align 8
  br label %gro_normal_list.exit

gro_normal_list.exit:                             ; preds = %if.end.i, %if.end38.gro_normal_list.exit_crit_edge
  %23 = ptrtoint ptr %n to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %n, align 4
  %cmp.i.not = icmp eq ptr %24, %n
  br i1 %cmp.i.not, label %if.end76, label %land.end, !prof !1311

land.end:                                         ; preds = %gro_normal_list.exit
  %.b110111 = load i1, ptr @__napi_poll.__already_done, align 1
  br i1 %.b110111, label %land.end.cleanup_crit_edge, label %if.then60, !prof !1311

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then60:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @__napi_poll.__already_done, align 1
  %dev64 = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 7
  %25 = ptrtoint ptr %dev64 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dev64, align 8
  %tobool65.not = icmp eq ptr %26, null
  %spec.select = select i1 %tobool65.not, ptr @.str.159, ptr %26
  %call67 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.157, ptr noundef nonnull %spec.select) #41
  br label %cleanup

if.end76:                                         ; preds = %gro_normal_list.exit
  call void @__sanitizer_cov_trace_pc() #37
  %27 = ptrtoint ptr %repoll to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 1, ptr %repoll, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end76, %if.then60, %land.end.cleanup_crit_edge, %if.then33, %if.then31.cleanup_crit_edge, %if.then27, %if.end10.cleanup_crit_edge
  ret i32 %work.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_should_stop() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @napi_schedule(ptr noundef %n) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  %state.i = getelementptr inbounds %struct.napi_struct, ptr %n, i32 0, i32 1
  br label %do.body.i

do.body.i:                                        ; preds = %__cmpxchg.exit.i.do.body.i_crit_edge, %entry
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 8
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.body.i.if.end_crit_edge, !prof !1311

do.body.i.if.end_crit_edge:                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.end.i:                                         ; preds = %do.body.i
  %and4.i = and i32 %1, 1
  %mul.i = shl nuw nsw i32 %and4.i, 1
  %or.i = or i32 %1, %mul.i
  %or5.i = or i32 %or.i, 1
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %state.i, i32 noundef 4) #35
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1381
  tail call void @llvm.prefetch.p0(ptr %state.i, i32 1, i32 3, i32 1) #35
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %if.end.i
  %2 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %state.i, i32 %1, i32 %or5.i) #35, !srcloc !1382
  %asmresult.i.i = extractvalue { i32, i32 } %2, 0
  %tobool.not.i.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool.not.i.i, label %__cmpxchg.exit.i, label %do.body.i.i.do.body.i.i_crit_edge

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i.i

__cmpxchg.exit.i:                                 ; preds = %do.body.i.i
  %asmresult1.i.i = extractvalue { i32, i32 } %2, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1383
  %cmp.not.i = icmp eq i32 %asmresult1.i.i, %1
  br i1 %cmp.not.i, label %napi_schedule_prep.exit, label %__cmpxchg.exit.i.do.body.i_crit_edge

__cmpxchg.exit.i.do.body.i_crit_edge:             ; preds = %__cmpxchg.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i

napi_schedule_prep.exit:                          ; preds = %__cmpxchg.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool28.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool28.not.i, label %if.then, label %napi_schedule_prep.exit.if.end_crit_edge

napi_schedule_prep.exit.if.end_crit_edge:         ; preds = %napi_schedule_prep.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %napi_schedule_prep.exit
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__napi_schedule(ptr noundef %n)
  br label %if.end

if.end:                                           ; preds = %if.then, %napi_schedule_prep.exit.if.end_crit_edge, %do.body.i.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__netdev_update_upper_level(ptr noundef %dev, ptr nocapture noundef readnone %__unused) unnamed_addr #24 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %0 = ptrtoint ptr %adj_list.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adj_list.i, align 4
  %cmp.i.i = icmp eq ptr %1, %adj_list.i
  br i1 %cmp.i.i, label %entry.__netdev_upper_depth.exit_crit_edge, label %__netdev_next_upper_dev.exit.i

entry.__netdev_upper_depth.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_upper_depth.exit

__netdev_next_upper_dev.exit.i:                   ; preds = %entry
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 -16
  %2 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i.i, align 4
  %tobool.not21.i = icmp eq ptr %3, null
  br i1 %tobool.not21.i, label %__netdev_next_upper_dev.exit.i.__netdev_upper_depth.exit_crit_edge, label %__netdev_next_upper_dev.exit.i.for.body.i_crit_edge

__netdev_next_upper_dev.exit.i.for.body.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i
  br label %for.body.i

__netdev_next_upper_dev.exit.i.__netdev_upper_depth.exit_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_upper_depth.exit

for.body.i:                                       ; preds = %__netdev_next_upper_dev.exit19.i.for.body.i_crit_edge, %__netdev_next_upper_dev.exit.i.for.body.i_crit_edge
  %max_depth.025.i = phi i8 [ %max_depth.1.i, %__netdev_next_upper_dev.exit19.i.for.body.i_crit_edge ], [ 0, %__netdev_next_upper_dev.exit.i.for.body.i_crit_edge ]
  %udev.024.i = phi ptr [ %11, %__netdev_next_upper_dev.exit19.i.for.body.i_crit_edge ], [ %3, %__netdev_next_upper_dev.exit.i.for.body.i_crit_edge ]
  %iter.122.i = phi ptr [ %9, %__netdev_next_upper_dev.exit19.i.for.body.i_crit_edge ], [ %1, %__netdev_next_upper_dev.exit.i.for.body.i_crit_edge ]
  %ignore.123.in.i = getelementptr i8, ptr %iter.122.i, i32 -7
  %4 = ptrtoint ptr %ignore.123.in.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %ignore.123.i = load i8, ptr %ignore.123.in.i, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %ignore.123.i)
  %tobool1.not.i = icmp eq i8 %ignore.123.i, 0
  br i1 %tobool1.not.i, label %if.end.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %upper_level.i = getelementptr inbounds %struct.net_device, ptr %udev.024.i, i32 0, i32 57
  %5 = ptrtoint ptr %upper_level.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %upper_level.i, align 2
  %7 = tail call i8 @llvm.umax.i8(i8 %max_depth.025.i, i8 %6) #35
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i, %for.body.i.for.inc.i_crit_edge
  %max_depth.1.i = phi i8 [ %max_depth.025.i, %for.body.i.for.inc.i_crit_edge ], [ %7, %if.end.i ]
  %8 = ptrtoint ptr %iter.122.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %iter.122.i, align 4
  %cmp.i14.i = icmp eq ptr %9, %adj_list.i
  br i1 %cmp.i14.i, label %for.inc.i.__netdev_upper_depth.exit_crit_edge, label %__netdev_next_upper_dev.exit19.i

for.inc.i.__netdev_upper_depth.exit_crit_edge:    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_upper_depth.exit

__netdev_next_upper_dev.exit19.i:                 ; preds = %for.inc.i
  %add.ptr.i15.i = getelementptr i8, ptr %9, i32 -16
  %10 = ptrtoint ptr %add.ptr.i15.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %add.ptr.i15.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %__netdev_next_upper_dev.exit19.i.__netdev_upper_depth.exit_crit_edge, label %__netdev_next_upper_dev.exit19.i.for.body.i_crit_edge

__netdev_next_upper_dev.exit19.i.for.body.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

__netdev_next_upper_dev.exit19.i.__netdev_upper_depth.exit_crit_edge: ; preds = %__netdev_next_upper_dev.exit19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_upper_depth.exit

__netdev_upper_depth.exit:                        ; preds = %__netdev_next_upper_dev.exit19.i.__netdev_upper_depth.exit_crit_edge, %for.inc.i.__netdev_upper_depth.exit_crit_edge, %__netdev_next_upper_dev.exit.i.__netdev_upper_depth.exit_crit_edge, %entry.__netdev_upper_depth.exit_crit_edge
  %max_depth.0.lcssa.i = phi i8 [ 0, %__netdev_next_upper_dev.exit.i.__netdev_upper_depth.exit_crit_edge ], [ 0, %entry.__netdev_upper_depth.exit_crit_edge ], [ %max_depth.1.i, %__netdev_next_upper_dev.exit19.i.__netdev_upper_depth.exit_crit_edge ], [ %max_depth.1.i, %for.inc.i.__netdev_upper_depth.exit_crit_edge ]
  %add = add i8 %max_depth.0.lcssa.i, 1
  %upper_level = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 57
  %12 = ptrtoint ptr %upper_level to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %add, ptr %upper_level, align 2
  ret i32 0
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__netdev_walk_all_lower_dev(ptr noundef %dev) unnamed_addr #24 align 64 {
entry:
  %dev_stack = alloca [9 x ptr], align 4
  %iter_stack = alloca [9 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack) #35
  %0 = call ptr @memset(ptr %dev_stack, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack) #35
  %1 = call ptr @memset(ptr %iter_stack, i32 255, i32 36)
  %lower = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %storemerge = phi ptr [ %lower, %entry ], [ %storemerge.be, %while.cond.backedge ]
  %now.0 = phi ptr [ %dev, %entry ], [ %now.0.be, %while.cond.backedge ]
  %cur.0 = phi i32 [ 0, %entry ], [ %cur.0.be, %while.cond.backedge ]
  %cmp.not = icmp eq ptr %now.0, %dev
  br i1 %cmp.not, label %while.cond.if.end2_crit_edge, label %if.then

while.cond.if.end2_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.then:                                          ; preds = %while.cond
  %adj_list.i.i = getelementptr inbounds %struct.net_device, ptr %now.0, i32 0, i32 13
  %2 = ptrtoint ptr %adj_list.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %adj_list.i.i, align 4
  %cmp.i.i.i = icmp eq ptr %3, %adj_list.i.i
  br i1 %cmp.i.i.i, label %if.then.__netdev_update_upper_level.exit_crit_edge, label %__netdev_next_upper_dev.exit.i.i

if.then.__netdev_update_upper_level.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit

__netdev_next_upper_dev.exit.i.i:                 ; preds = %if.then
  %add.ptr.i.i.i = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i.i.i, align 4
  %tobool.not21.i.i = icmp eq ptr %5, null
  br i1 %tobool.not21.i.i, label %__netdev_next_upper_dev.exit.i.i.__netdev_update_upper_level.exit_crit_edge, label %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge

__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i.i
  br label %for.body.i.i

__netdev_next_upper_dev.exit.i.i.__netdev_update_upper_level.exit_crit_edge: ; preds = %__netdev_next_upper_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit

for.body.i.i:                                     ; preds = %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge, %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge
  %max_depth.025.i.i = phi i8 [ %max_depth.1.i.i, %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge ], [ 0, %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge ]
  %udev.024.i.i = phi ptr [ %13, %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge ], [ %5, %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge ]
  %iter.122.i.i = phi ptr [ %11, %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge ], [ %3, %__netdev_next_upper_dev.exit.i.i.for.body.i.i_crit_edge ]
  %ignore.123.in.i.i = getelementptr i8, ptr %iter.122.i.i, i32 -7
  %6 = ptrtoint ptr %ignore.123.in.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %ignore.123.i.i = load i8, ptr %ignore.123.in.i.i, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %ignore.123.i.i)
  %tobool1.not.i.i = icmp eq i8 %ignore.123.i.i, 0
  br i1 %tobool1.not.i.i, label %if.end.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %upper_level.i.i = getelementptr inbounds %struct.net_device, ptr %udev.024.i.i, i32 0, i32 57
  %7 = ptrtoint ptr %upper_level.i.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %upper_level.i.i, align 2
  %9 = tail call i8 @llvm.umax.i8(i8 %max_depth.025.i.i, i8 %8) #35
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end.i.i, %for.body.i.i.for.inc.i.i_crit_edge
  %max_depth.1.i.i = phi i8 [ %max_depth.025.i.i, %for.body.i.i.for.inc.i.i_crit_edge ], [ %9, %if.end.i.i ]
  %10 = ptrtoint ptr %iter.122.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %iter.122.i.i, align 4
  %cmp.i14.i.i = icmp eq ptr %11, %adj_list.i.i
  br i1 %cmp.i14.i.i, label %for.inc.i.i.__netdev_update_upper_level.exit_crit_edge, label %__netdev_next_upper_dev.exit19.i.i

for.inc.i.i.__netdev_update_upper_level.exit_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit

__netdev_next_upper_dev.exit19.i.i:               ; preds = %for.inc.i.i
  %add.ptr.i15.i.i = getelementptr i8, ptr %11, i32 -16
  %12 = ptrtoint ptr %add.ptr.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %add.ptr.i15.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i, label %__netdev_next_upper_dev.exit19.i.i.__netdev_update_upper_level.exit_crit_edge, label %__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge

__netdev_next_upper_dev.exit19.i.i.for.body.i.i_crit_edge: ; preds = %__netdev_next_upper_dev.exit19.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i.i

__netdev_next_upper_dev.exit19.i.i.__netdev_update_upper_level.exit_crit_edge: ; preds = %__netdev_next_upper_dev.exit19.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_update_upper_level.exit

__netdev_update_upper_level.exit:                 ; preds = %__netdev_next_upper_dev.exit19.i.i.__netdev_update_upper_level.exit_crit_edge, %for.inc.i.i.__netdev_update_upper_level.exit_crit_edge, %__netdev_next_upper_dev.exit.i.i.__netdev_update_upper_level.exit_crit_edge, %if.then.__netdev_update_upper_level.exit_crit_edge
  %max_depth.0.lcssa.i.i = phi i8 [ 0, %__netdev_next_upper_dev.exit.i.i.__netdev_update_upper_level.exit_crit_edge ], [ 0, %if.then.__netdev_update_upper_level.exit_crit_edge ], [ %max_depth.1.i.i, %__netdev_next_upper_dev.exit19.i.i.__netdev_update_upper_level.exit_crit_edge ], [ %max_depth.1.i.i, %for.inc.i.i.__netdev_update_upper_level.exit_crit_edge ]
  %add.i = add i8 %max_depth.0.lcssa.i.i, 1
  %upper_level.i = getelementptr inbounds %struct.net_device, ptr %now.0, i32 0, i32 57
  %14 = ptrtoint ptr %upper_level.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %add.i, ptr %upper_level.i, align 2
  br label %if.end2

if.end2:                                          ; preds = %__netdev_update_upper_level.exit, %while.cond.if.end2_crit_edge
  %lower1.i = getelementptr inbounds %struct.net_device, ptr %now.0, i32 0, i32 13, i32 1
  br label %while.cond3

while.cond3:                                      ; preds = %if.end8.while.cond3_crit_edge, %if.end2
  %iter.0 = phi ptr [ %storemerge, %if.end2 ], [ %16, %if.end8.while.cond3_crit_edge ]
  %15 = ptrtoint ptr %iter.0 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %iter.0, align 4
  %cmp.i = icmp eq ptr %16, %lower1.i
  br i1 %cmp.i, label %while.cond3.if.then16_crit_edge, label %__netdev_next_lower_dev.exit

while.cond3.if.then16_crit_edge:                  ; preds = %while.cond3
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16

__netdev_next_lower_dev.exit:                     ; preds = %while.cond3
  %add.ptr.i = getelementptr i8, ptr %16, i32 -16
  %17 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %add.ptr.i, align 4
  %tobool6.not = icmp eq ptr %18, null
  br i1 %tobool6.not, label %__netdev_next_lower_dev.exit.if.then16_crit_edge, label %if.end8

__netdev_next_lower_dev.exit.if.then16_crit_edge: ; preds = %__netdev_next_lower_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16

if.end8:                                          ; preds = %__netdev_next_lower_dev.exit
  %ignore3.i = getelementptr i8, ptr %16, i32 -7
  %19 = ptrtoint ptr %ignore3.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %ignore3.i, align 1, !range !1333
  %tobool9.not = icmp eq i8 %20, 0
  br i1 %tobool9.not, label %while.end, label %if.end8.while.cond3_crit_edge

if.end8.while.cond3_crit_edge:                    ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond3

while.end:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  %lower13 = getelementptr inbounds %struct.net_device, ptr %18, i32 0, i32 13, i32 1
  %arrayidx = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %cur.0
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %now.0, ptr %arrayidx, align 4
  %inc = add i32 %cur.0, 1
  %arrayidx14 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %cur.0
  %22 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %16, ptr %arrayidx14, align 4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end19, %while.end
  %storemerge.be = phi ptr [ %lower13, %while.end ], [ %26, %if.end19 ]
  %now.0.be = phi ptr [ %18, %while.end ], [ %24, %if.end19 ]
  %cur.0.be = phi i32 [ %inc, %while.end ], [ %dec, %if.end19 ]
  br label %while.cond

if.then16:                                        ; preds = %__netdev_next_lower_dev.exit.if.then16_crit_edge, %while.cond3.if.then16_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0)
  %tobool17.not = icmp eq i32 %cur.0, 0
  br i1 %tobool17.not, label %cleanup, label %if.end19

if.end19:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #37
  %dec = add i32 %cur.0, -1
  %arrayidx20 = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %dec
  %23 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx20, align 4
  %arrayidx21 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %dec
  %25 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx21, align 4
  br label %while.cond.backedge

cleanup:                                          ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @__netdev_update_lower_level(ptr noundef %dev, ptr noundef readonly %priv) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %lower.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %0 = ptrtoint ptr %lower.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %lower.i, align 4
  %cmp.i.i = icmp eq ptr %1, %lower.i
  br i1 %cmp.i.i, label %entry.__netdev_lower_depth.exit_crit_edge, label %__netdev_next_lower_dev.exit.i

entry.__netdev_lower_depth.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit

__netdev_next_lower_dev.exit.i:                   ; preds = %entry
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 -16
  %2 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i.i, align 4
  %tobool.not21.i = icmp eq ptr %3, null
  br i1 %tobool.not21.i, label %__netdev_next_lower_dev.exit.i.__netdev_lower_depth.exit_crit_edge, label %__netdev_next_lower_dev.exit.i.for.body.i_crit_edge

__netdev_next_lower_dev.exit.i.for.body.i_crit_edge: ; preds = %__netdev_next_lower_dev.exit.i
  br label %for.body.i

__netdev_next_lower_dev.exit.i.__netdev_lower_depth.exit_crit_edge: ; preds = %__netdev_next_lower_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit

for.body.i:                                       ; preds = %__netdev_next_lower_dev.exit19.i.for.body.i_crit_edge, %__netdev_next_lower_dev.exit.i.for.body.i_crit_edge
  %max_depth.025.i = phi i8 [ %max_depth.1.i, %__netdev_next_lower_dev.exit19.i.for.body.i_crit_edge ], [ 0, %__netdev_next_lower_dev.exit.i.for.body.i_crit_edge ]
  %ldev.024.i = phi ptr [ %11, %__netdev_next_lower_dev.exit19.i.for.body.i_crit_edge ], [ %3, %__netdev_next_lower_dev.exit.i.for.body.i_crit_edge ]
  %iter.122.i = phi ptr [ %9, %__netdev_next_lower_dev.exit19.i.for.body.i_crit_edge ], [ %1, %__netdev_next_lower_dev.exit.i.for.body.i_crit_edge ]
  %ignore.123.in.i = getelementptr i8, ptr %iter.122.i, i32 -7
  %4 = ptrtoint ptr %ignore.123.in.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %ignore.123.i = load i8, ptr %ignore.123.in.i, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %ignore.123.i)
  %tobool1.not.i = icmp eq i8 %ignore.123.i, 0
  br i1 %tobool1.not.i, label %if.end.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  %lower_level.i = getelementptr inbounds %struct.net_device, ptr %ldev.024.i, i32 0, i32 58
  %5 = ptrtoint ptr %lower_level.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %lower_level.i, align 1
  %7 = tail call i8 @llvm.umax.i8(i8 %max_depth.025.i, i8 %6) #35
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i, %for.body.i.for.inc.i_crit_edge
  %max_depth.1.i = phi i8 [ %max_depth.025.i, %for.body.i.for.inc.i_crit_edge ], [ %7, %if.end.i ]
  %8 = ptrtoint ptr %iter.122.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %iter.122.i, align 4
  %cmp.i14.i = icmp eq ptr %9, %lower.i
  br i1 %cmp.i14.i, label %for.inc.i.__netdev_lower_depth.exit_crit_edge, label %__netdev_next_lower_dev.exit19.i

for.inc.i.__netdev_lower_depth.exit_crit_edge:    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit

__netdev_next_lower_dev.exit19.i:                 ; preds = %for.inc.i
  %add.ptr.i15.i = getelementptr i8, ptr %9, i32 -16
  %10 = ptrtoint ptr %add.ptr.i15.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %add.ptr.i15.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %__netdev_next_lower_dev.exit19.i.__netdev_lower_depth.exit_crit_edge, label %__netdev_next_lower_dev.exit19.i.for.body.i_crit_edge

__netdev_next_lower_dev.exit19.i.for.body.i_crit_edge: ; preds = %__netdev_next_lower_dev.exit19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body.i

__netdev_next_lower_dev.exit19.i.__netdev_lower_depth.exit_crit_edge: ; preds = %__netdev_next_lower_dev.exit19.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__netdev_lower_depth.exit

__netdev_lower_depth.exit:                        ; preds = %__netdev_next_lower_dev.exit19.i.__netdev_lower_depth.exit_crit_edge, %for.inc.i.__netdev_lower_depth.exit_crit_edge, %__netdev_next_lower_dev.exit.i.__netdev_lower_depth.exit_crit_edge, %entry.__netdev_lower_depth.exit_crit_edge
  %max_depth.0.lcssa.i = phi i8 [ 0, %__netdev_next_lower_dev.exit.i.__netdev_lower_depth.exit_crit_edge ], [ 0, %entry.__netdev_lower_depth.exit_crit_edge ], [ %max_depth.1.i, %__netdev_next_lower_dev.exit19.i.__netdev_lower_depth.exit_crit_edge ], [ %max_depth.1.i, %for.inc.i.__netdev_lower_depth.exit_crit_edge ]
  %add = add i8 %max_depth.0.lcssa.i, 1
  %lower_level = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 58
  %12 = ptrtoint ptr %lower_level to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %add, ptr %lower_level, align 1
  %tobool.not = icmp eq ptr %priv, null
  br i1 %tobool.not, label %__netdev_lower_depth.exit.return_crit_edge, label %if.end

__netdev_lower_depth.exit.return_crit_edge:       ; preds = %__netdev_lower_depth.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end:                                           ; preds = %__netdev_lower_depth.exit
  %13 = ptrtoint ptr %priv to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %priv, align 4
  %15 = and i8 %14, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool3.not = icmp eq i8 %15, 0
  br i1 %tobool3.not, label %if.end.if.end8_crit_edge, label %if.then4

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end8

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %nested_level = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 73
  %16 = ptrtoint ptr %nested_level to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %max_depth.0.lcssa.i, ptr %nested_level, align 1
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end.if.end8_crit_edge
  %17 = ptrtoint ptr %priv to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %priv, align 4
  %19 = and i8 %18, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool12.not = icmp eq i8 %19, 0
  br i1 %tobool12.not, label %if.end8.return_crit_edge, label %if.then13

if.end8.return_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then13:                                        ; preds = %if.end8
  %unlink_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 69
  %20 = ptrtoint ptr %unlink_list.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %unlink_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %21, %unlink_list.i
  br i1 %cmp.i.not.i, label %if.then.i, label %if.then13.return_crit_edge

if.then13.return_crit_edge:                       ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.then.i:                                        ; preds = %if.then13
  %22 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @net_unlink_list, i32 0, i32 1), align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %unlink_list.i, ptr noundef %22, ptr noundef nonnull @net_unlink_list) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.return_crit_edge

if.then.i.return_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %return

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #37
  store ptr %unlink_list.i, ptr getelementptr inbounds (%struct.list_head, ptr @net_unlink_list, i32 0, i32 1), align 4
  %23 = ptrtoint ptr %unlink_list.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @net_unlink_list, ptr %unlink_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 69, i32 1
  %24 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %22, ptr %prev3.i.i.i, align 4
  %25 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %unlink_list.i, ptr %22, align 4
  br label %return

return:                                           ; preds = %if.end.i.i.i, %if.then.i.return_crit_edge, %if.then13.return_crit_edge, %if.end8.return_crit_edge, %__netdev_lower_depth.exit.return_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__netdev_walk_all_upper_dev(ptr noundef %dev, ptr nocapture noundef readonly %fn, ptr noundef %priv) unnamed_addr #1 align 64 {
entry:
  %dev_stack = alloca [9 x ptr], align 4
  %iter_stack = alloca [9 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %dev_stack) #35
  %0 = call ptr @memset(ptr %dev_stack, i32 255, i32 36)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %iter_stack) #35
  %1 = call ptr @memset(ptr %iter_stack, i32 255, i32 36)
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %storemerge = phi ptr [ %adj_list, %entry ], [ %storemerge.be, %while.cond.backedge ]
  %now.0 = phi ptr [ %dev, %entry ], [ %now.0.be, %while.cond.backedge ]
  %cur.0 = phi i32 [ 0, %entry ], [ %cur.0.be, %while.cond.backedge ]
  %cmp.not = icmp eq ptr %now.0, %dev
  br i1 %cmp.not, label %while.cond.if.end2_crit_edge, label %if.then

while.cond.if.end2_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.then:                                          ; preds = %while.cond
  %call = tail call i32 %fn(ptr noundef %now.0, ptr noundef %priv) #35, !callees !1446
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then.if.end2_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then.if.end2_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end2

if.end2:                                          ; preds = %if.then.if.end2_crit_edge, %while.cond.if.end2_crit_edge
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %now.0, i32 0, i32 13
  br label %while.cond3

while.cond3:                                      ; preds = %if.end8.while.cond3_crit_edge, %if.end2
  %iter.0 = phi ptr [ %storemerge, %if.end2 ], [ %3, %if.end8.while.cond3_crit_edge ]
  %2 = ptrtoint ptr %iter.0 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %iter.0, align 4
  %cmp.i = icmp eq ptr %3, %adj_list.i
  br i1 %cmp.i, label %while.cond3.if.then16_crit_edge, label %__netdev_next_upper_dev.exit

while.cond3.if.then16_crit_edge:                  ; preds = %while.cond3
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16

__netdev_next_upper_dev.exit:                     ; preds = %while.cond3
  %add.ptr.i = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %__netdev_next_upper_dev.exit.if.then16_crit_edge, label %if.end8

__netdev_next_upper_dev.exit.if.then16_crit_edge: ; preds = %__netdev_next_upper_dev.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then16

if.end8:                                          ; preds = %__netdev_next_upper_dev.exit
  %ignore3.i = getelementptr i8, ptr %3, i32 -7
  %6 = ptrtoint ptr %ignore3.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %ignore3.i, align 1, !range !1333
  %tobool9.not = icmp eq i8 %7, 0
  br i1 %tobool9.not, label %while.end, label %if.end8.while.cond3_crit_edge

if.end8.while.cond3_crit_edge:                    ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond3

while.end:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #37
  %adj_list12 = getelementptr inbounds %struct.net_device, ptr %5, i32 0, i32 13
  %arrayidx = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %cur.0
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %now.0, ptr %arrayidx, align 4
  %inc = add i32 %cur.0, 1
  %arrayidx14 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %cur.0
  %9 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %3, ptr %arrayidx14, align 4
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end19, %while.end
  %storemerge.be = phi ptr [ %adj_list12, %while.end ], [ %13, %if.end19 ]
  %now.0.be = phi ptr [ %5, %while.end ], [ %11, %if.end19 ]
  %cur.0.be = phi i32 [ %inc, %while.end ], [ %dec, %if.end19 ]
  br label %while.cond

if.then16:                                        ; preds = %__netdev_next_upper_dev.exit.if.then16_crit_edge, %while.cond3.if.then16_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cur.0)
  %tobool17.not = icmp eq i32 %cur.0, 0
  br i1 %tobool17.not, label %if.then16.cleanup_crit_edge, label %if.end19

if.then16.cleanup_crit_edge:                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end19:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #37
  %dec = add i32 %cur.0, -1
  %arrayidx20 = getelementptr [9 x ptr], ptr %dev_stack, i32 0, i32 %dec
  %10 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx20, align 4
  %arrayidx21 = getelementptr [9 x ptr], ptr %iter_stack, i32 0, i32 %dec
  %12 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx21, align 4
  br label %while.cond.backedge

cleanup:                                          ; preds = %if.then16.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then.cleanup_crit_edge ], [ 0, %if.then16.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %iter_stack) #35
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %dev_stack) #35
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__netdev_adjacent_dev_unlink_neighbour(ptr noundef %dev, ptr noundef %upper_dev) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %adj_list = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %lower = getelementptr inbounds %struct.net_device, ptr %upper_dev, i32 0, i32 13, i32 1
  tail call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %dev, ptr noundef %upper_dev, ptr noundef %adj_list) #35
  tail call fastcc void @__netdev_adjacent_dev_remove(ptr noundef %upper_dev, ptr noundef %dev, ptr noundef %lower) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__netdev_adjacent_dev_insert(ptr noundef %dev, ptr noundef %adj_dev, ptr noundef %dev_list, ptr noundef %private, i1 noundef zeroext %master) unnamed_addr #1 align 64 {
entry:
  %linkname.i132 = alloca [23 x i8], align 1
  %linkname.i = alloca [23 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %master to i8
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %.pn.in.i = phi ptr [ %dev_list, %entry ], [ %.pn.i, %for.body.i.for.cond.i_crit_edge ]
  %0 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %dev_list
  br i1 %cmp.not.i, label %for.cond.i.if.end12_crit_edge, label %for.body.i

for.cond.i.if.end12_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12

for.body.i:                                       ; preds = %for.cond.i
  %adj.0.i = getelementptr i8, ptr %.pn.i, i32 -16
  %1 = ptrtoint ptr %adj.0.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adj.0.i, align 4
  %cmp1.i = icmp eq ptr %2, %adj_dev
  br i1 %cmp1.i, label %__netdev_find_adj.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

__netdev_find_adj.exit:                           ; preds = %for.body.i
  %adj.0.i.le = getelementptr i8, ptr %.pn.i, i32 -16
  %tobool.not = icmp eq ptr %adj.0.i.le, null
  br i1 %tobool.not, label %__netdev_find_adj.exit.if.end12_crit_edge, label %if.then

__netdev_find_adj.exit.if.end12_crit_edge:        ; preds = %__netdev_find_adj.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12

if.then:                                          ; preds = %__netdev_find_adj.exit
  call void @__sanitizer_cov_trace_pc() #37
  %ref_nr = getelementptr i8, ptr %.pn.i, i32 -6
  %3 = ptrtoint ptr %ref_nr to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %ref_nr, align 2
  %add = add i16 %4, 1
  store i16 %add, ptr %ref_nr, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__netdev_adjacent_dev_insert.__UNIQUE_ID_ddebug930, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__netdev_adjacent_dev_insert, %if.then7)) #35
          to label %cleanup [label %if.then7], !srcloc !1328

if.then7:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  %5 = ptrtoint ptr %ref_nr to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %ref_nr, align 2
  %conv11 = zext i16 %6 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__netdev_adjacent_dev_insert.__UNIQUE_ID_ddebug930, ptr noundef nonnull @.str.162, ptr noundef %dev, ptr noundef %adj_dev, i32 noundef %conv11) #35
  br label %cleanup

if.end12:                                         ; preds = %__netdev_find_adj.exit.if.end12_crit_edge, %for.cond.i.if.end12_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %7 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 3264, i32 noundef 32) #40
  %tobool14.not = icmp eq ptr %call7.i, null
  br i1 %tobool14.not, label %if.end12.cleanup_crit_edge, label %if.end16

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end16:                                         ; preds = %if.end12
  %8 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %adj_dev, ptr %call7.i, align 8
  %master19 = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 2
  %9 = ptrtoint ptr %master19 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %frombool, ptr %master19, align 8
  %ref_nr21 = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 4
  %10 = ptrtoint ptr %ref_nr21 to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 1, ptr %ref_nr21, align 2
  %private22 = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 5
  %11 = ptrtoint ptr %private22 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %private, ptr %private22, align 4
  %ignore = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 3
  %12 = ptrtoint ptr %ignore to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %ignore, align 1
  %dev_tracker = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 1
  %tobool.not.i = icmp eq ptr %adj_dev, null
  br i1 %tobool.not.i, label %if.end16.dev_hold_track.exit_crit_edge, label %do.body1.i.i

if.end16.dev_hold_track.exit_crit_edge:           ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_hold_track.exit

do.body1.i.i:                                     ; preds = %if.end16
  %13 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i.i = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 118
  %14 = ptrtoint ptr %pcpu_refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pcpu_refcnt.i.i, align 4
  %16 = ptrtoint ptr %15 to i32
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %20
  %21 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %22, %16
  %23 = inttoptr i32 %add.i.i to ptr
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %add13.i.i = add i32 %25, 1
  store i32 %add13.i.i, ptr %23, align 4
  %26 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i.i = and i32 %26, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool24.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool24.not.i.i, label %if.then28.i.i, label %do.body1.i.i.dev_hold.exit.i_crit_edge, !prof !1310

do.body1.i.i.dev_hold.exit.i_crit_edge:           ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_hold.exit.i

if.then28.i.i:                                    ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @warn_bogus_irq_restore() #35
  br label %dev_hold.exit.i

dev_hold.exit.i:                                  ; preds = %if.then28.i.i, %do.body1.i.i.dev_hold.exit.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %13) #35, !srcloc !1315
  %refcnt_tracker.i.i = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 119
  %call.i.i = tail call i32 @ref_tracker_alloc(ptr noundef %refcnt_tracker.i.i, ptr noundef %dev_tracker, i32 noundef 3264) #35
  br label %dev_hold_track.exit

dev_hold_track.exit:                              ; preds = %dev_hold.exit.i, %if.end16.dev_hold_track.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__netdev_adjacent_dev_insert.__UNIQUE_ID_ddebug931, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__netdev_adjacent_dev_insert, %if.then35)) #35
          to label %do.end46 [label %if.then35], !srcloc !1328

if.then35:                                        ; preds = %dev_hold_track.exit
  call void @__sanitizer_cov_trace_pc() #37
  %27 = ptrtoint ptr %ref_nr21 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %ref_nr21, align 2
  %conv41 = zext i16 %28 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__netdev_adjacent_dev_insert.__UNIQUE_ID_ddebug931, ptr noundef nonnull @.str.163, ptr noundef %dev, ptr noundef %adj_dev, i32 noundef %conv41, ptr noundef %adj_dev) #35
  br label %do.end46

do.end46:                                         ; preds = %if.then35, %dev_hold_track.exit
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %cmp.i = icmp eq ptr %adj_list.i, %dev_list
  %lower.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %cmp2.i = icmp eq ptr %lower.i, %dev_list
  %or.cond.i = select i1 %cmp.i, i1 true, i1 %cmp2.i
  br i1 %or.cond.i, label %netdev_adjacent_is_neigh_list.exit, label %do.end46.if.end53_crit_edge

do.end46.if.end53_crit_edge:                      ; preds = %do.end46
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end53

netdev_adjacent_is_neigh_list.exit:               ; preds = %do.end46
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %29 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %nd_net.i.i, align 4
  %nd_net.i8.i = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 127
  %31 = ptrtoint ptr %nd_net.i8.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %nd_net.i8.i, align 4
  %cmp.i.i = icmp eq ptr %30, %32
  br i1 %cmp.i.i, label %if.then48, label %netdev_adjacent_is_neigh_list.exit.if.end53_crit_edge

netdev_adjacent_is_neigh_list.exit.if.end53_crit_edge: ; preds = %netdev_adjacent_is_neigh_list.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end53

if.then48:                                        ; preds = %netdev_adjacent_is_neigh_list.exit
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i) #35
  %cond.i = select i1 %cmp.i, ptr @.str.170, ptr @.str.171
  %33 = call ptr @memset(ptr %linkname.i, i32 255, i32 23)
  %call.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i, ptr noundef nonnull %cond.i, ptr noundef %adj_dev) #35
  %dev2.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  %dev3.i = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 133
  %call6.i = call i32 @sysfs_create_link(ptr noundef %dev2.i, ptr noundef %dev3.i, ptr noundef nonnull %linkname.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool50.not = icmp eq i32 %call6.i, 0
  br i1 %tobool50.not, label %if.then48.if.end53_crit_edge, label %if.then48.free_adj_crit_edge

if.then48.free_adj_crit_edge:                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #37
  br label %free_adj

if.then48.if.end53_crit_edge:                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end53

if.end53:                                         ; preds = %if.then48.if.end53_crit_edge, %netdev_adjacent_is_neigh_list.exit.if.end53_crit_edge, %do.end46.if.end53_crit_edge
  br i1 %master, label %if.then55, label %if.else

if.then55:                                        ; preds = %if.end53
  %dev56 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  %dev57 = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 133
  %call59 = call i32 @sysfs_create_link(ptr noundef %dev56, ptr noundef %dev57, ptr noundef nonnull @.str.164) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %if.end62, label %remove_symlinks

if.end62:                                         ; preds = %if.then55
  %list = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 6
  %34 = ptrtoint ptr %dev_list to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dev_list, align 4
  %call.i.i118 = call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %dev_list, ptr noundef %35) #35
  br i1 %call.i.i118, label %if.end.i.i, label %if.end62.cleanup_crit_edge

if.end62.cleanup_crit_edge:                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #37
  %36 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %35, ptr %list, align 8
  %prev2.i.i = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 6, i32 1
  %37 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %dev_list, ptr %prev2.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1309
  %38 = ptrtoint ptr %dev_list to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %list, ptr %dev_list, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  %39 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %list, ptr %prev37.i.i, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end53
  %list63 = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 6
  %prev.i = getelementptr inbounds %struct.list_head, ptr %dev_list, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev.i, align 4
  %call.i.i119 = call zeroext i1 @__list_add_valid(ptr noundef %list63, ptr noundef %41, ptr noundef %dev_list) #35
  br i1 %call.i.i119, label %if.end.i.i121, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end.i.i121:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  %42 = ptrtoint ptr %list63 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %dev_list, ptr %list63, align 8
  %prev2.i.i120 = getelementptr inbounds %struct.netdev_adjacent, ptr %call7.i, i32 0, i32 6, i32 1
  %43 = ptrtoint ptr %prev2.i.i120 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %41, ptr %prev2.i.i120, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1309
  %44 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %list63, ptr %41, align 4
  %45 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %list63, ptr %prev.i, align 4
  br label %cleanup

remove_symlinks:                                  ; preds = %if.then55
  br i1 %or.cond.i, label %netdev_adjacent_is_neigh_list.exit131, label %remove_symlinks.free_adj_crit_edge

remove_symlinks.free_adj_crit_edge:               ; preds = %remove_symlinks
  call void @__sanitizer_cov_trace_pc() #37
  br label %free_adj

netdev_adjacent_is_neigh_list.exit131:            ; preds = %remove_symlinks
  %nd_net.i.i127 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %46 = ptrtoint ptr %nd_net.i.i127 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %nd_net.i.i127, align 4
  %nd_net.i8.i128 = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 127
  %48 = ptrtoint ptr %nd_net.i8.i128 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %nd_net.i8.i128, align 4
  %cmp.i.i129 = icmp eq ptr %47, %49
  br i1 %cmp.i.i129, label %if.then66, label %netdev_adjacent_is_neigh_list.exit131.free_adj_crit_edge

netdev_adjacent_is_neigh_list.exit131.free_adj_crit_edge: ; preds = %netdev_adjacent_is_neigh_list.exit131
  call void @__sanitizer_cov_trace_pc() #37
  br label %free_adj

if.then66:                                        ; preds = %netdev_adjacent_is_neigh_list.exit131
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i132) #35
  %cond.i135 = select i1 %cmp.i, ptr @.str.170, ptr @.str.171
  %50 = call ptr @memset(ptr %linkname.i132, i32 255, i32 23)
  %call.i136 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i132, ptr noundef nonnull %cond.i135, ptr noundef %adj_dev) #35
  call void @sysfs_remove_link(ptr noundef %dev56, ptr noundef nonnull %linkname.i132) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i132) #35
  br label %free_adj

free_adj:                                         ; preds = %if.then66, %netdev_adjacent_is_neigh_list.exit131.free_adj_crit_edge, %remove_symlinks.free_adj_crit_edge, %if.then48.free_adj_crit_edge
  %ret.0 = phi i32 [ %call6.i, %if.then48.free_adj_crit_edge ], [ %call59, %if.then66 ], [ %call59, %netdev_adjacent_is_neigh_list.exit131.free_adj_crit_edge ], [ %call59, %remove_symlinks.free_adj_crit_edge ]
  br i1 %tobool.not.i, label %free_adj.dev_put_track.exit_crit_edge, label %do.body1.i.i148

free_adj.dev_put_track.exit_crit_edge:            ; preds = %free_adj
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_put_track.exit

do.body1.i.i148:                                  ; preds = %free_adj
  %refcnt_tracker.i.i138 = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 119
  %call.i.i139 = call i32 @ref_tracker_free(ptr noundef %refcnt_tracker.i.i138, ptr noundef %dev_tracker) #35
  %51 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i.i140 = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 118
  %52 = ptrtoint ptr %pcpu_refcnt.i.i140 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %pcpu_refcnt.i.i140, align 4
  %54 = ptrtoint ptr %53 to i32
  %55 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i141 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i.i141 to ptr
  %cpu.i.i142 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %cpu.i.i142 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu.i.i142, align 4
  %arrayidx.i.i143 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %58
  %59 = ptrtoint ptr %arrayidx.i.i143 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %arrayidx.i.i143, align 4
  %add.i.i144 = add i32 %60, %54
  %61 = inttoptr i32 %add.i.i144 to ptr
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %61, align 4
  %add13.i.i145 = add i32 %63, -1
  store i32 %add13.i.i145, ptr %61, align 4
  %64 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i.i146 = and i32 %64, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i146)
  %tobool24.not.i.i147 = icmp eq i32 %and.i.i.i.i146, 0
  br i1 %tobool24.not.i.i147, label %if.then28.i.i149, label %do.body1.i.i148.dev_put.exit.i_crit_edge, !prof !1310

do.body1.i.i148.dev_put.exit.i_crit_edge:         ; preds = %do.body1.i.i148
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_put.exit.i

if.then28.i.i149:                                 ; preds = %do.body1.i.i148
  call void @__sanitizer_cov_trace_pc() #37
  call void @warn_bogus_irq_restore() #35
  br label %dev_put.exit.i

dev_put.exit.i:                                   ; preds = %if.then28.i.i149, %do.body1.i.i148.dev_put.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %51) #35, !srcloc !1315
  br label %dev_put_track.exit

dev_put_track.exit:                               ; preds = %dev_put.exit.i, %free_adj.dev_put_track.exit_crit_edge
  call void @kfree(ptr noundef nonnull %call7.i) #35
  br label %cleanup

cleanup:                                          ; preds = %dev_put_track.exit, %if.end.i.i121, %if.else.cleanup_crit_edge, %if.end.i.i, %if.end62.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.then7, %if.then
  %retval.0 = phi i32 [ %ret.0, %dev_put_track.exit ], [ 0, %if.then7 ], [ -12, %if.end12.cleanup_crit_edge ], [ 0, %if.then ], [ 0, %if.end62.cleanup_crit_edge ], [ 0, %if.end.i.i ], [ 0, %if.else.cleanup_crit_edge ], [ 0, %if.end.i.i121 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__netdev_adjacent_dev_remove(ptr noundef %dev, ptr noundef %adj_dev, ptr noundef readonly %dev_list) unnamed_addr #1 align 64 {
entry:
  %linkname.i = alloca [23 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug932, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__netdev_adjacent_dev_remove, %if.then)) #35
          to label %for.cond.i [label %if.then], !srcloc !1328

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug932, ptr noundef nonnull @.str.166, ptr noundef %dev, ptr noundef %adj_dev, i32 noundef 1) #35
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.then, %entry
  %.pn.in.i = phi ptr [ %.pn.i, %for.body.i.for.cond.i_crit_edge ], [ %dev_list, %entry ], [ %dev_list, %if.then ]
  %0 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %dev_list
  br i1 %cmp.not.i, label %for.cond.i.do.end10_crit_edge, label %for.body.i

for.cond.i.do.end10_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10

for.body.i:                                       ; preds = %for.cond.i
  %adj.0.i = getelementptr i8, ptr %.pn.i, i32 -16
  %1 = ptrtoint ptr %adj.0.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adj.0.i, align 4
  %cmp1.i = icmp eq ptr %2, %adj_dev
  br i1 %cmp1.i, label %__netdev_find_adj.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i

__netdev_find_adj.exit:                           ; preds = %for.body.i
  %adj.0.i.le = getelementptr i8, ptr %.pn.i, i32 -16
  %tobool6.not = icmp eq ptr %adj.0.i.le, null
  br i1 %tobool6.not, label %__netdev_find_adj.exit.do.end10_crit_edge, label %if.end42

__netdev_find_adj.exit.do.end10_crit_edge:        ; preds = %__netdev_find_adj.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end10

do.end10:                                         ; preds = %__netdev_find_adj.exit.do.end10_crit_edge, %for.cond.i.do.end10_crit_edge
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.167, ptr noundef %dev, ptr noundef %adj_dev) #41
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 7360, i32 noundef 9, ptr noundef null) #35
  br label %cleanup

if.end42:                                         ; preds = %__netdev_find_adj.exit
  %ref_nr43 = getelementptr i8, ptr %.pn.i, i32 -6
  %3 = ptrtoint ptr %ref_nr43 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %ref_nr43, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %4)
  %cmp = icmp ugt i16 %4, 1
  br i1 %cmp, label %do.body48, label %if.end77

do.body48:                                        ; preds = %if.end42
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug933, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__netdev_adjacent_dev_remove, %if.then60)) #35
          to label %do.end71 [label %if.then60], !srcloc !1328

if.then60:                                        ; preds = %do.body48
  call void @__sanitizer_cov_trace_pc() #37
  %5 = ptrtoint ptr %ref_nr43 to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %ref_nr43, align 2
  %conv67 = zext i16 %6 to i32
  %sub = add nsw i32 %conv67, -1
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug933, ptr noundef nonnull @.str.168, ptr noundef %dev, ptr noundef %adj_dev, i32 noundef 1, i32 noundef %sub) #35
  br label %do.end71

do.end71:                                         ; preds = %if.then60, %do.body48
  %7 = ptrtoint ptr %ref_nr43 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %ref_nr43, align 2
  %sub75 = add i16 %8, -1
  store i16 %sub75, ptr %ref_nr43, align 2
  br label %cleanup

if.end77:                                         ; preds = %if.end42
  %master = getelementptr i8, ptr %.pn.i, i32 -8
  %9 = ptrtoint ptr %master to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %master, align 4, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool78.not = icmp eq i8 %10, 0
  br i1 %tobool78.not, label %if.end77.if.end81_crit_edge, label %if.then79

if.end77.if.end81_crit_edge:                      ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end81

if.then79:                                        ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #37
  %dev80 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  tail call void @sysfs_remove_link(ptr noundef %dev80, ptr noundef nonnull @.str.164) #35
  br label %if.end81

if.end81:                                         ; preds = %if.then79, %if.end77.if.end81_crit_edge
  %adj_list.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13
  %cmp.i = icmp eq ptr %adj_list.i, %dev_list
  %lower.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 13, i32 1
  %cmp2.i = icmp eq ptr %lower.i, %dev_list
  %or.cond.i = select i1 %cmp.i, i1 true, i1 %cmp2.i
  br i1 %or.cond.i, label %netdev_adjacent_is_neigh_list.exit, label %if.end81.if.end86_crit_edge

if.end81.if.end86_crit_edge:                      ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end86

netdev_adjacent_is_neigh_list.exit:               ; preds = %if.end81
  %nd_net.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 127
  %11 = ptrtoint ptr %nd_net.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %nd_net.i.i, align 4
  %nd_net.i8.i = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 127
  %13 = ptrtoint ptr %nd_net.i8.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %nd_net.i8.i, align 4
  %cmp.i.i = icmp eq ptr %12, %14
  br i1 %cmp.i.i, label %if.then83, label %netdev_adjacent_is_neigh_list.exit.if.end86_crit_edge

netdev_adjacent_is_neigh_list.exit.if.end86_crit_edge: ; preds = %netdev_adjacent_is_neigh_list.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end86

if.then83:                                        ; preds = %netdev_adjacent_is_neigh_list.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.lifetime.start.p0(i64 23, ptr nonnull %linkname.i) #35
  %cond.i = select i1 %cmp.i, ptr @.str.170, ptr @.str.171
  %15 = call ptr @memset(ptr %linkname.i, i32 255, i32 23)
  %call.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %linkname.i, ptr noundef nonnull %cond.i, ptr noundef %adj_dev) #35
  %dev1.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 133
  call void @sysfs_remove_link(ptr noundef %dev1.i, ptr noundef nonnull %linkname.i) #35
  call void @llvm.lifetime.end.p0(i64 23, ptr nonnull %linkname.i) #35
  br label %if.end86

if.end86:                                         ; preds = %if.then83, %netdev_adjacent_is_neigh_list.exit.if.end86_crit_edge, %if.end81.if.end86_crit_edge
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.i) #35
  br i1 %call.i.i, label %if.end.i.i, label %if.end86.list_del_rcu.exit_crit_edge

if.end86.list_del_rcu.exit_crit_edge:             ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.i, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i.i, align 4
  %18 = ptrtoint ptr %.pn.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %.pn.i, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev1.i.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %17, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.end86.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn.i, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug934, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__netdev_adjacent_dev_remove, %if.then99)) #35
          to label %do.end108 [label %if.then99], !srcloc !1328

if.then99:                                        ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug934, ptr noundef nonnull @.str.169, ptr noundef %adj_dev, ptr noundef %dev, ptr noundef %adj_dev) #35
  br label %do.end108

do.end108:                                        ; preds = %if.then99, %list_del_rcu.exit
  %tobool.not.i = icmp eq ptr %adj_dev, null
  br i1 %tobool.not.i, label %do.end108.dev_put_track.exit_crit_edge, label %do.body1.i.i

do.end108.dev_put_track.exit_crit_edge:           ; preds = %do.end108
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_put_track.exit

do.body1.i.i:                                     ; preds = %do.end108
  %dev_tracker = getelementptr i8, ptr %.pn.i, i32 -12
  %refcnt_tracker.i.i = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 119
  %call.i.i10 = call i32 @ref_tracker_free(ptr noundef %refcnt_tracker.i.i, ptr noundef %dev_tracker) #35
  %23 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #35, !srcloc !1313
  %pcpu_refcnt.i.i = getelementptr inbounds %struct.net_device, ptr %adj_dev, i32 0, i32 118
  %24 = ptrtoint ptr %pcpu_refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pcpu_refcnt.i.i, align 4
  %26 = ptrtoint ptr %25 to i32
  %27 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %30
  %31 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %32, %26
  %33 = inttoptr i32 %add.i.i to ptr
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %add13.i.i = add i32 %35, -1
  store i32 %add13.i.i, ptr %33, align 4
  %36 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i.i.i = and i32 %36, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool24.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool24.not.i.i, label %if.then28.i.i, label %do.body1.i.i.dev_put.exit.i_crit_edge, !prof !1310

do.body1.i.i.dev_put.exit.i_crit_edge:            ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_put.exit.i

if.then28.i.i:                                    ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @warn_bogus_irq_restore() #35
  br label %dev_put.exit.i

dev_put.exit.i:                                   ; preds = %if.then28.i.i, %do.body1.i.i.dev_put.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %23) #35, !srcloc !1315
  br label %dev_put_track.exit

dev_put_track.exit:                               ; preds = %dev_put.exit.i, %do.end108.dev_put_track.exit_crit_edge
  %rcu = getelementptr i8, ptr %.pn.i, i32 8
  call void @kvfree_call_rcu(ptr noundef %rcu, ptr noundef nonnull inttoptr (i32 24 to ptr)) #35
  br label %cleanup

cleanup:                                          ; preds = %dev_put_track.exit, %do.end71, %do.end10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_link(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ref_tracker_alloc(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ref_tracker_free(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_remove_link(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kuid(ptr noundef, [1 x i32]) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kgid(ptr noundef, [1 x i32]) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #4 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_xdp_link_release(ptr noundef %link) #1 align 64 {
entry:
  %xdp.i.i = alloca %struct.netdev_bpf, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %dev = getelementptr inbounds %struct.bpf_xdp_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end25_crit_edge, label %if.then

entry.if.end25_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end25

if.then:                                          ; preds = %entry
  %call.i = tail call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.then.if.end29.i_crit_edge

if.then.if.end29.i_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

land.rhs.i:                                       ; preds = %if.then
  %.b1.i = load i1, ptr @dev_xdp_detach_link.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.if.end29.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end29.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @dev_xdp_detach_link.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8892, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 8892) #35
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end29.i_crit_edge, %if.then.if.end29.i_crit_edge
  %flags.i = getelementptr inbounds %struct.bpf_xdp_link, ptr %link, i32 0, i32 2
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i.i = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.end29.i.dev_xdp_mode.exit.i_crit_edge

if.end29.i.dev_xdp_mode.exit.i_crit_edge:         ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit.i

if.end.i.i:                                       ; preds = %if.end29.i
  %and1.i.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool2.not.i.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool2.not.i.i, label %if.end4.i.i, label %if.end.i.i.dev_xdp_mode.exit.i_crit_edge

if.end.i.i.dev_xdp_mode.exit.i_crit_edge:         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit.i

if.end4.i.i:                                      ; preds = %if.end.i.i
  %and5.i.i = and i32 %3, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.end8.i.i, label %if.end4.i.i.dev_xdp_mode.exit.i_crit_edge

if.end4.i.i.dev_xdp_mode.exit.i_crit_edge:        ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_mode.exit.i

if.end8.i.i:                                      ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %netdev_ops.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 16
  %4 = ptrtoint ptr %netdev_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %netdev_ops.i.i, align 8
  %ndo_bpf.i.i = getelementptr inbounds %struct.net_device_ops, ptr %5, i32 0, i32 76
  %6 = ptrtoint ptr %ndo_bpf.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ndo_bpf.i.i, align 4
  %tobool9.not.i.i = icmp ne ptr %7, null
  %cond.i.i = zext i1 %tobool9.not.i.i to i32
  br label %dev_xdp_mode.exit.i

dev_xdp_mode.exit.i:                              ; preds = %if.end8.i.i, %if.end4.i.i.dev_xdp_mode.exit.i_crit_edge, %if.end.i.i.dev_xdp_mode.exit.i_crit_edge, %if.end29.i.dev_xdp_mode.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %cond.i.i, %if.end8.i.i ], [ 2, %if.end29.i.dev_xdp_mode.exit.i_crit_edge ], [ 1, %if.end.i.i.dev_xdp_mode.exit.i_crit_edge ], [ 0, %if.end4.i.i.dev_xdp_mode.exit.i_crit_edge ]
  %link.i.i = getelementptr %struct.net_device, ptr %1, i32 0, i32 154, i32 %retval.0.i.i, i32 1
  %8 = ptrtoint ptr %link.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %link.i.i, align 4
  %cmp.not.i = icmp eq ptr %9, %link
  br i1 %cmp.not.i, label %if.end40.i, label %do.end

if.end40.i:                                       ; preds = %dev_xdp_mode.exit.i
  %10 = zext i32 %retval.0.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.318)
  switch i32 %retval.0.i.i, label %sw.default.i.i [
    i32 0, label %if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge
    i32 1, label %if.end40.i.sw.bb1.i.i_crit_edge
    i32 2, label %if.end40.i.sw.bb1.i.i_crit_edge32
  ]

if.end40.i.sw.bb1.i.i_crit_edge32:                ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb1.i.i

if.end40.i.sw.bb1.i.i_crit_edge:                  ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb1.i.i

if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge:       ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_bpf_op.exit.i

sw.bb1.i.i:                                       ; preds = %if.end40.i.sw.bb1.i.i_crit_edge, %if.end40.i.sw.bb1.i.i_crit_edge32
  %netdev_ops.i2.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 16
  %11 = ptrtoint ptr %netdev_ops.i2.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %netdev_ops.i2.i, align 8
  %ndo_bpf.i3.i = getelementptr inbounds %struct.net_device_ops, ptr %12, i32 0, i32 76
  %13 = ptrtoint ptr %ndo_bpf.i3.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ndo_bpf.i3.i, align 4
  br label %dev_xdp_bpf_op.exit.i

sw.default.i.i:                                   ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_bpf_op.exit.i

dev_xdp_bpf_op.exit.i:                            ; preds = %sw.default.i.i, %sw.bb1.i.i, %if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge
  %retval.0.i4.i = phi ptr [ null, %sw.default.i.i ], [ %14, %sw.bb1.i.i ], [ @generic_xdp_install, %if.end40.i.dev_xdp_bpf_op.exit.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %xdp.i.i) #35
  %15 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i.i, i32 0, i32 1
  %16 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i.i, i32 0, i32 1, i32 0, i32 1
  %17 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i.i, i32 0, i32 1, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %retval.0.i.i)
  %cmp.i.i = icmp eq i32 %retval.0.i.i, 2
  %cond.i5.i = zext i1 %cmp.i.i to i32
  %18 = ptrtoint ptr %xdp.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %cond.i5.i, ptr %xdp.i.i, align 4
  %19 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %17, align 4
  %20 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %15, align 4
  %21 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %16, align 4
  %call.i.i = call i32 %retval.0.i4.i(ptr noundef nonnull %1, ptr noundef nonnull %xdp.i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool4.not.i.i = icmp ne i32 %call.i.i, 0
  %brmerge.i.i = or i1 %cmp.i.i, %tobool4.not.i.i
  br i1 %brmerge.i.i, label %dev_xdp_install.exit.i, label %dev_xdp_install.exit.thread.i

dev_xdp_install.exit.thread.i:                    ; preds = %dev_xdp_bpf_op.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %22 = ptrtoint ptr %link.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %link.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %23, null
  %prog.i.i.i = getelementptr inbounds %struct.bpf_link, ptr %23, i32 0, i32 4
  %arrayidx.i.i.i = getelementptr %struct.net_device, ptr %1, i32 0, i32 154, i32 %retval.0.i.i
  %retval.0.in.i.i.i = select i1 %tobool.not.i.i.i, ptr %arrayidx.i.i.i, ptr %prog.i.i.i
  %24 = ptrtoint ptr %retval.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %retval.0.i.i.i = load ptr, ptr %retval.0.in.i.i.i, align 4
  call void @bpf_prog_change_xdp(ptr noundef %retval.0.i.i.i, ptr noundef null) #35
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %xdp.i.i) #35
  br label %dev_xdp_detach_link.exit.thread

dev_xdp_install.exit.i:                           ; preds = %dev_xdp_bpf_op.exit.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %xdp.i.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool44.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool44.not.i, label %dev_xdp_install.exit.i.dev_xdp_detach_link.exit.thread_crit_edge, label %do.end60.i, !prof !1311

dev_xdp_install.exit.i.dev_xdp_detach_link.exit.thread_crit_edge: ; preds = %dev_xdp_install.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_detach_link.exit.thread

do.end60.i:                                       ; preds = %dev_xdp_install.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8899, i32 noundef 9, ptr noundef null) #35
  br label %dev_xdp_detach_link.exit.thread

dev_xdp_detach_link.exit.thread:                  ; preds = %do.end60.i, %dev_xdp_install.exit.i.dev_xdp_detach_link.exit.thread_crit_edge, %dev_xdp_install.exit.thread.i
  %arrayidx.i.i = getelementptr %struct.net_device, ptr %1, i32 0, i32 154, i32 %retval.0.i.i
  %25 = ptrtoint ptr %link.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %link.i.i, align 4
  %26 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %arrayidx.i.i, align 4
  br label %if.end

do.end:                                           ; preds = %dev_xdp_mode.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 8914, i32 noundef 9, ptr noundef null) #35
  br label %if.end

if.end:                                           ; preds = %do.end, %dev_xdp_detach_link.exit.thread
  %27 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %dev, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.end, %entry.if.end25_crit_edge
  call void @rtnl_unlock() #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_xdp_link_dealloc(ptr noundef %link) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %link) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_xdp_link_detach(ptr noundef %link) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @bpf_xdp_link_release(ptr noundef %link)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_xdp_link_update(ptr noundef %link, ptr noundef %new_prog, ptr noundef readnone %old_prog) #1 align 64 {
entry:
  %xdp.i = alloca %struct.netdev_bpf, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %dev = getelementptr inbounds %struct.bpf_xdp_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.out_unlock_crit_edge, label %if.end

entry.out_unlock_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_unlock

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %old_prog, null
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %land.lhs.true

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

land.lhs.true:                                    ; preds = %if.end
  %prog = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 4
  %2 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prog, align 4
  %cmp.not = icmp eq ptr %3, %old_prog
  br i1 %cmp.not, label %land.lhs.true.if.end3_crit_edge, label %land.lhs.true.out_unlock_crit_edge

land.lhs.true.out_unlock_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_unlock

land.lhs.true.if.end3_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end3

if.end3:                                          ; preds = %land.lhs.true.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %prog4 = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 4
  %4 = ptrtoint ptr %prog4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prog4, align 4
  %type = getelementptr inbounds %struct.bpf_prog, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 4
  %type5 = getelementptr inbounds %struct.bpf_prog, ptr %new_prog, i32 0, i32 2
  %8 = ptrtoint ptr %type5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp6.not = icmp eq i32 %7, %9
  br i1 %cmp6.not, label %lor.lhs.false, label %if.end3.out_unlock_crit_edge

if.end3.out_unlock_crit_edge:                     ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_unlock

lor.lhs.false:                                    ; preds = %if.end3
  %expected_attach_type = getelementptr inbounds %struct.bpf_prog, ptr %5, i32 0, i32 3
  %10 = ptrtoint ptr %expected_attach_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %expected_attach_type, align 4
  %expected_attach_type7 = getelementptr inbounds %struct.bpf_prog, ptr %new_prog, i32 0, i32 3
  %12 = ptrtoint ptr %expected_attach_type7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %expected_attach_type7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %13)
  %cmp8.not = icmp eq i32 %11, %13
  br i1 %cmp8.not, label %if.end10, label %lor.lhs.false.out_unlock_crit_edge

lor.lhs.false.out_unlock_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_unlock

if.end10:                                         ; preds = %lor.lhs.false
  %cmp11 = icmp eq ptr %5, %new_prog
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @bpf_prog_put(ptr noundef %new_prog) #35
  br label %out_unlock

if.end13:                                         ; preds = %if.end10
  %flags = getelementptr inbounds %struct.bpf_xdp_link, ptr %link, i32 0, i32 2
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags, align 4
  %and.i = and i32 %15, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end13.sw.bb1.i_crit_edge

if.end13.sw.bb1.i_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb1.i

if.end.i:                                         ; preds = %if.end13
  %and1.i = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i.sw.bb1.i_crit_edge

if.end.i.sw.bb1.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb1.i

if.end4.i:                                        ; preds = %if.end.i
  %and5.i = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %dev_xdp_mode.exit, label %if.end4.i.dev_xdp_bpf_op.exit_crit_edge

if.end4.i.dev_xdp_bpf_op.exit_crit_edge:          ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_bpf_op.exit

dev_xdp_mode.exit:                                ; preds = %if.end4.i
  %netdev_ops.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 16
  %16 = ptrtoint ptr %netdev_ops.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %netdev_ops.i, align 8
  %ndo_bpf.i = getelementptr inbounds %struct.net_device_ops, ptr %17, i32 0, i32 76
  %18 = ptrtoint ptr %ndo_bpf.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ndo_bpf.i, align 4
  %tobool9.not.i.not = icmp eq ptr %19, null
  br i1 %tobool9.not.i.not, label %dev_xdp_mode.exit.dev_xdp_bpf_op.exit_crit_edge, label %dev_xdp_mode.exit.sw.bb1.i_crit_edge

dev_xdp_mode.exit.sw.bb1.i_crit_edge:             ; preds = %dev_xdp_mode.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.bb1.i

dev_xdp_mode.exit.dev_xdp_bpf_op.exit_crit_edge:  ; preds = %dev_xdp_mode.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_bpf_op.exit

sw.bb1.i:                                         ; preds = %dev_xdp_mode.exit.sw.bb1.i_crit_edge, %if.end.i.sw.bb1.i_crit_edge, %if.end13.sw.bb1.i_crit_edge
  %retval.0.i70 = phi i32 [ 1, %dev_xdp_mode.exit.sw.bb1.i_crit_edge ], [ 1, %if.end.i.sw.bb1.i_crit_edge ], [ 2, %if.end13.sw.bb1.i_crit_edge ]
  %netdev_ops.i61 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 16
  %20 = ptrtoint ptr %netdev_ops.i61 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %netdev_ops.i61, align 8
  %ndo_bpf.i62 = getelementptr inbounds %struct.net_device_ops, ptr %21, i32 0, i32 76
  %22 = ptrtoint ptr %ndo_bpf.i62 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ndo_bpf.i62, align 4
  br label %dev_xdp_bpf_op.exit

dev_xdp_bpf_op.exit:                              ; preds = %sw.bb1.i, %dev_xdp_mode.exit.dev_xdp_bpf_op.exit_crit_edge, %if.end4.i.dev_xdp_bpf_op.exit_crit_edge
  %retval.0.i71 = phi i32 [ %retval.0.i70, %sw.bb1.i ], [ 0, %dev_xdp_mode.exit.dev_xdp_bpf_op.exit_crit_edge ], [ 0, %if.end4.i.dev_xdp_bpf_op.exit_crit_edge ]
  %retval.0.i63 = phi ptr [ %23, %sw.bb1.i ], [ @generic_xdp_install, %dev_xdp_mode.exit.dev_xdp_bpf_op.exit_crit_edge ], [ @generic_xdp_install, %if.end4.i.dev_xdp_bpf_op.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %xdp.i) #35
  %24 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i, i32 0, i32 1
  %25 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i, i32 0, i32 1, i32 0, i32 1
  %26 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp.i, i32 0, i32 1, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %retval.0.i71)
  %cmp.i = icmp eq i32 %retval.0.i71, 2
  %cond.i64 = zext i1 %cmp.i to i32
  %27 = ptrtoint ptr %xdp.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %cond.i64, ptr %xdp.i, align 4
  %28 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %26, align 4
  %29 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %15, ptr %24, align 4
  %30 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %new_prog, ptr %25, align 4
  %tobool.not.i65 = icmp eq ptr %new_prog, null
  br i1 %tobool.not.i65, label %if.end.i67, label %if.end.thread.i

if.end.i67:                                       ; preds = %dev_xdp_bpf_op.exit
  %call.i66 = call i32 %retval.0.i63(ptr noundef nonnull %1, ptr noundef nonnull %xdp.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i66)
  %tobool4.not.i = icmp ne i32 %call.i66, 0
  %brmerge.i = or i1 %cmp.i, %tobool4.not.i
  br i1 %brmerge.i, label %dev_xdp_install.exit, label %if.end.i67.if.then11.i_crit_edge

if.end.i67.if.then11.i_crit_edge:                 ; preds = %if.end.i67
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then11.i

if.end.thread.i:                                  ; preds = %dev_xdp_bpf_op.exit
  tail call void @bpf_prog_inc(ptr noundef nonnull %new_prog) #35
  %call24.i = call i32 %retval.0.i63(ptr noundef nonnull %1, ptr noundef nonnull %xdp.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24.i)
  %tobool4.not25.i = icmp eq i32 %call24.i, 0
  br i1 %tobool4.not25.i, label %if.end9.i, label %dev_xdp_install.exit.thread76

dev_xdp_install.exit.thread76:                    ; preds = %if.end.thread.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @bpf_prog_put(ptr noundef nonnull %new_prog) #35
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %xdp.i) #35
  br label %out_unlock

if.end9.i:                                        ; preds = %if.end.thread.i
  br i1 %cmp.i, label %if.end9.i.dev_xdp_install.exit.thread_crit_edge, label %if.end9.i.if.then11.i_crit_edge

if.end9.i.if.then11.i_crit_edge:                  ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then11.i

if.end9.i.dev_xdp_install.exit.thread_crit_edge:  ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %dev_xdp_install.exit.thread

if.then11.i:                                      ; preds = %if.end9.i.if.then11.i_crit_edge, %if.end.i67.if.then11.i_crit_edge
  %link.i.i.i = getelementptr %struct.net_device, ptr %1, i32 0, i32 154, i32 %retval.0.i71, i32 1
  %31 = ptrtoint ptr %link.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %link.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %32, null
  %prog.i.i = getelementptr inbounds %struct.bpf_link, ptr %32, i32 0, i32 4
  %arrayidx.i.i = getelementptr %struct.net_device, ptr %1, i32 0, i32 154, i32 %retval.0.i71
  %retval.0.in.i.i = select i1 %tobool.not.i.i, ptr %arrayidx.i.i, ptr %prog.i.i
  %33 = ptrtoint ptr %retval.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %retval.0.i.i = load ptr, ptr %retval.0.in.i.i, align 4
  call void @bpf_prog_change_xdp(ptr noundef %retval.0.i.i, ptr noundef %new_prog) #35
  br label %dev_xdp_install.exit.thread

dev_xdp_install.exit.thread:                      ; preds = %if.then11.i, %if.end9.i.dev_xdp_install.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %xdp.i) #35
  br label %if.end22

dev_xdp_install.exit:                             ; preds = %if.end.i67
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %xdp.i) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i66)
  %tobool20.not = icmp eq i32 %call.i66, 0
  br i1 %tobool20.not, label %dev_xdp_install.exit.if.end22_crit_edge, label %dev_xdp_install.exit.out_unlock_crit_edge

dev_xdp_install.exit.out_unlock_crit_edge:        ; preds = %dev_xdp_install.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %out_unlock

dev_xdp_install.exit.if.end22_crit_edge:          ; preds = %dev_xdp_install.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end22

if.end22:                                         ; preds = %dev_xdp_install.exit.if.end22_crit_edge, %dev_xdp_install.exit.thread
  %call.i = call zeroext i1 @__kasan_check_write(ptr noundef %prog4, i32 noundef 4) #35
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1447
  %34 = ptrtoint ptr %new_prog to i32
  call void @llvm.prefetch.p0(ptr %prog4, i32 1, i32 3, i32 1) #35
  %35 = call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %34, ptr %prog4) #35, !srcloc !1426
  %asmresult.i = extractvalue { i32, i32 } %35, 0
  %36 = inttoptr i32 %asmresult.i to ptr
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1448
  call void @bpf_prog_put(ptr noundef %36) #35
  br label %out_unlock

out_unlock:                                       ; preds = %if.end22, %dev_xdp_install.exit.out_unlock_crit_edge, %dev_xdp_install.exit.thread76, %if.then12, %lor.lhs.false.out_unlock_crit_edge, %if.end3.out_unlock_crit_edge, %land.lhs.true.out_unlock_crit_edge, %entry.out_unlock_crit_edge
  %err.0 = phi i32 [ 0, %if.then12 ], [ %call.i66, %dev_xdp_install.exit.out_unlock_crit_edge ], [ 0, %if.end22 ], [ -67, %entry.out_unlock_crit_edge ], [ -1, %land.lhs.true.out_unlock_crit_edge ], [ -22, %lor.lhs.false.out_unlock_crit_edge ], [ -22, %if.end3.out_unlock_crit_edge ], [ %call24.i, %dev_xdp_install.exit.thread76 ]
  call void @rtnl_unlock() #35
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_xdp_link_show_fdinfo(ptr nocapture noundef readonly %link, ptr noundef %seq) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %dev = getelementptr inbounds %struct.bpf_xdp_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ifindex2 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %ifindex2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ifindex2, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ifindex.0 = phi i32 [ %3, %if.then ], [ 0, %entry.if.end_crit_edge ]
  tail call void @rtnl_unlock() #35
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.182, i32 noundef %ifindex.0) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_xdp_link_fill_link_info(ptr nocapture noundef readonly %link, ptr nocapture noundef writeonly %info) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %dev = getelementptr inbounds %struct.bpf_xdp_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %ifindex2 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %ifindex2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ifindex2, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ifindex.0 = phi i32 [ %3, %if.then ], [ 0, %entry.if.end_crit_edge ]
  tail call void @rtnl_unlock() #35
  %4 = getelementptr inbounds %struct.bpf_link_info, ptr %info, i32 0, i32 3
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %ifindex.0, ptr %4, align 8
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @dev_xdp_install(ptr noundef %dev, i32 noundef %mode, ptr nocapture noundef readonly %bpf_op, ptr noundef %extack, i32 noundef %flags, ptr noundef %prog) unnamed_addr #1 align 64 {
entry:
  %xdp = alloca %struct.netdev_bpf, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %xdp) #35
  %0 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp, i32 0, i32 1
  %1 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp, i32 0, i32 1, i32 0, i32 1
  %2 = getelementptr inbounds %struct.netdev_bpf, ptr %xdp, i32 0, i32 1, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode)
  %cmp = icmp eq i32 %mode, 2
  %cond = zext i1 %cmp to i32
  %3 = ptrtoint ptr %xdp to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %cond, ptr %xdp, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %extack, ptr %2, align 4
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %flags, ptr %0, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %prog, ptr %1, align 4
  %tobool.not = icmp eq ptr %prog, null
  br i1 %tobool.not, label %if.end, label %if.end.thread

if.end:                                           ; preds = %entry
  %call = call i32 %bpf_op(ptr noundef %dev, ptr noundef nonnull %xdp) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp ne i32 %call, 0
  %brmerge = or i1 %cmp, %tobool4.not
  br i1 %brmerge, label %if.end.cleanup_crit_edge, label %if.end.if.then11_crit_edge

if.end.if.then11_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then11

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end.thread:                                    ; preds = %entry
  tail call void @bpf_prog_inc(ptr noundef nonnull %prog) #35
  %call24 = call i32 %bpf_op(ptr noundef %dev, ptr noundef nonnull %xdp) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool4.not25 = icmp eq i32 %call24, 0
  br i1 %tobool4.not25, label %if.end9, label %if.then7

if.then7:                                         ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #37
  call void @bpf_prog_put(ptr noundef nonnull %prog) #35
  br label %cleanup

if.end9:                                          ; preds = %if.end.thread
  br i1 %cmp, label %if.end9.cleanup_crit_edge, label %if.end9.if.then11_crit_edge

if.end9.if.then11_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then11

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then11:                                        ; preds = %if.end9.if.then11_crit_edge, %if.end.if.then11_crit_edge
  %link.i.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 %mode, i32 1
  %7 = ptrtoint ptr %link.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %link.i.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  %prog.i = getelementptr inbounds %struct.bpf_link, ptr %8, i32 0, i32 4
  %arrayidx.i = getelementptr %struct.net_device, ptr %dev, i32 0, i32 154, i32 %mode
  %retval.0.in.i = select i1 %tobool.not.i, ptr %arrayidx.i, ptr %prog.i
  %9 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %retval.0.i = load ptr, ptr %retval.0.in.i, align 4
  call void @bpf_prog_change_xdp(ptr noundef %retval.0.i, ptr noundef %prog) #35
  br label %cleanup

cleanup:                                          ; preds = %if.then11, %if.end9.cleanup_crit_edge, %if.then7, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call24, %if.then7 ], [ 0, %if.then11 ], [ 0, %if.end9.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %xdp) #35
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @generic_xdp_install(ptr noundef %dev, ptr nocapture noundef readonly %xdp) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @lockdep_rtnl_is_held() #35
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b65 = load i1, ptr @generic_xdp_install.__warned, align 1
  br i1 %.b65, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @generic_xdp_install.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.3, i32 noundef 5502, ptr noundef nonnull @.str.10) #35
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %xdp_prog = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 90
  %0 = ptrtoint ptr %xdp_prog to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xdp_prog, align 16
  %prog = getelementptr inbounds %struct.netdev_bpf, ptr %xdp, i32 0, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prog, align 4
  %4 = ptrtoint ptr %xdp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xdp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cond = icmp eq i32 %5, 0
  br i1 %cond, label %do.body4, label %do.end.sw.epilog_crit_edge

do.end.sw.epilog_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.epilog

do.body4:                                         ; preds = %do.end
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1449
  %6 = ptrtoint ptr %xdp_prog to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %3, ptr %xdp_prog, align 16
  %tobool42.not = icmp eq ptr %1, null
  br i1 %tobool42.not, label %if.else49, label %if.then43

if.then43:                                        ; preds = %do.body4
  tail call void @bpf_prog_put(ptr noundef nonnull %1) #35
  %cond66 = icmp eq ptr %3, null
  br i1 %cond66, label %if.then48, label %if.then43.sw.epilog_crit_edge

if.then43.sw.epilog_crit_edge:                    ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.epilog

if.then48:                                        ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @static_key_slow_dec(ptr noundef nonnull @generic_xdp_needed_key) #35
  br label %sw.epilog

if.else49:                                        ; preds = %do.body4
  %tobool50.not = icmp eq ptr %3, null
  br i1 %tobool50.not, label %if.else49.sw.epilog_crit_edge, label %if.then53.critedge

if.else49.sw.epilog_crit_edge:                    ; preds = %if.else49
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.epilog

if.then53.critedge:                               ; preds = %if.else49
  tail call void @static_key_slow_inc(ptr noundef nonnull @generic_xdp_needed_key) #35
  tail call void @dev_disable_lro(ptr noundef %dev)
  %wanted_features.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 25
  %7 = ptrtoint ptr %wanted_features.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %wanted_features.i, align 32
  %and.i = and i64 %8, -36028797018963969
  store i64 %and.i, ptr %wanted_features.i, align 32
  tail call void @netdev_update_features(ptr noundef %dev) #35
  %features.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %9 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %features.i, align 16
  %and1.i = and i64 %10, 36028797018963968
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1.i)
  %tobool.not.i = icmp eq i64 %and1.i, 0
  br i1 %tobool.not.i, label %if.then53.critedge.sw.epilog_crit_edge, label %do.end.i, !prof !1311

if.then53.critedge.sw.epilog_crit_edge:           ; preds = %if.then53.critedge
  call void @__sanitizer_cov_trace_pc() #37
  br label %sw.epilog

do.end.i:                                         ; preds = %if.then53.critedge
  %11 = ptrtoint ptr %dev to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %dev, align 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.not.i.i = icmp eq i8 %12, 0
  br i1 %tobool.not.i.i, label %do.end.i.netdev_name.exit.i_crit_edge, label %lor.lhs.false.i.i

do.end.i.netdev_name.exit.i_crit_edge:            ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netdev_name.exit.i

lor.lhs.false.i.i:                                ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  %call.i.i = tail call ptr @strchr(ptr noundef %dev, i32 noundef 37) #35
  %tobool2.not.i.i = icmp eq ptr %call.i.i, null
  %spec.select.i.i = select i1 %tobool2.not.i.i, ptr %dev, ptr @.str.97
  br label %netdev_name.exit.i

netdev_name.exit.i:                               ; preds = %lor.lhs.false.i.i, %do.end.i.netdev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ @.str.97, %do.end.i.netdev_name.exit.i_crit_edge ], [ %spec.select.i.i, %lor.lhs.false.i.i ]
  %call13.i = tail call fastcc ptr @netdev_reg_state(ptr noundef %dev) #35
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1587, i32 noundef 9, ptr noundef nonnull @.str.181, ptr noundef %retval.0.i.i, ptr noundef nonnull %call13.i) #35
  br label %sw.epilog

sw.epilog:                                        ; preds = %netdev_name.exit.i, %if.then53.critedge.sw.epilog_crit_edge, %if.else49.sw.epilog_crit_edge, %if.then48, %if.then43.sw.epilog_crit_edge, %do.end.sw.epilog_crit_edge
  %ret.0 = phi i32 [ 0, %if.else49.sw.epilog_crit_edge ], [ 0, %if.then48 ], [ -22, %do.end.sw.epilog_crit_edge ], [ 0, %if.then43.sw.epilog_crit_edge ], [ 0, %if.then53.critedge.sw.epilog_crit_edge ], [ 0, %netdev_name.exit.i ]
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_inc(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_change_xdp(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_fire_event(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_forget_dev(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @linkwatch_run_queue() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @ref_tracker_dir_print(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dql_init(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #27

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @stack_depot_init() local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdp_rxq_info_reg(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdp_rxq_info_unreg(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @dev_printk_emit(i32 noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @dev_proc_init() local_unnamed_addr #3 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @netdev_kobject_init() local_unnamed_addr #3 section ".init.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pernet_subsys(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @flush_backlog(ptr nocapture noundef readnone %work) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @local_bh_disable()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @softnet_data to i32)
  %6 = inttoptr i32 %add to ptr
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %lock.i = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 20, i32 2
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #35
  %input_pkt_queue = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 20
  %8 = ptrtoint ptr %input_pkt_queue to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %input_pkt_queue, align 32
  %cmp.not63 = icmp eq ptr %9, %input_pkt_queue
  br i1 %cmp.not63, label %if.end.for.end_crit_edge, label %for.body.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %qlen.i = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 20, i32 1
  %input_queue_head.i = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 13
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %skb.064 = phi ptr [ %9, %for.body.lr.ph ], [ %tmp.065, %for.inc.for.body_crit_edge ]
  %10 = ptrtoint ptr %skb.064 to i32
  call void @__asan_load4_noabort(i32 %10)
  %tmp.065 = load ptr, ptr %skb.064, align 8
  %11 = getelementptr inbounds %struct.anon.83, ptr %skb.064, i32 0, i32 2
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 8
  %reg_state = getelementptr inbounds %struct.net_device, ptr %13, i32 0, i32 121
  %14 = ptrtoint ptr %reg_state to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load = load i8, ptr %reg_state, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %bf.load)
  %cmp10 = icmp eq i8 %bf.load, 2
  br i1 %cmp10, label %if.then11, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.then11:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  %15 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %qlen.i, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %qlen.i, align 4
  %17 = ptrtoint ptr %skb.064 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %skb.064, align 8
  %prev9.i = getelementptr inbounds %struct.anon.83, ptr %skb.064, i32 0, i32 1
  %19 = ptrtoint ptr %prev9.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev9.i, align 4
  store ptr null, ptr %prev9.i, align 4
  store ptr null, ptr %skb.064, align 8
  %prev17.i = getelementptr inbounds %struct.anon.83, ptr %18, i32 0, i32 1
  %21 = ptrtoint ptr %prev17.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %20, ptr %prev17.i, align 4
  %22 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %18, ptr %20, align 8
  tail call void @__dev_kfree_skb_irq(ptr noundef %skb.064, i32 noundef 1) #35
  %23 = ptrtoint ptr %input_queue_head.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %input_queue_head.i, align 128
  %inc.i = add i32 %24, 1
  store i32 %inc.i, ptr %input_queue_head.i, align 128
  br label %for.inc

for.inc:                                          ; preds = %if.then11, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %tmp.065, %input_pkt_queue
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #35
  tail call void @trace_hardirqs_on() #35
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  %process_queue = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 1
  %25 = ptrtoint ptr %process_queue to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %process_queue, align 8
  %cmp22.not67 = icmp eq ptr %26, %process_queue
  br i1 %cmp22.not67, label %for.end.for.end33_crit_edge, label %for.body23.lr.ph

for.end.for.end33_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end33

for.body23.lr.ph:                                 ; preds = %for.end
  %qlen.i56 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 1, i32 1
  %input_queue_head.i60 = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 13
  br label %for.body23

for.body23:                                       ; preds = %for.inc31.for.body23_crit_edge, %for.body23.lr.ph
  %skb.168 = phi ptr [ %26, %for.body23.lr.ph ], [ %tmp.169, %for.inc31.for.body23_crit_edge ]
  %27 = ptrtoint ptr %skb.168 to i32
  call void @__asan_load4_noabort(i32 %27)
  %tmp.169 = load ptr, ptr %skb.168, align 8
  %28 = getelementptr inbounds %struct.anon.83, ptr %skb.168, i32 0, i32 2
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 8
  %reg_state24 = getelementptr inbounds %struct.net_device, ptr %30, i32 0, i32 121
  %31 = ptrtoint ptr %reg_state24 to i32
  call void @__asan_load1_noabort(i32 %31)
  %bf.load25 = load i8, ptr %reg_state24, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %bf.load25)
  %cmp27 = icmp eq i8 %bf.load25, 2
  br i1 %cmp27, label %if.then28, label %for.body23.for.inc31_crit_edge

for.body23.for.inc31_crit_edge:                   ; preds = %for.body23
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc31

if.then28:                                        ; preds = %for.body23
  call void @__sanitizer_cov_trace_pc() #37
  %32 = ptrtoint ptr %qlen.i56 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %qlen.i56, align 4
  %sub.i57 = add i32 %33, -1
  store volatile i32 %sub.i57, ptr %qlen.i56, align 4
  %34 = ptrtoint ptr %skb.168 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %skb.168, align 8
  %prev9.i58 = getelementptr inbounds %struct.anon.83, ptr %skb.168, i32 0, i32 1
  %36 = ptrtoint ptr %prev9.i58 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev9.i58, align 4
  store ptr null, ptr %prev9.i58, align 4
  store ptr null, ptr %skb.168, align 8
  %prev17.i59 = getelementptr inbounds %struct.anon.83, ptr %35, i32 0, i32 1
  %38 = ptrtoint ptr %prev17.i59 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %37, ptr %prev17.i59, align 4
  %39 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %35, ptr %37, align 8
  tail call void @kfree_skb_reason(ptr noundef %skb.168, i32 noundef 0) #35
  %40 = ptrtoint ptr %input_queue_head.i60 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %input_queue_head.i60, align 128
  %inc.i61 = add i32 %41, 1
  store i32 %inc.i61, ptr %input_queue_head.i60, align 128
  br label %for.inc31

for.inc31:                                        ; preds = %if.then28, %for.body23.for.inc31_crit_edge
  %cmp22.not = icmp eq ptr %tmp.169, %process_queue
  br i1 %cmp22.not, label %for.inc31.for.end33_crit_edge, label %for.inc31.for.body23_crit_edge

for.inc31.for.body23_crit_edge:                   ; preds = %for.inc31
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body23

for.inc31.for.end33_crit_edge:                    ; preds = %for.inc31
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end33

for.end33:                                        ; preds = %for.inc31.for.end33_crit_edge, %for.end.for.end33_crit_edge
  tail call fastcc void @local_bh_enable()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @rps_trigger_softirq(ptr noundef %data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %backlog = getelementptr inbounds %struct.softnet_data, ptr %data, i32 0, i32 21
  %state.i = getelementptr inbounds %struct.softnet_data, ptr %data, i32 0, i32 21, i32 1
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %2 = and i32 %1, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.if.end12.i_crit_edge, label %do.end.i

entry.if.end12.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.end.i:                                         ; preds = %entry
  %thread1.i = getelementptr inbounds %struct.softnet_data, ptr %data, i32 0, i32 21, i32 16
  %3 = ptrtoint ptr %thread1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %thread1.i, align 4
  %tobool2.not.i = icmp eq ptr %4, null
  br i1 %tobool2.not.i, label %do.end.i.if.end12.i_crit_edge, label %do.end6.i

do.end.i.if.end12.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.end6.i:                                        ; preds = %do.end.i
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp.not.i = icmp eq i32 %6, 1
  br i1 %cmp.not.i, label %do.end6.i.if.end.i_crit_edge, label %if.then8.i

do.end6.i.if.end.i_crit_edge:                     ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then8.i:                                       ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_set_bit(i32 noundef 9, ptr noundef %state.i) #35
  br label %if.end.i

if.end.i:                                         ; preds = %if.then8.i, %do.end6.i.if.end.i_crit_edge
  %call10.i = tail call i32 @wake_up_process(ptr noundef nonnull %4) #35
  br label %____napi_schedule.exit

if.end12.i:                                       ; preds = %do.end.i.if.end12.i_crit_edge, %entry.if.end12.i_crit_edge
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %data, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %backlog, ptr noundef %8, ptr noundef %data) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end12.i.list_add_tail.exit.i_crit_edge

if.end12.i.list_add_tail.exit.i_crit_edge:        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %backlog, ptr %prev.i.i, align 4
  %10 = ptrtoint ptr %backlog to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %data, ptr %backlog, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.softnet_data, ptr %data, i32 0, i32 21, i32 0, i32 1
  %11 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev3.i.i.i, align 4
  %12 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %backlog, ptr %8, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.end12.i.list_add_tail.exit.i_crit_edge
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #35
  br label %____napi_schedule.exit

____napi_schedule.exit:                           ; preds = %list_add_tail.exit.i, %if.end.i
  %received_rps = getelementptr inbounds %struct.softnet_data, ptr %data, i32 0, i32 4
  %13 = ptrtoint ptr %received_rps to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %received_rps, align 8
  %inc = add i32 %14, 1
  store i32 %inc, ptr %received_rps, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @process_backlog(ptr noundef %napi, i32 noundef %quota) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %napi, i32 -472
  %rps_ipi_list.i = getelementptr i8, ptr %napi, i32 -396
  %0 = ptrtoint ptr %rps_ipi_list.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rps_ipi_list.i, align 4
  %cmp.i.not = icmp eq ptr %1, null
  br i1 %cmp.i.not, label %entry.if.end4_crit_edge, label %do.body

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end4

do.body:                                          ; preds = %entry
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %2, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool.not, label %if.then3, label %do.body.if.end_crit_edge

do.body.if.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then3:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %if.end

if.end:                                           ; preds = %if.then3, %do.body.if.end_crit_edge
  tail call fastcc void @net_rps_action_and_irq_enable(ptr noundef %add.ptr)
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry.if.end4_crit_edge
  %3 = load i32, ptr @dev_rx_weight, align 4
  %weight = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 2
  %4 = ptrtoint ptr %weight to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %weight, align 4
  %process_queue = getelementptr i8, ptr %napi, i32 -464
  %qlen.i.i = getelementptr i8, ptr %napi, i32 -456
  %input_queue_head.i = getelementptr i8, ptr %napi, i32 -216
  %lock.i = getelementptr i8, ptr %napi, i32 -44
  %input_pkt_queue = getelementptr i8, ptr %napi, i32 -56
  %prev.i = getelementptr i8, ptr %napi, i32 -460
  %prev2.i.i = getelementptr i8, ptr %napi, i32 -52
  %qlen.i = getelementptr i8, ptr %napi, i32 -48
  %state = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 1
  br label %while.cond6.preheader

while.cond6.preheader:                            ; preds = %if.then.i64, %if.end4
  %work.075 = phi i32 [ 0, %if.end4 ], [ %work.1, %if.then.i64 ]
  br label %while.cond6

while.cond6:                                      ; preds = %rcu_read_unlock.exit.while.cond6_crit_edge, %while.cond6.preheader
  %work.1 = phi i32 [ %inc, %rcu_read_unlock.exit.while.cond6_crit_edge ], [ %work.075, %while.cond6.preheader ]
  %5 = ptrtoint ptr %process_queue to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %process_queue, align 4
  %cmp.i.i = icmp eq ptr %6, %process_queue
  %tobool.not.i5169 = icmp eq ptr %6, null
  %tobool.not.i51 = or i1 %cmp.i.i, %tobool.not.i5169
  br i1 %tobool.not.i51, label %do.body13, label %while.body9

while.body9:                                      ; preds = %while.cond6
  %7 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %qlen.i.i, align 4
  %sub.i.i = add i32 %8, -1
  store volatile i32 %sub.i.i, ptr %qlen.i.i, align 4
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %6, align 8
  %prev9.i.i = getelementptr inbounds %struct.anon.83, ptr %6, i32 0, i32 1
  %11 = ptrtoint ptr %prev9.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev9.i.i, align 4
  store ptr null, ptr %prev9.i.i, align 4
  store ptr null, ptr %6, align 8
  %prev17.i.i = getelementptr inbounds %struct.anon.83, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %prev17.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %12, ptr %prev17.i.i, align 4
  %14 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %10, ptr %12, align 8
  %15 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %18, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %while.body9.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

while.body9.rcu_read_lock.exit_crit_edge:         ; preds = %while.body9
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %while.body9
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %while.body9.rcu_read_lock.exit_crit_edge
  %call10 = tail call fastcc i32 @__netif_receive_skb(ptr noundef nonnull %6)
  %call.i53 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i53, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i56

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i56:                                ; preds = %rcu_read_lock.exit
  %call1.i54 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i54)
  %tobool.not.i55 = icmp eq i32 %call1.i54, 0
  br i1 %tobool.not.i55, label %land.lhs.true.i56.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i58

land.lhs.true.i56.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i56
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i58:                               ; preds = %land.lhs.true.i56
  %.b4.i57 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i57, label %land.lhs.true2.i58.rcu_read_unlock.exit_crit_edge, label %if.then.i59

land.lhs.true2.i58.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i58
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i59:                                      ; preds = %land.lhs.true2.i58
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i59, %land.lhs.true2.i58.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i56.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %19 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i60 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i.i60 to ptr
  %preempt_count.i.i.i.i61 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %preempt_count.i.i.i.i61 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %preempt_count.i.i.i.i61, align 4
  %sub.i.i.i = add i32 %22, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i61, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  %23 = ptrtoint ptr %input_queue_head.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %input_queue_head.i, align 128
  %inc.i = add i32 %24, 1
  store i32 %inc.i, ptr %input_queue_head.i, align 128
  %inc = add i32 %work.1, 1
  %cmp.not = icmp slt i32 %inc, %quota
  br i1 %cmp.not, label %rcu_read_unlock.exit.while.cond6_crit_edge, label %cleanup33.loopexit

rcu_read_unlock.exit.while.cond6_crit_edge:       ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond6

do.body13:                                        ; preds = %while.cond6
  %25 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i62 = and i32 %25, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i62)
  %tobool16.not = icmp eq i32 %and.i.i62, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool16.not, label %if.then19, label %do.body13.if.end20_crit_edge

do.body13.if.end20_crit_edge:                     ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end20

if.then19:                                        ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %do.body13.if.end20_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #35
  %26 = ptrtoint ptr %input_pkt_queue to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %input_pkt_queue, align 4
  %cmp.i63 = icmp eq ptr %27, %input_pkt_queue
  br i1 %cmp.i63, label %if.then25, label %if.then.i64

if.then25:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #37
  %28 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %state, align 8
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #35
  tail call void @trace_hardirqs_on() #35
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  br label %cleanup33

if.then.i64:                                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #37
  %29 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i, align 4
  %31 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %prev2.i.i, align 4
  %prev5.i.i = getelementptr inbounds %struct.anon.83, ptr %27, i32 0, i32 1
  %33 = ptrtoint ptr %prev5.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %30, ptr %prev5.i.i, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %27, ptr %30, align 8
  %35 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %process_queue, ptr %32, align 8
  store volatile ptr %32, ptr %prev.i, align 4
  %36 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %qlen.i, align 4
  %38 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %qlen.i.i, align 4
  %add.i = add i32 %39, %37
  store i32 %add.i, ptr %qlen.i.i, align 4
  %40 = ptrtoint ptr %input_pkt_queue to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %input_pkt_queue, ptr %input_pkt_queue, align 4
  store ptr %input_pkt_queue, ptr %prev2.i.i, align 4
  store i32 0, ptr %qlen.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #35
  tail call void @trace_hardirqs_on() #35
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  br label %while.cond6.preheader

cleanup33.loopexit:                               ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #37
  %41 = add i32 %work.075, 1
  %smax.le = call i32 @llvm.smax.i32(i32 %quota, i32 %41)
  br label %cleanup33

cleanup33:                                        ; preds = %cleanup33.loopexit, %if.then25
  %retval.2 = phi i32 [ %smax.le, %cleanup33.loopexit ], [ %work.1, %if.then25 ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pernet_device(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @open_softirq(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @net_tx_action(ptr nocapture noundef readnone %h) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @softnet_data to i32)
  %6 = inttoptr i32 %add to ptr
  %completion_queue = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 9
  %7 = ptrtoint ptr %completion_queue to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %completion_queue, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %entry.if.end56_crit_edge, label %if.then

entry.if.end56_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end56

if.then:                                          ; preds = %entry
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %9, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool4.not = icmp eq i32 %and.i.i, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool4.not, label %if.then6, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then.if.end_crit_edge
  %10 = ptrtoint ptr %completion_queue to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %completion_queue, align 4
  store ptr null, ptr %completion_queue, align 4
  tail call void @trace_hardirqs_on() #35
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  %tobool14.not143 = icmp eq ptr %11, null
  br i1 %tobool14.not143, label %if.end.if.end56_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

if.end.if.end56_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end56

while.body:                                       ; preds = %if.end55.while.body_crit_edge, %if.end.while.body_crit_edge
  %clist.0144 = phi ptr [ %13, %if.end55.while.body_crit_edge ], [ %11, %if.end.while.body_crit_edge ]
  %12 = ptrtoint ptr %clist.0144 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %clist.0144, align 8
  %users = getelementptr inbounds %struct.sk_buff, ptr %clist.0144, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users, i32 noundef 4) #35
  %14 = ptrtoint ptr %users to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %users, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool16.not = icmp eq i32 %15, 0
  br i1 %tobool16.not, label %while.body.if.end34_crit_edge, label %do.end28, !prof !1311

while.body.if.end34_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end34

do.end28:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #37
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4898, i32 noundef 9, ptr noundef null) #35
  br label %if.end34

if.end34:                                         ; preds = %do.end28, %while.body.if.end34_crit_edge
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %clist.0144, i32 0, i32 3
  %16 = ptrtoint ptr %cb.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cb.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp = icmp eq i32 %17, 0
  br i1 %cmp, label %if.then49, label %if.else, !prof !1311

if.then49:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @trace_consume_skb(ptr noundef nonnull %clist.0144)
  br label %if.end50

if.else:                                          ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #37
  tail call fastcc void @trace_kfree_skb(ptr noundef nonnull %clist.0144)
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then49
  %fclone = getelementptr inbounds %struct.sk_buff, ptr %clist.0144, i32 0, i32 12
  %18 = ptrtoint ptr %fclone to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load = load i8, ptr %fclone, align 2
  %19 = and i8 %bf.load, 48
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp51.not = icmp eq i8 %19, 0
  br i1 %cmp51.not, label %if.else54, label %if.then53

if.then53:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__kfree_skb(ptr noundef nonnull %clist.0144) #35
  br label %if.end55

if.else54:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @__kfree_skb_defer(ptr noundef nonnull %clist.0144) #35
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.then53
  %tobool14.not = icmp eq ptr %13, null
  br i1 %tobool14.not, label %if.end55.if.end56_crit_edge, label %if.end55.while.body_crit_edge

if.end55.while.body_crit_edge:                    ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body

if.end55.if.end56_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end56

if.end56:                                         ; preds = %if.end55.if.end56_crit_edge, %if.end.if.end56_crit_edge, %entry.if.end56_crit_edge
  %output_queue = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 7
  %20 = ptrtoint ptr %output_queue to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %output_queue, align 4
  %tobool57.not = icmp eq ptr %21, null
  br i1 %tobool57.not, label %if.end56.if.end106_crit_edge, label %if.then58

if.end56.if.end106_crit_edge:                     ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end106

if.then58:                                        ; preds = %if.end56
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i133 = and i32 %22, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i133)
  %tobool62.not = icmp eq i32 %and.i.i133, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool62.not, label %if.then65, label %if.then58.if.end66_crit_edge

if.then58.if.end66_crit_edge:                     ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end66

if.then65:                                        ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %if.then58.if.end66_crit_edge
  %23 = ptrtoint ptr %output_queue to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %output_queue, align 4
  store ptr null, ptr %output_queue, align 4
  %output_queue_tailp = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 8
  %25 = ptrtoint ptr %output_queue_tailp to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %output_queue, ptr %output_queue_tailp, align 8
  tail call void @trace_hardirqs_on() #35
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %29, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1312
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #35
  %call.i = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i, label %if.end66.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end66.rcu_read_lock.exit_crit_edge:            ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end66
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #35
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end66.rcu_read_lock.exit_crit_edge
  %tobool76.not146 = icmp eq ptr %24, null
  br i1 %tobool76.not146, label %rcu_read_lock.exit.while.end105_crit_edge, label %rcu_read_lock.exit.while.body77_crit_edge

rcu_read_lock.exit.while.body77_crit_edge:        ; preds = %rcu_read_lock.exit
  br label %while.body77

rcu_read_lock.exit.while.end105_crit_edge:        ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end105

while.body77:                                     ; preds = %cleanup.while.body77_crit_edge, %rcu_read_lock.exit.while.body77_crit_edge
  %head.0147 = phi ptr [ %31, %cleanup.while.body77_crit_edge ], [ %24, %rcu_read_lock.exit.while.body77_crit_edge ]
  %next_sched = getelementptr inbounds %struct.Qdisc, ptr %head.0147, i32 0, i32 22
  %30 = ptrtoint ptr %next_sched to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %next_sched, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1450
  %flags = getelementptr inbounds %struct.Qdisc, ptr %head.0147, i32 0, i32 2
  %32 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags, align 8
  %and = and i32 %33, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool84.not = icmp eq i32 %and, 0
  br i1 %tobool84.not, label %if.then85, label %if.else87

if.then85:                                        ; preds = %while.body77
  call void @__sanitizer_cov_trace_pc() #37
  %lock.i = getelementptr inbounds %struct.Qdisc, ptr %head.0147, i32 0, i32 17, i32 3
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #35
  br label %if.end99

if.else87:                                        ; preds = %while.body77
  %state = getelementptr inbounds %struct.Qdisc, ptr %head.0147, i32 0, i32 20
  %34 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %state, align 4
  %36 = and i32 %35, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool89.not = icmp eq i32 %36, 0
  br i1 %tobool89.not, label %if.else87.if.end99_crit_edge, label %if.then96, !prof !1311

if.else87.if.end99_crit_edge:                     ; preds = %if.else87
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end99

if.then96:                                        ; preds = %if.else87
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state) #35
  br label %cleanup

if.end99:                                         ; preds = %if.else87.if.end99_crit_edge, %if.then85
  %root_lock.0 = phi ptr [ null, %if.else87.if.end99_crit_edge ], [ %lock.i, %if.then85 ]
  %state100 = getelementptr inbounds %struct.Qdisc, ptr %head.0147, i32 0, i32 20
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state100) #35
  tail call fastcc void @qdisc_run(ptr noundef nonnull %head.0147)
  %tobool101.not = icmp eq ptr %root_lock.0, null
  br i1 %tobool101.not, label %if.end99.cleanup_crit_edge, label %if.then102

if.end99.cleanup_crit_edge:                       ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.then102:                                       ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_raw_spin_unlock(ptr noundef nonnull %root_lock.0) #35
  br label %cleanup

cleanup:                                          ; preds = %if.then102, %if.end99.cleanup_crit_edge, %if.then96
  %tobool76.not = icmp eq ptr %31, null
  br i1 %tobool76.not, label %cleanup.while.end105_crit_edge, label %cleanup.while.body77_crit_edge

cleanup.while.body77_crit_edge:                   ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body77

cleanup.while.end105_crit_edge:                   ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end105

while.end105:                                     ; preds = %cleanup.while.end105_crit_edge, %rcu_read_lock.exit.while.end105_crit_edge
  %call.i134 = tail call zeroext i1 @rcu_is_watching() #35
  br i1 %call.i134, label %while.end105.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i137

while.end105.rcu_read_unlock.exit_crit_edge:      ; preds = %while.end105
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true.i137:                               ; preds = %while.end105
  %call1.i135 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i135)
  %tobool.not.i136 = icmp eq i32 %call1.i135, 0
  br i1 %tobool.not.i136, label %land.lhs.true.i137.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i139

land.lhs.true.i137.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i137
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

land.lhs.true2.i139:                              ; preds = %land.lhs.true.i137
  %.b4.i138 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i138, label %land.lhs.true2.i139.rcu_read_unlock.exit_crit_edge, label %if.then.i140

land.lhs.true2.i139.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i139
  call void @__sanitizer_cov_trace_pc() #37
  br label %rcu_read_unlock.exit

if.then.i140:                                     ; preds = %land.lhs.true2.i139
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #35
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i140, %land.lhs.true2.i139.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i137.rcu_read_unlock.exit_crit_edge, %while.end105.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1316
  %37 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i.i141 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i.i141 to ptr
  %preempt_count.i.i.i.i142 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i.i142 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i.i142, align 4
  %sub.i.i.i = add i32 %40, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i142, align 4
  tail call void @rcu_read_unlock_strict() #35
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #35
  br label %if.end106

if.end106:                                        ; preds = %rcu_read_unlock.exit, %if.end56.if.end106_crit_edge
  tail call void @xfrm_dev_backlog(ptr noundef %6) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @net_rx_action(ptr nocapture noundef readnone %h) #1 align 64 {
entry:
  %do_repoll.i = alloca i8, align 1
  %list = alloca %struct.list_head, align 4
  %repoll = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @softnet_data to i32)
  %6 = inttoptr i32 %add to ptr
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %7 = load volatile i32, ptr @jiffies, align 128
  %8 = load i32, ptr @netdev_budget_usecs, align 4
  %call3.i = tail call i32 @__usecs_to_jiffies(i32 noundef %8) #35
  %9 = load i32, ptr @netdev_budget, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %list) #35
  %10 = getelementptr inbounds %struct.list_head, ptr %list, i32 0, i32 1
  %11 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %list, ptr %list, align 4
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %list, ptr %10, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %repoll) #35
  %13 = getelementptr inbounds %struct.list_head, ptr %repoll, i32 0, i32 1
  %14 = ptrtoint ptr %repoll to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %repoll, ptr %repoll, align 4
  %15 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %repoll, ptr %13, align 4
  %16 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  call void @trace_hardirqs_off() #35
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %17 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %6, align 4
  %cmp.i.not.i = icmp eq ptr %18, %6
  br i1 %cmp.i.not.i, label %if.end.list_splice_init.exit_crit_edge, label %if.then.i63

if.end.list_splice_init.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_splice_init.exit

if.then.i63:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %19 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %list, align 4
  %prev2.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %21 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %23 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %list, ptr %prev3.i.i, align 4
  store ptr %18, ptr %list, align 4
  %24 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %20, ptr %22, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  %25 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev6.i.i, align 4
  %26 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %6, ptr %6, align 4
  store ptr %6, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i63, %if.end.list_splice_init.exit_crit_edge
  call void @trace_hardirqs_on() #35
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  %27 = add i32 %call3.i, %7
  br label %for.cond

for.cond:                                         ; preds = %lor.rhs.for.cond_crit_edge, %list_splice_init.exit
  %budget.0 = phi i32 [ %9, %list_splice_init.exit ], [ %sub, %lor.rhs.for.cond_crit_edge ]
  %28 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %list, align 4
  %cmp.i65.not = icmp eq ptr %29, %list
  br i1 %cmp.i65.not, label %if.then16, label %if.end22

if.then16:                                        ; preds = %for.cond
  %rps_ipi_list.i = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 5
  %30 = ptrtoint ptr %rps_ipi_list.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rps_ipi_list.i, align 4
  %cmp.i66.not = icmp eq ptr %31, null
  br i1 %cmp.i66.not, label %land.lhs.true, label %if.then16.do.body32_crit_edge

if.then16.do.body32_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body32

land.lhs.true:                                    ; preds = %if.then16
  %32 = ptrtoint ptr %repoll to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %repoll, align 4
  %cmp.i67.not = icmp eq ptr %33, %repoll
  br i1 %cmp.i67.not, label %land.lhs.true.cleanup49_crit_edge, label %land.lhs.true.do.body32_crit_edge

land.lhs.true.do.body32_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body32

land.lhs.true.cleanup49_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup49

if.end22:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %do_repoll.i) #35
  %34 = ptrtoint ptr %do_repoll.i to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 0, ptr %do_repoll.i, align 1
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %29) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end22.list_del_init.exit.i_crit_edge

if.end22.list_del_init.exit.i_crit_edge:          ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %35 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %prev.i.i.i, align 4
  %37 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %29, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %36, ptr %prev1.i.i.i.i, align 4
  %40 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %38, ptr %36, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %if.end22.list_del_init.exit.i_crit_edge
  %41 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %29, ptr %29, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %42 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %29, ptr %prev.i3.i.i, align 4
  %dev1.i.i = getelementptr inbounds %struct.napi_struct, ptr %29, i32 0, i32 7
  %43 = ptrtoint ptr %dev1.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %dev1.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %44, null
  br i1 %tobool.not.i.i, label %list_del_init.exit.i.netpoll_poll_lock.exit.i_crit_edge, label %land.lhs.true.i.i

list_del_init.exit.i.netpoll_poll_lock.exit.i_crit_edge: ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netpoll_poll_lock.exit.i

land.lhs.true.i.i:                                ; preds = %list_del_init.exit.i
  %npinfo.i.i = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 126
  %45 = ptrtoint ptr %npinfo.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %npinfo.i.i, align 16
  %tobool2.not.i.i = icmp eq ptr %46, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.netpoll_poll_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true.i.i.netpoll_poll_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netpoll_poll_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  %47 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 3
  %49 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cpu.i.i, align 4
  %poll_owner.i.i = getelementptr inbounds %struct.napi_struct, ptr %29, i32 0, i32 6
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %do.end22.i.i, %if.then.i.i
  %call.i.i6.i = call zeroext i1 @__kasan_check_write(ptr noundef %poll_owner.i.i, i32 noundef 4) #35
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1389
  call void @llvm.prefetch.p0(ptr %poll_owner.i.i, i32 1, i32 3, i32 1) #35
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.body.i.i.i.do.body.i.i.i_crit_edge, %while.cond.i.i
  %51 = call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %poll_owner.i.i, i32 -1, i32 %50) #35, !srcloc !1382
  %asmresult.i.i.i = extractvalue { i32, i32 } %51, 0
  %tobool.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %__cmpxchg.exit.i.i, label %do.body.i.i.i.do.body.i.i.i_crit_edge

do.body.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.body.i.i.i

__cmpxchg.exit.i.i:                               ; preds = %do.body.i.i.i
  %asmresult1.i.i.i = extractvalue { i32, i32 } %51, 1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1390
  %cmp.not.i.i = icmp eq i32 %asmresult1.i.i.i, -1
  br i1 %cmp.not.i.i, label %__cmpxchg.exit.i.i.netpoll_poll_lock.exit.i_crit_edge, label %do.end22.i.i

__cmpxchg.exit.i.i.netpoll_poll_lock.exit.i_crit_edge: ; preds = %__cmpxchg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %netpoll_poll_lock.exit.i

do.end22.i.i:                                     ; preds = %__cmpxchg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1391
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #35, !srcloc !1392
  br label %while.cond.i.i

netpoll_poll_lock.exit.i:                         ; preds = %__cmpxchg.exit.i.i.netpoll_poll_lock.exit.i_crit_edge, %land.lhs.true.i.i.netpoll_poll_lock.exit.i_crit_edge, %list_del_init.exit.i.netpoll_poll_lock.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ null, %land.lhs.true.i.i.netpoll_poll_lock.exit.i_crit_edge ], [ null, %list_del_init.exit.i.netpoll_poll_lock.exit.i_crit_edge ], [ %29, %__cmpxchg.exit.i.i.netpoll_poll_lock.exit.i_crit_edge ]
  %call1.i = call fastcc i32 @__napi_poll(ptr noundef %29, ptr noundef nonnull %do_repoll.i) #35
  %52 = ptrtoint ptr %do_repoll.i to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %do_repoll.i, align 1, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool.not.i = icmp eq i8 %53, 0
  br i1 %tobool.not.i, label %netpoll_poll_lock.exit.i.if.end.i70_crit_edge, label %if.then.i69

netpoll_poll_lock.exit.i.if.end.i70_crit_edge:    ; preds = %netpoll_poll_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i70

if.then.i69:                                      ; preds = %netpoll_poll_lock.exit.i
  %54 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %13, align 4
  %call.i.i7.i = call zeroext i1 @__list_add_valid(ptr noundef %29, ptr noundef %55, ptr noundef nonnull %repoll) #35
  br i1 %call.i.i7.i, label %if.end.i.i8.i, label %if.then.i69.if.end.i70_crit_edge

if.then.i69.if.end.i70_crit_edge:                 ; preds = %if.then.i69
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i70

if.end.i.i8.i:                                    ; preds = %if.then.i69
  call void @__sanitizer_cov_trace_pc() #37
  %56 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %29, ptr %13, align 4
  %57 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %repoll, ptr %29, align 4
  %58 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %55, ptr %prev.i3.i.i, align 4
  %59 = ptrtoint ptr %55 to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %29, ptr %55, align 4
  br label %if.end.i70

if.end.i70:                                       ; preds = %if.end.i.i8.i, %if.then.i69.if.end.i70_crit_edge, %netpoll_poll_lock.exit.i.if.end.i70_crit_edge
  %tobool.not.i9.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool.not.i9.i, label %if.end.i70.napi_poll.exit_crit_edge, label %do.end5.i.i

if.end.i70.napi_poll.exit_crit_edge:              ; preds = %if.end.i70
  call void @__sanitizer_cov_trace_pc() #37
  br label %napi_poll.exit

do.end5.i.i:                                      ; preds = %if.end.i70
  call void @__sanitizer_cov_trace_pc() #37
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #35, !srcloc !1399
  %poll_owner.i10.i = getelementptr inbounds %struct.napi_struct, ptr %retval.0.i.i, i32 0, i32 6
  %60 = ptrtoint ptr %poll_owner.i10.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile i32 -1, ptr %poll_owner.i10.i, align 4
  br label %napi_poll.exit

napi_poll.exit:                                   ; preds = %do.end5.i.i, %if.end.i70.napi_poll.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %do_repoll.i) #35
  %sub = sub i32 %budget.0, %call1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub)
  %cmp = icmp slt i32 %sub, 1
  br i1 %cmp, label %napi_poll.exit.if.then30_crit_edge, label %lor.rhs, !prof !1310

napi_poll.exit.if.then30_crit_edge:               ; preds = %napi_poll.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then30

lor.rhs:                                          ; preds = %napi_poll.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %61 = load volatile i32, ptr @jiffies, align 128
  %sub26 = sub i32 %61, %27
  %cmp27 = icmp sgt i32 %sub26, -1
  br i1 %cmp27, label %lor.rhs.if.then30_crit_edge, label %lor.rhs.for.cond_crit_edge, !prof !1310

lor.rhs.for.cond_crit_edge:                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond

lor.rhs.if.then30_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.then30

if.then30:                                        ; preds = %lor.rhs.if.then30_crit_edge, %napi_poll.exit.if.then30_crit_edge
  %time_squeeze = getelementptr inbounds %struct.softnet_data, ptr %6, i32 0, i32 3
  %62 = ptrtoint ptr %time_squeeze to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %time_squeeze, align 4
  %inc = add i32 %63, 1
  store i32 %inc, ptr %time_squeeze, align 4
  br label %do.body32

do.body32:                                        ; preds = %if.then30, %land.lhs.true.do.body32_crit_edge, %if.then16.do.body32_crit_edge
  %64 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i71 = and i32 %64, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i71)
  %tobool35.not = icmp eq i32 %and.i.i71, 0
  call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool35.not, label %if.then38, label %do.body32.if.end39_crit_edge

do.body32.if.end39_crit_edge:                     ; preds = %do.body32
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end39

if.then38:                                        ; preds = %do.body32
  call void @__sanitizer_cov_trace_pc() #37
  call void @trace_hardirqs_off() #35
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %do.body32.if.end39_crit_edge
  %65 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile ptr, ptr %6, align 4
  %cmp.i.not.i72 = icmp eq ptr %66, %6
  br i1 %cmp.i.not.i72, label %if.end39.list_splice_tail_init.exit_crit_edge, label %if.then.i75

if.end39.list_splice_tail_init.exit_crit_edge:    ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_splice_tail_init.exit

if.then.i75:                                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #37
  %67 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %10, align 4
  %prev2.i.i73 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %69 = ptrtoint ptr %prev2.i.i73 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %prev2.i.i73, align 4
  %prev3.i.i74 = getelementptr inbounds %struct.list_head, ptr %66, i32 0, i32 1
  %71 = ptrtoint ptr %prev3.i.i74 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %68, ptr %prev3.i.i74, align 4
  %72 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %66, ptr %68, align 4
  %73 = ptrtoint ptr %70 to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %list, ptr %70, align 4
  store ptr %70, ptr %10, align 4
  %74 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %74)
  store volatile ptr %6, ptr %6, align 4
  store ptr %6, ptr %prev2.i.i73, align 4
  br label %list_splice_tail_init.exit

list_splice_tail_init.exit:                       ; preds = %if.then.i75, %if.end39.list_splice_tail_init.exit_crit_edge
  %75 = ptrtoint ptr %repoll to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile ptr, ptr %repoll, align 4
  %cmp.i.not.i77 = icmp eq ptr %76, %repoll
  br i1 %cmp.i.not.i77, label %list_splice_tail_init.exit.list_splice_tail.exit_crit_edge, label %if.then.i81

list_splice_tail_init.exit.list_splice_tail.exit_crit_edge: ; preds = %list_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_splice_tail.exit

if.then.i81:                                      ; preds = %list_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  %77 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %10, align 4
  %79 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %13, align 4
  %prev3.i.i80 = getelementptr inbounds %struct.list_head, ptr %76, i32 0, i32 1
  %81 = ptrtoint ptr %prev3.i.i80 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %78, ptr %prev3.i.i80, align 4
  %82 = ptrtoint ptr %78 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %76, ptr %78, align 4
  %83 = ptrtoint ptr %80 to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %list, ptr %80, align 4
  store ptr %80, ptr %10, align 4
  br label %list_splice_tail.exit

list_splice_tail.exit:                            ; preds = %if.then.i81, %list_splice_tail_init.exit.list_splice_tail.exit_crit_edge
  %84 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile ptr, ptr %list, align 4
  %cmp.i.not.i83 = icmp eq ptr %85, %list
  br i1 %cmp.i.not.i83, label %list_splice_tail.exit.list_splice.exit_crit_edge, label %if.then.i87

list_splice_tail.exit.list_splice.exit_crit_edge: ; preds = %list_splice_tail.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_splice.exit

if.then.i87:                                      ; preds = %list_splice_tail.exit
  call void @__sanitizer_cov_trace_pc() #37
  %86 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %6, align 4
  %88 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %10, align 4
  %prev3.i.i85 = getelementptr inbounds %struct.list_head, ptr %85, i32 0, i32 1
  %90 = ptrtoint ptr %prev3.i.i85 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %6, ptr %prev3.i.i85, align 4
  store ptr %85, ptr %6, align 4
  %91 = ptrtoint ptr %89 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %87, ptr %89, align 4
  %prev6.i.i86 = getelementptr inbounds %struct.list_head, ptr %87, i32 0, i32 1
  %92 = ptrtoint ptr %prev6.i.i86 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %89, ptr %prev6.i.i86, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i87, %list_splice_tail.exit.list_splice.exit_crit_edge
  %93 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile ptr, ptr %6, align 4
  %cmp.i89.not = icmp eq ptr %94, %6
  br i1 %cmp.i89.not, label %list_splice.exit.if.end48_crit_edge, label %if.then47

list_splice.exit.if.end48_crit_edge:              ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end48

if.then47:                                        ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #37
  call void @__raise_softirq_irqoff(i32 noundef 3) #35
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %list_splice.exit.if.end48_crit_edge
  call fastcc void @net_rps_action_and_irq_enable(ptr noundef %6)
  br label %cleanup49

cleanup49:                                        ; preds = %if.end48, %land.lhs.true.cleanup49_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %repoll) #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %list) #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @dev_cpu_dead(i32 noundef %oldcpu) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #35, !srcloc !1314
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  tail call void asm sideeffect "\09cpsid i\09\09\09@ arch_local_irq_disable", "~{memory},~{cc}"() #35, !srcloc !1422
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_off() #35
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %1 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %cpu3 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu3 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu3, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @softnet_data to i32)
  %7 = inttoptr i32 %add to ptr
  %arrayidx15 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %oldcpu
  %8 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx15, align 4
  %add16 = add i32 %9, ptrtoint (ptr @softnet_data to i32)
  %completion_queue = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 9
  br label %while.cond

while.cond:                                       ; preds = %while.cond.while.cond_crit_edge, %if.end
  %list_skb.0 = phi ptr [ %completion_queue, %if.end ], [ %11, %while.cond.while.cond_crit_edge ]
  %10 = ptrtoint ptr %list_skb.0 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %list_skb.0, align 4
  %tobool17.not = icmp eq ptr %11, null
  br i1 %tobool17.not, label %while.end, label %while.cond.while.cond_crit_edge

while.cond.while.cond_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %12 = inttoptr i32 %add16 to ptr
  %completion_queue18 = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 9
  %13 = ptrtoint ptr %completion_queue18 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %completion_queue18, align 4
  %15 = ptrtoint ptr %list_skb.0 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %14, ptr %list_skb.0, align 4
  store ptr null, ptr %completion_queue18, align 4
  %output_queue = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 7
  %16 = ptrtoint ptr %output_queue to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %output_queue, align 4
  %tobool20.not = icmp eq ptr %17, null
  br i1 %tobool20.not, label %while.end.if.end28_crit_edge, label %if.then21

while.end.if.end28_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end28

if.then21:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #37
  %output_queue_tailp = getelementptr inbounds %struct.softnet_data, ptr %7, i32 0, i32 8
  %18 = ptrtoint ptr %output_queue_tailp to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %output_queue_tailp, align 8
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %19, align 4
  %output_queue_tailp23 = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 8
  %21 = ptrtoint ptr %output_queue_tailp23 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %output_queue_tailp23, align 8
  store ptr %22, ptr %output_queue_tailp, align 8
  %23 = ptrtoint ptr %output_queue to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %output_queue, align 4
  store ptr %output_queue, ptr %output_queue_tailp23, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then21, %while.end.if.end28_crit_edge
  %24 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %12, align 4
  %cmp.i.not110 = icmp eq ptr %25, %12
  br i1 %cmp.i.not110, label %if.end28.while.end39_crit_edge, label %while.body32.lr.ph

if.end28.while.end39_crit_edge:                   ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end39

while.body32.lr.ph:                               ; preds = %if.end28
  %prev.i.i81 = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  br label %while.body32

while.body32:                                     ; preds = %if.end38.while.body32_crit_edge, %while.body32.lr.ph
  %26 = phi ptr [ %25, %while.body32.lr.ph ], [ %52, %if.end38.while.body32_crit_edge ]
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %26) #35
  br i1 %call.i.i, label %if.end.i.i, label %while.body32.list_del_init.exit_crit_edge

while.body32.list_del_init.exit_crit_edge:        ; preds = %while.body32
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %while.body32
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %prev.i.i, align 4
  %29 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %26, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %prev1.i.i.i, align 4
  %32 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %30, ptr %28, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %while.body32.list_del_init.exit_crit_edge
  %33 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %26, ptr %26, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %34 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %26, ptr %prev.i3.i, align 4
  %poll = getelementptr inbounds %struct.napi_struct, ptr %26, i32 0, i32 5
  %35 = ptrtoint ptr %poll to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %poll, align 8
  %cmp = icmp eq ptr %36, @process_backlog
  %state = getelementptr inbounds %struct.napi_struct, ptr %26, i32 0, i32 1
  br i1 %cmp, label %if.then37, label %if.else

if.then37:                                        ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #37
  %37 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %state, align 8
  br label %if.end38

if.else:                                          ; preds = %list_del_init.exit
  %38 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %state, align 4
  %40 = and i32 %39, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i = icmp eq i32 %40, 0
  br i1 %tobool.not.i, label %if.else.if.end12.i_crit_edge, label %do.end.i

if.else.if.end12.i_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.end.i:                                         ; preds = %if.else
  %thread1.i = getelementptr inbounds %struct.napi_struct, ptr %26, i32 0, i32 16
  %41 = ptrtoint ptr %thread1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %thread1.i, align 4
  %tobool2.not.i = icmp eq ptr %42, null
  br i1 %tobool2.not.i, label %do.end.i.if.end12.i_crit_edge, label %do.end6.i

do.end.i.if.end12.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end12.i

do.end6.i:                                        ; preds = %do.end.i
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %42, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %44)
  %cmp.not.i = icmp eq i32 %44, 1
  br i1 %cmp.not.i, label %do.end6.i.if.end.i_crit_edge, label %if.then8.i

do.end6.i.if.end.i_crit_edge:                     ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then8.i:                                       ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @_set_bit(i32 noundef 9, ptr noundef %state) #35
  br label %if.end.i

if.end.i:                                         ; preds = %if.then8.i, %do.end6.i.if.end.i_crit_edge
  %call10.i = tail call i32 @wake_up_process(ptr noundef nonnull %42) #35
  br label %if.end38

if.end12.i:                                       ; preds = %do.end.i.if.end12.i_crit_edge, %if.else.if.end12.i_crit_edge
  %45 = ptrtoint ptr %prev.i.i81 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %prev.i.i81, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %26, ptr noundef %46, ptr noundef %7) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end12.i.list_add_tail.exit.i_crit_edge

if.end12.i.list_add_tail.exit.i_crit_edge:        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #37
  %47 = ptrtoint ptr %prev.i.i81 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %26, ptr %prev.i.i81, align 4
  %48 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %7, ptr %26, align 4
  %49 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %46, ptr %prev.i3.i, align 4
  %50 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %26, ptr %46, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.end12.i.list_add_tail.exit.i_crit_edge
  tail call void @__raise_softirq_irqoff(i32 noundef 3) #35
  br label %if.end38

if.end38:                                         ; preds = %list_add_tail.exit.i, %if.end.i, %if.then37
  %51 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %12, align 4
  %cmp.i.not = icmp eq ptr %52, %12
  br i1 %cmp.i.not, label %if.end38.while.end39_crit_edge, label %if.end38.while.body32_crit_edge

if.end38.while.body32_crit_edge:                  ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body32

if.end38.while.end39_crit_edge:                   ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end39

while.end39:                                      ; preds = %if.end38.while.end39_crit_edge, %if.end28.while.end39_crit_edge
  tail call void @raise_softirq_irqoff(i32 noundef 2) #35
  tail call void @trace_hardirqs_on() #35
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  %rps_ipi_list = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 5
  %53 = ptrtoint ptr %rps_ipi_list to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %rps_ipi_list, align 4
  store ptr null, ptr %rps_ipi_list, align 4
  %tobool.not7.i = icmp eq ptr %54, null
  br i1 %tobool.not7.i, label %while.end39.net_rps_send_ipi.exit_crit_edge, label %while.end39.while.body.i_crit_edge

while.end39.while.body.i_crit_edge:               ; preds = %while.end39
  br label %while.body.i

while.end39.net_rps_send_ipi.exit_crit_edge:      ; preds = %while.end39
  call void @__sanitizer_cov_trace_pc() #37
  br label %net_rps_send_ipi.exit

while.body.i:                                     ; preds = %if.end.i83.while.body.i_crit_edge, %while.end39.while.body.i_crit_edge
  %remsd.addr.08.i = phi ptr [ %56, %if.end.i83.while.body.i_crit_edge ], [ %54, %while.end39.while.body.i_crit_edge ]
  %rps_ipi_next.i = getelementptr inbounds %struct.softnet_data, ptr %remsd.addr.08.i, i32 0, i32 16
  %55 = ptrtoint ptr %rps_ipi_next.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %rps_ipi_next.i, align 16
  %cpu.i = getelementptr inbounds %struct.softnet_data, ptr %remsd.addr.08.i, i32 0, i32 17
  %57 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cpu.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %59 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %59, i32 %58)
  %cmp.not.i.i.i.i.i = icmp ugt i32 %59, %58
  br i1 %cmp.not.i.i.i.i.i, label %while.body.i.cpu_online.exit.i_crit_edge, label %land.rhs.i.i.i.i.i

while.body.i.cpu_online.exit.i_crit_edge:         ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit.i

land.rhs.i.i.i.i.i:                               ; preds = %while.body.i
  %.b37.i.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i.i, label %land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge, label %if.then.i.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge:   ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit.i

if.then.i.i.i.i.i:                                ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit.i

cpu_online.exit.i:                                ; preds = %if.then.i.i.i.i.i, %land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge, %while.body.i.cpu_online.exit.i_crit_edge
  %div3.i.i.i.i = lshr i32 %58, 5
  %arrayidx.i.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i.i
  %60 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %58, 31
  %62 = shl nuw i32 1, %and.i.i.i.i
  %63 = and i32 %61, %62
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool.i.not.i = icmp eq i32 %63, 0
  br i1 %tobool.i.not.i, label %cpu_online.exit.i.if.end.i83_crit_edge, label %if.then.i

cpu_online.exit.i.if.end.i83_crit_edge:           ; preds = %cpu_online.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i83

if.then.i:                                        ; preds = %cpu_online.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %64 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %cpu.i, align 4
  %csd.i = getelementptr inbounds %struct.softnet_data, ptr %remsd.addr.08.i, i32 0, i32 15
  %call2.i = tail call i32 @smp_call_function_single_async(i32 noundef %65, ptr noundef %csd.i) #35
  br label %if.end.i83

if.end.i83:                                       ; preds = %if.then.i, %cpu_online.exit.i.if.end.i83_crit_edge
  %tobool.not.i82 = icmp eq ptr %56, null
  br i1 %tobool.not.i82, label %if.end.i83.net_rps_send_ipi.exit_crit_edge, label %if.end.i83.while.body.i_crit_edge

if.end.i83.while.body.i_crit_edge:                ; preds = %if.end.i83
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.i

if.end.i83.net_rps_send_ipi.exit_crit_edge:       ; preds = %if.end.i83
  call void @__sanitizer_cov_trace_pc() #37
  br label %net_rps_send_ipi.exit

net_rps_send_ipi.exit:                            ; preds = %if.end.i83.net_rps_send_ipi.exit_crit_edge, %while.end39.net_rps_send_ipi.exit_crit_edge
  %process_queue = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 1
  %66 = ptrtoint ptr %process_queue to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %process_queue, align 4
  %cmp.i.i111 = icmp eq ptr %67, %process_queue
  %tobool.not.i84109112 = icmp eq ptr %67, null
  %tobool.not.i84113 = or i1 %cmp.i.i111, %tobool.not.i84109112
  br i1 %tobool.not.i84113, label %net_rps_send_ipi.exit.while.cond50.preheader_crit_edge, label %while.body47.lr.ph

net_rps_send_ipi.exit.while.cond50.preheader_crit_edge: ; preds = %net_rps_send_ipi.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond50.preheader

while.body47.lr.ph:                               ; preds = %net_rps_send_ipi.exit
  %qlen.i.i = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 1, i32 1
  %input_queue_head.i = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 13
  br label %while.body47

while.cond50.preheader:                           ; preds = %netif_rx_ni.exit.while.cond50.preheader_crit_edge, %net_rps_send_ipi.exit.while.cond50.preheader_crit_edge
  %input_pkt_queue = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 20
  %call51114 = tail call ptr @skb_dequeue(ptr noundef %input_pkt_queue) #35
  %tobool52.not115 = icmp eq ptr %call51114, null
  br i1 %tobool52.not115, label %while.cond50.preheader.while.end55_crit_edge, label %while.body53.lr.ph

while.cond50.preheader.while.end55_crit_edge:     ; preds = %while.cond50.preheader
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end55

while.body53.lr.ph:                               ; preds = %while.cond50.preheader
  %input_queue_head.i107 = getelementptr inbounds %struct.softnet_data, ptr %12, i32 0, i32 13
  br label %while.body53

while.body47:                                     ; preds = %netif_rx_ni.exit.while.body47_crit_edge, %while.body47.lr.ph
  %68 = phi ptr [ %67, %while.body47.lr.ph ], [ %97, %netif_rx_ni.exit.while.body47_crit_edge ]
  %69 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %qlen.i.i, align 4
  %sub.i.i = add i32 %70, -1
  store volatile i32 %sub.i.i, ptr %qlen.i.i, align 4
  %71 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %68, align 8
  %prev9.i.i = getelementptr inbounds %struct.anon.83, ptr %68, i32 0, i32 1
  %73 = ptrtoint ptr %prev9.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %prev9.i.i, align 4
  store ptr null, ptr %prev9.i.i, align 4
  store ptr null, ptr %68, align 8
  %prev17.i.i = getelementptr inbounds %struct.anon.83, ptr %72, i32 0, i32 1
  %75 = ptrtoint ptr %prev17.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile ptr %74, ptr %prev17.i.i, align 4
  %76 = ptrtoint ptr %74 to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile ptr %72, ptr %74, align 8
  tail call fastcc void @trace_netif_rx_ni_entry(ptr noundef nonnull %68) #35
  %77 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i87 = and i32 %77, -16384
  %78 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %78, i32 0, i32 1
  %79 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %80, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1345
  %call.i = tail call fastcc i32 @netif_rx_internal(ptr noundef nonnull %68) #35
  %81 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i88 = and i32 %81, -16384
  %82 = inttoptr i32 %and.i.i88 to ptr
  %cpu.i89 = getelementptr inbounds %struct.thread_info, ptr %82, i32 0, i32 3
  %83 = ptrtoint ptr %cpu.i89 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %cpu.i89, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %84
  %85 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %86, ptrtoint (ptr @irq_stat to i32)
  %87 = inttoptr i32 %add.i to ptr
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %87, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %89)
  %tobool.not.i90 = icmp eq i32 %89, 0
  br i1 %tobool.not.i90, label %while.body47.netif_rx_ni.exit_crit_edge, label %if.then.i91

while.body47.netif_rx_ni.exit_crit_edge:          ; preds = %while.body47
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_rx_ni.exit

if.then.i91:                                      ; preds = %while.body47
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @do_softirq() #35
  br label %netif_rx_ni.exit

netif_rx_ni.exit:                                 ; preds = %if.then.i91, %while.body47.netif_rx_ni.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1346
  %90 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i18.i = and i32 %90, -16384
  %91 = inttoptr i32 %and.i.i.i18.i to ptr
  %preempt_count.i.i19.i = getelementptr inbounds %struct.thread_info, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %preempt_count.i.i19.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %preempt_count.i.i19.i, align 4
  %sub.i.i92 = add i32 %93, -1
  store volatile i32 %sub.i.i92, ptr %preempt_count.i.i19.i, align 4
  tail call fastcc void @trace_netif_rx_ni_exit(i32 noundef %call.i) #35
  %94 = ptrtoint ptr %input_queue_head.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %input_queue_head.i, align 128
  %inc.i = add i32 %95, 1
  store i32 %inc.i, ptr %input_queue_head.i, align 128
  %96 = ptrtoint ptr %process_queue to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %process_queue, align 4
  %cmp.i.i = icmp eq ptr %97, %process_queue
  %tobool.not.i84109 = icmp eq ptr %97, null
  %tobool.not.i84 = or i1 %cmp.i.i, %tobool.not.i84109
  br i1 %tobool.not.i84, label %netif_rx_ni.exit.while.cond50.preheader_crit_edge, label %netif_rx_ni.exit.while.body47_crit_edge

netif_rx_ni.exit.while.body47_crit_edge:          ; preds = %netif_rx_ni.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body47

netif_rx_ni.exit.while.cond50.preheader_crit_edge: ; preds = %netif_rx_ni.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.cond50.preheader

while.body53:                                     ; preds = %netif_rx_ni.exit106.while.body53_crit_edge, %while.body53.lr.ph
  %call51116 = phi ptr [ %call51114, %while.body53.lr.ph ], [ %call51, %netif_rx_ni.exit106.while.body53_crit_edge ]
  tail call fastcc void @trace_netif_rx_ni_entry(ptr noundef nonnull %call51116) #35
  %98 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i93 = and i32 %98, -16384
  %99 = inttoptr i32 %and.i.i.i.i93 to ptr
  %preempt_count.i.i.i94 = getelementptr inbounds %struct.thread_info, ptr %99, i32 0, i32 1
  %100 = ptrtoint ptr %preempt_count.i.i.i94 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load volatile i32, ptr %preempt_count.i.i.i94, align 4
  %add.i.i95 = add i32 %101, 1
  store volatile i32 %add.i.i95, ptr %preempt_count.i.i.i94, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1345
  %call.i96 = tail call fastcc i32 @netif_rx_internal(ptr noundef nonnull %call51116) #35
  %102 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i97 = and i32 %102, -16384
  %103 = inttoptr i32 %and.i.i97 to ptr
  %cpu.i98 = getelementptr inbounds %struct.thread_info, ptr %103, i32 0, i32 3
  %104 = ptrtoint ptr %cpu.i98 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %cpu.i98, align 4
  %arrayidx.i99 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %105
  %106 = ptrtoint ptr %arrayidx.i99 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %arrayidx.i99, align 4
  %add.i100 = add i32 %107, ptrtoint (ptr @irq_stat to i32)
  %108 = inttoptr i32 %add.i100 to ptr
  %109 = ptrtoint ptr %108 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %108, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %110)
  %tobool.not.i101 = icmp eq i32 %110, 0
  br i1 %tobool.not.i101, label %while.body53.netif_rx_ni.exit106_crit_edge, label %if.then.i102

while.body53.netif_rx_ni.exit106_crit_edge:       ; preds = %while.body53
  call void @__sanitizer_cov_trace_pc() #37
  br label %netif_rx_ni.exit106

if.then.i102:                                     ; preds = %while.body53
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @do_softirq() #35
  br label %netif_rx_ni.exit106

netif_rx_ni.exit106:                              ; preds = %if.then.i102, %while.body53.netif_rx_ni.exit106_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1346
  %111 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i18.i103 = and i32 %111, -16384
  %112 = inttoptr i32 %and.i.i.i18.i103 to ptr
  %preempt_count.i.i19.i104 = getelementptr inbounds %struct.thread_info, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %preempt_count.i.i19.i104 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %preempt_count.i.i19.i104, align 4
  %sub.i.i105 = add i32 %114, -1
  store volatile i32 %sub.i.i105, ptr %preempt_count.i.i19.i104, align 4
  tail call fastcc void @trace_netif_rx_ni_exit(i32 noundef %call.i96) #35
  %115 = ptrtoint ptr %input_queue_head.i107 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %input_queue_head.i107, align 128
  %inc.i108 = add i32 %116, 1
  store i32 %inc.i108, ptr %input_queue_head.i107, align 128
  %call51 = tail call ptr @skb_dequeue(ptr noundef %input_pkt_queue) #35
  %tobool52.not = icmp eq ptr %call51, null
  br i1 %tobool52.not, label %netif_rx_ni.exit106.while.end55_crit_edge, label %netif_rx_ni.exit106.while.body53_crit_edge

netif_rx_ni.exit106.while.body53_crit_edge:       ; preds = %netif_rx_ni.exit106
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body53

netif_rx_ni.exit106.while.end55_crit_edge:        ; preds = %netif_rx_ni.exit106
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.end55

while.end55:                                      ; preds = %netif_rx_ni.exit106.while.end55_crit_edge, %while.cond50.preheader.while.end55_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @netdev_init(ptr noundef %net) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.not = icmp eq ptr %net, @init_net
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  %dev_base_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  %0 = ptrtoint ptr %dev_base_head to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %dev_base_head, ptr %dev_base_head, align 4
  %prev.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %dev_base_head, ptr %prev.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3264, i32 noundef 1024) #40
  %cmp.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %cmp.not.i, label %netdev_create_hash.exit.thread, label %if.end4

netdev_create_hash.exit.thread:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  %dev_name_head24 = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %3 = ptrtoint ptr %dev_name_head24 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %dev_name_head24, align 4
  br label %return

if.end4:                                          ; preds = %if.end
  %4 = call ptr @memset(ptr %call7.i.i.i, i32 0, i32 1024)
  %dev_name_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %5 = ptrtoint ptr %dev_name_head to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i.i.i, ptr %dev_name_head, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %6 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i20 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3264, i32 noundef 1024) #40
  %cmp.not.i21 = icmp eq ptr %call7.i.i.i20, null
  br i1 %cmp.not.i21, label %err_idx, label %do.body10

do.body10:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #37
  %7 = call ptr @memset(ptr %call7.i.i.i20, i32 0, i32 1024)
  %dev_index_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %8 = ptrtoint ptr %dev_index_head to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call7.i.i.i20, ptr %dev_index_head, align 16
  %netdev_chain = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 25
  %9 = ptrtoint ptr %netdev_chain to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %netdev_chain, align 4
  br label %return

err_idx:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #37
  %dev_index_head25 = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %10 = ptrtoint ptr %dev_index_head25 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %dev_index_head25, align 16
  %11 = ptrtoint ptr %dev_name_head to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev_name_head, align 4
  tail call void @kfree(ptr noundef %12) #35
  br label %return

return:                                           ; preds = %err_idx, %do.body10, %netdev_create_hash.exit.thread
  %retval.0 = phi i32 [ 0, %do.body10 ], [ -12, %err_idx ], [ -12, %netdev_create_hash.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @netdev_exit(ptr noundef %net) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %dev_name_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 23
  %0 = ptrtoint ptr %dev_name_head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_name_head, align 4
  tail call void @kfree(ptr noundef %1) #35
  %dev_index_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 24
  %2 = ptrtoint ptr %dev_index_head to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_index_head, align 16
  tail call void @kfree(ptr noundef %3) #35
  %cmp.not = icmp eq ptr %net, @init_net
  br i1 %cmp.not, label %entry.if.end38_crit_edge, label %if.then

entry.if.end38_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end38

if.then:                                          ; preds = %entry
  %dev_base_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  %4 = ptrtoint ptr %dev_base_head to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %dev_base_head, align 4
  %cmp.i.not = icmp eq ptr %5, %dev_base_head
  br i1 %cmp.i.not, label %if.then.if.end38_crit_edge, label %land.rhs

if.then.if.end38_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end38

land.rhs:                                         ; preds = %if.then
  %.b44 = load i1, ptr @netdev_exit.__already_done, align 1
  br i1 %.b44, label %land.rhs.if.end38_crit_edge, label %if.then9, !prof !1311

land.rhs.if.end38_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end38

if.then9:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @netdev_exit.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10844, i32 noundef 9, ptr noundef null) #35
  br label %if.end38

if.end38:                                         ; preds = %if.then9, %land.rhs.if.end38_crit_edge, %if.then.if.end38_crit_edge, %entry.if.end38_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @net_rps_action_and_irq_enable(ptr nocapture noundef %sd) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  %rps_ipi_list = getelementptr inbounds %struct.softnet_data, ptr %sd, i32 0, i32 5
  %0 = ptrtoint ptr %rps_ipi_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rps_ipi_list, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.body2, label %if.then

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %rps_ipi_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %rps_ipi_list, align 4
  tail call void @trace_hardirqs_on() #35
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  br label %while.body.i

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %if.then
  %remsd.addr.08.i = phi ptr [ %4, %if.end.i.while.body.i_crit_edge ], [ %1, %if.then ]
  %rps_ipi_next.i = getelementptr inbounds %struct.softnet_data, ptr %remsd.addr.08.i, i32 0, i32 16
  %3 = ptrtoint ptr %rps_ipi_next.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rps_ipi_next.i, align 16
  %cpu.i = getelementptr inbounds %struct.softnet_data, ptr %remsd.addr.08.i, i32 0, i32 17
  %5 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %7 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %6)
  %cmp.not.i.i.i.i.i = icmp ugt i32 %7, %6
  br i1 %cmp.not.i.i.i.i.i, label %while.body.i.cpu_online.exit.i_crit_edge, label %land.rhs.i.i.i.i.i

while.body.i.cpu_online.exit.i_crit_edge:         ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit.i

land.rhs.i.i.i.i.i:                               ; preds = %while.body.i
  %.b37.i.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i.i, label %land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge, label %if.then.i.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge:   ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit.i

if.then.i.i.i.i.i:                                ; preds = %land.rhs.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit.i

cpu_online.exit.i:                                ; preds = %if.then.i.i.i.i.i, %land.rhs.i.i.i.i.i.cpu_online.exit.i_crit_edge, %while.body.i.cpu_online.exit.i_crit_edge
  %div3.i.i.i.i = lshr i32 %6, 5
  %arrayidx.i.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i.i
  %8 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %arrayidx.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %6, 31
  %10 = shl nuw i32 1, %and.i.i.i.i
  %11 = and i32 %9, %10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.i.not.i = icmp eq i32 %11, 0
  br i1 %tobool.i.not.i, label %cpu_online.exit.i.if.end.i_crit_edge, label %if.then.i

cpu_online.exit.i.if.end.i_crit_edge:             ; preds = %cpu_online.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end.i

if.then.i:                                        ; preds = %cpu_online.exit.i
  call void @__sanitizer_cov_trace_pc() #37
  %12 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cpu.i, align 4
  %csd.i = getelementptr inbounds %struct.softnet_data, ptr %remsd.addr.08.i, i32 0, i32 15
  %call2.i = tail call i32 @smp_call_function_single_async(i32 noundef %13, ptr noundef %csd.i) #35
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %cpu_online.exit.i.if.end.i_crit_edge
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %if.end.i.if.end_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %while.body.i

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  tail call void @trace_hardirqs_on() #35
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #35, !srcloc !1423
  br label %if.end

if.end:                                           ; preds = %do.body2, %if.end.i.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smp_call_function_single_async(i32 noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @default_device_exit(ptr noundef readonly %net) #1 align 64 {
entry:
  %fb_name = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rtnl_lock() #35
  %dev_base_head = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 16
  %0 = ptrtoint ptr %dev_base_head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_base_head, align 4
  %cmp.not53 = icmp eq ptr %1, %dev_base_head
  br i1 %cmp.not53, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in54 = phi ptr [ %.pn56, %cleanup.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %dev.055 = getelementptr i8, ptr %.pn.in54, i32 -40
  %2 = ptrtoint ptr %.pn.in54 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn56 = load ptr, ptr %.pn.in54, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %fb_name) #35
  %features = getelementptr i8, ptr %.pn.in54, i32 104
  %3 = call ptr @memset(ptr %fb_name, i32 255, i32 16)
  %4 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %features, align 16
  %and = and i64 %5, 8192
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end:                                           ; preds = %for.body
  %rtnl_link_ops = getelementptr i8, ptr %.pn.in54, i32 2012
  %6 = ptrtoint ptr %rtnl_link_ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rtnl_link_ops, align 4
  %tobool7.not = icmp eq ptr %7, null
  br i1 %tobool7.not, label %if.end.if.end11_crit_edge, label %land.lhs.true

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

land.lhs.true:                                    ; preds = %if.end
  %netns_refund = getelementptr inbounds %struct.rtnl_link_ops, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %netns_refund to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %netns_refund, align 4, !range !1333
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool9.not = icmp eq i8 %9, 0
  br i1 %tobool9.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end11_crit_edge

land.lhs.true.if.end11_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end11

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

if.end11:                                         ; preds = %land.lhs.true.if.end11_crit_edge, %if.end.if.end11_crit_edge
  %ifindex = getelementptr i8, ptr %.pn.in54, i32 84
  %10 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ifindex, align 4
  %call = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fb_name, i32 noundef 16, ptr noundef nonnull @.str.287, i32 noundef %11)
  %call.i.i.i = call i32 @strnlen(ptr noundef nonnull %fb_name, i32 noundef 16) #38
  %call1.i.i.i = call i32 @full_name_hash(ptr noundef nonnull @init_net, ptr noundef nonnull %fb_name, i32 noundef %call.i.i.i) #39
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23) to i32))
  %12 = load ptr, ptr getelementptr inbounds (%struct.net, ptr @init_net, i32 0, i32 23), align 4
  %mul.i.i.i.i.i = mul i32 %call1.i.i.i, 1640531527
  %shr.i.i.i.i = lshr i32 %mul.i.i.i.i.i, 24
  %arrayidx.i.i.i = getelementptr %struct.hlist_head, ptr %12, i32 %shr.i.i.i.i
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %if.end11
  %name_node.0.in.i.i = phi ptr [ %arrayidx.i.i.i, %if.end11 ], [ %name_node.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %13 = ptrtoint ptr %name_node.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %name_node.0.i.i = load ptr, ptr %name_node.0.in.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %name_node.0.i.i, null
  br i1 %tobool2.not.i.i, label %for.cond.i.i.if.end17_crit_edge, label %for.body.i.i

for.cond.i.i.if.end17_crit_edge:                  ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end17

for.body.i.i:                                     ; preds = %for.cond.i.i
  %name3.i.i = getelementptr inbounds %struct.netdev_name_node, ptr %name_node.0.i.i, i32 0, i32 3
  %14 = ptrtoint ptr %name3.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %name3.i.i, align 4
  %call4.i.i = call i32 @strcmp(ptr noundef %15, ptr noundef nonnull %fb_name) #38
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %if.then14, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.i.i

if.then14:                                        ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %call16 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %fb_name, i32 noundef 16, ptr noundef nonnull @.str.288)
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %for.cond.i.i.if.end17_crit_edge
  %call.i = call i32 @__dev_change_net_namespace(ptr noundef %dev.055, ptr noundef nonnull @init_net, ptr noundef nonnull %fb_name, i32 noundef 0) #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool20.not = icmp eq i32 %call.i, 0
  br i1 %tobool20.not, label %if.end17.cleanup_crit_edge, label %do.end

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #37
  br label %cleanup

do.end:                                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #37
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.289, ptr noundef nonnull @.str.290, ptr noundef %dev.055, i32 noundef %call.i) #41
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/dev.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 10880, 0\0A.popsection", ""() #35, !srcloc !1451
  unreachable

cleanup:                                          ; preds = %if.end17.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %for.body.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %fb_name) #35
  %cmp.not = icmp eq ptr %.pn56, %dev_base_head
  br i1 %cmp.not, label %cleanup.for.end_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %entry.for.end_crit_edge
  call void @rtnl_unlock() #35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @default_device_exit_batch(ptr noundef readonly %net_list) #1 align 64 {
entry:
  %wait.i = alloca %struct.wait_queue_entry, align 4
  %dev_kill_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #37
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %dev_kill_list) #35
  %0 = getelementptr inbounds %struct.list_head, ptr %dev_kill_list, i32 0, i32 1
  %1 = ptrtoint ptr %dev_kill_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %dev_kill_list, ptr %dev_kill_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dev_kill_list, ptr %0, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait.i) #35
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 1
  %4 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 2
  %5 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3
  %6 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3, i32 1
  %7 = ptrtoint ptr %wait.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %wait.i, align 4
  %8 = call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task.i, align 8
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %3, align 4
  %13 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @woken_wake_function, ptr %4, align 4
  %14 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %5, ptr %5, align 4
  %15 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %5, ptr %6, align 4
  call void @add_wait_queue(ptr noundef nonnull @netdev_unregistering_wq, ptr noundef nonnull %wait.i) #35
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end13.critedge.i, %entry
  call void @rtnl_lock() #35
  br label %for.cond5.i

for.cond5.i:                                      ; preds = %for.body.i.for.cond5.i_crit_edge, %for.cond.i
  %.pn.in.i = phi ptr [ %net_list, %for.cond.i ], [ %.pn.i, %for.body.i.for.cond5.i_crit_edge ]
  %16 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %net_list
  br i1 %cmp.not.i, label %rtnl_lock_unregistering.exit, label %for.body.i

for.body.i:                                       ; preds = %for.cond5.i
  %dev_unreg_count.i = getelementptr i8, ptr %.pn.i, i32 -68
  %17 = ptrtoint ptr %dev_unreg_count.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %dev_unreg_count.i, align 16
  %cmp6.not.i = icmp eq i32 %18, 0
  br i1 %cmp6.not.i, label %for.body.i.for.cond5.i_crit_edge, label %if.end13.critedge.i

for.body.i.for.cond5.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond5.i

if.end13.critedge.i:                              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #37
  call void @__rtnl_unlock() #35
  %call14.i = call i32 @wait_woken(ptr noundef nonnull %wait.i, i32 noundef 2, i32 noundef 2147483647) #35
  br label %for.cond.i

rtnl_lock_unregistering.exit:                     ; preds = %for.cond5.i
  call void @remove_wait_queue(ptr noundef nonnull @netdev_unregistering_wq, ptr noundef nonnull %wait.i) #35
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait.i) #35
  %19 = ptrtoint ptr %net_list to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn47 = load ptr, ptr %net_list, align 4
  %cmp.not48 = icmp eq ptr %.pn47, %net_list
  br i1 %cmp.not48, label %rtnl_lock_unregistering.exit.for.end26_crit_edge, label %rtnl_lock_unregistering.exit.for.body_crit_edge

rtnl_lock_unregistering.exit.for.body_crit_edge:  ; preds = %rtnl_lock_unregistering.exit
  br label %for.body

rtnl_lock_unregistering.exit.for.end26_crit_edge: ; preds = %rtnl_lock_unregistering.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end26

for.cond.loopexit:                                ; preds = %for.inc.for.cond.loopexit_crit_edge, %for.body.for.cond.loopexit_crit_edge
  %20 = ptrtoint ptr %.pn49 to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn = load ptr, ptr %.pn49, align 4
  %cmp.not = icmp eq ptr %.pn, %net_list
  br i1 %cmp.not, label %for.cond.loopexit.for.end26_crit_edge, label %for.cond.loopexit.for.body_crit_edge

for.cond.loopexit.for.body_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body

for.cond.loopexit.for.end26_crit_edge:            ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.end26

for.body:                                         ; preds = %for.cond.loopexit.for.body_crit_edge, %rtnl_lock_unregistering.exit.for.body_crit_edge
  %.pn49 = phi ptr [ %.pn, %for.cond.loopexit.for.body_crit_edge ], [ %.pn47, %rtnl_lock_unregistering.exit.for.body_crit_edge ]
  %dev_base_head = getelementptr i8, ptr %.pn49, i32 168
  %prev3 = getelementptr i8, ptr %.pn49, i32 172
  %21 = ptrtoint ptr %prev3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn3940 = load ptr, ptr %prev3, align 4
  %cmp8.not42 = icmp eq ptr %.pn3940, %dev_base_head
  br i1 %cmp8.not42, label %for.body.for.cond.loopexit_crit_edge, label %for.body.for.body10_crit_edge

for.body.for.body10_crit_edge:                    ; preds = %for.body
  br label %for.body10

for.body.for.cond.loopexit_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.loopexit

for.body10:                                       ; preds = %for.inc.for.body10_crit_edge, %for.body.for.body10_crit_edge
  %.pn3943 = phi ptr [ %.pn39, %for.inc.for.body10_crit_edge ], [ %.pn3940, %for.body.for.body10_crit_edge ]
  %dev.046 = getelementptr i8, ptr %.pn3943, i32 -40
  %rtnl_link_ops = getelementptr i8, ptr %.pn3943, i32 2012
  %22 = ptrtoint ptr %rtnl_link_ops to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rtnl_link_ops, align 4
  %tobool.not = icmp eq ptr %23, null
  br i1 %tobool.not, label %for.body10.if.else_crit_edge, label %land.lhs.true

for.body10.if.else_crit_edge:                     ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else

land.lhs.true:                                    ; preds = %for.body10
  %dellink = getelementptr inbounds %struct.rtnl_link_ops, ptr %23, i32 0, i32 11
  %24 = ptrtoint ptr %dellink to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dellink, align 4
  %tobool12.not = icmp eq ptr %25, null
  br i1 %tobool12.not, label %land.lhs.true.if.else_crit_edge, label %if.then

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.else

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  call void %25(ptr noundef %dev.046, ptr noundef nonnull %dev_kill_list) #35
  br label %for.inc

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %for.body10.if.else_crit_edge
  %call.i = call i32 @rtnl_is_locked() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.rhs.i, label %if.else.if.end29.i_crit_edge

if.else.if.end29.i_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

land.rhs.i:                                       ; preds = %if.else
  %.b45.i = load i1, ptr @unregister_netdevice_queue.__already_done, align 1
  br i1 %.b45.i, label %land.rhs.i.if.end29.i_crit_edge, label %if.then.i, !prof !1311

land.rhs.i.if.end29.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end29.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @unregister_netdevice_queue.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 10341, i32 noundef 9, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.3, i32 noundef 10341) #35
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end29.i_crit_edge, %if.else.if.end29.i_crit_edge
  %unreg_list.i = getelementptr i8, ptr %.pn3943, i32 16
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %unreg_list.i) #35
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end29.i.__list_del_entry.exit.i.i_crit_edge

if.end29.i.__list_del_entry.exit.i.i_crit_edge:   ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #37
  %prev.i.i.i = getelementptr i8, ptr %.pn3943, i32 20
  %26 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prev.i.i.i, align 4
  %28 = ptrtoint ptr %unreg_list.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %unreg_list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev1.i.i.i.i, align 4
  %31 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %29, ptr %27, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %if.end29.i.__list_del_entry.exit.i.i_crit_edge
  %32 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %0, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %unreg_list.i, ptr noundef %33, ptr noundef nonnull %dev_kill_list) #35
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.for.inc_crit_edge

__list_del_entry.exit.i.i.for.inc_crit_edge:      ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.inc

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #37
  %34 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %unreg_list.i, ptr %0, align 4
  %35 = ptrtoint ptr %unreg_list.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %dev_kill_list, ptr %unreg_list.i, align 4
  %prev3.i.i.i.i = getelementptr i8, ptr %.pn3943, i32 20
  %36 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %33, ptr %prev3.i.i.i.i, align 4
  %37 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %unreg_list.i, ptr %33, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.for.inc_crit_edge, %if.then
  %prev17 = getelementptr inbounds %struct.list_head, ptr %.pn3943, i32 0, i32 1
  %38 = ptrtoint ptr %prev17 to i32
  call void @__asan_load4_noabort(i32 %38)
  %.pn39 = load ptr, ptr %prev17, align 4
  %cmp8.not = icmp eq ptr %.pn39, %dev_base_head
  br i1 %cmp8.not, label %for.inc.for.cond.loopexit_crit_edge, label %for.inc.for.body10_crit_edge

for.inc.for.body10_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.body10

for.inc.for.cond.loopexit_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #37
  br label %for.cond.loopexit

for.end26:                                        ; preds = %for.cond.loopexit.for.end26_crit_edge, %rtnl_lock_unregistering.exit.for.end26_crit_edge
  call void @unregister_netdevice_many(ptr noundef nonnull %dev_kill_list)
  call void @rtnl_unlock() #35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %dev_kill_list) #35
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @woken_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_woken(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_consume_skb(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_consume_skb, i32 0, i32 1), ptr blockaddress(@trace_consume_skb, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1452
  %call42 = tail call i32 @__traceiter_consume_skb(ptr noundef null, ptr noundef %skb) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1453
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !1311

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_consume_skb, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_consume_skb, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_consume_skb.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_consume_skb.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.291, i32 noundef 79, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_kfree_skb(ptr noundef %skb) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #37
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_kfree_skb, i32 0, i32 1), ptr blockaddress(@trace_kfree_skb, %do.body)) #35
          to label %if.end48 [label %do.body], !srcloc !1328

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !1311

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #37
  %9 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1454
  %call42 = tail call i32 @__traceiter_kfree_skb(ptr noundef null, ptr noundef %skb, ptr noundef nonnull @net_tx_action, i32 noundef 0) #35
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1455
  %13 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i2 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i2 to ptr
  %preempt_count.i.i3 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i3, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i5 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !1311

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #37
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.111, i32 noundef 108, i32 noundef 9, ptr noundef null) #35
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %20, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %22 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i12
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i13.not = icmp eq i32 %25, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #37
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %26 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1360
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_kfree_skb, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_kfree_skb, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_kfree_skb.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #37
  store i1 true, ptr @trace_kfree_skb.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.291, i32 noundef 62, ptr noundef nonnull @.str.11) #35
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #35, !srcloc !1361
  %31 = tail call i32 @llvm.read_register.i32(metadata !1298) #35
  %and.i.i.i.i15 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kfree_skb(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kfree_skb_defer(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfrm_dev_backlog(ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_consume_skb(ptr noundef, ptr noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_kfree_skb(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__usecs_to_jiffies(i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cpuhp_setup_state(i32 noundef, ptr noundef, i1 noundef zeroext, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_dequeue(ptr noundef) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #34

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umax.i8(i8, i8) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umin.i8(i8, i8) #17

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #35

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #36 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 319)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #36 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 319)
  ret void
}

attributes #0 = { nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #18 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #22 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #23 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #24 = { nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #25 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #27 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #28 = { nocallback nofree nosync nounwind willreturn }
attributes #29 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #30 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #31 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #32 = { nounwind readonly }
attributes #33 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #34 = { argmemonly nofree nounwind readonly willreturn }
attributes #35 = { nounwind }
attributes #36 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #37 = { nomerge }
attributes #38 = { nobuiltin nounwind }
attributes #39 = { nounwind readonly willreturn }
attributes #40 = { nounwind allocsize(2) }
attributes #41 = { cold nounwind }
attributes #42 = { nobuiltin }
attributes #43 = { cold }
attributes #44 = { nounwind allocsize(0) }
attributes #45 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !5, !7, !9, !11, !13, !15, !17, !18, !19, !20, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !63, !65, !67, !69, !71, !73, !75, !77, !79, !81, !82, !84, !86, !87, !89, !91, !93, !95, !97, !99, !101, !103, !105, !107, !109, !111, !113, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !220, !221, !222, !224, !226, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !264, !266, !268, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !292, !294, !296, !298, !300, !302, !304, !306, !308, !310, !312, !314, !316, !318, !320, !322, !324, !326, !328, !330, !332, !334, !336, !338, !340, !342, !344, !346, !348, !350, !352, !354, !356, !358, !360, !362, !364, !366, !368, !370, !372, !374, !376, !378, !380, !382, !384, !386, !388, !390, !392, !394, !396, !398, !400, !402, !403, !404, !405, !407, !409, !411, !413, !415, !417, !419, !421, !423, !425, !427, !429, !431, !433, !435, !437, !439, !441, !443, !445, !447, !449, !451, !453, !455, !457, !459, !461, !463, !465, !467, !469, !471, !473, !475, !477, !479, !481, !483, !485, !487, !489, !491, !493, !495, !496, !497, !498, !500, !502, !504, !506, !508, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !530, !532, !533, !535, !537, !538, !539, !540, !542, !544, !546, !548, !550, !552, !554, !555, !557, !559, !561, !563, !565, !567, !569, !570, !571, !572, !574, !576, !578, !580, !582, !584, !585, !586, !587, !589, !590, !591, !593, !595, !597, !599, !601, !603, !605, !607, !609, !610, !611, !613, !615, !617, !619, !621, !623, !625, !627, !628, !630, !631, !633, !634, !636, !638, !639, !641, !642, !644, !645, !647, !649, !651, !653, !654, !655, !657, !659, !661, !663, !665, !667, !669, !671, !673, !675, !676, !678, !680, !681, !683, !685, !687, !688, !689, !691, !692, !694, !695, !696, !698, !699, !700, !702, !704, !706, !708, !710, !712, !714, !716, !718, !719, !720, !722, !724, !726, !728, !730, !732, !734, !735, !737, !738, !739, !741, !742, !744, !746, !748, !750, !752, !754, !755, !757, !759, !761, !763, !765, !766, !767, !769, !770, !772, !773, !774, !775, !776, !777, !778, !780, !782, !784, !786, !788, !790, !791, !792, !793, !795, !797, !798, !799, !800, !802, !804, !805, !806, !807, !809, !810, !811, !813, !814, !816, !818, !819, !821, !823, !824, !826, !827, !829, !831, !832, !833, !835, !836, !838, !839, !841, !843, !844, !845, !847, !848, !850, !851, !853, !854, !856, !857, !859, !860, !862, !864, !866, !868, !870, !871, !873, !875, !877, !879, !881, !883, !885, !887, !889, !891, !893, !895, !896, !898, !899, !901, !902, !904, !905, !907, !909, !911, !912, !913, !915, !917, !918, !919, !920, !922, !924, !926, !928, !930, !931, !933, !934, !935, !936, !937, !938, !940, !941, !943, !945, !947, !949, !951, !953, !954, !955, !957, !958, !960, !962, !963, !964, !966, !967, !968, !970, !971, !973, !974, !976, !978, !980, !982, !984, !986, !987, !988, !989, !990, !991, !993, !995, !997, !999, !1001, !1002, !1003, !1005, !1007, !1009, !1011, !1013, !1015, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1037, !1039, !1041, !1043, !1045, !1047, !1048, !1049, !1051, !1052, !1054, !1055, !1057, !1058, !1060, !1061, !1063, !1064, !1066, !1067, !1069, !1070, !1072, !1073, !1075, !1076, !1078, !1079, !1081, !1082, !1083, !1085, !1086, !1087, !1089, !1091, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !1106, !1108, !1110, !1112, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !1130, !1132, !1134, !1136, !1138, !1140, !1142, !1144, !1146, !1148, !1150, !1152, !1154, !1156, !1158, !1160, !1162, !1164, !1166, !1168, !1170, !1172, !1174, !1176, !1178, !1180, !1182, !1184, !1186, !1188, !1190, !1192, !1194, !1196, !1198, !1200, !1202, !1204, !1206, !1208, !1210, !1212, !1214, !1216, !1218, !1220, !1222, !1224, !1226, !1228, !1230, !1231, !1232, !1233, !1235, !1236, !1238, !1239, !1241, !1243, !1244, !1246, !1247, !1249, !1251, !1253, !1255, !1257, !1259, !1261, !1262, !1263, !1264, !1266, !1267, !1268, !1270, !1271, !1273, !1275, !1277, !1279, !1280, !1282, !1284, !1286, !1288, !1289, !1290, !1291, !1293, !1294, !1295, !1297}
!llvm.named.register.sp = !{!1298}
!llvm.module.flags = !{!1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306}
!llvm.ident = !{!1307}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../net/core/dev.c", i32 188, i32 1}
!2 = !{ptr @dev_base_lock, !1, !"dev_base_lock", i1 false, i1 false}
!3 = !{ptr @__ksymtab_dev_base_lock, !4, !"__ksymtab_dev_base_lock", i1 false, i1 false}
!4 = !{!"../net/core/dev.c", i32 189, i32 1}
!5 = !{ptr @__ksymtab_netdev_name_in_use, !6, !"__ksymtab_netdev_name_in_use", i1 false, i1 false}
!6 = !{!"../net/core/dev.c", i32 304, i32 1}
!7 = !{ptr @__ksymtab_netdev_name_node_alt_create, !8, !"__ksymtab_netdev_name_node_alt_create", i1 false, i1 false}
!8 = !{!"../net/core/dev.c", i32 323, i32 1}
!9 = !{ptr @__ksymtab_netdev_name_node_alt_destroy, !10, !"__ksymtab_netdev_name_node_alt_destroy", i1 false, i1 false}
!10 = !{!"../net/core/dev.c", i32 351, i32 1}
!11 = !{ptr @__ksymtab_softnet_data, !12, !"__ksymtab_softnet_data", i1 false, i1 false}
!12 = !{!"../net/core/dev.c", i32 407, i32 1}
!13 = !{ptr @__ksymtab_dev_add_pack, !14, !"__ksymtab_dev_add_pack", i1 false, i1 false}
!14 = !{!"../net/core/dev.c", i32 545, i32 1}
!15 = !{ptr @.str.1, !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"../net/core/dev.c", i32 574, i32 2}
!17 = !{ptr @.str.2, !16, !"<string literal>", i1 false, i1 false}
!18 = !{ptr @.str.3, !16, !"<string literal>", i1 false, i1 false}
!19 = !{ptr @__dev_remove_pack._entry, !16, !"_entry", i1 false, i1 false}
!20 = !{ptr @__dev_remove_pack._entry_ptr, !16, !"_entry_ptr", i1 false, i1 false}
!21 = !{ptr @__ksymtab___dev_remove_pack, !22, !"__ksymtab___dev_remove_pack", i1 false, i1 false}
!22 = !{!"../net/core/dev.c", i32 578, i32 1}
!23 = !{ptr @__ksymtab_dev_remove_pack, !24, !"__ksymtab_dev_remove_pack", i1 false, i1 false}
!24 = !{!"../net/core/dev.c", i32 598, i32 1}
!25 = !{ptr @__ksymtab_dev_get_iflink, !26, !"__ksymtab_dev_get_iflink", i1 false, i1 false}
!26 = !{!"../net/core/dev.c", i32 622, i32 1}
!27 = !{ptr @__ksymtab_dev_fill_metadata_dst, !28, !"__ksymtab_dev_fill_metadata_dst", i1 false, i1 false}
!28 = !{!"../net/core/dev.c", i32 648, i32 1}
!29 = distinct !{null, !30, !"__already_done", i1 false, i1 false}
!30 = !{!"../net/core/dev.c", i32 683, i32 7}
!31 = !{ptr @__ksymtab_dev_fill_forward_path, !32, !"__ksymtab_dev_fill_forward_path", i1 false, i1 false}
!32 = !{!"../net/core/dev.c", i32 694, i32 1}
!33 = !{ptr @__ksymtab___dev_get_by_name, !34, !"__ksymtab___dev_get_by_name", i1 false, i1 false}
!34 = !{!"../net/core/dev.c", i32 715, i32 1}
!35 = !{ptr @__ksymtab_dev_get_by_name_rcu, !36, !"__ksymtab_dev_get_by_name_rcu", i1 false, i1 false}
!36 = !{!"../net/core/dev.c", i32 736, i32 1}
!37 = !{ptr @__ksymtab_dev_get_by_name, !38, !"__ksymtab_dev_get_by_name", i1 false, i1 false}
!38 = !{!"../net/core/dev.c", i32 760, i32 1}
!39 = !{ptr @__ksymtab___dev_get_by_index, !40, !"__ksymtab___dev_get_by_index", i1 false, i1 false}
!40 = !{!"../net/core/dev.c", i32 785, i32 1}
!41 = distinct !{null, !42, !"__warned", i1 false, i1 false}
!42 = !{!"../net/core/dev.c", i32 803, i32 2}
!43 = !{ptr @.str.4, !42, !"<string literal>", i1 false, i1 false}
!44 = !{ptr @__ksymtab_dev_get_by_index_rcu, !45, !"__ksymtab_dev_get_by_index_rcu", i1 false, i1 false}
!45 = !{!"../net/core/dev.c", i32 809, i32 1}
!46 = !{ptr @__ksymtab_dev_get_by_index, !47, !"__ksymtab_dev_get_by_index", i1 false, i1 false}
!47 = !{!"../net/core/dev.c", i32 833, i32 1}
!48 = distinct !{null, !49, !"__already_done", i1 false, i1 false}
!49 = !{!"../net/core/dev.c", i32 849, i32 2}
!50 = !{ptr @__ksymtab_dev_get_by_napi_id, !51, !"__ksymtab_dev_get_by_napi_id", i1 false, i1 false}
!51 = !{!"../net/core/dev.c", i32 858, i32 1}
!52 = distinct !{null, !53, !"__warned", i1 false, i1 false}
!53 = !{!"../net/core/dev.c", i32 908, i32 2}
!54 = !{ptr @__ksymtab_dev_getbyhwaddr_rcu, !55, !"__ksymtab_dev_getbyhwaddr_rcu", i1 false, i1 false}
!55 = !{!"../net/core/dev.c", i32 915, i32 1}
!56 = distinct !{null, !57, !"__warned", i1 false, i1 false}
!57 = !{!"../net/core/dev.c", i32 922, i32 2}
!58 = !{ptr @__ksymtab_dev_getfirstbyhwtype, !59, !"__ksymtab_dev_getfirstbyhwtype", i1 false, i1 false}
!59 = !{!"../net/core/dev.c", i32 931, i32 1}
!60 = distinct !{null, !61, !"__already_done", i1 false, i1 false}
!61 = !{!"../net/core/dev.c", i32 949, i32 2}
!62 = !{ptr @.str.5, !61, !"<string literal>", i1 false, i1 false}
!63 = !{ptr @__ksymtab___dev_get_by_flags, !64, !"__ksymtab___dev_get_by_flags", i1 false, i1 false}
!64 = !{!"../net/core/dev.c", i32 960, i32 1}
!65 = !{ptr @.str.6, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../net/core/dev.c", i32 976, i32 20}
!67 = !{ptr @.str.7, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../net/core/dev.c", i32 976, i32 42}
!69 = !{ptr @__ksymtab_dev_valid_name, !70, !"__ksymtab_dev_valid_name", i1 false, i1 false}
!70 = !{!"../net/core/dev.c", i32 986, i32 1}
!71 = !{ptr @__ksymtab_dev_alloc_name, !72, !"__ksymtab_dev_alloc_name", i1 false, i1 false}
!72 = !{!"../net/core/dev.c", i32 1100, i32 1}
!73 = distinct !{null, !74, !"__already_done", i1 false, i1 false}
!74 = !{!"../net/core/dev.c", i32 1136, i32 2}
!75 = !{ptr @.str.8, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../net/core/dev.c", i32 1173, i32 20}
!77 = !{ptr @.str.9, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../net/core/dev.c", i32 1215, i32 20}
!79 = distinct !{null, !80, !"__warned", i1 false, i1 false}
!80 = !{!"../net/core/dev.c", i32 1248, i32 14}
!81 = !{ptr @.str.10, !80, !"<string literal>", i1 false, i1 false}
!82 = !{ptr @__ksymtab_dev_set_alias, !83, !"__ksymtab_dev_set_alias", i1 false, i1 false}
!83 = !{!"../net/core/dev.c", i32 1257, i32 1}
!84 = distinct !{null, !85, !"__warned", i1 false, i1 false}
!85 = !{!"../net/core/dev.c", i32 1274, i32 10}
!86 = !{ptr @.str.11, !85, !"<string literal>", i1 false, i1 false}
!87 = !{ptr @.str.12, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../net/core/dev.c", i32 1276, i32 29}
!89 = !{ptr @__ksymtab_netdev_features_change, !90, !"__ksymtab_netdev_features_change", i1 false, i1 false}
!90 = !{!"../net/core/dev.c", i32 1292, i32 1}
!91 = !{ptr @__ksymtab_netdev_state_change, !92, !"__ksymtab_netdev_state_change", i1 false, i1 false}
!92 = !{!"../net/core/dev.c", i32 1314, i32 1}
!93 = distinct !{null, !94, !"__already_done", i1 false, i1 false}
!94 = !{!"../net/core/dev.c", i32 1329, i32 2}
!95 = !{ptr @__ksymtab___netdev_notify_peers, !96, !"__ksymtab___netdev_notify_peers", i1 false, i1 false}
!96 = !{!"../net/core/dev.c", i32 1333, i32 1}
!97 = !{ptr @__ksymtab_netdev_notify_peers, !98, !"__ksymtab_netdev_notify_peers", i1 false, i1 false}
!98 = !{!"../net/core/dev.c", i32 1351, i32 1}
!99 = !{ptr @__ksymtab_dev_open, !100, !"__ksymtab_dev_open", i1 false, i1 false}
!100 = !{!"../net/core/dev.c", i32 1452, i32 1}
!101 = !{ptr @__ksymtab_dev_close_many, !102, !"__ksymtab_dev_close_many", i1 false, i1 false}
!102 = !{!"../net/core/dev.c", i32 1525, i32 1}
!103 = !{ptr @__ksymtab_dev_close, !104, !"__ksymtab_dev_close", i1 false, i1 false}
!104 = !{!"../net/core/dev.c", i32 1546, i32 1}
!105 = !{ptr @.str.13, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../net/core/dev.c", i32 1566, i32 3}
!107 = !{ptr @__ksymtab_dev_disable_lro, !108, !"__ksymtab_dev_disable_lro", i1 false, i1 false}
!108 = !{!"../net/core/dev.c", i32 1571, i32 1}
!109 = !{ptr @.str.14, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../net/core/dev.c", i32 1596, i32 2}
!111 = !{ptr @.str.15, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../net/core/dev.c", i32 1596, i32 8}
!113 = !{ptr @.str.16, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../net/core/dev.c", i32 1596, i32 16}
!115 = !{ptr @.str.17, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../net/core/dev.c", i32 1596, i32 26}
!117 = !{ptr @.str.18, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../net/core/dev.c", i32 1596, i32 36}
!119 = !{ptr @.str.19, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../net/core/dev.c", i32 1596, i32 48}
!121 = !{ptr @.str.20, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../net/core/dev.c", i32 1597, i32 2}
!123 = !{ptr @.str.21, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../net/core/dev.c", i32 1597, i32 15}
!125 = !{ptr @.str.22, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../net/core/dev.c", i32 1597, i32 29}
!127 = !{ptr @.str.23, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../net/core/dev.c", i32 1597, i32 43}
!129 = !{ptr @.str.24, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../net/core/dev.c", i32 1597, i32 57}
!131 = !{ptr @.str.25, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../net/core/dev.c", i32 1598, i32 2}
!133 = !{ptr @.str.26, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../net/core/dev.c", i32 1598, i32 22}
!135 = !{ptr @.str.27, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../net/core/dev.c", i32 1598, i32 32}
!137 = !{ptr @.str.28, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../net/core/dev.c", i32 1598, i32 51}
!139 = !{ptr @.str.29, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../net/core/dev.c", i32 1599, i32 2}
!141 = !{ptr @.str.30, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../net/core/dev.c", i32 1599, i32 15}
!143 = !{ptr @.str.31, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../net/core/dev.c", i32 1599, i32 26}
!145 = !{ptr @.str.32, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../net/core/dev.c", i32 1599, i32 42}
!147 = !{ptr @.str.33, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../net/core/dev.c", i32 1599, i32 50}
!149 = !{ptr @.str.34, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../net/core/dev.c", i32 1600, i32 2}
!151 = !{ptr @.str.35, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../net/core/dev.c", i32 1600, i32 17}
!153 = !{ptr @.str.36, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../net/core/dev.c", i32 1600, i32 33}
!155 = !{ptr @.str.37, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../net/core/dev.c", i32 1600, i32 51}
!157 = !{ptr @.str.38, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../net/core/dev.c", i32 1601, i32 2}
!159 = !{ptr @.str.39, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../net/core/dev.c", i32 1601, i32 20}
!161 = !{ptr @.str.40, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../net/core/dev.c", i32 1601, i32 40}
!163 = !{ptr @.str.41, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../net/core/dev.c", i32 1602, i32 2}
!165 = !{ptr @.str.42, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../net/core/dev.c", i32 1602, i32 26}
!167 = !{ptr @.str.43, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../net/core/dev.c", i32 1603, i32 2}
!169 = !{ptr @.str.44, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../net/core/dev.c", i32 1603, i32 28}
!171 = !{ptr @.str.45, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../net/core/dev.c", i32 1604, i32 2}
!173 = !{ptr @.str.46, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../net/core/dev.c", i32 1604, i32 28}
!175 = !{ptr @.str.47, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../net/core/dev.c", i32 1605, i32 2}
!177 = !{ptr @.str.48, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../net/core/dev.c", i32 1608, i32 9}
!179 = !{ptr @__ksymtab_netdev_cmd_to_name, !180, !"__ksymtab_netdev_cmd_to_name", i1 false, i1 false}
!180 = !{!"../net/core/dev.c", i32 1610, i32 1}
!181 = !{ptr @__ksymtab_register_netdevice_notifier, !182, !"__ksymtab_register_netdevice_notifier", i1 false, i1 false}
!182 = !{!"../net/core/dev.c", i32 1725, i32 1}
!183 = !{ptr @__ksymtab_unregister_netdevice_notifier, !184, !"__ksymtab_unregister_netdevice_notifier", i1 false, i1 false}
!184 = !{!"../net/core/dev.c", i32 1761, i32 1}
!185 = !{ptr @__ksymtab_register_netdevice_notifier_net, !186, !"__ksymtab_register_netdevice_notifier_net", i1 false, i1 false}
!186 = !{!"../net/core/dev.c", i32 1823, i32 1}
!187 = !{ptr @__ksymtab_unregister_netdevice_notifier_net, !188, !"__ksymtab_unregister_netdevice_notifier_net", i1 false, i1 false}
!188 = !{!"../net/core/dev.c", i32 1851, i32 1}
!189 = !{ptr @__ksymtab_register_netdevice_notifier_dev_net, !190, !"__ksymtab_register_netdevice_notifier_dev_net", i1 false, i1 false}
!190 = !{!"../net/core/dev.c", i32 1868, i32 1}
!191 = !{ptr @__ksymtab_unregister_netdevice_notifier_dev_net, !192, !"__ksymtab_unregister_netdevice_notifier_dev_net", i1 false, i1 false}
!192 = !{!"../net/core/dev.c", i32 1882, i32 1}
!193 = !{ptr @__ksymtab_call_netdevice_notifiers, !194, !"__ksymtab_call_netdevice_notifiers", i1 false, i1 false}
!194 = !{!"../net/core/dev.c", i32 1947, i32 1}
!195 = !{ptr @__ksymtab_net_inc_ingress_queue, !196, !"__ksymtab_net_inc_ingress_queue", i1 false, i1 false}
!196 = !{!"../net/core/dev.c", i32 1978, i32 1}
!197 = !{ptr @__ksymtab_net_dec_ingress_queue, !198, !"__ksymtab_net_dec_ingress_queue", i1 false, i1 false}
!198 = !{!"../net/core/dev.c", i32 1984, i32 1}
!199 = !{ptr @__ksymtab_net_inc_egress_queue, !200, !"__ksymtab_net_inc_egress_queue", i1 false, i1 false}
!200 = !{!"../net/core/dev.c", i32 1994, i32 1}
!201 = !{ptr @__ksymtab_net_dec_egress_queue, !202, !"__ksymtab_net_dec_egress_queue", i1 false, i1 false}
!202 = !{!"../net/core/dev.c", i32 2000, i32 1}
!203 = !{ptr @__ksymtab_net_enable_timestamp, !204, !"__ksymtab_net_enable_timestamp", i1 false, i1 false}
!204 = !{!"../net/core/dev.c", i32 2039, i32 1}
!205 = !{ptr @__ksymtab_net_disable_timestamp, !206, !"__ksymtab_net_disable_timestamp", i1 false, i1 false}
!206 = !{!"../net/core/dev.c", i32 2059, i32 1}
!207 = !{ptr @__ksymtab_is_skb_forwardable, !208, !"__ksymtab_is_skb_forwardable", i1 false, i1 false}
!208 = !{!"../net/core/dev.c", i32 2078, i32 1}
!209 = !{ptr @__ksymtab___dev_forward_skb, !210, !"__ksymtab___dev_forward_skb", i1 false, i1 false}
!210 = !{!"../net/core/dev.c", i32 2097, i32 1}
!211 = !{ptr @__ksymtab_dev_forward_skb, !212, !"__ksymtab_dev_forward_skb", i1 false, i1 false}
!212 = !{!"../net/core/dev.c", i32 2121, i32 1}
!213 = !{ptr @__ksymtab_dev_nit_active, !214, !"__ksymtab_dev_nit_active", i1 false, i1 false}
!214 = !{!"../net/core/dev.c", i32 2178, i32 1}
!215 = distinct !{null, !216, !"__warned", i1 false, i1 false}
!216 = !{!"../net/core/dev.c", i32 2194, i32 2}
!217 = !{ptr @.str.49, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../net/core/dev.c", i32 2225, i32 4}
!219 = !{ptr @.str.50, !218, !"<string literal>", i1 false, i1 false}
!220 = !{ptr @dev_queue_xmit_nit._entry, !218, !"_entry", i1 false, i1 false}
!221 = !{ptr @dev_queue_xmit_nit._entry_ptr, !218, !"_entry_ptr", i1 false, i1 false}
!222 = !{ptr @__ksymtab_dev_queue_xmit_nit, !223, !"__ksymtab_dev_queue_xmit_nit", i1 false, i1 false}
!223 = !{!"../net/core/dev.c", i32 2249, i32 1}
!224 = !{ptr @__ksymtab_netdev_txq_to_tc, !225, !"__ksymtab_netdev_txq_to_tc", i1 false, i1 false}
!225 = !{!"../net/core/dev.c", i32 2307, i32 1}
!226 = distinct !{null, !227, !"__warned", i1 false, i1 false}
!227 = !{!"../net/core/dev.c", i32 2514, i32 13}
!228 = distinct !{null, !229, !"__warned", i1 false, i1 false}
!229 = !{!"../net/core/dev.c", i32 2552, i32 16}
!230 = distinct !{null, !231, !"__warned", i1 false, i1 false}
!231 = !{!"../net/core/dev.c", i32 2582, i32 10}
!232 = distinct !{null, !233, !"__warned", i1 false, i1 false}
!233 = !{!"../net/core/dev.c", i32 2611, i32 10}
!234 = distinct !{null, !235, !"__warned", i1 false, i1 false}
!235 = !{!"../net/core/dev.c", i32 2616, i32 15}
!236 = distinct !{null, !237, !"__warned", i1 false, i1 false}
!237 = !{!"../net/core/dev.c", i32 2673, i32 14}
!238 = distinct !{null, !239, !"__warned", i1 false, i1 false}
!239 = !{!"../net/core/dev.c", i32 2675, i32 10}
!240 = !{ptr @__ksymtab___netif_set_xps_queue, !241, !"__ksymtab___netif_set_xps_queue", i1 false, i1 false}
!241 = !{!"../net/core/dev.c", i32 2687, i32 1}
!242 = !{ptr @__ksymtab_netif_set_xps_queue, !243, !"__ksymtab_netif_set_xps_queue", i1 false, i1 false}
!243 = !{!"../net/core/dev.c", i32 2700, i32 1}
!244 = !{ptr @__ksymtab_netdev_reset_tc, !245, !"__ksymtab_netdev_reset_tc", i1 false, i1 false}
!245 = !{!"../net/core/dev.c", i32 2726, i32 1}
!246 = !{ptr @__ksymtab_netdev_set_tc_queue, !247, !"__ksymtab_netdev_set_tc_queue", i1 false, i1 false}
!247 = !{!"../net/core/dev.c", i32 2740, i32 1}
!248 = !{ptr @__ksymtab_netdev_set_num_tc, !249, !"__ksymtab_netdev_set_num_tc", i1 false, i1 false}
!249 = !{!"../net/core/dev.c", i32 2755, i32 1}
!250 = !{ptr @__ksymtab_netdev_unbind_sb_channel, !251, !"__ksymtab_netdev_unbind_sb_channel", i1 false, i1 false}
!251 = !{!"../net/core/dev.c", i32 2773, i32 1}
!252 = !{ptr @__ksymtab_netdev_bind_sb_channel_queue, !253, !"__ksymtab_netdev_bind_sb_channel_queue", i1 false, i1 false}
!253 = !{!"../net/core/dev.c", i32 2799, i32 1}
!254 = !{ptr @__ksymtab_netdev_set_sb_channel, !255, !"__ksymtab_netdev_set_sb_channel", i1 false, i1 false}
!255 = !{!"../net/core/dev.c", i32 2819, i32 1}
!256 = distinct !{null, !257, !"__already_done", i1 false, i1 false}
!257 = !{!"../net/core/dev.c", i32 2837, i32 3}
!258 = !{ptr @__ksymtab_netif_set_real_num_tx_queues, !259, !"__ksymtab_netif_set_real_num_tx_queues", i1 false, i1 false}
!259 = !{!"../net/core/dev.c", i32 2864, i32 1}
!260 = distinct !{null, !261, !"__already_done", i1 false, i1 false}
!261 = !{!"../net/core/dev.c", i32 2885, i32 3}
!262 = !{ptr @__ksymtab_netif_set_real_num_rx_queues, !263, !"__ksymtab_netif_set_real_num_rx_queues", i1 false, i1 false}
!263 = !{!"../net/core/dev.c", i32 2896, i32 1}
!264 = !{ptr @__ksymtab_netif_set_real_num_queues, !265, !"__ksymtab_netif_set_real_num_queues", i1 false, i1 false}
!265 = !{!"../net/core/dev.c", i32 2941, i32 1}
!266 = !{ptr @__ksymtab_netif_get_num_default_rss_queues, !267, !"__ksymtab_netif_get_num_default_rss_queues", i1 false, i1 false}
!267 = !{!"../net/core/dev.c", i32 2954, i32 1}
!268 = !{ptr @__ksymtab___netif_schedule, !269, !"__ksymtab___netif_schedule", i1 false, i1 false}
!269 = !{!"../net/core/dev.c", i32 2975, i32 1}
!270 = distinct !{null, !271, !"__warned", i1 false, i1 false}
!271 = !{!"../net/core/dev.c", i32 2990, i32 21}
!272 = !{ptr @__ksymtab_netif_schedule_queue, !273, !"__ksymtab_netif_schedule_queue", i1 false, i1 false}
!273 = !{!"../net/core/dev.c", i32 2996, i32 1}
!274 = distinct !{null, !275, !"__warned", i1 false, i1 false}
!275 = !{!"../net/core/dev.c", i32 3004, i32 7}
!276 = !{ptr @__ksymtab_netif_tx_wake_queue, !277, !"__ksymtab_netif_tx_wake_queue", i1 false, i1 false}
!277 = !{!"../net/core/dev.c", i32 3009, i32 1}
!278 = distinct !{null, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../net/core/dev.c", i32 3026, i32 14}
!280 = distinct !{null, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../net/core/dev.c", i32 3027, i32 2}
!282 = !{ptr @__ksymtab___dev_kfree_skb_irq, !283, !"__ksymtab___dev_kfree_skb_irq", i1 false, i1 false}
!283 = !{!"../net/core/dev.c", i32 3031, i32 1}
!284 = !{ptr @__ksymtab___dev_kfree_skb_any, !285, !"__ksymtab___dev_kfree_skb_any", i1 false, i1 false}
!285 = !{!"../net/core/dev.c", i32 3040, i32 1}
!286 = !{ptr @__ksymtab_netif_device_detach, !287, !"__ksymtab_netif_device_detach", i1 false, i1 false}
!287 = !{!"../net/core/dev.c", i32 3056, i32 1}
!288 = !{ptr @__ksymtab_netif_device_attach, !289, !"__ksymtab_netif_device_attach", i1 false, i1 false}
!289 = !{!"../net/core/dev.c", i32 3072, i32 1}
!290 = !{ptr @__ksymtab_skb_checksum_help, !291, !"__ksymtab_skb_checksum_help", i1 false, i1 false}
!291 = !{!"../net/core/dev.c", i32 3175, i32 1}
!292 = distinct !{null, !293, !"__already_done", i1 false, i1 false}
!293 = !{!"../net/core/dev.c", i32 3198, i32 6}
!294 = !{ptr @__ksymtab___skb_gso_segment, !295, !"__ksymtab___skb_gso_segment", i1 false, i1 false}
!295 = !{!"../net/core/dev.c", i32 3302, i32 1}
!296 = distinct !{null, !297, !"__already_done", i1 false, i1 false}
!297 = !{!"../net/core/dev.c", i32 3315, i32 2}
!298 = !{ptr @__ksymtab_netdev_rx_csum_fault, !299, !"__ksymtab_netdev_rx_csum_fault", i1 false, i1 false}
!299 = !{!"../net/core/dev.c", i32 3317, i32 1}
!300 = !{ptr @__ksymtab_passthru_features_check, !301, !"__ksymtab_passthru_features_check", i1 false, i1 false}
!301 = !{!"../net/core/dev.c", i32 3384, i32 1}
!302 = !{ptr @__ksymtab_netif_skb_features, !303, !"__ksymtab_netif_skb_features", i1 false, i1 false}
!303 = !{!"../net/core/dev.c", i32 3459, i32 1}
!304 = !{ptr @__ksymtab_skb_csum_hwoffload_help, !305, !"__ksymtab_skb_csum_hwoffload_help", i1 false, i1 false}
!305 = !{!"../net/core/dev.c", i32 3536, i32 1}
!306 = !{ptr @__ksymtab_validate_xmit_skb_list, !307, !"__ksymtab_validate_xmit_skb_list", i1 false, i1 false}
!307 = !{!"../net/core/dev.c", i32 3619, i32 1}
!308 = !{ptr @__ksymtab_dev_loopback_xmit, !309, !"__ksymtab_dev_loopback_xmit", i1 false, i1 false}
!309 = !{!"../net/core/dev.c", i32 3817, i32 1}
!310 = !{ptr @__ksymtab_dev_pick_tx_zero, !311, !"__ksymtab_dev_pick_tx_zero", i1 false, i1 false}
!311 = !{!"../net/core/dev.c", i32 3940, i32 1}
!312 = !{ptr @__ksymtab_dev_pick_tx_cpu_id, !313, !"__ksymtab_dev_pick_tx_cpu_id", i1 false, i1 false}
!313 = !{!"../net/core/dev.c", i32 3947, i32 1}
!314 = !{ptr @__ksymtab_netdev_pick_tx, !315, !"__ksymtab_netdev_pick_tx", i1 false, i1 false}
!315 = !{!"../net/core/dev.c", i32 3974, i32 1}
!316 = !{ptr @__ksymtab_dev_queue_xmit, !317, !"__ksymtab_dev_queue_xmit", i1 false, i1 false}
!317 = !{!"../net/core/dev.c", i32 4151, i32 1}
!318 = !{ptr @__ksymtab_dev_queue_xmit_accel, !319, !"__ksymtab_dev_queue_xmit_accel", i1 false, i1 false}
!319 = !{!"../net/core/dev.c", i32 4157, i32 1}
!320 = !{ptr @__ksymtab___dev_direct_xmit, !321, !"__ksymtab___dev_direct_xmit", i1 false, i1 false}
!321 = !{!"../net/core/dev.c", i32 4195, i32 1}
!322 = !{ptr @netdev_max_backlog, !323, !"netdev_max_backlog", i1 false, i1 false}
!323 = !{!"../net/core/dev.c", i32 4201, i32 5}
!324 = !{ptr @__ksymtab_netdev_max_backlog, !325, !"__ksymtab_netdev_max_backlog", i1 false, i1 false}
!325 = !{!"../net/core/dev.c", i32 4202, i32 1}
!326 = !{ptr @netdev_tstamp_prequeue, !327, !"netdev_tstamp_prequeue", i1 false, i1 false}
!327 = !{!"../net/core/dev.c", i32 4204, i32 5}
!328 = !{ptr @netdev_budget, !329, !"netdev_budget", i1 false, i1 false}
!329 = !{!"../net/core/dev.c", i32 4205, i32 5}
!330 = !{ptr @netdev_budget_usecs, !331, !"netdev_budget_usecs", i1 false, i1 false}
!331 = !{!"../net/core/dev.c", i32 4207, i32 28}
!332 = !{ptr @weight_p, !333, !"weight_p", i1 false, i1 false}
!333 = !{!"../net/core/dev.c", i32 4208, i32 5}
!334 = !{ptr @dev_weight_rx_bias, !335, !"dev_weight_rx_bias", i1 false, i1 false}
!335 = !{!"../net/core/dev.c", i32 4209, i32 5}
!336 = !{ptr @dev_weight_tx_bias, !337, !"dev_weight_tx_bias", i1 false, i1 false}
!337 = !{!"../net/core/dev.c", i32 4210, i32 5}
!338 = !{ptr @dev_rx_weight, !339, !"dev_rx_weight", i1 false, i1 false}
!339 = !{!"../net/core/dev.c", i32 4211, i32 5}
!340 = !{ptr @dev_tx_weight, !341, !"dev_tx_weight", i1 false, i1 false}
!341 = !{!"../net/core/dev.c", i32 4212, i32 5}
!342 = !{ptr @__ksymtab_rps_sock_flow_table, !343, !"__ksymtab_rps_sock_flow_table", i1 false, i1 false}
!343 = !{!"../net/core/dev.c", i32 4249, i32 1}
!344 = !{ptr @__ksymtab_rps_cpu_mask, !345, !"__ksymtab_rps_cpu_mask", i1 false, i1 false}
!345 = !{!"../net/core/dev.c", i32 4251, i32 1}
!346 = !{ptr @__ksymtab_rps_needed, !347, !"__ksymtab_rps_needed", i1 false, i1 false}
!347 = !{!"../net/core/dev.c", i32 4254, i32 1}
!348 = !{ptr @__ksymtab_rfs_needed, !349, !"__ksymtab_rfs_needed", i1 false, i1 false}
!349 = !{!"../net/core/dev.c", i32 4256, i32 1}
!350 = distinct !{null, !351, !"__warned", i1 false, i1 false}
!351 = !{!"../net/core/dev.c", i32 4426, i32 15}
!352 = !{ptr @__ksymtab_rps_may_expire_flow, !353, !"__ksymtab_rps_may_expire_flow", i1 false, i1 false}
!353 = !{!"../net/core/dev.c", i32 4439, i32 1}
!354 = !{ptr @netdev_flow_limit_table_len, !355, !"netdev_flow_limit_table_len", i1 false, i1 false}
!355 = !{!"../net/core/dev.c", i32 4476, i32 5}
!356 = !{ptr @__ksymtab_do_xdp_generic, !357, !"__ksymtab_do_xdp_generic", i1 false, i1 false}
!357 = !{!"../net/core/dev.c", i32 4784, i32 1}
!358 = !{ptr @__ksymtab_netif_rx, !359, !"__ksymtab_netif_rx", i1 false, i1 false}
!359 = !{!"../net/core/dev.c", i32 4847, i32 1}
!360 = !{ptr @__ksymtab_netif_rx_ni, !361, !"__ksymtab_netif_rx_ni", i1 false, i1 false}
!361 = !{!"../net/core/dev.c", i32 4864, i32 1}
!362 = !{ptr @__ksymtab_netif_rx_any_context, !363, !"__ksymtab_netif_rx_any_context", i1 false, i1 false}
!363 = !{!"../net/core/dev.c", i32 4879, i32 1}
!364 = !{ptr @__ksymtab_br_fdb_test_addr_hook, !365, !"__ksymtab_br_fdb_test_addr_hook", i1 false, i1 false}
!365 = !{!"../net/core/dev.c", i32 4967, i32 1}
!366 = distinct !{null, !367, !"__already_done", i1 false, i1 false}
!367 = !{!"../net/core/dev.c", i32 5043, i32 2}
!368 = distinct !{null, !369, !"__warned", i1 false, i1 false}
!369 = !{!"../net/core/dev.c", i32 5044, i32 16}
!370 = !{ptr @__ksymtab_netdev_is_rx_handler_busy, !371, !"__ksymtab_netdev_is_rx_handler_busy", i1 false, i1 false}
!371 = !{!"../net/core/dev.c", i32 5046, i32 1}
!372 = !{ptr @__ksymtab_netdev_rx_handler_register, !373, !"__ksymtab_netdev_rx_handler_register", i1 false, i1 false}
!373 = !{!"../net/core/dev.c", i32 5078, i32 1}
!374 = distinct !{null, !375, !"__already_done", i1 false, i1 false}
!375 = !{!"../net/core/dev.c", i32 5091, i32 2}
!376 = !{ptr @__ksymtab_netdev_rx_handler_unregister, !377, !"__ksymtab_netdev_rx_handler_unregister", i1 false, i1 false}
!377 = !{!"../net/core/dev.c", i32 5100, i32 1}
!378 = !{ptr @__ksymtab_netif_receive_skb_core, !379, !"__ksymtab_netif_receive_skb_core", i1 false, i1 false}
!379 = !{!"../net/core/dev.c", i32 5381, i32 1}
!380 = !{ptr @__ksymtab_netif_receive_skb, !381, !"__ksymtab_netif_receive_skb", i1 false, i1 false}
!381 = !{!"../net/core/dev.c", i32 5615, i32 1}
!382 = !{ptr @__ksymtab_netif_receive_skb_list, !383, !"__ksymtab_netif_receive_skb_list", i1 false, i1 false}
!383 = !{!"../net/core/dev.c", i32 5640, i32 1}
!384 = !{ptr @__ksymtab___napi_schedule, !385, !"__ksymtab___napi_schedule", i1 false, i1 false}
!385 = !{!"../net/core/dev.c", i32 5844, i32 1}
!386 = !{ptr @__ksymtab_napi_schedule_prep, !387, !"__ksymtab_napi_schedule_prep", i1 false, i1 false}
!387 = !{!"../net/core/dev.c", i32 5877, i32 1}
!388 = !{ptr @__ksymtab___napi_schedule_irqoff, !389, !"__ksymtab___napi_schedule_irqoff", i1 false, i1 false}
!389 = !{!"../net/core/dev.c", i32 5896, i32 1}
!390 = distinct !{null, !391, !"__already_done", i1 false, i1 false}
!391 = !{!"../net/core/dev.c", i32 5944, i32 3}
!392 = !{ptr @__ksymtab_napi_complete_done, !393, !"__ksymtab_napi_complete_done", i1 false, i1 false}
!393 = !{!"../net/core/dev.c", i32 5968, i32 1}
!394 = distinct !{null, !395, !"<string literal>", i1 false, i1 false}
!395 = !{!"../net/core/dev.c", i32 6099, i32 4}
!396 = !{ptr @__ksymtab_napi_busy_loop, !397, !"__ksymtab_napi_busy_loop", i1 false, i1 false}
!397 = !{!"../net/core/dev.c", i32 6124, i32 1}
!398 = !{ptr @__ksymtab_dev_set_threaded, !399, !"__ksymtab_dev_set_threaded", i1 false, i1 false}
!399 = !{!"../net/core/dev.c", i32 6231, i32 1}
!400 = distinct !{null, !401, !"__print_once", i1 false, i1 false}
!401 = !{!"../net/core/dev.c", i32 6249, i32 3}
!402 = !{ptr @.str.60, !401, !"<string literal>", i1 false, i1 false}
!403 = !{ptr @.str.61, !401, !"<string literal>", i1 false, i1 false}
!404 = !{ptr @__func__.netif_napi_add, !401, !"<string literal>", i1 false, i1 false}
!405 = !{ptr @__ksymtab_netif_napi_add, !406, !"__ksymtab_netif_napi_add", i1 false, i1 false}
!406 = !{!"../net/core/dev.c", i32 6267, i32 1}
!407 = !{ptr @__ksymtab_napi_disable, !408, !"__ksymtab_napi_disable", i1 false, i1 false}
!408 = !{!"../net/core/dev.c", i32 6294, i32 1}
!409 = !{ptr @__ksymtab_napi_enable, !410, !"__ksymtab_napi_enable", i1 false, i1 false}
!410 = !{!"../net/core/dev.c", i32 6316, i32 1}
!411 = !{ptr @__ksymtab___netif_napi_del, !412, !"__ksymtab___netif_napi_del", i1 false, i1 false}
!412 = !{!"../net/core/dev.c", i32 6349, i32 1}
!413 = distinct !{null, !414, !"__already_done", i1 false, i1 false}
!414 = !{!"../net/core/dev.c", i32 6599, i32 2}
!415 = !{ptr @__ksymtab_netdev_has_upper_dev, !416, !"__ksymtab_netdev_has_upper_dev", i1 false, i1 false}
!416 = !{!"../net/core/dev.c", i32 6604, i32 1}
!417 = !{ptr @__ksymtab_netdev_has_upper_dev_all_rcu, !418, !"__ksymtab_netdev_has_upper_dev_all_rcu", i1 false, i1 false}
!418 = !{!"../net/core/dev.c", i32 6626, i32 1}
!419 = distinct !{null, !420, !"__already_done", i1 false, i1 false}
!420 = !{!"../net/core/dev.c", i32 6637, i32 2}
!421 = !{ptr @__ksymtab_netdev_has_any_upper_dev, !422, !"__ksymtab_netdev_has_any_upper_dev", i1 false, i1 false}
!422 = !{!"../net/core/dev.c", i32 6641, i32 1}
!423 = distinct !{null, !424, !"__already_done", i1 false, i1 false}
!424 = !{!"../net/core/dev.c", i32 6654, i32 2}
!425 = !{ptr @__ksymtab_netdev_master_upper_dev_get, !426, !"__ksymtab_netdev_master_upper_dev_get", i1 false, i1 false}
!426 = !{!"../net/core/dev.c", i32 6665, i32 1}
!427 = !{ptr @__ksymtab_netdev_adjacent_get_private, !428, !"__ksymtab_netdev_adjacent_get_private", i1 false, i1 false}
!428 = !{!"../net/core/dev.c", i32 6705, i32 1}
!429 = distinct !{null, !430, !"__already_done", i1 false, i1 false}
!430 = !{!"../net/core/dev.c", i32 6720, i32 2}
!431 = !{ptr @__ksymtab_netdev_upper_get_next_dev_rcu, !432, !"__ksymtab_netdev_upper_get_next_dev_rcu", i1 false, i1 false}
!432 = !{!"../net/core/dev.c", i32 6731, i32 1}
!433 = !{ptr @__ksymtab_netdev_walk_all_upper_dev_rcu, !434, !"__ksymtab_netdev_walk_all_upper_dev_rcu", i1 false, i1 false}
!434 = !{!"../net/core/dev.c", i32 6861, i32 1}
!435 = !{ptr @__ksymtab_netdev_lower_get_next_private, !436, !"__ksymtab_netdev_lower_get_next_private", i1 false, i1 false}
!436 = !{!"../net/core/dev.c", i32 6902, i32 1}
!437 = distinct !{null, !438, !"__already_done", i1 false, i1 false}
!438 = !{!"../net/core/dev.c", i32 6919, i32 2}
!439 = !{ptr @__ksymtab_netdev_lower_get_next_private_rcu, !440, !"__ksymtab_netdev_lower_get_next_private_rcu", i1 false, i1 false}
!440 = !{!"../net/core/dev.c", i32 6930, i32 1}
!441 = !{ptr @__ksymtab_netdev_lower_get_next, !442, !"__ksymtab_netdev_lower_get_next", i1 false, i1 false}
!442 = !{!"../net/core/dev.c", i32 6956, i32 1}
!443 = !{ptr @__ksymtab_netdev_walk_all_lower_dev, !444, !"__ksymtab_netdev_walk_all_lower_dev", i1 false, i1 false}
!444 = !{!"../net/core/dev.c", i32 7035, i32 1}
!445 = !{ptr @__ksymtab_netdev_next_lower_dev_rcu, !446, !"__ksymtab_netdev_next_lower_dev_rcu", i1 false, i1 false}
!446 = !{!"../net/core/dev.c", i32 7099, i32 1}
!447 = !{ptr @__ksymtab_netdev_walk_all_lower_dev_rcu, !448, !"__ksymtab_netdev_walk_all_lower_dev_rcu", i1 false, i1 false}
!448 = !{!"../net/core/dev.c", i32 7210, i32 1}
!449 = !{ptr @__ksymtab_netdev_lower_get_first_private_rcu, !450, !"__ksymtab_netdev_lower_get_first_private_rcu", i1 false, i1 false}
!450 = !{!"../net/core/dev.c", i32 7231, i32 1}
!451 = !{ptr @__ksymtab_netdev_master_upper_dev_get_rcu, !452, !"__ksymtab_netdev_master_upper_dev_get_rcu", i1 false, i1 false}
!452 = !{!"../net/core/dev.c", i32 7250, i32 1}
!453 = !{ptr @__ksymtab_netdev_upper_dev_link, !454, !"__ksymtab_netdev_upper_dev_link", i1 false, i1 false}
!454 = !{!"../net/core/dev.c", i32 7531, i32 1}
!455 = !{ptr @__ksymtab_netdev_master_upper_dev_link, !456, !"__ksymtab_netdev_master_upper_dev_link", i1 false, i1 false}
!456 = !{!"../net/core/dev.c", i32 7560, i32 1}
!457 = !{ptr @__ksymtab_netdev_upper_dev_unlink, !458, !"__ksymtab_netdev_upper_dev_unlink", i1 false, i1 false}
!458 = !{!"../net/core/dev.c", i32 7612, i32 1}
!459 = !{ptr @__ksymtab_netdev_adjacent_change_prepare, !460, !"__ksymtab_netdev_adjacent_change_prepare", i1 false, i1 false}
!460 = !{!"../net/core/dev.c", i32 7667, i32 1}
!461 = !{ptr @__ksymtab_netdev_adjacent_change_commit, !462, !"__ksymtab_netdev_adjacent_change_commit", i1 false, i1 false}
!462 = !{!"../net/core/dev.c", i32 7687, i32 1}
!463 = !{ptr @__ksymtab_netdev_adjacent_change_abort, !464, !"__ksymtab_netdev_adjacent_change_abort", i1 false, i1 false}
!464 = !{!"../net/core/dev.c", i32 7706, i32 1}
!465 = !{ptr @__ksymtab_netdev_bonding_info_change, !466, !"__ksymtab_netdev_bonding_info_change", i1 false, i1 false}
!466 = !{!"../net/core/dev.c", i32 7728, i32 1}
!467 = !{ptr @__ksymtab_netdev_get_xmit_slave, !468, !"__ksymtab_netdev_get_xmit_slave", i1 false, i1 false}
!468 = !{!"../net/core/dev.c", i32 7751, i32 1}
!469 = !{ptr @__ksymtab_netdev_sk_get_lowest_dev, !470, !"__ksymtab_netdev_sk_get_lowest_dev", i1 false, i1 false}
!470 = !{!"../net/core/dev.c", i32 7784, i32 1}
!471 = !{ptr @__ksymtab_netdev_lower_dev_get_private, !472, !"__ksymtab_netdev_lower_dev_get_private", i1 false, i1 false}
!472 = !{!"../net/core/dev.c", i32 7874, i32 1}
!473 = distinct !{null, !474, !"__already_done", i1 false, i1 false}
!474 = !{!"../net/core/dev.c", i32 7892, i32 2}
!475 = !{ptr @__ksymtab_netdev_lower_state_changed, !476, !"__ksymtab_netdev_lower_state_changed", i1 false, i1 false}
!476 = !{!"../net/core/dev.c", i32 7897, i32 1}
!477 = !{ptr @__ksymtab_dev_set_promiscuity, !478, !"__ksymtab_dev_set_promiscuity", i1 false, i1 false}
!478 = !{!"../net/core/dev.c", i32 7977, i32 1}
!479 = !{ptr @__ksymtab_dev_set_allmulti, !480, !"__ksymtab_dev_set_allmulti", i1 false, i1 false}
!480 = !{!"../net/core/dev.c", i32 8027, i32 1}
!481 = !{ptr @__ksymtab_dev_get_flags, !482, !"__ksymtab_dev_get_flags", i1 false, i1 false}
!482 = !{!"../net/core/dev.c", i32 8099, i32 1}
!483 = distinct !{null, !484, !"__already_done", i1 false, i1 false}
!484 = !{!"../net/core/dev.c", i32 8107, i32 2}
!485 = !{ptr @__ksymtab_dev_change_flags, !486, !"__ksymtab_dev_change_flags", i1 false, i1 false}
!486 = !{!"../net/core/dev.c", i32 8218, i32 1}
!487 = !{ptr @__ksymtab___dev_set_mtu, !488, !"__ksymtab___dev_set_mtu", i1 false, i1 false}
!488 = !{!"../net/core/dev.c", i32 8231, i32 1}
!489 = !{ptr @dev_validate_mtu.__msg, !490, !"__msg", i1 false, i1 false}
!490 = !{!"../net/core/dev.c", i32 8238, i32 3}
!491 = !{ptr @dev_validate_mtu.__msg.62, !492, !"__msg", i1 false, i1 false}
!492 = !{!"../net/core/dev.c", i32 8243, i32 3}
!493 = !{ptr @.str.63, !494, !"<string literal>", i1 false, i1 false}
!494 = !{!"../net/core/dev.c", i32 8304, i32 3}
!495 = !{ptr @.str.64, !494, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @dev_set_mtu._entry, !494, !"_entry", i1 false, i1 false}
!497 = !{ptr @dev_set_mtu._entry_ptr, !494, !"_entry_ptr", i1 false, i1 false}
!498 = !{ptr @__ksymtab_dev_set_mtu, !499, !"__ksymtab_dev_set_mtu", i1 false, i1 false}
!499 = !{!"../net/core/dev.c", i32 8307, i32 1}
!500 = !{ptr @.str.65, !501, !"<string literal>", i1 false, i1 false}
!501 = !{!"../net/core/dev.c", i32 8336, i32 18}
!502 = !{ptr @__ksymtab_dev_set_group, !503, !"__ksymtab_dev_set_group", i1 false, i1 false}
!503 = !{!"../net/core/dev.c", i32 8350, i32 1}
!504 = !{ptr @__ksymtab_dev_pre_changeaddr_notify, !505, !"__ksymtab_dev_pre_changeaddr_notify", i1 false, i1 false}
!505 = !{!"../net/core/dev.c", i32 8371, i32 1}
!506 = !{ptr @__ksymtab_dev_set_mac_address, !507, !"__ksymtab_dev_set_mac_address", i1 false, i1 false}
!507 = !{!"../net/core/dev.c", i32 8404, i32 1}
!508 = !{ptr @__ksymtab_dev_set_mac_address_user, !509, !"__ksymtab_dev_set_mac_address_user", i1 false, i1 false}
!509 = !{!"../net/core/dev.c", i32 8418, i32 1}
!510 = !{ptr @__ksymtab_dev_get_mac_address, !511, !"__ksymtab_dev_get_mac_address", i1 false, i1 false}
!511 = !{!"../net/core/dev.c", i32 8446, i32 1}
!512 = !{ptr @__ksymtab_dev_change_carrier, !513, !"__ksymtab_dev_change_carrier", i1 false, i1 false}
!513 = !{!"../net/core/dev.c", i32 8465, i32 1}
!514 = !{ptr @__ksymtab_dev_get_phys_port_id, !515, !"__ksymtab_dev_get_phys_port_id", i1 false, i1 false}
!515 = !{!"../net/core/dev.c", i32 8483, i32 1}
!516 = !{ptr @__ksymtab_dev_get_phys_port_name, !517, !"__ksymtab_dev_get_phys_port_name", i1 false, i1 false}
!517 = !{!"../net/core/dev.c", i32 8506, i32 1}
!518 = !{ptr @__ksymtab_dev_get_port_parent_id, !519, !"__ksymtab_dev_get_port_parent_id", i1 false, i1 false}
!519 = !{!"../net/core/dev.c", i32 8548, i32 1}
!520 = !{ptr @__ksymtab_netdev_port_same_parent_id, !521, !"__ksymtab_netdev_port_same_parent_id", i1 false, i1 false}
!521 = !{!"../net/core/dev.c", i32 8567, i32 1}
!522 = !{ptr @__ksymtab_dev_change_proto_down, !523, !"__ksymtab_dev_change_proto_down", i1 false, i1 false}
!523 = !{!"../net/core/dev.c", i32 8588, i32 1}
!524 = !{ptr @__ksymtab_dev_change_proto_down_reason, !525, !"__ksymtab_dev_change_proto_down_reason", i1 false, i1 false}
!525 = !{!"../net/core/dev.c", i32 8613, i32 1}
!526 = !{ptr @__ksymtab_dev_xdp_prog_count, !527, !"__ksymtab_dev_xdp_prog_count", i1 false, i1 false}
!527 = !{!"../net/core/dev.c", i32 8671, i32 1}
!528 = distinct !{null, !529, !"__already_done", i1 false, i1 false}
!529 = !{!"../net/core/dev.c", i32 9090, i32 2}
!530 = !{ptr @.str.66, !531, !"<string literal>", i1 false, i1 false}
!531 = !{!"../net/core/dev.c", i32 9141, i32 1}
!532 = !{ptr @netdev_unregistering_wq, !531, !"netdev_unregistering_wq", i1 false, i1 false}
!533 = distinct !{null, !534, !"__already_done", i1 false, i1 false}
!534 = !{!"../net/core/dev.c", i32 9300, i32 2}
!535 = !{ptr @.str.67, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../net/core/dev.c", i32 9317, i32 2}
!537 = !{ptr @.str.68, !536, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @.str.69, !536, !"<string literal>", i1 false, i1 false}
!539 = !{ptr @__netdev_update_features.__UNIQUE_ID_ddebug952, !536, !"__UNIQUE_ID_ddebug952", i1 false, i1 false}
!540 = !{ptr @.str.70, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../net/core/dev.c", i32 9327, i32 4}
!542 = !{ptr @__ksymtab_netdev_update_features, !543, !"__ksymtab_netdev_update_features", i1 false, i1 false}
!543 = !{!"../net/core/dev.c", i32 9398, i32 1}
!544 = !{ptr @__ksymtab_netdev_change_features, !545, !"__ksymtab_netdev_change_features", i1 false, i1 false}
!545 = !{!"../net/core/dev.c", i32 9415, i32 1}
!546 = !{ptr @__ksymtab_netif_stacked_transfer_operstate, !547, !"__ksymtab_netif_stacked_transfer_operstate", i1 false, i1 false}
!547 = !{!"../net/core/dev.c", i32 9444, i32 1}
!548 = !{ptr @__ksymtab_netif_tx_stop_all_queues, !549, !"__ksymtab_netif_tx_stop_all_queues", i1 false, i1 false}
!549 = !{!"../net/core/dev.c", i32 9544, i32 1}
!550 = distinct !{null, !551, !"__already_done", i1 false, i1 false}
!551 = !{!"../net/core/dev.c", i32 9571, i32 2}
!552 = !{ptr @register_netdevice.__key, !553, !"__key", i1 false, i1 false}
!553 = !{!"../net/core/dev.c", i32 9583, i32 2}
!554 = !{ptr @.str.71, !553, !"<string literal>", i1 false, i1 false}
!555 = !{ptr @.str.72, !556, !"<string literal>", i1 false, i1 false}
!556 = !{!"../net/core/dev.c", i32 9609, i32 3}
!557 = !{ptr @__ksymtab_register_netdevice, !558, !"__ksymtab_register_netdevice", i1 false, i1 false}
!558 = !{!"../net/core/dev.c", i32 9726, i32 1}
!559 = !{ptr @__ksymtab_init_dummy_netdev, !560, !"__ksymtab_init_dummy_netdev", i1 false, i1 false}
!560 = !{!"../net/core/dev.c", i32 9769, i32 1}
!561 = !{ptr @__ksymtab_register_netdev, !562, !"__ksymtab_register_netdev", i1 false, i1 false}
!562 = !{!"../net/core/dev.c", i32 9795, i32 1}
!563 = !{ptr @__ksymtab_netdev_refcnt_read, !564, !"__ksymtab_netdev_refcnt_read", i1 false, i1 false}
!564 = !{!"../net/core/dev.c", i32 9809, i32 1}
!565 = !{ptr @netdev_unregister_timeout_secs, !566, !"netdev_unregister_timeout_secs", i1 false, i1 false}
!566 = !{!"../net/core/dev.c", i32 9811, i32 5}
!567 = !{ptr @.str.73, !568, !"<string literal>", i1 false, i1 false}
!568 = !{!"../net/core/dev.c", i32 9942, i32 4}
!569 = !{ptr @.str.74, !568, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @netdev_run_todo._entry, !568, !"_entry", i1 false, i1 false}
!571 = !{ptr @netdev_run_todo._entry_ptr, !568, !"_entry_ptr", i1 false, i1 false}
!572 = !{ptr @__ksymtab_netdev_stats_to_stats64, !573, !"__ksymtab_netdev_stats_to_stats64", i1 false, i1 false}
!573 = !{!"../net/core/dev.c", i32 10004, i32 1}
!574 = !{ptr @__ksymtab_dev_get_stats, !575, !"__ksymtab_dev_get_stats", i1 false, i1 false}
!575 = !{!"../net/core/dev.c", i32 10034, i32 1}
!576 = !{ptr @__ksymtab_dev_fetch_sw_netstats, !577, !"__ksymtab_dev_fetch_sw_netstats", i1 false, i1 false}
!577 = !{!"../net/core/dev.c", i32 10068, i32 1}
!578 = !{ptr @__ksymtab_dev_get_tstats64, !579, !"__ksymtab_dev_get_tstats64", i1 false, i1 false}
!579 = !{!"../net/core/dev.c", i32 10083, i32 1}
!580 = !{ptr @__ksymtab_netdev_set_default_ethtool_ops, !581, !"__ksymtab_netdev_set_default_ethtool_ops", i1 false, i1 false}
!581 = !{!"../net/core/dev.c", i32 10111, i32 1}
!582 = !{ptr @.str.75, !583, !"<string literal>", i1 false, i1 false}
!583 = !{!"../net/core/dev.c", i32 10145, i32 3}
!584 = !{ptr @.str.76, !583, !"<string literal>", i1 false, i1 false}
!585 = !{ptr @alloc_netdev_mqs._entry, !583, !"_entry", i1 false, i1 false}
!586 = !{ptr @alloc_netdev_mqs._entry_ptr, !583, !"_entry_ptr", i1 false, i1 false}
!587 = !{ptr @.str.78, !588, !"<string literal>", i1 false, i1 false}
!588 = !{!"../net/core/dev.c", i32 10150, i32 3}
!589 = !{ptr @alloc_netdev_mqs._entry.77, !588, !"_entry", i1 false, i1 false}
!590 = !{ptr @alloc_netdev_mqs._entry_ptr.79, !588, !"_entry_ptr", i1 false, i1 false}
!591 = !{ptr @__ksymtab_alloc_netdev_mqs, !592, !"__ksymtab_alloc_netdev_mqs", i1 false, i1 false}
!592 = !{!"../net/core/dev.c", i32 10250, i32 1}
!593 = distinct !{null, !594, !"__already_done", i1 false, i1 false}
!594 = !{!"../net/core/dev.c", i32 10272, i32 3}
!595 = distinct !{null, !596, !"__warned", i1 false, i1 false}
!596 = !{!"../net/core/dev.c", i32 10280, i32 8}
!597 = !{ptr @__ksymtab_free_netdev, !598, !"__ksymtab_free_netdev", i1 false, i1 false}
!598 = !{!"../net/core/dev.c", i32 10308, i32 1}
!599 = !{ptr @__ksymtab_synchronize_net, !600, !"__ksymtab_synchronize_net", i1 false, i1 false}
!600 = !{!"../net/core/dev.c", i32 10324, i32 1}
!601 = distinct !{null, !602, !"__already_done", i1 false, i1 false}
!602 = !{!"../net/core/dev.c", i32 10341, i32 2}
!603 = !{ptr @__ksymtab_unregister_netdevice_queue, !604, !"__ksymtab_unregister_netdevice_queue", i1 false, i1 false}
!604 = !{!"../net/core/dev.c", i32 10352, i32 1}
!605 = distinct !{null, !606, !"__already_done", i1 false, i1 false}
!606 = !{!"../net/core/dev.c", i32 10367, i32 2}
!607 = !{ptr @.str.80, !608, !"<string literal>", i1 false, i1 false}
!608 = !{!"../net/core/dev.c", i32 10378, i32 4}
!609 = !{ptr @.str.81, !608, !"<string literal>", i1 false, i1 false}
!610 = !{ptr @unregister_netdevice_many.__UNIQUE_ID_ddebug965, !608, !"__UNIQUE_ID_ddebug965", i1 false, i1 false}
!611 = !{ptr @__ksymtab_unregister_netdevice_many, !612, !"__ksymtab_unregister_netdevice_many", i1 false, i1 false}
!612 = !{!"../net/core/dev.c", i32 10458, i32 1}
!613 = !{ptr @__ksymtab_unregister_netdev, !614, !"__ksymtab_unregister_netdev", i1 false, i1 false}
!614 = !{!"../net/core/dev.c", i32 10477, i32 1}
!615 = distinct !{null, !616, !"__already_done", i1 false, i1 false}
!616 = !{!"../net/core/dev.c", i32 10501, i32 2}
!617 = !{ptr @__ksymtab___dev_change_net_namespace, !618, !"__ksymtab___dev_change_net_namespace", i1 false, i1 false}
!618 = !{!"../net/core/dev.c", i32 10620, i32 1}
!619 = !{ptr @__ksymtab_netdev_increment_features, !620, !"__ksymtab_netdev_increment_features", i1 false, i1 false}
!620 = !{!"../net/core/dev.c", i32 10714, i32 1}
!621 = !{ptr @.str.82, !622, !"<string literal>", i1 false, i1 false}
!622 = !{!"../net/core/dev.c", i32 10766, i32 22}
!623 = !{ptr @__ksymtab_netdev_printk, !624, !"__ksymtab_netdev_printk", i1 false, i1 false}
!624 = !{!"../net/core/dev.c", i32 10812, i32 1}
!625 = !{ptr @.str.83, !626, !"<string literal>", i1 false, i1 false}
!626 = !{!"../net/core/dev.c", i32 10831, i32 1}
!627 = !{ptr @__ksymtab_netdev_emerg, !626, !"__ksymtab_netdev_emerg", i1 false, i1 false}
!628 = !{ptr @.str.84, !629, !"<string literal>", i1 false, i1 false}
!629 = !{!"../net/core/dev.c", i32 10832, i32 1}
!630 = !{ptr @__ksymtab_netdev_alert, !629, !"__ksymtab_netdev_alert", i1 false, i1 false}
!631 = !{ptr @.str.85, !632, !"<string literal>", i1 false, i1 false}
!632 = !{!"../net/core/dev.c", i32 10833, i32 1}
!633 = !{ptr @__ksymtab_netdev_crit, !632, !"__ksymtab_netdev_crit", i1 false, i1 false}
!634 = !{ptr @__ksymtab_netdev_err, !635, !"__ksymtab_netdev_err", i1 false, i1 false}
!635 = !{!"../net/core/dev.c", i32 10834, i32 1}
!636 = !{ptr @.str.86, !637, !"<string literal>", i1 false, i1 false}
!637 = !{!"../net/core/dev.c", i32 10835, i32 1}
!638 = !{ptr @__ksymtab_netdev_warn, !637, !"__ksymtab_netdev_warn", i1 false, i1 false}
!639 = !{ptr @.str.87, !640, !"<string literal>", i1 false, i1 false}
!640 = !{!"../net/core/dev.c", i32 10836, i32 1}
!641 = !{ptr @__ksymtab_netdev_notice, !640, !"__ksymtab_netdev_notice", i1 false, i1 false}
!642 = !{ptr @.str.88, !643, !"<string literal>", i1 false, i1 false}
!643 = !{!"../net/core/dev.c", i32 10837, i32 1}
!644 = !{ptr @__ksymtab_netdev_info, !643, !"__ksymtab_netdev_info", i1 false, i1 false}
!645 = !{ptr @__initcall__kmod_dev__967_11039_net_dev_init4, !646, !"__initcall__kmod_dev__967_11039_net_dev_init4", i1 false, i1 false}
!646 = !{!"../net/core/dev.c", i32 11039, i32 1}
!647 = !{ptr @ptype_base, !648, !"ptype_base", i1 false, i1 false}
!648 = !{!"../net/core/dev.c", i32 158, i32 18}
!649 = !{ptr @ptype_all, !650, !"ptype_all", i1 false, i1 false}
!650 = !{!"../net/core/dev.c", i32 159, i32 18}
!651 = !{ptr @__pcpu_scope_softnet_data, !652, !"__pcpu_scope_softnet_data", i1 false, i1 false}
!652 = !{!"../net/core/dev.c", i32 406, i32 1}
!653 = !{ptr @__pcpu_unique_softnet_data, !652, !"__pcpu_unique_softnet_data", i1 false, i1 false}
!654 = !{ptr @softnet_data, !652, !"softnet_data", i1 false, i1 false}
!655 = !{ptr @netstamp_needed_deferred, !656, !"netstamp_needed_deferred", i1 false, i1 false}
!656 = !{!"../net/core/dev.c", i32 2005, i32 17}
!657 = !{ptr @netstamp_wanted, !658, !"netstamp_wanted", i1 false, i1 false}
!658 = !{!"../net/core/dev.c", i32 2006, i32 17}
!659 = !{ptr @xps_needed, !660, !"xps_needed", i1 false, i1 false}
!660 = !{!"../net/core/dev.c", i32 2310, i32 26}
!661 = !{ptr @xps_rxqs_needed, !662, !"xps_rxqs_needed", i1 false, i1 false}
!662 = !{!"../net/core/dev.c", i32 2311, i32 26}
!663 = !{ptr @rps_sock_flow_table, !664, !"rps_sock_flow_table", i1 false, i1 false}
!664 = !{!"../net/core/dev.c", i32 4248, i32 35}
!665 = !{ptr @rps_cpu_mask, !666, !"rps_cpu_mask", i1 false, i1 false}
!666 = !{!"../net/core/dev.c", i32 4250, i32 5}
!667 = !{ptr @rps_needed, !668, !"rps_needed", i1 false, i1 false}
!668 = !{!"../net/core/dev.c", i32 4253, i32 25}
!669 = !{ptr @rfs_needed, !670, !"rfs_needed", i1 false, i1 false}
!670 = !{!"../net/core/dev.c", i32 4255, i32 25}
!671 = !{ptr @br_fdb_test_addr_hook, !672, !"br_fdb_test_addr_hook", i1 false, i1 false}
!672 = !{!"../net/core/dev.c", i32 4965, i32 7}
!673 = !{ptr @__pcpu_unique_flush_works, !674, !"__pcpu_unique_flush_works", i1 false, i1 false}
!674 = !{!"../net/core/dev.c", i32 5642, i32 8}
!675 = !{ptr @flush_works, !674, !"flush_works", i1 false, i1 false}
!676 = !{ptr @default_ethtool_ops, !677, !"default_ethtool_ops", i1 false, i1 false}
!677 = !{!"../net/core/dev.c", i32 10103, i32 33}
!678 = !{ptr @.str.89, !679, !"<string literal>", i1 false, i1 false}
!679 = !{!"../net/core/dev.c", i32 157, i32 8}
!680 = !{ptr @ptype_lock, !679, !"ptype_lock", i1 false, i1 false}
!681 = distinct !{null, !682, !"__already_done", i1 false, i1 false}
!682 = !{!"../net/core/dev.c", i32 654, i32 6}
!683 = distinct !{null, !684, !"__warned", i1 false, i1 false}
!684 = !{!"../net/core/dev.c", i32 294, i32 2}
!685 = distinct !{null, !686, !"__warned", i1 false, i1 false}
!686 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!687 = !{ptr @.str.90, !686, !"<string literal>", i1 false, i1 false}
!688 = !{ptr @.str.91, !686, !"<string literal>", i1 false, i1 false}
!689 = distinct !{null, !690, !"__warned", i1 false, i1 false}
!690 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!691 = !{ptr @.str.92, !690, !"<string literal>", i1 false, i1 false}
!692 = !{ptr @.str.93, !693, !"<string literal>", i1 false, i1 false}
!693 = !{!"../net/core/dev.c", i32 199, i32 8}
!694 = !{ptr @.str.94, !693, !"<string literal>", i1 false, i1 false}
!695 = !{ptr @devnet_rename_sem, !693, !"devnet_rename_sem", i1 false, i1 false}
!696 = !{ptr @.str.95, !697, !"<string literal>", i1 false, i1 false}
!697 = !{!"../net/core/dev.c", i32 191, i32 8}
!698 = !{ptr @.str.96, !697, !"<string literal>", i1 false, i1 false}
!699 = !{ptr @ifalias_mutex, !697, !"ifalias_mutex", i1 false, i1 false}
!700 = distinct !{null, !701, !"__already_done", i1 false, i1 false}
!701 = !{!"../net/core/dev.c", i32 1379, i32 2}
!702 = distinct !{null, !703, !"__already_done", i1 false, i1 false}
!703 = !{!"../net/core/dev.c", i32 1458, i32 2}
!704 = !{ptr @.str.97, !705, !"<string literal>", i1 false, i1 false}
!705 = !{!"../include/linux/netdevice.h", i32 4963, i32 10}
!706 = !{ptr @.str.98, !707, !"<string literal>", i1 false, i1 false}
!707 = !{!"../include/linux/netdevice.h", i32 4975, i32 36}
!708 = !{ptr @.str.99, !709, !"<string literal>", i1 false, i1 false}
!709 = !{!"../include/linux/netdevice.h", i32 4977, i32 36}
!710 = !{ptr @.str.100, !711, !"<string literal>", i1 false, i1 false}
!711 = !{!"../include/linux/netdevice.h", i32 4978, i32 35}
!712 = !{ptr @.str.101, !713, !"<string literal>", i1 false, i1 false}
!713 = !{!"../include/linux/netdevice.h", i32 4979, i32 31}
!714 = !{ptr @.str.102, !715, !"<string literal>", i1 false, i1 false}
!715 = !{!"../include/linux/netdevice.h", i32 4980, i32 28}
!716 = distinct !{null, !717, !"__already_done", i1 false, i1 false}
!717 = !{!"../include/linux/netdevice.h", i32 4983, i32 2}
!718 = !{ptr @.str.103, !717, !"<string literal>", i1 false, i1 false}
!719 = !{ptr @.str.104, !717, !"<string literal>", i1 false, i1 false}
!720 = !{ptr @.str.105, !721, !"<string literal>", i1 false, i1 false}
!721 = !{!"../include/linux/netdevice.h", i32 4984, i32 9}
!722 = !{ptr @netdev_chain, !723, !"netdev_chain", i1 false, i1 false}
!723 = !{!"../net/core/dev.c", i32 399, i32 8}
!724 = distinct !{null, !725, !"dev_boot_phase", i1 false, i1 false}
!725 = !{!"../net/core/dev.c", i32 1678, i32 12}
!726 = distinct !{null, !727, !"__already_done", i1 false, i1 false}
!727 = !{!"../net/core/dev.c", i32 1910, i32 2}
!728 = !{ptr @ingress_needed_key, !729, !"ingress_needed_key", i1 false, i1 false}
!729 = !{!"../net/core/dev.c", i32 1972, i32 8}
!730 = !{ptr @egress_needed_key, !731, !"egress_needed_key", i1 false, i1 false}
!731 = !{!"../net/core/dev.c", i32 1988, i32 8}
!732 = !{ptr @.str.108, !733, !"<string literal>", i1 false, i1 false}
!733 = !{!"../net/core/dev.c", i32 2018, i32 8}
!734 = !{ptr @netstamp_work, !733, !"netstamp_work", i1 false, i1 false}
!735 = !{ptr @.str.109, !736, !"<string literal>", i1 false, i1 false}
!736 = !{!"../net/core/dev.c", i32 2312, i32 8}
!737 = !{ptr @.str.110, !736, !"<string literal>", i1 false, i1 false}
!738 = !{ptr @xps_map_mutex, !736, !"xps_map_mutex", i1 false, i1 false}
!739 = distinct !{null, !740, !"__already_done", i1 false, i1 false}
!740 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!741 = !{ptr @.str.111, !740, !"<string literal>", i1 false, i1 false}
!742 = distinct !{null, !743, !"__warned", i1 false, i1 false}
!743 = !{!"../net/core/dev.c", i32 2481, i32 9}
!744 = distinct !{null, !745, !"__warned", i1 false, i1 false}
!745 = !{!"../net/core/dev.c", i32 2323, i32 9}
!746 = distinct !{null, !747, !"__warned", i1 false, i1 false}
!747 = !{!"../net/core/dev.c", i32 2388, i32 13}
!748 = !{ptr @.str.112, !749, !"<string literal>", i1 false, i1 false}
!749 = !{!"../net/core/dev.c", i32 2271, i32 20}
!750 = !{ptr @.str.113, !751, !"<string literal>", i1 false, i1 false}
!751 = !{!"../net/core/dev.c", i32 2282, i32 21}
!752 = distinct !{null, !753, !"__warned", i1 false, i1 false}
!753 = !{!"../include/net/sch_generic.h", i32 760, i32 11}
!754 = !{ptr @.str.114, !753, !"<string literal>", i1 false, i1 false}
!755 = !{ptr @skb_warn_bad_offload.null_features, !756, !"null_features", i1 false, i1 false}
!756 = !{!"../net/core/dev.c", i32 3113, i32 33}
!757 = !{ptr @.str.115, !758, !"<string literal>", i1 false, i1 false}
!758 = !{!"../net/core/dev.c", i32 3127, i32 2}
!759 = !{ptr @.str.116, !760, !"<string literal>", i1 false, i1 false}
!760 = !{!"../include/linux/if_vlan.h", i32 598, i32 8}
!761 = !{ptr @.str.117, !762, !"<string literal>", i1 false, i1 false}
!762 = !{!"../net/core/dev.c", i32 3308, i32 18}
!763 = distinct !{null, !764, !"__already_done", i1 false, i1 false}
!764 = !{!"../include/trace/events/net.h", i32 14, i32 1}
!765 = !{ptr @.str.118, !764, !"<string literal>", i1 false, i1 false}
!766 = distinct !{null, !764, !"__warned", i1 false, i1 false}
!767 = distinct !{null, !768, !"__already_done", i1 false, i1 false}
!768 = !{!"../include/trace/events/net.h", i32 71, i32 1}
!769 = distinct !{null, !768, !"__warned", i1 false, i1 false}
!770 = !{ptr @.str.119, !771, !"<string literal>", i1 false, i1 false}
!771 = !{!"../include/net/sock.h", i32 2780, i32 3}
!772 = !{ptr @sk_validate_xmit_skb._rs, !771, !"_rs", i1 false, i1 false}
!773 = !{ptr @__func__.sk_validate_xmit_skb, !771, !"<string literal>", i1 false, i1 false}
!774 = !{ptr @.str.120, !771, !"<string literal>", i1 false, i1 false}
!775 = !{ptr @.str.121, !771, !"<string literal>", i1 false, i1 false}
!776 = !{ptr @sk_validate_xmit_skb._entry, !771, !"_entry", i1 false, i1 false}
!777 = !{ptr @sk_validate_xmit_skb._entry_ptr, !771, !"_entry_ptr", i1 false, i1 false}
!778 = !{ptr @.str.122, !779, !"<string literal>", i1 false, i1 false}
!779 = !{!"../include/linux/skbuff.h", i32 1011, i32 2}
!780 = !{ptr @.str.123, !781, !"<string literal>", i1 false, i1 false}
!781 = !{!"../include/net/dst.h", i32 316, i32 3}
!782 = distinct !{null, !783, !"__warned", i1 false, i1 false}
!783 = !{!"../net/core/dev.c", i32 3908, i32 13}
!784 = distinct !{null, !785, !"__warned", i1 false, i1 false}
!785 = !{!"../net/core/dev.c", i32 3919, i32 14}
!786 = distinct !{null, !787, !"__warned", i1 false, i1 false}
!787 = !{!"../net/core/dev.c", i32 3879, i32 8}
!788 = !{ptr @.str.125, !789, !"<string literal>", i1 false, i1 false}
!789 = !{!"../net/core/dev.c", i32 3092, i32 4}
!790 = !{ptr @.str.126, !789, !"<string literal>", i1 false, i1 false}
!791 = !{ptr @skb_tx_hash._entry, !789, !"_entry", i1 false, i1 false}
!792 = !{ptr @skb_tx_hash._entry_ptr, !789, !"_entry_ptr", i1 false, i1 false}
!793 = distinct !{null, !794, !"__already_done", i1 false, i1 false}
!794 = !{!"../include/net/sock.h", i32 1930, i32 6}
!795 = !{ptr @.str.127, !796, !"<string literal>", i1 false, i1 false}
!796 = !{!"../include/linux/netdevice.h", i32 3372, i32 3}
!797 = !{ptr @.str.128, !796, !"<string literal>", i1 false, i1 false}
!798 = !{ptr @netdev_cap_txqueue._entry, !796, !"_entry", i1 false, i1 false}
!799 = !{ptr @netdev_cap_txqueue._entry_ptr, !796, !"_entry_ptr", i1 false, i1 false}
!800 = distinct !{null, !801, !"__warned", i1 false, i1 false}
!801 = !{!"../net/core/dev.c", i32 4077, i32 6}
!802 = !{ptr @.str.129, !803, !"<string literal>", i1 false, i1 false}
!803 = !{!"../net/core/dev.c", i32 4124, i32 4}
!804 = !{ptr @.str.130, !803, !"<string literal>", i1 false, i1 false}
!805 = !{ptr @__dev_queue_xmit._entry, !803, !"_entry", i1 false, i1 false}
!806 = !{ptr @__dev_queue_xmit._entry_ptr, !803, !"_entry_ptr", i1 false, i1 false}
!807 = !{ptr @.str.132, !808, !"<string literal>", i1 false, i1 false}
!808 = !{!"../net/core/dev.c", i32 4131, i32 4}
!809 = !{ptr @__dev_queue_xmit._entry.131, !808, !"_entry", i1 false, i1 false}
!810 = !{ptr @__dev_queue_xmit._entry_ptr.133, !808, !"_entry_ptr", i1 false, i1 false}
!811 = distinct !{null, !812, !"__warned", i1 false, i1 false}
!812 = !{!"../include/linux/rcupdate.h", i32 749, i32 2}
!813 = !{ptr @.str.134, !812, !"<string literal>", i1 false, i1 false}
!814 = distinct !{null, !815, !"__warned", i1 false, i1 false}
!815 = !{!"../net/core/dev.c", i32 3783, i32 8}
!816 = distinct !{null, !817, !"__warned", i1 false, i1 false}
!817 = !{!"../include/linux/netfilter_netdev.h", i32 97, i32 6}
!818 = !{ptr @.str.135, !817, !"<string literal>", i1 false, i1 false}
!819 = distinct !{null, !820, !"__warned", i1 false, i1 false}
!820 = !{!"../net/core/dev.c", i32 3824, i32 29}
!821 = distinct !{null, !822, !"__already_done", i1 false, i1 false}
!822 = !{!"../include/linux/seqlock.h", i32 271, i32 2}
!823 = !{ptr @.str.136, !822, !"<string literal>", i1 false, i1 false}
!824 = distinct !{null, !825, !"__already_done", i1 false, i1 false}
!825 = !{!"../include/trace/events/net.h", i32 143, i32 1}
!826 = distinct !{null, !825, !"__warned", i1 false, i1 false}
!827 = distinct !{null, !828, !"__warned", i1 false, i1 false}
!828 = !{!"../include/net/sch_generic.h", i32 835, i32 34}
!829 = distinct !{null, !830, !"__already_done", i1 false, i1 false}
!830 = !{!"../include/trace/events/qdisc.h", i32 49, i32 1}
!831 = !{ptr @.str.137, !830, !"<string literal>", i1 false, i1 false}
!832 = distinct !{null, !830, !"__warned", i1 false, i1 false}
!833 = distinct !{null, !834, !"__warned", i1 false, i1 false}
!834 = !{!"../include/linux/rcupdate.h", i32 760, i32 2}
!835 = !{ptr @.str.138, !834, !"<string literal>", i1 false, i1 false}
!836 = distinct !{null, !837, !"__already_done", i1 false, i1 false}
!837 = !{!"../net/core/dev.c", i32 4576, i32 4}
!838 = !{ptr @.str.139, !837, !"<string literal>", i1 false, i1 false}
!839 = !{ptr @.str.140, !840, !"<string literal>", i1 false, i1 false}
!840 = !{!"../include/linux/filter.h", i32 613, i32 2}
!841 = distinct !{null, !842, !"__already_done", i1 false, i1 false}
!842 = !{!"../include/trace/events/xdp.h", i32 28, i32 1}
!843 = !{ptr @.str.141, !842, !"<string literal>", i1 false, i1 false}
!844 = distinct !{null, !842, !"__warned", i1 false, i1 false}
!845 = distinct !{null, !846, !"__already_done", i1 false, i1 false}
!846 = !{!"../include/trace/events/net.h", i32 157, i32 1}
!847 = distinct !{null, !846, !"__warned", i1 false, i1 false}
!848 = distinct !{null, !849, !"__already_done", i1 false, i1 false}
!849 = !{!"../include/trace/events/net.h", i32 256, i32 1}
!850 = distinct !{null, !849, !"__warned", i1 false, i1 false}
!851 = distinct !{null, !852, !"__already_done", i1 false, i1 false}
!852 = !{!"../include/trace/events/net.h", i32 308, i32 1}
!853 = distinct !{null, !852, !"__warned", i1 false, i1 false}
!854 = distinct !{null, !855, !"__already_done", i1 false, i1 false}
!855 = !{!"../include/trace/events/net.h", i32 263, i32 1}
!856 = distinct !{null, !855, !"__warned", i1 false, i1 false}
!857 = distinct !{null, !858, !"__already_done", i1 false, i1 false}
!858 = !{!"../include/trace/events/net.h", i32 315, i32 1}
!859 = distinct !{null, !858, !"__warned", i1 false, i1 false}
!860 = distinct !{null, !861, !"__warned", i1 false, i1 false}
!861 = !{!"../net/core/dev.c", i32 5172, i32 25}
!862 = distinct !{null, !863, !"__warned", i1 false, i1 false}
!863 = !{!"../net/core/dev.c", i32 5193, i32 2}
!864 = distinct !{null, !865, !"__warned", i1 false, i1 false}
!865 = !{!"../net/core/dev.c", i32 5199, i32 2}
!866 = distinct !{null, !867, !"__warned", i1 false, i1 false}
!867 = !{!"../net/core/dev.c", i32 5239, i32 15}
!868 = distinct !{null, !869, !"__already_done", i1 false, i1 false}
!869 = !{!"../include/trace/events/net.h", i32 150, i32 1}
!870 = distinct !{null, !869, !"__warned", i1 false, i1 false}
!871 = !{ptr @generic_xdp_needed_key, !872, !"generic_xdp_needed_key", i1 false, i1 false}
!872 = !{!"../net/core/dev.c", i32 4754, i32 8}
!873 = distinct !{null, !874, !"__warned", i1 false, i1 false}
!874 = !{!"../net/core/dev.c", i32 4975, i32 29}
!875 = distinct !{null, !876, !"__warned", i1 false, i1 false}
!876 = !{!"../include/linux/netfilter_netdev.h", i32 21, i32 30}
!877 = distinct !{null, !878, !"__warned", i1 false, i1 false}
!878 = !{!"../net/core/dev.c", i32 2146, i32 2}
!879 = !{ptr @netstamp_needed_key, !880, !"netstamp_needed_key", i1 false, i1 false}
!880 = !{!"../net/core/dev.c", i32 2003, i32 8}
!881 = distinct !{null, !882, !"__already_done", i1 false, i1 false}
!882 = !{!"../net/core/dev.c", i32 4323, i32 4}
!883 = distinct !{null, !884, !"__warned", i1 false, i1 false}
!884 = !{!"../net/core/dev.c", i32 4334, i32 15}
!885 = distinct !{null, !886, !"__warned", i1 false, i1 false}
!886 = !{!"../net/core/dev.c", i32 4335, i32 8}
!887 = distinct !{null, !888, !"__warned", i1 false, i1 false}
!888 = !{!"../net/core/dev.c", i32 4344, i32 20}
!889 = distinct !{null, !890, !"__warned", i1 false, i1 false}
!890 = !{!"../net/core/dev.c", i32 4280, i32 16}
!891 = distinct !{null, !892, !"__warned", i1 false, i1 false}
!892 = !{!"../net/core/dev.c", i32 4492, i32 7}
!893 = distinct !{null, !894, !"__already_done", i1 false, i1 false}
!894 = !{!"../include/trace/events/net.h", i32 242, i32 1}
!895 = distinct !{null, !894, !"__warned", i1 false, i1 false}
!896 = distinct !{null, !897, !"__already_done", i1 false, i1 false}
!897 = !{!"../include/trace/events/net.h", i32 301, i32 1}
!898 = distinct !{null, !897, !"__warned", i1 false, i1 false}
!899 = distinct !{null, !900, !"__already_done", i1 false, i1 false}
!900 = !{!"../include/trace/events/net.h", i32 249, i32 1}
!901 = distinct !{null, !900, !"__warned", i1 false, i1 false}
!902 = distinct !{null, !903, !"__already_done", i1 false, i1 false}
!903 = !{!"../include/trace/events/net.h", i32 322, i32 1}
!904 = distinct !{null, !903, !"__warned", i1 false, i1 false}
!905 = distinct !{null, !906, !"__warned", i1 false, i1 false}
!906 = !{!"../net/core/dev.c", i32 5976, i32 2}
!907 = !{ptr @napi_hash, !908, !"napi_hash", i1 false, i1 false}
!908 = !{!"../net/core/dev.c", i32 197, i32 8}
!909 = distinct !{null, !910, !"__already_done", i1 false, i1 false}
!910 = !{!"../include/trace/events/napi.h", i32 14, i32 1}
!911 = !{ptr @.str.149, !910, !"<string literal>", i1 false, i1 false}
!912 = distinct !{null, !910, !"__warned", i1 false, i1 false}
!913 = !{ptr @.str.150, !914, !"<string literal>", i1 false, i1 false}
!914 = !{!"../net/core/dev.c", i32 1363, i32 14}
!915 = !{ptr @.str.151, !916, !"<string literal>", i1 false, i1 false}
!916 = !{!"../net/core/dev.c", i32 1367, i32 3}
!917 = !{ptr @.str.152, !916, !"<string literal>", i1 false, i1 false}
!918 = !{ptr @napi_kthread_create._entry, !916, !"_entry", i1 false, i1 false}
!919 = !{ptr @napi_kthread_create._entry_ptr, !916, !"_entry_ptr", i1 false, i1 false}
!920 = distinct !{null, !921, !"__already_done", i1 false, i1 false}
!921 = !{!"../net/core/dev.c", i32 6446, i32 2}
!922 = distinct !{null, !923, !"__already_done", i1 false, i1 false}
!923 = !{!"../net/core/dev.c", i32 6456, i32 4}
!924 = distinct !{null, !925, !"__already_done", i1 false, i1 false}
!925 = !{!"../net/core/dev.c", i32 6463, i32 3}
!926 = distinct !{null, !927, !"__already_done", i1 false, i1 false}
!927 = !{!"../net/core/dev.c", i32 6465, i32 2}
!928 = distinct !{null, !929, !"__print_once", i1 false, i1 false}
!929 = !{!"../net/core/dev.c", i32 6370, i32 3}
!930 = !{ptr @.str.156, !929, !"<string literal>", i1 false, i1 false}
!931 = distinct !{null, !932, !"__already_done", i1 false, i1 false}
!932 = !{!"../net/core/dev.c", i32 6412, i32 3}
!933 = !{ptr @.str.157, !932, !"<string literal>", i1 false, i1 false}
!934 = !{ptr @.str.158, !932, !"<string literal>", i1 false, i1 false}
!935 = !{ptr @__napi_poll._entry, !932, !"_entry", i1 false, i1 false}
!936 = !{ptr @__napi_poll._entry_ptr, !932, !"_entry_ptr", i1 false, i1 false}
!937 = !{ptr @.str.159, !932, !"<string literal>", i1 false, i1 false}
!938 = !{ptr @.str.160, !939, !"<string literal>", i1 false, i1 false}
!939 = !{!"../net/core/dev.c", i32 194, i32 8}
!940 = !{ptr @napi_hash_lock, !939, !"napi_hash_lock", i1 false, i1 false}
!941 = !{ptr @napi_gen_id, !942, !"napi_gen_id", i1 false, i1 false}
!942 = !{!"../net/core/dev.c", i32 196, i32 21}
!943 = distinct !{null, !944, !"__already_done", i1 false, i1 false}
!944 = !{!"../net/core/dev.c", i32 6755, i32 2}
!945 = distinct !{null, !946, !"__already_done", i1 false, i1 false}
!946 = !{!"../net/core/dev.c", i32 7455, i32 2}
!947 = distinct !{null, !948, !"__already_done", i1 false, i1 false}
!948 = !{!"../net/core/dev.c", i32 6871, i32 2}
!949 = distinct !{null, !950, !"__already_done", i1 false, i1 false}
!950 = !{!"../net/core/dev.c", i32 6671, i32 2}
!951 = !{ptr @.str.161, !952, !"<string literal>", i1 false, i1 false}
!952 = !{!"../net/core/dev.c", i32 7295, i32 3}
!953 = !{ptr @.str.162, !952, !"<string literal>", i1 false, i1 false}
!954 = !{ptr @__netdev_adjacent_dev_insert.__UNIQUE_ID_ddebug930, !952, !"__UNIQUE_ID_ddebug930", i1 false, i1 false}
!955 = !{ptr @.str.163, !956, !"<string literal>", i1 false, i1 false}
!956 = !{!"../net/core/dev.c", i32 7312, i32 2}
!957 = !{ptr @__netdev_adjacent_dev_insert.__UNIQUE_ID_ddebug931, !956, !"__UNIQUE_ID_ddebug931", i1 false, i1 false}
!958 = !{ptr @.str.164, !959, !"<string literal>", i1 false, i1 false}
!959 = !{!"../net/core/dev.c", i32 7324, i32 28}
!960 = !{ptr @.str.165, !961, !"<string literal>", i1 false, i1 false}
!961 = !{!"../net/core/dev.c", i32 7352, i32 2}
!962 = !{ptr @.str.166, !961, !"<string literal>", i1 false, i1 false}
!963 = !{ptr @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug932, !961, !"__UNIQUE_ID_ddebug932", i1 false, i1 false}
!964 = !{ptr @.str.167, !965, !"<string literal>", i1 false, i1 false}
!965 = !{!"../net/core/dev.c", i32 7358, i32 3}
!966 = !{ptr @__netdev_adjacent_dev_remove._entry, !965, !"_entry", i1 false, i1 false}
!967 = !{ptr @__netdev_adjacent_dev_remove._entry_ptr, !965, !"_entry_ptr", i1 false, i1 false}
!968 = !{ptr @.str.168, !969, !"<string literal>", i1 false, i1 false}
!969 = !{!"../net/core/dev.c", i32 7365, i32 3}
!970 = !{ptr @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug933, !969, !"__UNIQUE_ID_ddebug933", i1 false, i1 false}
!971 = !{ptr @.str.169, !972, !"<string literal>", i1 false, i1 false}
!972 = !{!"../net/core/dev.c", i32 7379, i32 2}
!973 = !{ptr @__netdev_adjacent_dev_remove.__UNIQUE_ID_ddebug934, !972, !"__UNIQUE_ID_ddebug934", i1 false, i1 false}
!974 = distinct !{null, !975, !"__already_done", i1 false, i1 false}
!975 = !{!"../net/core/dev.c", i32 7574, i32 2}
!976 = !{ptr @.str.170, !977, !"<string literal>", i1 false, i1 false}
!977 = !{!"../net/core/dev.c", i32 7270, i32 3}
!978 = !{ptr @.str.171, !979, !"<string literal>", i1 false, i1 false}
!979 = !{!"../net/core/dev.c", i32 7270, i32 16}
!980 = distinct !{null, !981, !"__already_done", i1 false, i1 false}
!981 = !{!"../net/core/dev.c", i32 7913, i32 2}
!982 = !{ptr @.str.172, !983, !"<string literal>", i1 false, i1 false}
!983 = !{!"../net/core/dev.c", i32 7926, i32 21}
!984 = !{ptr @.str.173, !985, !"<string literal>", i1 false, i1 false}
!985 = !{!"../net/core/dev.c", i32 7931, i32 3}
!986 = !{ptr @.str.174, !985, !"<string literal>", i1 false, i1 false}
!987 = !{ptr @__dev_set_promiscuity._entry, !985, !"_entry", i1 false, i1 false}
!988 = !{ptr @__dev_set_promiscuity._entry_ptr, !985, !"_entry_ptr", i1 false, i1 false}
!989 = !{ptr @.str.175, !985, !"<string literal>", i1 false, i1 false}
!990 = !{ptr @.str.176, !985, !"<string literal>", i1 false, i1 false}
!991 = distinct !{null, !992, !"__warned", i1 false, i1 false}
!992 = !{!"../net/core/dev.c", i32 7935, i32 4}
!993 = !{ptr @.str.177, !994, !"<string literal>", i1 false, i1 false}
!994 = !{!"../net/core/dev.c", i32 7938, i32 7}
!995 = distinct !{null, !996, !"__already_done", i1 false, i1 false}
!996 = !{!"../net/core/dev.c", i32 7983, i32 2}
!997 = !{ptr @.str.178, !998, !"<string literal>", i1 false, i1 false}
!998 = !{!"../net/core/dev.c", i32 7996, i32 21}
!999 = !{ptr @.str.179, !1000, !"<string literal>", i1 false, i1 false}
!1000 = !{!"../net/core/dev.c", i32 8406, i32 8}
!1001 = !{ptr @.str.180, !1000, !"<string literal>", i1 false, i1 false}
!1002 = !{ptr @dev_addr_sem, !1000, !"dev_addr_sem", i1 false, i1 false}
!1003 = !{ptr @bpf_xdp_link_lops, !1004, !"bpf_xdp_link_lops", i1 false, i1 false}
!1004 = !{!"../net/core/dev.c", i32 9011, i32 34}
!1005 = distinct !{null, !1006, !"__already_done", i1 false, i1 false}
!1006 = !{!"../net/core/dev.c", i32 8892, i32 2}
!1007 = distinct !{null, !1008, !"__warned", i1 false, i1 false}
!1008 = !{!"../net/core/dev.c", i32 5502, i32 25}
!1009 = !{ptr @.str.181, !1010, !"<string literal>", i1 false, i1 false}
!1010 = !{!"../net/core/dev.c", i32 1587, i32 3}
!1011 = !{ptr @.str.182, !1012, !"<string literal>", i1 false, i1 false}
!1012 = !{!"../net/core/dev.c", i32 8945, i32 18}
!1013 = distinct !{null, !1014, !"__already_done", i1 false, i1 false}
!1014 = !{!"../net/core/dev.c", i32 8771, i32 2}
!1015 = !{ptr @dev_xdp_attach.__msg, !1016, !"__msg", i1 false, i1 false}
!1016 = !{!"../net/core/dev.c", i32 8778, i32 3}
!1017 = !{ptr @dev_xdp_attach.__msg.183, !1018, !"__msg", i1 false, i1 false}
!1018 = !{!"../net/core/dev.c", i32 8783, i32 3}
!1019 = !{ptr @dev_xdp_attach.__msg.184, !1020, !"__msg", i1 false, i1 false}
!1020 = !{!"../net/core/dev.c", i32 8788, i32 3}
!1021 = !{ptr @dev_xdp_attach.__msg.185, !1022, !"__msg", i1 false, i1 false}
!1022 = !{!"../net/core/dev.c", i32 8794, i32 3}
!1023 = !{ptr @dev_xdp_attach.__msg.186, !1024, !"__msg", i1 false, i1 false}
!1024 = !{!"../net/core/dev.c", i32 8801, i32 3}
!1025 = !{ptr @dev_xdp_attach.__msg.187, !1026, !"__msg", i1 false, i1 false}
!1026 = !{!"../net/core/dev.c", i32 8808, i32 4}
!1027 = !{ptr @dev_xdp_attach.__msg.188, !1028, !"__msg", i1 false, i1 false}
!1028 = !{!"../net/core/dev.c", i32 8816, i32 3}
!1029 = !{ptr @dev_xdp_attach.__msg.189, !1030, !"__msg", i1 false, i1 false}
!1030 = !{!"../net/core/dev.c", i32 8820, i32 3}
!1031 = !{ptr @dev_xdp_attach.__msg.190, !1032, !"__msg", i1 false, i1 false}
!1032 = !{!"../net/core/dev.c", i32 8834, i32 4}
!1033 = !{ptr @dev_xdp_attach.__msg.191, !1034, !"__msg", i1 false, i1 false}
!1034 = !{!"../net/core/dev.c", i32 8838, i32 4}
!1035 = !{ptr @dev_xdp_attach.__msg.192, !1036, !"__msg", i1 false, i1 false}
!1036 = !{!"../net/core/dev.c", i32 8842, i32 4}
!1037 = !{ptr @dev_xdp_attach.__msg.193, !1038, !"__msg", i1 false, i1 false}
!1038 = !{!"../net/core/dev.c", i32 8846, i32 4}
!1039 = !{ptr @dev_xdp_attach.__msg.194, !1040, !"__msg", i1 false, i1 false}
!1040 = !{!"../net/core/dev.c", i32 8850, i32 4}
!1041 = !{ptr @dev_xdp_attach.__msg.195, !1042, !"__msg", i1 false, i1 false}
!1042 = !{!"../net/core/dev.c", i32 8859, i32 4}
!1043 = !{ptr @.str.196, !1044, !"<string literal>", i1 false, i1 false}
!1044 = !{!"../net/core/dev.c", i32 9199, i32 20}
!1045 = !{ptr @.str.197, !1046, !"<string literal>", i1 false, i1 false}
!1046 = !{!"../net/core/dev.c", i32 9205, i32 3}
!1047 = !{ptr @.str.198, !1046, !"<string literal>", i1 false, i1 false}
!1048 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug941, !1046, !"__UNIQUE_ID_ddebug941", i1 false, i1 false}
!1049 = !{ptr @.str.199, !1050, !"<string literal>", i1 false, i1 false}
!1050 = !{!"../net/core/dev.c", i32 9211, i32 3}
!1051 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug942, !1050, !"__UNIQUE_ID_ddebug942", i1 false, i1 false}
!1052 = !{ptr @.str.200, !1053, !"<string literal>", i1 false, i1 false}
!1053 = !{!"../net/core/dev.c", i32 9218, i32 3}
!1054 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug943, !1053, !"__UNIQUE_ID_ddebug943", i1 false, i1 false}
!1055 = !{ptr @.str.201, !1056, !"<string literal>", i1 false, i1 false}
!1056 = !{!"../net/core/dev.c", i32 9232, i32 3}
!1057 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug944, !1056, !"__UNIQUE_ID_ddebug944", i1 false, i1 false}
!1058 = !{ptr @.str.202, !1059, !"<string literal>", i1 false, i1 false}
!1059 = !{!"../net/core/dev.c", i32 9239, i32 3}
!1060 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug945, !1059, !"__UNIQUE_ID_ddebug945", i1 false, i1 false}
!1061 = !{ptr @.str.203, !1062, !"<string literal>", i1 false, i1 false}
!1062 = !{!"../net/core/dev.c", i32 9251, i32 4}
!1063 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug946, !1062, !"__UNIQUE_ID_ddebug946", i1 false, i1 false}
!1064 = !{ptr @.str.204, !1065, !"<string literal>", i1 false, i1 false}
!1065 = !{!"../net/core/dev.c", i32 9259, i32 4}
!1066 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug947, !1065, !"__UNIQUE_ID_ddebug947", i1 false, i1 false}
!1067 = !{ptr @.str.205, !1068, !"<string literal>", i1 false, i1 false}
!1068 = !{!"../net/core/dev.c", i32 9264, i32 4}
!1069 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug948, !1068, !"__UNIQUE_ID_ddebug948", i1 false, i1 false}
!1070 = !{ptr @.str.206, !1071, !"<string literal>", i1 false, i1 false}
!1071 = !{!"../net/core/dev.c", i32 9270, i32 3}
!1072 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug949, !1071, !"__UNIQUE_ID_ddebug949", i1 false, i1 false}
!1073 = !{ptr @.str.207, !1074, !"<string literal>", i1 false, i1 false}
!1074 = !{!"../net/core/dev.c", i32 9280, i32 4}
!1075 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug950, !1074, !"__UNIQUE_ID_ddebug950", i1 false, i1 false}
!1076 = !{ptr @.str.208, !1077, !"<string literal>", i1 false, i1 false}
!1077 = !{!"../net/core/dev.c", i32 9286, i32 3}
!1078 = !{ptr @netdev_fix_features.__UNIQUE_ID_ddebug951, !1077, !"__UNIQUE_ID_ddebug951", i1 false, i1 false}
!1079 = !{ptr @.str.209, !1080, !"<string literal>", i1 false, i1 false}
!1080 = !{!"../net/core/dev.c", i32 9160, i32 4}
!1081 = !{ptr @.str.210, !1080, !"<string literal>", i1 false, i1 false}
!1082 = !{ptr @netdev_sync_upper_features.__UNIQUE_ID_ddebug939, !1080, !"__UNIQUE_ID_ddebug939", i1 false, i1 false}
!1083 = !{ptr @.str.211, !1084, !"<string literal>", i1 false, i1 false}
!1084 = !{!"../net/core/dev.c", i32 9179, i32 4}
!1085 = !{ptr @.str.212, !1084, !"<string literal>", i1 false, i1 false}
!1086 = !{ptr @netdev_sync_lower_features.__UNIQUE_ID_ddebug940, !1084, !"__UNIQUE_ID_ddebug940", i1 false, i1 false}
!1087 = !{ptr @.str.213, !1088, !"<string literal>", i1 false, i1 false}
!1088 = !{!"../net/core/dev.c", i32 9185, i32 5}
!1089 = distinct !{null, !1090, !"__already_done", i1 false, i1 false}
!1090 = !{!"../include/net/udp_tunnel.h", i32 131, i32 2}
!1091 = !{ptr @.str.214, !1090, !"<string literal>", i1 false, i1 false}
!1092 = distinct !{null, !1093, !"__already_done", i1 false, i1 false}
!1093 = !{!"../include/net/udp_tunnel.h", i32 139, i32 2}
!1094 = distinct !{null, !1095, !"__already_done", i1 false, i1 false}
!1095 = !{!"../include/linux/if_vlan.h", i32 87, i32 2}
!1096 = distinct !{null, !1097, !"__already_done", i1 false, i1 false}
!1097 = !{!"../include/linux/if_vlan.h", i32 93, i32 2}
!1098 = distinct !{null, !1099, !"__already_done", i1 false, i1 false}
!1099 = !{!"../include/linux/if_vlan.h", i32 99, i32 2}
!1100 = distinct !{null, !1101, !"__already_done", i1 false, i1 false}
!1101 = !{!"../include/linux/if_vlan.h", i32 105, i32 2}
!1102 = !{ptr @netdev_lock_type, !1103, !"netdev_lock_type", i1 false, i1 false}
!1103 = !{!"../net/core/dev.c", i32 414, i32 29}
!1104 = !{ptr @.str.215, !1105, !"<string literal>", i1 false, i1 false}
!1105 = !{!"../net/core/dev.c", i32 432, i32 2}
!1106 = !{ptr @.str.216, !1107, !"<string literal>", i1 false, i1 false}
!1107 = !{!"../net/core/dev.c", i32 432, i32 18}
!1108 = !{ptr @.str.217, !1109, !"<string literal>", i1 false, i1 false}
!1109 = !{!"../net/core/dev.c", i32 432, i32 33}
!1110 = !{ptr @.str.218, !1111, !"<string literal>", i1 false, i1 false}
!1111 = !{!"../net/core/dev.c", i32 432, i32 49}
!1112 = !{ptr @.str.219, !1113, !"<string literal>", i1 false, i1 false}
!1113 = !{!"../net/core/dev.c", i32 433, i32 2}
!1114 = !{ptr @.str.220, !1115, !"<string literal>", i1 false, i1 false}
!1115 = !{!"../net/core/dev.c", i32 433, i32 18}
!1116 = !{ptr @.str.221, !1117, !"<string literal>", i1 false, i1 false}
!1117 = !{!"../net/core/dev.c", i32 433, i32 33}
!1118 = !{ptr @.str.222, !1119, !"<string literal>", i1 false, i1 false}
!1119 = !{!"../net/core/dev.c", i32 433, i32 50}
!1120 = !{ptr @.str.223, !1121, !"<string literal>", i1 false, i1 false}
!1121 = !{!"../net/core/dev.c", i32 434, i32 2}
!1122 = !{ptr @.str.224, !1123, !"<string literal>", i1 false, i1 false}
!1123 = !{!"../net/core/dev.c", i32 434, i32 20}
!1124 = !{ptr @.str.225, !1125, !"<string literal>", i1 false, i1 false}
!1125 = !{!"../net/core/dev.c", i32 434, i32 34}
!1126 = !{ptr @.str.226, !1127, !"<string literal>", i1 false, i1 false}
!1127 = !{!"../net/core/dev.c", i32 434, i32 47}
!1128 = !{ptr @.str.227, !1129, !"<string literal>", i1 false, i1 false}
!1129 = !{!"../net/core/dev.c", i32 435, i32 2}
!1130 = !{ptr @.str.228, !1131, !"<string literal>", i1 false, i1 false}
!1131 = !{!"../net/core/dev.c", i32 435, i32 20}
!1132 = !{ptr @.str.229, !1133, !"<string literal>", i1 false, i1 false}
!1133 = !{!"../net/core/dev.c", i32 435, i32 35}
!1134 = !{ptr @.str.230, !1135, !"<string literal>", i1 false, i1 false}
!1135 = !{!"../net/core/dev.c", i32 435, i32 55}
!1136 = !{ptr @.str.231, !1137, !"<string literal>", i1 false, i1 false}
!1137 = !{!"../net/core/dev.c", i32 436, i32 2}
!1138 = !{ptr @.str.232, !1139, !"<string literal>", i1 false, i1 false}
!1139 = !{!"../net/core/dev.c", i32 436, i32 17}
!1140 = !{ptr @.str.233, !1141, !"<string literal>", i1 false, i1 false}
!1141 = !{!"../net/core/dev.c", i32 436, i32 32}
!1142 = !{ptr @.str.234, !1143, !"<string literal>", i1 false, i1 false}
!1143 = !{!"../net/core/dev.c", i32 436, i32 48}
!1144 = !{ptr @.str.235, !1145, !"<string literal>", i1 false, i1 false}
!1145 = !{!"../net/core/dev.c", i32 437, i32 2}
!1146 = !{ptr @.str.236, !1147, !"<string literal>", i1 false, i1 false}
!1147 = !{!"../net/core/dev.c", i32 437, i32 17}
!1148 = !{ptr @.str.237, !1149, !"<string literal>", i1 false, i1 false}
!1149 = !{!"../net/core/dev.c", i32 437, i32 31}
!1150 = !{ptr @.str.238, !1151, !"<string literal>", i1 false, i1 false}
!1151 = !{!"../net/core/dev.c", i32 437, i32 44}
!1152 = !{ptr @.str.239, !1153, !"<string literal>", i1 false, i1 false}
!1153 = !{!"../net/core/dev.c", i32 438, i32 2}
!1154 = !{ptr @.str.240, !1155, !"<string literal>", i1 false, i1 false}
!1155 = !{!"../net/core/dev.c", i32 438, i32 15}
!1156 = !{ptr @.str.241, !1157, !"<string literal>", i1 false, i1 false}
!1157 = !{!"../net/core/dev.c", i32 438, i32 30}
!1158 = !{ptr @.str.242, !1159, !"<string literal>", i1 false, i1 false}
!1159 = !{!"../net/core/dev.c", i32 438, i32 44}
!1160 = !{ptr @.str.243, !1161, !"<string literal>", i1 false, i1 false}
!1161 = !{!"../net/core/dev.c", i32 439, i32 2}
!1162 = !{ptr @.str.244, !1163, !"<string literal>", i1 false, i1 false}
!1163 = !{!"../net/core/dev.c", i32 439, i32 19}
!1164 = !{ptr @.str.245, !1165, !"<string literal>", i1 false, i1 false}
!1165 = !{!"../net/core/dev.c", i32 439, i32 35}
!1166 = !{ptr @.str.246, !1167, !"<string literal>", i1 false, i1 false}
!1167 = !{!"../net/core/dev.c", i32 439, i32 52}
!1168 = !{ptr @.str.247, !1169, !"<string literal>", i1 false, i1 false}
!1169 = !{!"../net/core/dev.c", i32 440, i32 2}
!1170 = !{ptr @.str.248, !1171, !"<string literal>", i1 false, i1 false}
!1171 = !{!"../net/core/dev.c", i32 440, i32 16}
!1172 = !{ptr @.str.249, !1173, !"<string literal>", i1 false, i1 false}
!1173 = !{!"../net/core/dev.c", i32 440, i32 34}
!1174 = !{ptr @.str.250, !1175, !"<string literal>", i1 false, i1 false}
!1175 = !{!"../net/core/dev.c", i32 440, i32 52}
!1176 = !{ptr @.str.251, !1177, !"<string literal>", i1 false, i1 false}
!1177 = !{!"../net/core/dev.c", i32 441, i32 2}
!1178 = !{ptr @.str.252, !1179, !"<string literal>", i1 false, i1 false}
!1179 = !{!"../net/core/dev.c", i32 441, i32 15}
!1180 = !{ptr @.str.253, !1181, !"<string literal>", i1 false, i1 false}
!1181 = !{!"../net/core/dev.c", i32 441, i32 28}
!1182 = !{ptr @.str.254, !1183, !"<string literal>", i1 false, i1 false}
!1183 = !{!"../net/core/dev.c", i32 441, i32 43}
!1184 = !{ptr @.str.255, !1185, !"<string literal>", i1 false, i1 false}
!1185 = !{!"../net/core/dev.c", i32 442, i32 2}
!1186 = !{ptr @.str.256, !1187, !"<string literal>", i1 false, i1 false}
!1187 = !{!"../net/core/dev.c", i32 442, i32 18}
!1188 = !{ptr @.str.257, !1189, !"<string literal>", i1 false, i1 false}
!1189 = !{!"../net/core/dev.c", i32 442, i32 33}
!1190 = !{ptr @.str.258, !1191, !"<string literal>", i1 false, i1 false}
!1191 = !{!"../net/core/dev.c", i32 442, i32 46}
!1192 = !{ptr @.str.259, !1193, !"<string literal>", i1 false, i1 false}
!1193 = !{!"../net/core/dev.c", i32 443, i32 2}
!1194 = !{ptr @.str.260, !1195, !"<string literal>", i1 false, i1 false}
!1195 = !{!"../net/core/dev.c", i32 443, i32 16}
!1196 = !{ptr @.str.261, !1197, !"<string literal>", i1 false, i1 false}
!1197 = !{!"../net/core/dev.c", i32 443, i32 30}
!1198 = !{ptr @.str.262, !1199, !"<string literal>", i1 false, i1 false}
!1199 = !{!"../net/core/dev.c", i32 443, i32 44}
!1200 = !{ptr @.str.263, !1201, !"<string literal>", i1 false, i1 false}
!1201 = !{!"../net/core/dev.c", i32 444, i32 2}
!1202 = !{ptr @.str.264, !1203, !"<string literal>", i1 false, i1 false}
!1203 = !{!"../net/core/dev.c", i32 444, i32 20}
!1204 = !{ptr @.str.265, !1205, !"<string literal>", i1 false, i1 false}
!1205 = !{!"../net/core/dev.c", i32 444, i32 39}
!1206 = !{ptr @.str.266, !1207, !"<string literal>", i1 false, i1 false}
!1207 = !{!"../net/core/dev.c", i32 445, i32 2}
!1208 = !{ptr @.str.267, !1209, !"<string literal>", i1 false, i1 false}
!1209 = !{!"../net/core/dev.c", i32 445, i32 30}
!1210 = !{ptr @.str.268, !1211, !"<string literal>", i1 false, i1 false}
!1211 = !{!"../net/core/dev.c", i32 445, i32 46}
!1212 = !{ptr @.str.269, !1213, !"<string literal>", i1 false, i1 false}
!1213 = !{!"../net/core/dev.c", i32 446, i32 2}
!1214 = !{ptr @.str.270, !1215, !"<string literal>", i1 false, i1 false}
!1215 = !{!"../net/core/dev.c", i32 446, i32 22}
!1216 = !{ptr @.str.271, !1217, !"<string literal>", i1 false, i1 false}
!1217 = !{!"../net/core/dev.c", i32 446, i32 36}
!1218 = !{ptr @netdev_lock_name, !1219, !"netdev_lock_name", i1 false, i1 false}
!1219 = !{!"../net/core/dev.c", i32 431, i32 26}
!1220 = !{ptr @netdev_addr_lock_key, !1221, !"netdev_addr_lock_key", i1 false, i1 false}
!1221 = !{!"../net/core/dev.c", i32 449, i32 30}
!1222 = distinct !{null, !1223, !"__already_done", i1 false, i1 false}
!1223 = !{!"../net/core/dev.c", i32 366, i32 2}
!1224 = !{ptr @net_unlink_list, !1225, !"net_unlink_list", i1 false, i1 false}
!1225 = !{!"../include/linux/netdevice.h", i32 4502, i32 8}
!1226 = !{ptr @net_todo_list, !1227, !"net_todo_list", i1 false, i1 false}
!1227 = !{!"../net/core/dev.c", i32 9140, i32 8}
!1228 = !{ptr @.str.272, !1229, !"<string literal>", i1 false, i1 false}
!1229 = !{!"../net/core/dev.c", i32 9877, i32 4}
!1230 = !{ptr @.str.273, !1229, !"<string literal>", i1 false, i1 false}
!1231 = !{ptr @netdev_wait_allrefs._entry, !1229, !"_entry", i1 false, i1 false}
!1232 = !{ptr @netdev_wait_allrefs._entry_ptr, !1229, !"_entry_ptr", i1 false, i1 false}
!1233 = distinct !{null, !1234, !"__warned", i1 false, i1 false}
!1234 = !{!"../include/linux/rtnetlink.h", i32 85, i32 9}
!1235 = !{ptr @.str.274, !1234, !"<string literal>", i1 false, i1 false}
!1236 = !{ptr @netdev_init_one_queue.__key, !1237, !"__key", i1 false, i1 false}
!1237 = !{!"../net/core/dev.c", i32 9498, i32 2}
!1238 = !{ptr @.str.275, !1237, !"<string literal>", i1 false, i1 false}
!1239 = !{ptr @netdev_xmit_lock_key, !1240, !"netdev_xmit_lock_key", i1 false, i1 false}
!1240 = !{!"../net/core/dev.c", i32 448, i32 30}
!1241 = !{ptr @ref_tracker_dir_init.__key, !1242, !"__key", i1 false, i1 false}
!1242 = !{!"../include/linux/ref_tracker.h", i32 27, i32 2}
!1243 = !{ptr @.str.276, !1242, !"<string literal>", i1 false, i1 false}
!1244 = !{ptr @netif_alloc_netdev_queues.__key, !1245, !"__key", i1 false, i1 false}
!1245 = !{!"../net/core/dev.c", i32 9529, i32 2}
!1246 = !{ptr @.str.277, !1245, !"<string literal>", i1 false, i1 false}
!1247 = distinct !{null, !1248, !"__already_done", i1 false, i1 false}
!1248 = !{!"../net/core/dev.c", i32 383, i32 2}
!1249 = !{ptr @flush_all_backlogs.flush_cpus, !1250, !"flush_cpus", i1 false, i1 false}
!1250 = !{!"../net/core/dev.c", i32 5704, i32 19}
!1251 = distinct !{null, !1252, !"__already_done", i1 false, i1 false}
!1252 = !{!"../net/core/dev.c", i32 5711, i32 2}
!1253 = distinct !{null, !1254, !"__already_done", i1 false, i1 false}
!1254 = !{!"../net/core/dev.c", i32 8735, i32 2}
!1255 = distinct !{null, !1256, !"__already_done", i1 false, i1 false}
!1256 = !{!"../net/core/dev.c", i32 6692, i32 2}
!1257 = !{ptr @.str.278, !1258, !"<string literal>", i1 false, i1 false}
!1258 = !{!"../net/core/dev.c", i32 10784, i32 5}
!1259 = !{ptr @.str.279, !1260, !"<string literal>", i1 false, i1 false}
!1260 = !{!"../net/core/dev.c", i32 10790, i32 3}
!1261 = !{ptr @.str.280, !1260, !"<string literal>", i1 false, i1 false}
!1262 = !{ptr @__netdev_printk._entry, !1260, !"_entry", i1 false, i1 false}
!1263 = !{ptr @__netdev_printk._entry_ptr, !1260, !"_entry_ptr", i1 false, i1 false}
!1264 = !{ptr @.str.282, !1265, !"<string literal>", i1 false, i1 false}
!1265 = !{!"../net/core/dev.c", i32 10793, i32 3}
!1266 = !{ptr @__netdev_printk._entry.281, !1265, !"_entry", i1 false, i1 false}
!1267 = !{ptr @__netdev_printk._entry_ptr.283, !1265, !"_entry_ptr", i1 false, i1 false}
!1268 = !{ptr @net_dev_init.__key, !1269, !"__key", i1 false, i1 false}
!1269 = !{!"../net/core/dev.c", i32 10992, i32 3}
!1270 = !{ptr @.str.284, !1269, !"<string literal>", i1 false, i1 false}
!1271 = !{ptr @.str.285, !1272, !"<string literal>", i1 false, i1 false}
!1272 = !{!"../net/core/dev.c", i32 11031, i32 53}
!1273 = !{ptr @netdev_net_ops, !1274, !"netdev_net_ops", i1 false, i1 false}
!1274 = !{!"../net/core/dev.c", i32 10847, i32 48}
!1275 = distinct !{null, !1276, !"__already_done", i1 false, i1 false}
!1276 = !{!"../net/core/dev.c", i32 10844, i32 3}
!1277 = !{ptr @skb_queue_head_init.__key, !1278, !"__key", i1 false, i1 false}
!1278 = !{!"../include/linux/skbuff.h", i32 1984, i32 2}
!1279 = !{ptr @.str.286, !1278, !"<string literal>", i1 false, i1 false}
!1280 = !{ptr @default_device_ops, !1281, !"default_device_ops", i1 false, i1 false}
!1281 = !{!"../net/core/dev.c", i32 10949, i32 48}
!1282 = !{ptr @.str.287, !1283, !"<string literal>", i1 false, i1 false}
!1283 = !{!"../net/core/dev.c", i32 10873, i32 31}
!1284 = !{ptr @.str.288, !1285, !"<string literal>", i1 false, i1 false}
!1285 = !{!"../net/core/dev.c", i32 10875, i32 32}
!1286 = !{ptr @.str.289, !1287, !"<string literal>", i1 false, i1 false}
!1287 = !{!"../net/core/dev.c", i32 10878, i32 4}
!1288 = !{ptr @.str.290, !1287, !"<string literal>", i1 false, i1 false}
!1289 = !{ptr @default_device_exit._entry, !1287, !"_entry", i1 false, i1 false}
!1290 = !{ptr @default_device_exit._entry_ptr, !1287, !"_entry_ptr", i1 false, i1 false}
!1291 = distinct !{null, !1292, !"__already_done", i1 false, i1 false}
!1292 = !{!"../include/trace/events/skb.h", i32 64, i32 1}
!1293 = !{ptr @.str.291, !1292, !"<string literal>", i1 false, i1 false}
!1294 = distinct !{null, !1292, !"__warned", i1 false, i1 false}
!1295 = distinct !{null, !1296, !"__already_done", i1 false, i1 false}
!1296 = !{!"../include/trace/events/skb.h", i32 37, i32 1}
!1297 = distinct !{null, !1296, !"__warned", i1 false, i1 false}
!1298 = !{!"sp"}
!1299 = !{i32 1, !"wchar_size", i32 2}
!1300 = !{i32 1, !"min_enum_size", i32 4}
!1301 = !{i32 8, !"branch-target-enforcement", i32 0}
!1302 = !{i32 8, !"sign-return-address", i32 0}
!1303 = !{i32 8, !"sign-return-address-all", i32 0}
!1304 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1305 = !{i32 7, !"uwtable", i32 1}
!1306 = !{i32 7, !"frame-pointer", i32 2}
!1307 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1308 = !{i64 2149642204}
!1309 = !{i64 2149565985}
!1310 = !{!"branch_weights", i32 1, i32 2000}
!1311 = !{!"branch_weights", i32 2000, i32 1}
!1312 = !{i64 2149540593}
!1313 = !{i64 1117584, i64 1117645}
!1314 = !{i64 1120316}
!1315 = !{i64 1120601}
!1316 = !{i64 2149540859}
!1317 = !{i64 2161714253, i64 2161714733, i64 2161714290, i64 2161714346, i64 2161714380, i64 2161714404, i64 2161714445, i64 2161714466, i64 2161714494, i64 2161714528}
!1318 = !{i64 2161724178, i64 2161724658, i64 2161724215, i64 2161724271, i64 2161724305, i64 2161724329, i64 2161724370, i64 2161724391, i64 2161724419, i64 2161724453}
!1319 = !{i64 2161721261, i64 2161721741, i64 2161721298, i64 2161721354, i64 2161721388, i64 2161721412, i64 2161721453, i64 2161721474, i64 2161721502, i64 2161721536}
!1320 = !{!"auto-init"}
!1321 = !{i64 2161732270}
!1322 = !{i64 2161760528}
!1323 = !{i64 2148825149}
!1324 = !{i64 1208839, i64 1208863, i64 1208884, i64 1208901, i64 1208918}
!1325 = !{i64 2148825375}
!1326 = !{i64 2148723326, i64 2148723352, i64 2148723381, i64 2148723415, i64 2148723446, i64 2148723469}
!1327 = !{i64 2148725791, i64 2148725817, i64 2148725846, i64 2148725880, i64 2148725911, i64 2148725934}
!1328 = !{i64 2148536719, i64 2148536724, i64 2148536737, i64 2148536781, i64 2148536815, i64 2148536836}
!1329 = !{i64 2162208292}
!1330 = !{i64 2162208463}
!1331 = !{i64 2162208703}
!1332 = !{i64 2162208870}
!1333 = !{i8 0, i8 2}
!1334 = !{i64 2148724856, i64 2148724888, i64 2148724917, i64 2148724951, i64 2148724982, i64 2148725005}
!1335 = !{i64 2161971866}
!1336 = !{i64 2162031086}
!1337 = !{i64 2148812857}
!1338 = !{i64 2148727321, i64 2148727353, i64 2148727382, i64 2148727416, i64 2148727447, i64 2148727470}
!1339 = !{i64 2149848580}
!1340 = !{i64 2162059021, i64 2162059501, i64 2162059058, i64 2162059114, i64 2162059148, i64 2162059172, i64 2162059213, i64 2162059234, i64 2162059262, i64 2162059296}
!1341 = !{i64 2162060651, i64 2162061131, i64 2162060688, i64 2162060744, i64 2162060778, i64 2162060802, i64 2162060843, i64 2162060864, i64 2162060892, i64 2162060926}
!1342 = !{i64 7331951}
!1343 = !{!"branch_weights", i32 1, i32 4001}
!1344 = !{i64 2155118840, i64 2155119328, i64 2155118877, i64 2155118933, i64 2155118967, i64 2155118991, i64 2155119032, i64 2155119053, i64 2155119081, i64 2155119115}
!1345 = !{i64 2162210305}
!1346 = !{i64 2162216251}
!1347 = !{i64 2148722745}
!1348 = !{i64 1209345, i64 1209370, i64 1209392, i64 1209408, i64 1209420, i64 1209440, i64 1209464, i64 1209480, i64 1209492}
!1349 = !{i64 2148722933}
!1350 = !{i64 2157259178}
!1351 = !{i64 2157259497}
!1352 = !{i64 2150360376}
!1353 = !{i64 2150365310}
!1354 = !{i64 2150387028}
!1355 = !{i64 2150391922}
!1356 = !{i64 2150468449}
!1357 = !{i64 2150468774}
!1358 = !{i64 2157487629}
!1359 = !{i64 2157487844}
!1360 = !{i64 2149549152}
!1361 = !{i64 2149550188}
!1362 = !{i32 0, i32 2}
!1363 = !{i64 2160886093}
!1364 = !{i64 2160886290}
!1365 = !{i64 2160975102}
!1366 = !{i64 2160975297}
!1367 = !{i64 2160902192}
!1368 = !{i64 2160902395}
!1369 = !{i64 2160990821}
!1370 = !{i64 2160991022}
!1371 = !{i64 2162243473}
!1372 = !{i64 2162251371}
!1373 = !{i64 2160852349}
!1374 = !{i64 2160852564}
!1375 = !{i64 2160954950}
!1376 = !{i64 2160955163}
!1377 = !{i64 2160869352}
!1378 = !{i64 2160869577}
!1379 = !{i64 2161007120}
!1380 = !{i64 2161007343}
!1381 = !{i64 2162418704}
!1382 = !{i64 1232818, i64 1232839, i64 1232862, i64 1232881, i64 1232900}
!1383 = !{i64 2162419109}
!1384 = !{i64 2162443715}
!1385 = !{i64 2162444120}
!1386 = !{i64 2162474175}
!1387 = !{i64 2162478287}
!1388 = !{i64 2162478746}
!1389 = !{i64 2160403787}
!1390 = !{i64 2160404193}
!1391 = !{i64 2160404468}
!1392 = !{i64 2160404310}
!1393 = !{i64 2162488257}
!1394 = !{i64 2162488631}
!1395 = !{i64 2162488473}
!1396 = !{i64 2162488774}
!1397 = !{i64 2160661769}
!1398 = !{i64 2160661986}
!1399 = !{i64 2160406804}
!1400 = !{i64 2162495814}
!1401 = !{i64 2162507570}
!1402 = !{i64 2162507975}
!1403 = !{i64 2162512551, i64 2162513031, i64 2162512588, i64 2162512644, i64 2162512678, i64 2162512702, i64 2162512743, i64 2162512764, i64 2162512792, i64 2162512826}
!1404 = !{i64 2162518767}
!1405 = !{i64 2162519172}
!1406 = !{i64 2162927763, i64 2162928243, i64 2162927800, i64 2162927856, i64 2162927890, i64 2162927914, i64 2162927955, i64 2162927976, i64 2162928004, i64 2162928038}
!1407 = !{i64 2162934887, i64 2162935367, i64 2162934924, i64 2162934980, i64 2162935014, i64 2162935038, i64 2162935079, i64 2162935100, i64 2162935128, i64 2162935162}
!1408 = !{i64 2162936439, i64 2162936919, i64 2162936476, i64 2162936532, i64 2162936566, i64 2162936590, i64 2162936631, i64 2162936652, i64 2162936680, i64 2162936714}
!1409 = !{i64 2162958807, i64 2162959287, i64 2162958844, i64 2162958900, i64 2162958934, i64 2162958958, i64 2162958999, i64 2162959020, i64 2162959048, i64 2162959082}
!1410 = !{i64 2162960407, i64 2162960887, i64 2162960444, i64 2162960500, i64 2162960534, i64 2162960558, i64 2162960599, i64 2162960620, i64 2162960648, i64 2162960682}
!1411 = !{i64 2162962017, i64 2162962497, i64 2162962054, i64 2162962110, i64 2162962144, i64 2162962168, i64 2162962209, i64 2162962230, i64 2162962258, i64 2162962292}
!1412 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!1413 = !{i64 2163015231, i64 2163015712, i64 2163015268, i64 2163015324, i64 2163015358, i64 2163015382, i64 2163015423, i64 2163015444, i64 2163015472, i64 2163015506}
!1414 = !{i64 2155439871}
!1415 = !{i64 2155439713}
!1416 = !{i64 2155440041}
!1417 = !{i64 2150468124}
!1418 = !{i64 2162995129}
!1419 = !{i64 2162999883, i64 2163000364, i64 2162999920, i64 2162999976, i64 2163000010, i64 2163000034, i64 2163000075, i64 2163000096, i64 2163000124, i64 2163000158}
!1420 = !{i64 2163026947, i64 2163027428, i64 2163026984, i64 2163027040, i64 2163027074, i64 2163027098, i64 2163027139, i64 2163027160, i64 2163027188, i64 2163027222}
!1421 = !{i64 2163037905, i64 2163038386, i64 2163037942, i64 2163037998, i64 2163038032, i64 2163038056, i64 2163038097, i64 2163038118, i64 2163038146, i64 2163038180}
!1422 = !{i64 1118019}
!1423 = !{i64 1117829}
!1424 = !{i64 2163118821, i64 2163119302, i64 2163118858, i64 2163118914, i64 2163118948, i64 2163118972, i64 2163119013, i64 2163119034, i64 2163119062, i64 2163119096}
!1425 = !{i64 2148977032}
!1426 = !{i64 1230094, i64 1230111, i64 1230135, i64 1230161, i64 1230179}
!1427 = !{i64 2148977402}
!1428 = !{i64 2148808737}
!1429 = !{i64 2148724046, i64 2148724078, i64 2148724107, i64 2148724141, i64 2148724172, i64 2148724195}
!1430 = !{i64 2148808966}
!1431 = !{i64 2160712983}
!1432 = !{i64 2160713198}
!1433 = !{i64 2160730165}
!1434 = !{i64 2160730394}
!1435 = !{i64 2160763206}
!1436 = !{i64 2160763401}
!1437 = !{i64 2161146642}
!1438 = !{i64 2161146861}
!1439 = !{i64 2160799039}
!1440 = !{i64 2160799224}
!1441 = !{i64 2162357592, i64 2162358072, i64 2162357629, i64 2162357685, i64 2162357719, i64 2162357743, i64 2162357784, i64 2162357805, i64 2162357833, i64 2162357867}
!1442 = !{i64 2160783216}
!1443 = !{i64 2160783419}
!1444 = !{i64 2162535009}
!1445 = !{i64 2162544646}
!1446 = distinct !{null, ptr @__netdev_update_lower_level}
!1447 = !{i64 2162862831}
!1448 = !{i64 2162863181}
!1449 = !{i64 2162381478}
!1450 = !{i64 2162222064}
!1451 = !{i64 2163102360, i64 2163102841, i64 2163102397, i64 2163102453, i64 2163102487, i64 2163102511, i64 2163102552, i64 2163102573, i64 2163102601, i64 2163102635}
!1452 = !{i64 2161069451}
!1453 = !{i64 2161069642}
!1454 = !{i64 2161049648}
!1455 = !{i64 2161049871}
