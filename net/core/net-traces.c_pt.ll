; ModuleID = '/llk/IR_all_yes/net/core/net-traces.c_pt.bc'
source_filename = "../net/core/net-traces.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_br_fdb_add\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_br_fdb_add\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_br_fdb_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_br_fdb_add:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_br_fdb_add\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_br_fdb_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_br_fdb_add\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_br_fdb_add\09\09\09\09"
module asm "\09.long\09__crc___traceiter_br_fdb_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_br_fdb_add:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_br_fdb_add\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_br_fdb_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_br_fdb_add\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_br_fdb_add\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_br_fdb_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_br_fdb_add:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_br_fdb_add\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_br_fdb_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_br_fdb_external_learn_add\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_br_fdb_external_learn_add\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_br_fdb_external_learn_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_br_fdb_external_learn_add:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_br_fdb_external_learn_add\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_br_fdb_external_learn_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_br_fdb_external_learn_add\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_br_fdb_external_learn_add\09\09\09\09"
module asm "\09.long\09__crc___traceiter_br_fdb_external_learn_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_br_fdb_external_learn_add:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_br_fdb_external_learn_add\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_br_fdb_external_learn_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_br_fdb_external_learn_add\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_br_fdb_external_learn_add\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_br_fdb_external_learn_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_br_fdb_external_learn_add:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_br_fdb_external_learn_add\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_br_fdb_external_learn_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_fdb_delete\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_fdb_delete\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_fdb_delete\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_fdb_delete:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_fdb_delete\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_fdb_delete:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_fdb_delete\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_fdb_delete\09\09\09\09"
module asm "\09.long\09__crc___traceiter_fdb_delete\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_fdb_delete:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_fdb_delete\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_fdb_delete:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_fdb_delete\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_fdb_delete\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_fdb_delete\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_fdb_delete:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_fdb_delete\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_fdb_delete:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_br_fdb_update\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_br_fdb_update\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_br_fdb_update\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_br_fdb_update:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_br_fdb_update\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_br_fdb_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_br_fdb_update\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_br_fdb_update\09\09\09\09"
module asm "\09.long\09__crc___traceiter_br_fdb_update\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_br_fdb_update:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_br_fdb_update\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_br_fdb_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_br_fdb_update\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_br_fdb_update\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_br_fdb_update\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_br_fdb_update:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_br_fdb_update\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_br_fdb_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_neigh_update\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_neigh_update\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_neigh_update\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_neigh_update:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_neigh_update\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_neigh_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_neigh_update\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_neigh_update\09\09\09\09"
module asm "\09.long\09__crc___traceiter_neigh_update\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_neigh_update:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_neigh_update\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_neigh_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_neigh_update\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_neigh_update\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_neigh_update\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_neigh_update:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_neigh_update\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_neigh_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_neigh_update_done\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_neigh_update_done\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_neigh_update_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_neigh_update_done:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_neigh_update_done\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_neigh_update_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_neigh_update_done\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_neigh_update_done\09\09\09\09"
module asm "\09.long\09__crc___traceiter_neigh_update_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_neigh_update_done:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_neigh_update_done\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_neigh_update_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_neigh_update_done\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_neigh_update_done\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_neigh_update_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_neigh_update_done:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_neigh_update_done\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_neigh_update_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_neigh_timer_handler\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_neigh_timer_handler\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_neigh_timer_handler\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_neigh_timer_handler:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_neigh_timer_handler\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_neigh_timer_handler:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_neigh_timer_handler\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_neigh_timer_handler\09\09\09\09"
module asm "\09.long\09__crc___traceiter_neigh_timer_handler\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_neigh_timer_handler:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_neigh_timer_handler\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_neigh_timer_handler:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_neigh_timer_handler\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_neigh_timer_handler\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_neigh_timer_handler\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_neigh_timer_handler:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_neigh_timer_handler\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_neigh_timer_handler:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_neigh_event_send_done\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_neigh_event_send_done\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_neigh_event_send_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_neigh_event_send_done:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_neigh_event_send_done\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_neigh_event_send_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_neigh_event_send_done\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_neigh_event_send_done\09\09\09\09"
module asm "\09.long\09__crc___traceiter_neigh_event_send_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_neigh_event_send_done:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_neigh_event_send_done\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_neigh_event_send_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_neigh_event_send_done\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_neigh_event_send_done\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_neigh_event_send_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_neigh_event_send_done:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_neigh_event_send_done\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_neigh_event_send_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_neigh_event_send_dead\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_neigh_event_send_dead\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_neigh_event_send_dead\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_neigh_event_send_dead:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_neigh_event_send_dead\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_neigh_event_send_dead:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_neigh_event_send_dead\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_neigh_event_send_dead\09\09\09\09"
module asm "\09.long\09__crc___traceiter_neigh_event_send_dead\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_neigh_event_send_dead:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_neigh_event_send_dead\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_neigh_event_send_dead:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_neigh_event_send_dead\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_neigh_event_send_dead\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_neigh_event_send_dead\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_neigh_event_send_dead:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_neigh_event_send_dead\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_neigh_event_send_dead:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_neigh_cleanup_and_release\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_neigh_cleanup_and_release\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_neigh_cleanup_and_release\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_neigh_cleanup_and_release:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_neigh_cleanup_and_release\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_neigh_cleanup_and_release:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_neigh_cleanup_and_release\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_neigh_cleanup_and_release\09\09\09\09"
module asm "\09.long\09__crc___traceiter_neigh_cleanup_and_release\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_neigh_cleanup_and_release:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_neigh_cleanup_and_release\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_neigh_cleanup_and_release:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_neigh_cleanup_and_release\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_neigh_cleanup_and_release\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_neigh_cleanup_and_release\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_neigh_cleanup_and_release:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_neigh_cleanup_and_release\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_neigh_cleanup_and_release:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_kfree_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_kfree_skb\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_kfree_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_kfree_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_kfree_skb\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_kfree_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_kfree_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_kfree_skb\09\09\09\09"
module asm "\09.long\09__crc___traceiter_kfree_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_kfree_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_kfree_skb\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_kfree_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_kfree_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_kfree_skb\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_kfree_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_kfree_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_kfree_skb\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_kfree_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_napi_poll\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_napi_poll\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_napi_poll\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_napi_poll:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_napi_poll\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_napi_poll:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_napi_poll\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_napi_poll\09\09\09\09"
module asm "\09.long\09__crc___traceiter_napi_poll\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_napi_poll:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_napi_poll\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_napi_poll:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_napi_poll\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_napi_poll\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_napi_poll\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_napi_poll:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_napi_poll\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_napi_poll:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_tcp_send_reset\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_tcp_send_reset\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_tcp_send_reset\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_tcp_send_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_tcp_send_reset\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_tcp_send_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_tcp_send_reset\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_tcp_send_reset\09\09\09\09"
module asm "\09.long\09__crc___traceiter_tcp_send_reset\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_tcp_send_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_tcp_send_reset\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_tcp_send_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_tcp_send_reset\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_tcp_send_reset\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_tcp_send_reset\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_tcp_send_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_tcp_send_reset\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_tcp_send_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__tracepoint_tcp_bad_csum\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_tcp_bad_csum\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_tcp_bad_csum\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_tcp_bad_csum:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_tcp_bad_csum\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_tcp_bad_csum:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__traceiter_tcp_bad_csum\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_tcp_bad_csum\09\09\09\09"
module asm "\09.long\09__crc___traceiter_tcp_bad_csum\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_tcp_bad_csum:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_tcp_bad_csum\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_tcp_bad_csum:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__SCK__tp_func_tcp_bad_csum\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_tcp_bad_csum\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_tcp_bad_csum\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_tcp_bad_csum:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_tcp_bad_csum\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_tcp_bad_csum:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.138 }
%union.anon.138 = type { %struct.anon.139 }
%struct.anon.139 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.140, %struct.trace_event, ptr, ptr, %union.anon.141, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.140 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.141 = type { ptr }
%union.anon.142 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.143 = type { %struct.bpf_raw_event_map }
%union.anon.144 = type { %struct.bpf_raw_event_map }
%union.anon.145 = type { %struct.bpf_raw_event_map }
%union.anon.146 = type { %struct.bpf_raw_event_map }
%union.anon.147 = type { %struct.bpf_raw_event_map }
%union.anon.148 = type { %struct.bpf_raw_event_map }
%union.anon.149 = type { %struct.bpf_raw_event_map }
%union.anon.150 = type { %struct.bpf_raw_event_map }
%union.anon.151 = type { %struct.bpf_raw_event_map }
%union.anon.152 = type { %struct.bpf_raw_event_map }
%union.anon.153 = type { %struct.bpf_raw_event_map }
%union.anon.154 = type { %struct.bpf_raw_event_map }
%union.anon.155 = type { %struct.bpf_raw_event_map }
%union.anon.156 = type { %struct.bpf_raw_event_map }
%union.anon.157 = type { %struct.bpf_raw_event_map }
%union.anon.158 = type { %struct.bpf_raw_event_map }
%union.anon.159 = type { %struct.bpf_raw_event_map }
%union.anon.160 = type { %struct.bpf_raw_event_map }
%union.anon.161 = type { %struct.bpf_raw_event_map }
%union.anon.162 = type { %struct.bpf_raw_event_map }
%union.anon.163 = type { %struct.bpf_raw_event_map }
%union.anon.191 = type { %struct.bpf_raw_event_map }
%union.anon.192 = type { %struct.bpf_raw_event_map }
%union.anon.193 = type { %struct.bpf_raw_event_map }
%union.anon.194 = type { %struct.bpf_raw_event_map }
%union.anon.195 = type { %struct.bpf_raw_event_map }
%union.anon.240 = type { %struct.bpf_raw_event_map }
%union.anon.241 = type { %struct.bpf_raw_event_map }
%union.anon.242 = type { %struct.bpf_raw_event_map }
%union.anon.243 = type { %struct.bpf_raw_event_map }
%union.anon.244 = type { %struct.bpf_raw_event_map }
%union.anon.245 = type { %struct.bpf_raw_event_map }
%union.anon.246 = type { %struct.bpf_raw_event_map }
%union.anon.247 = type { %struct.bpf_raw_event_map }
%union.anon.250 = type { %struct.bpf_raw_event_map }
%union.anon.251 = type { %struct.bpf_raw_event_map }
%union.anon.252 = type { %struct.bpf_raw_event_map }
%union.anon.253 = type { %struct.bpf_raw_event_map }
%union.anon.254 = type { %struct.bpf_raw_event_map }
%union.anon.255 = type { %struct.bpf_raw_event_map }
%union.anon.263 = type { %struct.bpf_raw_event_map }
%union.anon.264 = type { %struct.bpf_raw_event_map }
%union.anon.265 = type { %struct.bpf_raw_event_map }
%union.anon.266 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%union.anon.267 = type { %struct.bpf_raw_event_map }
%union.anon.268 = type { %struct.bpf_raw_event_map }
%union.anon.269 = type { %struct.bpf_raw_event_map }
%union.anon.270 = type { %struct.bpf_raw_event_map }
%union.anon.271 = type { %struct.bpf_raw_event_map }
%union.anon.272 = type { %struct.bpf_raw_event_map }
%union.anon.273 = type { %struct.bpf_raw_event_map }
%union.anon.274 = type { %struct.bpf_raw_event_map }
%union.anon.275 = type { %struct.bpf_raw_event_map }
%union.anon.276 = type { %struct.bpf_raw_event_map }
%union.anon.277 = type { %struct.bpf_raw_event_map }
%struct.trace_print_flags = type { i32, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_kfree_skb = type { %struct.trace_entry, ptr, ptr, i16, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.sk_buff = type { %union.anon.0, %union.anon.97, %union.anon.98, [48 x i8], %union.anon.99, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.101, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { ptr, ptr, %union.anon.1 }
%union.anon.1 = type { ptr }
%union.anon.97 = type { ptr }
%union.anon.98 = type { i64 }
%union.anon.99 = type { %struct.anon.100 }
%struct.anon.100 = type { i32, ptr }
%union.anon.101 = type { %struct.anon.102 }
%struct.anon.102 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.103, i32, i32, i32, i16, i16, %union.anon.105, i32, %union.anon.106, %union.anon.107, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.103 = type { i32 }
%union.anon.105 = type { i32 }
%union.anon.106 = type { i32 }
%union.anon.107 = type { i16 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_consume_skb = type { %struct.trace_entry, ptr, [0 x i8] }
%struct.trace_event_raw_skb_copy_datagram_iovec = type { %struct.trace_entry, ptr, i32, [0 x i8] }
%struct.trace_event_raw_net_dev_start_xmit = type { %struct.trace_entry, i32, i16, ptr, i8, i16, i16, i16, i8, i32, i32, i32, i8, i32, i8, i16, i16, i16, [0 x i8] }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.trace_event_raw_net_dev_xmit = type { %struct.trace_entry, ptr, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_net_dev_xmit_timeout = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_net_dev_template = type { %struct.trace_entry, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_net_dev_rx_verbose_template = type { %struct.trace_entry, i32, i32, i16, ptr, i8, i16, i16, i16, i8, i32, i8, i32, i32, i32, i8, i32, i8, i16, i16, [0 x i8] }
%struct.trace_event_raw_net_dev_rx_exit_template = type { %struct.trace_entry, i32, [0 x i8] }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.trace_event_raw_napi_poll = type { %struct.trace_entry, ptr, i32, i32, i32, [0 x i8] }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.185, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.186, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.187, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, ptr }
%struct.sock_common = type { %union.anon.175, %union.anon.177, %union.anon.178, i16, i8, i8, i32, %union.anon.180, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.181, [0 x i32], %union.anon.182, i16, i16, %union.anon.183, %struct.refcount_struct, [0 x i32], %union.anon.184 }
%union.anon.175 = type { i64 }
%union.anon.177 = type { i32 }
%union.anon.178 = type { i32 }
%union.anon.180 = type { %struct.hlist_node }
%struct.possible_net_t = type { ptr }
%struct.in6_addr = type { %union.anon.12 }
%union.anon.12 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.181 = type { i32 }
%union.anon.182 = type { %struct.hlist_node }
%union.anon.183 = type { i32 }
%union.anon.184 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head, %struct.lockdep_map }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.anon.185 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.186 = type { ptr }
%union.anon.187 = type { ptr }
%struct.sk_buff_head = type { %union.anon.8, i32, %struct.spinlock }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { ptr, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.page_frag = type { ptr, i16, i16 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.kuid_t = type { i32 }
%struct.spinlock = type { %union.anon.10 }
%union.anon.10 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.6 }
%union.anon.6 = type { i32 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.sock_cgroup_data = type { ptr, i32, i16 }
%struct.callback_head = type { ptr, ptr }
%struct.trace_event_raw_sock_rcvqueue_full = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_sock_exceed_buf_limit = type { %struct.trace_entry, [32 x i8], ptr, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.proto = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i8, ptr, i32, i32, i32, i32, ptr, ptr, ptr, %union.anon.190, ptr, [32 x i8], %struct.list_head, ptr }
%union.anon.190 = type { ptr }
%struct.trace_event_raw_inet_sock_set_state = type { %struct.trace_entry, ptr, i32, i32, i16, i16, i16, i16, [4 x i8], [4 x i8], [16 x i8], [16 x i8], [0 x i8] }
%struct.inet_sock = type { %struct.sock, ptr, i32, i16, i16, ptr, i16, i16, i8, i8, i8, i8, i16, i8, i8, i32, i32, i32, ptr, %struct.inet_cork_full }
%struct.inet_cork_full = type { %struct.inet_cork, %struct.flowi }
%struct.inet_cork = type { i32, i32, ptr, i32, i32, ptr, i8, i8, i16, i8, i16, i64, i32 }
%struct.flowi = type { %union.anon.170 }
%union.anon.170 = type { %struct.flowi6 }
%struct.flowi6 = type { %struct.flowi_common, %struct.in6_addr, %struct.in6_addr, i32, %union.flowi_uli, i32 }
%struct.flowi_common = type { i32, i32, i32, i8, i8, i8, i8, i32, %struct.kuid_t, %struct.flowi_tunnel, i32 }
%struct.flowi_tunnel = type { i64 }
%union.flowi_uli = type { i32 }
%struct.trace_event_raw_inet_sk_error_report = type { %struct.trace_entry, i32, i16, i16, i16, i16, [4 x i8], [4 x i8], [16 x i8], [16 x i8], [0 x i8] }
%struct.trace_event_raw_udp_fail_queue_rcv_skb = type { %struct.trace_entry, i32, i16, [0 x i8] }
%struct.anon.179 = type { i16, i16 }
%struct.trace_event_raw_tcp_event_sk_skb = type { %struct.trace_entry, ptr, ptr, i32, i16, i16, i16, [4 x i8], [4 x i8], [16 x i8], [16 x i8], [0 x i8] }
%struct.trace_event_raw_tcp_event_sk = type { %struct.trace_entry, ptr, i16, i16, i16, [4 x i8], [4 x i8], [16 x i8], [16 x i8], i64, [0 x i8] }
%struct.trace_event_raw_tcp_retransmit_synack = type { %struct.trace_entry, ptr, ptr, i16, i16, i16, [4 x i8], [4 x i8], [16 x i8], [16 x i8], [0 x i8] }
%struct.anon.176 = type { i32, i32 }
%struct.trace_event_raw_tcp_probe = type { %struct.trace_entry, [28 x i8], [28 x i8], i16, i16, i16, i32, i16, i32, i32, i32, i32, i32, i32, i32, i64, [0 x i8] }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.tcp_sock = type { %struct.inet_connection_sock, i16, i16, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, %struct.tcp_rack, i16, i8, i8, i32, [3 x i32], i16, i8, i8, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, %struct.minmax, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.tcp_options_received, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrtimer, %struct.hrtimer, ptr, ptr, %struct.rb_root, ptr, [1 x %struct.tcp_sack_block], [4 x %struct.tcp_sack_block], [4 x %struct.tcp_sack_block], ptr, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8, i16, i32, i32, %struct.anon.285, %struct.anon.286, %struct.anon.287, i32, i8, i8, ptr, ptr, ptr, ptr, ptr }
%struct.inet_connection_sock = type { %struct.inet_sock, %struct.request_sock_queue, ptr, i32, %struct.timer_list, %struct.timer_list, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.hlist_node, ptr, i8, i8, i8, i8, i8, i8, i16, %struct.anon.283, %struct.anon.284, i32, i32, [13 x i64] }
%struct.request_sock_queue = type { %struct.spinlock, i8, i32, %struct.atomic_t, %struct.atomic_t, ptr, ptr, %struct.fastopen_queue }
%struct.fastopen_queue = type { ptr, ptr, %struct.spinlock, i32, i32, ptr }
%struct.anon.283 = type { i8, i8, i8, i8, i32, i32, i32, i16, i16 }
%struct.anon.284 = type { i32, i32, i32, i32 }
%struct.tcp_rack = type { i64, i32, i32, i32, i8, i8 }
%struct.minmax = type { [3 x %struct.minmax_sample] }
%struct.minmax_sample = type { i32, i32 }
%struct.tcp_options_received = type { i32, i32, i32, i32, [3 x i8], i8, i16, i16 }
%struct.rb_root = type { ptr }
%struct.tcp_sack_block = type { i32, i32 }
%struct.anon.285 = type { i32, i32, i64 }
%struct.anon.286 = type { i32, i32, i64 }
%struct.anon.287 = type { i32, i32 }
%struct.trace_event_raw_tcp_event_skb = type { %struct.trace_entry, ptr, [28 x i8], [28 x i8], [0 x i8] }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.trace_event_raw_fib_table_lookup = type { %struct.trace_entry, i32, i32, i32, i32, i8, i8, i8, i8, [4 x i8], [4 x i8], [4 x i8], [16 x i8], i16, i16, i32, [0 x i8] }
%struct.flowi4 = type { %struct.flowi_common, i32, i32, %union.flowi_uli }
%struct.anon.171 = type { i16, i16 }
%struct.fib_nh_common = type { ptr, ptr, i32, i8, i8, i8, i8, ptr, %union.anon.248, i32, %struct.atomic_t, ptr, ptr, ptr }
%union.anon.248 = type { %struct.in6_addr }
%struct.trace_event_raw_qdisc_dequeue = type { %struct.trace_entry, ptr, ptr, i32, ptr, i32, i32, i32, i32, [0 x i8] }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.2, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.96, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.2 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.hlist_head = type { ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%union.anon.96 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.Qdisc = type { ptr, ptr, i32, i32, ptr, ptr, %struct.hlist_node, i32, i32, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, [64 x i8], %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_sync, %struct.gnet_stats_queue, i32, i32, ptr, %struct.sk_buff_head, [8 x i8], %struct.spinlock, %struct.spinlock, %struct.callback_head, ptr, [28 x i8], [0 x i32] }
%struct.qdisc_skb_head = type { ptr, ptr, i32, %struct.spinlock }
%struct.gnet_stats_basic_sync = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.netdev_queue = type { ptr, ptr, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, ptr, [88 x i8], %struct.spinlock, i32, i32, i32, [72 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [116 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [88 x i8] }
%struct.trace_event_raw_qdisc_enqueue = type { %struct.trace_entry, ptr, ptr, ptr, i32, i32, i32, [0 x i8] }
%struct.Qdisc_ops = type { ptr, ptr, [16 x i8], i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.trace_event_raw_qdisc_reset = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_qdisc_destroy = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_qdisc_create = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_br_fdb_add = type { %struct.trace_entry, i8, i32, [6 x i8], i16, i16, [0 x i8] }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.net_bridge = type { %struct.spinlock, %struct.spinlock, %struct.hlist_head, ptr, i32, i16, i16, ptr, %struct.rhashtable, %struct.list_head, %union.anon.257, i16, i16, %struct.bridge_id, %struct.bridge_id, i8, i8, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i8], i32, %struct.net_bridge_mcast, ptr, i32, %struct.spinlock, %struct.rhashtable, %struct.rhashtable, %struct.hlist_head, %struct.hlist_head, %struct.work_struct, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.delayed_work, ptr, i32, i32, i32, %struct.hlist_head, %struct.hlist_head, %struct.hlist_head }
%union.anon.257 = type { %struct.rt6_info }
%struct.rt6_info = type { %struct.dst_entry, ptr, i32, %struct.rt6key, %struct.rt6key, %struct.in6_addr, ptr, i32, %struct.list_head, ptr, i16 }
%struct.dst_entry = type { ptr, ptr, i32, i32, ptr, ptr, ptr, i16, i16, i16, i16, i32, i32, ptr, %struct.callback_head, i16, i16, i32, %struct.atomic_t, ptr }
%struct.rt6key = type { %struct.in6_addr, i32 }
%struct.bridge_id = type { [2 x i8], [6 x i8] }
%struct.net_bridge_mcast = type { ptr, ptr, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %struct.hlist_head, %struct.timer_list, %struct.bridge_mcast_other_query, %struct.bridge_mcast_own_query, %struct.bridge_mcast_querier, %struct.hlist_head, %struct.timer_list, %struct.bridge_mcast_other_query, %struct.bridge_mcast_own_query, %struct.bridge_mcast_querier }
%struct.bridge_mcast_other_query = type { %struct.timer_list, i32 }
%struct.bridge_mcast_own_query = type { %struct.timer_list, i32 }
%struct.bridge_mcast_querier = type { %struct.br_ip, i32, %struct.seqcount_spinlock }
%struct.br_ip = type { %union.anon.258, %union.anon.259, i16, i16 }
%union.anon.258 = type { %struct.in6_addr }
%union.anon.259 = type { %struct.in6_addr }
%struct.rhashtable = type { ptr, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, ptr, ptr, ptr }
%struct.net_bridge_port = type { ptr, ptr, ptr, %struct.list_head, i32, ptr, ptr, i8, i8, i16, i8, i8, i16, i16, %struct.bridge_id, %struct.bridge_id, i32, i32, i32, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.kobject, %struct.callback_head, %struct.net_bridge_mcast_port, ptr, i32, i32, %struct.hlist_head, [16 x i8], ptr, i32, i32, %struct.netdev_phys_item_id, i16, i16, %struct.bridge_stp_xstats }
%struct.net_bridge_mcast_port = type { ptr, ptr, %struct.bridge_mcast_own_query, %struct.timer_list, %struct.hlist_node, %struct.bridge_mcast_own_query, %struct.timer_list, %struct.hlist_node, i8 }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.bridge_stp_xstats = type { i64, i64, i64, i64, i64, i64 }
%struct.trace_event_raw_br_fdb_external_learn_add = type { %struct.trace_entry, i32, i32, [6 x i8], i16, [0 x i8] }
%struct.net_bridge_fdb_entry = type { %struct.rhash_head, ptr, %struct.net_bridge_fdb_key, %struct.hlist_node, i32, [100 x i8], i32, i32, %struct.callback_head, [112 x i8] }
%struct.rhash_head = type { ptr }
%struct.net_bridge_fdb_key = type { %struct.mac_addr, i16 }
%struct.mac_addr = type { [6 x i8] }
%struct.trace_event_raw_fdb_delete = type { %struct.trace_entry, i32, i32, [6 x i8], i16, [0 x i8] }
%struct.trace_event_raw_br_fdb_update = type { %struct.trace_entry, i32, i32, [6 x i8], i16, i32, [0 x i8] }
%struct.trace_event_raw_page_pool_release = type { %struct.trace_entry, ptr, i32, i32, i32, i64, [0 x i8] }
%struct.page_pool = type { %struct.page_pool_params, %struct.delayed_work, ptr, i32, i32, i32, i32, ptr, i32, i32, [84 x i8], %struct.pp_alloc_cache, [124 x i8], %struct.ptr_ring, %struct.atomic_t, %struct.refcount_struct, i64, [112 x i8] }
%struct.page_pool_params = type { i32, i32, i32, i32, ptr, i32, i32, i32, ptr, ptr }
%struct.pp_alloc_cache = type { i32, [128 x ptr] }
%struct.ptr_ring = type { i32, %struct.spinlock, [80 x i8], i32, i32, %struct.spinlock, [76 x i8], i32, i32, ptr, [116 x i8] }
%struct.trace_event_raw_page_pool_state_release = type { %struct.trace_entry, ptr, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_page_pool_state_hold = type { %struct.trace_entry, ptr, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_page_pool_update_nid = type { %struct.trace_entry, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_neigh_create = type { %struct.trace_entry, i32, i32, i32, i8, i8, [4 x i8], [16 x i8], [0 x i8] }
%struct.neigh_table = type { i32, i32, i32, i16, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i32, %struct.delayed_work, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.rwlock_t, i32, ptr, ptr, ptr }
%struct.neigh_parms = type { %struct.possible_net_t, ptr, ptr, %struct.list_head, ptr, ptr, ptr, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i32] }
%struct.neighbour = type { ptr, ptr, ptr, i32, i32, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i32, %struct.atomic_t, i8, i8, i8, i8, i32, %struct.seqlock_t, [32 x i8], %struct.hh_cache, ptr, ptr, %struct.list_head, %struct.list_head, %struct.callback_head, ptr, ptr, [0 x i8], [4 x i8] }
%struct.hh_cache = type { i32, %struct.seqlock_t, [32 x i32] }
%struct.trace_event_raw_neigh_update = type { %struct.trace_entry, i32, i32, [32 x i8], i8, i8, i8, i8, i8, i32, [4 x i8], [16 x i8], i32, i32, i32, [32 x i8], i8, i32, i32, [0 x i8] }
%struct.trace_event_raw_neigh__update = type { %struct.trace_entry, i32, i32, [32 x i8], i8, i8, i8, i8, i8, i32, [4 x i8], [16 x i8], i32, i32, i32, i32, [0 x i8] }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_kfree_skb = internal constant [10 x i8] c"kfree_skb\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_kfree_skb = dso_local global %struct.static_call_key { ptr @__traceiter_kfree_skb }, align 4
@__tracepoint_kfree_skb = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_kfree_skb, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_kfree_skb, ptr null, ptr @__traceiter_kfree_skb, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_kfree_skb = internal constant ptr @__tracepoint_kfree_skb, section "__tracepoints_ptrs", align 4
@__tpstrtab_consume_skb = internal constant [12 x i8] c"consume_skb\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_consume_skb = dso_local global %struct.static_call_key { ptr @__traceiter_consume_skb }, align 4
@__tracepoint_consume_skb = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_consume_skb, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_consume_skb, ptr null, ptr @__traceiter_consume_skb, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_consume_skb = internal constant ptr @__tracepoint_consume_skb, section "__tracepoints_ptrs", align 4
@__tpstrtab_skb_copy_datagram_iovec = internal constant [24 x i8] c"skb_copy_datagram_iovec\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_skb_copy_datagram_iovec = dso_local global %struct.static_call_key { ptr @__traceiter_skb_copy_datagram_iovec }, align 4
@__tracepoint_skb_copy_datagram_iovec = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_skb_copy_datagram_iovec, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_skb_copy_datagram_iovec, ptr null, ptr @__traceiter_skb_copy_datagram_iovec, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_skb_copy_datagram_iovec = internal constant ptr @__tracepoint_skb_copy_datagram_iovec, section "__tracepoints_ptrs", align 4
@str__skb__trace_system_name = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"skb\00", [28 x i8] zeroinitializer }, align 32
@.str = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"SKB_DROP_REASON_NOT_SPECIFIED\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED = internal global %struct.trace_eval_map { ptr @str__skb__trace_system_name, ptr @.str, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED = internal global ptr @__TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"SKB_DROP_REASON_NO_SOCKET\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET = internal global %struct.trace_eval_map { ptr @str__skb__trace_system_name, ptr @.str.1, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET = internal global ptr @__TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"SKB_DROP_REASON_PKT_TOO_SMALL\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL = internal global %struct.trace_eval_map { ptr @str__skb__trace_system_name, ptr @.str.2, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL = internal global ptr @__TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SKB_DROP_REASON_TCP_CSUM\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM = internal global %struct.trace_eval_map { ptr @str__skb__trace_system_name, ptr @.str.3, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM = internal global ptr @__TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"SKB_DROP_REASON_SOCKET_FILTER\00", [34 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER = internal global %struct.trace_eval_map { ptr @str__skb__trace_system_name, ptr @.str.4, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER = internal global ptr @__TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SKB_DROP_REASON_UDP_CSUM\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM = internal global %struct.trace_eval_map { ptr @str__skb__trace_system_name, ptr @.str.5, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM = internal global ptr @__TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"SKB_DROP_REASON_MAX\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_SKB_DROP_REASON_MAX = internal global %struct.trace_eval_map { ptr @str__skb__trace_system_name, ptr @.str.6, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_SKB_DROP_REASON_MAX = internal global ptr @__TRACE_SYSTEM_SKB_DROP_REASON_MAX, section "_ftrace_eval_map", align 4
@trace_event_fields_kfree_skb = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.48, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.48, %union.anon.138 { %struct.anon.139 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.138 { %struct.anon.139 { ptr @.str.52, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.53, %union.anon.138 { %struct.anon.139 { ptr @.str.54, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_kfree_skb = internal global %struct.trace_event_class { ptr @str__skb__trace_system_name, ptr @trace_event_raw_event_kfree_skb, ptr @perf_trace_kfree_skb, ptr @trace_event_reg, ptr @trace_event_fields_kfree_skb, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_kfree_skb, i64 24), ptr getelementptr (i8, ptr @event_class_kfree_skb, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_kfree_skb = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_kfree_skb, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_kfree_skb = internal global { [439 x i8], [105 x i8] } { [439 x i8] c"\22skbaddr=%p protocol=%u location=%p reason: %s\22, REC->skbaddr, REC->protocol, REC->location, __print_symbolic(REC->reason, { SKB_DROP_REASON_NOT_SPECIFIED, \22NOT_SPECIFIED\22 }, { SKB_DROP_REASON_NO_SOCKET, \22NO_SOCKET\22 }, { SKB_DROP_REASON_PKT_TOO_SMALL, \22PKT_TOO_SMALL\22 }, { SKB_DROP_REASON_TCP_CSUM, \22TCP_CSUM\22 }, { SKB_DROP_REASON_SOCKET_FILTER, \22SOCKET_FILTER\22 }, { SKB_DROP_REASON_UDP_CSUM, \22UDP_CSUM\22 }, { SKB_DROP_REASON_MAX, \22MAX\22 })\00", [105 x i8] zeroinitializer }, align 32
@event_kfree_skb = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_kfree_skb, %union.anon.140 { ptr @__tracepoint_kfree_skb }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_kfree_skb }, ptr @print_fmt_kfree_skb, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_kfree_skb = internal global ptr @event_kfree_skb, section "_ftrace_events", align 4
@trace_event_fields_consume_skb = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.48, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_consume_skb = internal global %struct.trace_event_class { ptr @str__skb__trace_system_name, ptr @trace_event_raw_event_consume_skb, ptr @perf_trace_consume_skb, ptr @trace_event_reg, ptr @trace_event_fields_consume_skb, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_consume_skb, i64 24), ptr getelementptr (i8, ptr @event_class_consume_skb, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_consume_skb = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_consume_skb, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_consume_skb = internal global { [27 x i8], [37 x i8] } { [27 x i8] c"\22skbaddr=%p\22, REC->skbaddr\00", [37 x i8] zeroinitializer }, align 32
@event_consume_skb = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_consume_skb, %union.anon.140 { ptr @__tracepoint_consume_skb }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_consume_skb }, ptr @print_fmt_consume_skb, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_consume_skb = internal global ptr @event_consume_skb, section "_ftrace_events", align 4
@trace_event_fields_skb_copy_datagram_iovec = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.66, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_skb_copy_datagram_iovec = internal global %struct.trace_event_class { ptr @str__skb__trace_system_name, ptr @trace_event_raw_event_skb_copy_datagram_iovec, ptr @perf_trace_skb_copy_datagram_iovec, ptr @trace_event_reg, ptr @trace_event_fields_skb_copy_datagram_iovec, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_skb_copy_datagram_iovec, i64 24), ptr getelementptr (i8, ptr @event_class_skb_copy_datagram_iovec, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_skb_copy_datagram_iovec = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_skb_copy_datagram_iovec, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_skb_copy_datagram_iovec = internal global { [44 x i8], [52 x i8] } { [44 x i8] c"\22skbaddr=%p len=%d\22, REC->skbaddr, REC->len\00", [52 x i8] zeroinitializer }, align 32
@event_skb_copy_datagram_iovec = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_skb_copy_datagram_iovec, %union.anon.140 { ptr @__tracepoint_skb_copy_datagram_iovec }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_skb_copy_datagram_iovec }, ptr @print_fmt_skb_copy_datagram_iovec, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_skb_copy_datagram_iovec = internal global ptr @event_skb_copy_datagram_iovec, section "_ftrace_events", align 4
@__bpf_trace_tp_map_kfree_skb = internal global %union.anon.142 { %struct.bpf_raw_event_map { ptr @__tracepoint_kfree_skb, ptr @__bpf_trace_kfree_skb, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_consume_skb = internal global %union.anon.143 { %struct.bpf_raw_event_map { ptr @__tracepoint_consume_skb, ptr @__bpf_trace_consume_skb, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_skb_copy_datagram_iovec = internal global %union.anon.144 { %struct.bpf_raw_event_map { ptr @__tracepoint_skb_copy_datagram_iovec, ptr @__bpf_trace_skb_copy_datagram_iovec, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_net_dev_start_xmit = internal constant [19 x i8] c"net_dev_start_xmit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_net_dev_start_xmit = dso_local global %struct.static_call_key { ptr @__traceiter_net_dev_start_xmit }, align 4
@__tracepoint_net_dev_start_xmit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_net_dev_start_xmit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_net_dev_start_xmit, ptr null, ptr @__traceiter_net_dev_start_xmit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_net_dev_start_xmit = internal constant ptr @__tracepoint_net_dev_start_xmit, section "__tracepoints_ptrs", align 4
@__tpstrtab_net_dev_xmit = internal constant [13 x i8] c"net_dev_xmit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_net_dev_xmit = dso_local global %struct.static_call_key { ptr @__traceiter_net_dev_xmit }, align 4
@__tracepoint_net_dev_xmit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_net_dev_xmit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_net_dev_xmit, ptr null, ptr @__traceiter_net_dev_xmit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_net_dev_xmit = internal constant ptr @__tracepoint_net_dev_xmit, section "__tracepoints_ptrs", align 4
@__tpstrtab_net_dev_xmit_timeout = internal constant [21 x i8] c"net_dev_xmit_timeout\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_net_dev_xmit_timeout = dso_local global %struct.static_call_key { ptr @__traceiter_net_dev_xmit_timeout }, align 4
@__tracepoint_net_dev_xmit_timeout = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_net_dev_xmit_timeout, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_net_dev_xmit_timeout, ptr null, ptr @__traceiter_net_dev_xmit_timeout, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_net_dev_xmit_timeout = internal constant ptr @__tracepoint_net_dev_xmit_timeout, section "__tracepoints_ptrs", align 4
@__tpstrtab_net_dev_queue = internal constant [14 x i8] c"net_dev_queue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_net_dev_queue = dso_local global %struct.static_call_key { ptr @__traceiter_net_dev_queue }, align 4
@__tracepoint_net_dev_queue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_net_dev_queue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_net_dev_queue, ptr null, ptr @__traceiter_net_dev_queue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_net_dev_queue = internal constant ptr @__tracepoint_net_dev_queue, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_receive_skb = internal constant [18 x i8] c"netif_receive_skb\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_receive_skb = dso_local global %struct.static_call_key { ptr @__traceiter_netif_receive_skb }, align 4
@__tracepoint_netif_receive_skb = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_receive_skb, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_receive_skb, ptr null, ptr @__traceiter_netif_receive_skb, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_receive_skb = internal constant ptr @__tracepoint_netif_receive_skb, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_rx = internal constant [9 x i8] c"netif_rx\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_rx = dso_local global %struct.static_call_key { ptr @__traceiter_netif_rx }, align 4
@__tracepoint_netif_rx = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_rx, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_rx, ptr null, ptr @__traceiter_netif_rx, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_rx = internal constant ptr @__tracepoint_netif_rx, section "__tracepoints_ptrs", align 4
@__tpstrtab_napi_gro_frags_entry = internal constant [21 x i8] c"napi_gro_frags_entry\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_napi_gro_frags_entry = dso_local global %struct.static_call_key { ptr @__traceiter_napi_gro_frags_entry }, align 4
@__tracepoint_napi_gro_frags_entry = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_napi_gro_frags_entry, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_napi_gro_frags_entry, ptr null, ptr @__traceiter_napi_gro_frags_entry, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_napi_gro_frags_entry = internal constant ptr @__tracepoint_napi_gro_frags_entry, section "__tracepoints_ptrs", align 4
@__tpstrtab_napi_gro_receive_entry = internal constant [23 x i8] c"napi_gro_receive_entry\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_napi_gro_receive_entry = dso_local global %struct.static_call_key { ptr @__traceiter_napi_gro_receive_entry }, align 4
@__tracepoint_napi_gro_receive_entry = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_napi_gro_receive_entry, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_napi_gro_receive_entry, ptr null, ptr @__traceiter_napi_gro_receive_entry, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_napi_gro_receive_entry = internal constant ptr @__tracepoint_napi_gro_receive_entry, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_receive_skb_entry = internal constant [24 x i8] c"netif_receive_skb_entry\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_receive_skb_entry = dso_local global %struct.static_call_key { ptr @__traceiter_netif_receive_skb_entry }, align 4
@__tracepoint_netif_receive_skb_entry = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_receive_skb_entry, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_receive_skb_entry, ptr null, ptr @__traceiter_netif_receive_skb_entry, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_receive_skb_entry = internal constant ptr @__tracepoint_netif_receive_skb_entry, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_receive_skb_list_entry = internal constant [29 x i8] c"netif_receive_skb_list_entry\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_receive_skb_list_entry = dso_local global %struct.static_call_key { ptr @__traceiter_netif_receive_skb_list_entry }, align 4
@__tracepoint_netif_receive_skb_list_entry = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_receive_skb_list_entry, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_receive_skb_list_entry, ptr null, ptr @__traceiter_netif_receive_skb_list_entry, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_receive_skb_list_entry = internal constant ptr @__tracepoint_netif_receive_skb_list_entry, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_rx_entry = internal constant [15 x i8] c"netif_rx_entry\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_rx_entry = dso_local global %struct.static_call_key { ptr @__traceiter_netif_rx_entry }, align 4
@__tracepoint_netif_rx_entry = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_rx_entry, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_rx_entry, ptr null, ptr @__traceiter_netif_rx_entry, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_rx_entry = internal constant ptr @__tracepoint_netif_rx_entry, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_rx_ni_entry = internal constant [18 x i8] c"netif_rx_ni_entry\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_rx_ni_entry = dso_local global %struct.static_call_key { ptr @__traceiter_netif_rx_ni_entry }, align 4
@__tracepoint_netif_rx_ni_entry = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_rx_ni_entry, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_rx_ni_entry, ptr null, ptr @__traceiter_netif_rx_ni_entry, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_rx_ni_entry = internal constant ptr @__tracepoint_netif_rx_ni_entry, section "__tracepoints_ptrs", align 4
@__tpstrtab_napi_gro_frags_exit = internal constant [20 x i8] c"napi_gro_frags_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_napi_gro_frags_exit = dso_local global %struct.static_call_key { ptr @__traceiter_napi_gro_frags_exit }, align 4
@__tracepoint_napi_gro_frags_exit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_napi_gro_frags_exit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_napi_gro_frags_exit, ptr null, ptr @__traceiter_napi_gro_frags_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_napi_gro_frags_exit = internal constant ptr @__tracepoint_napi_gro_frags_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_napi_gro_receive_exit = internal constant [22 x i8] c"napi_gro_receive_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_napi_gro_receive_exit = dso_local global %struct.static_call_key { ptr @__traceiter_napi_gro_receive_exit }, align 4
@__tracepoint_napi_gro_receive_exit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_napi_gro_receive_exit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_napi_gro_receive_exit, ptr null, ptr @__traceiter_napi_gro_receive_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_napi_gro_receive_exit = internal constant ptr @__tracepoint_napi_gro_receive_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_receive_skb_exit = internal constant [23 x i8] c"netif_receive_skb_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_receive_skb_exit = dso_local global %struct.static_call_key { ptr @__traceiter_netif_receive_skb_exit }, align 4
@__tracepoint_netif_receive_skb_exit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_receive_skb_exit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_receive_skb_exit, ptr null, ptr @__traceiter_netif_receive_skb_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_receive_skb_exit = internal constant ptr @__tracepoint_netif_receive_skb_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_rx_exit = internal constant [14 x i8] c"netif_rx_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_rx_exit = dso_local global %struct.static_call_key { ptr @__traceiter_netif_rx_exit }, align 4
@__tracepoint_netif_rx_exit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_rx_exit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_rx_exit, ptr null, ptr @__traceiter_netif_rx_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_rx_exit = internal constant ptr @__tracepoint_netif_rx_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_rx_ni_exit = internal constant [17 x i8] c"netif_rx_ni_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_rx_ni_exit = dso_local global %struct.static_call_key { ptr @__traceiter_netif_rx_ni_exit }, align 4
@__tracepoint_netif_rx_ni_exit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_rx_ni_exit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_rx_ni_exit, ptr null, ptr @__traceiter_netif_rx_ni_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_rx_ni_exit = internal constant ptr @__tracepoint_netif_rx_ni_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_netif_receive_skb_list_exit = internal constant [28 x i8] c"netif_receive_skb_list_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_netif_receive_skb_list_exit = dso_local global %struct.static_call_key { ptr @__traceiter_netif_receive_skb_list_exit }, align 4
@__tracepoint_netif_receive_skb_list_exit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_netif_receive_skb_list_exit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_netif_receive_skb_list_exit, ptr null, ptr @__traceiter_netif_receive_skb_list_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_netif_receive_skb_list_exit = internal constant ptr @__tracepoint_netif_receive_skb_list_exit, section "__tracepoints_ptrs", align 4
@str__net__trace_system_name = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"net\00", [28 x i8] zeroinitializer }, align 32
@trace_event_fields_net_dev_start_xmit = internal global { [18 x %struct.trace_event_fields], [112 x i8] } { [18 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.72, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.138 { %struct.anon.139 { ptr @.str.74, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.75, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.76, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.52, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.78, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.80, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.81, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.138 { %struct.anon.139 { ptr @.str.82, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.83, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.84, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.85, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.86, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.87, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [112 x i8] zeroinitializer }, align 32
@event_class_net_dev_start_xmit = internal global %struct.trace_event_class { ptr @str__net__trace_system_name, ptr @trace_event_raw_event_net_dev_start_xmit, ptr @perf_trace_net_dev_start_xmit, ptr @trace_event_reg, ptr @trace_event_fields_net_dev_start_xmit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_net_dev_start_xmit, i64 24), ptr getelementptr (i8, ptr @event_class_net_dev_start_xmit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_net_dev_start_xmit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_net_dev_start_xmit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_net_dev_start_xmit = internal global { [537 x i8], [135 x i8] } { [537 x i8] c"\22dev=%s queue_mapping=%u skbaddr=%p vlan_tagged=%d vlan_proto=0x%04x vlan_tci=0x%04x protocol=0x%04x ip_summed=%d len=%u data_len=%u network_offset=%d transport_offset_valid=%d transport_offset=%d tx_flags=%d gso_size=%d gso_segs=%d gso_type=%#x\22, __get_str(name), REC->queue_mapping, REC->skbaddr, REC->vlan_tagged, REC->vlan_proto, REC->vlan_tci, REC->protocol, REC->ip_summed, REC->len, REC->data_len, REC->network_offset, REC->transport_offset_valid, REC->transport_offset, REC->tx_flags, REC->gso_size, REC->gso_segs, REC->gso_type\00", [135 x i8] zeroinitializer }, align 32
@event_net_dev_start_xmit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_start_xmit, %union.anon.140 { ptr @__tracepoint_net_dev_start_xmit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_start_xmit }, ptr @print_fmt_net_dev_start_xmit, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_net_dev_start_xmit = internal global ptr @event_net_dev_start_xmit, section "_ftrace_events", align 4
@trace_event_fields_net_dev_xmit = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.48, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.89, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_net_dev_xmit = internal global %struct.trace_event_class { ptr @str__net__trace_system_name, ptr @trace_event_raw_event_net_dev_xmit, ptr @perf_trace_net_dev_xmit, ptr @trace_event_reg, ptr @trace_event_fields_net_dev_xmit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_net_dev_xmit, i64 24), ptr getelementptr (i8, ptr @event_class_net_dev_xmit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_net_dev_xmit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_net_dev_xmit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_net_dev_xmit = internal global { [83 x i8], [45 x i8] } { [83 x i8] c"\22dev=%s skbaddr=%p len=%u rc=%d\22, __get_str(name), REC->skbaddr, REC->len, REC->rc\00", [45 x i8] zeroinitializer }, align 32
@event_net_dev_xmit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_xmit, %union.anon.140 { ptr @__tracepoint_net_dev_xmit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_xmit }, ptr @print_fmt_net_dev_xmit, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_net_dev_xmit = internal global ptr @event_net_dev_xmit, section "_ftrace_events", align 4
@trace_event_fields_net_dev_xmit_timeout = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.91, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.92, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_net_dev_xmit_timeout = internal global %struct.trace_event_class { ptr @str__net__trace_system_name, ptr @trace_event_raw_event_net_dev_xmit_timeout, ptr @perf_trace_net_dev_xmit_timeout, ptr @trace_event_reg, ptr @trace_event_fields_net_dev_xmit_timeout, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_net_dev_xmit_timeout, i64 24), ptr getelementptr (i8, ptr @event_class_net_dev_xmit_timeout, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_net_dev_xmit_timeout = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_net_dev_xmit_timeout, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_net_dev_xmit_timeout = internal global { [82 x i8], [46 x i8] } { [82 x i8] c"\22dev=%s driver=%s queue=%d\22, __get_str(name), __get_str(driver), REC->queue_index\00", [46 x i8] zeroinitializer }, align 32
@event_net_dev_xmit_timeout = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_xmit_timeout, %union.anon.140 { ptr @__tracepoint_net_dev_xmit_timeout }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_xmit_timeout }, ptr @print_fmt_net_dev_xmit_timeout, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_net_dev_xmit_timeout = internal global ptr @event_net_dev_xmit_timeout, section "_ftrace_events", align 4
@trace_event_fields_net_dev_template = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.48, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_net_dev_template = internal global %struct.trace_event_class { ptr @str__net__trace_system_name, ptr @trace_event_raw_event_net_dev_template, ptr @perf_trace_net_dev_template, ptr @trace_event_reg, ptr @trace_event_fields_net_dev_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_net_dev_template, i64 24), ptr getelementptr (i8, ptr @event_class_net_dev_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_net_dev_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_net_dev_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_net_dev_template = internal global { [69 x i8], [59 x i8] } { [69 x i8] c"\22dev=%s skbaddr=%px len=%u\22, __get_str(name), REC->skbaddr, REC->len\00", [59 x i8] zeroinitializer }, align 32
@event_net_dev_queue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_template, %union.anon.140 { ptr @__tracepoint_net_dev_queue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_template }, ptr @print_fmt_net_dev_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_net_dev_queue = internal global ptr @event_net_dev_queue, section "_ftrace_events", align 4
@event_netif_receive_skb = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_template, %union.anon.140 { ptr @__tracepoint_netif_receive_skb }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_template }, ptr @print_fmt_net_dev_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_receive_skb = internal global ptr @event_netif_receive_skb, section "_ftrace_events", align 4
@event_netif_rx = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_template, %union.anon.140 { ptr @__tracepoint_netif_rx }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_template }, ptr @print_fmt_net_dev_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_rx = internal global ptr @event_netif_rx, section "_ftrace_events", align 4
@trace_event_fields_net_dev_rx_verbose_template = internal global { [20 x %struct.trace_event_fields], [96 x i8] } { [20 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.72, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.138 { %struct.anon.139 { ptr @.str.74, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.75, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.76, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.52, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.78, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.138 { %struct.anon.139 { ptr @.str.98, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.80, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.138 { %struct.anon.139 { ptr @.str.100, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.102, %union.anon.138 { %struct.anon.139 { ptr @.str.103, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.85, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.87, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [96 x i8] zeroinitializer }, align 32
@event_class_net_dev_rx_verbose_template = internal global %struct.trace_event_class { ptr @str__net__trace_system_name, ptr @trace_event_raw_event_net_dev_rx_verbose_template, ptr @perf_trace_net_dev_rx_verbose_template, ptr @trace_event_reg, ptr @trace_event_fields_net_dev_rx_verbose_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_net_dev_rx_verbose_template, i64 24), ptr getelementptr (i8, ptr @event_class_net_dev_rx_verbose_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_net_dev_rx_verbose_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_net_dev_rx_verbose_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_net_dev_rx_verbose_template = internal global { [548 x i8], [156 x i8] } { [548 x i8] c"\22dev=%s napi_id=%#x queue_mapping=%u skbaddr=%p vlan_tagged=%d vlan_proto=0x%04x vlan_tci=0x%04x protocol=0x%04x ip_summed=%d hash=0x%08x l4_hash=%d len=%u data_len=%u truesize=%u mac_header_valid=%d mac_header=%d nr_frags=%d gso_size=%d gso_type=%#x\22, __get_str(name), REC->napi_id, REC->queue_mapping, REC->skbaddr, REC->vlan_tagged, REC->vlan_proto, REC->vlan_tci, REC->protocol, REC->ip_summed, REC->hash, REC->l4_hash, REC->len, REC->data_len, REC->truesize, REC->mac_header_valid, REC->mac_header, REC->nr_frags, REC->gso_size, REC->gso_type\00", [156 x i8] zeroinitializer }, align 32
@event_napi_gro_frags_entry = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_verbose_template, %union.anon.140 { ptr @__tracepoint_napi_gro_frags_entry }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_verbose_template }, ptr @print_fmt_net_dev_rx_verbose_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_napi_gro_frags_entry = internal global ptr @event_napi_gro_frags_entry, section "_ftrace_events", align 4
@event_napi_gro_receive_entry = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_verbose_template, %union.anon.140 { ptr @__tracepoint_napi_gro_receive_entry }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_verbose_template }, ptr @print_fmt_net_dev_rx_verbose_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_napi_gro_receive_entry = internal global ptr @event_napi_gro_receive_entry, section "_ftrace_events", align 4
@event_netif_receive_skb_entry = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_verbose_template, %union.anon.140 { ptr @__tracepoint_netif_receive_skb_entry }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_verbose_template }, ptr @print_fmt_net_dev_rx_verbose_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_receive_skb_entry = internal global ptr @event_netif_receive_skb_entry, section "_ftrace_events", align 4
@event_netif_receive_skb_list_entry = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_verbose_template, %union.anon.140 { ptr @__tracepoint_netif_receive_skb_list_entry }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_verbose_template }, ptr @print_fmt_net_dev_rx_verbose_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_receive_skb_list_entry = internal global ptr @event_netif_receive_skb_list_entry, section "_ftrace_events", align 4
@event_netif_rx_entry = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_verbose_template, %union.anon.140 { ptr @__tracepoint_netif_rx_entry }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_verbose_template }, ptr @print_fmt_net_dev_rx_verbose_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_rx_entry = internal global ptr @event_netif_rx_entry, section "_ftrace_events", align 4
@event_netif_rx_ni_entry = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_verbose_template, %union.anon.140 { ptr @__tracepoint_netif_rx_ni_entry }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_verbose_template }, ptr @print_fmt_net_dev_rx_verbose_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_rx_ni_entry = internal global ptr @event_netif_rx_ni_entry, section "_ftrace_events", align 4
@trace_event_fields_net_dev_rx_exit_template = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.105, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_net_dev_rx_exit_template = internal global %struct.trace_event_class { ptr @str__net__trace_system_name, ptr @trace_event_raw_event_net_dev_rx_exit_template, ptr @perf_trace_net_dev_rx_exit_template, ptr @trace_event_reg, ptr @trace_event_fields_net_dev_rx_exit_template, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_net_dev_rx_exit_template, i64 24), ptr getelementptr (i8, ptr @event_class_net_dev_rx_exit_template, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_net_dev_rx_exit_template = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_net_dev_rx_exit_template, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_net_dev_rx_exit_template = internal global { [19 x i8], [45 x i8] } { [19 x i8] c"\22ret=%d\22, REC->ret\00", [45 x i8] zeroinitializer }, align 32
@event_napi_gro_frags_exit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_exit_template, %union.anon.140 { ptr @__tracepoint_napi_gro_frags_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_exit_template }, ptr @print_fmt_net_dev_rx_exit_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_napi_gro_frags_exit = internal global ptr @event_napi_gro_frags_exit, section "_ftrace_events", align 4
@event_napi_gro_receive_exit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_exit_template, %union.anon.140 { ptr @__tracepoint_napi_gro_receive_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_exit_template }, ptr @print_fmt_net_dev_rx_exit_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_napi_gro_receive_exit = internal global ptr @event_napi_gro_receive_exit, section "_ftrace_events", align 4
@event_netif_receive_skb_exit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_exit_template, %union.anon.140 { ptr @__tracepoint_netif_receive_skb_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_exit_template }, ptr @print_fmt_net_dev_rx_exit_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_receive_skb_exit = internal global ptr @event_netif_receive_skb_exit, section "_ftrace_events", align 4
@event_netif_rx_exit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_exit_template, %union.anon.140 { ptr @__tracepoint_netif_rx_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_exit_template }, ptr @print_fmt_net_dev_rx_exit_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_rx_exit = internal global ptr @event_netif_rx_exit, section "_ftrace_events", align 4
@event_netif_rx_ni_exit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_exit_template, %union.anon.140 { ptr @__tracepoint_netif_rx_ni_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_exit_template }, ptr @print_fmt_net_dev_rx_exit_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_rx_ni_exit = internal global ptr @event_netif_rx_ni_exit, section "_ftrace_events", align 4
@event_netif_receive_skb_list_exit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_net_dev_rx_exit_template, %union.anon.140 { ptr @__tracepoint_netif_receive_skb_list_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_net_dev_rx_exit_template }, ptr @print_fmt_net_dev_rx_exit_template, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_netif_receive_skb_list_exit = internal global ptr @event_netif_receive_skb_list_exit, section "_ftrace_events", align 4
@__bpf_trace_tp_map_net_dev_start_xmit = internal global %union.anon.145 { %struct.bpf_raw_event_map { ptr @__tracepoint_net_dev_start_xmit, ptr @__bpf_trace_net_dev_start_xmit, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_net_dev_xmit = internal global %union.anon.146 { %struct.bpf_raw_event_map { ptr @__tracepoint_net_dev_xmit, ptr @__bpf_trace_net_dev_xmit, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_net_dev_xmit_timeout = internal global %union.anon.147 { %struct.bpf_raw_event_map { ptr @__tracepoint_net_dev_xmit_timeout, ptr @__bpf_trace_net_dev_xmit_timeout, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_net_dev_queue = internal global %union.anon.148 { %struct.bpf_raw_event_map { ptr @__tracepoint_net_dev_queue, ptr @__bpf_trace_net_dev_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_receive_skb = internal global %union.anon.149 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_receive_skb, ptr @__bpf_trace_net_dev_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_rx = internal global %union.anon.150 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_rx, ptr @__bpf_trace_net_dev_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_napi_gro_frags_entry = internal global %union.anon.151 { %struct.bpf_raw_event_map { ptr @__tracepoint_napi_gro_frags_entry, ptr @__bpf_trace_net_dev_rx_verbose_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_napi_gro_receive_entry = internal global %union.anon.152 { %struct.bpf_raw_event_map { ptr @__tracepoint_napi_gro_receive_entry, ptr @__bpf_trace_net_dev_rx_verbose_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_receive_skb_entry = internal global %union.anon.153 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_receive_skb_entry, ptr @__bpf_trace_net_dev_rx_verbose_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_receive_skb_list_entry = internal global %union.anon.154 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_receive_skb_list_entry, ptr @__bpf_trace_net_dev_rx_verbose_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_rx_entry = internal global %union.anon.155 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_rx_entry, ptr @__bpf_trace_net_dev_rx_verbose_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_rx_ni_entry = internal global %union.anon.156 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_rx_ni_entry, ptr @__bpf_trace_net_dev_rx_verbose_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_napi_gro_frags_exit = internal global %union.anon.157 { %struct.bpf_raw_event_map { ptr @__tracepoint_napi_gro_frags_exit, ptr @__bpf_trace_net_dev_rx_exit_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_napi_gro_receive_exit = internal global %union.anon.158 { %struct.bpf_raw_event_map { ptr @__tracepoint_napi_gro_receive_exit, ptr @__bpf_trace_net_dev_rx_exit_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_receive_skb_exit = internal global %union.anon.159 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_receive_skb_exit, ptr @__bpf_trace_net_dev_rx_exit_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_rx_exit = internal global %union.anon.160 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_rx_exit, ptr @__bpf_trace_net_dev_rx_exit_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_rx_ni_exit = internal global %union.anon.161 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_rx_ni_exit, ptr @__bpf_trace_net_dev_rx_exit_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_netif_receive_skb_list_exit = internal global %union.anon.162 { %struct.bpf_raw_event_map { ptr @__tracepoint_netif_receive_skb_list_exit, ptr @__bpf_trace_net_dev_rx_exit_template, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_napi_poll = internal constant [10 x i8] c"napi_poll\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_napi_poll = dso_local global %struct.static_call_key { ptr @__traceiter_napi_poll }, align 4
@__tracepoint_napi_poll = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_napi_poll, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_napi_poll, ptr null, ptr @__traceiter_napi_poll, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_napi_poll = internal constant ptr @__tracepoint_napi_poll, section "__tracepoints_ptrs", align 4
@str__napi__trace_system_name = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"napi\00", [27 x i8] zeroinitializer }, align 32
@trace_event_fields_napi_poll = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.108, %union.anon.138 { %struct.anon.139 { ptr @.str.109, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.111, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.112, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_napi_poll = internal global %struct.trace_event_class { ptr @str__napi__trace_system_name, ptr @trace_event_raw_event_napi_poll, ptr @perf_trace_napi_poll, ptr @trace_event_reg, ptr @trace_event_fields_napi_poll, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_napi_poll, i64 24), ptr getelementptr (i8, ptr @event_class_napi_poll, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_napi_poll = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_napi_poll, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_napi_poll = internal global { [118 x i8], [42 x i8] } { [118 x i8] c"\22napi poll on napi struct %p for device %s work %d budget %d\22, REC->napi, __get_str(dev_name), REC->work, REC->budget\00", [42 x i8] zeroinitializer }, align 32
@event_napi_poll = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_napi_poll, %union.anon.140 { ptr @__tracepoint_napi_poll }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_napi_poll }, ptr @print_fmt_napi_poll, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_napi_poll = internal global ptr @event_napi_poll, section "_ftrace_events", align 4
@__bpf_trace_tp_map_napi_poll = internal global %union.anon.163 { %struct.bpf_raw_event_map { ptr @__tracepoint_napi_poll, ptr @__bpf_trace_napi_poll, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_sock_rcvqueue_full = internal constant [19 x i8] c"sock_rcvqueue_full\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_sock_rcvqueue_full = dso_local global %struct.static_call_key { ptr @__traceiter_sock_rcvqueue_full }, align 4
@__tracepoint_sock_rcvqueue_full = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_sock_rcvqueue_full, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_sock_rcvqueue_full, ptr null, ptr @__traceiter_sock_rcvqueue_full, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_sock_rcvqueue_full = internal constant ptr @__tracepoint_sock_rcvqueue_full, section "__tracepoints_ptrs", align 4
@__tpstrtab_sock_exceed_buf_limit = internal constant [22 x i8] c"sock_exceed_buf_limit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_sock_exceed_buf_limit = dso_local global %struct.static_call_key { ptr @__traceiter_sock_exceed_buf_limit }, align 4
@__tracepoint_sock_exceed_buf_limit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_sock_exceed_buf_limit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_sock_exceed_buf_limit, ptr null, ptr @__traceiter_sock_exceed_buf_limit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_sock_exceed_buf_limit = internal constant ptr @__tracepoint_sock_exceed_buf_limit, section "__tracepoints_ptrs", align 4
@__tpstrtab_inet_sock_set_state = internal constant [20 x i8] c"inet_sock_set_state\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_inet_sock_set_state = dso_local global %struct.static_call_key { ptr @__traceiter_inet_sock_set_state }, align 4
@__tracepoint_inet_sock_set_state = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_inet_sock_set_state, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_inet_sock_set_state, ptr null, ptr @__traceiter_inet_sock_set_state, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_inet_sock_set_state = internal constant ptr @__tracepoint_inet_sock_set_state, section "__tracepoints_ptrs", align 4
@__tpstrtab_inet_sk_error_report = internal constant [21 x i8] c"inet_sk_error_report\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_inet_sk_error_report = dso_local global %struct.static_call_key { ptr @__traceiter_inet_sk_error_report }, align 4
@__tracepoint_inet_sk_error_report = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_inet_sk_error_report, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_inet_sk_error_report, ptr null, ptr @__traceiter_inet_sk_error_report, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_inet_sk_error_report = internal constant ptr @__tracepoint_inet_sk_error_report, section "__tracepoints_ptrs", align 4
@str__sock__trace_system_name = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"sock\00", [27 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"2\00", [30 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_2 = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.7, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_2 = internal global ptr @__TRACE_SYSTEM_2, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"10\00", [29 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_10 = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.8, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_10 = internal global ptr @__TRACE_SYSTEM_10, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"IPPROTO_TCP\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IPPROTO_TCP = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.9, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_IPPROTO_TCP = internal global ptr @__TRACE_SYSTEM_IPPROTO_TCP, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IPPROTO_DCCP\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IPPROTO_DCCP = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.10, i32 33 }, section ".init.data", align 4
@TRACE_SYSTEM_IPPROTO_DCCP = internal global ptr @__TRACE_SYSTEM_IPPROTO_DCCP, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IPPROTO_SCTP\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IPPROTO_SCTP = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.11, i32 132 }, section ".init.data", align 4
@TRACE_SYSTEM_IPPROTO_SCTP = internal global ptr @__TRACE_SYSTEM_IPPROTO_SCTP, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"IPPROTO_MPTCP\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_IPPROTO_MPTCP = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.12, i32 262 }, section ".init.data", align 4
@TRACE_SYSTEM_IPPROTO_MPTCP = internal global ptr @__TRACE_SYSTEM_IPPROTO_MPTCP, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"TCP_ESTABLISHED\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_ESTABLISHED = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.13, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_ESTABLISHED = internal global ptr @__TRACE_SYSTEM_TCP_ESTABLISHED, section "_ftrace_eval_map", align 4
@.str.14 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCP_SYN_SENT\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_SYN_SENT = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.14, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_SYN_SENT = internal global ptr @__TRACE_SYSTEM_TCP_SYN_SENT, section "_ftrace_eval_map", align 4
@.str.15 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCP_SYN_RECV\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_SYN_RECV = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.15, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_SYN_RECV = internal global ptr @__TRACE_SYSTEM_TCP_SYN_RECV, section "_ftrace_eval_map", align 4
@.str.16 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCP_FIN_WAIT1\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_FIN_WAIT1 = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.16, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_FIN_WAIT1 = internal global ptr @__TRACE_SYSTEM_TCP_FIN_WAIT1, section "_ftrace_eval_map", align 4
@.str.17 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCP_FIN_WAIT2\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_FIN_WAIT2 = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.17, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_FIN_WAIT2 = internal global ptr @__TRACE_SYSTEM_TCP_FIN_WAIT2, section "_ftrace_eval_map", align 4
@.str.18 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TCP_TIME_WAIT\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_TIME_WAIT = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.18, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_TIME_WAIT = internal global ptr @__TRACE_SYSTEM_TCP_TIME_WAIT, section "_ftrace_eval_map", align 4
@.str.19 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"TCP_CLOSE\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_CLOSE = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.19, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSE = internal global ptr @__TRACE_SYSTEM_TCP_CLOSE, section "_ftrace_eval_map", align 4
@.str.20 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"TCP_CLOSE_WAIT\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_CLOSE_WAIT = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.20, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSE_WAIT = internal global ptr @__TRACE_SYSTEM_TCP_CLOSE_WAIT, section "_ftrace_eval_map", align 4
@.str.21 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TCP_LAST_ACK\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_LAST_ACK = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.21, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_LAST_ACK = internal global ptr @__TRACE_SYSTEM_TCP_LAST_ACK, section "_ftrace_eval_map", align 4
@.str.22 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"TCP_LISTEN\00", [21 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_LISTEN = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.22, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_LISTEN = internal global ptr @__TRACE_SYSTEM_TCP_LISTEN, section "_ftrace_eval_map", align 4
@.str.23 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"TCP_CLOSING\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_CLOSING = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.23, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_CLOSING = internal global ptr @__TRACE_SYSTEM_TCP_CLOSING, section "_ftrace_eval_map", align 4
@.str.24 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"TCP_NEW_SYN_RECV\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_TCP_NEW_SYN_RECV = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.24, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_TCP_NEW_SYN_RECV = internal global ptr @__TRACE_SYSTEM_TCP_NEW_SYN_RECV, section "_ftrace_eval_map", align 4
@.str.25 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"0\00", [30 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_0 = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.25, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_0 = internal global ptr @__TRACE_SYSTEM_0, section "_ftrace_eval_map", align 4
@.str.26 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"1\00", [30 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_1 = internal global %struct.trace_eval_map { ptr @str__sock__trace_system_name, ptr @.str.26, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_1 = internal global ptr @__TRACE_SYSTEM_1, section "_ftrace_eval_map", align 4
@trace_event_fields_sock_rcvqueue_full = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.114, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.79, %union.anon.138 { %struct.anon.139 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.115, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_sock_rcvqueue_full = internal global %struct.trace_event_class { ptr @str__sock__trace_system_name, ptr @trace_event_raw_event_sock_rcvqueue_full, ptr @perf_trace_sock_rcvqueue_full, ptr @trace_event_reg, ptr @trace_event_fields_sock_rcvqueue_full, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_sock_rcvqueue_full, i64 24), ptr getelementptr (i8, ptr @event_class_sock_rcvqueue_full, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_sock_rcvqueue_full = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_sock_rcvqueue_full, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_sock_rcvqueue_full = internal global { [89 x i8], [39 x i8] } { [89 x i8] c"\22rmem_alloc=%d truesize=%u sk_rcvbuf=%d\22, REC->rmem_alloc, REC->truesize, REC->sk_rcvbuf\00", [39 x i8] zeroinitializer }, align 32
@event_sock_rcvqueue_full = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_sock_rcvqueue_full, %union.anon.140 { ptr @__tracepoint_sock_rcvqueue_full }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_sock_rcvqueue_full }, ptr @print_fmt_sock_rcvqueue_full, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_sock_rcvqueue_full = internal global ptr @event_sock_rcvqueue_full, section "_ftrace_events", align 4
@trace_event_fields_sock_exceed_buf_limit = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.117, %union.anon.138 { %struct.anon.139 { ptr @.str.70, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.118, %union.anon.138 { %struct.anon.139 { ptr @.str.119, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.120, %union.anon.138 { %struct.anon.139 { ptr @.str.121, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.122, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.114, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.123, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.124, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.125, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.126, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_sock_exceed_buf_limit = internal global %struct.trace_event_class { ptr @str__sock__trace_system_name, ptr @trace_event_raw_event_sock_exceed_buf_limit, ptr @perf_trace_sock_exceed_buf_limit, ptr @trace_event_reg, ptr @trace_event_fields_sock_exceed_buf_limit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_sock_exceed_buf_limit, i64 24), ptr getelementptr (i8, ptr @event_class_sock_exceed_buf_limit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_sock_exceed_buf_limit = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_sock_exceed_buf_limit, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_sock_exceed_buf_limit = internal global { [377 x i8], [71 x i8] } { [377 x i8] c"\22proto:%s sysctl_mem=%ld,%ld,%ld allocated=%ld sysctl_rmem=%d rmem_alloc=%d sysctl_wmem=%d wmem_alloc=%d wmem_queued=%d kind=%s\22, REC->name, REC->sysctl_mem[0], REC->sysctl_mem[1], REC->sysctl_mem[2], REC->allocated, REC->sysctl_rmem, REC->rmem_alloc, REC->sysctl_wmem, REC->wmem_alloc, REC->wmem_queued, __print_symbolic(REC->kind, { 0, \22SK_MEM_SEND\22 }, { 1, \22SK_MEM_RECV\22 })\00", [71 x i8] zeroinitializer }, align 32
@event_sock_exceed_buf_limit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_sock_exceed_buf_limit, %union.anon.140 { ptr @__tracepoint_sock_exceed_buf_limit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_sock_exceed_buf_limit }, ptr @print_fmt_sock_exceed_buf_limit, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_sock_exceed_buf_limit = internal global ptr @event_sock_exceed_buf_limit, section "_ftrace_events", align 4
@trace_event_fields_inet_sock_set_state = internal global { [12 x %struct.trace_event_fields], [64 x i8] } { [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.131, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.132, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.134, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.135, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.52, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.138, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.139, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.141, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.142, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [64 x i8] zeroinitializer }, align 32
@event_class_inet_sock_set_state = internal global %struct.trace_event_class { ptr @str__sock__trace_system_name, ptr @trace_event_raw_event_inet_sock_set_state, ptr @perf_trace_inet_sock_set_state, ptr @trace_event_reg, ptr @trace_event_fields_inet_sock_set_state, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_inet_sock_set_state, i64 24), ptr getelementptr (i8, ptr @event_class_inet_sock_set_state, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_inet_sock_set_state = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_inet_sock_set_state, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_inet_sock_set_state = internal global { [1340 x i8], [324 x i8] } { [1340 x i8] c"\22family=%s protocol=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c oldstate=%s newstate=%s\22, __print_symbolic(REC->family, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), __print_symbolic(REC->protocol, { IPPROTO_TCP, \22IPPROTO_TCP\22 }, { IPPROTO_DCCP, \22IPPROTO_DCCP\22 }, { IPPROTO_SCTP, \22IPPROTO_SCTP\22 }, { IPPROTO_MPTCP, \22IPPROTO_MPTCP\22 }), REC->sport, REC->dport, REC->saddr, REC->daddr, REC->saddr_v6, REC->daddr_v6, __print_symbolic(REC->oldstate, { TCP_ESTABLISHED, \22TCP_ESTABLISHED\22 }, { TCP_SYN_SENT, \22TCP_SYN_SENT\22 }, { TCP_SYN_RECV, \22TCP_SYN_RECV\22 }, { TCP_FIN_WAIT1, \22TCP_FIN_WAIT1\22 }, { TCP_FIN_WAIT2, \22TCP_FIN_WAIT2\22 }, { TCP_TIME_WAIT, \22TCP_TIME_WAIT\22 }, { TCP_CLOSE, \22TCP_CLOSE\22 }, { TCP_CLOSE_WAIT, \22TCP_CLOSE_WAIT\22 }, { TCP_LAST_ACK, \22TCP_LAST_ACK\22 }, { TCP_LISTEN, \22TCP_LISTEN\22 }, { TCP_CLOSING, \22TCP_CLOSING\22 }, { TCP_NEW_SYN_RECV, \22TCP_NEW_SYN_RECV\22 }), __print_symbolic(REC->newstate, { TCP_ESTABLISHED, \22TCP_ESTABLISHED\22 }, { TCP_SYN_SENT, \22TCP_SYN_SENT\22 }, { TCP_SYN_RECV, \22TCP_SYN_RECV\22 }, { TCP_FIN_WAIT1, \22TCP_FIN_WAIT1\22 }, { TCP_FIN_WAIT2, \22TCP_FIN_WAIT2\22 }, { TCP_TIME_WAIT, \22TCP_TIME_WAIT\22 }, { TCP_CLOSE, \22TCP_CLOSE\22 }, { TCP_CLOSE_WAIT, \22TCP_CLOSE_WAIT\22 }, { TCP_LAST_ACK, \22TCP_LAST_ACK\22 }, { TCP_LISTEN, \22TCP_LISTEN\22 }, { TCP_CLOSING, \22TCP_CLOSING\22 }, { TCP_NEW_SYN_RECV, \22TCP_NEW_SYN_RECV\22 })\00", [324 x i8] zeroinitializer }, align 32
@event_inet_sock_set_state = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_inet_sock_set_state, %union.anon.140 { ptr @__tracepoint_inet_sock_set_state }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_inet_sock_set_state }, ptr @print_fmt_inet_sock_set_state, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_inet_sock_set_state = internal global ptr @event_inet_sock_set_state, section "_ftrace_events", align 4
@trace_event_fields_inet_sk_error_report = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.149, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.134, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.135, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.52, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.138, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.139, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.141, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.142, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_inet_sk_error_report = internal global %struct.trace_event_class { ptr @str__sock__trace_system_name, ptr @trace_event_raw_event_inet_sk_error_report, ptr @perf_trace_inet_sk_error_report, ptr @trace_event_reg, ptr @trace_event_fields_inet_sk_error_report, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_inet_sk_error_report, i64 24), ptr getelementptr (i8, ptr @event_class_inet_sk_error_report, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_inet_sk_error_report = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_inet_sk_error_report, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_inet_sk_error_report = internal global { [431 x i8], [113 x i8] } { [431 x i8] c"\22family=%s protocol=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c error=%d\22, __print_symbolic(REC->family, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), __print_symbolic(REC->protocol, { IPPROTO_TCP, \22IPPROTO_TCP\22 }, { IPPROTO_DCCP, \22IPPROTO_DCCP\22 }, { IPPROTO_SCTP, \22IPPROTO_SCTP\22 }, { IPPROTO_MPTCP, \22IPPROTO_MPTCP\22 }), REC->sport, REC->dport, REC->saddr, REC->daddr, REC->saddr_v6, REC->daddr_v6, REC->error\00", [113 x i8] zeroinitializer }, align 32
@event_inet_sk_error_report = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_inet_sk_error_report, %union.anon.140 { ptr @__tracepoint_inet_sk_error_report }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_inet_sk_error_report }, ptr @print_fmt_inet_sk_error_report, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_inet_sk_error_report = internal global ptr @event_inet_sk_error_report, section "_ftrace_events", align 4
@__bpf_trace_tp_map_sock_rcvqueue_full = internal global %union.anon.191 { %struct.bpf_raw_event_map { ptr @__tracepoint_sock_rcvqueue_full, ptr @__bpf_trace_sock_rcvqueue_full, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_sock_exceed_buf_limit = internal global %union.anon.192 { %struct.bpf_raw_event_map { ptr @__tracepoint_sock_exceed_buf_limit, ptr @__bpf_trace_sock_exceed_buf_limit, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_inet_sock_set_state = internal global %union.anon.193 { %struct.bpf_raw_event_map { ptr @__tracepoint_inet_sock_set_state, ptr @__bpf_trace_inet_sock_set_state, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_inet_sk_error_report = internal global %union.anon.194 { %struct.bpf_raw_event_map { ptr @__tracepoint_inet_sk_error_report, ptr @__bpf_trace_inet_sk_error_report, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_udp_fail_queue_rcv_skb = internal constant [23 x i8] c"udp_fail_queue_rcv_skb\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_udp_fail_queue_rcv_skb = dso_local global %struct.static_call_key { ptr @__traceiter_udp_fail_queue_rcv_skb }, align 4
@__tracepoint_udp_fail_queue_rcv_skb = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_udp_fail_queue_rcv_skb, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_udp_fail_queue_rcv_skb, ptr null, ptr @__traceiter_udp_fail_queue_rcv_skb, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_udp_fail_queue_rcv_skb = internal constant ptr @__tracepoint_udp_fail_queue_rcv_skb, section "__tracepoints_ptrs", align 4
@str__udp__trace_system_name = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"udp\00", [28 x i8] zeroinitializer }, align 32
@trace_event_fields_udp_fail_queue_rcv_skb = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.89, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.152, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_udp_fail_queue_rcv_skb = internal global %struct.trace_event_class { ptr @str__udp__trace_system_name, ptr @trace_event_raw_event_udp_fail_queue_rcv_skb, ptr @perf_trace_udp_fail_queue_rcv_skb, ptr @trace_event_reg, ptr @trace_event_fields_udp_fail_queue_rcv_skb, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_udp_fail_queue_rcv_skb, i64 24), ptr getelementptr (i8, ptr @event_class_udp_fail_queue_rcv_skb, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_udp_fail_queue_rcv_skb = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_udp_fail_queue_rcv_skb, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_udp_fail_queue_rcv_skb = internal global { [38 x i8], [58 x i8] } { [38 x i8] c"\22rc=%d port=%hu\22, REC->rc, REC->lport\00", [58 x i8] zeroinitializer }, align 32
@event_udp_fail_queue_rcv_skb = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_udp_fail_queue_rcv_skb, %union.anon.140 { ptr @__tracepoint_udp_fail_queue_rcv_skb }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_udp_fail_queue_rcv_skb }, ptr @print_fmt_udp_fail_queue_rcv_skb, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_udp_fail_queue_rcv_skb = internal global ptr @event_udp_fail_queue_rcv_skb, section "_ftrace_events", align 4
@__bpf_trace_tp_map_udp_fail_queue_rcv_skb = internal global %union.anon.195 { %struct.bpf_raw_event_map { ptr @__tracepoint_udp_fail_queue_rcv_skb, ptr @__bpf_trace_udp_fail_queue_rcv_skb, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_tcp_retransmit_skb = internal constant [19 x i8] c"tcp_retransmit_skb\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_tcp_retransmit_skb = dso_local global %struct.static_call_key { ptr @__traceiter_tcp_retransmit_skb }, align 4
@__tracepoint_tcp_retransmit_skb = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_tcp_retransmit_skb, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_tcp_retransmit_skb, ptr null, ptr @__traceiter_tcp_retransmit_skb, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_tcp_retransmit_skb = internal constant ptr @__tracepoint_tcp_retransmit_skb, section "__tracepoints_ptrs", align 4
@__tpstrtab_tcp_send_reset = internal constant [15 x i8] c"tcp_send_reset\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_tcp_send_reset = dso_local global %struct.static_call_key { ptr @__traceiter_tcp_send_reset }, align 4
@__tracepoint_tcp_send_reset = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_tcp_send_reset, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_tcp_send_reset, ptr null, ptr @__traceiter_tcp_send_reset, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_tcp_send_reset = internal constant ptr @__tracepoint_tcp_send_reset, section "__tracepoints_ptrs", align 4
@__tpstrtab_tcp_receive_reset = internal constant [18 x i8] c"tcp_receive_reset\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_tcp_receive_reset = dso_local global %struct.static_call_key { ptr @__traceiter_tcp_receive_reset }, align 4
@__tracepoint_tcp_receive_reset = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_tcp_receive_reset, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_tcp_receive_reset, ptr null, ptr @__traceiter_tcp_receive_reset, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_tcp_receive_reset = internal constant ptr @__tracepoint_tcp_receive_reset, section "__tracepoints_ptrs", align 4
@__tpstrtab_tcp_destroy_sock = internal constant [17 x i8] c"tcp_destroy_sock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_tcp_destroy_sock = dso_local global %struct.static_call_key { ptr @__traceiter_tcp_destroy_sock }, align 4
@__tracepoint_tcp_destroy_sock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_tcp_destroy_sock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_tcp_destroy_sock, ptr null, ptr @__traceiter_tcp_destroy_sock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_tcp_destroy_sock = internal constant ptr @__tracepoint_tcp_destroy_sock, section "__tracepoints_ptrs", align 4
@__tpstrtab_tcp_rcv_space_adjust = internal constant [21 x i8] c"tcp_rcv_space_adjust\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_tcp_rcv_space_adjust = dso_local global %struct.static_call_key { ptr @__traceiter_tcp_rcv_space_adjust }, align 4
@__tracepoint_tcp_rcv_space_adjust = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_tcp_rcv_space_adjust, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_tcp_rcv_space_adjust, ptr null, ptr @__traceiter_tcp_rcv_space_adjust, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_tcp_rcv_space_adjust = internal constant ptr @__tracepoint_tcp_rcv_space_adjust, section "__tracepoints_ptrs", align 4
@__tpstrtab_tcp_retransmit_synack = internal constant [22 x i8] c"tcp_retransmit_synack\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_tcp_retransmit_synack = dso_local global %struct.static_call_key { ptr @__traceiter_tcp_retransmit_synack }, align 4
@__tracepoint_tcp_retransmit_synack = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_tcp_retransmit_synack, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_tcp_retransmit_synack, ptr null, ptr @__traceiter_tcp_retransmit_synack, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_tcp_retransmit_synack = internal constant ptr @__tracepoint_tcp_retransmit_synack, section "__tracepoints_ptrs", align 4
@__tpstrtab_tcp_probe = internal constant [10 x i8] c"tcp_probe\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_tcp_probe = dso_local global %struct.static_call_key { ptr @__traceiter_tcp_probe }, align 4
@__tracepoint_tcp_probe = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_tcp_probe, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_tcp_probe, ptr null, ptr @__traceiter_tcp_probe, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_tcp_probe = internal constant ptr @__tracepoint_tcp_probe, section "__tracepoints_ptrs", align 4
@__tpstrtab_tcp_bad_csum = internal constant [13 x i8] c"tcp_bad_csum\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_tcp_bad_csum = dso_local global %struct.static_call_key { ptr @__traceiter_tcp_bad_csum }, align 4
@__tracepoint_tcp_bad_csum = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_tcp_bad_csum, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_tcp_bad_csum, ptr null, ptr @__traceiter_tcp_bad_csum, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_tcp_bad_csum = internal constant ptr @__tracepoint_tcp_bad_csum, section "__tracepoints_ptrs", align 4
@str__tcp__trace_system_name = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"tcp\00", [28 x i8] zeroinitializer }, align 32
@trace_event_fields_tcp_event_sk_skb = internal global { [11 x %struct.trace_event_fields], [88 x i8] } { [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.154, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.134, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.135, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.138, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.139, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.141, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.142, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [88 x i8] zeroinitializer }, align 32
@event_class_tcp_event_sk_skb = internal global %struct.trace_event_class { ptr @str__tcp__trace_system_name, ptr @trace_event_raw_event_tcp_event_sk_skb, ptr @perf_trace_tcp_event_sk_skb, ptr @trace_event_reg, ptr @trace_event_fields_tcp_event_sk_skb, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_tcp_event_sk_skb, i64 24), ptr getelementptr (i8, ptr @event_class_tcp_event_sk_skb, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_tcp_event_sk_skb = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_tcp_event_sk_skb, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_tcp_event_sk_skb = internal global { [688 x i8], [176 x i8] } { [688 x i8] c"\22family=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c state=%s\22, __print_symbolic(REC->family, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), REC->sport, REC->dport, REC->saddr, REC->daddr, REC->saddr_v6, REC->daddr_v6, __print_symbolic(REC->state, { TCP_ESTABLISHED, \22TCP_ESTABLISHED\22 }, { TCP_SYN_SENT, \22TCP_SYN_SENT\22 }, { TCP_SYN_RECV, \22TCP_SYN_RECV\22 }, { TCP_FIN_WAIT1, \22TCP_FIN_WAIT1\22 }, { TCP_FIN_WAIT2, \22TCP_FIN_WAIT2\22 }, { TCP_TIME_WAIT, \22TCP_TIME_WAIT\22 }, { TCP_CLOSE, \22TCP_CLOSE\22 }, { TCP_CLOSE_WAIT, \22TCP_CLOSE_WAIT\22 }, { TCP_LAST_ACK, \22TCP_LAST_ACK\22 }, { TCP_LISTEN, \22TCP_LISTEN\22 }, { TCP_CLOSING, \22TCP_CLOSING\22 }, { TCP_NEW_SYN_RECV, \22TCP_NEW_SYN_RECV\22 })\00", [176 x i8] zeroinitializer }, align 32
@event_tcp_retransmit_skb = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_tcp_event_sk_skb, %union.anon.140 { ptr @__tracepoint_tcp_retransmit_skb }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_tcp_event_sk_skb }, ptr @print_fmt_tcp_event_sk_skb, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_tcp_retransmit_skb = internal global ptr @event_tcp_retransmit_skb, section "_ftrace_events", align 4
@event_tcp_send_reset = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_tcp_event_sk_skb, %union.anon.140 { ptr @__tracepoint_tcp_send_reset }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_tcp_event_sk_skb }, ptr @print_fmt_tcp_event_sk_skb, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_tcp_send_reset = internal global ptr @event_tcp_send_reset, section "_ftrace_events", align 4
@trace_event_fields_tcp_event_sk = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.134, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.135, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.138, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.139, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.141, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.142, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.157, %union.anon.138 { %struct.anon.139 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_tcp_event_sk = internal global %struct.trace_event_class { ptr @str__tcp__trace_system_name, ptr @trace_event_raw_event_tcp_event_sk, ptr @perf_trace_tcp_event_sk, ptr @trace_event_reg, ptr @trace_event_fields_tcp_event_sk, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_tcp_event_sk, i64 24), ptr getelementptr (i8, ptr @event_class_tcp_event_sk, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_tcp_event_sk = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_tcp_event_sk, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_tcp_event_sk = internal global { [264 x i8], [88 x i8] } { [264 x i8] c"\22family=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c sock_cookie=%llx\22, __print_symbolic(REC->family, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), REC->sport, REC->dport, REC->saddr, REC->daddr, REC->saddr_v6, REC->daddr_v6, REC->sock_cookie\00", [88 x i8] zeroinitializer }, align 32
@event_tcp_receive_reset = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_tcp_event_sk, %union.anon.140 { ptr @__tracepoint_tcp_receive_reset }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_tcp_event_sk }, ptr @print_fmt_tcp_event_sk, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_tcp_receive_reset = internal global ptr @event_tcp_receive_reset, section "_ftrace_events", align 4
@event_tcp_destroy_sock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_tcp_event_sk, %union.anon.140 { ptr @__tracepoint_tcp_destroy_sock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_tcp_event_sk }, ptr @print_fmt_tcp_event_sk, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_tcp_destroy_sock = internal global ptr @event_tcp_destroy_sock, section "_ftrace_events", align 4
@event_tcp_rcv_space_adjust = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_tcp_event_sk, %union.anon.140 { ptr @__tracepoint_tcp_rcv_space_adjust }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_tcp_event_sk }, ptr @print_fmt_tcp_event_sk, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_tcp_rcv_space_adjust = internal global ptr @event_tcp_rcv_space_adjust, section "_ftrace_events", align 4
@trace_event_fields_tcp_retransmit_synack = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.160, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.134, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.135, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.138, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.139, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.141, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.142, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_tcp_retransmit_synack = internal global %struct.trace_event_class { ptr @str__tcp__trace_system_name, ptr @trace_event_raw_event_tcp_retransmit_synack, ptr @perf_trace_tcp_retransmit_synack, ptr @trace_event_reg, ptr @trace_event_fields_tcp_retransmit_synack, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_tcp_retransmit_synack, i64 24), ptr getelementptr (i8, ptr @event_class_tcp_retransmit_synack, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_tcp_retransmit_synack = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_tcp_retransmit_synack, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_tcp_retransmit_synack = internal global { [229 x i8], [59 x i8] } { [229 x i8] c"\22family=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c\22, __print_symbolic(REC->family, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), REC->sport, REC->dport, REC->saddr, REC->daddr, REC->saddr_v6, REC->daddr_v6\00", [59 x i8] zeroinitializer }, align 32
@event_tcp_retransmit_synack = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_tcp_retransmit_synack, %union.anon.140 { ptr @__tracepoint_tcp_retransmit_synack }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_tcp_retransmit_synack }, ptr @print_fmt_tcp_retransmit_synack, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_tcp_retransmit_synack = internal global ptr @event_tcp_retransmit_synack, section "_ftrace_events", align 4
@trace_event_fields_tcp_probe = internal global { [16 x %struct.trace_event_fields], [96 x i8] } { [16 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.162, %union.anon.138 { %struct.anon.139 { ptr @.str.138, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.162, %union.anon.138 { %struct.anon.139 { ptr @.str.139, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.134, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.135, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.163, %union.anon.138 { %struct.anon.139 { ptr @.str.164, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.133, %union.anon.138 { %struct.anon.139 { ptr @.str.80, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.163, %union.anon.138 { %struct.anon.139 { ptr @.str.165, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.163, %union.anon.138 { %struct.anon.139 { ptr @.str.166, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.163, %union.anon.138 { %struct.anon.139 { ptr @.str.167, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.163, %union.anon.138 { %struct.anon.139 { ptr @.str.168, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.163, %union.anon.138 { %struct.anon.139 { ptr @.str.169, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.163, %union.anon.138 { %struct.anon.139 { ptr @.str.170, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.163, %union.anon.138 { %struct.anon.139 { ptr @.str.171, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.157, %union.anon.138 { %struct.anon.139 { ptr @.str.158, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [96 x i8] zeroinitializer }, align 32
@event_class_tcp_probe = internal global %struct.trace_event_class { ptr @str__tcp__trace_system_name, ptr @trace_event_raw_event_tcp_probe, ptr @perf_trace_tcp_probe, ptr @trace_event_reg, ptr @trace_event_fields_tcp_probe, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_tcp_probe, i64 24), ptr getelementptr (i8, ptr @event_class_tcp_probe, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_tcp_probe = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_tcp_probe, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_tcp_probe = internal global { [385 x i8], [127 x i8] } { [385 x i8] c"\22family=%s src=%pISpc dest=%pISpc mark=%#x data_len=%d snd_nxt=%#x snd_una=%#x snd_cwnd=%u ssthresh=%u snd_wnd=%u srtt=%u rcv_wnd=%u sock_cookie=%llx\22, __print_symbolic(REC->family, { 2, \22AF_INET\22 }, { 10, \22AF_INET6\22 }), REC->saddr, REC->daddr, REC->mark, REC->data_len, REC->snd_nxt, REC->snd_una, REC->snd_cwnd, REC->ssthresh, REC->snd_wnd, REC->srtt, REC->rcv_wnd, REC->sock_cookie\00", [127 x i8] zeroinitializer }, align 32
@event_tcp_probe = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_tcp_probe, %union.anon.140 { ptr @__tracepoint_tcp_probe }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_tcp_probe }, ptr @print_fmt_tcp_probe, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_tcp_probe = internal global ptr @event_tcp_probe, section "_ftrace_events", align 4
@trace_event_fields_tcp_event_skb = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.64, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.162, %union.anon.138 { %struct.anon.139 { ptr @.str.138, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.162, %union.anon.138 { %struct.anon.139 { ptr @.str.139, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_tcp_event_skb = internal global %struct.trace_event_class { ptr @str__tcp__trace_system_name, ptr @trace_event_raw_event_tcp_event_skb, ptr @perf_trace_tcp_event_skb, ptr @trace_event_reg, ptr @trace_event_fields_tcp_event_skb, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_tcp_event_skb, i64 24), ptr getelementptr (i8, ptr @event_class_tcp_event_skb, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_tcp_event_skb = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_tcp_event_skb, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_tcp_event_skb = internal global { [49 x i8], [47 x i8] } { [49 x i8] c"\22src=%pISpc dest=%pISpc\22, REC->saddr, REC->daddr\00", [47 x i8] zeroinitializer }, align 32
@event_tcp_bad_csum = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_tcp_event_skb, %union.anon.140 { ptr @__tracepoint_tcp_bad_csum }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_tcp_event_skb }, ptr @print_fmt_tcp_event_skb, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_tcp_bad_csum = internal global ptr @event_tcp_bad_csum, section "_ftrace_events", align 4
@__bpf_trace_tp_map_tcp_retransmit_skb = internal global %union.anon.240 { %struct.bpf_raw_event_map { ptr @__tracepoint_tcp_retransmit_skb, ptr @__bpf_trace_tcp_event_sk_skb, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_tcp_send_reset = internal global %union.anon.241 { %struct.bpf_raw_event_map { ptr @__tracepoint_tcp_send_reset, ptr @__bpf_trace_tcp_event_sk_skb, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_tcp_receive_reset = internal global %union.anon.242 { %struct.bpf_raw_event_map { ptr @__tracepoint_tcp_receive_reset, ptr @__bpf_trace_tcp_event_sk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_tcp_destroy_sock = internal global %union.anon.243 { %struct.bpf_raw_event_map { ptr @__tracepoint_tcp_destroy_sock, ptr @__bpf_trace_tcp_event_sk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_tcp_rcv_space_adjust = internal global %union.anon.244 { %struct.bpf_raw_event_map { ptr @__tracepoint_tcp_rcv_space_adjust, ptr @__bpf_trace_tcp_event_sk, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_tcp_retransmit_synack = internal global %union.anon.245 { %struct.bpf_raw_event_map { ptr @__tracepoint_tcp_retransmit_synack, ptr @__bpf_trace_tcp_retransmit_synack, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_tcp_probe = internal global %union.anon.246 { %struct.bpf_raw_event_map { ptr @__tracepoint_tcp_probe, ptr @__bpf_trace_tcp_probe, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_tcp_bad_csum = internal global %union.anon.247 { %struct.bpf_raw_event_map { ptr @__tracepoint_tcp_bad_csum, ptr @__bpf_trace_tcp_event_skb, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_fib_table_lookup = internal constant [17 x i8] c"fib_table_lookup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_fib_table_lookup = dso_local global %struct.static_call_key { ptr @__traceiter_fib_table_lookup }, align 4
@__tracepoint_fib_table_lookup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_fib_table_lookup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_fib_table_lookup, ptr null, ptr @__traceiter_fib_table_lookup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_fib_table_lookup = internal constant ptr @__tracepoint_fib_table_lookup, section "__tracepoints_ptrs", align 4
@str__fib__trace_system_name = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"fib\00", [28 x i8] zeroinitializer }, align 32
@trace_event_fields_fib_table_lookup = internal global { [16 x %struct.trace_event_fields], [96 x i8] } { [16 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.175, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.176, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.177, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.178, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.179, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.180, %union.anon.138 { %struct.anon.139 { ptr @.str.181, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.180, %union.anon.138 { %struct.anon.139 { ptr @.str.182, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.180, %union.anon.138 { %struct.anon.139 { ptr @.str.183, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.184, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.185, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.186, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.187, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.134, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.135, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.70, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [96 x i8] zeroinitializer }, align 32
@event_class_fib_table_lookup = internal global %struct.trace_event_class { ptr @str__fib__trace_system_name, ptr @trace_event_raw_event_fib_table_lookup, ptr @perf_trace_fib_table_lookup, ptr @trace_event_reg, ptr @trace_event_fields_fib_table_lookup, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_fib_table_lookup, i64 24), ptr getelementptr (i8, ptr @event_class_fib_table_lookup, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_fib_table_lookup = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_fib_table_lookup, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_fib_table_lookup = internal global { [279 x i8], [73 x i8] } { [279 x i8] c"\22table %u oif %d iif %d proto %u %pI4/%u -> %pI4/%u tos %d scope %d flags %x ==> dev %s gw %pI4/%pI6c err %d\22, REC->tb_id, REC->oif, REC->iif, REC->proto, REC->src, REC->sport, REC->dst, REC->dport, REC->tos, REC->scope, REC->flags, __get_str(name), REC->gw4, REC->gw6, REC->err\00", [73 x i8] zeroinitializer }, align 32
@event_fib_table_lookup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_fib_table_lookup, %union.anon.140 { ptr @__tracepoint_fib_table_lookup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_fib_table_lookup }, ptr @print_fmt_fib_table_lookup, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_fib_table_lookup = internal global ptr @event_fib_table_lookup, section "_ftrace_events", align 4
@__bpf_trace_tp_map_fib_table_lookup = internal global %union.anon.250 { %struct.bpf_raw_event_map { ptr @__tracepoint_fib_table_lookup, ptr @__bpf_trace_fib_table_lookup, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_qdisc_dequeue = internal constant [14 x i8] c"qdisc_dequeue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qdisc_dequeue = dso_local global %struct.static_call_key { ptr @__traceiter_qdisc_dequeue }, align 4
@__tracepoint_qdisc_dequeue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qdisc_dequeue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qdisc_dequeue, ptr null, ptr @__traceiter_qdisc_dequeue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qdisc_dequeue = internal constant ptr @__tracepoint_qdisc_dequeue, section "__tracepoints_ptrs", align 4
@__tpstrtab_qdisc_enqueue = internal constant [14 x i8] c"qdisc_enqueue\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qdisc_enqueue = dso_local global %struct.static_call_key { ptr @__traceiter_qdisc_enqueue }, align 4
@__tracepoint_qdisc_enqueue = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qdisc_enqueue, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qdisc_enqueue, ptr null, ptr @__traceiter_qdisc_enqueue, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qdisc_enqueue = internal constant ptr @__tracepoint_qdisc_enqueue, section "__tracepoints_ptrs", align 4
@__tpstrtab_qdisc_reset = internal constant [12 x i8] c"qdisc_reset\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qdisc_reset = dso_local global %struct.static_call_key { ptr @__traceiter_qdisc_reset }, align 4
@__tracepoint_qdisc_reset = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qdisc_reset, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qdisc_reset, ptr null, ptr @__traceiter_qdisc_reset, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qdisc_reset = internal constant ptr @__tracepoint_qdisc_reset, section "__tracepoints_ptrs", align 4
@__tpstrtab_qdisc_destroy = internal constant [14 x i8] c"qdisc_destroy\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qdisc_destroy = dso_local global %struct.static_call_key { ptr @__traceiter_qdisc_destroy }, align 4
@__tracepoint_qdisc_destroy = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qdisc_destroy, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qdisc_destroy, ptr null, ptr @__traceiter_qdisc_destroy, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qdisc_destroy = internal constant ptr @__tracepoint_qdisc_destroy, section "__tracepoints_ptrs", align 4
@__tpstrtab_qdisc_create = internal constant [13 x i8] c"qdisc_create\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_qdisc_create = dso_local global %struct.static_call_key { ptr @__traceiter_qdisc_create }, align 4
@__tracepoint_qdisc_create = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_qdisc_create, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_qdisc_create, ptr null, ptr @__traceiter_qdisc_create, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_qdisc_create = internal constant ptr @__tracepoint_qdisc_create, section "__tracepoints_ptrs", align 4
@str__qdisc__trace_system_name = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"qdisc\00", [26 x i8] zeroinitializer }, align 32
@trace_event_fields_qdisc_dequeue = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.189, %union.anon.138 { %struct.anon.139 { ptr @.str.190, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.191, %union.anon.138 { %struct.anon.139 { ptr @.str.192, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.193, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.48, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.194, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.195, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.196, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.198, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_qdisc_dequeue = internal global %struct.trace_event_class { ptr @str__qdisc__trace_system_name, ptr @trace_event_raw_event_qdisc_dequeue, ptr @perf_trace_qdisc_dequeue, ptr @trace_event_reg, ptr @trace_event_fields_qdisc_dequeue, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qdisc_dequeue, i64 24), ptr getelementptr (i8, ptr @event_class_qdisc_dequeue, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qdisc_dequeue = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qdisc_dequeue, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qdisc_dequeue = internal global { [174 x i8], [50 x i8] } { [174 x i8] c"\22dequeue ifindex=%d qdisc handle=0x%X parent=0x%X txq_state=0x%lX packets=%d skbaddr=%px\22, REC->ifindex, REC->handle, REC->parent, REC->txq_state, REC->packets, REC->skbaddr\00", [50 x i8] zeroinitializer }, align 32
@event_qdisc_dequeue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qdisc_dequeue, %union.anon.140 { ptr @__tracepoint_qdisc_dequeue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qdisc_dequeue }, ptr @print_fmt_qdisc_dequeue, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qdisc_dequeue = internal global ptr @event_qdisc_dequeue, section "_ftrace_events", align 4
@trace_event_fields_qdisc_enqueue = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.189, %union.anon.138 { %struct.anon.139 { ptr @.str.190, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.191, %union.anon.138 { %struct.anon.139 { ptr @.str.192, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.48, %union.anon.138 { %struct.anon.139 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.194, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.195, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.196, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_qdisc_enqueue = internal global %struct.trace_event_class { ptr @str__qdisc__trace_system_name, ptr @trace_event_raw_event_qdisc_enqueue, ptr @perf_trace_qdisc_enqueue, ptr @trace_event_reg, ptr @trace_event_fields_qdisc_enqueue, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qdisc_enqueue, i64 24), ptr getelementptr (i8, ptr @event_class_qdisc_enqueue, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qdisc_enqueue = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qdisc_enqueue, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qdisc_enqueue = internal global { [117 x i8], [43 x i8] } { [117 x i8] c"\22enqueue ifindex=%d qdisc handle=0x%X parent=0x%X skbaddr=%px\22, REC->ifindex, REC->handle, REC->parent, REC->skbaddr\00", [43 x i8] zeroinitializer }, align 32
@event_qdisc_enqueue = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qdisc_enqueue, %union.anon.140 { ptr @__tracepoint_qdisc_enqueue }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qdisc_enqueue }, ptr @print_fmt_qdisc_enqueue, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qdisc_enqueue = internal global ptr @event_qdisc_enqueue, section "_ftrace_events", align 4
@trace_event_fields_qdisc_reset = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.126, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.196, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.195, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_qdisc_reset = internal global %struct.trace_event_class { ptr @str__qdisc__trace_system_name, ptr @trace_event_raw_event_qdisc_reset, ptr @perf_trace_qdisc_reset, ptr @trace_event_reg, ptr @trace_event_fields_qdisc_reset, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qdisc_reset, i64 24), ptr getelementptr (i8, ptr @event_class_qdisc_reset, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qdisc_reset = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qdisc_reset, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qdisc_reset = internal global { [212 x i8], [44 x i8] } { [212 x i8] c"\22dev=%s kind=%s parent=%x:%x handle=%x:%x\22, __get_str(dev), __get_str(kind), ((REC->parent)&(0xFFFF0000U)) >> 16, ((REC->parent)&(0x0000FFFFU)), ((REC->handle)&(0xFFFF0000U)) >> 16, ((REC->handle)&(0x0000FFFFU))\00", [44 x i8] zeroinitializer }, align 32
@event_qdisc_reset = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qdisc_reset, %union.anon.140 { ptr @__tracepoint_qdisc_reset }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qdisc_reset }, ptr @print_fmt_qdisc_reset, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qdisc_reset = internal global ptr @event_qdisc_reset, section "_ftrace_events", align 4
@trace_event_fields_qdisc_destroy = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.126, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.196, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.195, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_qdisc_destroy = internal global %struct.trace_event_class { ptr @str__qdisc__trace_system_name, ptr @trace_event_raw_event_qdisc_destroy, ptr @perf_trace_qdisc_destroy, ptr @trace_event_reg, ptr @trace_event_fields_qdisc_destroy, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qdisc_destroy, i64 24), ptr getelementptr (i8, ptr @event_class_qdisc_destroy, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qdisc_destroy = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qdisc_destroy, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qdisc_destroy = internal global { [212 x i8], [44 x i8] } { [212 x i8] c"\22dev=%s kind=%s parent=%x:%x handle=%x:%x\22, __get_str(dev), __get_str(kind), ((REC->parent)&(0xFFFF0000U)) >> 16, ((REC->parent)&(0x0000FFFFU)), ((REC->handle)&(0xFFFF0000U)) >> 16, ((REC->handle)&(0x0000FFFFU))\00", [44 x i8] zeroinitializer }, align 32
@event_qdisc_destroy = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qdisc_destroy, %union.anon.140 { ptr @__tracepoint_qdisc_destroy }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qdisc_destroy }, ptr @print_fmt_qdisc_destroy, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qdisc_destroy = internal global ptr @event_qdisc_destroy, section "_ftrace_events", align 4
@trace_event_fields_qdisc_create = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.126, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.196, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_qdisc_create = internal global %struct.trace_event_class { ptr @str__qdisc__trace_system_name, ptr @trace_event_raw_event_qdisc_create, ptr @perf_trace_qdisc_create, ptr @trace_event_reg, ptr @trace_event_fields_qdisc_create, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_qdisc_create, i64 24), ptr getelementptr (i8, ptr @event_class_qdisc_create, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_qdisc_create = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_qdisc_create, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_qdisc_create = internal global { [131 x i8], [61 x i8] } { [131 x i8] c"\22dev=%s kind=%s parent=%x:%x\22, __get_str(dev), __get_str(kind), ((REC->parent)&(0xFFFF0000U)) >> 16, ((REC->parent)&(0x0000FFFFU))\00", [61 x i8] zeroinitializer }, align 32
@event_qdisc_create = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_qdisc_create, %union.anon.140 { ptr @__tracepoint_qdisc_create }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_qdisc_create }, ptr @print_fmt_qdisc_create, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_qdisc_create = internal global ptr @event_qdisc_create, section "_ftrace_events", align 4
@__bpf_trace_tp_map_qdisc_dequeue = internal global %union.anon.251 { %struct.bpf_raw_event_map { ptr @__tracepoint_qdisc_dequeue, ptr @__bpf_trace_qdisc_dequeue, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qdisc_enqueue = internal global %union.anon.252 { %struct.bpf_raw_event_map { ptr @__tracepoint_qdisc_enqueue, ptr @__bpf_trace_qdisc_enqueue, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qdisc_reset = internal global %union.anon.253 { %struct.bpf_raw_event_map { ptr @__tracepoint_qdisc_reset, ptr @__bpf_trace_qdisc_reset, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qdisc_destroy = internal global %union.anon.254 { %struct.bpf_raw_event_map { ptr @__tracepoint_qdisc_destroy, ptr @__bpf_trace_qdisc_destroy, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_qdisc_create = internal global %union.anon.255 { %struct.bpf_raw_event_map { ptr @__tracepoint_qdisc_create, ptr @__bpf_trace_qdisc_create, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_br_fdb_add = internal constant [11 x i8] c"br_fdb_add\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_br_fdb_add = dso_local global %struct.static_call_key { ptr @__traceiter_br_fdb_add }, align 4
@__tracepoint_br_fdb_add = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_br_fdb_add, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_br_fdb_add, ptr null, ptr @__traceiter_br_fdb_add, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_br_fdb_add = internal constant ptr @__tracepoint_br_fdb_add, section "__tracepoints_ptrs", align 4
@__tpstrtab_br_fdb_external_learn_add = internal constant [26 x i8] c"br_fdb_external_learn_add\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_br_fdb_external_learn_add = dso_local global %struct.static_call_key { ptr @__traceiter_br_fdb_external_learn_add }, align 4
@__tracepoint_br_fdb_external_learn_add = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_br_fdb_external_learn_add, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_br_fdb_external_learn_add, ptr null, ptr @__traceiter_br_fdb_external_learn_add, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_br_fdb_external_learn_add = internal constant ptr @__tracepoint_br_fdb_external_learn_add, section "__tracepoints_ptrs", align 4
@__tpstrtab_fdb_delete = internal constant [11 x i8] c"fdb_delete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_fdb_delete = dso_local global %struct.static_call_key { ptr @__traceiter_fdb_delete }, align 4
@__tracepoint_fdb_delete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_fdb_delete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_fdb_delete, ptr null, ptr @__traceiter_fdb_delete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_fdb_delete = internal constant ptr @__tracepoint_fdb_delete, section "__tracepoints_ptrs", align 4
@__tpstrtab_br_fdb_update = internal constant [14 x i8] c"br_fdb_update\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_br_fdb_update = dso_local global %struct.static_call_key { ptr @__traceiter_br_fdb_update }, align 4
@__tracepoint_br_fdb_update = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_br_fdb_update, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_br_fdb_update, ptr null, ptr @__traceiter_br_fdb_update, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_br_fdb_update = internal constant ptr @__tracepoint_br_fdb_update, section "__tracepoints_ptrs", align 4
@str__bridge__trace_system_name = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"bridge\00", [25 x i8] zeroinitializer }, align 32
@trace_event_fields_br_fdb_add = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.204, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.205, %union.anon.138 { %struct.anon.139 { ptr @.str.206, i32 6, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.207, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.208, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_br_fdb_add = internal global %struct.trace_event_class { ptr @str__bridge__trace_system_name, ptr @trace_event_raw_event_br_fdb_add, ptr @perf_trace_br_fdb_add, ptr @trace_event_reg, ptr @trace_event_fields_br_fdb_add, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_br_fdb_add, i64 24), ptr getelementptr (i8, ptr @event_class_br_fdb_add, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_br_fdb_add = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_br_fdb_add, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_br_fdb_add = internal global { [223 x i8], [33 x i8] } { [223 x i8] c"\22dev %s addr %02x:%02x:%02x:%02x:%02x:%02x vid %u nlh_flags %04x ndm_flags %02x\22, __get_str(dev), REC->addr[0], REC->addr[1], REC->addr[2], REC->addr[3], REC->addr[4], REC->addr[5], REC->vid, REC->nlh_flags, REC->ndm_flags\00", [33 x i8] zeroinitializer }, align 32
@event_br_fdb_add = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_br_fdb_add, %union.anon.140 { ptr @__tracepoint_br_fdb_add }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_br_fdb_add }, ptr @print_fmt_br_fdb_add, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_br_fdb_add = internal global ptr @event_br_fdb_add, section "_ftrace_events", align 4
@trace_event_fields_br_fdb_external_learn_add = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.211, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.205, %union.anon.138 { %struct.anon.139 { ptr @.str.206, i32 6, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.207, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_br_fdb_external_learn_add = internal global %struct.trace_event_class { ptr @str__bridge__trace_system_name, ptr @trace_event_raw_event_br_fdb_external_learn_add, ptr @perf_trace_br_fdb_external_learn_add, ptr @trace_event_reg, ptr @trace_event_fields_br_fdb_external_learn_add, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_br_fdb_external_learn_add, i64 24), ptr getelementptr (i8, ptr @event_class_br_fdb_external_learn_add, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_br_fdb_external_learn_add = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_br_fdb_external_learn_add, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_br_fdb_external_learn_add = internal global { [191 x i8], [33 x i8] } { [191 x i8] c"\22br_dev %s port %s addr %02x:%02x:%02x:%02x:%02x:%02x vid %u\22, __get_str(br_dev), __get_str(dev), REC->addr[0], REC->addr[1], REC->addr[2], REC->addr[3], REC->addr[4], REC->addr[5], REC->vid\00", [33 x i8] zeroinitializer }, align 32
@event_br_fdb_external_learn_add = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_br_fdb_external_learn_add, %union.anon.140 { ptr @__tracepoint_br_fdb_external_learn_add }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_br_fdb_external_learn_add }, ptr @print_fmt_br_fdb_external_learn_add, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_br_fdb_external_learn_add = internal global ptr @event_br_fdb_external_learn_add, section "_ftrace_events", align 4
@trace_event_fields_fdb_delete = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.211, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.205, %union.anon.138 { %struct.anon.139 { ptr @.str.206, i32 6, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.207, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_fdb_delete = internal global %struct.trace_event_class { ptr @str__bridge__trace_system_name, ptr @trace_event_raw_event_fdb_delete, ptr @perf_trace_fdb_delete, ptr @trace_event_reg, ptr @trace_event_fields_fdb_delete, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_fdb_delete, i64 24), ptr getelementptr (i8, ptr @event_class_fdb_delete, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_fdb_delete = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_fdb_delete, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_fdb_delete = internal global { [190 x i8], [34 x i8] } { [190 x i8] c"\22br_dev %s dev %s addr %02x:%02x:%02x:%02x:%02x:%02x vid %u\22, __get_str(br_dev), __get_str(dev), REC->addr[0], REC->addr[1], REC->addr[2], REC->addr[3], REC->addr[4], REC->addr[5], REC->vid\00", [34 x i8] zeroinitializer }, align 32
@event_fdb_delete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_fdb_delete, %union.anon.140 { ptr @__tracepoint_fdb_delete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_fdb_delete }, ptr @print_fmt_fdb_delete, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_fdb_delete = internal global ptr @event_fdb_delete, section "_ftrace_events", align 4
@trace_event_fields_br_fdb_update = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.211, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.205, %union.anon.138 { %struct.anon.139 { ptr @.str.206, i32 6, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.71, %union.anon.138 { %struct.anon.139 { ptr @.str.207, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.183, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_br_fdb_update = internal global %struct.trace_event_class { ptr @str__bridge__trace_system_name, ptr @trace_event_raw_event_br_fdb_update, ptr @perf_trace_br_fdb_update, ptr @trace_event_reg, ptr @trace_event_fields_br_fdb_update, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_br_fdb_update, i64 24), ptr getelementptr (i8, ptr @event_class_br_fdb_update, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_br_fdb_update = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_br_fdb_update, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_br_fdb_update = internal global { [217 x i8], [39 x i8] } { [217 x i8] c"\22br_dev %s source %s addr %02x:%02x:%02x:%02x:%02x:%02x vid %u flags 0x%lx\22, __get_str(br_dev), __get_str(dev), REC->addr[0], REC->addr[1], REC->addr[2], REC->addr[3], REC->addr[4], REC->addr[5], REC->vid, REC->flags\00", [39 x i8] zeroinitializer }, align 32
@event_br_fdb_update = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_br_fdb_update, %union.anon.140 { ptr @__tracepoint_br_fdb_update }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_br_fdb_update }, ptr @print_fmt_br_fdb_update, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_br_fdb_update = internal global ptr @event_br_fdb_update, section "_ftrace_events", align 4
@__bpf_trace_tp_map_br_fdb_add = internal global %union.anon.263 { %struct.bpf_raw_event_map { ptr @__tracepoint_br_fdb_add, ptr @__bpf_trace_br_fdb_add, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_br_fdb_external_learn_add = internal global %union.anon.264 { %struct.bpf_raw_event_map { ptr @__tracepoint_br_fdb_external_learn_add, ptr @__bpf_trace_br_fdb_external_learn_add, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_fdb_delete = internal global %union.anon.265 { %struct.bpf_raw_event_map { ptr @__tracepoint_fdb_delete, ptr @__bpf_trace_fdb_delete, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_br_fdb_update = internal global %union.anon.266 { %struct.bpf_raw_event_map { ptr @__tracepoint_br_fdb_update, ptr @__bpf_trace_br_fdb_update, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__kstrtab___tracepoint_br_fdb_add = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_br_fdb_add = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_br_fdb_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_br_fdb_add to i32), ptr @__kstrtab___tracepoint_br_fdb_add, ptr @__kstrtabns___tracepoint_br_fdb_add }, section "___ksymtab_gpl+__tracepoint_br_fdb_add", align 4
@__kstrtab___traceiter_br_fdb_add = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_br_fdb_add = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_br_fdb_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_br_fdb_add to i32), ptr @__kstrtab___traceiter_br_fdb_add, ptr @__kstrtabns___traceiter_br_fdb_add }, section "___ksymtab_gpl+__traceiter_br_fdb_add", align 4
@__kstrtab___SCK__tp_func_br_fdb_add = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_br_fdb_add = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_br_fdb_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_br_fdb_add to i32), ptr @__kstrtab___SCK__tp_func_br_fdb_add, ptr @__kstrtabns___SCK__tp_func_br_fdb_add }, section "___ksymtab_gpl+__SCK__tp_func_br_fdb_add", align 4
@__kstrtab___tracepoint_br_fdb_external_learn_add = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_br_fdb_external_learn_add = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_br_fdb_external_learn_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_br_fdb_external_learn_add to i32), ptr @__kstrtab___tracepoint_br_fdb_external_learn_add, ptr @__kstrtabns___tracepoint_br_fdb_external_learn_add }, section "___ksymtab_gpl+__tracepoint_br_fdb_external_learn_add", align 4
@__kstrtab___traceiter_br_fdb_external_learn_add = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_br_fdb_external_learn_add = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_br_fdb_external_learn_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_br_fdb_external_learn_add to i32), ptr @__kstrtab___traceiter_br_fdb_external_learn_add, ptr @__kstrtabns___traceiter_br_fdb_external_learn_add }, section "___ksymtab_gpl+__traceiter_br_fdb_external_learn_add", align 4
@__kstrtab___SCK__tp_func_br_fdb_external_learn_add = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_br_fdb_external_learn_add = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_br_fdb_external_learn_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_br_fdb_external_learn_add to i32), ptr @__kstrtab___SCK__tp_func_br_fdb_external_learn_add, ptr @__kstrtabns___SCK__tp_func_br_fdb_external_learn_add }, section "___ksymtab_gpl+__SCK__tp_func_br_fdb_external_learn_add", align 4
@__kstrtab___tracepoint_fdb_delete = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_fdb_delete = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_fdb_delete = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_fdb_delete to i32), ptr @__kstrtab___tracepoint_fdb_delete, ptr @__kstrtabns___tracepoint_fdb_delete }, section "___ksymtab_gpl+__tracepoint_fdb_delete", align 4
@__kstrtab___traceiter_fdb_delete = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_fdb_delete = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_fdb_delete = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_fdb_delete to i32), ptr @__kstrtab___traceiter_fdb_delete, ptr @__kstrtabns___traceiter_fdb_delete }, section "___ksymtab_gpl+__traceiter_fdb_delete", align 4
@__kstrtab___SCK__tp_func_fdb_delete = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_fdb_delete = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_fdb_delete = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_fdb_delete to i32), ptr @__kstrtab___SCK__tp_func_fdb_delete, ptr @__kstrtabns___SCK__tp_func_fdb_delete }, section "___ksymtab_gpl+__SCK__tp_func_fdb_delete", align 4
@__kstrtab___tracepoint_br_fdb_update = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_br_fdb_update = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_br_fdb_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_br_fdb_update to i32), ptr @__kstrtab___tracepoint_br_fdb_update, ptr @__kstrtabns___tracepoint_br_fdb_update }, section "___ksymtab_gpl+__tracepoint_br_fdb_update", align 4
@__kstrtab___traceiter_br_fdb_update = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_br_fdb_update = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_br_fdb_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_br_fdb_update to i32), ptr @__kstrtab___traceiter_br_fdb_update, ptr @__kstrtabns___traceiter_br_fdb_update }, section "___ksymtab_gpl+__traceiter_br_fdb_update", align 4
@__kstrtab___SCK__tp_func_br_fdb_update = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_br_fdb_update = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_br_fdb_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_br_fdb_update to i32), ptr @__kstrtab___SCK__tp_func_br_fdb_update, ptr @__kstrtabns___SCK__tp_func_br_fdb_update }, section "___ksymtab_gpl+__SCK__tp_func_br_fdb_update", align 4
@__tpstrtab_page_pool_release = internal constant [18 x i8] c"page_pool_release\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_page_pool_release = dso_local global %struct.static_call_key { ptr @__traceiter_page_pool_release }, align 4
@__tracepoint_page_pool_release = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_page_pool_release, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_page_pool_release, ptr null, ptr @__traceiter_page_pool_release, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_page_pool_release = internal constant ptr @__tracepoint_page_pool_release, section "__tracepoints_ptrs", align 4
@__tpstrtab_page_pool_state_release = internal constant [24 x i8] c"page_pool_state_release\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_page_pool_state_release = dso_local global %struct.static_call_key { ptr @__traceiter_page_pool_state_release }, align 4
@__tracepoint_page_pool_state_release = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_page_pool_state_release, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_page_pool_state_release, ptr null, ptr @__traceiter_page_pool_state_release, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_page_pool_state_release = internal constant ptr @__tracepoint_page_pool_state_release, section "__tracepoints_ptrs", align 4
@__tpstrtab_page_pool_state_hold = internal constant [21 x i8] c"page_pool_state_hold\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_page_pool_state_hold = dso_local global %struct.static_call_key { ptr @__traceiter_page_pool_state_hold }, align 4
@__tracepoint_page_pool_state_hold = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_page_pool_state_hold, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_page_pool_state_hold, ptr null, ptr @__traceiter_page_pool_state_hold, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_page_pool_state_hold = internal constant ptr @__tracepoint_page_pool_state_hold, section "__tracepoints_ptrs", align 4
@__tpstrtab_page_pool_update_nid = internal constant [21 x i8] c"page_pool_update_nid\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_page_pool_update_nid = dso_local global %struct.static_call_key { ptr @__traceiter_page_pool_update_nid }, align 4
@__tracepoint_page_pool_update_nid = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_page_pool_update_nid, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_page_pool_update_nid, ptr null, ptr @__traceiter_page_pool_update_nid, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_page_pool_update_nid = internal constant ptr @__tracepoint_page_pool_update_nid, section "__tracepoints_ptrs", align 4
@str__page_pool__trace_system_name = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"page_pool\00", [22 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPACT_SKIPPED\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_SKIPPED = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.27, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_SKIPPED = internal global ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, section "_ftrace_eval_map", align 4
@.str.28 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_DEFERRED\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_DEFERRED = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.28, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_DEFERRED = internal global ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, section "_ftrace_eval_map", align 4
@.str.29 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_CONTINUE\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_CONTINUE = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.29, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_CONTINUE = internal global ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, section "_ftrace_eval_map", align 4
@.str.30 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPACT_SUCCESS\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_SUCCESS = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.30, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_SUCCESS = internal global ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, section "_ftrace_eval_map", align 4
@.str.31 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"COMPACT_PARTIAL_SKIPPED\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.31, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED = internal global ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, section "_ftrace_eval_map", align 4
@.str.32 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"COMPACT_COMPLETE\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_COMPLETE = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.32, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_COMPLETE = internal global ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, section "_ftrace_eval_map", align 4
@.str.33 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"COMPACT_NO_SUITABLE_PAGE\00", [39 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.33, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE = internal global ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, section "_ftrace_eval_map", align 4
@.str.34 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"COMPACT_NOT_SUITABLE_ZONE\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.34, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE = internal global ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, section "_ftrace_eval_map", align 4
@.str.35 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"COMPACT_CONTENDED\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_CONTENDED = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.35, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_CONTENDED = internal global ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, section "_ftrace_eval_map", align 4
@.str.36 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"COMPACT_PRIO_SYNC_FULL\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.36, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, section "_ftrace_eval_map", align 4
@.str.37 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"COMPACT_PRIO_SYNC_LIGHT\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.37, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, section "_ftrace_eval_map", align 4
@.str.38 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"COMPACT_PRIO_ASYNC\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_COMPACT_PRIO_ASYNC = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.38, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_COMPACT_PRIO_ASYNC = internal global ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, section "_ftrace_eval_map", align 4
@.str.39 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ZONE_DMA\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_DMA = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.39, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_DMA = internal global ptr @__TRACE_SYSTEM_ZONE_DMA, section "_ftrace_eval_map", align 4
@.str.40 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ZONE_NORMAL\00", [20 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_NORMAL = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.40, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_NORMAL = internal global ptr @__TRACE_SYSTEM_ZONE_NORMAL, section "_ftrace_eval_map", align 4
@.str.41 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ZONE_HIGHMEM\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_HIGHMEM = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.41, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_HIGHMEM = internal global ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, section "_ftrace_eval_map", align 4
@.str.42 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"ZONE_MOVABLE\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_ZONE_MOVABLE = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.42, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_ZONE_MOVABLE = internal global ptr @__TRACE_SYSTEM_ZONE_MOVABLE, section "_ftrace_eval_map", align 4
@.str.43 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LRU_INACTIVE_ANON\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_INACTIVE_ANON = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.43, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_INACTIVE_ANON = internal global ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, section "_ftrace_eval_map", align 4
@.str.44 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_ACTIVE_ANON\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_ACTIVE_ANON = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.44, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_ACTIVE_ANON = internal global ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, section "_ftrace_eval_map", align 4
@.str.45 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LRU_INACTIVE_FILE\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_INACTIVE_FILE = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.45, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_INACTIVE_FILE = internal global ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, section "_ftrace_eval_map", align 4
@.str.46 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_ACTIVE_FILE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_ACTIVE_FILE = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.46, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_ACTIVE_FILE = internal global ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, section "_ftrace_eval_map", align 4
@.str.47 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LRU_UNEVICTABLE\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_LRU_UNEVICTABLE = internal global %struct.trace_eval_map { ptr @str__page_pool__trace_system_name, ptr @.str.47, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_LRU_UNEVICTABLE = internal global ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, section "_ftrace_eval_map", align 4
@trace_event_fields_page_pool_release = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.215, %union.anon.138 { %struct.anon.139 { ptr @.str.216, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.217, %union.anon.138 { %struct.anon.139 { ptr @.str.218, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.219, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.220, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.221, %union.anon.138 { %struct.anon.139 { ptr @.str.222, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_page_pool_release = internal global %struct.trace_event_class { ptr @str__page_pool__trace_system_name, ptr @trace_event_raw_event_page_pool_release, ptr @perf_trace_page_pool_release, ptr @trace_event_reg, ptr @trace_event_fields_page_pool_release, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_page_pool_release, i64 24), ptr getelementptr (i8, ptr @event_class_page_pool_release, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_page_pool_release = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_page_pool_release, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_page_pool_release = internal global { [116 x i8], [44 x i8] } { [116 x i8] c"\22page_pool=%p inflight=%d hold=%u release=%u cnt=%llu\22, REC->pool, REC->inflight, REC->hold, REC->release, REC->cnt\00", [44 x i8] zeroinitializer }, align 32
@event_page_pool_release = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_page_pool_release, %union.anon.140 { ptr @__tracepoint_page_pool_release }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_page_pool_release }, ptr @print_fmt_page_pool_release, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_page_pool_release = internal global ptr @event_page_pool_release, section "_ftrace_events", align 4
@trace_event_fields_page_pool_state_release = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.215, %union.anon.138 { %struct.anon.139 { ptr @.str.216, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.224, %union.anon.138 { %struct.anon.139 { ptr @.str.225, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.220, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.226, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_page_pool_state_release = internal global %struct.trace_event_class { ptr @str__page_pool__trace_system_name, ptr @trace_event_raw_event_page_pool_state_release, ptr @perf_trace_page_pool_state_release, ptr @trace_event_reg, ptr @trace_event_fields_page_pool_state_release, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_page_pool_state_release, i64 24), ptr getelementptr (i8, ptr @event_class_page_pool_state_release, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_page_pool_state_release = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_page_pool_state_release, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_page_pool_state_release = internal global { [90 x i8], [38 x i8] } { [90 x i8] c"\22page_pool=%p page=%p pfn=0x%lx release=%u\22, REC->pool, REC->page, REC->pfn, REC->release\00", [38 x i8] zeroinitializer }, align 32
@event_page_pool_state_release = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_page_pool_state_release, %union.anon.140 { ptr @__tracepoint_page_pool_state_release }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_page_pool_state_release }, ptr @print_fmt_page_pool_state_release, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_page_pool_state_release = internal global ptr @event_page_pool_state_release, section "_ftrace_events", align 4
@trace_event_fields_page_pool_state_hold = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.215, %union.anon.138 { %struct.anon.139 { ptr @.str.216, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.224, %union.anon.138 { %struct.anon.139 { ptr @.str.225, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.219, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.226, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_page_pool_state_hold = internal global %struct.trace_event_class { ptr @str__page_pool__trace_system_name, ptr @trace_event_raw_event_page_pool_state_hold, ptr @perf_trace_page_pool_state_hold, ptr @trace_event_reg, ptr @trace_event_fields_page_pool_state_hold, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_page_pool_state_hold, i64 24), ptr getelementptr (i8, ptr @event_class_page_pool_state_hold, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_page_pool_state_hold = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_page_pool_state_hold, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_page_pool_state_hold = internal global { [84 x i8], [44 x i8] } { [84 x i8] c"\22page_pool=%p page=%p pfn=0x%lx hold=%u\22, REC->pool, REC->page, REC->pfn, REC->hold\00", [44 x i8] zeroinitializer }, align 32
@event_page_pool_state_hold = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_page_pool_state_hold, %union.anon.140 { ptr @__tracepoint_page_pool_state_hold }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_page_pool_state_hold }, ptr @print_fmt_page_pool_state_hold, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_page_pool_state_hold = internal global ptr @event_page_pool_state_hold, section "_ftrace_events", align 4
@trace_event_fields_page_pool_update_nid = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.215, %union.anon.138 { %struct.anon.139 { ptr @.str.216, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.229, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.230, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_page_pool_update_nid = internal global %struct.trace_event_class { ptr @str__page_pool__trace_system_name, ptr @trace_event_raw_event_page_pool_update_nid, ptr @perf_trace_page_pool_update_nid, ptr @trace_event_reg, ptr @trace_event_fields_page_pool_update_nid, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_page_pool_update_nid, i64 24), ptr getelementptr (i8, ptr @event_class_page_pool_update_nid, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_page_pool_update_nid = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_page_pool_update_nid, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_page_pool_update_nid = internal global { [78 x i8], [50 x i8] } { [78 x i8] c"\22page_pool=%p pool_nid=%d new_nid=%d\22, REC->pool, REC->pool_nid, REC->new_nid\00", [50 x i8] zeroinitializer }, align 32
@event_page_pool_update_nid = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_page_pool_update_nid, %union.anon.140 { ptr @__tracepoint_page_pool_update_nid }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_page_pool_update_nid }, ptr @print_fmt_page_pool_update_nid, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_page_pool_update_nid = internal global ptr @event_page_pool_update_nid, section "_ftrace_events", align 4
@__bpf_trace_tp_map_page_pool_release = internal global %union.anon.267 { %struct.bpf_raw_event_map { ptr @__tracepoint_page_pool_release, ptr @__bpf_trace_page_pool_release, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_page_pool_state_release = internal global %union.anon.268 { %struct.bpf_raw_event_map { ptr @__tracepoint_page_pool_state_release, ptr @__bpf_trace_page_pool_state_release, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_page_pool_state_hold = internal global %union.anon.269 { %struct.bpf_raw_event_map { ptr @__tracepoint_page_pool_state_hold, ptr @__bpf_trace_page_pool_state_hold, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_page_pool_update_nid = internal global %union.anon.270 { %struct.bpf_raw_event_map { ptr @__tracepoint_page_pool_update_nid, ptr @__bpf_trace_page_pool_update_nid, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__tpstrtab_neigh_create = internal constant [13 x i8] c"neigh_create\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_neigh_create = dso_local global %struct.static_call_key { ptr @__traceiter_neigh_create }, align 4
@__tracepoint_neigh_create = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_neigh_create, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_neigh_create, ptr null, ptr @__traceiter_neigh_create, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_neigh_create = internal constant ptr @__tracepoint_neigh_create, section "__tracepoints_ptrs", align 4
@__tpstrtab_neigh_update = internal constant [13 x i8] c"neigh_update\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_neigh_update = dso_local global %struct.static_call_key { ptr @__traceiter_neigh_update }, align 4
@__tracepoint_neigh_update = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_neigh_update, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_neigh_update, ptr null, ptr @__traceiter_neigh_update, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_neigh_update = internal constant ptr @__tracepoint_neigh_update, section "__tracepoints_ptrs", align 4
@__tpstrtab_neigh_update_done = internal constant [18 x i8] c"neigh_update_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_neigh_update_done = dso_local global %struct.static_call_key { ptr @__traceiter_neigh_update_done }, align 4
@__tracepoint_neigh_update_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_neigh_update_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_neigh_update_done, ptr null, ptr @__traceiter_neigh_update_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_neigh_update_done = internal constant ptr @__tracepoint_neigh_update_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_neigh_timer_handler = internal constant [20 x i8] c"neigh_timer_handler\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_neigh_timer_handler = dso_local global %struct.static_call_key { ptr @__traceiter_neigh_timer_handler }, align 4
@__tracepoint_neigh_timer_handler = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_neigh_timer_handler, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_neigh_timer_handler, ptr null, ptr @__traceiter_neigh_timer_handler, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_neigh_timer_handler = internal constant ptr @__tracepoint_neigh_timer_handler, section "__tracepoints_ptrs", align 4
@__tpstrtab_neigh_event_send_done = internal constant [22 x i8] c"neigh_event_send_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_neigh_event_send_done = dso_local global %struct.static_call_key { ptr @__traceiter_neigh_event_send_done }, align 4
@__tracepoint_neigh_event_send_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_neigh_event_send_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_neigh_event_send_done, ptr null, ptr @__traceiter_neigh_event_send_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_neigh_event_send_done = internal constant ptr @__tracepoint_neigh_event_send_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_neigh_event_send_dead = internal constant [22 x i8] c"neigh_event_send_dead\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_neigh_event_send_dead = dso_local global %struct.static_call_key { ptr @__traceiter_neigh_event_send_dead }, align 4
@__tracepoint_neigh_event_send_dead = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_neigh_event_send_dead, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_neigh_event_send_dead, ptr null, ptr @__traceiter_neigh_event_send_dead, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_neigh_event_send_dead = internal constant ptr @__tracepoint_neigh_event_send_dead, section "__tracepoints_ptrs", align 4
@__tpstrtab_neigh_cleanup_and_release = internal constant [26 x i8] c"neigh_cleanup_and_release\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_neigh_cleanup_and_release = dso_local global %struct.static_call_key { ptr @__traceiter_neigh_cleanup_and_release }, align 4
@__tracepoint_neigh_cleanup_and_release = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_neigh_cleanup_and_release, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_neigh_cleanup_and_release, ptr null, ptr @__traceiter_neigh_cleanup_and_release, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_neigh_cleanup_and_release = internal constant ptr @__tracepoint_neigh_cleanup_and_release, section "__tracepoints_ptrs", align 4
@str__neigh__trace_system_name = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"neigh\00", [26 x i8] zeroinitializer }, align 32
@trace_event_fields_neigh_create = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.233, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.234, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.235, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.236, %union.anon.138 { %struct.anon.139 { ptr @.str.237, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.238, %union.anon.138 { %struct.anon.139 { ptr @.str.239, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_neigh_create = internal global %struct.trace_event_class { ptr @str__neigh__trace_system_name, ptr @trace_event_raw_event_neigh_create, ptr @perf_trace_neigh_create, ptr @trace_event_reg, ptr @trace_event_fields_neigh_create, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_neigh_create, i64 24), ptr getelementptr (i8, ptr @event_class_neigh_create, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_neigh_create = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_neigh_create, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_neigh_create = internal global { [202 x i8], [54 x i8] } { [202 x i8] c"\22family %d dev %s entries %d primary_key4 %pI4 primary_key6 %pI6c created %d gc_exempt %d\22, REC->family, __get_str(dev), REC->entries, REC->primary_key4, REC->primary_key6, REC->created, REC->gc_exempt\00", [54 x i8] zeroinitializer }, align 32
@event_neigh_create = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_neigh_create, %union.anon.140 { ptr @__tracepoint_neigh_create }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_neigh_create }, ptr @print_fmt_neigh_create, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_neigh_create = internal global ptr @event_neigh_create, section "_ftrace_events", align 4
@trace_event_fields_neigh_update = internal global { [19 x %struct.trace_event_fields], [120 x i8] } { [19 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.241, %union.anon.138 { %struct.anon.139 { ptr @.str.242, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.243, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.183, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.244, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.245, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.246, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.247, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.237, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.239, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.248, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.249, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.250, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.241, %union.anon.138 { %struct.anon.139 { ptr @.str.251, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.252, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.253, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.254, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [120 x i8] zeroinitializer }, align 32
@event_class_neigh_update = internal global %struct.trace_event_class { ptr @str__neigh__trace_system_name, ptr @trace_event_raw_event_neigh_update, ptr @perf_trace_neigh_update, ptr @trace_event_reg, ptr @trace_event_fields_neigh_update, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_neigh_update, i64 24), ptr getelementptr (i8, ptr @event_class_neigh_update, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_neigh_update = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_neigh_update, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_neigh_update = internal global { [885 x i8], [203 x i8] } { [885 x i8] c"\22family %d dev %s lladdr %s flags %02x nud_state %s type %02x dead %d refcnt %d primary_key4 %pI4 primary_key6 %pI6c confirmed %lu updated %lu used %lu new_lladdr %s new_state %s update_flags %02x pid %d\22, REC->family, __get_str(dev), __print_hex_str(REC->lladdr, REC->lladdr_len), REC->flags, __print_symbolic(REC->nud_state, { 0x01, \22incomplete\22 }, { 0x02, \22reachable\22 }, { 0x04, \22stale\22 }, { 0x08, \22delay\22 }, { 0x10, \22probe\22 }, { 0x20, \22failed\22 }, { 0x40, \22noarp\22 }, { 0x80, \22permanent\22}), REC->type, REC->dead, REC->refcnt, REC->primary_key4, REC->primary_key6, REC->confirmed, REC->updated, REC->used, __print_hex_str(REC->new_lladdr, REC->lladdr_len), __print_symbolic(REC->new_state, { 0x01, \22incomplete\22 }, { 0x02, \22reachable\22 }, { 0x04, \22stale\22 }, { 0x08, \22delay\22 }, { 0x10, \22probe\22 }, { 0x20, \22failed\22 }, { 0x40, \22noarp\22 }, { 0x80, \22permanent\22}), REC->update_flags, REC->pid\00", [203 x i8] zeroinitializer }, align 32
@event_neigh_update = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_neigh_update, %union.anon.140 { ptr @__tracepoint_neigh_update }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_neigh_update }, ptr @print_fmt_neigh_update, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_neigh_update = internal global ptr @event_neigh_update, section "_ftrace_events", align 4
@trace_event_fields_neigh__update = internal global { [16 x %struct.trace_event_fields], [96 x i8] } { [16 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.136, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.69, %union.anon.138 { %struct.anon.139 { ptr @.str.201, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.241, %union.anon.138 { %struct.anon.139 { ptr @.str.242, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.243, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.183, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.244, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.245, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.77, %union.anon.138 { %struct.anon.139 { ptr @.str.246, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.138 { %struct.anon.139 { ptr @.str.247, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.138 { %struct.anon.139 { ptr @.str.237, i32 4, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.140, %union.anon.138 { %struct.anon.139 { ptr @.str.239, i32 16, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.248, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.249, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.197, %union.anon.138 { %struct.anon.139 { ptr @.str.250, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.96, %union.anon.138 { %struct.anon.139 { ptr @.str.176, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [96 x i8] zeroinitializer }, align 32
@event_class_neigh__update = internal global %struct.trace_event_class { ptr @str__neigh__trace_system_name, ptr @trace_event_raw_event_neigh__update, ptr @perf_trace_neigh__update, ptr @trace_event_reg, ptr @trace_event_fields_neigh__update, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_neigh__update, i64 24), ptr getelementptr (i8, ptr @event_class_neigh__update, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_neigh__update = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_neigh__update, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_neigh__update = internal global { [571 x i8], [133 x i8] } { [571 x i8] c"\22family %d dev %s lladdr %s flags %02x nud_state %s type %02x dead %d refcnt %d primary_key4 %pI4 primary_key6 %pI6c confirmed %lu updated %lu used %lu err %d\22, REC->family, __get_str(dev), __print_hex_str(REC->lladdr, REC->lladdr_len), REC->flags, __print_symbolic(REC->nud_state, { 0x01, \22incomplete\22 }, { 0x02, \22reachable\22 }, { 0x04, \22stale\22 }, { 0x08, \22delay\22 }, { 0x10, \22probe\22 }, { 0x20, \22failed\22 }, { 0x40, \22noarp\22 }, { 0x80, \22permanent\22}), REC->type, REC->dead, REC->refcnt, REC->primary_key4, REC->primary_key6, REC->confirmed, REC->updated, REC->used, REC->err\00", [133 x i8] zeroinitializer }, align 32
@event_neigh_update_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_neigh__update, %union.anon.140 { ptr @__tracepoint_neigh_update_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_neigh__update }, ptr @print_fmt_neigh__update, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_neigh_update_done = internal global ptr @event_neigh_update_done, section "_ftrace_events", align 4
@event_neigh_timer_handler = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_neigh__update, %union.anon.140 { ptr @__tracepoint_neigh_timer_handler }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_neigh__update }, ptr @print_fmt_neigh__update, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_neigh_timer_handler = internal global ptr @event_neigh_timer_handler, section "_ftrace_events", align 4
@event_neigh_event_send_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_neigh__update, %union.anon.140 { ptr @__tracepoint_neigh_event_send_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_neigh__update }, ptr @print_fmt_neigh__update, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_neigh_event_send_done = internal global ptr @event_neigh_event_send_done, section "_ftrace_events", align 4
@event_neigh_event_send_dead = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_neigh__update, %union.anon.140 { ptr @__tracepoint_neigh_event_send_dead }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_neigh__update }, ptr @print_fmt_neigh__update, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_neigh_event_send_dead = internal global ptr @event_neigh_event_send_dead, section "_ftrace_events", align 4
@event_neigh_cleanup_and_release = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_neigh__update, %union.anon.140 { ptr @__tracepoint_neigh_cleanup_and_release }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_neigh__update }, ptr @print_fmt_neigh__update, ptr null, %union.anon.141 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_neigh_cleanup_and_release = internal global ptr @event_neigh_cleanup_and_release, section "_ftrace_events", align 4
@__bpf_trace_tp_map_neigh_create = internal global %union.anon.271 { %struct.bpf_raw_event_map { ptr @__tracepoint_neigh_create, ptr @__bpf_trace_neigh_create, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_neigh_update = internal global %union.anon.272 { %struct.bpf_raw_event_map { ptr @__tracepoint_neigh_update, ptr @__bpf_trace_neigh_update, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_neigh_update_done = internal global %union.anon.273 { %struct.bpf_raw_event_map { ptr @__tracepoint_neigh_update_done, ptr @__bpf_trace_neigh__update, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_neigh_timer_handler = internal global %union.anon.274 { %struct.bpf_raw_event_map { ptr @__tracepoint_neigh_timer_handler, ptr @__bpf_trace_neigh__update, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_neigh_event_send_done = internal global %union.anon.275 { %struct.bpf_raw_event_map { ptr @__tracepoint_neigh_event_send_done, ptr @__bpf_trace_neigh__update, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_neigh_event_send_dead = internal global %union.anon.276 { %struct.bpf_raw_event_map { ptr @__tracepoint_neigh_event_send_dead, ptr @__bpf_trace_neigh__update, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_neigh_cleanup_and_release = internal global %union.anon.277 { %struct.bpf_raw_event_map { ptr @__tracepoint_neigh_cleanup_and_release, ptr @__bpf_trace_neigh__update, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__kstrtab___tracepoint_neigh_update = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_neigh_update = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_neigh_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_neigh_update to i32), ptr @__kstrtab___tracepoint_neigh_update, ptr @__kstrtabns___tracepoint_neigh_update }, section "___ksymtab_gpl+__tracepoint_neigh_update", align 4
@__kstrtab___traceiter_neigh_update = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_neigh_update = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_neigh_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_neigh_update to i32), ptr @__kstrtab___traceiter_neigh_update, ptr @__kstrtabns___traceiter_neigh_update }, section "___ksymtab_gpl+__traceiter_neigh_update", align 4
@__kstrtab___SCK__tp_func_neigh_update = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_neigh_update = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_neigh_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_neigh_update to i32), ptr @__kstrtab___SCK__tp_func_neigh_update, ptr @__kstrtabns___SCK__tp_func_neigh_update }, section "___ksymtab_gpl+__SCK__tp_func_neigh_update", align 4
@__kstrtab___tracepoint_neigh_update_done = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_neigh_update_done = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_neigh_update_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_neigh_update_done to i32), ptr @__kstrtab___tracepoint_neigh_update_done, ptr @__kstrtabns___tracepoint_neigh_update_done }, section "___ksymtab_gpl+__tracepoint_neigh_update_done", align 4
@__kstrtab___traceiter_neigh_update_done = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_neigh_update_done = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_neigh_update_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_neigh_update_done to i32), ptr @__kstrtab___traceiter_neigh_update_done, ptr @__kstrtabns___traceiter_neigh_update_done }, section "___ksymtab_gpl+__traceiter_neigh_update_done", align 4
@__kstrtab___SCK__tp_func_neigh_update_done = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_neigh_update_done = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_neigh_update_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_neigh_update_done to i32), ptr @__kstrtab___SCK__tp_func_neigh_update_done, ptr @__kstrtabns___SCK__tp_func_neigh_update_done }, section "___ksymtab_gpl+__SCK__tp_func_neigh_update_done", align 4
@__kstrtab___tracepoint_neigh_timer_handler = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_neigh_timer_handler = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_neigh_timer_handler = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_neigh_timer_handler to i32), ptr @__kstrtab___tracepoint_neigh_timer_handler, ptr @__kstrtabns___tracepoint_neigh_timer_handler }, section "___ksymtab_gpl+__tracepoint_neigh_timer_handler", align 4
@__kstrtab___traceiter_neigh_timer_handler = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_neigh_timer_handler = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_neigh_timer_handler = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_neigh_timer_handler to i32), ptr @__kstrtab___traceiter_neigh_timer_handler, ptr @__kstrtabns___traceiter_neigh_timer_handler }, section "___ksymtab_gpl+__traceiter_neigh_timer_handler", align 4
@__kstrtab___SCK__tp_func_neigh_timer_handler = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_neigh_timer_handler = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_neigh_timer_handler = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_neigh_timer_handler to i32), ptr @__kstrtab___SCK__tp_func_neigh_timer_handler, ptr @__kstrtabns___SCK__tp_func_neigh_timer_handler }, section "___ksymtab_gpl+__SCK__tp_func_neigh_timer_handler", align 4
@__kstrtab___tracepoint_neigh_event_send_done = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_neigh_event_send_done = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_neigh_event_send_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_neigh_event_send_done to i32), ptr @__kstrtab___tracepoint_neigh_event_send_done, ptr @__kstrtabns___tracepoint_neigh_event_send_done }, section "___ksymtab_gpl+__tracepoint_neigh_event_send_done", align 4
@__kstrtab___traceiter_neigh_event_send_done = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_neigh_event_send_done = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_neigh_event_send_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_neigh_event_send_done to i32), ptr @__kstrtab___traceiter_neigh_event_send_done, ptr @__kstrtabns___traceiter_neigh_event_send_done }, section "___ksymtab_gpl+__traceiter_neigh_event_send_done", align 4
@__kstrtab___SCK__tp_func_neigh_event_send_done = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_neigh_event_send_done = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_neigh_event_send_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_neigh_event_send_done to i32), ptr @__kstrtab___SCK__tp_func_neigh_event_send_done, ptr @__kstrtabns___SCK__tp_func_neigh_event_send_done }, section "___ksymtab_gpl+__SCK__tp_func_neigh_event_send_done", align 4
@__kstrtab___tracepoint_neigh_event_send_dead = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_neigh_event_send_dead = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_neigh_event_send_dead = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_neigh_event_send_dead to i32), ptr @__kstrtab___tracepoint_neigh_event_send_dead, ptr @__kstrtabns___tracepoint_neigh_event_send_dead }, section "___ksymtab_gpl+__tracepoint_neigh_event_send_dead", align 4
@__kstrtab___traceiter_neigh_event_send_dead = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_neigh_event_send_dead = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_neigh_event_send_dead = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_neigh_event_send_dead to i32), ptr @__kstrtab___traceiter_neigh_event_send_dead, ptr @__kstrtabns___traceiter_neigh_event_send_dead }, section "___ksymtab_gpl+__traceiter_neigh_event_send_dead", align 4
@__kstrtab___SCK__tp_func_neigh_event_send_dead = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_neigh_event_send_dead = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_neigh_event_send_dead = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_neigh_event_send_dead to i32), ptr @__kstrtab___SCK__tp_func_neigh_event_send_dead, ptr @__kstrtabns___SCK__tp_func_neigh_event_send_dead }, section "___ksymtab_gpl+__SCK__tp_func_neigh_event_send_dead", align 4
@__kstrtab___tracepoint_neigh_cleanup_and_release = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_neigh_cleanup_and_release = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_neigh_cleanup_and_release = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_neigh_cleanup_and_release to i32), ptr @__kstrtab___tracepoint_neigh_cleanup_and_release, ptr @__kstrtabns___tracepoint_neigh_cleanup_and_release }, section "___ksymtab_gpl+__tracepoint_neigh_cleanup_and_release", align 4
@__kstrtab___traceiter_neigh_cleanup_and_release = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_neigh_cleanup_and_release = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_neigh_cleanup_and_release = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_neigh_cleanup_and_release to i32), ptr @__kstrtab___traceiter_neigh_cleanup_and_release, ptr @__kstrtabns___traceiter_neigh_cleanup_and_release }, section "___ksymtab_gpl+__traceiter_neigh_cleanup_and_release", align 4
@__kstrtab___SCK__tp_func_neigh_cleanup_and_release = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_neigh_cleanup_and_release = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_neigh_cleanup_and_release = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_neigh_cleanup_and_release to i32), ptr @__kstrtab___SCK__tp_func_neigh_cleanup_and_release, ptr @__kstrtabns___SCK__tp_func_neigh_cleanup_and_release }, section "___ksymtab_gpl+__SCK__tp_func_neigh_cleanup_and_release", align 4
@__kstrtab___tracepoint_kfree_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_kfree_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_kfree_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_kfree_skb to i32), ptr @__kstrtab___tracepoint_kfree_skb, ptr @__kstrtabns___tracepoint_kfree_skb }, section "___ksymtab_gpl+__tracepoint_kfree_skb", align 4
@__kstrtab___traceiter_kfree_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_kfree_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_kfree_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_kfree_skb to i32), ptr @__kstrtab___traceiter_kfree_skb, ptr @__kstrtabns___traceiter_kfree_skb }, section "___ksymtab_gpl+__traceiter_kfree_skb", align 4
@__kstrtab___SCK__tp_func_kfree_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_kfree_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_kfree_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_kfree_skb to i32), ptr @__kstrtab___SCK__tp_func_kfree_skb, ptr @__kstrtabns___SCK__tp_func_kfree_skb }, section "___ksymtab_gpl+__SCK__tp_func_kfree_skb", align 4
@__kstrtab___tracepoint_napi_poll = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_napi_poll = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_napi_poll = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_napi_poll to i32), ptr @__kstrtab___tracepoint_napi_poll, ptr @__kstrtabns___tracepoint_napi_poll }, section "___ksymtab_gpl+__tracepoint_napi_poll", align 4
@__kstrtab___traceiter_napi_poll = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_napi_poll = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_napi_poll = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_napi_poll to i32), ptr @__kstrtab___traceiter_napi_poll, ptr @__kstrtabns___traceiter_napi_poll }, section "___ksymtab_gpl+__traceiter_napi_poll", align 4
@__kstrtab___SCK__tp_func_napi_poll = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_napi_poll = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_napi_poll = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_napi_poll to i32), ptr @__kstrtab___SCK__tp_func_napi_poll, ptr @__kstrtabns___SCK__tp_func_napi_poll }, section "___ksymtab_gpl+__SCK__tp_func_napi_poll", align 4
@__kstrtab___tracepoint_tcp_send_reset = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_tcp_send_reset = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_tcp_send_reset = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_tcp_send_reset to i32), ptr @__kstrtab___tracepoint_tcp_send_reset, ptr @__kstrtabns___tracepoint_tcp_send_reset }, section "___ksymtab_gpl+__tracepoint_tcp_send_reset", align 4
@__kstrtab___traceiter_tcp_send_reset = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_tcp_send_reset = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_tcp_send_reset = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_tcp_send_reset to i32), ptr @__kstrtab___traceiter_tcp_send_reset, ptr @__kstrtabns___traceiter_tcp_send_reset }, section "___ksymtab_gpl+__traceiter_tcp_send_reset", align 4
@__kstrtab___SCK__tp_func_tcp_send_reset = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_tcp_send_reset = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_tcp_send_reset = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_tcp_send_reset to i32), ptr @__kstrtab___SCK__tp_func_tcp_send_reset, ptr @__kstrtabns___SCK__tp_func_tcp_send_reset }, section "___ksymtab_gpl+__SCK__tp_func_tcp_send_reset", align 4
@__kstrtab___tracepoint_tcp_bad_csum = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_tcp_bad_csum = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_tcp_bad_csum = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_tcp_bad_csum to i32), ptr @__kstrtab___tracepoint_tcp_bad_csum, ptr @__kstrtabns___tracepoint_tcp_bad_csum }, section "___ksymtab_gpl+__tracepoint_tcp_bad_csum", align 4
@__kstrtab___traceiter_tcp_bad_csum = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_tcp_bad_csum = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_tcp_bad_csum = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_tcp_bad_csum to i32), ptr @__kstrtab___traceiter_tcp_bad_csum, ptr @__kstrtabns___traceiter_tcp_bad_csum }, section "___ksymtab_gpl+__traceiter_tcp_bad_csum", align 4
@__kstrtab___SCK__tp_func_tcp_bad_csum = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_tcp_bad_csum = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_tcp_bad_csum = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_tcp_bad_csum to i32), ptr @__kstrtab___SCK__tp_func_tcp_bad_csum, ptr @__kstrtabns___SCK__tp_func_tcp_bad_csum }, section "___ksymtab_gpl+__SCK__tp_func_tcp_bad_csum", align 4
@.str.48 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"skbaddr\00", [24 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"location\00", [23 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"unsigned short\00", [17 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"protocol\00", [23 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"enum skb_drop_reason\00", [43 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"reason\00", [25 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"skbaddr=%p protocol=%u location=%p reason: %s\0A\00", [49 x i8] zeroinitializer }, align 32
@trace_raw_output_kfree_skb.symbols = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.56 }, %struct.trace_print_flags { i32 1, ptr @.str.57 }, %struct.trace_print_flags { i32 2, ptr @.str.58 }, %struct.trace_print_flags { i32 3, ptr @.str.59 }, %struct.trace_print_flags { i32 4, ptr @.str.60 }, %struct.trace_print_flags { i32 5, ptr @.str.61 }, %struct.trace_print_flags { i32 6, ptr @.str.62 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"NOT_SPECIFIED\00", [18 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"NO_SOCKET\00", [22 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"PKT_TOO_SMALL\00", [18 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"TCP_CSUM\00", [23 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"SOCKET_FILTER\00", [18 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"UDP_CSUM\00", [23 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"MAX\00", [28 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"skbaddr=%p\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const void *\00", [19 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"len\00", [28 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"skbaddr=%p len=%d\0A\00", [45 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.68 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u16\00", [28 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"queue_mapping\00", [18 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"vlan_tagged\00", [20 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"vlan_proto\00", [21 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"vlan_tci\00", [23 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"u8\00", [29 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ip_summed\00", [22 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"data_len\00", [23 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"network_offset\00", [17 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"transport_offset_valid\00", [41 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"transport_offset\00", [47 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"tx_flags\00", [23 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"gso_size\00", [23 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"gso_segs\00", [23 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"gso_type\00", [23 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [246 x i8], [42 x i8] } { [246 x i8] c"dev=%s queue_mapping=%u skbaddr=%p vlan_tagged=%d vlan_proto=0x%04x vlan_tci=0x%04x protocol=0x%04x ip_summed=%d len=%u data_len=%u network_offset=%d transport_offset_valid=%d transport_offset=%d tx_flags=%d gso_size=%d gso_segs=%d gso_type=%#x\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"rc\00", [29 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"dev=%s skbaddr=%p len=%u rc=%d\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"driver\00", [25 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"queue_index\00", [20 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"dev=%s driver=%s queue=%d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"dev=%s skbaddr=%px len=%u\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"napi_id\00", [24 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u32\00", [28 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"hash\00", [27 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"l4_hash\00", [24 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"truesize\00", [23 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"mac_header_valid\00", [47 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"mac_header\00", [21 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned char\00", [18 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nr_frags\00", [23 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [251 x i8], [37 x i8] } { [251 x i8] c"dev=%s napi_id=%#x queue_mapping=%u skbaddr=%p vlan_tagged=%d vlan_proto=0x%04x vlan_tci=0x%04x protocol=0x%04x ip_summed=%d hash=0x%08x l4_hash=%d len=%u data_len=%u truesize=%u mac_header_valid=%d mac_header=%d nr_frags=%d gso_size=%d gso_type=%#x\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ret\00", [28 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ret=%d\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"(no_device)\00", [20 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"struct napi_struct *\00", [43 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"napi\00", [27 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dev_name\00", [23 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"work\00", [27 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"budget\00", [25 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"napi poll on napi struct %p for device %s work %d budget %d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rmem_alloc\00", [21 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"sk_rcvbuf\00", [22 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"rmem_alloc=%d truesize=%u sk_rcvbuf=%d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"char[32]\00", [23 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"long *\00", [25 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sysctl_mem\00", [21 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"allocated\00", [22 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sysctl_rmem\00", [20 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sysctl_wmem\00", [20 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"wmem_alloc\00", [21 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"wmem_queued\00", [20 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"kind\00", [27 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [128 x i8], [32 x i8] } { [128 x i8] c"proto:%s sysctl_mem=%ld,%ld,%ld allocated=%ld sysctl_rmem=%d rmem_alloc=%d sysctl_wmem=%d wmem_alloc=%d wmem_queued=%d kind=%s\0A\00", [32 x i8] zeroinitializer }, align 32
@trace_raw_output_sock_exceed_buf_limit.symbols = internal constant { [3 x %struct.trace_print_flags], [40 x i8] } { [3 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.128 }, %struct.trace_print_flags { i32 1, ptr @.str.129 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SK_MEM_SEND\00", [20 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SK_MEM_RECV\00", [20 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"skaddr\00", [25 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"oldstate\00", [23 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"newstate\00", [23 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"__u16\00", [26 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"sport\00", [26 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dport\00", [26 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"family\00", [25 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"__u8[4]\00", [24 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"saddr\00", [26 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"daddr\00", [26 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"__u8[16]\00", [23 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"saddr_v6\00", [23 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"daddr_v6\00", [23 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [117 x i8], [43 x i8] } { [117 x i8] c"family=%s protocol=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c oldstate=%s newstate=%s\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_inet_sock_set_state.symbols = internal constant { [3 x %struct.trace_print_flags], [40 x i8] } { [3 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 2, ptr @.str.144 }, %struct.trace_print_flags { i32 10, ptr @.str.145 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"AF_INET\00", [24 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"AF_INET6\00", [23 x i8] zeroinitializer }, align 32
@trace_raw_output_inet_sock_set_state.symbols.146 = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 6, ptr @.str.9 }, %struct.trace_print_flags { i32 33, ptr @.str.10 }, %struct.trace_print_flags { i32 132, ptr @.str.11 }, %struct.trace_print_flags { i32 262, ptr @.str.12 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@trace_raw_output_inet_sock_set_state.symbols.147 = internal constant { [13 x %struct.trace_print_flags], [56 x i8] } { [13 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.13 }, %struct.trace_print_flags { i32 2, ptr @.str.14 }, %struct.trace_print_flags { i32 3, ptr @.str.15 }, %struct.trace_print_flags { i32 4, ptr @.str.16 }, %struct.trace_print_flags { i32 5, ptr @.str.17 }, %struct.trace_print_flags { i32 6, ptr @.str.18 }, %struct.trace_print_flags { i32 7, ptr @.str.19 }, %struct.trace_print_flags { i32 8, ptr @.str.20 }, %struct.trace_print_flags { i32 9, ptr @.str.21 }, %struct.trace_print_flags { i32 10, ptr @.str.22 }, %struct.trace_print_flags { i32 11, ptr @.str.23 }, %struct.trace_print_flags { i32 12, ptr @.str.24 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@trace_raw_output_inet_sock_set_state.symbols.148 = internal constant { [13 x %struct.trace_print_flags], [56 x i8] } { [13 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.13 }, %struct.trace_print_flags { i32 2, ptr @.str.14 }, %struct.trace_print_flags { i32 3, ptr @.str.15 }, %struct.trace_print_flags { i32 4, ptr @.str.16 }, %struct.trace_print_flags { i32 5, ptr @.str.17 }, %struct.trace_print_flags { i32 6, ptr @.str.18 }, %struct.trace_print_flags { i32 7, ptr @.str.19 }, %struct.trace_print_flags { i32 8, ptr @.str.20 }, %struct.trace_print_flags { i32 9, ptr @.str.21 }, %struct.trace_print_flags { i32 10, ptr @.str.22 }, %struct.trace_print_flags { i32 11, ptr @.str.23 }, %struct.trace_print_flags { i32 12, ptr @.str.24 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [102 x i8], [58 x i8] } { [102 x i8] c"family=%s protocol=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c error=%d\0A\00", [58 x i8] zeroinitializer }, align 32
@trace_raw_output_inet_sk_error_report.symbols = internal constant { [3 x %struct.trace_print_flags], [40 x i8] } { [3 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 2, ptr @.str.144 }, %struct.trace_print_flags { i32 10, ptr @.str.145 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@trace_raw_output_inet_sk_error_report.symbols.151 = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 6, ptr @.str.9 }, %struct.trace_print_flags { i32 33, ptr @.str.10 }, %struct.trace_print_flags { i32 132, ptr @.str.11 }, %struct.trace_print_flags { i32 262, ptr @.str.12 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"lport\00", [26 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rc=%d port=%hu\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"state\00", [26 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [90 x i8], [38 x i8] } { [90 x i8] c"family=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c state=%s\0A\00", [38 x i8] zeroinitializer }, align 32
@trace_raw_output_tcp_event_sk_skb.symbols = internal constant { [3 x %struct.trace_print_flags], [40 x i8] } { [3 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 2, ptr @.str.144 }, %struct.trace_print_flags { i32 10, ptr @.str.145 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@trace_raw_output_tcp_event_sk_skb.symbols.156 = internal constant { [13 x %struct.trace_print_flags], [56 x i8] } { [13 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.13 }, %struct.trace_print_flags { i32 2, ptr @.str.14 }, %struct.trace_print_flags { i32 3, ptr @.str.15 }, %struct.trace_print_flags { i32 4, ptr @.str.16 }, %struct.trace_print_flags { i32 5, ptr @.str.17 }, %struct.trace_print_flags { i32 6, ptr @.str.18 }, %struct.trace_print_flags { i32 7, ptr @.str.19 }, %struct.trace_print_flags { i32 8, ptr @.str.20 }, %struct.trace_print_flags { i32 9, ptr @.str.21 }, %struct.trace_print_flags { i32 10, ptr @.str.22 }, %struct.trace_print_flags { i32 11, ptr @.str.23 }, %struct.trace_print_flags { i32 12, ptr @.str.24 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"__u64\00", [26 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"sock_cookie\00", [20 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [98 x i8], [62 x i8] } { [98 x i8] c"family=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c sock_cookie=%llx\0A\00", [62 x i8] zeroinitializer }, align 32
@trace_raw_output_tcp_event_sk.symbols = internal constant { [3 x %struct.trace_print_flags], [40 x i8] } { [3 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 2, ptr @.str.144 }, %struct.trace_print_flags { i32 10, ptr @.str.145 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"req\00", [28 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"family=%s sport=%hu dport=%hu saddr=%pI4 daddr=%pI4 saddrv6=%pI6c daddrv6=%pI6c\0A\00", [47 x i8] zeroinitializer }, align 32
@trace_raw_output_tcp_retransmit_synack.symbols = internal constant { [3 x %struct.trace_print_flags], [40 x i8] } { [3 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 2, ptr @.str.144 }, %struct.trace_print_flags { i32 10, ptr @.str.145 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"__u8[sizeof(struct sockaddr_in6)]\00", [62 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"__u32\00", [26 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mark\00", [27 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"snd_nxt\00", [24 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"snd_una\00", [24 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"snd_cwnd\00", [23 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ssthresh\00", [23 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"snd_wnd\00", [24 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"srtt\00", [27 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"rcv_wnd\00", [24 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [150 x i8], [42 x i8] } { [150 x i8] c"family=%s src=%pISpc dest=%pISpc mark=%#x data_len=%d snd_nxt=%#x snd_una=%#x snd_cwnd=%u ssthresh=%u snd_wnd=%u srtt=%u rcv_wnd=%u sock_cookie=%llx\0A\00", [42 x i8] zeroinitializer }, align 32
@trace_raw_output_tcp_probe.symbols = internal constant { [3 x %struct.trace_print_flags], [40 x i8] } { [3 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 2, ptr @.str.144 }, %struct.trace_print_flags { i32 10, ptr @.str.145 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"src=%pISpc dest=%pISpc\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"-\00", [30 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"tb_id\00", [26 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"err\00", [28 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"oif\00", [28 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"iif\00", [28 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"proto\00", [26 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"__u8\00", [27 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"tos\00", [28 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"scope\00", [26 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"src\00", [28 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dst\00", [28 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"gw4\00", [28 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"gw6\00", [28 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [109 x i8], [51 x i8] } { [109 x i8] c"table %u oif %d iif %d proto %u %pI4/%u -> %pI4/%u tos %d scope %d flags %x ==> dev %s gw %pI4/%pI6c err %d\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"struct Qdisc *\00", [17 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"qdisc\00", [26 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"const struct netdev_queue *\00", [36 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"txq\00", [28 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"packets\00", [24 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ifindex\00", [24 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"handle\00", [25 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"parent\00", [25 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"txq_state\00", [22 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [89 x i8], [39 x i8] } { [89 x i8] c"dequeue ifindex=%d qdisc handle=0x%X parent=0x%X txq_state=0x%lX packets=%d skbaddr=%px\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"enqueue ifindex=%d qdisc handle=0x%X parent=0x%X skbaddr=%px\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dev\00", [28 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"dev=%s kind=%s parent=%x:%x handle=%x:%x\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"dev=%s kind=%s parent=%x:%x\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ndm_flags\00", [22 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"unsigned char[6]\00", [47 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"addr\00", [27 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"vid\00", [28 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nlh_flags\00", [22 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"dev %s addr %02x:%02x:%02x:%02x:%02x:%02x vid %u nlh_flags %04x ndm_flags %02x\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"null\00", [27 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"br_dev\00", [25 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"br_dev %s port %s addr %02x:%02x:%02x:%02x:%02x:%02x vid %u\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"br_dev %s dev %s addr %02x:%02x:%02x:%02x:%02x:%02x vid %u\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"br_dev %s source %s addr %02x:%02x:%02x:%02x:%02x:%02x vid %u flags 0x%lx\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"const struct page_pool *\00", [39 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pool\00", [27 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"s32\00", [28 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"inflight\00", [23 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"hold\00", [27 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"release\00", [24 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u64\00", [28 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cnt\00", [28 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"page_pool=%p inflight=%d hold=%u release=%u cnt=%llu\0A\00", [42 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@.str.224 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"const struct page *\00", [44 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"page\00", [27 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pfn\00", [28 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"page_pool=%p page=%p pfn=0x%lx release=%u\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"page_pool=%p page=%p pfn=0x%lx hold=%u\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pool_nid\00", [23 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"new_nid\00", [24 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"page_pool=%p pool_nid=%d new_nid=%d\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"NULL\00", [27 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"entries\00", [24 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"created\00", [24 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"gc_exempt\00", [22 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"u8[4]\00", [26 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"primary_key4\00", [19 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"u8[16]\00", [25 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"primary_key6\00", [19 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [90 x i8], [38 x i8] } { [90 x i8] c"family %d dev %s entries %d primary_key4 %pI4 primary_key6 %pI6c created %d gc_exempt %d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"u8[32]\00", [25 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"lladdr\00", [25 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"lladdr_len\00", [21 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nud_state\00", [22 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"type\00", [27 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"dead\00", [27 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"refcnt\00", [25 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"confirmed\00", [22 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"updated\00", [24 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"used\00", [27 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"new_lladdr\00", [21 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"new_state\00", [22 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"update_flags\00", [19 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pid\00", [28 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [204 x i8], [52 x i8] } { [204 x i8] c"family %d dev %s lladdr %s flags %02x nud_state %s type %02x dead %d refcnt %d primary_key4 %pI4 primary_key6 %pI6c confirmed %lu updated %lu used %lu new_lladdr %s new_state %s update_flags %02x pid %d\0A\00", [52 x i8] zeroinitializer }, align 32
@trace_raw_output_neigh_update.symbols = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.256 }, %struct.trace_print_flags { i32 2, ptr @.str.257 }, %struct.trace_print_flags { i32 4, ptr @.str.258 }, %struct.trace_print_flags { i32 8, ptr @.str.259 }, %struct.trace_print_flags { i32 16, ptr @.str.260 }, %struct.trace_print_flags { i32 32, ptr @.str.261 }, %struct.trace_print_flags { i32 64, ptr @.str.262 }, %struct.trace_print_flags { i32 128, ptr @.str.263 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"incomplete\00", [21 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"reachable\00", [22 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"stale\00", [26 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"delay\00", [26 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"probe\00", [26 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"failed\00", [25 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"noarp\00", [26 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"permanent\00", [22 x i8] zeroinitializer }, align 32
@trace_raw_output_neigh_update.symbols.264 = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.256 }, %struct.trace_print_flags { i32 2, ptr @.str.257 }, %struct.trace_print_flags { i32 4, ptr @.str.258 }, %struct.trace_print_flags { i32 8, ptr @.str.259 }, %struct.trace_print_flags { i32 16, ptr @.str.260 }, %struct.trace_print_flags { i32 32, ptr @.str.261 }, %struct.trace_print_flags { i32 64, ptr @.str.262 }, %struct.trace_print_flags { i32 128, ptr @.str.263 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [159 x i8], [33 x i8] } { [159 x i8] c"family %d dev %s lladdr %s flags %02x nud_state %s type %02x dead %d refcnt %d primary_key4 %pI4 primary_key6 %pI6c confirmed %lu updated %lu used %lu err %d\0A\00", [33 x i8] zeroinitializer }, align 32
@trace_raw_output_neigh__update.symbols = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.256 }, %struct.trace_print_flags { i32 2, ptr @.str.257 }, %struct.trace_print_flags { i32 4, ptr @.str.258 }, %struct.trace_print_flags { i32 8, ptr @.str.259 }, %struct.trace_print_flags { i32 16, ptr @.str.260 }, %struct.trace_print_flags { i32 32, ptr @.str.261 }, %struct.trace_print_flags { i32 64, ptr @.str.262 }, %struct.trace_print_flags { i32 128, ptr @.str.263 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 8, i64 6, i64 17]
@__sancov_gen_cov_switch_values.266 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 10]
@__sancov_gen_cov_switch_values.267 = internal global [4 x i64] [i64 2, i64 8, i64 6, i64 17]
@__sancov_gen_cov_switch_values.268 = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 10]
@___asan_gen_ = private constant [25 x i8] c"../net/core/net-traces.c\00", align 1
@___asan_gen_.269 = private unnamed_addr constant [28 x i8] c"str__skb__trace_system_name\00", align 1
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1008, i32 27, i32 1 }
@___asan_gen_.293 = private unnamed_addr constant [29 x i8] c"trace_event_fields_kfree_skb\00", align 1
@___asan_gen_.296 = private unnamed_addr constant [33 x i8] c"trace_event_type_funcs_kfree_skb\00", align 1
@___asan_gen_.299 = private unnamed_addr constant [20 x i8] c"print_fmt_kfree_skb\00", align 1
@___asan_gen_.302 = private unnamed_addr constant [16 x i8] c"event_kfree_skb\00", align 1
@___asan_gen_.305 = private unnamed_addr constant [31 x i8] c"trace_event_fields_consume_skb\00", align 1
@___asan_gen_.308 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_consume_skb\00", align 1
@___asan_gen_.311 = private unnamed_addr constant [22 x i8] c"print_fmt_consume_skb\00", align 1
@___asan_gen_.314 = private unnamed_addr constant [18 x i8] c"event_consume_skb\00", align 1
@___asan_gen_.317 = private unnamed_addr constant [43 x i8] c"trace_event_fields_skb_copy_datagram_iovec\00", align 1
@___asan_gen_.320 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_skb_copy_datagram_iovec\00", align 1
@___asan_gen_.323 = private unnamed_addr constant [34 x i8] c"print_fmt_skb_copy_datagram_iovec\00", align 1
@___asan_gen_.326 = private unnamed_addr constant [30 x i8] c"event_skb_copy_datagram_iovec\00", align 1
@___asan_gen_.329 = private unnamed_addr constant [28 x i8] c"str__net__trace_system_name\00", align 1
@___asan_gen_.332 = private unnamed_addr constant [38 x i8] c"trace_event_fields_net_dev_start_xmit\00", align 1
@___asan_gen_.335 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_net_dev_start_xmit\00", align 1
@___asan_gen_.338 = private unnamed_addr constant [29 x i8] c"print_fmt_net_dev_start_xmit\00", align 1
@___asan_gen_.341 = private unnamed_addr constant [25 x i8] c"event_net_dev_start_xmit\00", align 1
@___asan_gen_.344 = private unnamed_addr constant [32 x i8] c"trace_event_fields_net_dev_xmit\00", align 1
@___asan_gen_.347 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_net_dev_xmit\00", align 1
@___asan_gen_.350 = private unnamed_addr constant [23 x i8] c"print_fmt_net_dev_xmit\00", align 1
@___asan_gen_.353 = private unnamed_addr constant [19 x i8] c"event_net_dev_xmit\00", align 1
@___asan_gen_.356 = private unnamed_addr constant [40 x i8] c"trace_event_fields_net_dev_xmit_timeout\00", align 1
@___asan_gen_.359 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_net_dev_xmit_timeout\00", align 1
@___asan_gen_.362 = private unnamed_addr constant [31 x i8] c"print_fmt_net_dev_xmit_timeout\00", align 1
@___asan_gen_.365 = private unnamed_addr constant [27 x i8] c"event_net_dev_xmit_timeout\00", align 1
@___asan_gen_.368 = private unnamed_addr constant [36 x i8] c"trace_event_fields_net_dev_template\00", align 1
@___asan_gen_.371 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_net_dev_template\00", align 1
@___asan_gen_.374 = private unnamed_addr constant [27 x i8] c"print_fmt_net_dev_template\00", align 1
@___asan_gen_.377 = private unnamed_addr constant [20 x i8] c"event_net_dev_queue\00", align 1
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 143, i32 1 }
@___asan_gen_.380 = private unnamed_addr constant [24 x i8] c"event_netif_receive_skb\00", align 1
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 150, i32 1 }
@___asan_gen_.383 = private unnamed_addr constant [15 x i8] c"event_netif_rx\00", align 1
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 157, i32 1 }
@___asan_gen_.386 = private unnamed_addr constant [47 x i8] c"trace_event_fields_net_dev_rx_verbose_template\00", align 1
@___asan_gen_.389 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_net_dev_rx_verbose_template\00", align 1
@___asan_gen_.392 = private unnamed_addr constant [38 x i8] c"print_fmt_net_dev_rx_verbose_template\00", align 1
@___asan_gen_.395 = private unnamed_addr constant [27 x i8] c"event_napi_gro_frags_entry\00", align 1
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 228, i32 1 }
@___asan_gen_.398 = private unnamed_addr constant [29 x i8] c"event_napi_gro_receive_entry\00", align 1
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 235, i32 1 }
@___asan_gen_.401 = private unnamed_addr constant [30 x i8] c"event_netif_receive_skb_entry\00", align 1
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 242, i32 1 }
@___asan_gen_.404 = private unnamed_addr constant [35 x i8] c"event_netif_receive_skb_list_entry\00", align 1
@___asan_gen_.406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 249, i32 1 }
@___asan_gen_.407 = private unnamed_addr constant [21 x i8] c"event_netif_rx_entry\00", align 1
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 256, i32 1 }
@___asan_gen_.410 = private unnamed_addr constant [24 x i8] c"event_netif_rx_ni_entry\00", align 1
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 263, i32 1 }
@___asan_gen_.413 = private unnamed_addr constant [44 x i8] c"trace_event_fields_net_dev_rx_exit_template\00", align 1
@___asan_gen_.416 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_net_dev_rx_exit_template\00", align 1
@___asan_gen_.419 = private unnamed_addr constant [35 x i8] c"print_fmt_net_dev_rx_exit_template\00", align 1
@___asan_gen_.422 = private unnamed_addr constant [26 x i8] c"event_napi_gro_frags_exit\00", align 1
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 287, i32 1 }
@___asan_gen_.425 = private unnamed_addr constant [28 x i8] c"event_napi_gro_receive_exit\00", align 1
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 294, i32 1 }
@___asan_gen_.428 = private unnamed_addr constant [29 x i8] c"event_netif_receive_skb_exit\00", align 1
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 301, i32 1 }
@___asan_gen_.431 = private unnamed_addr constant [20 x i8] c"event_netif_rx_exit\00", align 1
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 308, i32 1 }
@___asan_gen_.434 = private unnamed_addr constant [23 x i8] c"event_netif_rx_ni_exit\00", align 1
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 315, i32 1 }
@___asan_gen_.437 = private unnamed_addr constant [34 x i8] c"event_netif_receive_skb_list_exit\00", align 1
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 322, i32 1 }
@___asan_gen_.440 = private unnamed_addr constant [29 x i8] c"str__napi__trace_system_name\00", align 1
@___asan_gen_.443 = private unnamed_addr constant [29 x i8] c"trace_event_fields_napi_poll\00", align 1
@___asan_gen_.446 = private unnamed_addr constant [33 x i8] c"trace_event_type_funcs_napi_poll\00", align 1
@___asan_gen_.449 = private unnamed_addr constant [20 x i8] c"print_fmt_napi_poll\00", align 1
@___asan_gen_.452 = private unnamed_addr constant [16 x i8] c"event_napi_poll\00", align 1
@___asan_gen_.455 = private unnamed_addr constant [29 x i8] c"str__sock__trace_system_name\00", align 1
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1269, i32 49, i32 1 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1269, i32 50, i32 1 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1269, i32 51, i32 1 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1269, i32 52, i32 1 }
@___asan_gen_.518 = private unnamed_addr constant [38 x i8] c"trace_event_fields_sock_rcvqueue_full\00", align 1
@___asan_gen_.521 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_sock_rcvqueue_full\00", align 1
@___asan_gen_.524 = private unnamed_addr constant [29 x i8] c"print_fmt_sock_rcvqueue_full\00", align 1
@___asan_gen_.527 = private unnamed_addr constant [25 x i8] c"event_sock_rcvqueue_full\00", align 1
@___asan_gen_.530 = private unnamed_addr constant [41 x i8] c"trace_event_fields_sock_exceed_buf_limit\00", align 1
@___asan_gen_.533 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_sock_exceed_buf_limit\00", align 1
@___asan_gen_.536 = private unnamed_addr constant [32 x i8] c"print_fmt_sock_exceed_buf_limit\00", align 1
@___asan_gen_.539 = private unnamed_addr constant [28 x i8] c"event_sock_exceed_buf_limit\00", align 1
@___asan_gen_.542 = private unnamed_addr constant [39 x i8] c"trace_event_fields_inet_sock_set_state\00", align 1
@___asan_gen_.545 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_inet_sock_set_state\00", align 1
@___asan_gen_.548 = private unnamed_addr constant [30 x i8] c"print_fmt_inet_sock_set_state\00", align 1
@___asan_gen_.551 = private unnamed_addr constant [26 x i8] c"event_inet_sock_set_state\00", align 1
@___asan_gen_.554 = private unnamed_addr constant [40 x i8] c"trace_event_fields_inet_sk_error_report\00", align 1
@___asan_gen_.557 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_inet_sk_error_report\00", align 1
@___asan_gen_.560 = private unnamed_addr constant [31 x i8] c"print_fmt_inet_sk_error_report\00", align 1
@___asan_gen_.563 = private unnamed_addr constant [27 x i8] c"event_inet_sk_error_report\00", align 1
@___asan_gen_.566 = private unnamed_addr constant [28 x i8] c"str__udp__trace_system_name\00", align 1
@___asan_gen_.569 = private unnamed_addr constant [42 x i8] c"trace_event_fields_udp_fail_queue_rcv_skb\00", align 1
@___asan_gen_.572 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_udp_fail_queue_rcv_skb\00", align 1
@___asan_gen_.575 = private unnamed_addr constant [33 x i8] c"print_fmt_udp_fail_queue_rcv_skb\00", align 1
@___asan_gen_.578 = private unnamed_addr constant [29 x i8] c"event_udp_fail_queue_rcv_skb\00", align 1
@___asan_gen_.581 = private unnamed_addr constant [28 x i8] c"str__tcp__trace_system_name\00", align 1
@___asan_gen_.584 = private unnamed_addr constant [36 x i8] c"trace_event_fields_tcp_event_sk_skb\00", align 1
@___asan_gen_.587 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_tcp_event_sk_skb\00", align 1
@___asan_gen_.590 = private unnamed_addr constant [27 x i8] c"print_fmt_tcp_event_sk_skb\00", align 1
@___asan_gen_.593 = private unnamed_addr constant [25 x i8] c"event_tcp_retransmit_skb\00", align 1
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 98, i32 1 }
@___asan_gen_.596 = private unnamed_addr constant [21 x i8] c"event_tcp_send_reset\00", align 1
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 109, i32 1 }
@___asan_gen_.599 = private unnamed_addr constant [32 x i8] c"trace_event_fields_tcp_event_sk\00", align 1
@___asan_gen_.602 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_tcp_event_sk\00", align 1
@___asan_gen_.605 = private unnamed_addr constant [23 x i8] c"print_fmt_tcp_event_sk\00", align 1
@___asan_gen_.608 = private unnamed_addr constant [24 x i8] c"event_tcp_receive_reset\00", align 1
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 169, i32 1 }
@___asan_gen_.611 = private unnamed_addr constant [23 x i8] c"event_tcp_destroy_sock\00", align 1
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 176, i32 1 }
@___asan_gen_.614 = private unnamed_addr constant [27 x i8] c"event_tcp_rcv_space_adjust\00", align 1
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 183, i32 1 }
@___asan_gen_.617 = private unnamed_addr constant [41 x i8] c"trace_event_fields_tcp_retransmit_synack\00", align 1
@___asan_gen_.620 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_tcp_retransmit_synack\00", align 1
@___asan_gen_.623 = private unnamed_addr constant [32 x i8] c"print_fmt_tcp_retransmit_synack\00", align 1
@___asan_gen_.626 = private unnamed_addr constant [28 x i8] c"event_tcp_retransmit_synack\00", align 1
@___asan_gen_.629 = private unnamed_addr constant [29 x i8] c"trace_event_fields_tcp_probe\00", align 1
@___asan_gen_.632 = private unnamed_addr constant [33 x i8] c"trace_event_type_funcs_tcp_probe\00", align 1
@___asan_gen_.635 = private unnamed_addr constant [20 x i8] c"print_fmt_tcp_probe\00", align 1
@___asan_gen_.638 = private unnamed_addr constant [16 x i8] c"event_tcp_probe\00", align 1
@___asan_gen_.641 = private unnamed_addr constant [33 x i8] c"trace_event_fields_tcp_event_skb\00", align 1
@___asan_gen_.644 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_tcp_event_skb\00", align 1
@___asan_gen_.647 = private unnamed_addr constant [24 x i8] c"print_fmt_tcp_event_skb\00", align 1
@___asan_gen_.650 = private unnamed_addr constant [19 x i8] c"event_tcp_bad_csum\00", align 1
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 367, i32 1 }
@___asan_gen_.653 = private unnamed_addr constant [28 x i8] c"str__fib__trace_system_name\00", align 1
@___asan_gen_.656 = private unnamed_addr constant [36 x i8] c"trace_event_fields_fib_table_lookup\00", align 1
@___asan_gen_.659 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_fib_table_lookup\00", align 1
@___asan_gen_.662 = private unnamed_addr constant [27 x i8] c"print_fmt_fib_table_lookup\00", align 1
@___asan_gen_.665 = private unnamed_addr constant [23 x i8] c"event_fib_table_lookup\00", align 1
@___asan_gen_.668 = private unnamed_addr constant [30 x i8] c"str__qdisc__trace_system_name\00", align 1
@___asan_gen_.671 = private unnamed_addr constant [33 x i8] c"trace_event_fields_qdisc_dequeue\00", align 1
@___asan_gen_.674 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_qdisc_dequeue\00", align 1
@___asan_gen_.677 = private unnamed_addr constant [24 x i8] c"print_fmt_qdisc_dequeue\00", align 1
@___asan_gen_.680 = private unnamed_addr constant [20 x i8] c"event_qdisc_dequeue\00", align 1
@___asan_gen_.683 = private unnamed_addr constant [33 x i8] c"trace_event_fields_qdisc_enqueue\00", align 1
@___asan_gen_.686 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_qdisc_enqueue\00", align 1
@___asan_gen_.689 = private unnamed_addr constant [24 x i8] c"print_fmt_qdisc_enqueue\00", align 1
@___asan_gen_.692 = private unnamed_addr constant [20 x i8] c"event_qdisc_enqueue\00", align 1
@___asan_gen_.695 = private unnamed_addr constant [31 x i8] c"trace_event_fields_qdisc_reset\00", align 1
@___asan_gen_.698 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_qdisc_reset\00", align 1
@___asan_gen_.701 = private unnamed_addr constant [22 x i8] c"print_fmt_qdisc_reset\00", align 1
@___asan_gen_.704 = private unnamed_addr constant [18 x i8] c"event_qdisc_reset\00", align 1
@___asan_gen_.707 = private unnamed_addr constant [33 x i8] c"trace_event_fields_qdisc_destroy\00", align 1
@___asan_gen_.710 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_qdisc_destroy\00", align 1
@___asan_gen_.713 = private unnamed_addr constant [24 x i8] c"print_fmt_qdisc_destroy\00", align 1
@___asan_gen_.716 = private unnamed_addr constant [20 x i8] c"event_qdisc_destroy\00", align 1
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1437, i32 102, i32 1 }
@___asan_gen_.719 = private unnamed_addr constant [32 x i8] c"trace_event_fields_qdisc_create\00", align 1
@___asan_gen_.722 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_qdisc_create\00", align 1
@___asan_gen_.725 = private unnamed_addr constant [23 x i8] c"print_fmt_qdisc_create\00", align 1
@___asan_gen_.728 = private unnamed_addr constant [19 x i8] c"event_qdisc_create\00", align 1
@___asan_gen_.731 = private unnamed_addr constant [31 x i8] c"str__bridge__trace_system_name\00", align 1
@___asan_gen_.734 = private unnamed_addr constant [30 x i8] c"trace_event_fields_br_fdb_add\00", align 1
@___asan_gen_.737 = private unnamed_addr constant [34 x i8] c"trace_event_type_funcs_br_fdb_add\00", align 1
@___asan_gen_.740 = private unnamed_addr constant [21 x i8] c"print_fmt_br_fdb_add\00", align 1
@___asan_gen_.743 = private unnamed_addr constant [17 x i8] c"event_br_fdb_add\00", align 1
@___asan_gen_.746 = private unnamed_addr constant [45 x i8] c"trace_event_fields_br_fdb_external_learn_add\00", align 1
@___asan_gen_.749 = private unnamed_addr constant [49 x i8] c"trace_event_type_funcs_br_fdb_external_learn_add\00", align 1
@___asan_gen_.752 = private unnamed_addr constant [36 x i8] c"print_fmt_br_fdb_external_learn_add\00", align 1
@___asan_gen_.755 = private unnamed_addr constant [32 x i8] c"event_br_fdb_external_learn_add\00", align 1
@___asan_gen_.758 = private unnamed_addr constant [30 x i8] c"trace_event_fields_fdb_delete\00", align 1
@___asan_gen_.761 = private unnamed_addr constant [34 x i8] c"trace_event_type_funcs_fdb_delete\00", align 1
@___asan_gen_.764 = private unnamed_addr constant [21 x i8] c"print_fmt_fdb_delete\00", align 1
@___asan_gen_.767 = private unnamed_addr constant [17 x i8] c"event_fdb_delete\00", align 1
@___asan_gen_.770 = private unnamed_addr constant [33 x i8] c"trace_event_fields_br_fdb_update\00", align 1
@___asan_gen_.773 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_br_fdb_update\00", align 1
@___asan_gen_.776 = private unnamed_addr constant [24 x i8] c"print_fmt_br_fdb_update\00", align 1
@___asan_gen_.779 = private unnamed_addr constant [20 x i8] c"event_br_fdb_update\00", align 1
@___asan_gen_.782 = private unnamed_addr constant [34 x i8] c"str__page_pool__trace_system_name\00", align 1
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.846, i32 274, i32 1 }
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.846, i32 275, i32 1 }
@___asan_gen_.832 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.846, i32 277, i32 1 }
@___asan_gen_.846 = private unnamed_addr constant [34 x i8] c"../include/trace/events/mmflags.h\00", align 1
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.846, i32 278, i32 1 }
@___asan_gen_.848 = private unnamed_addr constant [37 x i8] c"trace_event_fields_page_pool_release\00", align 1
@___asan_gen_.851 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_page_pool_release\00", align 1
@___asan_gen_.854 = private unnamed_addr constant [28 x i8] c"print_fmt_page_pool_release\00", align 1
@___asan_gen_.857 = private unnamed_addr constant [24 x i8] c"event_page_pool_release\00", align 1
@___asan_gen_.860 = private unnamed_addr constant [43 x i8] c"trace_event_fields_page_pool_state_release\00", align 1
@___asan_gen_.863 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_page_pool_state_release\00", align 1
@___asan_gen_.866 = private unnamed_addr constant [34 x i8] c"print_fmt_page_pool_state_release\00", align 1
@___asan_gen_.869 = private unnamed_addr constant [30 x i8] c"event_page_pool_state_release\00", align 1
@___asan_gen_.872 = private unnamed_addr constant [40 x i8] c"trace_event_fields_page_pool_state_hold\00", align 1
@___asan_gen_.875 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_page_pool_state_hold\00", align 1
@___asan_gen_.878 = private unnamed_addr constant [31 x i8] c"print_fmt_page_pool_state_hold\00", align 1
@___asan_gen_.881 = private unnamed_addr constant [27 x i8] c"event_page_pool_state_hold\00", align 1
@___asan_gen_.884 = private unnamed_addr constant [40 x i8] c"trace_event_fields_page_pool_update_nid\00", align 1
@___asan_gen_.887 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_page_pool_update_nid\00", align 1
@___asan_gen_.890 = private unnamed_addr constant [31 x i8] c"print_fmt_page_pool_update_nid\00", align 1
@___asan_gen_.893 = private unnamed_addr constant [27 x i8] c"event_page_pool_update_nid\00", align 1
@___asan_gen_.896 = private unnamed_addr constant [30 x i8] c"str__neigh__trace_system_name\00", align 1
@___asan_gen_.897 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.898 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.897, i32 36, i32 1 }
@___asan_gen_.899 = private unnamed_addr constant [32 x i8] c"trace_event_fields_neigh_create\00", align 1
@___asan_gen_.902 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_neigh_create\00", align 1
@___asan_gen_.905 = private unnamed_addr constant [23 x i8] c"print_fmt_neigh_create\00", align 1
@___asan_gen_.908 = private unnamed_addr constant [19 x i8] c"event_neigh_create\00", align 1
@___asan_gen_.911 = private unnamed_addr constant [32 x i8] c"trace_event_fields_neigh_update\00", align 1
@___asan_gen_.914 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_neigh_update\00", align 1
@___asan_gen_.917 = private unnamed_addr constant [23 x i8] c"print_fmt_neigh_update\00", align 1
@___asan_gen_.920 = private unnamed_addr constant [19 x i8] c"event_neigh_update\00", align 1
@___asan_gen_.923 = private unnamed_addr constant [33 x i8] c"trace_event_fields_neigh__update\00", align 1
@___asan_gen_.926 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_neigh__update\00", align 1
@___asan_gen_.929 = private unnamed_addr constant [24 x i8] c"print_fmt_neigh__update\00", align 1
@___asan_gen_.932 = private unnamed_addr constant [24 x i8] c"event_neigh_update_done\00", align 1
@___asan_gen_.934 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1629, i32 227, i32 1 }
@___asan_gen_.935 = private unnamed_addr constant [26 x i8] c"event_neigh_timer_handler\00", align 1
@___asan_gen_.937 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1629, i32 232, i32 1 }
@___asan_gen_.938 = private unnamed_addr constant [28 x i8] c"event_neigh_event_send_done\00", align 1
@___asan_gen_.940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1629, i32 237, i32 1 }
@___asan_gen_.941 = private unnamed_addr constant [28 x i8] c"event_neigh_event_send_dead\00", align 1
@___asan_gen_.943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1629, i32 242, i32 1 }
@___asan_gen_.944 = private unnamed_addr constant [32 x i8] c"event_neigh_cleanup_and_release\00", align 1
@___asan_gen_.946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1629, i32 247, i32 1 }
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1008, i32 37, i32 1 }
@___asan_gen_.997 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1008, i32 64, i32 1 }
@___asan_gen_.1008 = private unnamed_addr constant [30 x i8] c"../include/trace/events/skb.h\00", align 1
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1008, i32 81, i32 1 }
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 14, i32 1 }
@___asan_gen_.1078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 71, i32 1 }
@___asan_gen_.1087 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 98, i32 1 }
@___asan_gen_.1090 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 121, i32 1 }
@___asan_gen_.1120 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 164, i32 1 }
@___asan_gen_.1125 = private unnamed_addr constant [30 x i8] c"../include/trace/events/net.h\00", align 1
@___asan_gen_.1126 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1125, i32 270, i32 1 }
@___asan_gen_.1146 = private unnamed_addr constant [31 x i8] c"../include/trace/events/napi.h\00", align 1
@___asan_gen_.1147 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1146, i32 14, i32 1 }
@___asan_gen_.1156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1269, i32 71, i32 1 }
@___asan_gen_.1198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1269, i32 93, i32 1 }
@___asan_gen_.1258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1269, i32 138, i32 1 }
@___asan_gen_.1269 = private unnamed_addr constant [31 x i8] c"../include/trace/events/sock.h\00", align 1
@___asan_gen_.1270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1269, i32 204, i32 1 }
@___asan_gen_.1275 = private unnamed_addr constant [30 x i8] c"../include/trace/events/udp.h\00", align 1
@___asan_gen_.1276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1275, i32 11, i32 1 }
@___asan_gen_.1288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 50, i32 1 }
@___asan_gen_.1300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 121, i32 1 }
@___asan_gen_.1309 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 190, i32 1 }
@___asan_gen_.1345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 238, i32 1 }
@___asan_gen_.1347 = private unnamed_addr constant [30 x i8] c"../include/trace/events/tcp.h\00", align 1
@___asan_gen_.1348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1347, i32 343, i32 1 }
@___asan_gen_.1392 = private unnamed_addr constant [30 x i8] c"../include/trace/events/fib.h\00", align 1
@___asan_gen_.1393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1392, i32 13, i32 1 }
@___asan_gen_.1426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1437, i32 14, i32 1 }
@___asan_gen_.1429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1437, i32 49, i32 1 }
@___asan_gen_.1435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1437, i32 77, i32 1 }
@___asan_gen_.1437 = private unnamed_addr constant [32 x i8] c"../include/trace/events/qdisc.h\00", align 1
@___asan_gen_.1438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1437, i32 127, i32 1 }
@___asan_gen_.1456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1470, i32 12, i32 1 }
@___asan_gen_.1465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1470, i32 42, i32 1 }
@___asan_gen_.1468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1470, i32 69, i32 1 }
@___asan_gen_.1470 = private unnamed_addr constant [33 x i8] c"../include/trace/events/bridge.h\00", align 1
@___asan_gen_.1471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1470, i32 95, i32 1 }
@___asan_gen_.1498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1521, i32 14, i32 1 }
@___asan_gen_.1510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1521, i32 42, i32 1 }
@___asan_gen_.1513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1521, i32 67, i32 1 }
@___asan_gen_.1521 = private unnamed_addr constant [36 x i8] c"../include/trace/events/page_pool.h\00", align 1
@___asan_gen_.1522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1521, i32 92, i32 1 }
@___asan_gen_.1549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1629, i32 23, i32 1 }
@___asan_gen_.1624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1629, i32 72, i32 1 }
@___asan_gen_.1625 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1628 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.1629 = private unnamed_addr constant [32 x i8] c"../include/trace/events/neigh.h\00", align 1
@___asan_gen_.1630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1629, i32 156, i32 1 }
@llvm.compiler.used = appending global [853 x ptr] [ptr @TRACE_SYSTEM_0, ptr @TRACE_SYSTEM_1, ptr @TRACE_SYSTEM_10, ptr @TRACE_SYSTEM_2, ptr @TRACE_SYSTEM_COMPACT_COMPLETE, ptr @TRACE_SYSTEM_COMPACT_CONTENDED, ptr @TRACE_SYSTEM_COMPACT_CONTINUE, ptr @TRACE_SYSTEM_COMPACT_DEFERRED, ptr @TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, ptr @TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, ptr @TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, ptr @TRACE_SYSTEM_COMPACT_PRIO_ASYNC, ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, ptr @TRACE_SYSTEM_COMPACT_SKIPPED, ptr @TRACE_SYSTEM_COMPACT_SUCCESS, ptr @TRACE_SYSTEM_IPPROTO_DCCP, ptr @TRACE_SYSTEM_IPPROTO_MPTCP, ptr @TRACE_SYSTEM_IPPROTO_SCTP, ptr @TRACE_SYSTEM_IPPROTO_TCP, ptr @TRACE_SYSTEM_LRU_ACTIVE_ANON, ptr @TRACE_SYSTEM_LRU_ACTIVE_FILE, ptr @TRACE_SYSTEM_LRU_INACTIVE_ANON, ptr @TRACE_SYSTEM_LRU_INACTIVE_FILE, ptr @TRACE_SYSTEM_LRU_UNEVICTABLE, ptr @TRACE_SYSTEM_SKB_DROP_REASON_MAX, ptr @TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED, ptr @TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET, ptr @TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL, ptr @TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER, ptr @TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM, ptr @TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM, ptr @TRACE_SYSTEM_TCP_CLOSE, ptr @TRACE_SYSTEM_TCP_CLOSE_WAIT, ptr @TRACE_SYSTEM_TCP_CLOSING, ptr @TRACE_SYSTEM_TCP_ESTABLISHED, ptr @TRACE_SYSTEM_TCP_FIN_WAIT1, ptr @TRACE_SYSTEM_TCP_FIN_WAIT2, ptr @TRACE_SYSTEM_TCP_LAST_ACK, ptr @TRACE_SYSTEM_TCP_LISTEN, ptr @TRACE_SYSTEM_TCP_NEW_SYN_RECV, ptr @TRACE_SYSTEM_TCP_SYN_RECV, ptr @TRACE_SYSTEM_TCP_SYN_SENT, ptr @TRACE_SYSTEM_TCP_TIME_WAIT, ptr @TRACE_SYSTEM_ZONE_DMA, ptr @TRACE_SYSTEM_ZONE_HIGHMEM, ptr @TRACE_SYSTEM_ZONE_MOVABLE, ptr @TRACE_SYSTEM_ZONE_NORMAL, ptr @__TRACE_SYSTEM_0, ptr @__TRACE_SYSTEM_1, ptr @__TRACE_SYSTEM_10, ptr @__TRACE_SYSTEM_2, ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, ptr @__TRACE_SYSTEM_IPPROTO_DCCP, ptr @__TRACE_SYSTEM_IPPROTO_MPTCP, ptr @__TRACE_SYSTEM_IPPROTO_SCTP, ptr @__TRACE_SYSTEM_IPPROTO_TCP, ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, ptr @__TRACE_SYSTEM_SKB_DROP_REASON_MAX, ptr @__TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED, ptr @__TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET, ptr @__TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL, ptr @__TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER, ptr @__TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM, ptr @__TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM, ptr @__TRACE_SYSTEM_TCP_CLOSE, ptr @__TRACE_SYSTEM_TCP_CLOSE_WAIT, ptr @__TRACE_SYSTEM_TCP_CLOSING, ptr @__TRACE_SYSTEM_TCP_ESTABLISHED, ptr @__TRACE_SYSTEM_TCP_FIN_WAIT1, ptr @__TRACE_SYSTEM_TCP_FIN_WAIT2, ptr @__TRACE_SYSTEM_TCP_LAST_ACK, ptr @__TRACE_SYSTEM_TCP_LISTEN, ptr @__TRACE_SYSTEM_TCP_NEW_SYN_RECV, ptr @__TRACE_SYSTEM_TCP_SYN_RECV, ptr @__TRACE_SYSTEM_TCP_SYN_SENT, ptr @__TRACE_SYSTEM_TCP_TIME_WAIT, ptr @__TRACE_SYSTEM_ZONE_DMA, ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, ptr @__TRACE_SYSTEM_ZONE_MOVABLE, ptr @__TRACE_SYSTEM_ZONE_NORMAL, ptr @__bpf_trace_tp_map_br_fdb_add, ptr @__bpf_trace_tp_map_br_fdb_external_learn_add, ptr @__bpf_trace_tp_map_br_fdb_update, ptr @__bpf_trace_tp_map_consume_skb, ptr @__bpf_trace_tp_map_fdb_delete, ptr @__bpf_trace_tp_map_fib_table_lookup, ptr @__bpf_trace_tp_map_inet_sk_error_report, ptr @__bpf_trace_tp_map_inet_sock_set_state, ptr @__bpf_trace_tp_map_kfree_skb, ptr @__bpf_trace_tp_map_napi_gro_frags_entry, ptr @__bpf_trace_tp_map_napi_gro_frags_exit, ptr @__bpf_trace_tp_map_napi_gro_receive_entry, ptr @__bpf_trace_tp_map_napi_gro_receive_exit, ptr @__bpf_trace_tp_map_napi_poll, ptr @__bpf_trace_tp_map_neigh_cleanup_and_release, ptr @__bpf_trace_tp_map_neigh_create, ptr @__bpf_trace_tp_map_neigh_event_send_dead, ptr @__bpf_trace_tp_map_neigh_event_send_done, ptr @__bpf_trace_tp_map_neigh_timer_handler, ptr @__bpf_trace_tp_map_neigh_update, ptr @__bpf_trace_tp_map_neigh_update_done, ptr @__bpf_trace_tp_map_net_dev_queue, ptr @__bpf_trace_tp_map_net_dev_start_xmit, ptr @__bpf_trace_tp_map_net_dev_xmit, ptr @__bpf_trace_tp_map_net_dev_xmit_timeout, ptr @__bpf_trace_tp_map_netif_receive_skb, ptr @__bpf_trace_tp_map_netif_receive_skb_entry, ptr @__bpf_trace_tp_map_netif_receive_skb_exit, ptr @__bpf_trace_tp_map_netif_receive_skb_list_entry, ptr @__bpf_trace_tp_map_netif_receive_skb_list_exit, ptr @__bpf_trace_tp_map_netif_rx, ptr @__bpf_trace_tp_map_netif_rx_entry, ptr @__bpf_trace_tp_map_netif_rx_exit, ptr @__bpf_trace_tp_map_netif_rx_ni_entry, ptr @__bpf_trace_tp_map_netif_rx_ni_exit, ptr @__bpf_trace_tp_map_page_pool_release, ptr @__bpf_trace_tp_map_page_pool_state_hold, ptr @__bpf_trace_tp_map_page_pool_state_release, ptr @__bpf_trace_tp_map_page_pool_update_nid, ptr @__bpf_trace_tp_map_qdisc_create, ptr @__bpf_trace_tp_map_qdisc_dequeue, ptr @__bpf_trace_tp_map_qdisc_destroy, ptr @__bpf_trace_tp_map_qdisc_enqueue, ptr @__bpf_trace_tp_map_qdisc_reset, ptr @__bpf_trace_tp_map_skb_copy_datagram_iovec, ptr @__bpf_trace_tp_map_sock_exceed_buf_limit, ptr @__bpf_trace_tp_map_sock_rcvqueue_full, ptr @__bpf_trace_tp_map_tcp_bad_csum, ptr @__bpf_trace_tp_map_tcp_destroy_sock, ptr @__bpf_trace_tp_map_tcp_probe, ptr @__bpf_trace_tp_map_tcp_rcv_space_adjust, ptr @__bpf_trace_tp_map_tcp_receive_reset, ptr @__bpf_trace_tp_map_tcp_retransmit_skb, ptr @__bpf_trace_tp_map_tcp_retransmit_synack, ptr @__bpf_trace_tp_map_tcp_send_reset, ptr @__bpf_trace_tp_map_udp_fail_queue_rcv_skb, ptr @__event_br_fdb_add, ptr @__event_br_fdb_external_learn_add, ptr @__event_br_fdb_update, ptr @__event_consume_skb, ptr @__event_fdb_delete, ptr @__event_fib_table_lookup, ptr @__event_inet_sk_error_report, ptr @__event_inet_sock_set_state, ptr @__event_kfree_skb, ptr @__event_napi_gro_frags_entry, ptr @__event_napi_gro_frags_exit, ptr @__event_napi_gro_receive_entry, ptr @__event_napi_gro_receive_exit, ptr @__event_napi_poll, ptr @__event_neigh_cleanup_and_release, ptr @__event_neigh_create, ptr @__event_neigh_event_send_dead, ptr @__event_neigh_event_send_done, ptr @__event_neigh_timer_handler, ptr @__event_neigh_update, ptr @__event_neigh_update_done, ptr @__event_net_dev_queue, ptr @__event_net_dev_start_xmit, ptr @__event_net_dev_xmit, ptr @__event_net_dev_xmit_timeout, ptr @__event_netif_receive_skb, ptr @__event_netif_receive_skb_entry, ptr @__event_netif_receive_skb_exit, ptr @__event_netif_receive_skb_list_entry, ptr @__event_netif_receive_skb_list_exit, ptr @__event_netif_rx, ptr @__event_netif_rx_entry, ptr @__event_netif_rx_exit, ptr @__event_netif_rx_ni_entry, ptr @__event_netif_rx_ni_exit, ptr @__event_page_pool_release, ptr @__event_page_pool_state_hold, ptr @__event_page_pool_state_release, ptr @__event_page_pool_update_nid, ptr @__event_qdisc_create, ptr @__event_qdisc_dequeue, ptr @__event_qdisc_destroy, ptr @__event_qdisc_enqueue, ptr @__event_qdisc_reset, ptr @__event_skb_copy_datagram_iovec, ptr @__event_sock_exceed_buf_limit, ptr @__event_sock_rcvqueue_full, ptr @__event_tcp_bad_csum, ptr @__event_tcp_destroy_sock, ptr @__event_tcp_probe, ptr @__event_tcp_rcv_space_adjust, ptr @__event_tcp_receive_reset, ptr @__event_tcp_retransmit_skb, ptr @__event_tcp_retransmit_synack, ptr @__event_tcp_send_reset, ptr @__event_udp_fail_queue_rcv_skb, ptr @__ksymtab___SCK__tp_func_br_fdb_add, ptr @__ksymtab___SCK__tp_func_br_fdb_external_learn_add, ptr @__ksymtab___SCK__tp_func_br_fdb_update, ptr @__ksymtab___SCK__tp_func_fdb_delete, ptr @__ksymtab___SCK__tp_func_kfree_skb, ptr @__ksymtab___SCK__tp_func_napi_poll, ptr @__ksymtab___SCK__tp_func_neigh_cleanup_and_release, ptr @__ksymtab___SCK__tp_func_neigh_event_send_dead, ptr @__ksymtab___SCK__tp_func_neigh_event_send_done, ptr @__ksymtab___SCK__tp_func_neigh_timer_handler, ptr @__ksymtab___SCK__tp_func_neigh_update, ptr @__ksymtab___SCK__tp_func_neigh_update_done, ptr @__ksymtab___SCK__tp_func_tcp_bad_csum, ptr @__ksymtab___SCK__tp_func_tcp_send_reset, ptr @__ksymtab___traceiter_br_fdb_add, ptr @__ksymtab___traceiter_br_fdb_external_learn_add, ptr @__ksymtab___traceiter_br_fdb_update, ptr @__ksymtab___traceiter_fdb_delete, ptr @__ksymtab___traceiter_kfree_skb, ptr @__ksymtab___traceiter_napi_poll, ptr @__ksymtab___traceiter_neigh_cleanup_and_release, ptr @__ksymtab___traceiter_neigh_event_send_dead, ptr @__ksymtab___traceiter_neigh_event_send_done, ptr @__ksymtab___traceiter_neigh_timer_handler, ptr @__ksymtab___traceiter_neigh_update, ptr @__ksymtab___traceiter_neigh_update_done, ptr @__ksymtab___traceiter_tcp_bad_csum, ptr @__ksymtab___traceiter_tcp_send_reset, ptr @__ksymtab___tracepoint_br_fdb_add, ptr @__ksymtab___tracepoint_br_fdb_external_learn_add, ptr @__ksymtab___tracepoint_br_fdb_update, ptr @__ksymtab___tracepoint_fdb_delete, ptr @__ksymtab___tracepoint_kfree_skb, ptr @__ksymtab___tracepoint_napi_poll, ptr @__ksymtab___tracepoint_neigh_cleanup_and_release, ptr @__ksymtab___tracepoint_neigh_event_send_dead, ptr @__ksymtab___tracepoint_neigh_event_send_done, ptr @__ksymtab___tracepoint_neigh_timer_handler, ptr @__ksymtab___tracepoint_neigh_update, ptr @__ksymtab___tracepoint_neigh_update_done, ptr @__ksymtab___tracepoint_tcp_bad_csum, ptr @__ksymtab___tracepoint_tcp_send_reset, ptr @__tracepoint_br_fdb_add, ptr @__tracepoint_br_fdb_external_learn_add, ptr @__tracepoint_br_fdb_update, ptr @__tracepoint_consume_skb, ptr @__tracepoint_fdb_delete, ptr @__tracepoint_fib_table_lookup, ptr @__tracepoint_inet_sk_error_report, ptr @__tracepoint_inet_sock_set_state, ptr @__tracepoint_kfree_skb, ptr @__tracepoint_napi_gro_frags_entry, ptr @__tracepoint_napi_gro_frags_exit, ptr @__tracepoint_napi_gro_receive_entry, ptr @__tracepoint_napi_gro_receive_exit, ptr @__tracepoint_napi_poll, ptr @__tracepoint_neigh_cleanup_and_release, ptr @__tracepoint_neigh_create, ptr @__tracepoint_neigh_event_send_dead, ptr @__tracepoint_neigh_event_send_done, ptr @__tracepoint_neigh_timer_handler, ptr @__tracepoint_neigh_update, ptr @__tracepoint_neigh_update_done, ptr @__tracepoint_net_dev_queue, ptr @__tracepoint_net_dev_start_xmit, ptr @__tracepoint_net_dev_xmit, ptr @__tracepoint_net_dev_xmit_timeout, ptr @__tracepoint_netif_receive_skb, ptr @__tracepoint_netif_receive_skb_entry, ptr @__tracepoint_netif_receive_skb_exit, ptr @__tracepoint_netif_receive_skb_list_entry, ptr @__tracepoint_netif_receive_skb_list_exit, ptr @__tracepoint_netif_rx, ptr @__tracepoint_netif_rx_entry, ptr @__tracepoint_netif_rx_exit, ptr @__tracepoint_netif_rx_ni_entry, ptr @__tracepoint_netif_rx_ni_exit, ptr @__tracepoint_page_pool_release, ptr @__tracepoint_page_pool_state_hold, ptr @__tracepoint_page_pool_state_release, ptr @__tracepoint_page_pool_update_nid, ptr @__tracepoint_ptr_br_fdb_add, ptr @__tracepoint_ptr_br_fdb_external_learn_add, ptr @__tracepoint_ptr_br_fdb_update, ptr @__tracepoint_ptr_consume_skb, ptr @__tracepoint_ptr_fdb_delete, ptr @__tracepoint_ptr_fib_table_lookup, ptr @__tracepoint_ptr_inet_sk_error_report, ptr @__tracepoint_ptr_inet_sock_set_state, ptr @__tracepoint_ptr_kfree_skb, ptr @__tracepoint_ptr_napi_gro_frags_entry, ptr @__tracepoint_ptr_napi_gro_frags_exit, ptr @__tracepoint_ptr_napi_gro_receive_entry, ptr @__tracepoint_ptr_napi_gro_receive_exit, ptr @__tracepoint_ptr_napi_poll, ptr @__tracepoint_ptr_neigh_cleanup_and_release, ptr @__tracepoint_ptr_neigh_create, ptr @__tracepoint_ptr_neigh_event_send_dead, ptr @__tracepoint_ptr_neigh_event_send_done, ptr @__tracepoint_ptr_neigh_timer_handler, ptr @__tracepoint_ptr_neigh_update, ptr @__tracepoint_ptr_neigh_update_done, ptr @__tracepoint_ptr_net_dev_queue, ptr @__tracepoint_ptr_net_dev_start_xmit, ptr @__tracepoint_ptr_net_dev_xmit, ptr @__tracepoint_ptr_net_dev_xmit_timeout, ptr @__tracepoint_ptr_netif_receive_skb, ptr @__tracepoint_ptr_netif_receive_skb_entry, ptr @__tracepoint_ptr_netif_receive_skb_exit, ptr @__tracepoint_ptr_netif_receive_skb_list_entry, ptr @__tracepoint_ptr_netif_receive_skb_list_exit, ptr @__tracepoint_ptr_netif_rx, ptr @__tracepoint_ptr_netif_rx_entry, ptr @__tracepoint_ptr_netif_rx_exit, ptr @__tracepoint_ptr_netif_rx_ni_entry, ptr @__tracepoint_ptr_netif_rx_ni_exit, ptr @__tracepoint_ptr_page_pool_release, ptr @__tracepoint_ptr_page_pool_state_hold, ptr @__tracepoint_ptr_page_pool_state_release, ptr @__tracepoint_ptr_page_pool_update_nid, ptr @__tracepoint_ptr_qdisc_create, ptr @__tracepoint_ptr_qdisc_dequeue, ptr @__tracepoint_ptr_qdisc_destroy, ptr @__tracepoint_ptr_qdisc_enqueue, ptr @__tracepoint_ptr_qdisc_reset, ptr @__tracepoint_ptr_skb_copy_datagram_iovec, ptr @__tracepoint_ptr_sock_exceed_buf_limit, ptr @__tracepoint_ptr_sock_rcvqueue_full, ptr @__tracepoint_ptr_tcp_bad_csum, ptr @__tracepoint_ptr_tcp_destroy_sock, ptr @__tracepoint_ptr_tcp_probe, ptr @__tracepoint_ptr_tcp_rcv_space_adjust, ptr @__tracepoint_ptr_tcp_receive_reset, ptr @__tracepoint_ptr_tcp_retransmit_skb, ptr @__tracepoint_ptr_tcp_retransmit_synack, ptr @__tracepoint_ptr_tcp_send_reset, ptr @__tracepoint_ptr_udp_fail_queue_rcv_skb, ptr @__tracepoint_qdisc_create, ptr @__tracepoint_qdisc_dequeue, ptr @__tracepoint_qdisc_destroy, ptr @__tracepoint_qdisc_enqueue, ptr @__tracepoint_qdisc_reset, ptr @__tracepoint_skb_copy_datagram_iovec, ptr @__tracepoint_sock_exceed_buf_limit, ptr @__tracepoint_sock_rcvqueue_full, ptr @__tracepoint_tcp_bad_csum, ptr @__tracepoint_tcp_destroy_sock, ptr @__tracepoint_tcp_probe, ptr @__tracepoint_tcp_rcv_space_adjust, ptr @__tracepoint_tcp_receive_reset, ptr @__tracepoint_tcp_retransmit_skb, ptr @__tracepoint_tcp_retransmit_synack, ptr @__tracepoint_tcp_send_reset, ptr @__tracepoint_udp_fail_queue_rcv_skb, ptr @event_br_fdb_add, ptr @event_br_fdb_external_learn_add, ptr @event_br_fdb_update, ptr @event_class_br_fdb_add, ptr @event_class_br_fdb_external_learn_add, ptr @event_class_br_fdb_update, ptr @event_class_consume_skb, ptr @event_class_fdb_delete, ptr @event_class_fib_table_lookup, ptr @event_class_inet_sk_error_report, ptr @event_class_inet_sock_set_state, ptr @event_class_kfree_skb, ptr @event_class_napi_poll, ptr @event_class_neigh__update, ptr @event_class_neigh_create, ptr @event_class_neigh_update, ptr @event_class_net_dev_rx_exit_template, ptr @event_class_net_dev_rx_verbose_template, ptr @event_class_net_dev_start_xmit, ptr @event_class_net_dev_template, ptr @event_class_net_dev_xmit, ptr @event_class_net_dev_xmit_timeout, ptr @event_class_page_pool_release, ptr @event_class_page_pool_state_hold, ptr @event_class_page_pool_state_release, ptr @event_class_page_pool_update_nid, ptr @event_class_qdisc_create, ptr @event_class_qdisc_dequeue, ptr @event_class_qdisc_destroy, ptr @event_class_qdisc_enqueue, ptr @event_class_qdisc_reset, ptr @event_class_skb_copy_datagram_iovec, ptr @event_class_sock_exceed_buf_limit, ptr @event_class_sock_rcvqueue_full, ptr @event_class_tcp_event_sk, ptr @event_class_tcp_event_sk_skb, ptr @event_class_tcp_event_skb, ptr @event_class_tcp_probe, ptr @event_class_tcp_retransmit_synack, ptr @event_class_udp_fail_queue_rcv_skb, ptr @event_consume_skb, ptr @event_fdb_delete, ptr @event_fib_table_lookup, ptr @event_inet_sk_error_report, ptr @event_inet_sock_set_state, ptr @event_kfree_skb, ptr @event_napi_gro_frags_entry, ptr @event_napi_gro_frags_exit, ptr @event_napi_gro_receive_entry, ptr @event_napi_gro_receive_exit, ptr @event_napi_poll, ptr @event_neigh_cleanup_and_release, ptr @event_neigh_create, ptr @event_neigh_event_send_dead, ptr @event_neigh_event_send_done, ptr @event_neigh_timer_handler, ptr @event_neigh_update, ptr @event_neigh_update_done, ptr @event_net_dev_queue, ptr @event_net_dev_start_xmit, ptr @event_net_dev_xmit, ptr @event_net_dev_xmit_timeout, ptr @event_netif_receive_skb, ptr @event_netif_receive_skb_entry, ptr @event_netif_receive_skb_exit, ptr @event_netif_receive_skb_list_entry, ptr @event_netif_receive_skb_list_exit, ptr @event_netif_rx, ptr @event_netif_rx_entry, ptr @event_netif_rx_exit, ptr @event_netif_rx_ni_entry, ptr @event_netif_rx_ni_exit, ptr @event_page_pool_release, ptr @event_page_pool_state_hold, ptr @event_page_pool_state_release, ptr @event_page_pool_update_nid, ptr @event_qdisc_create, ptr @event_qdisc_dequeue, ptr @event_qdisc_destroy, ptr @event_qdisc_enqueue, ptr @event_qdisc_reset, ptr @event_skb_copy_datagram_iovec, ptr @event_sock_exceed_buf_limit, ptr @event_sock_rcvqueue_full, ptr @event_tcp_bad_csum, ptr @event_tcp_destroy_sock, ptr @event_tcp_probe, ptr @event_tcp_rcv_space_adjust, ptr @event_tcp_receive_reset, ptr @event_tcp_retransmit_skb, ptr @event_tcp_retransmit_synack, ptr @event_tcp_send_reset, ptr @event_udp_fail_queue_rcv_skb, ptr @str__skb__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @trace_event_fields_kfree_skb, ptr @trace_event_type_funcs_kfree_skb, ptr @print_fmt_kfree_skb, ptr @trace_event_fields_consume_skb, ptr @trace_event_type_funcs_consume_skb, ptr @print_fmt_consume_skb, ptr @trace_event_fields_skb_copy_datagram_iovec, ptr @trace_event_type_funcs_skb_copy_datagram_iovec, ptr @print_fmt_skb_copy_datagram_iovec, ptr @str__net__trace_system_name, ptr @trace_event_fields_net_dev_start_xmit, ptr @trace_event_type_funcs_net_dev_start_xmit, ptr @print_fmt_net_dev_start_xmit, ptr @trace_event_fields_net_dev_xmit, ptr @trace_event_type_funcs_net_dev_xmit, ptr @print_fmt_net_dev_xmit, ptr @trace_event_fields_net_dev_xmit_timeout, ptr @trace_event_type_funcs_net_dev_xmit_timeout, ptr @print_fmt_net_dev_xmit_timeout, ptr @trace_event_fields_net_dev_template, ptr @trace_event_type_funcs_net_dev_template, ptr @print_fmt_net_dev_template, ptr @trace_event_fields_net_dev_rx_verbose_template, ptr @trace_event_type_funcs_net_dev_rx_verbose_template, ptr @print_fmt_net_dev_rx_verbose_template, ptr @trace_event_fields_net_dev_rx_exit_template, ptr @trace_event_type_funcs_net_dev_rx_exit_template, ptr @print_fmt_net_dev_rx_exit_template, ptr @str__napi__trace_system_name, ptr @trace_event_fields_napi_poll, ptr @trace_event_type_funcs_napi_poll, ptr @print_fmt_napi_poll, ptr @str__sock__trace_system_name, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @trace_event_fields_sock_rcvqueue_full, ptr @trace_event_type_funcs_sock_rcvqueue_full, ptr @print_fmt_sock_rcvqueue_full, ptr @trace_event_fields_sock_exceed_buf_limit, ptr @trace_event_type_funcs_sock_exceed_buf_limit, ptr @print_fmt_sock_exceed_buf_limit, ptr @trace_event_fields_inet_sock_set_state, ptr @trace_event_type_funcs_inet_sock_set_state, ptr @print_fmt_inet_sock_set_state, ptr @trace_event_fields_inet_sk_error_report, ptr @trace_event_type_funcs_inet_sk_error_report, ptr @print_fmt_inet_sk_error_report, ptr @str__udp__trace_system_name, ptr @trace_event_fields_udp_fail_queue_rcv_skb, ptr @trace_event_type_funcs_udp_fail_queue_rcv_skb, ptr @print_fmt_udp_fail_queue_rcv_skb, ptr @str__tcp__trace_system_name, ptr @trace_event_fields_tcp_event_sk_skb, ptr @trace_event_type_funcs_tcp_event_sk_skb, ptr @print_fmt_tcp_event_sk_skb, ptr @trace_event_fields_tcp_event_sk, ptr @trace_event_type_funcs_tcp_event_sk, ptr @print_fmt_tcp_event_sk, ptr @trace_event_fields_tcp_retransmit_synack, ptr @trace_event_type_funcs_tcp_retransmit_synack, ptr @print_fmt_tcp_retransmit_synack, ptr @trace_event_fields_tcp_probe, ptr @trace_event_type_funcs_tcp_probe, ptr @print_fmt_tcp_probe, ptr @trace_event_fields_tcp_event_skb, ptr @trace_event_type_funcs_tcp_event_skb, ptr @print_fmt_tcp_event_skb, ptr @str__fib__trace_system_name, ptr @trace_event_fields_fib_table_lookup, ptr @trace_event_type_funcs_fib_table_lookup, ptr @print_fmt_fib_table_lookup, ptr @str__qdisc__trace_system_name, ptr @trace_event_fields_qdisc_dequeue, ptr @trace_event_type_funcs_qdisc_dequeue, ptr @print_fmt_qdisc_dequeue, ptr @trace_event_fields_qdisc_enqueue, ptr @trace_event_type_funcs_qdisc_enqueue, ptr @print_fmt_qdisc_enqueue, ptr @trace_event_fields_qdisc_reset, ptr @trace_event_type_funcs_qdisc_reset, ptr @print_fmt_qdisc_reset, ptr @trace_event_fields_qdisc_destroy, ptr @trace_event_type_funcs_qdisc_destroy, ptr @print_fmt_qdisc_destroy, ptr @trace_event_fields_qdisc_create, ptr @trace_event_type_funcs_qdisc_create, ptr @print_fmt_qdisc_create, ptr @str__bridge__trace_system_name, ptr @trace_event_fields_br_fdb_add, ptr @trace_event_type_funcs_br_fdb_add, ptr @print_fmt_br_fdb_add, ptr @trace_event_fields_br_fdb_external_learn_add, ptr @trace_event_type_funcs_br_fdb_external_learn_add, ptr @print_fmt_br_fdb_external_learn_add, ptr @trace_event_fields_fdb_delete, ptr @trace_event_type_funcs_fdb_delete, ptr @print_fmt_fdb_delete, ptr @trace_event_fields_br_fdb_update, ptr @trace_event_type_funcs_br_fdb_update, ptr @print_fmt_br_fdb_update, ptr @str__page_pool__trace_system_name, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @trace_event_fields_page_pool_release, ptr @trace_event_type_funcs_page_pool_release, ptr @print_fmt_page_pool_release, ptr @trace_event_fields_page_pool_state_release, ptr @trace_event_type_funcs_page_pool_state_release, ptr @print_fmt_page_pool_state_release, ptr @trace_event_fields_page_pool_state_hold, ptr @trace_event_type_funcs_page_pool_state_hold, ptr @print_fmt_page_pool_state_hold, ptr @trace_event_fields_page_pool_update_nid, ptr @trace_event_type_funcs_page_pool_update_nid, ptr @print_fmt_page_pool_update_nid, ptr @str__neigh__trace_system_name, ptr @trace_event_fields_neigh_create, ptr @trace_event_type_funcs_neigh_create, ptr @print_fmt_neigh_create, ptr @trace_event_fields_neigh_update, ptr @trace_event_type_funcs_neigh_update, ptr @print_fmt_neigh_update, ptr @trace_event_fields_neigh__update, ptr @trace_event_type_funcs_neigh__update, ptr @print_fmt_neigh__update, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @trace_raw_output_kfree_skb.symbols, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @trace_raw_output_sock_exceed_buf_limit.symbols, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @trace_raw_output_inet_sock_set_state.symbols, ptr @.str.144, ptr @.str.145, ptr @trace_raw_output_inet_sock_set_state.symbols.146, ptr @trace_raw_output_inet_sock_set_state.symbols.147, ptr @trace_raw_output_inet_sock_set_state.symbols.148, ptr @.str.149, ptr @.str.150, ptr @trace_raw_output_inet_sk_error_report.symbols, ptr @trace_raw_output_inet_sk_error_report.symbols.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @trace_raw_output_tcp_event_sk_skb.symbols, ptr @trace_raw_output_tcp_event_sk_skb.symbols.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @trace_raw_output_tcp_event_sk.symbols, ptr @.str.160, ptr @.str.161, ptr @trace_raw_output_tcp_retransmit_synack.symbols, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @trace_raw_output_tcp_probe.symbols, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @trace_raw_output_neigh_update.symbols, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @trace_raw_output_neigh_update.symbols.264, ptr @.str.265, ptr @trace_raw_output_neigh__update.symbols], section "llvm.metadata"
@0 = internal global [454 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__skb__trace_system_name to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_kfree_skb to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_kfree_skb to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_kfree_skb to i32), i32 439, i32 544, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_kfree_skb to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_consume_skb to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_consume_skb to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_consume_skb to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_consume_skb to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_skb_copy_datagram_iovec to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_skb_copy_datagram_iovec to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_skb_copy_datagram_iovec to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_skb_copy_datagram_iovec to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__net__trace_system_name to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_net_dev_start_xmit to i32), i32 432, i32 544, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_net_dev_start_xmit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_net_dev_start_xmit to i32), i32 537, i32 672, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_net_dev_start_xmit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_net_dev_xmit to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_net_dev_xmit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_net_dev_xmit to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_net_dev_xmit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_net_dev_xmit_timeout to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_net_dev_xmit_timeout to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_net_dev_xmit_timeout to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_net_dev_xmit_timeout to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_net_dev_template to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_net_dev_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_net_dev_template to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_net_dev_queue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_receive_skb to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_rx to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_net_dev_rx_verbose_template to i32), i32 480, i32 576, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_net_dev_rx_verbose_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_net_dev_rx_verbose_template to i32), i32 548, i32 704, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_napi_gro_frags_entry to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_napi_gro_receive_entry to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_receive_skb_entry to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_receive_skb_list_entry to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_rx_entry to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_rx_ni_entry to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_net_dev_rx_exit_template to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_net_dev_rx_exit_template to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_net_dev_rx_exit_template to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_napi_gro_frags_exit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_napi_gro_receive_exit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_receive_skb_exit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_rx_exit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_rx_ni_exit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_netif_receive_skb_list_exit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__napi__trace_system_name to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_napi_poll to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_napi_poll to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_napi_poll to i32), i32 118, i32 160, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_napi_poll to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__sock__trace_system_name to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_sock_rcvqueue_full to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_sock_rcvqueue_full to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_sock_rcvqueue_full to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_sock_rcvqueue_full to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_sock_exceed_buf_limit to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_sock_exceed_buf_limit to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_sock_exceed_buf_limit to i32), i32 377, i32 448, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_sock_exceed_buf_limit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_inet_sock_set_state to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_inet_sock_set_state to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_inet_sock_set_state to i32), i32 1340, i32 1664, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_inet_sock_set_state to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_inet_sk_error_report to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_inet_sk_error_report to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_inet_sk_error_report to i32), i32 431, i32 544, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_inet_sk_error_report to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__udp__trace_system_name to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_udp_fail_queue_rcv_skb to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_udp_fail_queue_rcv_skb to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_udp_fail_queue_rcv_skb to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_udp_fail_queue_rcv_skb to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__tcp__trace_system_name to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_tcp_event_sk_skb to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_tcp_event_sk_skb to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_tcp_event_sk_skb to i32), i32 688, i32 864, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_tcp_retransmit_skb to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_tcp_send_reset to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_tcp_event_sk to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_tcp_event_sk to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_tcp_event_sk to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_tcp_receive_reset to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_tcp_destroy_sock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_tcp_rcv_space_adjust to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_tcp_retransmit_synack to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.617 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_tcp_retransmit_synack to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_tcp_retransmit_synack to i32), i32 229, i32 288, i32 ptrtoint (ptr @___asan_gen_.623 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_tcp_retransmit_synack to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_tcp_probe to i32), i32 384, i32 480, i32 ptrtoint (ptr @___asan_gen_.629 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_tcp_probe to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.632 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_tcp_probe to i32), i32 385, i32 512, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_tcp_probe to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_tcp_event_skb to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_tcp_event_skb to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_tcp_event_skb to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_tcp_bad_csum to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__fib__trace_system_name to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_fib_table_lookup to i32), i32 384, i32 480, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_fib_table_lookup to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_fib_table_lookup to i32), i32 279, i32 352, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_fib_table_lookup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__qdisc__trace_system_name to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qdisc_dequeue to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qdisc_dequeue to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qdisc_dequeue to i32), i32 174, i32 224, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qdisc_dequeue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qdisc_enqueue to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qdisc_enqueue to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qdisc_enqueue to i32), i32 117, i32 160, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qdisc_enqueue to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qdisc_reset to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qdisc_reset to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qdisc_reset to i32), i32 212, i32 256, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qdisc_reset to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qdisc_destroy to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qdisc_destroy to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qdisc_destroy to i32), i32 212, i32 256, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qdisc_destroy to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_qdisc_create to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_qdisc_create to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_qdisc_create to i32), i32 131, i32 192, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_qdisc_create to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__bridge__trace_system_name to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_br_fdb_add to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_br_fdb_add to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_br_fdb_add to i32), i32 223, i32 256, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_br_fdb_add to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_br_fdb_external_learn_add to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_br_fdb_external_learn_add to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_br_fdb_external_learn_add to i32), i32 191, i32 224, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_br_fdb_external_learn_add to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_fdb_delete to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_fdb_delete to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_fdb_delete to i32), i32 190, i32 224, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_fdb_delete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_br_fdb_update to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_br_fdb_update to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_br_fdb_update to i32), i32 217, i32 256, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_br_fdb_update to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.779 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__page_pool__trace_system_name to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_page_pool_release to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_page_pool_release to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_page_pool_release to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_page_pool_release to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_page_pool_state_release to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_page_pool_state_release to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_page_pool_state_release to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_page_pool_state_release to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_page_pool_state_hold to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_page_pool_state_hold to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.875 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_page_pool_state_hold to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_page_pool_state_hold to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_page_pool_update_nid to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_page_pool_update_nid to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_page_pool_update_nid to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_page_pool_update_nid to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__neigh__trace_system_name to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_neigh_create to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_neigh_create to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_neigh_create to i32), i32 202, i32 256, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_neigh_create to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_neigh_update to i32), i32 456, i32 576, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_neigh_update to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_neigh_update to i32), i32 885, i32 1088, i32 ptrtoint (ptr @___asan_gen_.917 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_neigh_update to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_neigh__update to i32), i32 384, i32 480, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_neigh__update to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.926 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_neigh__update to i32), i32 571, i32 704, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_neigh_update_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_neigh_timer_handler to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_neigh_event_send_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_neigh_event_send_dead to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.941 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_neigh_cleanup_and_release to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_kfree_skb.symbols to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 246, i32 288, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1090 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 251, i32 288, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1120 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1126 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_sock_exceed_buf_limit.symbols to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 117, i32 160, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_inet_sock_set_state.symbols to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_inet_sock_set_state.symbols.146 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_inet_sock_set_state.symbols.147 to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_inet_sock_set_state.symbols.148 to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 102, i32 160, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_inet_sk_error_report.symbols to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_inet_sk_error_report.symbols.151 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_tcp_event_sk_skb.symbols to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_tcp_event_sk_skb.symbols.156 to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 98, i32 160, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_tcp_event_sk.symbols to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_tcp_retransmit_synack.symbols to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 150, i32 192, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_tcp_probe.symbols to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 109, i32 160, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 89, i32 128, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 204, i32 256, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_neigh_update.symbols to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_neigh_update.symbols.264 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 159, i32 192, i32 ptrtoint (ptr @___asan_gen_.1625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_neigh__update.symbols to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.1628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_kfree_skb(ptr nocapture readnone %__data, ptr noundef %skb, ptr noundef %location, i32 noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_kfree_skb, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb, ptr noundef %location, i32 noundef %reason) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_consume_skb(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_consume_skb, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_skb_copy_datagram_iovec(ptr nocapture readnone %__data, ptr noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_skb_copy_datagram_iovec, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb, i32 noundef %len) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_kfree_skb(ptr noundef %__data, ptr noundef %skb, ptr noundef %location, i32 noundef %reason) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %skb, ptr %skbaddr, align 4
  %location6 = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %location6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %location, ptr %location6, align 4
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %5 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %protocol, align 8
  %protocol7 = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %protocol7 to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %protocol7, align 4
  %reason8 = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %reason8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %reason, ptr %reason8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_kfree_skb(ptr noundef %__data, ptr noundef %skb, ptr noundef %location, i32 noundef %reason) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %skb, ptr %skbaddr, align 4
  %location17 = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %location17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %location, ptr %location17, align 4
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %29 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %protocol, align 8
  %protocol18 = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %protocol18 to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %protocol18, align 4
  %reason19 = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %reason19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %reason, ptr %reason19, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_consume_skb(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_consume_skb, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %skb, ptr %skbaddr, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_consume_skb(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_consume_skb, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %skb, ptr %skbaddr, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_skb_copy_datagram_iovec(ptr noundef %__data, ptr noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_skb_copy_datagram_iovec, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %skb, ptr %skbaddr, align 4
  %len6 = getelementptr inbounds %struct.trace_event_raw_skb_copy_datagram_iovec, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %len6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %len, ptr %len6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_skb_copy_datagram_iovec(ptr noundef %__data, ptr noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_skb_copy_datagram_iovec, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %skb, ptr %skbaddr, align 4
  %len17 = getelementptr inbounds %struct.trace_event_raw_skb_copy_datagram_iovec, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %len17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %len, ptr %len17, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_kfree_skb(ptr noundef %__data, ptr noundef %skb, ptr noundef %location, i32 noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %location to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %reason to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_consume_skb(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_skb_copy_datagram_iovec(ptr noundef %__data, ptr noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %len to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_net_dev_start_xmit(ptr nocapture readnone %__data, ptr noundef %skb, ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_net_dev_start_xmit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb, ptr noundef %dev) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_net_dev_xmit(ptr nocapture readnone %__data, ptr noundef %skb, i32 noundef %rc, ptr noundef %dev, i32 noundef %skb_len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_net_dev_xmit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb, i32 noundef %rc, ptr noundef %dev, i32 noundef %skb_len) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_net_dev_xmit_timeout(ptr nocapture readnone %__data, ptr noundef %dev, i32 noundef %queue_index) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_net_dev_xmit_timeout, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %dev, i32 noundef %queue_index) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_net_dev_queue(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_net_dev_queue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_receive_skb(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_receive_skb, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_rx(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_rx, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_napi_gro_frags_entry(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_napi_gro_frags_entry, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_napi_gro_receive_entry(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_napi_gro_receive_entry, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_receive_skb_entry(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_receive_skb_entry, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_receive_skb_list_entry(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_receive_skb_list_entry, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_rx_entry(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_rx_entry, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_rx_ni_entry(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_rx_ni_entry, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_napi_gro_frags_exit(ptr nocapture readnone %__data, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_napi_gro_frags_exit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %ret) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_napi_gro_receive_exit(ptr nocapture readnone %__data, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_napi_gro_receive_exit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %ret) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_receive_skb_exit(ptr nocapture readnone %__data, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_receive_skb_exit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %ret) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_rx_exit(ptr nocapture readnone %__data, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_rx_exit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %ret) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_rx_ni_exit(ptr nocapture readnone %__data, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_rx_ni_exit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %ret) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_netif_receive_skb_list_exit(ptr nocapture readnone %__data, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_netif_receive_skb_list_exit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %ret) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_net_dev_start_xmit(ptr noundef %__data, ptr noundef %skb, ptr noundef readonly %dev) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i77 = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i77, ptr @.str.68, ptr %dev
  %call.i78 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add = add i32 %call.i78, 61
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %add.i = shl i32 %call.i78, 16
  %or.i = add i32 %add.i, 65596
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 60
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %queue_mapping = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %4 = ptrtoint ptr %queue_mapping to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %queue_mapping, align 8
  %queue_mapping12 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %queue_mapping12 to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %5, ptr %queue_mapping12, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %skb, ptr %skbaddr, align 4
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %8 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %8, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  %vlan_tagged = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 4
  %bf.load.lobit = lshr i32 %bf.load, 31
  %9 = trunc i32 %bf.load.lobit to i8
  %10 = ptrtoint ptr %vlan_tagged to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %9, ptr %vlan_tagged, align 4
  %vlan_proto = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 9
  %11 = ptrtoint ptr %vlan_proto to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %vlan_proto, align 8
  %vlan_proto14 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 5
  %13 = ptrtoint ptr %vlan_proto14 to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %12, ptr %vlan_proto14, align 2
  %vlan_tci = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %14 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vlan_tci, align 2
  %vlan_tci15 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 6
  %16 = ptrtoint ptr %vlan_tci15 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %15, ptr %vlan_tci15, align 4
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %17 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %protocol, align 8
  %protocol16 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 7
  %19 = ptrtoint ptr %protocol16 to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %18, ptr %protocol16, align 2
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %20 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load17 = load i16, ptr %ip_summed, align 8
  %bf.lshr18 = lshr i16 %bf.load17, 9
  %21 = trunc i16 %bf.lshr18 to i8
  %bf.cast19 = and i8 %21, 3
  %ip_summed20 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 8
  %22 = ptrtoint ptr %ip_summed20 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %bf.cast19, ptr %ip_summed20, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %23 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %len, align 4
  %len21 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 9
  %25 = ptrtoint ptr %len21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %len21, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %26 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %data_len, align 8
  %data_len22 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 10
  %28 = ptrtoint ptr %data_len22 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %data_len22, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %29 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %31 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %32 to i32
  %add.ptr.i.i = getelementptr i8, ptr %30, i32 %conv.i.i
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %33 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %34 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %network_offset = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 11
  %35 = ptrtoint ptr %network_offset to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %sub.ptr.sub.i, ptr %network_offset, align 4
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %36 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %transport_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %37)
  %cmp.i = icmp ne i16 %37, -1
  %transport_offset_valid = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 12
  %frombool25 = zext i1 %cmp.i to i8
  %38 = ptrtoint ptr %transport_offset_valid to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %frombool25, ptr %transport_offset_valid, align 4
  %39 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %head.i.i, align 8
  %41 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %transport_header.i, align 2
  %conv.i.i80 = zext i16 %42 to i32
  %add.ptr.i.i81 = getelementptr i8, ptr %40, i32 %conv.i.i80
  %43 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i83 = ptrtoint ptr %add.ptr.i.i81 to i32
  %sub.ptr.rhs.cast.i84 = ptrtoint ptr %44 to i32
  %sub.ptr.sub.i85 = sub i32 %sub.ptr.lhs.cast.i83, %sub.ptr.rhs.cast.i84
  %transport_offset = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 13
  %45 = ptrtoint ptr %transport_offset to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %sub.ptr.sub.i85, ptr %transport_offset, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %46 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %end.i, align 4
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, ptr %47, i32 0, i32 3
  %48 = ptrtoint ptr %tx_flags to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %tx_flags, align 1
  %tx_flags28 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 14
  %50 = ptrtoint ptr %tx_flags28 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %49, ptr %tx_flags28, align 4
  %51 = load ptr, ptr %end.i, align 4
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %gso_size, align 4
  %gso_size30 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 15
  %54 = ptrtoint ptr %gso_size30 to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 %53, ptr %gso_size30, align 2
  %55 = load ptr, ptr %end.i, align 4
  %gso_segs = getelementptr inbounds %struct.skb_shared_info, ptr %55, i32 0, i32 5
  %56 = ptrtoint ptr %gso_segs to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %gso_segs, align 2
  %gso_segs32 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 16
  %58 = ptrtoint ptr %gso_segs32 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %gso_segs32, align 4
  %59 = load ptr, ptr %end.i, align 4
  %gso_type = getelementptr inbounds %struct.skb_shared_info, ptr %59, i32 0, i32 8
  %60 = ptrtoint ptr %gso_type to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %gso_type, align 8
  %conv = trunc i32 %61 to i16
  %gso_type34 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call3, i32 0, i32 17
  %62 = ptrtoint ptr %gso_type34 to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %conv, ptr %gso_type34, align 2
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_net_dev_start_xmit(ptr noundef %__data, ptr noundef %skb, ptr noundef readonly %dev) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %tobool.not.i = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %dev
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65596
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i101.not = icmp eq ptr %15, null
  br i1 %tobool.not.i101.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 72
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 60
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %queue_mapping = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %28 = ptrtoint ptr %queue_mapping to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %queue_mapping, align 8
  %queue_mapping24 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %queue_mapping24 to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %29, ptr %queue_mapping24, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %skb, ptr %skbaddr, align 4
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %32 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %32, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  %vlan_tagged = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 4
  %bf.load.lobit = lshr i32 %bf.load, 31
  %33 = trunc i32 %bf.load.lobit to i8
  %34 = ptrtoint ptr %vlan_tagged to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %33, ptr %vlan_tagged, align 4
  %vlan_proto = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 9
  %35 = ptrtoint ptr %vlan_proto to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %vlan_proto, align 8
  %vlan_proto26 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 5
  %37 = ptrtoint ptr %vlan_proto26 to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %36, ptr %vlan_proto26, align 2
  %vlan_tci = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %38 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %vlan_tci, align 2
  %vlan_tci27 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 6
  %40 = ptrtoint ptr %vlan_tci27 to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %39, ptr %vlan_tci27, align 4
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %41 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %protocol, align 8
  %protocol28 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 7
  %43 = ptrtoint ptr %protocol28 to i32
  call void @__asan_store2_noabort(i32 %43)
  store i16 %42, ptr %protocol28, align 2
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %44 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %44)
  %bf.load29 = load i16, ptr %ip_summed, align 8
  %bf.lshr30 = lshr i16 %bf.load29, 9
  %45 = trunc i16 %bf.lshr30 to i8
  %bf.cast31 = and i8 %45, 3
  %ip_summed32 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 8
  %46 = ptrtoint ptr %ip_summed32 to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %bf.cast31, ptr %ip_summed32, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %47 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %len, align 4
  %len33 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 9
  %49 = ptrtoint ptr %len33 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %len33, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %50 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %data_len, align 8
  %data_len34 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 10
  %52 = ptrtoint ptr %data_len34 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %data_len34, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %53 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %55 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %56 to i32
  %add.ptr.i.i = getelementptr i8, ptr %54, i32 %conv.i.i
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %57 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %58 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %network_offset = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 11
  %59 = ptrtoint ptr %network_offset to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %sub.ptr.sub.i, ptr %network_offset, align 4
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %60 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %transport_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %61)
  %cmp.i = icmp ne i16 %61, -1
  %transport_offset_valid = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 12
  %frombool37 = zext i1 %cmp.i to i8
  %62 = ptrtoint ptr %transport_offset_valid to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 %frombool37, ptr %transport_offset_valid, align 4
  %63 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %head.i.i, align 8
  %65 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %transport_header.i, align 2
  %conv.i.i103 = zext i16 %66 to i32
  %add.ptr.i.i104 = getelementptr i8, ptr %64, i32 %conv.i.i103
  %67 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i106 = ptrtoint ptr %add.ptr.i.i104 to i32
  %sub.ptr.rhs.cast.i107 = ptrtoint ptr %68 to i32
  %sub.ptr.sub.i108 = sub i32 %sub.ptr.lhs.cast.i106, %sub.ptr.rhs.cast.i107
  %transport_offset = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 13
  %69 = ptrtoint ptr %transport_offset to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %sub.ptr.sub.i108, ptr %transport_offset, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %70 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %end.i, align 4
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, ptr %71, i32 0, i32 3
  %72 = ptrtoint ptr %tx_flags to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %tx_flags, align 1
  %tx_flags40 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 14
  %74 = ptrtoint ptr %tx_flags40 to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 %73, ptr %tx_flags40, align 4
  %75 = load ptr, ptr %end.i, align 4
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 4
  %76 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %gso_size, align 4
  %gso_size42 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 15
  %78 = ptrtoint ptr %gso_size42 to i32
  call void @__asan_store2_noabort(i32 %78)
  store i16 %77, ptr %gso_size42, align 2
  %79 = load ptr, ptr %end.i, align 4
  %gso_segs = getelementptr inbounds %struct.skb_shared_info, ptr %79, i32 0, i32 5
  %80 = ptrtoint ptr %gso_segs to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %gso_segs, align 2
  %gso_segs44 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 16
  %82 = ptrtoint ptr %gso_segs44 to i32
  call void @__asan_store2_noabort(i32 %82)
  store i16 %81, ptr %gso_segs44, align 4
  %83 = load ptr, ptr %end.i, align 4
  %gso_type = getelementptr inbounds %struct.skb_shared_info, ptr %83, i32 0, i32 8
  %84 = ptrtoint ptr %gso_type to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %gso_type, align 8
  %conv = trunc i32 %85 to i16
  %gso_type46 = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %call13, i32 0, i32 17
  %86 = ptrtoint ptr %gso_type46 to i32
  call void @__asan_store2_noabort(i32 %86)
  store i16 %conv, ptr %gso_type46, align 2
  %87 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %rctx, align 4
  %89 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %88, ptr noundef %__data, i64 noundef 1, ptr noundef %90, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_net_dev_xmit(ptr noundef %__data, ptr noundef %skb, i32 noundef %rc, ptr noundef readonly %dev, i32 noundef %skb_len) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i29 = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i29, ptr @.str.68, ptr %dev
  %call.i30 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add = add i32 %call.i30, 25
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %add.i = shl i32 %call.i30, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %call3, i32 0, i32 4
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %skb, ptr %skbaddr, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %skb_len, ptr %len, align 4
  %rc6 = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %call3, i32 0, i32 3
  %6 = ptrtoint ptr %rc6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %rc, ptr %rc6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_net_dev_xmit(ptr noundef %__data, ptr noundef %skb, i32 noundef %rc, ptr noundef readonly %dev, i32 noundef %skb_len) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %tobool.not.i = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %dev
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65560
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i53.not = icmp eq ptr %15, null
  br i1 %tobool.not.i53.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 36
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %call13, i32 0, i32 4
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %skb, ptr %skbaddr, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %skb_len, ptr %len, align 4
  %rc17 = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %call13, i32 0, i32 3
  %30 = ptrtoint ptr %rc17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %rc, ptr %rc17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_net_dev_xmit_timeout(ptr noundef %__data, ptr noundef %dev, i32 noundef %queue_index) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i41 = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i41, ptr @.str.68, ptr %dev
  %call.i42 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i42, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %call8.i = tail call ptr @netdev_drivername(ptr noundef %dev) #8
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.end.trace_event_get_offsets_net_dev_xmit_timeout.exit_crit_edge, label %cond.true10.i

if.end.trace_event_get_offsets_net_dev_xmit_timeout.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %trace_event_get_offsets_net_dev_xmit_timeout.exit

cond.true10.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %call11.i = tail call ptr @netdev_drivername(ptr noundef %dev) #8
  br label %trace_event_get_offsets_net_dev_xmit_timeout.exit

trace_event_get_offsets_net_dev_xmit_timeout.exit: ; preds = %cond.true10.i, %if.end.trace_event_get_offsets_net_dev_xmit_timeout.exit_crit_edge
  %cond14.i = phi ptr [ %call11.i, %cond.true10.i ], [ @.str.68, %if.end.trace_event_get_offsets_net_dev_xmit_timeout.exit_crit_edge ]
  %call15.i = tail call i32 @strlen(ptr noundef %cond14.i) #11
  %add16.i = add i32 %call15.i, 1
  %add22.i = add i32 %call.i42, 21
  %add = add i32 %add22.i, %add16.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_net_dev_xmit_timeout.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_net_dev_xmit_timeout.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_net_dev_xmit_timeout.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_net_dev_xmit_timeout.exit
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add22.i
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %__data_loc_driver = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_driver to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or21.i, ptr %__data_loc_driver, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %and13 = and i32 %add22.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %call15 = call ptr @netdev_drivername(ptr noundef %dev) #8
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.end5.cond.end20_crit_edge, label %cond.true17

if.end5.cond.end20_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end20

cond.true17:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %call18 = call ptr @netdev_drivername(ptr noundef %dev) #8
  br label %cond.end20

cond.end20:                                       ; preds = %cond.true17, %if.end5.cond.end20_crit_edge
  %cond21 = phi ptr [ %call18, %cond.true17 ], [ @.str.68, %if.end5.cond.end20_crit_edge ]
  %call22 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef %cond21) #12
  %queue_index23 = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %queue_index23 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %queue_index, ptr %queue_index23, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end20, %trace_event_get_offsets_net_dev_xmit_timeout.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_net_dev_xmit_timeout(ptr noundef %__data, ptr noundef %dev, i32 noundef %queue_index) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %tobool.not.i = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %dev
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %call8.i = tail call ptr @netdev_drivername(ptr noundef %dev) #8
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %entry.trace_event_get_offsets_net_dev_xmit_timeout.exit_crit_edge, label %cond.true10.i

entry.trace_event_get_offsets_net_dev_xmit_timeout.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %trace_event_get_offsets_net_dev_xmit_timeout.exit

cond.true10.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %call11.i = tail call ptr @netdev_drivername(ptr noundef %dev) #8
  br label %trace_event_get_offsets_net_dev_xmit_timeout.exit

trace_event_get_offsets_net_dev_xmit_timeout.exit: ; preds = %cond.true10.i, %entry.trace_event_get_offsets_net_dev_xmit_timeout.exit_crit_edge
  %cond14.i = phi ptr [ %call11.i, %cond.true10.i ], [ @.str.68, %entry.trace_event_get_offsets_net_dev_xmit_timeout.exit_crit_edge ]
  %call15.i = tail call i32 @strlen(ptr noundef %cond14.i) #11
  %add16.i = add i32 %call15.i, 1
  %add18.i = add i32 %call.i, 21
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add18.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_net_dev_xmit_timeout.exit.if.end_crit_edge

trace_event_get_offsets_net_dev_xmit_timeout.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_net_dev_xmit_timeout.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_net_dev_xmit_timeout.exit
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i65.not = icmp eq ptr %15, null
  br i1 %tobool.not.i65.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_net_dev_xmit_timeout.exit.if.end_crit_edge
  %add22.i = add i32 %call.i, 32
  %add12 = add i32 %add22.i, %add16.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %__data_loc_driver = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %__data_loc_driver to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %or21.i, ptr %__data_loc_driver, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %and25 = and i32 %add18.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %call27 = call ptr @netdev_drivername(ptr noundef %dev) #8
  %tobool28.not = icmp eq ptr %call27, null
  br i1 %tobool28.not, label %if.end16.cond.end32_crit_edge, label %cond.true29

if.end16.cond.end32_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end32

cond.true29:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %call30 = call ptr @netdev_drivername(ptr noundef %dev) #8
  br label %cond.end32

cond.end32:                                       ; preds = %cond.true29, %if.end16.cond.end32_crit_edge
  %cond33 = phi ptr [ %call30, %cond.true29 ], [ @.str.68, %if.end16.cond.end32_crit_edge ]
  %call34 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef %cond33) #12
  %queue_index35 = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %queue_index35 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %queue_index, ptr %queue_index35, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end32, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_net_dev_template(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = getelementptr inbounds %struct.anon, ptr %skb, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %tobool.not.i27 = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i27, ptr @.str.68, ptr %5
  %call.i28 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add = add i32 %call.i28, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %add.i = shl i32 %call.i28, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %call3, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %skb, ptr %skbaddr, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  %len6 = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %len6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %len6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %3, align 8
  %tobool9.not = icmp eq ptr %12, null
  %spec.select = select i1 %tobool9.not, ptr @.str.68, ptr %12
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_net_dev_template(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %2 = getelementptr inbounds %struct.anon, ptr %skb, i32 0, i32 2
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %tobool.not.i = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %4
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %5 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %perf_events, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add = add i32 %13, %7
  %14 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %15 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %16, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %14, align 4
  %tobool.not.i51.not = icmp eq ptr %18, null
  br i1 %tobool.not.i51.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %19 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %__regs, align 4
  %21 = call ptr @llvm.returnaddress(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %20, i32 0, i32 15
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx.i, align 4
  %24 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %25 = ptrtoint ptr %24 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %20, i32 0, i32 11
  %26 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx2.i, align 4
  %27 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %20, i32 0, i32 13
  %28 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %20, i32 0, i32 16
  %29 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %call13, i32 0, i32 3
  %30 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %skb, ptr %skbaddr, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %32 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %len, align 4
  %len17 = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %len17 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %len17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %35 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %2, align 8
  %tobool21.not = icmp eq ptr %36, null
  %spec.select = select i1 %tobool21.not, ptr @.str.68, ptr %36
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %14, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_net_dev_rx_verbose_template(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %3 = getelementptr inbounds %struct.anon, ptr %skb, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %tobool.not.i89 = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i89, ptr @.str.68, ptr %5
  %call.i90 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add = add i32 %call.i90, 73
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %add.i = shl i32 %call.i90, 16
  %or.i = add i32 %add.i, 65606
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 70
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %3, align 8
  %tobool8.not = icmp eq ptr %8, null
  %spec.select = select i1 %tobool8.not, ptr @.str.68, ptr %8
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %9 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 11
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %napi_id = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %napi_id to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %napi_id, align 4
  %queue_mapping = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %13 = ptrtoint ptr %queue_mapping to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %queue_mapping, align 8
  %queue_mapping12 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %queue_mapping12 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %14, ptr %queue_mapping12, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %skb, ptr %skbaddr, align 4
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %17 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %17, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  %vlan_tagged = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 5
  %bf.load.lobit = lshr i32 %bf.load, 31
  %18 = trunc i32 %bf.load.lobit to i8
  %19 = ptrtoint ptr %vlan_tagged to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %18, ptr %vlan_tagged, align 4
  %vlan_proto = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 9
  %20 = ptrtoint ptr %vlan_proto to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vlan_proto, align 8
  %vlan_proto14 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 6
  %22 = ptrtoint ptr %vlan_proto14 to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %21, ptr %vlan_proto14, align 2
  %vlan_tci = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %23 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %vlan_tci, align 2
  %vlan_tci15 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 7
  %25 = ptrtoint ptr %vlan_tci15 to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 %24, ptr %vlan_tci15, align 4
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %26 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %protocol, align 8
  %protocol16 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 8
  %28 = ptrtoint ptr %protocol16 to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %27, ptr %protocol16, align 2
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %29 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %29)
  %bf.load17 = load i16, ptr %ip_summed, align 8
  %bf.lshr18 = lshr i16 %bf.load17, 9
  %30 = trunc i16 %bf.lshr18 to i8
  %bf.cast19 = and i8 %30, 3
  %ip_summed20 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 9
  %31 = ptrtoint ptr %ip_summed20 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %bf.cast19, ptr %ip_summed20, align 4
  %hash = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %32 = ptrtoint ptr %hash to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %hash, align 4
  %hash21 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 10
  %34 = ptrtoint ptr %hash21 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %hash21, align 4
  %bf.load22 = load i16, ptr %ip_summed, align 8
  %l4_hash27 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 11
  %35 = trunc i16 %bf.load22 to i8
  %36 = lshr i8 %35, 7
  %37 = ptrtoint ptr %l4_hash27 to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %36, ptr %l4_hash27, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %38 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %len, align 4
  %len29 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 12
  %40 = ptrtoint ptr %len29 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %len29, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %41 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %data_len, align 8
  %data_len30 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 13
  %43 = ptrtoint ptr %data_len30 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %data_len30, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %44 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %truesize, align 8
  %truesize31 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 14
  %46 = ptrtoint ptr %truesize31 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %truesize31, align 4
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %47 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %mac_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %48)
  %cmp.i = icmp ne i16 %48, -1
  %mac_header_valid = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 15
  %frombool34 = zext i1 %cmp.i to i8
  %49 = ptrtoint ptr %mac_header_valid to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %frombool34, ptr %mac_header_valid, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %50 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %head.i, align 8
  %52 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %mac_header.i, align 2
  %conv.i = zext i16 %53 to i32
  %add.ptr.i = getelementptr i8, ptr %51, i32 %conv.i
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %54 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %data, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %55 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %mac_header = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 16
  %56 = ptrtoint ptr %mac_header to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %sub.ptr.sub, ptr %mac_header, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %57 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %58, i32 0, i32 2
  %59 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %nr_frags, align 2
  %nr_frags37 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 17
  %61 = ptrtoint ptr %nr_frags37 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %60, ptr %nr_frags37, align 4
  %62 = load ptr, ptr %end.i, align 4
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %62, i32 0, i32 4
  %63 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %gso_size, align 4
  %gso_size39 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 18
  %65 = ptrtoint ptr %gso_size39 to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %64, ptr %gso_size39, align 2
  %66 = load ptr, ptr %end.i, align 4
  %gso_type = getelementptr inbounds %struct.skb_shared_info, ptr %66, i32 0, i32 8
  %67 = ptrtoint ptr %gso_type to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %gso_type, align 8
  %conv = trunc i32 %68 to i16
  %gso_type41 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call3, i32 0, i32 19
  %69 = ptrtoint ptr %gso_type41 to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 %conv, ptr %gso_type41, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_net_dev_rx_verbose_template(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %2 = getelementptr inbounds %struct.anon, ptr %skb, i32 0, i32 2
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %tobool.not.i = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %4
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65606
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %5 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %perf_events, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add = add i32 %13, %7
  %14 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %15 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %16, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %14, align 4
  %tobool.not.i113.not = icmp eq ptr %18, null
  br i1 %tobool.not.i113.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 84
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %19 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %__regs, align 4
  %21 = call ptr @llvm.returnaddress(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %20, i32 0, i32 15
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx.i, align 4
  %24 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %25 = ptrtoint ptr %24 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %20, i32 0, i32 11
  %26 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx2.i, align 4
  %27 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %20, i32 0, i32 13
  %28 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %20, i32 0, i32 16
  %29 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 70
  %31 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %2, align 8
  %tobool20.not = icmp eq ptr %32, null
  %spec.select = select i1 %tobool20.not, ptr @.str.68, ptr %32
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %33 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 11
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %napi_id = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %napi_id to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %napi_id, align 4
  %queue_mapping = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %37 = ptrtoint ptr %queue_mapping to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %queue_mapping, align 8
  %queue_mapping24 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %queue_mapping24 to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %38, ptr %queue_mapping24, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %skb, ptr %skbaddr, align 4
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %41 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %41, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  %vlan_tagged = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 5
  %bf.load.lobit = lshr i32 %bf.load, 31
  %42 = trunc i32 %bf.load.lobit to i8
  %43 = ptrtoint ptr %vlan_tagged to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %42, ptr %vlan_tagged, align 4
  %vlan_proto = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 9
  %44 = ptrtoint ptr %vlan_proto to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %vlan_proto, align 8
  %vlan_proto26 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 6
  %46 = ptrtoint ptr %vlan_proto26 to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %45, ptr %vlan_proto26, align 2
  %vlan_tci = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %47 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %vlan_tci, align 2
  %vlan_tci27 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 7
  %49 = ptrtoint ptr %vlan_tci27 to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %48, ptr %vlan_tci27, align 4
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %50 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %protocol, align 8
  %protocol28 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 8
  %52 = ptrtoint ptr %protocol28 to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 %51, ptr %protocol28, align 2
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %53 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %53)
  %bf.load29 = load i16, ptr %ip_summed, align 8
  %bf.lshr30 = lshr i16 %bf.load29, 9
  %54 = trunc i16 %bf.lshr30 to i8
  %bf.cast31 = and i8 %54, 3
  %ip_summed32 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 9
  %55 = ptrtoint ptr %ip_summed32 to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %bf.cast31, ptr %ip_summed32, align 4
  %hash = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %56 = ptrtoint ptr %hash to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %hash, align 4
  %hash33 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 10
  %58 = ptrtoint ptr %hash33 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %57, ptr %hash33, align 4
  %bf.load34 = load i16, ptr %ip_summed, align 8
  %l4_hash39 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 11
  %59 = trunc i16 %bf.load34 to i8
  %60 = lshr i8 %59, 7
  %61 = ptrtoint ptr %l4_hash39 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %60, ptr %l4_hash39, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %62 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %len, align 4
  %len41 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 12
  %64 = ptrtoint ptr %len41 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %len41, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %65 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %data_len, align 8
  %data_len42 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 13
  %67 = ptrtoint ptr %data_len42 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %data_len42, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %68 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %truesize, align 8
  %truesize43 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 14
  %70 = ptrtoint ptr %truesize43 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %69, ptr %truesize43, align 4
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %71 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %mac_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %72)
  %cmp.i = icmp ne i16 %72, -1
  %mac_header_valid = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 15
  %frombool46 = zext i1 %cmp.i to i8
  %73 = ptrtoint ptr %mac_header_valid to i32
  call void @__asan_store1_noabort(i32 %73)
  store i8 %frombool46, ptr %mac_header_valid, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %74 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %head.i, align 8
  %76 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %mac_header.i, align 2
  %conv.i = zext i16 %77 to i32
  %add.ptr.i = getelementptr i8, ptr %75, i32 %conv.i
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %78 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %data, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %79 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %mac_header = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 16
  %80 = ptrtoint ptr %mac_header to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %sub.ptr.sub, ptr %mac_header, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %81 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %82, i32 0, i32 2
  %83 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %nr_frags, align 2
  %nr_frags49 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 17
  %85 = ptrtoint ptr %nr_frags49 to i32
  call void @__asan_store1_noabort(i32 %85)
  store i8 %84, ptr %nr_frags49, align 4
  %86 = load ptr, ptr %end.i, align 4
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %86, i32 0, i32 4
  %87 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %87)
  %88 = load i16, ptr %gso_size, align 4
  %gso_size51 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 18
  %89 = ptrtoint ptr %gso_size51 to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 %88, ptr %gso_size51, align 2
  %90 = load ptr, ptr %end.i, align 4
  %gso_type = getelementptr inbounds %struct.skb_shared_info, ptr %90, i32 0, i32 8
  %91 = ptrtoint ptr %gso_type to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %gso_type, align 8
  %conv = trunc i32 %92 to i16
  %gso_type53 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %call13, i32 0, i32 19
  %93 = ptrtoint ptr %gso_type53 to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 %conv, ptr %gso_type53, align 4
  %94 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %rctx, align 4
  %96 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %95, ptr noundef %__data, i64 noundef 1, ptr noundef %97, ptr noundef %14, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_net_dev_rx_exit_template(ptr noundef %__data, i32 noundef %ret) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %ret6 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_exit_template, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %ret6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %ret, ptr %ret6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_net_dev_rx_exit_template(ptr noundef %__data, i32 noundef %ret) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %ret17 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_exit_template, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %ret17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %ret, ptr %ret17, align 4
  %28 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rctx, align 4
  %30 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %29, ptr noundef %__data, i64 noundef 1, ptr noundef %31, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_net_dev_start_xmit(ptr noundef %__data, ptr noundef %skb, ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %dev to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_net_dev_xmit(ptr noundef %__data, ptr noundef %skb, i32 noundef %rc, ptr noundef %dev, i32 noundef %skb_len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %rc to i64
  %1 = ptrtoint ptr %dev to i32
  %conv8 = zext i32 %1 to i64
  %conv12 = zext i32 %skb_len to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_net_dev_xmit_timeout(ptr noundef %__data, ptr noundef %dev, i32 noundef %queue_index) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %dev to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %queue_index to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_net_dev_template(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_net_dev_rx_verbose_template(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_net_dev_rx_exit_template(ptr noundef %__data, i32 noundef %ret) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %conv = zext i32 %ret to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_napi_poll(ptr nocapture readnone %__data, ptr noundef %napi, i32 noundef %work, i32 noundef %budget) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_napi_poll, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %napi, i32 noundef %work, i32 noundef %budget) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_napi_poll(ptr noundef %__data, ptr noundef %napi, i32 noundef %work, i32 noundef %budget) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dev.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 7
  %3 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev.i, align 8
  %tobool6.not.i = icmp eq ptr %4, null
  %cond14.i = select i1 %tobool6.not.i, ptr @.str.107, ptr %4
  %call.i43 = tail call i32 @strlen(ptr noundef nonnull %cond14.i) #11
  %add = add i32 %call.i43, 25
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %add.i = shl i32 %call.i43, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_dev_name = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %__data_loc_dev_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_dev_name, align 4
  %napi6 = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %napi6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %napi, ptr %napi6, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %7 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev.i, align 8
  %tobool13.not = icmp eq ptr %8, null
  %cond21 = select i1 %tobool13.not, ptr @.str.107, ptr %8
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %cond21) #12
  %work23 = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %work23 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %work, ptr %work23, align 4
  %budget24 = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %budget24 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %budget, ptr %budget24, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_napi_poll(ptr noundef %__data, ptr noundef %napi, i32 noundef %work, i32 noundef %budget) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %dev.i = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 7
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 8
  %tobool6.not.i = icmp eq ptr %3, null
  %cond14.i = select i1 %tobool6.not.i, ptr @.str.107, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %cond14.i) #11
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65560
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 36
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #8
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dev_name = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %__data_loc_dev_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_dev_name, align 4
  %napi17 = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %napi17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %napi, ptr %napi17, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %31 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %dev.i, align 8
  %tobool25.not = icmp eq ptr %32, null
  %cond33 = select i1 %tobool25.not, ptr @.str.107, ptr %32
  %call34 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %cond33) #12
  %work35 = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %work35 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %work, ptr %work35, align 4
  %budget36 = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %budget36 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %budget, ptr %budget36, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %13, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_napi_poll(ptr noundef %__data, ptr noundef %napi, i32 noundef %work, i32 noundef %budget) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %napi to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %work to i64
  %conv8 = zext i32 %budget to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_sock_rcvqueue_full(ptr nocapture readnone %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sock_rcvqueue_full, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_sock_exceed_buf_limit(ptr nocapture readnone %__data, ptr noundef %sk, ptr noundef %prot, i32 noundef %allocated, i32 noundef %kind) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_sock_exceed_buf_limit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk, ptr noundef %prot, i32 noundef %allocated, i32 noundef %kind) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_inet_sock_set_state(ptr nocapture readnone %__data, ptr noundef %sk, i32 noundef %oldstate, i32 noundef %newstate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inet_sock_set_state, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk, i32 noundef %oldstate, i32 noundef %newstate) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_inet_sk_error_report(ptr nocapture readnone %__data, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_inet_sk_error_report, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_sock_rcvqueue_full(ptr noundef %__data, ptr noundef %sk, ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #8
  %3 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %sk_backlog, align 4
  %rmem_alloc7 = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %rmem_alloc7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %rmem_alloc7, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %6 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %truesize, align 8
  %truesize8 = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %truesize8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %truesize8, align 4
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %9 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %sk_rcvbuf, align 8
  %sk_rcvbuf9 = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %sk_rcvbuf9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %sk_rcvbuf9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_sock_rcvqueue_full(ptr noundef %__data, ptr noundef %sk, ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #8
  %27 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %sk_backlog, align 4
  %rmem_alloc18 = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %rmem_alloc18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %rmem_alloc18, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %30 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %truesize, align 8
  %truesize19 = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %truesize19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %truesize19, align 4
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %33 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %sk_rcvbuf, align 8
  %sk_rcvbuf24 = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %sk_rcvbuf24 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %sk_rcvbuf24, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_sock_exceed_buf_limit(ptr noundef %__data, ptr noundef %sk, ptr nocapture noundef readonly %prot, i32 noundef %allocated, i32 noundef %kind) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 1
  %name6 = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 52
  %call8 = call ptr @strncpy(ptr noundef %name, ptr noundef %name6, i32 noundef 32)
  %sysctl_mem = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 35
  %3 = ptrtoint ptr %sysctl_mem to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sysctl_mem, align 4
  %sysctl_mem9 = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %sysctl_mem9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %sysctl_mem9, align 4
  %allocated10 = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 3
  %6 = ptrtoint ptr %allocated10 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %allocated, ptr %allocated10, align 4
  %sysctl_rmem_offset.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 39
  %7 = ptrtoint ptr %sysctl_rmem_offset.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sysctl_rmem_offset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i42 = icmp eq i32 %8, 0
  br i1 %tobool.not.i42, label %if.end.i43, label %if.then.i

if.then.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %9 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %skc_net.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %10, i32 %8
  br label %sk_get_rmem0.exit

if.end.i43:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %sysctl_rmem.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 37
  %11 = ptrtoint ptr %sysctl_rmem.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sysctl_rmem.i, align 4
  br label %sk_get_rmem0.exit

sk_get_rmem0.exit:                                ; preds = %if.end.i43, %if.then.i
  %retval.0.in.i = phi ptr [ %add.ptr.i, %if.then.i ], [ %12, %if.end.i43 ]
  %13 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %retval.0.i44 = load i32, ptr %retval.0.in.i, align 4
  %sysctl_rmem = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %sysctl_rmem to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %retval.0.i44, ptr %sysctl_rmem, align 4
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #8
  %15 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %sk_backlog, align 4
  %rmem_alloc13 = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %rmem_alloc13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %rmem_alloc13, align 4
  %sysctl_wmem_offset.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 38
  %18 = ptrtoint ptr %sysctl_wmem_offset.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sysctl_wmem_offset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i45 = icmp eq i32 %19, 0
  br i1 %tobool.not.i45, label %if.end.i49, label %if.then.i48

if.then.i48:                                      ; preds = %sk_get_rmem0.exit
  call void @__sanitizer_cov_trace_pc() #10
  %skc_net.i.i46 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %20 = ptrtoint ptr %skc_net.i.i46 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %skc_net.i.i46, align 4
  %add.ptr.i47 = getelementptr i8, ptr %21, i32 %19
  br label %sk_get_wmem0.exit

if.end.i49:                                       ; preds = %sk_get_rmem0.exit
  call void @__sanitizer_cov_trace_pc() #10
  %sysctl_wmem.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 36
  %22 = ptrtoint ptr %sysctl_wmem.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sysctl_wmem.i, align 4
  br label %sk_get_wmem0.exit

sk_get_wmem0.exit:                                ; preds = %if.end.i49, %if.then.i48
  %retval.0.in.i50 = phi ptr [ %add.ptr.i47, %if.then.i48 ], [ %23, %if.end.i49 ]
  %24 = ptrtoint ptr %retval.0.in.i50 to i32
  call void @__asan_load4_noabort(i32 %24)
  %retval.0.i51 = load i32, ptr %retval.0.in.i50, align 4
  %sysctl_wmem = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 6
  %25 = ptrtoint ptr %sysctl_wmem to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %retval.0.i51, ptr %sysctl_wmem, align 4
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc, i32 noundef 4) #8
  %26 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %sk_wmem_alloc, align 4
  %wmem_alloc = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 7
  %28 = ptrtoint ptr %wmem_alloc to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %wmem_alloc, align 4
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %29 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %sk_wmem_queued, align 8
  %wmem_queued = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 8
  %31 = ptrtoint ptr %wmem_queued to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %wmem_queued, align 4
  %kind16 = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call3, i32 0, i32 9
  %32 = ptrtoint ptr %kind16 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %kind, ptr %kind16, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %sk_get_wmem0.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_sock_exceed_buf_limit(ptr noundef %__data, ptr noundef %sk, ptr nocapture noundef readonly %prot, i32 noundef %allocated, i32 noundef %kind) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %name = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 1
  %name17 = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 52
  %call19 = call ptr @strncpy(ptr noundef %name, ptr noundef %name17, i32 noundef 32)
  %sysctl_mem = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 35
  %27 = ptrtoint ptr %sysctl_mem to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sysctl_mem, align 4
  %sysctl_mem20 = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %sysctl_mem20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %28, ptr %sysctl_mem20, align 4
  %allocated21 = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 3
  %30 = ptrtoint ptr %allocated21 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %allocated, ptr %allocated21, align 4
  %sysctl_rmem_offset.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 39
  %31 = ptrtoint ptr %sysctl_rmem_offset.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sysctl_rmem_offset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i69 = icmp eq i32 %32, 0
  br i1 %tobool.not.i69, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %33 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %skc_net.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %34, i32 %32
  br label %sk_get_rmem0.exit

if.end.i:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %sysctl_rmem.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 37
  %35 = ptrtoint ptr %sysctl_rmem.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sysctl_rmem.i, align 4
  br label %sk_get_rmem0.exit

sk_get_rmem0.exit:                                ; preds = %if.end.i, %if.then.i
  %retval.0.in.i = phi ptr [ %add.ptr.i, %if.then.i ], [ %36, %if.end.i ]
  %37 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %retval.0.i = load i32, ptr %retval.0.in.i, align 4
  %sysctl_rmem = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %sysctl_rmem to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %retval.0.i, ptr %sysctl_rmem, align 4
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #8
  %39 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %sk_backlog, align 4
  %rmem_alloc24 = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %rmem_alloc24 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %rmem_alloc24, align 4
  %sysctl_wmem_offset.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 38
  %42 = ptrtoint ptr %sysctl_wmem_offset.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %sysctl_wmem_offset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i70 = icmp eq i32 %43, 0
  br i1 %tobool.not.i70, label %if.end.i74, label %if.then.i73

if.then.i73:                                      ; preds = %sk_get_rmem0.exit
  call void @__sanitizer_cov_trace_pc() #10
  %skc_net.i.i71 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %44 = ptrtoint ptr %skc_net.i.i71 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %skc_net.i.i71, align 4
  %add.ptr.i72 = getelementptr i8, ptr %45, i32 %43
  br label %sk_get_wmem0.exit

if.end.i74:                                       ; preds = %sk_get_rmem0.exit
  call void @__sanitizer_cov_trace_pc() #10
  %sysctl_wmem.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 36
  %46 = ptrtoint ptr %sysctl_wmem.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sysctl_wmem.i, align 4
  br label %sk_get_wmem0.exit

sk_get_wmem0.exit:                                ; preds = %if.end.i74, %if.then.i73
  %retval.0.in.i75 = phi ptr [ %add.ptr.i72, %if.then.i73 ], [ %47, %if.end.i74 ]
  %48 = ptrtoint ptr %retval.0.in.i75 to i32
  call void @__asan_load4_noabort(i32 %48)
  %retval.0.i76 = load i32, ptr %retval.0.in.i75, align 4
  %sysctl_wmem = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 6
  %49 = ptrtoint ptr %sysctl_wmem to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %retval.0.i76, ptr %sysctl_wmem, align 4
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc, i32 noundef 4) #8
  %50 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %sk_wmem_alloc, align 4
  %wmem_alloc = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 7
  %52 = ptrtoint ptr %wmem_alloc to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %wmem_alloc, align 4
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %53 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %sk_wmem_queued, align 8
  %wmem_queued = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 8
  %55 = ptrtoint ptr %wmem_queued to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %wmem_queued, align 4
  %kind31 = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %call13, i32 0, i32 9
  %56 = ptrtoint ptr %kind31 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %kind, ptr %kind31, align 4
  %57 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %rctx, align 4
  %59 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %58, ptr noundef %__data, i64 noundef 1, ptr noundef %60, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %sk_get_wmem0.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_inet_sock_set_state(ptr noundef %__data, ptr noundef %sk, i32 noundef %oldstate, i32 noundef %newstate) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 68) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %skaddr = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skaddr to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %sk, ptr %skaddr, align 4
  %oldstate7 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %oldstate7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %oldstate, ptr %oldstate7, align 4
  %newstate8 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %newstate8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %newstate, ptr %newstate8, align 4
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %6 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 6
  %8 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %7, ptr %family, align 4
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %9 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %sk_protocol, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 7
  %11 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %protocol, align 2
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %12 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %inet_sport, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %sport, align 4
  %15 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %15, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 5
  %18 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %17, ptr %dport, align 2
  %saddr = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 8
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %19 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %inet_saddr, align 4
  %21 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 9
  %22 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sk, align 8
  %24 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %daddr, align 4
  %25 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %25)
  %cmp = icmp eq i16 %25, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 10
  br i1 %cmp, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 11
  %26 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 11
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %27 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %if.end30

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %28 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %inet_saddr, align 4
  %30 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 10, i32 4
  %31 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 10, i32 8
  %32 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 10, i32 12
  %33 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %29, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v625 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 11
  %34 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sk, align 8
  %36 = ptrtoint ptr %daddr_v625 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %daddr_v625, align 4
  %arrayidx1.i.i.i67 = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 11, i32 4
  %37 = ptrtoint ptr %arrayidx1.i.i.i67 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %arrayidx1.i.i.i67, align 4
  %arrayidx2.i.i68 = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 11, i32 8
  %38 = ptrtoint ptr %arrayidx2.i.i68 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 65535, ptr %arrayidx2.i.i68, align 4
  %arrayidx1.i1.i.i69 = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call3, i32 0, i32 11, i32 12
  %39 = ptrtoint ptr %arrayidx1.i1.i.i69 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %35, ptr %arrayidx1.i1.i.i69, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then17
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end30, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_inet_sock_set_state(ptr noundef %__data, ptr noundef %sk, i32 noundef %oldstate, i32 noundef %newstate) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skaddr = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skaddr to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %sk, ptr %skaddr, align 4
  %oldstate18 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %oldstate18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %oldstate, ptr %oldstate18, align 4
  %newstate19 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %newstate19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %newstate, ptr %newstate19, align 4
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %30 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 6
  %32 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %31, ptr %family, align 4
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %33 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %sk_protocol, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 7
  %35 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %protocol, align 2
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %36 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %inet_sport, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %sport, align 4
  %39 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %39, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 5
  %42 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %41, ptr %dport, align 2
  %saddr = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 8
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %43 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %inet_saddr, align 4
  %45 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 9
  %46 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sk, align 8
  %48 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %daddr, align 4
  %49 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %49)
  %cmp = icmp eq i16 %49, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 10
  br i1 %cmp, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 11
  %50 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 11
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %51 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %if.end41

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %52 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %inet_saddr, align 4
  %54 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 10, i32 4
  %55 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 10, i32 8
  %56 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 10, i32 12
  %57 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %53, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v636 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 11
  %58 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %sk, align 8
  %60 = ptrtoint ptr %daddr_v636 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %daddr_v636, align 4
  %arrayidx1.i.i.i90 = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 11, i32 4
  %61 = ptrtoint ptr %arrayidx1.i.i.i90 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 0, ptr %arrayidx1.i.i.i90, align 4
  %arrayidx2.i.i91 = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 11, i32 8
  %62 = ptrtoint ptr %arrayidx2.i.i91 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 65535, ptr %arrayidx2.i.i91, align 4
  %arrayidx1.i1.i.i92 = getelementptr %struct.trace_event_raw_inet_sock_set_state, ptr %call13, i32 0, i32 11, i32 12
  %63 = ptrtoint ptr %arrayidx1.i1.i.i92 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %59, ptr %arrayidx1.i1.i.i92, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then28
  %64 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %rctx, align 4
  %66 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %65, ptr noundef %__data, i64 noundef 1, ptr noundef %67, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end41, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_inet_sk_error_report(ptr noundef %__data, ptr nocapture noundef readonly %sk) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 60) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %sk_err = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 51
  %3 = ptrtoint ptr %sk_err to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sk_err, align 4
  %error = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %error, align 4
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %6 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %7, ptr %family, align 4
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %9 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %sk_protocol, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %protocol, align 2
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %12 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %inet_sport, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 2
  %14 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %sport, align 4
  %15 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %15, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 3
  %18 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %17, ptr %dport, align 2
  %saddr = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 6
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %19 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %inet_saddr, align 4
  %21 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 7
  %22 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sk, align 8
  %24 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %daddr, align 4
  %25 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %25)
  %cmp = icmp eq i16 %25, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 8
  br i1 %cmp, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 11
  %26 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 9
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %27 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %if.end28

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %28 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %inet_saddr, align 4
  %30 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 8, i32 4
  %31 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 8, i32 8
  %32 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 8, i32 12
  %33 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %29, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v623 = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 9
  %34 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %sk, align 8
  %36 = ptrtoint ptr %daddr_v623 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %daddr_v623, align 4
  %arrayidx1.i.i.i61 = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 9, i32 4
  %37 = ptrtoint ptr %arrayidx1.i.i.i61 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %arrayidx1.i.i.i61, align 4
  %arrayidx2.i.i62 = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 9, i32 8
  %38 = ptrtoint ptr %arrayidx2.i.i62 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 65535, ptr %arrayidx2.i.i62, align 4
  %arrayidx1.i1.i.i63 = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call3, i32 0, i32 9, i32 12
  %39 = ptrtoint ptr %arrayidx1.i1.i.i63 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %35, ptr %arrayidx1.i1.i.i63, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then15
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_inet_sk_error_report(ptr noundef %__data, ptr nocapture noundef readonly %sk) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sk_err = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 51
  %27 = ptrtoint ptr %sk_err to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sk_err, align 4
  %error = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %error, align 4
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %30 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %31, ptr %family, align 4
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %33 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %sk_protocol, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %protocol, align 2
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %36 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %inet_sport, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 2
  %38 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %sport, align 4
  %39 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %39, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 3
  %42 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %41, ptr %dport, align 2
  %saddr = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 6
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %43 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %inet_saddr, align 4
  %45 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 7
  %46 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sk, align 8
  %48 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %daddr, align 4
  %49 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %49)
  %cmp = icmp eq i16 %49, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 8
  br i1 %cmp, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 11
  %50 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 9
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %51 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %if.end39

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %52 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %inet_saddr, align 4
  %54 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 8, i32 4
  %55 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 8, i32 8
  %56 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 8, i32 12
  %57 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %53, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v634 = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 9
  %58 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %sk, align 8
  %60 = ptrtoint ptr %daddr_v634 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %daddr_v634, align 4
  %arrayidx1.i.i.i84 = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 9, i32 4
  %61 = ptrtoint ptr %arrayidx1.i.i.i84 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 0, ptr %arrayidx1.i.i.i84, align 4
  %arrayidx2.i.i85 = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 9, i32 8
  %62 = ptrtoint ptr %arrayidx2.i.i85 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 65535, ptr %arrayidx2.i.i85, align 4
  %arrayidx1.i1.i.i86 = getelementptr %struct.trace_event_raw_inet_sk_error_report, ptr %call13, i32 0, i32 9, i32 12
  %63 = ptrtoint ptr %arrayidx1.i1.i.i86 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %59, ptr %arrayidx1.i1.i.i86, align 4
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then26
  %64 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %rctx, align 4
  %66 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %65, ptr noundef %__data, i64 noundef 1, ptr noundef %67, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_sock_rcvqueue_full(ptr noundef %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %sk to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %skb to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_sock_exceed_buf_limit(ptr noundef %__data, ptr noundef %sk, ptr noundef %prot, i32 noundef %allocated, i32 noundef %kind) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %sk to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %prot to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %allocated to i64
  %conv12 = zext i32 %kind to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_inet_sock_set_state(ptr noundef %__data, ptr noundef %sk, i32 noundef %oldstate, i32 noundef %newstate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %sk to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %oldstate to i64
  %conv8 = zext i32 %newstate to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_inet_sk_error_report(ptr noundef %__data, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %sk to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_udp_fail_queue_rcv_skb(ptr nocapture readnone %__data, i32 noundef %rc, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_udp_fail_queue_rcv_skb, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %rc, ptr noundef %sk) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_udp_fail_queue_rcv_skb(ptr noundef %__data, i32 noundef %rc, ptr nocapture noundef readonly %sk) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %rc6 = getelementptr inbounds %struct.trace_event_raw_udp_fail_queue_rcv_skb, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %rc6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %rc, ptr %rc6, align 4
  %4 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %skc_num = getelementptr inbounds %struct.anon.179, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %skc_num to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %skc_num, align 2
  %lport = getelementptr inbounds %struct.trace_event_raw_udp_fail_queue_rcv_skb, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %lport to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %lport, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_udp_fail_queue_rcv_skb(ptr noundef %__data, i32 noundef %rc, ptr nocapture noundef readonly %sk) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rc17 = getelementptr inbounds %struct.trace_event_raw_udp_fail_queue_rcv_skb, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %rc17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %rc, ptr %rc17, align 4
  %28 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %skc_num = getelementptr inbounds %struct.anon.179, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %skc_num to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %skc_num, align 2
  %lport = getelementptr inbounds %struct.trace_event_raw_udp_fail_queue_rcv_skb, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %lport to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %lport, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_udp_fail_queue_rcv_skb(ptr noundef %__data, i32 noundef %rc, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %conv = zext i32 %rc to i64
  %0 = ptrtoint ptr %sk to i32
  %conv4 = zext i32 %0 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_tcp_retransmit_skb(ptr nocapture readnone %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_tcp_retransmit_skb, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_tcp_send_reset(ptr nocapture readnone %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_tcp_send_reset, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_tcp_receive_reset(ptr nocapture readnone %__data, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_tcp_receive_reset, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_tcp_destroy_sock(ptr nocapture readnone %__data, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_tcp_destroy_sock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_tcp_rcv_space_adjust(ptr nocapture readnone %__data, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_tcp_rcv_space_adjust, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_tcp_retransmit_synack(ptr nocapture readnone %__data, ptr noundef %sk, ptr noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_tcp_retransmit_synack, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk, ptr noundef %req) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_tcp_probe(ptr nocapture readnone %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_tcp_probe, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sk, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_tcp_bad_csum(ptr nocapture readnone %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_tcp_bad_csum, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_tcp_event_sk_skb(ptr noundef %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 68) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %skb, ptr %skbaddr, align 4
  %skaddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %skaddr to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %sk, ptr %skaddr, align 4
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %5 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load volatile i8, ptr %skc_state, align 2
  %conv = zext i8 %6 to i32
  %state = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %state, align 4
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %8 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %inet_sport, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %sport, align 4
  %11 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %11, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 5
  %14 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %dport, align 2
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %15 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %16, ptr %family, align 4
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 7
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %18 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %inet_saddr, align 4
  %20 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 8
  %21 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sk, align 8
  %23 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %daddr, align 4
  %24 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %24)
  %cmp = icmp eq i16 %24, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 9
  br i1 %cmp, label %if.then17, label %do.body22

if.then17:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 11
  %25 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 10
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %26 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %do.end34

do.body22:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %27 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %inet_saddr, align 4
  %29 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 9, i32 4
  %30 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 9, i32 8
  %31 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 9, i32 12
  %32 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %28, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v627 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 10
  %33 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sk, align 8
  %35 = ptrtoint ptr %daddr_v627 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %daddr_v627, align 4
  %arrayidx1.i.i.i68 = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 10, i32 4
  %36 = ptrtoint ptr %arrayidx1.i.i.i68 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %arrayidx1.i.i.i68, align 4
  %arrayidx2.i.i69 = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 10, i32 8
  %37 = ptrtoint ptr %arrayidx2.i.i69 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 65535, ptr %arrayidx2.i.i69, align 4
  %arrayidx1.i1.i.i70 = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call3, i32 0, i32 10, i32 12
  %38 = ptrtoint ptr %arrayidx1.i1.i.i70 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %34, ptr %arrayidx1.i1.i.i70, align 4
  br label %do.end34

do.end34:                                         ; preds = %do.body22, %if.then17
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %do.end34, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_tcp_event_sk_skb(ptr noundef %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %skb, ptr %skbaddr, align 4
  %skaddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %skaddr to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %sk, ptr %skaddr, align 4
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %29 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load volatile i8, ptr %skc_state, align 2
  %conv = zext i8 %30 to i32
  %state = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %state, align 4
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %32 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %inet_sport, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %sport, align 4
  %35 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %35, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 5
  %38 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %dport, align 2
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %39 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %40, ptr %family, align 4
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 7
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %42 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %inet_saddr, align 4
  %44 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 8
  %45 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sk, align 8
  %47 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %daddr, align 4
  %48 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %48)
  %cmp = icmp eq i16 %48, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 9
  br i1 %cmp, label %if.then29, label %do.body34

if.then29:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 11
  %49 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 10
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %50 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %do.end48

do.body34:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %51 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %inet_saddr, align 4
  %53 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 9, i32 4
  %54 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 9, i32 8
  %55 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 9, i32 12
  %56 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %52, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v639 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 10
  %57 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %sk, align 8
  %59 = ptrtoint ptr %daddr_v639 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 0, ptr %daddr_v639, align 4
  %arrayidx1.i.i.i94 = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 10, i32 4
  %60 = ptrtoint ptr %arrayidx1.i.i.i94 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %arrayidx1.i.i.i94, align 4
  %arrayidx2.i.i95 = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 10, i32 8
  %61 = ptrtoint ptr %arrayidx2.i.i95 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 65535, ptr %arrayidx2.i.i95, align 4
  %arrayidx1.i1.i.i96 = getelementptr %struct.trace_event_raw_tcp_event_sk_skb, ptr %call13, i32 0, i32 10, i32 12
  %62 = ptrtoint ptr %arrayidx1.i1.i.i96 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %58, ptr %arrayidx1.i1.i.i96, align 4
  br label %do.end48

do.end48:                                         ; preds = %do.body34, %if.then29
  %63 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %rctx, align 4
  %65 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %64, ptr noundef %__data, i64 noundef 1, ptr noundef %66, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %do.end48, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_tcp_event_sk(ptr noundef %__data, ptr noundef %sk) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %skaddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skaddr to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %sk, ptr %skaddr, align 8
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %4 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %inet_sport, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %5, ptr %sport, align 4
  %7 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %7, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %dport, align 2
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %11 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 4
  %13 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %12, ptr %family, align 8
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 5
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %14 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %inet_saddr, align 4
  %16 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 6
  %17 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sk, align 8
  %19 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %daddr, align 4
  %20 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %20)
  %cmp = icmp eq i16 %20, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 7
  br i1 %cmp, label %if.then15, label %do.body20

if.then15:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 11
  %21 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 8
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %22 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %do.end32

do.body20:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %23 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %inet_saddr, align 4
  %25 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 7, i32 4
  %26 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 7, i32 8
  %27 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 7, i32 12
  %28 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %24, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v625 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 8
  %29 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sk, align 8
  %31 = ptrtoint ptr %daddr_v625 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %daddr_v625, align 4
  %arrayidx1.i.i.i65 = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 8, i32 4
  %32 = ptrtoint ptr %arrayidx1.i.i.i65 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %arrayidx1.i.i.i65, align 4
  %arrayidx2.i.i66 = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 8, i32 8
  %33 = ptrtoint ptr %arrayidx2.i.i66 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 65535, ptr %arrayidx2.i.i66, align 4
  %arrayidx1.i1.i.i67 = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 8, i32 12
  %34 = ptrtoint ptr %arrayidx1.i1.i.i67 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %30, ptr %arrayidx1.i1.i.i67, align 4
  br label %do.end32

do.end32:                                         ; preds = %do.body20, %if.then15
  %35 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i.i.i.i = and i32 %35, -16384
  %36 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %38, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #8, !srcloc !1065
  %call.i68 = call i64 @__sock_gen_cookie(ptr noundef %sk) #8
  call void asm sideeffect "", "~{memory}"() #8, !srcloc !1066
  %39 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i.i.i4.i = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i4.i to ptr
  %preempt_count.i.i5.i = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %preempt_count.i.i5.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %preempt_count.i.i5.i, align 4
  %sub.i.i = add i32 %42, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i5.i, align 4
  %sock_cookie = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call3, i32 0, i32 9
  %43 = ptrtoint ptr %sock_cookie to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %call.i68, ptr %sock_cookie, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %do.end32, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_tcp_event_sk(ptr noundef %__data, ptr noundef %sk) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skaddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skaddr to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %sk, ptr %skaddr, align 8
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %28 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %inet_sport, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %29, ptr %sport, align 4
  %31 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %31, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %dport, align 2
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %35 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 4
  %37 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %36, ptr %family, align 8
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 5
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %38 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %inet_saddr, align 4
  %40 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 6
  %41 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sk, align 8
  %43 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %daddr, align 4
  %44 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %44)
  %cmp = icmp eq i16 %44, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 7
  br i1 %cmp, label %if.then27, label %do.body32

if.then27:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 11
  %45 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 8
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %46 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %do.end46

do.body32:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %47 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %inet_saddr, align 4
  %49 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 7, i32 4
  %50 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 7, i32 8
  %51 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 7, i32 12
  %52 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %48, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v637 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 8
  %53 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sk, align 8
  %55 = ptrtoint ptr %daddr_v637 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %daddr_v637, align 4
  %arrayidx1.i.i.i91 = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 8, i32 4
  %56 = ptrtoint ptr %arrayidx1.i.i.i91 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %arrayidx1.i.i.i91, align 4
  %arrayidx2.i.i92 = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 8, i32 8
  %57 = ptrtoint ptr %arrayidx2.i.i92 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 65535, ptr %arrayidx2.i.i92, align 4
  %arrayidx1.i1.i.i93 = getelementptr %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 8, i32 12
  %58 = ptrtoint ptr %arrayidx1.i1.i.i93 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %54, ptr %arrayidx1.i1.i.i93, align 4
  br label %do.end46

do.end46:                                         ; preds = %do.body32, %if.then27
  %59 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i.i.i.i = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %62, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #8, !srcloc !1065
  %call.i = call i64 @__sock_gen_cookie(ptr noundef %sk) #8
  call void asm sideeffect "", "~{memory}"() #8, !srcloc !1066
  %63 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i.i.i4.i = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i4.i to ptr
  %preempt_count.i.i5.i = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %preempt_count.i.i5.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %preempt_count.i.i5.i, align 4
  %sub.i.i = add i32 %66, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i5.i, align 4
  %sock_cookie = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %call13, i32 0, i32 9
  %67 = ptrtoint ptr %sock_cookie to i32
  call void @__asan_store8_noabort(i32 %67)
  store i64 %call.i, ptr %sock_cookie, align 8
  %68 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %rctx, align 4
  %70 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %69, ptr noundef %__data, i64 noundef 1, ptr noundef %71, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %do.end46, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_tcp_retransmit_synack(ptr noundef %__data, ptr noundef %sk, ptr noundef %req) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 64) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %skaddr = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skaddr to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %sk, ptr %skaddr, align 4
  %req7 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %req7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %req, ptr %req7, align 4
  %5 = getelementptr inbounds %struct.sock_common, ptr %req, i32 0, i32 2
  %skc_num = getelementptr inbounds %struct.anon.179, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %skc_num to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %skc_num, align 2
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %7, ptr %sport, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %5, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %dport, align 2
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %12 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 5
  %14 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %family, align 4
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 6
  %skc_rcv_saddr = getelementptr inbounds %struct.anon.176, ptr %req, i32 0, i32 1
  %15 = ptrtoint ptr %skc_rcv_saddr to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %skc_rcv_saddr, align 4
  %17 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 7
  %18 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %req, align 8
  %20 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %daddr, align 4
  %21 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %21)
  %cmp = icmp eq i16 %21, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 8
  br i1 %cmp, label %if.then19, label %do.body26

if.then19:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %req, i32 0, i32 11
  %22 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 9
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %req, i32 0, i32 10
  %23 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %do.end40

do.body26:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %24 = ptrtoint ptr %skc_rcv_saddr to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %skc_rcv_saddr, align 4
  %26 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 8, i32 4
  %27 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 8, i32 8
  %28 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 8, i32 12
  %29 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %25, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v633 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 9
  %30 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %req, align 8
  %32 = ptrtoint ptr %daddr_v633 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %daddr_v633, align 4
  %arrayidx1.i.i.i72 = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 9, i32 4
  %33 = ptrtoint ptr %arrayidx1.i.i.i72 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %arrayidx1.i.i.i72, align 4
  %arrayidx2.i.i73 = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 9, i32 8
  %34 = ptrtoint ptr %arrayidx2.i.i73 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 65535, ptr %arrayidx2.i.i73, align 4
  %arrayidx1.i1.i.i74 = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call3, i32 0, i32 9, i32 12
  %35 = ptrtoint ptr %arrayidx1.i1.i.i74 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %31, ptr %arrayidx1.i1.i.i74, align 4
  br label %do.end40

do.end40:                                         ; preds = %do.body26, %if.then19
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %do.end40, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_tcp_retransmit_synack(ptr noundef %__data, ptr noundef %sk, ptr noundef %req) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skaddr = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skaddr to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %sk, ptr %skaddr, align 4
  %req18 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %req18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %req, ptr %req18, align 4
  %29 = getelementptr inbounds %struct.sock_common, ptr %req, i32 0, i32 2
  %skc_num = getelementptr inbounds %struct.anon.179, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %skc_num to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %skc_num, align 2
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %31, ptr %sport, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %29, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %dport, align 2
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %36 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 5
  %38 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %family, align 4
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 6
  %skc_rcv_saddr = getelementptr inbounds %struct.anon.176, ptr %req, i32 0, i32 1
  %39 = ptrtoint ptr %skc_rcv_saddr to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %skc_rcv_saddr, align 4
  %41 = ptrtoint ptr %saddr to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %saddr, align 4
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 7
  %42 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %req, align 8
  %44 = ptrtoint ptr %daddr to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %daddr, align 4
  %45 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %45)
  %cmp = icmp eq i16 %45, 10
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 8
  br i1 %cmp, label %if.then31, label %do.body38

if.then31:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %skc_v6_rcv_saddr = getelementptr inbounds %struct.sock_common, ptr %req, i32 0, i32 11
  %46 = call ptr @memcpy(ptr %saddr_v6, ptr %skc_v6_rcv_saddr, i32 16)
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 9
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %req, i32 0, i32 10
  %47 = call ptr @memcpy(ptr %daddr_v6, ptr %skc_v6_daddr, i32 16)
  br label %do.end54

do.body38:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %48 = ptrtoint ptr %skc_rcv_saddr to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %skc_rcv_saddr, align 4
  %50 = ptrtoint ptr %saddr_v6 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %saddr_v6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 8, i32 4
  %51 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 8, i32 8
  %52 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 8, i32 12
  %53 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %49, ptr %arrayidx1.i1.i.i, align 4
  %daddr_v645 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 9
  %54 = ptrtoint ptr %req to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %req, align 8
  %56 = ptrtoint ptr %daddr_v645 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %daddr_v645, align 4
  %arrayidx1.i.i.i98 = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 9, i32 4
  %57 = ptrtoint ptr %arrayidx1.i.i.i98 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %arrayidx1.i.i.i98, align 4
  %arrayidx2.i.i99 = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 9, i32 8
  %58 = ptrtoint ptr %arrayidx2.i.i99 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 65535, ptr %arrayidx2.i.i99, align 4
  %arrayidx1.i1.i.i100 = getelementptr %struct.trace_event_raw_tcp_retransmit_synack, ptr %call13, i32 0, i32 9, i32 12
  %59 = ptrtoint ptr %arrayidx1.i1.i.i100 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %55, ptr %arrayidx1.i1.i.i100, align 4
  br label %do.end54

do.end54:                                         ; preds = %do.body38, %if.then31
  %60 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %rctx, align 4
  %62 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %61, ptr noundef %__data, i64 noundef 1, ptr noundef %63, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %do.end54, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_tcp_probe(ptr noundef %__data, ptr noundef %sk, ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 120) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 1
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 2
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %5 = call ptr @memset(ptr %saddr, i32 0, i32 56)
  %6 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %7)
  %cmp = icmp eq i16 %7, 10
  br i1 %cmp, label %if.then10, label %do.body23

if.then10:                                        ; preds = %if.end5
  %8 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 10, ptr %saddr, align 4
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %9 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %inet_sport, align 8
  %sin6_port = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 1, i32 2
  %11 = ptrtoint ptr %sin6_port to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %sin6_port, align 2
  %sin6_addr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 1, i32 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %12 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %13 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then10.inet6_sk.exit_crit_edge, label %cond.true.i

if.then10.inet6_sk.exit_crit_edge:                ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #10
  br label %inet6_sk.exit

cond.true.i:                                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #10
  %pinet6.i = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 1
  %14 = ptrtoint ptr %pinet6.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pinet6.i, align 8
  br label %inet6_sk.exit

inet6_sk.exit:                                    ; preds = %cond.true.i, %if.then10.inet6_sk.exit_crit_edge
  %cond.i = phi ptr [ %15, %cond.true.i ], [ null, %if.then10.inet6_sk.exit_crit_edge ]
  %16 = call ptr @memcpy(ptr %sin6_addr, ptr %cond.i, i32 16)
  %17 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 10, ptr %daddr, align 4
  %18 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %18, align 4
  %sin6_port20 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 2, i32 2
  %21 = ptrtoint ptr %sin6_port20 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %20, ptr %sin6_port20, align 2
  %sin6_addr21 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 2, i32 8
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %22 = call ptr @memcpy(ptr %sin6_addr21, ptr %skc_v6_daddr, i32 16)
  br label %do.end40

do.body23:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %23 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 2, ptr %saddr, align 4
  %inet_sport26 = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %24 = ptrtoint ptr %inet_sport26 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %inet_sport26, align 8
  %sin_port = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 1, i32 2
  %26 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %25, ptr %sin_port, align 2
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %27 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %inet_saddr, align 4
  %sin_addr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 1, i32 4
  %29 = ptrtoint ptr %sin_addr to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %sin_addr, align 4
  %30 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 2, ptr %daddr, align 4
  %31 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %31, align 4
  %sin_port33 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 2, i32 2
  %34 = ptrtoint ptr %sin_port33 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %sin_port33, align 2
  %35 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %sk, align 8
  %sin_addr36 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 2, i32 4
  %37 = ptrtoint ptr %sin_addr36 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %sin_addr36, align 4
  br label %do.end40

do.end40:                                         ; preds = %do.body23, %inet6_sk.exit
  %inet_sport41 = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %38 = ptrtoint ptr %inet_sport41 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %inet_sport41, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 3
  %40 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %39, ptr %sport, align 8
  %41 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %41, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 4
  %44 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %43, ptr %dport, align 2
  %45 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 13
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 4
  %mark = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 6
  %48 = ptrtoint ptr %mark to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %mark, align 8
  %49 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 5
  %51 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %50, ptr %family, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %52 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %len, align 4
  %doff.i = getelementptr inbounds %struct.tcphdr, ptr %4, i32 0, i32 4
  %54 = ptrtoint ptr %doff.i to i32
  call void @__asan_load2_noabort(i32 %54)
  %bf.load.i = load i16, ptr %doff.i, align 4
  %55 = lshr i16 %bf.load.i, 10
  %56 = and i16 %55, 60
  %57 = trunc i32 %53 to i16
  %conv48 = sub i16 %57, %56
  %data_len = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 7
  %58 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %conv48, ptr %data_len, align 4
  %snd_nxt = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 10
  %59 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %snd_nxt, align 4
  %snd_nxt49 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 8
  %61 = ptrtoint ptr %snd_nxt49 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %snd_nxt49, align 8
  %snd_una = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 16
  %62 = ptrtoint ptr %snd_una to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %snd_una, align 4
  %snd_una50 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 9
  %64 = ptrtoint ptr %snd_una50 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %snd_una50, align 4
  %snd_cwnd = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 63
  %65 = ptrtoint ptr %snd_cwnd to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %snd_cwnd, align 8
  %snd_cwnd51 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 10
  %67 = ptrtoint ptr %snd_cwnd51 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %snd_cwnd51, align 8
  %snd_wnd = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 26
  %68 = ptrtoint ptr %snd_wnd to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %snd_wnd, align 4
  %snd_wnd52 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 12
  %70 = ptrtoint ptr %snd_wnd52 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %69, ptr %snd_wnd52, align 8
  %rcv_wnd = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 79
  %71 = ptrtoint ptr %rcv_wnd to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %rcv_wnd, align 8
  %rcv_wnd53 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 14
  %73 = ptrtoint ptr %rcv_wnd53 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %72, ptr %rcv_wnd53, align 8
  %icsk_ca_state.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 17
  %74 = ptrtoint ptr %icsk_ca_state.i.i to i32
  call void @__asan_load1_noabort(i32 %74)
  %bf.load.i.i = load i8, ptr %icsk_ca_state.i.i, align 4
  %bf.lshr.i.i = lshr i8 %bf.load.i.i, 3
  %conv.i.i113 = zext i8 %bf.lshr.i.i to i32
  %shl.i.i114 = shl nuw i32 1, %conv.i.i113
  %and.i.i115 = and i32 %shl.i.i114, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i115)
  %tobool.i.not.i116 = icmp eq i32 %and.i.i115, 0
  %snd_ssthresh2.i = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 62
  %75 = ptrtoint ptr %snd_ssthresh2.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %snd_ssthresh2.i, align 4
  br i1 %tobool.i.not.i116, label %if.else.i, label %do.end40.tcp_current_ssthresh.exit_crit_edge

do.end40.tcp_current_ssthresh.exit_crit_edge:     ; preds = %do.end40
  call void @__sanitizer_cov_trace_pc() #10
  br label %tcp_current_ssthresh.exit

if.else.i:                                        ; preds = %do.end40
  call void @__sanitizer_cov_trace_pc() #10
  %77 = ptrtoint ptr %snd_cwnd to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %snd_cwnd, align 8
  %shr.i = lshr i32 %78, 1
  %shr4.i = lshr i32 %78, 2
  %add.i = add nuw i32 %shr.i, %shr4.i
  %79 = call i32 @llvm.umax.i32(i32 %76, i32 %add.i) #8
  br label %tcp_current_ssthresh.exit

tcp_current_ssthresh.exit:                        ; preds = %if.else.i, %do.end40.tcp_current_ssthresh.exit_crit_edge
  %retval.0.i117 = phi i32 [ %79, %if.else.i ], [ %76, %do.end40.tcp_current_ssthresh.exit_crit_edge ]
  %ssthresh = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 11
  %80 = ptrtoint ptr %ssthresh to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %retval.0.i117, ptr %ssthresh, align 4
  %srtt_us = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 45
  %81 = ptrtoint ptr %srtt_us to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %srtt_us, align 8
  %shr = lshr i32 %82, 3
  %srtt = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 13
  %83 = ptrtoint ptr %srtt to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %shr, ptr %srtt, align 4
  %84 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i.i.i.i = and i32 %84, -16384
  %85 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %87, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #8, !srcloc !1065
  %call.i118 = call i64 @__sock_gen_cookie(ptr noundef %sk) #8
  call void asm sideeffect "", "~{memory}"() #8, !srcloc !1066
  %88 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i.i.i4.i = and i32 %88, -16384
  %89 = inttoptr i32 %and.i.i.i4.i to ptr
  %preempt_count.i.i5.i = getelementptr inbounds %struct.thread_info, ptr %89, i32 0, i32 1
  %90 = ptrtoint ptr %preempt_count.i.i5.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %preempt_count.i.i5.i, align 4
  %sub.i.i = add i32 %91, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i5.i, align 4
  %sock_cookie = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call3, i32 0, i32 15
  %92 = ptrtoint ptr %sock_cookie to i32
  call void @__asan_store8_noabort(i32 %92)
  store i64 %call.i118, ptr %sock_cookie, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %tcp_current_ssthresh.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_tcp_probe(ptr noundef %__data, ptr noundef %sk, ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 124, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %27 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %data, align 4
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 1
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 2
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %29 = call ptr @memset(ptr %saddr, i32 0, i32 56)
  %30 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %31)
  %cmp = icmp eq i16 %31, 10
  br i1 %cmp, label %if.then22, label %do.body35

if.then22:                                        ; preds = %if.end16
  %32 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 10, ptr %saddr, align 4
  %inet_sport = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %33 = ptrtoint ptr %inet_sport to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %inet_sport, align 8
  %sin6_port = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 1, i32 2
  %35 = ptrtoint ptr %sin6_port to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %sin6_port, align 2
  %sin6_addr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 1, i32 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %36 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %37 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then22.inet6_sk.exit_crit_edge, label %cond.true.i

if.then22.inet6_sk.exit_crit_edge:                ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #10
  br label %inet6_sk.exit

cond.true.i:                                      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #10
  %pinet6.i = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 1
  %38 = ptrtoint ptr %pinet6.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %pinet6.i, align 8
  br label %inet6_sk.exit

inet6_sk.exit:                                    ; preds = %cond.true.i, %if.then22.inet6_sk.exit_crit_edge
  %cond.i = phi ptr [ %39, %cond.true.i ], [ null, %if.then22.inet6_sk.exit_crit_edge ]
  %40 = call ptr @memcpy(ptr %sin6_addr, ptr %cond.i, i32 16)
  %41 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 10, ptr %daddr, align 4
  %42 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %42, align 4
  %sin6_port32 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 2, i32 2
  %45 = ptrtoint ptr %sin6_port32 to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %44, ptr %sin6_port32, align 2
  %sin6_addr33 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 2, i32 8
  %skc_v6_daddr = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 10
  %46 = call ptr @memcpy(ptr %sin6_addr33, ptr %skc_v6_daddr, i32 16)
  br label %do.end54

do.body35:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %47 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 2, ptr %saddr, align 4
  %inet_sport38 = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %48 = ptrtoint ptr %inet_sport38 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %inet_sport38, align 8
  %sin_port = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 1, i32 2
  %50 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %49, ptr %sin_port, align 2
  %inet_saddr = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 2
  %51 = ptrtoint ptr %inet_saddr to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %inet_saddr, align 4
  %sin_addr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 1, i32 4
  %53 = ptrtoint ptr %sin_addr to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %sin_addr, align 4
  %54 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 2, ptr %daddr, align 4
  %55 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %55, align 4
  %sin_port45 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 2, i32 2
  %58 = ptrtoint ptr %sin_port45 to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %57, ptr %sin_port45, align 2
  %59 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %sk, align 8
  %sin_addr48 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 2, i32 4
  %61 = ptrtoint ptr %sin_addr48 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %sin_addr48, align 4
  br label %do.end54

do.end54:                                         ; preds = %do.body35, %inet6_sk.exit
  %inet_sport55 = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 6
  %62 = ptrtoint ptr %inet_sport55 to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %inet_sport55, align 8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 3
  %64 = ptrtoint ptr %sport to i32
  call void @__asan_store2_noabort(i32 %64)
  store i16 %63, ptr %sport, align 8
  %65 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 2
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %65, align 4
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 4
  %68 = ptrtoint ptr %dport to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %67, ptr %dport, align 2
  %69 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 13
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %69, align 4
  %mark = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 6
  %72 = ptrtoint ptr %mark to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %71, ptr %mark, align 8
  %73 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %skc_family, align 8
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 5
  %75 = ptrtoint ptr %family to i32
  call void @__asan_store2_noabort(i32 %75)
  store i16 %74, ptr %family, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %76 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %len, align 4
  %doff.i = getelementptr inbounds %struct.tcphdr, ptr %28, i32 0, i32 4
  %78 = ptrtoint ptr %doff.i to i32
  call void @__asan_load2_noabort(i32 %78)
  %bf.load.i = load i16, ptr %doff.i, align 4
  %79 = lshr i16 %bf.load.i, 10
  %80 = and i16 %79, 60
  %81 = trunc i32 %77 to i16
  %conv63 = sub i16 %81, %80
  %data_len = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 7
  %82 = ptrtoint ptr %data_len to i32
  call void @__asan_store2_noabort(i32 %82)
  store i16 %conv63, ptr %data_len, align 4
  %snd_nxt = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 10
  %83 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %snd_nxt, align 4
  %snd_nxt64 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 8
  %85 = ptrtoint ptr %snd_nxt64 to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %84, ptr %snd_nxt64, align 8
  %snd_una = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 16
  %86 = ptrtoint ptr %snd_una to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %snd_una, align 4
  %snd_una65 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 9
  %88 = ptrtoint ptr %snd_una65 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %87, ptr %snd_una65, align 4
  %snd_cwnd = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 63
  %89 = ptrtoint ptr %snd_cwnd to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %snd_cwnd, align 8
  %snd_cwnd66 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 10
  %91 = ptrtoint ptr %snd_cwnd66 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %90, ptr %snd_cwnd66, align 8
  %snd_wnd = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 26
  %92 = ptrtoint ptr %snd_wnd to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %snd_wnd, align 4
  %snd_wnd67 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 12
  %94 = ptrtoint ptr %snd_wnd67 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %93, ptr %snd_wnd67, align 8
  %rcv_wnd = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 79
  %95 = ptrtoint ptr %rcv_wnd to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %rcv_wnd, align 8
  %rcv_wnd68 = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 14
  %97 = ptrtoint ptr %rcv_wnd68 to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %96, ptr %rcv_wnd68, align 8
  %icsk_ca_state.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 17
  %98 = ptrtoint ptr %icsk_ca_state.i.i to i32
  call void @__asan_load1_noabort(i32 %98)
  %bf.load.i.i = load i8, ptr %icsk_ca_state.i.i, align 4
  %bf.lshr.i.i = lshr i8 %bf.load.i.i, 3
  %conv.i.i140 = zext i8 %bf.lshr.i.i to i32
  %shl.i.i141 = shl nuw i32 1, %conv.i.i140
  %and.i.i142 = and i32 %shl.i.i141, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i142)
  %tobool.i.not.i143 = icmp eq i32 %and.i.i142, 0
  %snd_ssthresh2.i = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 62
  %99 = ptrtoint ptr %snd_ssthresh2.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %snd_ssthresh2.i, align 4
  br i1 %tobool.i.not.i143, label %if.else.i, label %do.end54.tcp_current_ssthresh.exit_crit_edge

do.end54.tcp_current_ssthresh.exit_crit_edge:     ; preds = %do.end54
  call void @__sanitizer_cov_trace_pc() #10
  br label %tcp_current_ssthresh.exit

if.else.i:                                        ; preds = %do.end54
  call void @__sanitizer_cov_trace_pc() #10
  %101 = ptrtoint ptr %snd_cwnd to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %snd_cwnd, align 8
  %shr.i = lshr i32 %102, 1
  %shr4.i = lshr i32 %102, 2
  %add.i = add nuw i32 %shr.i, %shr4.i
  %103 = call i32 @llvm.umax.i32(i32 %100, i32 %add.i) #8
  br label %tcp_current_ssthresh.exit

tcp_current_ssthresh.exit:                        ; preds = %if.else.i, %do.end54.tcp_current_ssthresh.exit_crit_edge
  %retval.0.i = phi i32 [ %103, %if.else.i ], [ %100, %do.end54.tcp_current_ssthresh.exit_crit_edge ]
  %ssthresh = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 11
  %104 = ptrtoint ptr %ssthresh to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %retval.0.i, ptr %ssthresh, align 4
  %srtt_us = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 45
  %105 = ptrtoint ptr %srtt_us to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %srtt_us, align 8
  %shr = lshr i32 %106, 3
  %srtt = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 13
  %107 = ptrtoint ptr %srtt to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %shr, ptr %srtt, align 4
  %108 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i.i.i.i = and i32 %108, -16384
  %109 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %109, i32 0, i32 1
  %110 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %111, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #8, !srcloc !1065
  %call.i = call i64 @__sock_gen_cookie(ptr noundef %sk) #8
  call void asm sideeffect "", "~{memory}"() #8, !srcloc !1066
  %112 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i.i.i4.i = and i32 %112, -16384
  %113 = inttoptr i32 %and.i.i.i4.i to ptr
  %preempt_count.i.i5.i = getelementptr inbounds %struct.thread_info, ptr %113, i32 0, i32 1
  %114 = ptrtoint ptr %preempt_count.i.i5.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %preempt_count.i.i5.i, align 4
  %sub.i.i = add i32 %115, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i5.i, align 4
  %sock_cookie = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %call13, i32 0, i32 15
  %116 = ptrtoint ptr %sock_cookie to i32
  call void @__asan_store8_noabort(i32 %116)
  store i64 %call.i, ptr %sock_cookie, align 8
  %117 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %rctx, align 4
  %119 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 124, i32 noundef %118, ptr noundef %__data, i64 noundef 1, ptr noundef %120, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %tcp_current_ssthresh.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_tcp_event_skb(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 68) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %skb, ptr %skbaddr, align 4
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 2
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 3
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %4 = call ptr @memset(ptr %saddr, i32 0, i32 56)
  %5 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %7 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %8 to i32
  %add.ptr.i.i = getelementptr i8, ptr %6, i32 %conv.i.i
  %9 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load = load i8, ptr %add.ptr.i.i, align 4
  %bf.lshr.mask = and i8 %bf.load, -16
  call void @__sanitizer_cov_trace_const_cmp1(i8 96, i8 %bf.lshr.mask)
  %cmp = icmp eq i8 %bf.lshr.mask, 96
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data, align 4
  br i1 %cmp, label %if.then9, label %do.body21

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %12 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 10, ptr %saddr, align 4
  %13 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %11, align 4
  %sin6_port = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 2, i32 2
  %15 = ptrtoint ptr %sin6_port to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %14, ptr %sin6_port, align 2
  %sin6_addr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 2, i32 8
  %16 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %head.i.i, align 8
  %18 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i75 = zext i16 %19 to i32
  %add.ptr.i.i76 = getelementptr i8, ptr %17, i32 %conv.i.i75
  %saddr13 = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i76, i32 0, i32 5
  %20 = call ptr @memcpy(ptr %sin6_addr, ptr %saddr13, i32 16)
  %21 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 10, ptr %daddr, align 4
  %dest = getelementptr inbounds %struct.tcphdr, ptr %11, i32 0, i32 1
  %22 = ptrtoint ptr %dest to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %dest, align 2
  %sin6_port17 = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 3, i32 2
  %24 = ptrtoint ptr %sin6_port17 to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %23, ptr %sin6_port17, align 2
  %sin6_addr18 = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 3, i32 8
  %25 = load ptr, ptr %head.i.i, align 8
  %26 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i79 = zext i16 %26 to i32
  %add.ptr.i.i80 = getelementptr i8, ptr %25, i32 %conv.i.i79
  %daddr20 = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i80, i32 0, i32 6
  %27 = call ptr @memcpy(ptr %sin6_addr18, ptr %daddr20, i32 16)
  br label %if.end38

do.body21:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %28 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 2, ptr %saddr, align 4
  %29 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %11, align 4
  %sin_port = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 2, i32 2
  %31 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %sin_port, align 2
  %32 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %head.i.i, align 8
  %34 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i83 = zext i16 %35 to i32
  %add.ptr.i.i84 = getelementptr i8, ptr %33, i32 %conv.i.i83
  %saddr28 = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i84, i32 0, i32 8
  %36 = ptrtoint ptr %saddr28 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %saddr28, align 4
  %sin_addr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 2, i32 4
  %38 = ptrtoint ptr %sin_addr to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %sin_addr, align 4
  %39 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 2, ptr %daddr, align 4
  %dest32 = getelementptr inbounds %struct.tcphdr, ptr %11, i32 0, i32 1
  %40 = ptrtoint ptr %dest32 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %dest32, align 2
  %sin_port33 = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 3, i32 2
  %42 = ptrtoint ptr %sin_port33 to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %41, ptr %sin_port33, align 2
  %43 = load ptr, ptr %head.i.i, align 8
  %44 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i87 = zext i16 %44 to i32
  %add.ptr.i.i88 = getelementptr i8, ptr %43, i32 %conv.i.i87
  %daddr35 = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i88, i32 0, i32 9
  %45 = ptrtoint ptr %daddr35 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %daddr35, align 4
  %sin_addr36 = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call3, i32 0, i32 3, i32 4
  %47 = ptrtoint ptr %sin_addr36 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %sin_addr36, align 4
  br label %if.end38

if.end38:                                         ; preds = %do.body21, %if.then9
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_tcp_event_skb(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %skb, ptr %skbaddr, align 4
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 2
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 3
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %28 = call ptr @memset(ptr %saddr, i32 0, i32 56)
  %29 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %31 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %32 to i32
  %add.ptr.i.i = getelementptr i8, ptr %30, i32 %conv.i.i
  %33 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load = load i8, ptr %add.ptr.i.i, align 4
  %bf.lshr.mask = and i8 %bf.load, -16
  call void @__sanitizer_cov_trace_const_cmp1(i8 96, i8 %bf.lshr.mask)
  %cmp = icmp eq i8 %bf.lshr.mask, 96
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %34 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %data, align 4
  br i1 %cmp, label %if.then21, label %do.body33

if.then21:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %36 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 10, ptr %saddr, align 4
  %37 = ptrtoint ptr %35 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %35, align 4
  %sin6_port = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 2, i32 2
  %39 = ptrtoint ptr %sin6_port to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %38, ptr %sin6_port, align 2
  %sin6_addr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 2, i32 8
  %40 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %head.i.i, align 8
  %42 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i101 = zext i16 %43 to i32
  %add.ptr.i.i102 = getelementptr i8, ptr %41, i32 %conv.i.i101
  %saddr25 = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i102, i32 0, i32 5
  %44 = call ptr @memcpy(ptr %sin6_addr, ptr %saddr25, i32 16)
  %45 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 10, ptr %daddr, align 4
  %dest = getelementptr inbounds %struct.tcphdr, ptr %35, i32 0, i32 1
  %46 = ptrtoint ptr %dest to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %dest, align 2
  %sin6_port29 = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 3, i32 2
  %48 = ptrtoint ptr %sin6_port29 to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %47, ptr %sin6_port29, align 2
  %sin6_addr30 = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 3, i32 8
  %49 = load ptr, ptr %head.i.i, align 8
  %50 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i105 = zext i16 %50 to i32
  %add.ptr.i.i106 = getelementptr i8, ptr %49, i32 %conv.i.i105
  %daddr32 = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i106, i32 0, i32 6
  %51 = call ptr @memcpy(ptr %sin6_addr30, ptr %daddr32, i32 16)
  br label %if.end52

do.body33:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %52 = ptrtoint ptr %saddr to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 2, ptr %saddr, align 4
  %53 = ptrtoint ptr %35 to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %35, align 4
  %sin_port = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 2, i32 2
  %55 = ptrtoint ptr %sin_port to i32
  call void @__asan_store2_noabort(i32 %55)
  store i16 %54, ptr %sin_port, align 2
  %56 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %head.i.i, align 8
  %58 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i109 = zext i16 %59 to i32
  %add.ptr.i.i110 = getelementptr i8, ptr %57, i32 %conv.i.i109
  %saddr40 = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i110, i32 0, i32 8
  %60 = ptrtoint ptr %saddr40 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %saddr40, align 4
  %sin_addr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 2, i32 4
  %62 = ptrtoint ptr %sin_addr to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %sin_addr, align 4
  %63 = ptrtoint ptr %daddr to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 2, ptr %daddr, align 4
  %dest44 = getelementptr inbounds %struct.tcphdr, ptr %35, i32 0, i32 1
  %64 = ptrtoint ptr %dest44 to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %dest44, align 2
  %sin_port45 = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 3, i32 2
  %66 = ptrtoint ptr %sin_port45 to i32
  call void @__asan_store2_noabort(i32 %66)
  store i16 %65, ptr %sin_port45, align 2
  %67 = load ptr, ptr %head.i.i, align 8
  %68 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i113 = zext i16 %68 to i32
  %add.ptr.i.i114 = getelementptr i8, ptr %67, i32 %conv.i.i113
  %daddr47 = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i114, i32 0, i32 9
  %69 = ptrtoint ptr %daddr47 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %daddr47, align 4
  %sin_addr48 = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %call13, i32 0, i32 3, i32 4
  %71 = ptrtoint ptr %sin_addr48 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %sin_addr48, align 4
  br label %if.end52

if.end52:                                         ; preds = %do.body33, %if.then21
  %72 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %rctx, align 4
  %74 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %73, ptr noundef %__data, i64 noundef 1, ptr noundef %75, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end52, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_tcp_event_sk_skb(ptr noundef %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %sk to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %skb to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_tcp_event_sk(ptr noundef %__data, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %sk to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_tcp_retransmit_synack(ptr noundef %__data, ptr noundef %sk, ptr noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %sk to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %req to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_tcp_probe(ptr noundef %__data, ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %sk to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %skb to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_tcp_event_skb(ptr noundef %__data, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %skb to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_fib_table_lookup(ptr nocapture readnone %__data, i32 noundef %tb_id, ptr noundef %flp, ptr noundef %nhc, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_fib_table_lookup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %tb_id, ptr noundef %flp, ptr noundef %nhc, i32 noundef %err) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_fib_table_lookup(ptr noundef %__data, i32 noundef %tb_id, ptr nocapture noundef readonly %flp, ptr noundef readonly %nhc, i32 noundef %err) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 15
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1048640, ptr %__data_loc_name, align 4
  %tb_id6 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %tb_id6 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %tb_id, ptr %tb_id6, align 4
  %err7 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %err7 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %err, ptr %err7, align 4
  %6 = ptrtoint ptr %flp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flp, align 8
  %oif = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 3
  %8 = ptrtoint ptr %oif to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %oif, align 4
  %flowic_iif = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 1
  %9 = ptrtoint ptr %flowic_iif to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flowic_iif, align 4
  %iif = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %iif to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %iif, align 4
  %flowic_tos = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 3
  %12 = ptrtoint ptr %flowic_tos to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %flowic_tos, align 4
  %tos = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 6
  %14 = ptrtoint ptr %tos to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %tos, align 1
  %flowic_scope = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 4
  %15 = ptrtoint ptr %flowic_scope to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %flowic_scope, align 1
  %scope = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 7
  %17 = ptrtoint ptr %scope to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %scope, align 2
  %flowic_flags = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 6
  %18 = ptrtoint ptr %flowic_flags to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %flowic_flags, align 1
  %flags = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 8
  %20 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %flags, align 1
  %src = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 9
  %saddr = getelementptr inbounds %struct.flowi4, ptr %flp, i32 0, i32 1
  %21 = ptrtoint ptr %saddr to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %saddr, align 8
  %23 = ptrtoint ptr %src to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %src, align 4
  %dst = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 10
  %daddr = getelementptr inbounds %struct.flowi4, ptr %flp, i32 0, i32 2
  %24 = ptrtoint ptr %daddr to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %daddr, align 4
  %26 = ptrtoint ptr %dst to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %dst, align 4
  %flowic_proto = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 5
  %27 = ptrtoint ptr %flowic_proto to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %flowic_proto, align 2
  %proto = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 5
  %29 = ptrtoint ptr %proto to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %28, ptr %proto, align 4
  %30 = zext i8 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values)
  switch i8 %28, label %if.else [
    i8 6, label %if.end5.if.then20_crit_edge
    i8 17, label %if.end5.if.then20_crit_edge136
  ]

if.end5.if.then20_crit_edge136:                   ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then20

if.end5.if.then20_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then20

if.then20:                                        ; preds = %if.end5.if.then20_crit_edge, %if.end5.if.then20_crit_edge136
  %uli = getelementptr inbounds %struct.flowi4, ptr %flp, i32 0, i32 3
  %sport = getelementptr inbounds %struct.anon.171, ptr %uli, i32 0, i32 1
  %31 = ptrtoint ptr %sport to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %sport, align 2
  %sport21 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 13
  %33 = ptrtoint ptr %sport21 to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %32, ptr %sport21, align 4
  %34 = ptrtoint ptr %uli to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %uli, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %sport24 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 13
  %36 = ptrtoint ptr %sport24 to i32
  call void @__asan_store2_noabort(i32 %36)
  store i16 0, ptr %sport24, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then20
  %.sink = phi i16 [ 0, %if.else ], [ %35, %if.then20 ]
  %dport25 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 14
  %37 = ptrtoint ptr %dport25 to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %.sink, ptr %dport25, align 2
  %tobool27.not = icmp eq ptr %nhc, null
  br i1 %tobool27.not, label %if.else68.critedge, label %cond.true

cond.true:                                        ; preds = %if.end26
  %38 = ptrtoint ptr %nhc to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %nhc, align 4
  %40 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %__data_loc_name, align 4
  %and.c132 = and i32 %41, 65535
  %add.ptr.c133 = getelementptr i8, ptr %call3, i32 %and.c132
  %tobool29.not.c = icmp eq ptr %39, null
  %cond45.c = select i1 %tobool29.not.c, ptr @.str.174, ptr %39
  %call46.c134 = call ptr @strcpy(ptr noundef %add.ptr.c133, ptr noundef nonnull %cond45.c) #12
  %nhc_gw_family = getelementptr inbounds %struct.fib_nh_common, ptr %nhc, i32 0, i32 5
  %42 = ptrtoint ptr %nhc_gw_family to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %nhc_gw_family, align 2
  %44 = zext i8 %43 to i64
  call void @__sanitizer_cov_trace_switch(i64 %44, ptr @__sancov_gen_cov_switch_values.266)
  switch i8 %43, label %cond.true.if.end73_crit_edge [
    i8 2, label %if.then52
    i8 10, label %if.then60
  ]

cond.true.if.end73_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end73

if.then52:                                        ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #10
  %gw4 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 11
  %nhc_gw = getelementptr inbounds %struct.fib_nh_common, ptr %nhc, i32 0, i32 8
  %45 = ptrtoint ptr %nhc_gw to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %nhc_gw, align 4
  %47 = ptrtoint ptr %gw4 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %gw4, align 4
  %gw6 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 12
  %48 = call ptr @memset(ptr %gw6, i32 0, i32 16)
  br label %if.end73

if.then60:                                        ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #10
  %gw461 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 11
  %49 = ptrtoint ptr %gw461 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %gw461, align 4
  %gw663 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 12
  %nhc_gw65 = getelementptr inbounds %struct.fib_nh_common, ptr %nhc, i32 0, i32 8
  %50 = call ptr @memcpy(ptr %gw663, ptr %nhc_gw65, i32 16)
  br label %if.end73

if.else68.critedge:                               ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #10
  %51 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %__data_loc_name, align 4
  %and.c = and i32 %52, 65535
  %add.ptr.c = getelementptr i8, ptr %call3, i32 %and.c
  %53 = ptrtoint ptr %add.ptr.c to i32
  call void @__asan_storeN_noabort(i32 %53, i32 2)
  store i16 11520, ptr %add.ptr.c, align 1
  %gw469 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call3, i32 0, i32 11
  %54 = call ptr @memset(ptr %gw469, i32 0, i32 20)
  br label %if.end73

if.end73:                                         ; preds = %if.else68.critedge, %if.then60, %if.then52, %cond.true.if.end73_crit_edge
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end73, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_fib_table_lookup(ptr noundef %__data, i32 noundef %tb_id, ptr nocapture noundef readonly %flp, ptr noundef readonly %nhc, i32 noundef %err) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 15
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 1048640, ptr %__data_loc_name, align 4
  %tb_id17 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %tb_id17 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %tb_id, ptr %tb_id17, align 4
  %err18 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %err18 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %err, ptr %err18, align 4
  %30 = ptrtoint ptr %flp to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flp, align 8
  %oif = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 3
  %32 = ptrtoint ptr %oif to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %oif, align 4
  %flowic_iif = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 1
  %33 = ptrtoint ptr %flowic_iif to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flowic_iif, align 4
  %iif = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %iif to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %iif, align 4
  %flowic_tos = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 3
  %36 = ptrtoint ptr %flowic_tos to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %flowic_tos, align 4
  %tos = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 6
  %38 = ptrtoint ptr %tos to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %37, ptr %tos, align 1
  %flowic_scope = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 4
  %39 = ptrtoint ptr %flowic_scope to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %flowic_scope, align 1
  %scope = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 7
  %41 = ptrtoint ptr %scope to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %40, ptr %scope, align 2
  %flowic_flags = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 6
  %42 = ptrtoint ptr %flowic_flags to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %flowic_flags, align 1
  %flags = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 8
  %44 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %43, ptr %flags, align 1
  %src = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 9
  %saddr = getelementptr inbounds %struct.flowi4, ptr %flp, i32 0, i32 1
  %45 = ptrtoint ptr %saddr to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %saddr, align 8
  %47 = ptrtoint ptr %src to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %src, align 4
  %dst = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 10
  %daddr = getelementptr inbounds %struct.flowi4, ptr %flp, i32 0, i32 2
  %48 = ptrtoint ptr %daddr to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %daddr, align 4
  %50 = ptrtoint ptr %dst to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %dst, align 4
  %flowic_proto = getelementptr inbounds %struct.flowi_common, ptr %flp, i32 0, i32 5
  %51 = ptrtoint ptr %flowic_proto to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %flowic_proto, align 2
  %proto = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 5
  %53 = ptrtoint ptr %proto to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %52, ptr %proto, align 4
  %54 = zext i8 %52 to i64
  call void @__sanitizer_cov_trace_switch(i64 %54, ptr @__sancov_gen_cov_switch_values.267)
  switch i8 %52, label %if.else [
    i8 6, label %if.end16.if.then31_crit_edge
    i8 17, label %if.end16.if.then31_crit_edge159
  ]

if.end16.if.then31_crit_edge159:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31

if.end16.if.then31_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.then31

if.then31:                                        ; preds = %if.end16.if.then31_crit_edge, %if.end16.if.then31_crit_edge159
  %uli = getelementptr inbounds %struct.flowi4, ptr %flp, i32 0, i32 3
  %sport = getelementptr inbounds %struct.anon.171, ptr %uli, i32 0, i32 1
  %55 = ptrtoint ptr %sport to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %sport, align 2
  %sport32 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 13
  %57 = ptrtoint ptr %sport32 to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 %56, ptr %sport32, align 4
  %58 = ptrtoint ptr %uli to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %uli, align 8
  br label %if.end37

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %sport35 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 13
  %60 = ptrtoint ptr %sport35 to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 0, ptr %sport35, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then31
  %.sink = phi i16 [ 0, %if.else ], [ %59, %if.then31 ]
  %dport36 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 14
  %61 = ptrtoint ptr %dport36 to i32
  call void @__asan_store2_noabort(i32 %61)
  store i16 %.sink, ptr %dport36, align 2
  %tobool38.not = icmp eq ptr %nhc, null
  br i1 %tobool38.not, label %if.else80.critedge, label %cond.true

cond.true:                                        ; preds = %if.end37
  %62 = ptrtoint ptr %nhc to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %nhc, align 4
  %64 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %__data_loc_name, align 4
  %and40.c156 = and i32 %65, 65535
  %add.ptr.c157 = getelementptr i8, ptr %call13, i32 %and40.c156
  %tobool41.not.c = icmp eq ptr %63, null
  %cond57.c = select i1 %tobool41.not.c, ptr @.str.174, ptr %63
  %call58.c158 = call ptr @strcpy(ptr noundef %add.ptr.c157, ptr noundef nonnull %cond57.c) #12
  %nhc_gw_family = getelementptr inbounds %struct.fib_nh_common, ptr %nhc, i32 0, i32 5
  %66 = ptrtoint ptr %nhc_gw_family to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %nhc_gw_family, align 2
  %68 = zext i8 %67 to i64
  call void @__sanitizer_cov_trace_switch(i64 %68, ptr @__sancov_gen_cov_switch_values.268)
  switch i8 %67, label %cond.true.if.end85_crit_edge [
    i8 2, label %if.then64
    i8 10, label %if.then72
  ]

cond.true.if.end85_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end85

if.then64:                                        ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #10
  %gw4 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 11
  %nhc_gw = getelementptr inbounds %struct.fib_nh_common, ptr %nhc, i32 0, i32 8
  %69 = ptrtoint ptr %nhc_gw to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %nhc_gw, align 4
  %71 = ptrtoint ptr %gw4 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %gw4, align 4
  %gw6 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 12
  %72 = call ptr @memset(ptr %gw6, i32 0, i32 16)
  br label %if.end85

if.then72:                                        ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #10
  %gw473 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 11
  %73 = ptrtoint ptr %gw473 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 0, ptr %gw473, align 4
  %gw675 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 12
  %nhc_gw77 = getelementptr inbounds %struct.fib_nh_common, ptr %nhc, i32 0, i32 8
  %74 = call ptr @memcpy(ptr %gw675, ptr %nhc_gw77, i32 16)
  br label %if.end85

if.else80.critedge:                               ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #10
  %75 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %__data_loc_name, align 4
  %and40.c = and i32 %76, 65535
  %add.ptr.c = getelementptr i8, ptr %call13, i32 %and40.c
  %77 = ptrtoint ptr %add.ptr.c to i32
  call void @__asan_storeN_noabort(i32 %77, i32 2)
  store i16 11520, ptr %add.ptr.c, align 1
  %gw481 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %call13, i32 0, i32 11
  %78 = call ptr @memset(ptr %gw481, i32 0, i32 20)
  br label %if.end85

if.end85:                                         ; preds = %if.else80.critedge, %if.then72, %if.then64, %cond.true.if.end85_crit_edge
  %79 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %rctx, align 4
  %81 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %80, ptr noundef %__data, i64 noundef 1, ptr noundef %82, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end85, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_fib_table_lookup(ptr noundef %__data, i32 noundef %tb_id, ptr noundef %flp, ptr noundef %nhc, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %conv = zext i32 %tb_id to i64
  %0 = ptrtoint ptr %flp to i32
  %conv4 = zext i32 %0 to i64
  %1 = ptrtoint ptr %nhc to i32
  %conv8 = zext i32 %1 to i64
  %conv12 = zext i32 %err to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qdisc_dequeue(ptr nocapture readnone %__data, ptr noundef %qdisc, ptr noundef %txq, i32 noundef %packets, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qdisc_dequeue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %qdisc, ptr noundef %txq, i32 noundef %packets, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qdisc_enqueue(ptr nocapture readnone %__data, ptr noundef %qdisc, ptr noundef %txq, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qdisc_enqueue, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %qdisc, ptr noundef %txq, ptr noundef %skb) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qdisc_reset(ptr nocapture readnone %__data, ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qdisc_reset, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %q) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qdisc_destroy(ptr nocapture readnone %__data, ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qdisc_destroy, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %q) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_qdisc_create(ptr nocapture readnone %__data, ptr noundef %ops, ptr noundef %dev, i32 noundef %parent) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_qdisc_create, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ops, ptr noundef %dev, i32 noundef %parent) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qdisc_dequeue(ptr noundef %__data, ptr noundef %qdisc, ptr noundef %txq, i32 noundef %packets, ptr noundef %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %qdisc6 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %qdisc6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %qdisc, ptr %qdisc6, align 4
  %txq7 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %txq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %txq, ptr %txq7, align 4
  %tobool8.not = icmp eq ptr %skb, null
  %spec.select = select i1 %tobool8.not, i32 0, i32 %packets
  %packets9 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %packets9 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %spec.select, ptr %packets9, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %skb, ptr %skbaddr, align 4
  %7 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %txq, align 128
  %tobool10.not = icmp eq ptr %8, null
  br i1 %tobool10.not, label %if.end5.cond.end14_crit_edge, label %cond.true11

if.end5.cond.end14_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end14

cond.true11:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %ifindex = getelementptr inbounds %struct.net_device, ptr %8, i32 0, i32 17
  %9 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %ifindex, align 4
  br label %cond.end14

cond.end14:                                       ; preds = %cond.true11, %if.end5.cond.end14_crit_edge
  %cond15 = phi i32 [ %10, %cond.true11 ], [ 0, %if.end5.cond.end14_crit_edge ]
  %ifindex16 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %ifindex16 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %cond15, ptr %ifindex16, align 4
  %handle = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 7
  %12 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %handle, align 32
  %handle17 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call3, i32 0, i32 6
  %14 = ptrtoint ptr %handle17 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %handle17, align 4
  %parent = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 8
  %15 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %parent, align 4
  %parent18 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call3, i32 0, i32 7
  %17 = ptrtoint ptr %parent18 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %parent18, align 4
  %state = getelementptr inbounds %struct.netdev_queue, ptr %txq, i32 0, i32 13
  %18 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %state, align 4
  %txq_state = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call3, i32 0, i32 8
  %20 = ptrtoint ptr %txq_state to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %txq_state, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end14, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qdisc_dequeue(ptr noundef %__data, ptr noundef %qdisc, ptr noundef %txq, i32 noundef %packets, ptr noundef %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %qdisc17 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %qdisc17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %qdisc, ptr %qdisc17, align 4
  %txq18 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %txq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %txq, ptr %txq18, align 4
  %tobool19.not = icmp eq ptr %skb, null
  %spec.select = select i1 %tobool19.not, i32 0, i32 %packets
  %packets20 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %packets20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %spec.select, ptr %packets20, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %skb, ptr %skbaddr, align 4
  %31 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %txq, align 128
  %tobool21.not = icmp eq ptr %32, null
  br i1 %tobool21.not, label %if.end16.cond.end25_crit_edge, label %cond.true22

if.end16.cond.end25_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end25

cond.true22:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %ifindex = getelementptr inbounds %struct.net_device, ptr %32, i32 0, i32 17
  %33 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %ifindex, align 4
  br label %cond.end25

cond.end25:                                       ; preds = %cond.true22, %if.end16.cond.end25_crit_edge
  %cond26 = phi i32 [ %34, %cond.true22 ], [ 0, %if.end16.cond.end25_crit_edge ]
  %ifindex27 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %ifindex27 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %cond26, ptr %ifindex27, align 4
  %handle = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 7
  %36 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %handle, align 32
  %handle28 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call13, i32 0, i32 6
  %38 = ptrtoint ptr %handle28 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %handle28, align 4
  %parent = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 8
  %39 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %parent, align 4
  %parent29 = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call13, i32 0, i32 7
  %41 = ptrtoint ptr %parent29 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %parent29, align 4
  %state = getelementptr inbounds %struct.netdev_queue, ptr %txq, i32 0, i32 13
  %42 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %state, align 4
  %txq_state = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %call13, i32 0, i32 8
  %44 = ptrtoint ptr %txq_state to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %txq_state, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end25, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qdisc_enqueue(ptr noundef %__data, ptr noundef %qdisc, ptr noundef %txq, ptr noundef %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %qdisc6 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %qdisc6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %qdisc, ptr %qdisc6, align 4
  %txq7 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %txq7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %txq, ptr %txq7, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %skb, ptr %skbaddr, align 4
  %6 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %txq, align 128
  %tobool8.not = icmp eq ptr %7, null
  br i1 %tobool8.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %ifindex = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 17
  %8 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ifindex, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %9, %cond.true ], [ 0, %if.end5.cond.end_crit_edge ]
  %ifindex10 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %ifindex10 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %cond, ptr %ifindex10, align 4
  %handle = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 7
  %11 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %handle, align 32
  %handle11 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call3, i32 0, i32 5
  %13 = ptrtoint ptr %handle11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %handle11, align 4
  %parent = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 8
  %14 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %parent, align 4
  %parent12 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call3, i32 0, i32 6
  %16 = ptrtoint ptr %parent12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %parent12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qdisc_enqueue(ptr noundef %__data, ptr noundef %qdisc, ptr noundef %txq, ptr noundef %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %qdisc17 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %qdisc17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %qdisc, ptr %qdisc17, align 4
  %txq18 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %txq18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %txq, ptr %txq18, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %skbaddr to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %skb, ptr %skbaddr, align 4
  %30 = ptrtoint ptr %txq to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %txq, align 128
  %tobool19.not = icmp eq ptr %31, null
  br i1 %tobool19.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %ifindex = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 17
  %32 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %ifindex, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %33, %cond.true ], [ 0, %if.end16.cond.end_crit_edge ]
  %ifindex21 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %ifindex21 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %cond, ptr %ifindex21, align 4
  %handle = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 7
  %35 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %handle, align 32
  %handle22 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call13, i32 0, i32 5
  %37 = ptrtoint ptr %handle22 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %handle22, align 4
  %parent = getelementptr inbounds %struct.Qdisc, ptr %qdisc, i32 0, i32 8
  %38 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %parent, align 4
  %parent23 = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %call13, i32 0, i32 6
  %40 = ptrtoint ptr %parent23 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %parent23, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qdisc_reset(ptr noundef %__data, ptr nocapture noundef readonly %q) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dev_queue.i.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 9
  %3 = ptrtoint ptr %dev_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev_queue.i.i, align 8
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 128
  %tobool.not.i44 = icmp eq ptr %6, null
  %spec.select37.i = select i1 %tobool.not.i44, ptr @.str.68, ptr %6
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select37.i) #11
  %ops.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 4
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 16
  %id.i = getelementptr inbounds %struct.Qdisc_ops, ptr %8, i32 0, i32 2
  %call15.i = tail call i32 @strlen(ptr noundef nonnull %id.i) #11
  %add16.i = add i32 %call15.i, 1
  %add22.i = add i32 %call3.i, 25
  %add = add i32 %add22.i, %add16.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add22.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or21.i, ptr %__data_loc_kind, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %11 = ptrtoint ptr %dev_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev_queue.i.i, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 128
  %tobool8.not = icmp eq ptr %14, null
  %spec.select47 = select i1 %tobool8.not, ptr @.str.68, ptr %14
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select47) #12
  %and12 = and i32 %add22.i, 65535
  %add.ptr13 = getelementptr i8, ptr %call3, i32 %and12
  %15 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops.i, align 16
  %id = getelementptr inbounds %struct.Qdisc_ops, ptr %16, i32 0, i32 2
  %tobool14.not = icmp eq ptr %id, null
  %spec.select = select i1 %tobool14.not, ptr @.str.68, ptr %id
  %call22 = call ptr @strcpy(ptr noundef %add.ptr13, ptr noundef nonnull %spec.select) #12
  %parent = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 8
  %17 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %parent, align 4
  %parent23 = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %call3, i32 0, i32 3
  %19 = ptrtoint ptr %parent23 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %parent23, align 4
  %handle = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 7
  %20 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %handle, align 32
  %handle24 = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %call3, i32 0, i32 4
  %22 = ptrtoint ptr %handle24 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %handle24, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qdisc_reset(ptr noundef %__data, ptr nocapture noundef readonly %q) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %dev_queue.i.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 9
  %2 = ptrtoint ptr %dev_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_queue.i.i, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 128
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select37.i = select i1 %tobool.not.i, ptr @.str.68, ptr %5
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select37.i) #11
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %ops.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 4
  %6 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops.i, align 16
  %id.i = getelementptr inbounds %struct.Qdisc_ops, ptr %7, i32 0, i32 2
  %call15.i = tail call i32 @strlen(ptr noundef nonnull %id.i) #11
  %add16.i = add i32 %call15.i, 1
  %add18.i = add i32 %call3.i, 25
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add18.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %8 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %perf_events, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %10
  %17 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %18 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %19, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %17, align 4
  %tobool.not.i68.not = icmp eq ptr %21, null
  br i1 %tobool.not.i68.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add22.i = add i32 %call3.i, 36
  %add12 = add i32 %add22.i, %add16.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %22 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %__regs, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #8
  %25 = ptrtoint ptr %24 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx.i, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %28 = ptrtoint ptr %27 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  %29 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx2.i, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  %31 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %or21.i, ptr %__data_loc_kind, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %35 = ptrtoint ptr %dev_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev_queue.i.i, align 8
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %36, align 128
  %tobool20.not = icmp eq ptr %38, null
  %spec.select70 = select i1 %tobool20.not, ptr @.str.68, ptr %38
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select70) #12
  %and24 = and i32 %add18.i, 65535
  %add.ptr25 = getelementptr i8, ptr %call13, i32 %and24
  %39 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %ops.i, align 16
  %id = getelementptr inbounds %struct.Qdisc_ops, ptr %40, i32 0, i32 2
  %tobool26.not = icmp eq ptr %id, null
  %spec.select = select i1 %tobool26.not, ptr @.str.68, ptr %id
  %call34 = call ptr @strcpy(ptr noundef %add.ptr25, ptr noundef nonnull %spec.select) #12
  %parent = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 8
  %41 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %parent, align 4
  %parent35 = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %call13, i32 0, i32 3
  %43 = ptrtoint ptr %parent35 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %parent35, align 4
  %handle = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 7
  %44 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %handle, align 32
  %handle36 = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %call13, i32 0, i32 4
  %46 = ptrtoint ptr %handle36 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %handle36, align 4
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %17, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qdisc_destroy(ptr noundef %__data, ptr nocapture noundef readonly %q) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dev_queue.i.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 9
  %3 = ptrtoint ptr %dev_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev_queue.i.i, align 8
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 128
  %tobool.not.i44 = icmp eq ptr %6, null
  %spec.select37.i = select i1 %tobool.not.i44, ptr @.str.68, ptr %6
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select37.i) #11
  %ops.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 4
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 16
  %id.i = getelementptr inbounds %struct.Qdisc_ops, ptr %8, i32 0, i32 2
  %call15.i = tail call i32 @strlen(ptr noundef nonnull %id.i) #11
  %add16.i = add i32 %call15.i, 1
  %add22.i = add i32 %call3.i, 25
  %add = add i32 %add22.i, %add16.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add22.i
  %add.i = shl i32 %call3.i, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or21.i, ptr %__data_loc_kind, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %11 = ptrtoint ptr %dev_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev_queue.i.i, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 128
  %tobool8.not = icmp eq ptr %14, null
  %spec.select47 = select i1 %tobool8.not, ptr @.str.68, ptr %14
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select47) #12
  %and12 = and i32 %add22.i, 65535
  %add.ptr13 = getelementptr i8, ptr %call3, i32 %and12
  %15 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops.i, align 16
  %id = getelementptr inbounds %struct.Qdisc_ops, ptr %16, i32 0, i32 2
  %tobool14.not = icmp eq ptr %id, null
  %spec.select = select i1 %tobool14.not, ptr @.str.68, ptr %id
  %call22 = call ptr @strcpy(ptr noundef %add.ptr13, ptr noundef nonnull %spec.select) #12
  %parent = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 8
  %17 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %parent, align 4
  %parent23 = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %call3, i32 0, i32 3
  %19 = ptrtoint ptr %parent23 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %parent23, align 4
  %handle = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 7
  %20 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %handle, align 32
  %handle24 = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %call3, i32 0, i32 4
  %22 = ptrtoint ptr %handle24 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %handle24, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qdisc_destroy(ptr noundef %__data, ptr nocapture noundef readonly %q) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %dev_queue.i.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 9
  %2 = ptrtoint ptr %dev_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_queue.i.i, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 128
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select37.i = select i1 %tobool.not.i, ptr @.str.68, ptr %5
  %call3.i = tail call i32 @strlen(ptr noundef nonnull %spec.select37.i) #11
  %add.i = shl i32 %call3.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %ops.i = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 4
  %6 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops.i, align 16
  %id.i = getelementptr inbounds %struct.Qdisc_ops, ptr %7, i32 0, i32 2
  %call15.i = tail call i32 @strlen(ptr noundef nonnull %id.i) #11
  %add16.i = add i32 %call15.i, 1
  %add18.i = add i32 %call3.i, 25
  %shl19.i = shl i32 %add16.i, 16
  %or21.i = or i32 %shl19.i, %add18.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %8 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %perf_events, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %10
  %17 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %18 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %19, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %17, align 4
  %tobool.not.i68.not = icmp eq ptr %21, null
  br i1 %tobool.not.i68.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add22.i = add i32 %call3.i, 36
  %add12 = add i32 %add22.i, %add16.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %22 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %__regs, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #8
  %25 = ptrtoint ptr %24 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx.i, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %28 = ptrtoint ptr %27 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  %29 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx2.i, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  %31 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %or21.i, ptr %__data_loc_kind, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %35 = ptrtoint ptr %dev_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev_queue.i.i, align 8
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %36, align 128
  %tobool20.not = icmp eq ptr %38, null
  %spec.select70 = select i1 %tobool20.not, ptr @.str.68, ptr %38
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select70) #12
  %and24 = and i32 %add18.i, 65535
  %add.ptr25 = getelementptr i8, ptr %call13, i32 %and24
  %39 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %ops.i, align 16
  %id = getelementptr inbounds %struct.Qdisc_ops, ptr %40, i32 0, i32 2
  %tobool26.not = icmp eq ptr %id, null
  %spec.select = select i1 %tobool26.not, ptr @.str.68, ptr %id
  %call34 = call ptr @strcpy(ptr noundef %add.ptr25, ptr noundef nonnull %spec.select) #12
  %parent = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 8
  %41 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %parent, align 4
  %parent35 = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %call13, i32 0, i32 3
  %43 = ptrtoint ptr %parent35 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %parent35, align 4
  %handle = getelementptr inbounds %struct.Qdisc, ptr %q, i32 0, i32 7
  %44 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %handle, align 32
  %handle36 = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %call13, i32 0, i32 4
  %46 = ptrtoint ptr %handle36 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %handle36, align 4
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %17, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_qdisc_create(ptr noundef %__data, ptr noundef readonly %ops, ptr noundef readonly %dev, i32 noundef %parent) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i42 = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i42, ptr @.str.68, ptr %dev
  %call.i43 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %id.i = getelementptr inbounds %struct.Qdisc_ops, ptr %ops, i32 0, i32 2
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %id.i) #11
  %add17.i = add i32 %call16.i, 1
  %add23.i = add i32 %call.i43, 21
  %add = add i32 %add23.i, %add17.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add23.i
  %add.i = shl i32 %call.i43, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or22.i, ptr %__data_loc_kind, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %and13 = and i32 %add23.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %tobool16.not = icmp eq ptr %id.i, null
  %cond22 = select i1 %tobool16.not, ptr @.str.68, ptr %id.i
  %call23 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond22) #12
  %parent24 = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %parent24 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %parent, ptr %parent24, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_qdisc_create(ptr noundef %__data, ptr noundef readonly %ops, ptr noundef readonly %dev, i32 noundef %parent) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %tobool.not.i = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %dev
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %id.i = getelementptr inbounds %struct.Qdisc_ops, ptr %ops, i32 0, i32 2
  %call16.i = tail call i32 @strlen(ptr noundef nonnull %id.i) #11
  %add17.i = add i32 %call16.i, 1
  %add19.i = add i32 %call.i, 21
  %shl20.i = shl i32 %add17.i, 16
  %or22.i = or i32 %shl20.i, %add19.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i66.not = icmp eq ptr %15, null
  br i1 %tobool.not.i66.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add23.i = add i32 %call.i, 32
  %add12 = add i32 %add23.i, %add17.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %or22.i, ptr %__data_loc_kind, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %and25 = and i32 %add19.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %tobool28.not = icmp eq ptr %id.i, null
  %cond34 = select i1 %tobool28.not, ptr @.str.68, ptr %id.i
  %call35 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond34) #12
  %parent36 = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %parent36 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %parent, ptr %parent36, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qdisc_dequeue(ptr noundef %__data, ptr noundef %qdisc, ptr noundef %txq, i32 noundef %packets, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %qdisc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %txq to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %packets to i64
  %2 = ptrtoint ptr %skb to i32
  %conv12 = zext i32 %2 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qdisc_enqueue(ptr noundef %__data, ptr noundef %qdisc, ptr noundef %txq, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %qdisc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %txq to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %skb to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qdisc_reset(ptr noundef %__data, ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %q to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qdisc_destroy(ptr noundef %__data, ptr noundef %q) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %q to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_qdisc_create(ptr noundef %__data, ptr noundef %ops, ptr noundef %dev, i32 noundef %parent) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %ops to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %dev to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %parent to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_br_fdb_add(ptr nocapture readnone %__data, ptr noundef %ndm, ptr noundef %dev, ptr noundef %addr, i16 noundef zeroext %vid, i16 noundef zeroext %nlh_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_br_fdb_add, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ndm, ptr noundef %dev, ptr noundef %addr, i16 noundef zeroext %vid, i16 noundef zeroext %nlh_flags) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_br_fdb_external_learn_add(ptr nocapture readnone %__data, ptr noundef %br, ptr noundef %p, ptr noundef %addr, i16 noundef zeroext %vid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_br_fdb_external_learn_add, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %br, ptr noundef %p, ptr noundef %addr, i16 noundef zeroext %vid) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_fdb_delete(ptr nocapture readnone %__data, ptr noundef %br, ptr noundef %f) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_fdb_delete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %br, ptr noundef %f) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_br_fdb_update(ptr nocapture readnone %__data, ptr noundef %br, ptr noundef %source, ptr noundef %addr, i16 noundef zeroext %vid, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_br_fdb_update, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %br, ptr noundef %source, ptr noundef %addr, i16 noundef zeroext %vid, i32 noundef %flags) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_br_fdb_add(ptr noundef %__data, ptr nocapture noundef readonly %ndm, ptr noundef readonly %dev, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid, i16 noundef zeroext %nlh_flags) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i35 = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i35, ptr @.str.68, ptr %dev
  %call.i36 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add = add i32 %call.i36, 29
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %add.i = shl i32 %call.i36, 16
  %or.i = add i32 %add.i, 65562
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 26
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %addr12 = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call3, i32 0, i32 3
  %4 = call ptr @memcpy(ptr %addr12, ptr %addr, i32 6)
  %vid14 = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call3, i32 0, i32 4
  %5 = ptrtoint ptr %vid14 to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %vid, ptr %vid14, align 2
  %nlh_flags15 = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call3, i32 0, i32 5
  %6 = ptrtoint ptr %nlh_flags15 to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %nlh_flags, ptr %nlh_flags15, align 4
  %ndm_flags = getelementptr inbounds %struct.ndmsg, ptr %ndm, i32 0, i32 5
  %7 = ptrtoint ptr %ndm_flags to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %ndm_flags, align 2
  %ndm_flags16 = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %ndm_flags16 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %ndm_flags16, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_br_fdb_add(ptr noundef %__data, ptr nocapture noundef readonly %ndm, ptr noundef readonly %dev, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid, i16 noundef zeroext %nlh_flags) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %tobool.not.i = icmp eq ptr %dev, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %dev
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65562
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i59.not = icmp eq ptr %15, null
  br i1 %tobool.not.i59.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 40
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call13, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 26
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #12
  %addr24 = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call13, i32 0, i32 3
  %28 = call ptr @memcpy(ptr %addr24, ptr %addr, i32 6)
  %vid26 = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call13, i32 0, i32 4
  %29 = ptrtoint ptr %vid26 to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %vid, ptr %vid26, align 2
  %nlh_flags27 = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call13, i32 0, i32 5
  %30 = ptrtoint ptr %nlh_flags27 to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %nlh_flags, ptr %nlh_flags27, align 4
  %ndm_flags = getelementptr inbounds %struct.ndmsg, ptr %ndm, i32 0, i32 5
  %31 = ptrtoint ptr %ndm_flags to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %ndm_flags, align 2
  %ndm_flags28 = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %ndm_flags28 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %32, ptr %ndm_flags28, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_br_fdb_external_learn_add(ptr noundef %__data, ptr nocapture noundef readonly %br, ptr noundef readonly %p, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dev.i = getelementptr inbounds %struct.net_bridge, ptr %br, i32 0, i32 3
  %3 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev.i, align 4
  %tobool.not.i60 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i60, ptr @.str.68, ptr %4
  %call.i61 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i61, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %tobool8.not.i = icmp eq ptr %p, null
  br i1 %tobool8.not.i, label %if.end.trace_event_get_offsets_br_fdb_external_learn_add.exit_crit_edge, label %cond.true9.i

if.end.trace_event_get_offsets_br_fdb_external_learn_add.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %trace_event_get_offsets_br_fdb_external_learn_add.exit

cond.true9.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %dev10.i = getelementptr inbounds %struct.net_bridge_port, ptr %p, i32 0, i32 1
  %5 = ptrtoint ptr %dev10.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev10.i, align 4
  %tobool13.not.i = icmp eq ptr %6, null
  %spec.select1.i = select i1 %tobool13.not.i, ptr @.str.68, ptr %6
  br label %trace_event_get_offsets_br_fdb_external_learn_add.exit

trace_event_get_offsets_br_fdb_external_learn_add.exit: ; preds = %cond.true9.i, %if.end.trace_event_get_offsets_br_fdb_external_learn_add.exit_crit_edge
  %cond26.i = phi ptr [ @.str.210, %if.end.trace_event_get_offsets_br_fdb_external_learn_add.exit_crit_edge ], [ %spec.select1.i, %cond.true9.i ]
  %call27.i = tail call i32 @strlen(ptr noundef nonnull %cond26.i) #11
  %add28.i = add i32 %call27.i, 1
  %add35.i = add i32 %call.i61, 25
  %add = add i32 %add35.i, %add28.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_br_fdb_external_learn_add.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_br_fdb_external_learn_add.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_br_fdb_external_learn_add.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_br_fdb_external_learn_add.exit
  %shl32.i = shl i32 %add28.i, 16
  %or34.i = or i32 %shl32.i, %add35.i
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_br_dev, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or34.i, ptr %__data_loc_dev, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %9 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev.i, align 4
  %tobool8.not = icmp eq ptr %10, null
  %spec.select = select i1 %tobool8.not, ptr @.str.68, ptr %10
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %and14 = and i32 %add35.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  br i1 %tobool8.not.i, label %if.end5.cond.end33_crit_edge, label %cond.true17

if.end5.cond.end33_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end33

cond.true17:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %dev18 = getelementptr inbounds %struct.net_bridge_port, ptr %p, i32 0, i32 1
  %11 = ptrtoint ptr %dev18 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev18, align 4
  %tobool21.not = icmp eq ptr %12, null
  %spec.select63 = select i1 %tobool21.not, ptr @.str.68, ptr %12
  br label %cond.end33

cond.end33:                                       ; preds = %cond.true17, %if.end5.cond.end33_crit_edge
  %cond34 = phi ptr [ @.str.210, %if.end5.cond.end33_crit_edge ], [ %spec.select63, %cond.true17 ]
  %call35 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %cond34) #12
  %addr36 = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %call3, i32 0, i32 3
  %13 = call ptr @memcpy(ptr %addr36, ptr %addr, i32 6)
  %vid38 = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %vid38 to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %vid, ptr %vid38, align 2
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end33, %trace_event_get_offsets_br_fdb_external_learn_add.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_br_fdb_external_learn_add(ptr noundef %__data, ptr nocapture noundef readonly %br, ptr noundef readonly %p, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %dev.i = getelementptr inbounds %struct.net_bridge, ptr %br, i32 0, i32 3
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %tobool8.not.i = icmp eq ptr %p, null
  br i1 %tobool8.not.i, label %entry.trace_event_get_offsets_br_fdb_external_learn_add.exit_crit_edge, label %cond.true9.i

entry.trace_event_get_offsets_br_fdb_external_learn_add.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %trace_event_get_offsets_br_fdb_external_learn_add.exit

cond.true9.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %dev10.i = getelementptr inbounds %struct.net_bridge_port, ptr %p, i32 0, i32 1
  %4 = ptrtoint ptr %dev10.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev10.i, align 4
  %tobool13.not.i = icmp eq ptr %5, null
  %spec.select1.i = select i1 %tobool13.not.i, ptr @.str.68, ptr %5
  br label %trace_event_get_offsets_br_fdb_external_learn_add.exit

trace_event_get_offsets_br_fdb_external_learn_add.exit: ; preds = %cond.true9.i, %entry.trace_event_get_offsets_br_fdb_external_learn_add.exit_crit_edge
  %cond26.i = phi ptr [ @.str.210, %entry.trace_event_get_offsets_br_fdb_external_learn_add.exit_crit_edge ], [ %spec.select1.i, %cond.true9.i ]
  %call27.i = tail call i32 @strlen(ptr noundef nonnull %cond26.i) #11
  %add28.i = add i32 %call27.i, 1
  %add30.i = add i32 %call.i, 25
  %shl32.i = shl i32 %add28.i, 16
  %or34.i = or i32 %shl32.i, %add30.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_br_fdb_external_learn_add.exit.if.end_crit_edge

trace_event_get_offsets_br_fdb_external_learn_add.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_br_fdb_external_learn_add.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_br_fdb_external_learn_add.exit
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i84.not = icmp eq ptr %19, null
  br i1 %tobool.not.i84.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_br_fdb_external_learn_add.exit.if.end_crit_edge
  %add35.i = add i32 %call.i, 36
  %add12 = add i32 %add35.i, %add28.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #8
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_br_dev, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or34.i, ptr %__data_loc_dev, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %33 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev.i, align 4
  %tobool20.not = icmp eq ptr %34, null
  %spec.select = select i1 %tobool20.not, ptr @.str.68, ptr %34
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %and26 = and i32 %add30.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  br i1 %tobool8.not.i, label %if.end16.cond.end45_crit_edge, label %cond.true29

if.end16.cond.end45_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end45

cond.true29:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %dev30 = getelementptr inbounds %struct.net_bridge_port, ptr %p, i32 0, i32 1
  %35 = ptrtoint ptr %dev30 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev30, align 4
  %tobool33.not = icmp eq ptr %36, null
  %spec.select85 = select i1 %tobool33.not, ptr @.str.68, ptr %36
  br label %cond.end45

cond.end45:                                       ; preds = %cond.true29, %if.end16.cond.end45_crit_edge
  %cond46 = phi ptr [ @.str.210, %if.end16.cond.end45_crit_edge ], [ %spec.select85, %cond.true29 ]
  %call47 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond46) #12
  %addr48 = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %call13, i32 0, i32 3
  %37 = call ptr @memcpy(ptr %addr48, ptr %addr, i32 6)
  %vid50 = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %vid50 to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %vid, ptr %vid50, align 2
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %15, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end45, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_fdb_delete(ptr noundef %__data, ptr nocapture noundef readonly %br, ptr nocapture noundef readonly %f) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dev.i = getelementptr inbounds %struct.net_bridge, ptr %br, i32 0, i32 3
  %3 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev.i, align 4
  %tobool.not.i67 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i67, ptr @.str.68, ptr %4
  %call.i68 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i68, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %dst.i = getelementptr inbounds %struct.net_bridge_fdb_entry, ptr %f, i32 0, i32 1
  %5 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dst.i, align 4
  %tobool8.not.i = icmp eq ptr %6, null
  br i1 %tobool8.not.i, label %if.end.trace_event_get_offsets_fdb_delete.exit_crit_edge, label %cond.true9.i

if.end.trace_event_get_offsets_fdb_delete.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %trace_event_get_offsets_fdb_delete.exit

cond.true9.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %dev11.i = getelementptr inbounds %struct.net_bridge_port, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %dev11.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev11.i, align 4
  %tobool14.not.i = icmp eq ptr %8, null
  %spec.select70 = select i1 %tobool14.not.i, ptr @.str.68, ptr %8
  br label %trace_event_get_offsets_fdb_delete.exit

trace_event_get_offsets_fdb_delete.exit:          ; preds = %cond.true9.i, %if.end.trace_event_get_offsets_fdb_delete.exit_crit_edge
  %cond29.i = phi ptr [ @.str.210, %if.end.trace_event_get_offsets_fdb_delete.exit_crit_edge ], [ %spec.select70, %cond.true9.i ]
  %call30.i = tail call i32 @strlen(ptr noundef nonnull %cond29.i) #11
  %add31.i = add i32 %call30.i, 1
  %add38.i = add i32 %call.i68, 25
  %add = add i32 %add38.i, %add31.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_fdb_delete.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_fdb_delete.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_fdb_delete.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_fdb_delete.exit
  %shl35.i = shl i32 %add31.i, 16
  %or37.i = or i32 %shl35.i, %add38.i
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or.i, ptr %__data_loc_br_dev, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or37.i, ptr %__data_loc_dev, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %11 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev.i, align 4
  %tobool8.not = icmp eq ptr %12, null
  %spec.select = select i1 %tobool8.not, ptr @.str.68, ptr %12
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %and14 = and i32 %add38.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %13 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dst.i, align 4
  %tobool16.not = icmp eq ptr %14, null
  br i1 %tobool16.not, label %if.end5.cond.end36_crit_edge, label %cond.true17

if.end5.cond.end36_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end36

cond.true17:                                      ; preds = %if.end5
  %dev19 = getelementptr inbounds %struct.net_bridge_port, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %dev19 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev19, align 4
  %tobool22.not = icmp eq ptr %16, null
  br i1 %tobool22.not, label %cond.true17.cond.end36_crit_edge, label %cond.true27

cond.true17.cond.end36_crit_edge:                 ; preds = %cond.true17
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end36

cond.true27:                                      ; preds = %cond.true17
  call void @__sanitizer_cov_trace_pc() #10
  %17 = ptrtoint ptr %dev19 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev19, align 4
  br label %cond.end36

cond.end36:                                       ; preds = %cond.true27, %cond.true17.cond.end36_crit_edge, %if.end5.cond.end36_crit_edge
  %cond37 = phi ptr [ %18, %cond.true27 ], [ @.str.68, %cond.true17.cond.end36_crit_edge ], [ @.str.210, %if.end5.cond.end36_crit_edge ]
  %call38 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef %cond37) #12
  %addr = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %call3, i32 0, i32 3
  %key = getelementptr inbounds %struct.net_bridge_fdb_entry, ptr %f, i32 0, i32 2
  %19 = call ptr @memcpy(ptr %addr, ptr %key, i32 6)
  %vlan_id = getelementptr inbounds %struct.net_bridge_fdb_entry, ptr %f, i32 0, i32 2, i32 1
  %20 = ptrtoint ptr %vlan_id to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vlan_id, align 2
  %vid = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %call3, i32 0, i32 4
  %22 = ptrtoint ptr %vid to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %21, ptr %vid, align 2
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end36, %trace_event_get_offsets_fdb_delete.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_fdb_delete(ptr noundef %__data, ptr nocapture noundef readonly %br, ptr nocapture noundef readonly %f) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %dev.i = getelementptr inbounds %struct.net_bridge, ptr %br, i32 0, i32 3
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 24
  %dst.i = getelementptr inbounds %struct.net_bridge_fdb_entry, ptr %f, i32 0, i32 1
  %4 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dst.i, align 4
  %tobool8.not.i = icmp eq ptr %5, null
  br i1 %tobool8.not.i, label %entry.trace_event_get_offsets_fdb_delete.exit_crit_edge, label %cond.true9.i

entry.trace_event_get_offsets_fdb_delete.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %trace_event_get_offsets_fdb_delete.exit

cond.true9.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %dev11.i = getelementptr inbounds %struct.net_bridge_port, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %dev11.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev11.i, align 4
  %tobool14.not.i = icmp eq ptr %7, null
  %spec.select92 = select i1 %tobool14.not.i, ptr @.str.68, ptr %7
  br label %trace_event_get_offsets_fdb_delete.exit

trace_event_get_offsets_fdb_delete.exit:          ; preds = %cond.true9.i, %entry.trace_event_get_offsets_fdb_delete.exit_crit_edge
  %cond29.i = phi ptr [ @.str.210, %entry.trace_event_get_offsets_fdb_delete.exit_crit_edge ], [ %spec.select92, %cond.true9.i ]
  %call30.i = tail call i32 @strlen(ptr noundef nonnull %cond29.i) #11
  %add31.i = add i32 %call30.i, 1
  %add33.i = add i32 %call.i, 25
  %shl35.i = shl i32 %add31.i, 16
  %or37.i = or i32 %shl35.i, %add33.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %8 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %perf_events, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add = add i32 %16, %10
  %17 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %18 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %19, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_fdb_delete.exit.if.end_crit_edge

trace_event_get_offsets_fdb_delete.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_fdb_delete.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_fdb_delete.exit
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %17, align 4
  %tobool.not.i91.not = icmp eq ptr %21, null
  br i1 %tobool.not.i91.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_fdb_delete.exit.if.end_crit_edge
  %add38.i = add i32 %call.i, 36
  %add12 = add i32 %add38.i, %add31.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %22 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %__regs, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #8
  %25 = ptrtoint ptr %24 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %arrayidx.i, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %28 = ptrtoint ptr %27 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  %29 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx2.i, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  %31 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %or.i, ptr %__data_loc_br_dev, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %or37.i, ptr %__data_loc_dev, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %35 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev.i, align 4
  %tobool20.not = icmp eq ptr %36, null
  %spec.select = select i1 %tobool20.not, ptr @.str.68, ptr %36
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %and26 = and i32 %add33.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %37 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dst.i, align 4
  %tobool28.not = icmp eq ptr %38, null
  br i1 %tobool28.not, label %if.end16.cond.end48_crit_edge, label %cond.true29

if.end16.cond.end48_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end48

cond.true29:                                      ; preds = %if.end16
  %dev31 = getelementptr inbounds %struct.net_bridge_port, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %dev31 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev31, align 4
  %tobool34.not = icmp eq ptr %40, null
  br i1 %tobool34.not, label %cond.true29.cond.end48_crit_edge, label %cond.true39

cond.true29.cond.end48_crit_edge:                 ; preds = %cond.true29
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end48

cond.true39:                                      ; preds = %cond.true29
  call void @__sanitizer_cov_trace_pc() #10
  %41 = ptrtoint ptr %dev31 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %dev31, align 4
  br label %cond.end48

cond.end48:                                       ; preds = %cond.true39, %cond.true29.cond.end48_crit_edge, %if.end16.cond.end48_crit_edge
  %cond49 = phi ptr [ %42, %cond.true39 ], [ @.str.68, %cond.true29.cond.end48_crit_edge ], [ @.str.210, %if.end16.cond.end48_crit_edge ]
  %call50 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef %cond49) #12
  %addr = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %call13, i32 0, i32 3
  %key = getelementptr inbounds %struct.net_bridge_fdb_entry, ptr %f, i32 0, i32 2
  %43 = call ptr @memcpy(ptr %addr, ptr %key, i32 6)
  %vlan_id = getelementptr inbounds %struct.net_bridge_fdb_entry, ptr %f, i32 0, i32 2, i32 1
  %44 = ptrtoint ptr %vlan_id to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %vlan_id, align 2
  %vid = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %call13, i32 0, i32 4
  %46 = ptrtoint ptr %vid to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %45, ptr %vid, align 2
  %47 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rctx, align 4
  %49 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %48, ptr noundef %__data, i64 noundef 1, ptr noundef %50, ptr noundef %17, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %cond.end48, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_br_fdb_update(ptr noundef %__data, ptr nocapture noundef readonly %br, ptr nocapture noundef readonly %source, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid, i32 noundef %flags) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dev.i = getelementptr inbounds %struct.net_bridge, ptr %br, i32 0, i32 3
  %3 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev.i, align 4
  %tobool.not.i54 = icmp eq ptr %4, null
  %spec.select.i = select i1 %tobool.not.i54, ptr @.str.68, ptr %4
  %call.i55 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %dev8.i = getelementptr inbounds %struct.net_bridge_port, ptr %source, i32 0, i32 1
  %5 = ptrtoint ptr %dev8.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev8.i, align 4
  %tobool11.not.i = icmp eq ptr %6, null
  %cond18.i = select i1 %tobool11.not.i, ptr @.str.68, ptr %6
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %cond18.i) #11
  %add20.i = add i32 %call19.i, 1
  %add27.i = add i32 %call.i55, 29
  %add = add i32 %add27.i, %add20.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %shl24.i = shl i32 %add20.i, 16
  %or26.i = or i32 %shl24.i, %add27.i
  %add.i = shl i32 %call.i55, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_br_dev, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or26.i, ptr %__data_loc_dev, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %9 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev.i, align 4
  %tobool8.not = icmp eq ptr %10, null
  %spec.select = select i1 %tobool8.not, ptr @.str.68, ptr %10
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %and14 = and i32 %add27.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %11 = ptrtoint ptr %dev8.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev8.i, align 4
  %tobool19.not = icmp eq ptr %12, null
  %cond26 = select i1 %tobool19.not, ptr @.str.68, ptr %12
  %call27 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %cond26) #12
  %addr28 = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call3, i32 0, i32 3
  %13 = call ptr @memcpy(ptr %addr28, ptr %addr, i32 6)
  %vid30 = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %vid30 to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %vid, ptr %vid30, align 2
  %flags31 = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call3, i32 0, i32 5
  %15 = ptrtoint ptr %flags31 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %flags, ptr %flags31, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_br_fdb_update(ptr noundef %__data, ptr nocapture noundef readonly %br, ptr nocapture noundef readonly %source, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid, i32 noundef %flags) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %dev.i = getelementptr inbounds %struct.net_bridge, ptr %br, i32 0, i32 3
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.68, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #11
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 28
  %dev8.i = getelementptr inbounds %struct.net_bridge_port, ptr %source, i32 0, i32 1
  %4 = ptrtoint ptr %dev8.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev8.i, align 4
  %tobool11.not.i = icmp eq ptr %5, null
  %cond18.i = select i1 %tobool11.not.i, ptr @.str.68, ptr %5
  %call19.i = tail call i32 @strlen(ptr noundef nonnull %cond18.i) #11
  %add20.i = add i32 %call19.i, 1
  %add22.i = add i32 %call.i, 29
  %shl24.i = shl i32 %add20.i, 16
  %or26.i = or i32 %shl24.i, %add22.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i78.not = icmp eq ptr %19, null
  br i1 %tobool.not.i78.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add27.i = add i32 %call.i, 40
  %add12 = add i32 %add27.i, %add20.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #8
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_br_dev, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or26.i, ptr %__data_loc_dev, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %33 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev.i, align 4
  %tobool20.not = icmp eq ptr %34, null
  %spec.select = select i1 %tobool20.not, ptr @.str.68, ptr %34
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #12
  %and26 = and i32 %add22.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %35 = ptrtoint ptr %dev8.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev8.i, align 4
  %tobool31.not = icmp eq ptr %36, null
  %cond38 = select i1 %tobool31.not, ptr @.str.68, ptr %36
  %call39 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond38) #12
  %addr40 = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call13, i32 0, i32 3
  %37 = call ptr @memcpy(ptr %addr40, ptr %addr, i32 6)
  %vid42 = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %vid42 to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %vid, ptr %vid42, align 2
  %flags43 = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %call13, i32 0, i32 5
  %39 = ptrtoint ptr %flags43 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %flags, ptr %flags43, align 4
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %15, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_br_fdb_add(ptr noundef %__data, ptr noundef %ndm, ptr noundef %dev, ptr noundef %addr, i16 noundef zeroext %vid, i16 noundef zeroext %nlh_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %ndm to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %dev to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %addr to i32
  %conv8 = zext i32 %2 to i64
  %conv12 = zext i16 %vid to i64
  %conv16 = zext i16 %nlh_flags to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_br_fdb_external_learn_add(ptr noundef %__data, ptr noundef %br, ptr noundef %p, ptr noundef %addr, i16 noundef zeroext %vid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %br to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %p to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %addr to i32
  %conv8 = zext i32 %2 to i64
  %conv12 = zext i16 %vid to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_fdb_delete(ptr noundef %__data, ptr noundef %br, ptr noundef %f) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %br to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %f to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_br_fdb_update(ptr noundef %__data, ptr noundef %br, ptr noundef %source, ptr noundef %addr, i16 noundef zeroext %vid, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %br to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %source to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %addr to i32
  %conv8 = zext i32 %2 to i64
  %conv12 = zext i16 %vid to i64
  %conv16 = zext i32 %flags to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_page_pool_release(ptr nocapture readnone %__data, ptr noundef %pool, i32 noundef %inflight, i32 noundef %hold, i32 noundef %release) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_page_pool_release, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %pool, i32 noundef %inflight, i32 noundef %hold, i32 noundef %release) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_page_pool_state_release(ptr nocapture readnone %__data, ptr noundef %pool, ptr noundef %page, i32 noundef %release) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_page_pool_state_release, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %pool, ptr noundef %page, i32 noundef %release) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_page_pool_state_hold(ptr nocapture readnone %__data, ptr noundef %pool, ptr noundef %page, i32 noundef %hold) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_page_pool_state_hold, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %pool, ptr noundef %page, i32 noundef %hold) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_page_pool_update_nid(ptr nocapture readnone %__data, ptr noundef %pool, i32 noundef %new_nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_page_pool_update_nid, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %pool, i32 noundef %new_nid) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_page_pool_release(ptr noundef %__data, ptr noundef %pool, i32 noundef %inflight, i32 noundef %hold, i32 noundef %release) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %pool6 = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %pool6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %pool, ptr %pool6, align 8
  %inflight7 = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %inflight7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %inflight, ptr %inflight7, align 4
  %hold8 = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %hold8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %hold, ptr %hold8, align 8
  %release9 = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %release9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %release, ptr %release9, align 4
  %destroy_cnt = getelementptr inbounds %struct.page_pool, ptr %pool, i32 0, i32 16
  %7 = ptrtoint ptr %destroy_cnt to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %destroy_cnt, align 8
  %cnt = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call3, i32 0, i32 5
  %9 = ptrtoint ptr %cnt to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %cnt, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_page_pool_release(ptr noundef %__data, ptr noundef %pool, i32 noundef %inflight, i32 noundef %hold, i32 noundef %release) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %pool17 = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %pool17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %pool, ptr %pool17, align 8
  %inflight18 = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %inflight18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %inflight, ptr %inflight18, align 4
  %hold19 = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %hold19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %hold, ptr %hold19, align 8
  %release20 = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %release20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %release, ptr %release20, align 4
  %destroy_cnt = getelementptr inbounds %struct.page_pool, ptr %pool, i32 0, i32 16
  %31 = ptrtoint ptr %destroy_cnt to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %destroy_cnt, align 8
  %cnt = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %call13, i32 0, i32 5
  %33 = ptrtoint ptr %cnt to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %cnt, align 8
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_page_pool_state_release(ptr noundef %__data, ptr noundef %pool, ptr noundef %page, i32 noundef %release) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %pool6 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %pool6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %pool, ptr %pool6, align 4
  %page7 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %page7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %page, ptr %page7, align 4
  %release8 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %release8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %release, ptr %release8, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %6 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %6 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %7 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add9 = add i32 %sub.ptr.div, %7
  %pfn = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %add9, ptr %pfn, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_page_pool_state_release(ptr noundef %__data, ptr noundef %pool, ptr noundef %page, i32 noundef %release) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %pool17 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %pool17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %pool, ptr %pool17, align 4
  %page18 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %page18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %page, ptr %page18, align 4
  %release19 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %release19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %release, ptr %release19, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %30 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %30 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %31 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add20 = add i32 %sub.ptr.div, %31
  %pfn = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %add20, ptr %pfn, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_page_pool_state_hold(ptr noundef %__data, ptr noundef %pool, ptr noundef %page, i32 noundef %hold) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %pool6 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %pool6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %pool, ptr %pool6, align 4
  %page7 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %page7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %page, ptr %page7, align 4
  %hold8 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %hold8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %hold, ptr %hold8, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %6 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %6 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %7 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add9 = add i32 %sub.ptr.div, %7
  %pfn = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %add9, ptr %pfn, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_page_pool_state_hold(ptr noundef %__data, ptr noundef %pool, ptr noundef %page, i32 noundef %hold) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %pool17 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %pool17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %pool, ptr %pool17, align 4
  %page18 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %page18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %page, ptr %page18, align 4
  %hold19 = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %hold19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %hold, ptr %hold19, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %30 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %page to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %30 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %31 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add20 = add i32 %sub.ptr.div, %31
  %pfn = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %pfn to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %add20, ptr %pfn, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_page_pool_update_nid(ptr noundef %__data, ptr noundef %pool, i32 noundef %new_nid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %pool6 = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %pool6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %pool, ptr %pool6, align 4
  %nid = getelementptr inbounds %struct.page_pool_params, ptr %pool, i32 0, i32 3
  %4 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nid, align 4
  %pool_nid = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %pool_nid to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %pool_nid, align 4
  %new_nid7 = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %new_nid7 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %new_nid, ptr %new_nid7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_page_pool_update_nid(ptr noundef %__data, ptr noundef %pool, i32 noundef %new_nid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %pool17 = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %pool17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %pool, ptr %pool17, align 4
  %nid = getelementptr inbounds %struct.page_pool_params, ptr %pool, i32 0, i32 3
  %28 = ptrtoint ptr %nid to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nid, align 4
  %pool_nid = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %pool_nid to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %pool_nid, align 4
  %new_nid18 = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %new_nid18 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %new_nid, ptr %new_nid18, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_page_pool_release(ptr noundef %__data, ptr noundef %pool, i32 noundef %inflight, i32 noundef %hold, i32 noundef %release) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %pool to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %inflight to i64
  %conv8 = zext i32 %hold to i64
  %conv12 = zext i32 %release to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_page_pool_state_release(ptr noundef %__data, ptr noundef %pool, ptr noundef %page, i32 noundef %release) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %pool to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %page to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %release to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_page_pool_state_hold(ptr noundef %__data, ptr noundef %pool, ptr noundef %page, i32 noundef %hold) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %pool to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %page to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %hold to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_page_pool_update_nid(ptr noundef %__data, ptr noundef %pool, i32 noundef %new_nid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %pool to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %new_nid to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_neigh_create(ptr nocapture readnone %__data, ptr noundef %tbl, ptr noundef %dev, ptr noundef %pkey, ptr noundef %n, i1 noundef zeroext %exempt_from_gc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_neigh_create, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %tbl, ptr noundef %dev, ptr noundef %pkey, ptr noundef %n, i1 noundef zeroext %exempt_from_gc) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_neigh_update(ptr nocapture readnone %__data, ptr noundef %n, ptr noundef %lladdr, i8 noundef zeroext %new, i32 noundef %flags, i32 noundef %nlmsg_pid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_neigh_update, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %n, ptr noundef %lladdr, i8 noundef zeroext %new, i32 noundef %flags, i32 noundef %nlmsg_pid) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_neigh_update_done(ptr nocapture readnone %__data, ptr noundef %neigh, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_neigh_update_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %neigh, i32 noundef %err) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_neigh_timer_handler(ptr nocapture readnone %__data, ptr noundef %neigh, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_neigh_timer_handler, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %neigh, i32 noundef %err) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_neigh_event_send_done(ptr nocapture readnone %__data, ptr noundef %neigh, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_neigh_event_send_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %neigh, i32 noundef %err) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_neigh_event_send_dead(ptr nocapture readnone %__data, ptr noundef %neigh, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_neigh_event_send_dead, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %neigh, i32 noundef %err) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_neigh_cleanup_and_release(ptr nocapture readnone %__data, ptr noundef %neigh, i32 noundef %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_neigh_cleanup_and_release, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %neigh, i32 noundef %rc) #8
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_neigh_create(ptr noundef %__data, ptr noundef %tbl, ptr noundef readonly %dev, ptr nocapture noundef readonly %pkey, ptr noundef readnone %n, i1 noundef zeroext %exempt_from_gc) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  %frombool = zext i1 %exempt_from_gc to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 60) #8
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call3, i32 0, i32 2
  %3 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1048618, ptr %__data_loc_dev, align 4
  %4 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tbl, align 4
  %family8 = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %family8 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %family8, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 42
  %tobool10.not = icmp eq ptr %dev, null
  %cond20 = select i1 %tobool10.not, ptr @.str.232, ptr %dev
  %call21 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %cond20) #12
  %gc_entries = getelementptr inbounds %struct.neigh_table, ptr %tbl, i32 0, i32 25
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %gc_entries, i32 noundef 4) #8
  %7 = ptrtoint ptr %gc_entries to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %gc_entries, align 4
  %entries = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %entries to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %entries, align 4
  %cmp = icmp ne ptr %n, null
  %conv23 = zext i1 %cmp to i8
  %created = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %created to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %conv23, ptr %created, align 4
  %gc_exempt = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %gc_exempt to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %frombool, ptr %gc_exempt, align 1
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call3, i32 0, i32 7
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %tbl, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %13)
  %cmp29 = icmp eq i32 %13, 2
  br i1 %cmp29, label %if.then31, label %if.end6.if.end32_crit_edge

if.end6.if.end32_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end32

if.then31:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #10
  %14 = ptrtoint ptr %pkey to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pkey, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end6.if.end32_crit_edge
  %storemerge = phi i32 [ %15, %if.then31 ], [ 0, %if.end6.if.end32_crit_edge ]
  %16 = ptrtoint ptr %primary_key4 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %storemerge, ptr %primary_key4, align 4
  %17 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %tbl, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %18)
  %cmp34 = icmp eq i32 %18, 10
  br i1 %cmp34, label %if.then36, label %if.end32.if.end39_crit_edge

if.end32.if.end39_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end39

if.then36:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #10
  %19 = call ptr @memcpy(ptr %primary_key6, ptr %pkey, i32 16)
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.end32.if.end39_crit_edge
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_neigh_create(ptr noundef %__data, ptr noundef %tbl, ptr noundef readonly %dev, ptr nocapture noundef readonly %pkey, ptr noundef readnone %n, i1 noundef zeroext %exempt_from_gc) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  %frombool = zext i1 %exempt_from_gc to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end17:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #8
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call14, i32 0, i32 2
  %27 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 1048618, ptr %__data_loc_dev, align 4
  %28 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %tbl, align 4
  %family19 = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call14, i32 0, i32 1
  %30 = ptrtoint ptr %family19 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %family19, align 4
  %add.ptr = getelementptr i8, ptr %call14, i32 42
  %tobool22.not = icmp eq ptr %dev, null
  %cond32 = select i1 %tobool22.not, ptr @.str.232, ptr %dev
  %call33 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %cond32) #12
  %gc_entries = getelementptr inbounds %struct.neigh_table, ptr %tbl, i32 0, i32 25
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %gc_entries, i32 noundef 4) #8
  %31 = ptrtoint ptr %gc_entries to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %gc_entries, align 4
  %entries = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call14, i32 0, i32 3
  %33 = ptrtoint ptr %entries to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %entries, align 4
  %cmp = icmp ne ptr %n, null
  %conv35 = zext i1 %cmp to i8
  %created = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call14, i32 0, i32 4
  %34 = ptrtoint ptr %created to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %conv35, ptr %created, align 4
  %gc_exempt = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call14, i32 0, i32 5
  %35 = ptrtoint ptr %gc_exempt to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %frombool, ptr %gc_exempt, align 1
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call14, i32 0, i32 7
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %call14, i32 0, i32 6
  %36 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %tbl, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %37)
  %cmp41 = icmp eq i32 %37, 2
  br i1 %cmp41, label %if.then43, label %if.end17.if.end44_crit_edge

if.end17.if.end44_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end44

if.then43:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #10
  %38 = ptrtoint ptr %pkey to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %pkey, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %if.end17.if.end44_crit_edge
  %storemerge = phi i32 [ %39, %if.then43 ], [ 0, %if.end17.if.end44_crit_edge ]
  %40 = ptrtoint ptr %primary_key4 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %storemerge, ptr %primary_key4, align 4
  %41 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %tbl, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %42)
  %cmp46 = icmp eq i32 %42, 10
  br i1 %cmp46, label %if.then48, label %if.end44.if.end51_crit_edge

if.end44.if.end51_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end51

if.then48:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #10
  %43 = call ptr @memcpy(ptr %primary_key6, ptr %pkey, i32 16)
  br label %if.end51

if.end51:                                         ; preds = %if.then48, %if.end44.if.end51_crit_edge
  %44 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rctx, align 4
  %46 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 60, i32 noundef %45, ptr noundef %__data, i64 noundef 1, ptr noundef %47, ptr noundef %11, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end51, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_neigh_update(ptr noundef %__data, ptr noundef %n, ptr noundef readonly %lladdr, i8 noundef zeroext %new, i32 noundef %flags, i32 noundef %nlmsg_pid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dev.i = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 25
  %3 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev.i, align 4
  %tobool6.not.i = icmp eq ptr %4, null
  %cond14.i = select i1 %tobool6.not.i, ptr @.str.232, ptr %4
  %call.i127 = tail call i32 @strlen(ptr noundef nonnull %cond14.i) #11
  %add = add i32 %call.i127, 137
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i127, 16
  %or.i = add i32 %add.i, 65672
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %6 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev.i, align 4
  %tobool7.not = icmp eq ptr %7, null
  br i1 %tobool7.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %addr_len = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 56
  %8 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %addr_len, align 1
  %conv = zext i8 %9 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %conv, %cond.true ], [ 32, %if.end5.cond.end_crit_edge ]
  %tbl = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 1
  %10 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tbl, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %family9 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 1
  %14 = ptrtoint ptr %family9 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %family9, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 136
  %15 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev.i, align 4
  %tobool19.not = icmp eq ptr %16, null
  %cond29 = select i1 %tobool19.not, ptr @.str.232, ptr %16
  %call30 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %cond29) #12
  %conv31 = trunc i32 %cond to i8
  %lladdr_len32 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %lladdr_len32 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv31, ptr %lladdr_len32, align 4
  %lladdr33 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 3
  %ha = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 18
  %18 = call ptr @memcpy(ptr %lladdr33, ptr %ha, i32 %cond)
  %flags36 = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 16
  %19 = ptrtoint ptr %flags36 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags36, align 4
  %conv37 = trunc i32 %20 to i8
  %flags38 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 5
  %21 = ptrtoint ptr %flags38 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv37, ptr %flags38, align 1
  %nud_state = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 12
  %22 = ptrtoint ptr %nud_state to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %nud_state, align 8
  %nud_state39 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 6
  %24 = ptrtoint ptr %nud_state39 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %nud_state39, align 2
  %type = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 13
  %25 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %type, align 1
  %type40 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 7
  %27 = ptrtoint ptr %type40 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %type40, align 1
  %dead = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 14
  %28 = ptrtoint ptr %dead to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %dead, align 2
  %dead41 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 8
  %30 = ptrtoint ptr %dead41 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %dead41, align 4
  %refcnt = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 6
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #8
  %31 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %refcnt, align 4
  %refcnt43 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 9
  %33 = ptrtoint ptr %refcnt43 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %refcnt43, align 4
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 11
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 10
  %34 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tbl, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %37)
  %cmp = icmp eq i32 %37, 2
  br i1 %cmp, label %if.then49, label %cond.end.if.end51_crit_edge

cond.end.if.end51_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end51

if.then49:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  %primary_key = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 27
  %38 = ptrtoint ptr %primary_key to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %primary_key, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %cond.end.if.end51_crit_edge
  %storemerge = phi i32 [ %39, %if.then49 ], [ 0, %cond.end.if.end51_crit_edge ]
  %40 = ptrtoint ptr %primary_key4 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %storemerge, ptr %primary_key4, align 4
  %41 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tbl, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %44)
  %cmp54 = icmp eq i32 %44, 10
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #10
  %primary_key59 = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 27
  %45 = call ptr @memcpy(ptr %primary_key6, ptr %primary_key59, i32 16)
  br label %if.end62

if.else61:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #10
  %46 = ptrtoint ptr %primary_key6 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %primary_key6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 11, i32 4
  %47 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 11, i32 8
  %48 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 11, i32 12
  %49 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %storemerge, ptr %arrayidx1.i1.i.i, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.else61, %if.then56
  %confirmed = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 3
  %50 = ptrtoint ptr %confirmed to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %confirmed, align 4
  %confirmed63 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 12
  %52 = ptrtoint ptr %confirmed63 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %confirmed63, align 4
  %updated = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 4
  %53 = ptrtoint ptr %updated to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %updated, align 8
  %updated64 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 13
  %55 = ptrtoint ptr %updated64 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %updated64, align 4
  %used = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 10
  %56 = ptrtoint ptr %used to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %used, align 8
  %used65 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 14
  %58 = ptrtoint ptr %used65 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %57, ptr %used65, align 4
  %tobool66.not = icmp eq ptr %lladdr, null
  br i1 %tobool66.not, label %if.end62.if.end69_crit_edge, label %if.then67

if.end62.if.end69_crit_edge:                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end69

if.then67:                                        ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #10
  %new_lladdr = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 15
  %59 = call ptr @memcpy(ptr %new_lladdr, ptr %lladdr, i32 %cond)
  br label %if.end69

if.end69:                                         ; preds = %if.then67, %if.end62.if.end69_crit_edge
  %new_state = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 16
  %60 = ptrtoint ptr %new_state to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %new, ptr %new_state, align 4
  %update_flags = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 17
  %61 = ptrtoint ptr %update_flags to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %flags, ptr %update_flags, align 4
  %pid = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call3, i32 0, i32 18
  %62 = ptrtoint ptr %pid to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %nlmsg_pid, ptr %pid, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end69, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_neigh_update(ptr noundef %__data, ptr noundef %n, ptr noundef readonly %lladdr, i8 noundef zeroext %new, i32 noundef %flags, i32 noundef %nlmsg_pid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %dev.i = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 25
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %tobool6.not.i = icmp eq ptr %3, null
  %cond14.i = select i1 %tobool6.not.i, ptr @.str.232, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %cond14.i) #11
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65672
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 148
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #8
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %30 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dev.i, align 4
  %tobool18.not = icmp eq ptr %31, null
  br i1 %tobool18.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %addr_len = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 56
  %32 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %addr_len, align 1
  %conv = zext i8 %33 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %conv, %cond.true ], [ 32, %if.end16.cond.end_crit_edge ]
  %tbl = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 1
  %34 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tbl, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  %family20 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 1
  %38 = ptrtoint ptr %family20 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %family20, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 136
  %39 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev.i, align 4
  %tobool31.not = icmp eq ptr %40, null
  %cond41 = select i1 %tobool31.not, ptr @.str.232, ptr %40
  %call42 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %cond41) #12
  %conv43 = trunc i32 %cond to i8
  %lladdr_len44 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %lladdr_len44 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %conv43, ptr %lladdr_len44, align 4
  %lladdr45 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 3
  %ha = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 18
  %42 = call ptr @memcpy(ptr %lladdr45, ptr %ha, i32 %cond)
  %flags48 = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 16
  %43 = ptrtoint ptr %flags48 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %flags48, align 4
  %conv49 = trunc i32 %44 to i8
  %flags50 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 5
  %45 = ptrtoint ptr %flags50 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %conv49, ptr %flags50, align 1
  %nud_state = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 12
  %46 = ptrtoint ptr %nud_state to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %nud_state, align 8
  %nud_state51 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 6
  %48 = ptrtoint ptr %nud_state51 to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %47, ptr %nud_state51, align 2
  %type = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 13
  %49 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %type, align 1
  %type52 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 7
  %51 = ptrtoint ptr %type52 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %type52, align 1
  %dead = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 14
  %52 = ptrtoint ptr %dead to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %dead, align 2
  %dead53 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 8
  %54 = ptrtoint ptr %dead53 to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 %53, ptr %dead53, align 4
  %refcnt = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 6
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #8
  %55 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %refcnt, align 4
  %refcnt55 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 9
  %57 = ptrtoint ptr %refcnt55 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %refcnt55, align 4
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 11
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 10
  %58 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %tbl, align 4
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %59, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %61)
  %cmp = icmp eq i32 %61, 2
  br i1 %cmp, label %if.then61, label %cond.end.if.end63_crit_edge

cond.end.if.end63_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end63

if.then61:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  %primary_key = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 27
  %62 = ptrtoint ptr %primary_key to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %primary_key, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then61, %cond.end.if.end63_crit_edge
  %storemerge = phi i32 [ %63, %if.then61 ], [ 0, %cond.end.if.end63_crit_edge ]
  %64 = ptrtoint ptr %primary_key4 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %storemerge, ptr %primary_key4, align 4
  %65 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %tbl, align 4
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %66, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %68)
  %cmp66 = icmp eq i32 %68, 10
  br i1 %cmp66, label %if.then68, label %if.else73

if.then68:                                        ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #10
  %primary_key71 = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 27
  %69 = call ptr @memcpy(ptr %primary_key6, ptr %primary_key71, i32 16)
  br label %if.end74

if.else73:                                        ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #10
  %70 = ptrtoint ptr %primary_key6 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 0, ptr %primary_key6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 11, i32 4
  %71 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 11, i32 8
  %72 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 11, i32 12
  %73 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %storemerge, ptr %arrayidx1.i1.i.i, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.then68
  %confirmed = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 3
  %74 = ptrtoint ptr %confirmed to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %confirmed, align 4
  %confirmed75 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 12
  %76 = ptrtoint ptr %confirmed75 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %75, ptr %confirmed75, align 4
  %updated = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 4
  %77 = ptrtoint ptr %updated to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %updated, align 8
  %updated76 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 13
  %79 = ptrtoint ptr %updated76 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %updated76, align 4
  %used = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 10
  %80 = ptrtoint ptr %used to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %used, align 8
  %used77 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 14
  %82 = ptrtoint ptr %used77 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %81, ptr %used77, align 4
  %tobool78.not = icmp eq ptr %lladdr, null
  br i1 %tobool78.not, label %if.end74.if.end81_crit_edge, label %if.then79

if.end74.if.end81_crit_edge:                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end81

if.then79:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #10
  %new_lladdr = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 15
  %83 = call ptr @memcpy(ptr %new_lladdr, ptr %lladdr, i32 %cond)
  br label %if.end81

if.end81:                                         ; preds = %if.then79, %if.end74.if.end81_crit_edge
  %new_state = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 16
  %84 = ptrtoint ptr %new_state to i32
  call void @__asan_store1_noabort(i32 %84)
  store i8 %new, ptr %new_state, align 4
  %update_flags = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 17
  %85 = ptrtoint ptr %update_flags to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %flags, ptr %update_flags, align 4
  %pid = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %call13, i32 0, i32 18
  %86 = ptrtoint ptr %pid to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %nlmsg_pid, ptr %pid, align 4
  %87 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %rctx, align 4
  %89 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %88, ptr noundef %__data, i64 noundef 1, ptr noundef %90, ptr noundef %13, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end81, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_neigh__update(ptr noundef %__data, ptr noundef %n, i32 noundef %err) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #8
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1062

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1063

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #8
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dev.i = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 25
  %3 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev.i, align 4
  %tobool6.not.i = icmp eq ptr %4, null
  %cond14.i = select i1 %tobool6.not.i, ptr @.str.232, ptr %4
  %call.i114 = tail call i32 @strlen(ptr noundef nonnull %cond14.i) #11
  %add = add i32 %call.i114, 97
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #8
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i114, 16
  %or.i = add i32 %add.i, 65632
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %6 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev.i, align 4
  %tobool7.not = icmp eq ptr %7, null
  br i1 %tobool7.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #10
  %addr_len = getelementptr inbounds %struct.net_device, ptr %7, i32 0, i32 56
  %8 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %addr_len, align 1
  %conv = zext i8 %9 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %conv, %cond.true ], [ 32, %if.end5.cond.end_crit_edge ]
  %tbl = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 1
  %10 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tbl, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %family9 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 1
  %14 = ptrtoint ptr %family9 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %family9, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 96
  %15 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev.i, align 4
  %tobool19.not = icmp eq ptr %16, null
  %cond29 = select i1 %tobool19.not, ptr @.str.232, ptr %16
  %call30 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %cond29) #12
  %conv31 = trunc i32 %cond to i8
  %lladdr_len32 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %lladdr_len32 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv31, ptr %lladdr_len32, align 4
  %lladdr = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 3
  %ha = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 18
  %18 = call ptr @memcpy(ptr %lladdr, ptr %ha, i32 %cond)
  %flags = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 16
  %19 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags, align 4
  %conv35 = trunc i32 %20 to i8
  %flags36 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 5
  %21 = ptrtoint ptr %flags36 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv35, ptr %flags36, align 1
  %nud_state = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 12
  %22 = ptrtoint ptr %nud_state to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %nud_state, align 8
  %nud_state37 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 6
  %24 = ptrtoint ptr %nud_state37 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %nud_state37, align 2
  %type = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 13
  %25 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %type, align 1
  %type38 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 7
  %27 = ptrtoint ptr %type38 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %type38, align 1
  %dead = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 14
  %28 = ptrtoint ptr %dead to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %dead, align 2
  %dead39 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 8
  %30 = ptrtoint ptr %dead39 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %dead39, align 4
  %refcnt = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 6
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #8
  %31 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %refcnt, align 4
  %refcnt41 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 9
  %33 = ptrtoint ptr %refcnt41 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %refcnt41, align 4
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 11
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 10
  %34 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tbl, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %37)
  %cmp = icmp eq i32 %37, 2
  br i1 %cmp, label %if.then47, label %cond.end.if.end49_crit_edge

cond.end.if.end49_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end49

if.then47:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  %primary_key = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 27
  %38 = ptrtoint ptr %primary_key to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %primary_key, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %cond.end.if.end49_crit_edge
  %storemerge = phi i32 [ %39, %if.then47 ], [ 0, %cond.end.if.end49_crit_edge ]
  %40 = ptrtoint ptr %primary_key4 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %storemerge, ptr %primary_key4, align 4
  %41 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tbl, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %44)
  %cmp52 = icmp eq i32 %44, 10
  br i1 %cmp52, label %if.then54, label %if.else59

if.then54:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #10
  %primary_key57 = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 27
  %45 = call ptr @memcpy(ptr %primary_key6, ptr %primary_key57, i32 16)
  br label %if.end60

if.else59:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #10
  %46 = ptrtoint ptr %primary_key6 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %primary_key6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 11, i32 4
  %47 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 11, i32 8
  %48 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 11, i32 12
  %49 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %storemerge, ptr %arrayidx1.i1.i.i, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then54
  %confirmed = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 3
  %50 = ptrtoint ptr %confirmed to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %confirmed, align 4
  %confirmed61 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 12
  %52 = ptrtoint ptr %confirmed61 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %confirmed61, align 4
  %updated = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 4
  %53 = ptrtoint ptr %updated to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %updated, align 8
  %updated62 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 13
  %55 = ptrtoint ptr %updated62 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %updated62, align 4
  %used = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 10
  %56 = ptrtoint ptr %used to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %used, align 8
  %used63 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 14
  %58 = ptrtoint ptr %used63 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %57, ptr %used63, align 4
  %err64 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call3, i32 0, i32 15
  %59 = ptrtoint ptr %err64 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %err, ptr %err64, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end60, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_neigh__update(ptr noundef %__data, ptr noundef %n, i32 noundef %err) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #8
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1064
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #8
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1064
  %dev.i = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 25
  %2 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev.i, align 4
  %tobool6.not.i = icmp eq ptr %3, null
  %cond14.i = select i1 %tobool6.not.i, ptr @.str.232, ptr %3
  %call.i = tail call i32 @strlen(ptr noundef nonnull %cond14.i) #11
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65632
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1052) #8
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 108
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #8
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #8
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #8
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1052) #8
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_dev, align 4
  %30 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dev.i, align 4
  %tobool18.not = icmp eq ptr %31, null
  br i1 %tobool18.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #10
  %addr_len = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 56
  %32 = ptrtoint ptr %addr_len to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %addr_len, align 1
  %conv = zext i8 %33 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %conv, %cond.true ], [ 32, %if.end16.cond.end_crit_edge ]
  %tbl = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 1
  %34 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tbl, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  %family20 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 1
  %38 = ptrtoint ptr %family20 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %family20, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 96
  %39 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dev.i, align 4
  %tobool31.not = icmp eq ptr %40, null
  %cond41 = select i1 %tobool31.not, ptr @.str.232, ptr %40
  %call42 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %cond41) #12
  %conv43 = trunc i32 %cond to i8
  %lladdr_len44 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %lladdr_len44 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %conv43, ptr %lladdr_len44, align 4
  %lladdr = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 3
  %ha = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 18
  %42 = call ptr @memcpy(ptr %lladdr, ptr %ha, i32 %cond)
  %flags = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 16
  %43 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %flags, align 4
  %conv47 = trunc i32 %44 to i8
  %flags48 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 5
  %45 = ptrtoint ptr %flags48 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %conv47, ptr %flags48, align 1
  %nud_state = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 12
  %46 = ptrtoint ptr %nud_state to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %nud_state, align 8
  %nud_state49 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 6
  %48 = ptrtoint ptr %nud_state49 to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %47, ptr %nud_state49, align 2
  %type = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 13
  %49 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %type, align 1
  %type50 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 7
  %51 = ptrtoint ptr %type50 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %type50, align 1
  %dead = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 14
  %52 = ptrtoint ptr %dead to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %dead, align 2
  %dead51 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 8
  %54 = ptrtoint ptr %dead51 to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 %53, ptr %dead51, align 4
  %refcnt = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 6
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refcnt, i32 noundef 4) #8
  %55 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %refcnt, align 4
  %refcnt53 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 9
  %57 = ptrtoint ptr %refcnt53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %refcnt53, align 4
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 11
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 10
  %58 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %tbl, align 4
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %59, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %61)
  %cmp = icmp eq i32 %61, 2
  br i1 %cmp, label %if.then59, label %cond.end.if.end61_crit_edge

cond.end.if.end61_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  br label %if.end61

if.then59:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #10
  %primary_key = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 27
  %62 = ptrtoint ptr %primary_key to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %primary_key, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %cond.end.if.end61_crit_edge
  %storemerge = phi i32 [ %63, %if.then59 ], [ 0, %cond.end.if.end61_crit_edge ]
  %64 = ptrtoint ptr %primary_key4 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %storemerge, ptr %primary_key4, align 4
  %65 = ptrtoint ptr %tbl to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %tbl, align 4
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %66, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %68)
  %cmp64 = icmp eq i32 %68, 10
  br i1 %cmp64, label %if.then66, label %if.else71

if.then66:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #10
  %primary_key69 = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 27
  %69 = call ptr @memcpy(ptr %primary_key6, ptr %primary_key69, i32 16)
  br label %if.end72

if.else71:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #10
  %70 = ptrtoint ptr %primary_key6 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 0, ptr %primary_key6, align 4
  %arrayidx1.i.i.i = getelementptr %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 11, i32 4
  %71 = ptrtoint ptr %arrayidx1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 0, ptr %arrayidx1.i.i.i, align 4
  %arrayidx2.i.i = getelementptr %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 11, i32 8
  %72 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 65535, ptr %arrayidx2.i.i, align 4
  %arrayidx1.i1.i.i = getelementptr %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 11, i32 12
  %73 = ptrtoint ptr %arrayidx1.i1.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %storemerge, ptr %arrayidx1.i1.i.i, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.else71, %if.then66
  %confirmed = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 3
  %74 = ptrtoint ptr %confirmed to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %confirmed, align 4
  %confirmed73 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 12
  %76 = ptrtoint ptr %confirmed73 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %75, ptr %confirmed73, align 4
  %updated = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 4
  %77 = ptrtoint ptr %updated to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %updated, align 8
  %updated74 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 13
  %79 = ptrtoint ptr %updated74 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %updated74, align 4
  %used = getelementptr inbounds %struct.neighbour, ptr %n, i32 0, i32 10
  %80 = ptrtoint ptr %used to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %used, align 8
  %used75 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 14
  %82 = ptrtoint ptr %used75 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %81, ptr %used75, align 4
  %err76 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %call13, i32 0, i32 15
  %83 = ptrtoint ptr %err76 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %err, ptr %err76, align 4
  %84 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %rctx, align 4
  %86 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %85, ptr noundef %__data, i64 noundef 1, ptr noundef %87, ptr noundef %13, ptr noundef null) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end72, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_neigh_create(ptr noundef %__data, ptr noundef %tbl, ptr noundef %dev, ptr noundef %pkey, ptr noundef %n, i1 noundef zeroext %exempt_from_gc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %tbl to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %dev to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %pkey to i32
  %conv8 = zext i32 %2 to i64
  %3 = ptrtoint ptr %n to i32
  %conv12 = zext i32 %3 to i64
  %conv17 = zext i1 %exempt_from_gc to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv17) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_neigh_update(ptr noundef %__data, ptr noundef %n, ptr noundef %lladdr, i8 noundef zeroext %new, i32 noundef %flags, i32 noundef %nlmsg_pid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %n to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %lladdr to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i8 %new to i64
  %conv12 = zext i32 %flags to i64
  %conv16 = zext i32 %nlmsg_pid to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_neigh__update(ptr noundef %__data, ptr noundef %n, i32 noundef %err) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %0 = ptrtoint ptr %n to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %err to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_kfree_skb(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skbaddr, align 4
  %protocol = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %protocol, align 4
  %conv = zext i16 %5 to i32
  %location = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %location, align 4
  %reason = getelementptr inbounds %struct.trace_event_raw_kfree_skb, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %reason to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %reason, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_kfree_skb.symbols) #8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.55, ptr noundef %3, i32 noundef %conv, ptr noundef %7, ptr noundef %call1) #8
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_consume_skb(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_consume_skb, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skbaddr, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.63, ptr noundef %3) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_skb_copy_datagram_iovec(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_skb_copy_datagram_iovec, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skbaddr, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_skb_copy_datagram_iovec, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.67, ptr noundef %3, i32 noundef %5) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #3

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_net_dev_start_xmit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %queue_mapping = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %queue_mapping to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %queue_mapping, align 4
  %conv = zext i16 %5 to i32
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %skbaddr, align 4
  %vlan_tagged = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %vlan_tagged to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %vlan_tagged, align 4, !range !1067
  %10 = zext i8 %9 to i32
  %vlan_proto = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 5
  %11 = ptrtoint ptr %vlan_proto to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %vlan_proto, align 2
  %conv2 = zext i16 %12 to i32
  %vlan_tci = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 6
  %13 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vlan_tci, align 4
  %conv3 = zext i16 %14 to i32
  %protocol = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 7
  %15 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %protocol, align 2
  %conv4 = zext i16 %16 to i32
  %ip_summed = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 8
  %17 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %ip_summed, align 4
  %conv5 = zext i8 %18 to i32
  %len = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 9
  %19 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %len, align 4
  %data_len = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 10
  %21 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %data_len, align 4
  %network_offset = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 11
  %23 = ptrtoint ptr %network_offset to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %network_offset, align 4
  %transport_offset_valid = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 12
  %25 = ptrtoint ptr %transport_offset_valid to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %transport_offset_valid, align 4, !range !1067
  %27 = zext i8 %26 to i32
  %transport_offset = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 13
  %28 = ptrtoint ptr %transport_offset to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %transport_offset, align 4
  %tx_flags = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 14
  %30 = ptrtoint ptr %tx_flags to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %tx_flags, align 4
  %conv8 = zext i8 %31 to i32
  %gso_size = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 15
  %32 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %gso_size, align 2
  %conv9 = zext i16 %33 to i32
  %gso_segs = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 16
  %34 = ptrtoint ptr %gso_segs to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %gso_segs, align 4
  %conv10 = zext i16 %35 to i32
  %gso_type = getelementptr inbounds %struct.trace_event_raw_net_dev_start_xmit, ptr %1, i32 0, i32 17
  %36 = ptrtoint ptr %gso_type to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %gso_type, align 2
  %conv11 = zext i16 %37 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.88, ptr noundef %add.ptr, i32 noundef %conv, ptr noundef %7, i32 noundef %10, i32 noundef %conv2, i32 noundef %conv3, i32 noundef %conv4, i32 noundef %conv5, i32 noundef %20, i32 noundef %22, i32 noundef %24, i32 noundef %27, i32 noundef %29, i32 noundef %conv8, i32 noundef %conv9, i32 noundef %conv10, i32 noundef %conv11) #8
  %call12 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_net_dev_xmit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %skbaddr, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len, align 4
  %rc = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %rc to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rc, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.90, ptr noundef %add.ptr, ptr noundef %5, i32 noundef %7, i32 noundef %9) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @netdev_drivername(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_net_dev_xmit_timeout(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_driver = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_driver to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_driver, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %queue_index = getelementptr inbounds %struct.trace_event_raw_net_dev_xmit_timeout, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %queue_index to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %queue_index, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.93, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #8
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_net_dev_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %skbaddr, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_net_dev_template, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.94, ptr noundef %add.ptr, ptr noundef %5, i32 noundef %7) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_net_dev_rx_verbose_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %napi_id = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %napi_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %napi_id, align 4
  %queue_mapping = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %queue_mapping to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %queue_mapping, align 4
  %conv = zext i16 %7 to i32
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %skbaddr, align 4
  %vlan_tagged = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %vlan_tagged to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %vlan_tagged, align 4, !range !1067
  %12 = zext i8 %11 to i32
  %vlan_proto = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 6
  %13 = ptrtoint ptr %vlan_proto to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vlan_proto, align 2
  %conv2 = zext i16 %14 to i32
  %vlan_tci = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 7
  %15 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %vlan_tci, align 4
  %conv3 = zext i16 %16 to i32
  %protocol = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 8
  %17 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %protocol, align 2
  %conv4 = zext i16 %18 to i32
  %ip_summed = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 9
  %19 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %ip_summed, align 4
  %conv5 = zext i8 %20 to i32
  %hash = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 10
  %21 = ptrtoint ptr %hash to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %hash, align 4
  %l4_hash = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 11
  %23 = ptrtoint ptr %l4_hash to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %l4_hash, align 4, !range !1067
  %25 = zext i8 %24 to i32
  %len = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 12
  %26 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %len, align 4
  %data_len = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 13
  %28 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %data_len, align 4
  %truesize = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 14
  %30 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %truesize, align 4
  %mac_header_valid = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 15
  %32 = ptrtoint ptr %mac_header_valid to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %mac_header_valid, align 4, !range !1067
  %34 = zext i8 %33 to i32
  %mac_header = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 16
  %35 = ptrtoint ptr %mac_header to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mac_header, align 4
  %nr_frags = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 17
  %37 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %nr_frags, align 4
  %conv10 = zext i8 %38 to i32
  %gso_size = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 18
  %39 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %gso_size, align 2
  %conv11 = zext i16 %40 to i32
  %gso_type = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_verbose_template, ptr %1, i32 0, i32 19
  %41 = ptrtoint ptr %gso_type to i32
  call void @__asan_load2_noabort(i32 %41)
  %42 = load i16, ptr %gso_type, align 4
  %conv12 = zext i16 %42 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.104, ptr noundef %add.ptr, i32 noundef %5, i32 noundef %conv, ptr noundef %9, i32 noundef %12, i32 noundef %conv2, i32 noundef %conv3, i32 noundef %conv4, i32 noundef %conv5, i32 noundef %22, i32 noundef %25, i32 noundef %27, i32 noundef %29, i32 noundef %31, i32 noundef %34, i32 noundef %36, i32 noundef %conv10, i32 noundef %conv11, i32 noundef %conv12) #8
  %call13 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_net_dev_rx_exit_template(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %ret1 = getelementptr inbounds %struct.trace_event_raw_net_dev_rx_exit_template, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ret1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ret1, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.106, i32 noundef %3) #8
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_napi_poll(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %napi = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %napi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %napi, align 4
  %__data_loc_dev_name = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_dev_name to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_dev_name, align 4
  %and = and i32 %5, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %work = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %work, align 4
  %budget = getelementptr inbounds %struct.trace_event_raw_napi_poll, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %budget to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %budget, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.113, ptr noundef %3, ptr noundef %add.ptr, i32 noundef %7, i32 noundef %9) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_sock_rcvqueue_full(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rmem_alloc = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rmem_alloc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rmem_alloc, align 4
  %truesize = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %truesize, align 4
  %sk_rcvbuf = getelementptr inbounds %struct.trace_event_raw_sock_rcvqueue_full, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sk_rcvbuf, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.116, i32 noundef %3, i32 noundef %5, i32 noundef %7) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_sock_exceed_buf_limit(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %name = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 1
  %sysctl_mem = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %sysctl_mem to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sysctl_mem, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %arrayidx2 = getelementptr i32, ptr %3, i32 1
  %6 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx2, align 4
  %arrayidx4 = getelementptr i32, ptr %3, i32 2
  %8 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx4, align 4
  %allocated = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %allocated to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %allocated, align 4
  %sysctl_rmem = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %sysctl_rmem to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sysctl_rmem, align 4
  %rmem_alloc = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %rmem_alloc to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rmem_alloc, align 4
  %sysctl_wmem = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 6
  %16 = ptrtoint ptr %sysctl_wmem to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sysctl_wmem, align 4
  %wmem_alloc = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 7
  %18 = ptrtoint ptr %wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %wmem_alloc, align 4
  %wmem_queued = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 8
  %20 = ptrtoint ptr %wmem_queued to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %wmem_queued, align 4
  %kind = getelementptr inbounds %struct.trace_event_raw_sock_exceed_buf_limit, ptr %1, i32 0, i32 9
  %22 = ptrtoint ptr %kind to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %kind, align 4
  %call5 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %23, ptr noundef nonnull @trace_raw_output_sock_exceed_buf_limit.symbols) #8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.127, ptr noundef %name, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, ptr noundef %call5) #8
  %call6 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_inet_sock_set_state(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %family, align 4
  %conv = zext i16 %3 to i32
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_inet_sock_set_state.symbols) #8
  %protocol = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %protocol, align 2
  %conv3 = zext i16 %5 to i32
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv3, ptr noundef nonnull @trace_raw_output_inet_sock_set_state.symbols.146) #8
  %sport = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %sport to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %sport, align 4
  %conv5 = zext i16 %7 to i32
  %dport = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %dport to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %dport, align 2
  %conv6 = zext i16 %9 to i32
  %saddr = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 8
  %daddr = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 9
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 10
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 11
  %oldstate = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 2
  %10 = ptrtoint ptr %oldstate to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %oldstate, align 4
  %call11 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %11, ptr noundef nonnull @trace_raw_output_inet_sock_set_state.symbols.147) #8
  %newstate = getelementptr inbounds %struct.trace_event_raw_inet_sock_set_state, ptr %1, i32 0, i32 3
  %12 = ptrtoint ptr %newstate to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %newstate, align 4
  %call13 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %13, ptr noundef nonnull @trace_raw_output_inet_sock_set_state.symbols.148) #8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.143, ptr noundef %call1, ptr noundef %call4, i32 noundef %conv5, i32 noundef %conv6, ptr noundef %saddr, ptr noundef %daddr, ptr noundef %saddr_v6, ptr noundef %daddr_v6, ptr noundef %call11, ptr noundef %call13) #8
  %call14 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call14, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_inet_sk_error_report(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %family, align 4
  %conv = zext i16 %3 to i32
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_inet_sk_error_report.symbols) #8
  %protocol = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %protocol, align 2
  %conv3 = zext i16 %5 to i32
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv3, ptr noundef nonnull @trace_raw_output_inet_sk_error_report.symbols.151) #8
  %sport = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %sport to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %sport, align 4
  %conv5 = zext i16 %7 to i32
  %dport = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %dport to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %dport, align 2
  %conv6 = zext i16 %9 to i32
  %saddr = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 6
  %daddr = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 7
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 8
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 9
  %error = getelementptr inbounds %struct.trace_event_raw_inet_sk_error_report, ptr %1, i32 0, i32 1
  %10 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %error, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.150, ptr noundef %call1, ptr noundef %call4, i32 noundef %conv5, i32 noundef %conv6, ptr noundef %saddr, ptr noundef %daddr, ptr noundef %saddr_v6, ptr noundef %daddr_v6, i32 noundef %11) #8
  %call10 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_udp_fail_queue_rcv_skb(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %rc = getelementptr inbounds %struct.trace_event_raw_udp_fail_queue_rcv_skb, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rc, align 4
  %lport = getelementptr inbounds %struct.trace_event_raw_udp_fail_queue_rcv_skb, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %lport to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %lport, align 4
  %conv = zext i16 %5 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.153, i32 noundef %3, i32 noundef %conv) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_tcp_event_sk_skb(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %family, align 4
  %conv = zext i16 %3 to i32
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_tcp_event_sk_skb.symbols) #8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %sport to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %sport, align 4
  %conv2 = zext i16 %5 to i32
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %dport to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %dport, align 2
  %conv3 = zext i16 %7 to i32
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %1, i32 0, i32 7
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %1, i32 0, i32 8
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %1, i32 0, i32 9
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %1, i32 0, i32 10
  %state = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk_skb, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %state, align 4
  %call8 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_tcp_event_sk_skb.symbols.156) #8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.155, ptr noundef %call1, i32 noundef %conv2, i32 noundef %conv3, ptr noundef %saddr, ptr noundef %daddr, ptr noundef %saddr_v6, ptr noundef %daddr_v6, ptr noundef %call8) #8
  %call9 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @__sock_gen_cookie(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_tcp_event_sk(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %family, align 8
  %conv = zext i16 %3 to i32
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_tcp_event_sk.symbols) #8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %sport to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %sport, align 4
  %conv2 = zext i16 %5 to i32
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %dport to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %dport, align 2
  %conv3 = zext i16 %7 to i32
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %1, i32 0, i32 5
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %1, i32 0, i32 6
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %1, i32 0, i32 7
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %1, i32 0, i32 8
  %sock_cookie = getelementptr inbounds %struct.trace_event_raw_tcp_event_sk, ptr %1, i32 0, i32 9
  %8 = ptrtoint ptr %sock_cookie to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %sock_cookie, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.159, ptr noundef %call1, i32 noundef %conv2, i32 noundef %conv3, ptr noundef %saddr, ptr noundef %daddr, ptr noundef %saddr_v6, ptr noundef %daddr_v6, i64 noundef %9) #8
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_tcp_retransmit_synack(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %family, align 4
  %conv = zext i16 %3 to i32
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_tcp_retransmit_synack.symbols) #8
  %sport = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %sport to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %sport, align 4
  %conv2 = zext i16 %5 to i32
  %dport = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %dport to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %dport, align 2
  %conv3 = zext i16 %7 to i32
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %1, i32 0, i32 6
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %1, i32 0, i32 7
  %saddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %1, i32 0, i32 8
  %daddr_v6 = getelementptr inbounds %struct.trace_event_raw_tcp_retransmit_synack, ptr %1, i32 0, i32 9
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.161, ptr noundef %call1, i32 noundef %conv2, i32 noundef %conv3, ptr noundef %saddr, ptr noundef %daddr, ptr noundef %saddr_v6, ptr noundef %daddr_v6) #8
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_tcp_probe(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %family, align 4
  %conv = zext i16 %3 to i32
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_tcp_probe.symbols) #8
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 1
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 2
  %mark = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %mark to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mark, align 8
  %data_len = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %data_len, align 4
  %conv3 = zext i16 %7 to i32
  %snd_nxt = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 8
  %8 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %snd_nxt, align 8
  %snd_una = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 9
  %10 = ptrtoint ptr %snd_una to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %snd_una, align 4
  %snd_cwnd = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 10
  %12 = ptrtoint ptr %snd_cwnd to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %snd_cwnd, align 8
  %ssthresh = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 11
  %14 = ptrtoint ptr %ssthresh to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ssthresh, align 4
  %snd_wnd = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 12
  %16 = ptrtoint ptr %snd_wnd to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %snd_wnd, align 8
  %srtt = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 13
  %18 = ptrtoint ptr %srtt to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %srtt, align 4
  %rcv_wnd = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 14
  %20 = ptrtoint ptr %rcv_wnd to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %rcv_wnd, align 8
  %sock_cookie = getelementptr inbounds %struct.trace_event_raw_tcp_probe, ptr %1, i32 0, i32 15
  %22 = ptrtoint ptr %sock_cookie to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %sock_cookie, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.172, ptr noundef %call1, ptr noundef %saddr, ptr noundef %daddr, i32 noundef %5, i32 noundef %conv3, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i64 noundef %23) #8
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_tcp_event_skb(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %saddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %1, i32 0, i32 2
  %daddr = getelementptr inbounds %struct.trace_event_raw_tcp_event_skb, ptr %1, i32 0, i32 3
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.173, ptr noundef %saddr, ptr noundef %daddr) #8
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_fib_table_lookup(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %tb_id = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %tb_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tb_id, align 4
  %oif = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %oif to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %oif, align 4
  %iif = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %iif to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %iif, align 4
  %proto = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %proto to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %proto, align 4
  %conv = zext i8 %9 to i32
  %src = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 9
  %sport = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 13
  %10 = ptrtoint ptr %sport to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %sport, align 4
  %conv1 = zext i16 %11 to i32
  %dst = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 10
  %dport = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 14
  %12 = ptrtoint ptr %dport to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %dport, align 2
  %conv3 = zext i16 %13 to i32
  %tos = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %tos to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %tos, align 1
  %conv4 = zext i8 %15 to i32
  %scope = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 7
  %16 = ptrtoint ptr %scope to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %scope, align 2
  %conv5 = zext i8 %17 to i32
  %flags6 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 8
  %18 = ptrtoint ptr %flags6 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %flags6, align 1
  %conv7 = zext i8 %19 to i32
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 15
  %20 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %21, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %gw4 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 11
  %gw6 = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 12
  %err = getelementptr inbounds %struct.trace_event_raw_fib_table_lookup, ptr %1, i32 0, i32 2
  %22 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %err, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.188, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %conv, ptr noundef %src, i32 noundef %conv1, ptr noundef %dst, i32 noundef %conv3, i32 noundef %conv4, i32 noundef %conv5, i32 noundef %conv7, ptr noundef %add.ptr, ptr noundef %gw4, ptr noundef %gw6, i32 noundef %23) #8
  %call10 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qdisc_dequeue(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %ifindex = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ifindex, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %handle, align 4
  %parent = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %parent, align 4
  %txq_state = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %1, i32 0, i32 8
  %8 = ptrtoint ptr %txq_state to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %txq_state, align 4
  %packets = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %1, i32 0, i32 3
  %10 = ptrtoint ptr %packets to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %packets, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_qdisc_dequeue, ptr %1, i32 0, i32 4
  %12 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %skbaddr, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.199, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, ptr noundef %13) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qdisc_enqueue(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %ifindex = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %ifindex to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ifindex, align 4
  %handle = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %handle, align 4
  %parent = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %parent, align 4
  %skbaddr = getelementptr inbounds %struct.trace_event_raw_qdisc_enqueue, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %skbaddr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %skbaddr, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.200, i32 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %9) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qdisc_reset(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_dev, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_kind, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %parent = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %parent, align 4
  %shr = lshr i32 %7, 16
  %and5 = and i32 %7, 65535
  %handle = getelementptr inbounds %struct.trace_event_raw_qdisc_reset, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %handle, align 4
  %shr7 = lshr i32 %9, 16
  %and9 = and i32 %9, 65535
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.202, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %shr, i32 noundef %and5, i32 noundef %shr7, i32 noundef %and9) #8
  %call10 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qdisc_destroy(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_dev, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_kind, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %parent = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %parent, align 4
  %shr = lshr i32 %7, 16
  %and5 = and i32 %7, 65535
  %handle = getelementptr inbounds %struct.trace_event_raw_qdisc_destroy, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %handle to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %handle, align 4
  %shr7 = lshr i32 %9, 16
  %and9 = and i32 %9, 65535
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.202, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %shr, i32 noundef %and5, i32 noundef %shr7, i32 noundef %and9) #8
  %call10 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_qdisc_create(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_dev, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_kind = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_kind to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_kind, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %parent = getelementptr inbounds %struct.trace_event_raw_qdisc_create, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %parent, align 4
  %shr = lshr i32 %7, 16
  %and5 = and i32 %7, 65535
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.203, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %shr, i32 noundef %and5) #8
  %call6 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_br_fdb_add(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_dev, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %addr = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %addr, align 4
  %conv = zext i8 %5 to i32
  %arrayidx2 = getelementptr %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 3, i32 1
  %6 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx2, align 1
  %conv3 = zext i8 %7 to i32
  %arrayidx5 = getelementptr %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 3, i32 2
  %8 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx5, align 2
  %conv6 = zext i8 %9 to i32
  %arrayidx8 = getelementptr %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 3, i32 3
  %10 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx8, align 1
  %conv9 = zext i8 %11 to i32
  %arrayidx11 = getelementptr %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 3, i32 4
  %12 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx11, align 4
  %conv12 = zext i8 %13 to i32
  %arrayidx14 = getelementptr %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 3, i32 5
  %14 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx14, align 1
  %conv15 = zext i8 %15 to i32
  %vid = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 4
  %16 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vid, align 2
  %conv16 = zext i16 %17 to i32
  %nlh_flags = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 5
  %18 = ptrtoint ptr %nlh_flags to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %nlh_flags, align 4
  %conv17 = zext i16 %19 to i32
  %ndm_flags = getelementptr inbounds %struct.trace_event_raw_br_fdb_add, ptr %1, i32 0, i32 1
  %20 = ptrtoint ptr %ndm_flags to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %ndm_flags, align 4
  %conv18 = zext i8 %21 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.209, ptr noundef %add.ptr, i32 noundef %conv, i32 noundef %conv3, i32 noundef %conv6, i32 noundef %conv9, i32 noundef %conv12, i32 noundef %conv15, i32 noundef %conv16, i32 noundef %conv17, i32 noundef %conv18) #8
  %call19 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call19, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_br_fdb_external_learn_add(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_br_dev, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_dev, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %addr = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %addr, align 4
  %conv = zext i8 %7 to i32
  %arrayidx4 = getelementptr %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 3, i32 1
  %8 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx4, align 1
  %conv5 = zext i8 %9 to i32
  %arrayidx7 = getelementptr %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 3, i32 2
  %10 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx7, align 2
  %conv8 = zext i8 %11 to i32
  %arrayidx10 = getelementptr %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 3, i32 3
  %12 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx10, align 1
  %conv11 = zext i8 %13 to i32
  %arrayidx13 = getelementptr %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 3, i32 4
  %14 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx13, align 4
  %conv14 = zext i8 %15 to i32
  %arrayidx16 = getelementptr %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 3, i32 5
  %16 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx16, align 1
  %conv17 = zext i8 %17 to i32
  %vid = getelementptr inbounds %struct.trace_event_raw_br_fdb_external_learn_add, ptr %1, i32 0, i32 4
  %18 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vid, align 2
  %conv18 = zext i16 %19 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.212, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %conv, i32 noundef %conv5, i32 noundef %conv8, i32 noundef %conv11, i32 noundef %conv14, i32 noundef %conv17, i32 noundef %conv18) #8
  %call19 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call19, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_fdb_delete(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_br_dev, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_dev, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %addr = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %addr, align 4
  %conv = zext i8 %7 to i32
  %arrayidx4 = getelementptr %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 3, i32 1
  %8 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx4, align 1
  %conv5 = zext i8 %9 to i32
  %arrayidx7 = getelementptr %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 3, i32 2
  %10 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx7, align 2
  %conv8 = zext i8 %11 to i32
  %arrayidx10 = getelementptr %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 3, i32 3
  %12 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx10, align 1
  %conv11 = zext i8 %13 to i32
  %arrayidx13 = getelementptr %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 3, i32 4
  %14 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx13, align 4
  %conv14 = zext i8 %15 to i32
  %arrayidx16 = getelementptr %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 3, i32 5
  %16 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx16, align 1
  %conv17 = zext i8 %17 to i32
  %vid = getelementptr inbounds %struct.trace_event_raw_fdb_delete, ptr %1, i32 0, i32 4
  %18 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vid, align 2
  %conv18 = zext i16 %19 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.213, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %conv, i32 noundef %conv5, i32 noundef %conv8, i32 noundef %conv11, i32 noundef %conv14, i32 noundef %conv17, i32 noundef %conv18) #8
  %call19 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call19, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_br_fdb_update(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_br_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_br_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_br_dev, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_dev, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %addr = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %addr to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %addr, align 4
  %conv = zext i8 %7 to i32
  %arrayidx4 = getelementptr %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 3, i32 1
  %8 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx4, align 1
  %conv5 = zext i8 %9 to i32
  %arrayidx7 = getelementptr %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 3, i32 2
  %10 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx7, align 2
  %conv8 = zext i8 %11 to i32
  %arrayidx10 = getelementptr %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 3, i32 3
  %12 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx10, align 1
  %conv11 = zext i8 %13 to i32
  %arrayidx13 = getelementptr %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 3, i32 4
  %14 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx13, align 4
  %conv14 = zext i8 %15 to i32
  %arrayidx16 = getelementptr %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 3, i32 5
  %16 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx16, align 1
  %conv17 = zext i8 %17 to i32
  %vid = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 4
  %18 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vid, align 2
  %conv18 = zext i16 %19 to i32
  %flags19 = getelementptr inbounds %struct.trace_event_raw_br_fdb_update, ptr %1, i32 0, i32 5
  %20 = ptrtoint ptr %flags19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags19, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.214, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %conv, i32 noundef %conv5, i32 noundef %conv8, i32 noundef %conv11, i32 noundef %conv14, i32 noundef %conv17, i32 noundef %conv18, i32 noundef %21) #8
  %call20 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call20, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_page_pool_release(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %pool = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool, align 8
  %inflight = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %inflight to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %inflight, align 4
  %hold = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %hold to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hold, align 8
  %release = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %release to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %release, align 4
  %cnt = getelementptr inbounds %struct.trace_event_raw_page_pool_release, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %cnt to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %cnt, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.223, ptr noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i64 noundef %11) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_page_pool_state_release(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %pool = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool, align 4
  %page = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %page, align 4
  %pfn = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pfn, align 4
  %release = getelementptr inbounds %struct.trace_event_raw_page_pool_state_release, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %release to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %release, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.227, ptr noundef %3, ptr noundef %5, i32 noundef %7, i32 noundef %9) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_page_pool_state_hold(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %pool = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool, align 4
  %page = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %page, align 4
  %pfn = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %pfn to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pfn, align 4
  %hold = getelementptr inbounds %struct.trace_event_raw_page_pool_state_hold, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %hold to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %hold, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.228, ptr noundef %3, ptr noundef %5, i32 noundef %7, i32 noundef %9) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_page_pool_update_nid(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %pool = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool, align 4
  %pool_nid = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %pool_nid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pool_nid, align 4
  %new_nid = getelementptr inbounds %struct.trace_event_raw_page_pool_update_nid, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %new_nid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %new_nid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.231, ptr noundef %3, i32 noundef %5, i32 noundef %7) #8
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_neigh_create(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %family, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_dev, align 4
  %and = and i32 %5, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %entries = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %entries to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %entries, align 4
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %1, i32 0, i32 6
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %1, i32 0, i32 7
  %created = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %created to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %created, align 4
  %conv = zext i8 %9 to i32
  %gc_exempt = getelementptr inbounds %struct.trace_event_raw_neigh_create, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %gc_exempt to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %gc_exempt, align 1
  %conv2 = zext i8 %11 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.240, i32 noundef %3, ptr noundef %add.ptr, i32 noundef %7, ptr noundef %primary_key4, ptr noundef %primary_key6, i32 noundef %conv, i32 noundef %conv2) #8
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_neigh_update(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %family, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_dev, align 4
  %and = and i32 %5, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %lladdr = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 3
  %lladdr_len = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %lladdr_len to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %lladdr_len, align 4
  %conv = zext i8 %7 to i32
  %call1 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %lladdr, i32 noundef %conv, i1 noundef zeroext true) #8
  %flags2 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %flags2 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %flags2, align 1
  %conv3 = zext i8 %9 to i32
  %nud_state = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %nud_state to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %nud_state, align 2
  %conv4 = zext i8 %11 to i32
  %call5 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv4, ptr noundef nonnull @trace_raw_output_neigh_update.symbols) #8
  %type = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %type, align 1
  %conv6 = zext i8 %13 to i32
  %dead = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %dead to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %dead, align 4
  %conv7 = zext i8 %15 to i32
  %refcnt = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 9
  %16 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %refcnt, align 4
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 10
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 11
  %confirmed = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 12
  %18 = ptrtoint ptr %confirmed to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %confirmed, align 4
  %updated = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 13
  %20 = ptrtoint ptr %updated to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %updated, align 4
  %used = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 14
  %22 = ptrtoint ptr %used to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %used, align 4
  %new_lladdr = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 15
  %24 = ptrtoint ptr %lladdr_len to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %lladdr_len, align 4
  %conv12 = zext i8 %25 to i32
  %call13 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %new_lladdr, i32 noundef %conv12, i1 noundef zeroext true) #8
  %new_state = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 16
  %26 = ptrtoint ptr %new_state to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %new_state, align 4
  %conv15 = zext i8 %27 to i32
  %call16 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv15, ptr noundef nonnull @trace_raw_output_neigh_update.symbols.264) #8
  %update_flags = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 17
  %28 = ptrtoint ptr %update_flags to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %update_flags, align 4
  %pid = getelementptr inbounds %struct.trace_event_raw_neigh_update, ptr %1, i32 0, i32 18
  %30 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %pid, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.255, i32 noundef %3, ptr noundef %add.ptr, ptr noundef %call1, i32 noundef %conv3, ptr noundef %call5, i32 noundef %conv6, i32 noundef %conv7, i32 noundef %17, ptr noundef %primary_key4, ptr noundef %primary_key6, i32 noundef %19, i32 noundef %21, i32 noundef %23, ptr noundef %call13, ptr noundef %call16, i32 noundef %29, i32 noundef %31) #8
  %call17 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call17, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_hex_seq(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_neigh__update(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #10
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #10
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %family = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %family to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %family, align 4
  %__data_loc_dev = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_dev, align 4
  %and = and i32 %5, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %lladdr = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 3
  %lladdr_len = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %lladdr_len to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %lladdr_len, align 4
  %conv = zext i8 %7 to i32
  %call1 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %lladdr, i32 noundef %conv, i1 noundef zeroext true) #8
  %flags2 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %flags2 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %flags2, align 1
  %conv3 = zext i8 %9 to i32
  %nud_state = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %nud_state to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %nud_state, align 2
  %conv4 = zext i8 %11 to i32
  %call5 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv4, ptr noundef nonnull @trace_raw_output_neigh__update.symbols) #8
  %type = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %type to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %type, align 1
  %conv6 = zext i8 %13 to i32
  %dead = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 8
  %14 = ptrtoint ptr %dead to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %dead, align 4
  %conv7 = zext i8 %15 to i32
  %refcnt = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 9
  %16 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %refcnt, align 4
  %primary_key4 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 10
  %primary_key6 = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 11
  %confirmed = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 12
  %18 = ptrtoint ptr %confirmed to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %confirmed, align 4
  %updated = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 13
  %20 = ptrtoint ptr %updated to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %updated, align 4
  %used = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 14
  %22 = ptrtoint ptr %used to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %used, align 4
  %err = getelementptr inbounds %struct.trace_event_raw_neigh__update, ptr %1, i32 0, i32 15
  %24 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %err, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.265, i32 noundef %3, ptr noundef %add.ptr, ptr noundef %call1, i32 noundef %conv3, ptr noundef %call5, i32 noundef %conv6, i32 noundef %conv7, i32 noundef %17, ptr noundef %primary_key4, ptr noundef %primary_key6, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25) #8
  %call10 = tail call i32 @trace_handle_return(ptr noundef %seq) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #7

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #8

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #9 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 454)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #9 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 454)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nounwind readonly }
attributes #4 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #5 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #8 = { nounwind }
attributes #9 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #10 = { nomerge }
attributes #11 = { nobuiltin nounwind }
attributes #12 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !48, !49, !50, !52, !53, !54, !56, !57, !58, !60, !61, !62, !64, !65, !66, !68, !69, !70, !72, !73, !74, !76, !77, !78, !80, !81, !82, !84, !85, !86, !88, !89, !90, !92, !93, !94, !96, !97, !98, !100, !101, !102, !104, !105, !106, !108, !109, !110, !112, !113, !114, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !129, !130, !131, !132, !133, !134, !135, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !183, !184, !185, !186, !187, !188, !189, !191, !192, !193, !195, !196, !197, !199, !200, !201, !203, !204, !205, !207, !208, !209, !210, !211, !212, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !287, !288, !289, !290, !291, !292, !293, !295, !296, !297, !299, !300, !301, !303, !304, !305, !307, !308, !309, !311, !312, !313, !315, !316, !317, !319, !320, !321, !323, !324, !325, !327, !328, !329, !330, !331, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !359, !360, !361, !362, !363, !364, !365, !367, !368, !369, !371, !372, !373, !375, !376, !377, !379, !380, !381, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !407, !408, !409, !411, !412, !413, !415, !416, !417, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !439, !440, !441, !443, !444, !445, !447, !448, !449, !451, !452, !453, !455, !456, !457, !459, !460, !461, !463, !464, !465, !467, !468, !469, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !499, !500, !501, !502, !503, !504, !505, !506, !507, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !554, !555, !556, !558, !559, !560, !562, !563, !564, !566, !567, !568, !570, !571, !572, !574, !575, !576, !578, !579, !580, !581, !582, !583, !584, !585, !586, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !607, !608, !609, !611, !612, !613, !615, !616, !617, !619, !620, !621, !623, !624, !625, !627, !628, !629, !631, !632, !633, !635, !636, !637, !639, !640, !641, !643, !644, !645, !646, !647, !648, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051}
!llvm.named.register.sp = !{!1052}
!llvm.module.flags = !{!1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060}
!llvm.ident = !{!1061}

!0 = !{ptr @__tracepoint_kfree_skb, !1, !"__tracepoint_kfree_skb", i1 false, i1 false}
!1 = !{!"../include/trace/events/skb.h", i32 37, i32 1}
!2 = !{ptr @__tracepoint_ptr_kfree_skb, !1, !"__tracepoint_ptr_kfree_skb", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_kfree_skb, !1, !"__SCK__tp_func_kfree_skb", i1 false, i1 false}
!4 = !{ptr @__tracepoint_consume_skb, !5, !"__tracepoint_consume_skb", i1 false, i1 false}
!5 = !{!"../include/trace/events/skb.h", i32 64, i32 1}
!6 = !{ptr @__tracepoint_ptr_consume_skb, !5, !"__tracepoint_ptr_consume_skb", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_consume_skb, !5, !"__SCK__tp_func_consume_skb", i1 false, i1 false}
!8 = !{ptr @__tracepoint_skb_copy_datagram_iovec, !9, !"__tracepoint_skb_copy_datagram_iovec", i1 false, i1 false}
!9 = !{!"../include/trace/events/skb.h", i32 81, i32 1}
!10 = !{ptr @__tracepoint_ptr_skb_copy_datagram_iovec, !9, !"__tracepoint_ptr_skb_copy_datagram_iovec", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_skb_copy_datagram_iovec, !9, !"__SCK__tp_func_skb_copy_datagram_iovec", i1 false, i1 false}
!12 = !{ptr @.str, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../include/trace/events/skb.h", i32 27, i32 1}
!14 = !{ptr @__TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED, !13, !"__TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED", i1 false, i1 false}
!15 = !{ptr @TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED, !13, !"TRACE_SYSTEM_SKB_DROP_REASON_NOT_SPECIFIED", i1 false, i1 false}
!16 = !{ptr @.str.1, !13, !"<string literal>", i1 false, i1 false}
!17 = !{ptr @__TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET, !13, !"__TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET", i1 false, i1 false}
!18 = !{ptr @TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET, !13, !"TRACE_SYSTEM_SKB_DROP_REASON_NO_SOCKET", i1 false, i1 false}
!19 = !{ptr @.str.2, !13, !"<string literal>", i1 false, i1 false}
!20 = !{ptr @__TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL, !13, !"__TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL", i1 false, i1 false}
!21 = !{ptr @TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL, !13, !"TRACE_SYSTEM_SKB_DROP_REASON_PKT_TOO_SMALL", i1 false, i1 false}
!22 = !{ptr @.str.3, !13, !"<string literal>", i1 false, i1 false}
!23 = !{ptr @__TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM, !13, !"__TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM", i1 false, i1 false}
!24 = !{ptr @TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM, !13, !"TRACE_SYSTEM_SKB_DROP_REASON_TCP_CSUM", i1 false, i1 false}
!25 = !{ptr @.str.4, !13, !"<string literal>", i1 false, i1 false}
!26 = !{ptr @__TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER, !13, !"__TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER", i1 false, i1 false}
!27 = !{ptr @TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER, !13, !"TRACE_SYSTEM_SKB_DROP_REASON_SOCKET_FILTER", i1 false, i1 false}
!28 = !{ptr @.str.5, !13, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @__TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM, !13, !"__TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM", i1 false, i1 false}
!30 = !{ptr @TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM, !13, !"TRACE_SYSTEM_SKB_DROP_REASON_UDP_CSUM", i1 false, i1 false}
!31 = !{ptr @.str.6, !13, !"<string literal>", i1 false, i1 false}
!32 = !{ptr @__TRACE_SYSTEM_SKB_DROP_REASON_MAX, !13, !"__TRACE_SYSTEM_SKB_DROP_REASON_MAX", i1 false, i1 false}
!33 = !{ptr @TRACE_SYSTEM_SKB_DROP_REASON_MAX, !13, !"TRACE_SYSTEM_SKB_DROP_REASON_MAX", i1 false, i1 false}
!34 = !{ptr @event_class_kfree_skb, !1, !"event_class_kfree_skb", i1 false, i1 false}
!35 = !{ptr @event_kfree_skb, !1, !"event_kfree_skb", i1 false, i1 false}
!36 = !{ptr @__event_kfree_skb, !1, !"__event_kfree_skb", i1 false, i1 false}
!37 = !{ptr @event_class_consume_skb, !5, !"event_class_consume_skb", i1 false, i1 false}
!38 = !{ptr @event_consume_skb, !5, !"event_consume_skb", i1 false, i1 false}
!39 = !{ptr @__event_consume_skb, !5, !"__event_consume_skb", i1 false, i1 false}
!40 = !{ptr @event_class_skb_copy_datagram_iovec, !9, !"event_class_skb_copy_datagram_iovec", i1 false, i1 false}
!41 = !{ptr @event_skb_copy_datagram_iovec, !9, !"event_skb_copy_datagram_iovec", i1 false, i1 false}
!42 = !{ptr @__event_skb_copy_datagram_iovec, !9, !"__event_skb_copy_datagram_iovec", i1 false, i1 false}
!43 = !{ptr @__bpf_trace_tp_map_kfree_skb, !1, !"__bpf_trace_tp_map_kfree_skb", i1 false, i1 false}
!44 = !{ptr @__bpf_trace_tp_map_consume_skb, !5, !"__bpf_trace_tp_map_consume_skb", i1 false, i1 false}
!45 = !{ptr @__bpf_trace_tp_map_skb_copy_datagram_iovec, !9, !"__bpf_trace_tp_map_skb_copy_datagram_iovec", i1 false, i1 false}
!46 = !{ptr @__tracepoint_net_dev_start_xmit, !47, !"__tracepoint_net_dev_start_xmit", i1 false, i1 false}
!47 = !{!"../include/trace/events/net.h", i32 14, i32 1}
!48 = !{ptr @__tracepoint_ptr_net_dev_start_xmit, !47, !"__tracepoint_ptr_net_dev_start_xmit", i1 false, i1 false}
!49 = !{ptr @__SCK__tp_func_net_dev_start_xmit, !47, !"__SCK__tp_func_net_dev_start_xmit", i1 false, i1 false}
!50 = !{ptr @__tracepoint_net_dev_xmit, !51, !"__tracepoint_net_dev_xmit", i1 false, i1 false}
!51 = !{!"../include/trace/events/net.h", i32 71, i32 1}
!52 = !{ptr @__tracepoint_ptr_net_dev_xmit, !51, !"__tracepoint_ptr_net_dev_xmit", i1 false, i1 false}
!53 = !{ptr @__SCK__tp_func_net_dev_xmit, !51, !"__SCK__tp_func_net_dev_xmit", i1 false, i1 false}
!54 = !{ptr @__tracepoint_net_dev_xmit_timeout, !55, !"__tracepoint_net_dev_xmit_timeout", i1 false, i1 false}
!55 = !{!"../include/trace/events/net.h", i32 98, i32 1}
!56 = !{ptr @__tracepoint_ptr_net_dev_xmit_timeout, !55, !"__tracepoint_ptr_net_dev_xmit_timeout", i1 false, i1 false}
!57 = !{ptr @__SCK__tp_func_net_dev_xmit_timeout, !55, !"__SCK__tp_func_net_dev_xmit_timeout", i1 false, i1 false}
!58 = !{ptr @__tracepoint_net_dev_queue, !59, !"__tracepoint_net_dev_queue", i1 false, i1 false}
!59 = !{!"../include/trace/events/net.h", i32 143, i32 1}
!60 = !{ptr @__tracepoint_ptr_net_dev_queue, !59, !"__tracepoint_ptr_net_dev_queue", i1 false, i1 false}
!61 = !{ptr @__SCK__tp_func_net_dev_queue, !59, !"__SCK__tp_func_net_dev_queue", i1 false, i1 false}
!62 = !{ptr @__tracepoint_netif_receive_skb, !63, !"__tracepoint_netif_receive_skb", i1 false, i1 false}
!63 = !{!"../include/trace/events/net.h", i32 150, i32 1}
!64 = !{ptr @__tracepoint_ptr_netif_receive_skb, !63, !"__tracepoint_ptr_netif_receive_skb", i1 false, i1 false}
!65 = !{ptr @__SCK__tp_func_netif_receive_skb, !63, !"__SCK__tp_func_netif_receive_skb", i1 false, i1 false}
!66 = !{ptr @__tracepoint_netif_rx, !67, !"__tracepoint_netif_rx", i1 false, i1 false}
!67 = !{!"../include/trace/events/net.h", i32 157, i32 1}
!68 = !{ptr @__tracepoint_ptr_netif_rx, !67, !"__tracepoint_ptr_netif_rx", i1 false, i1 false}
!69 = !{ptr @__SCK__tp_func_netif_rx, !67, !"__SCK__tp_func_netif_rx", i1 false, i1 false}
!70 = !{ptr @__tracepoint_napi_gro_frags_entry, !71, !"__tracepoint_napi_gro_frags_entry", i1 false, i1 false}
!71 = !{!"../include/trace/events/net.h", i32 228, i32 1}
!72 = !{ptr @__tracepoint_ptr_napi_gro_frags_entry, !71, !"__tracepoint_ptr_napi_gro_frags_entry", i1 false, i1 false}
!73 = !{ptr @__SCK__tp_func_napi_gro_frags_entry, !71, !"__SCK__tp_func_napi_gro_frags_entry", i1 false, i1 false}
!74 = !{ptr @__tracepoint_napi_gro_receive_entry, !75, !"__tracepoint_napi_gro_receive_entry", i1 false, i1 false}
!75 = !{!"../include/trace/events/net.h", i32 235, i32 1}
!76 = !{ptr @__tracepoint_ptr_napi_gro_receive_entry, !75, !"__tracepoint_ptr_napi_gro_receive_entry", i1 false, i1 false}
!77 = !{ptr @__SCK__tp_func_napi_gro_receive_entry, !75, !"__SCK__tp_func_napi_gro_receive_entry", i1 false, i1 false}
!78 = !{ptr @__tracepoint_netif_receive_skb_entry, !79, !"__tracepoint_netif_receive_skb_entry", i1 false, i1 false}
!79 = !{!"../include/trace/events/net.h", i32 242, i32 1}
!80 = !{ptr @__tracepoint_ptr_netif_receive_skb_entry, !79, !"__tracepoint_ptr_netif_receive_skb_entry", i1 false, i1 false}
!81 = !{ptr @__SCK__tp_func_netif_receive_skb_entry, !79, !"__SCK__tp_func_netif_receive_skb_entry", i1 false, i1 false}
!82 = !{ptr @__tracepoint_netif_receive_skb_list_entry, !83, !"__tracepoint_netif_receive_skb_list_entry", i1 false, i1 false}
!83 = !{!"../include/trace/events/net.h", i32 249, i32 1}
!84 = !{ptr @__tracepoint_ptr_netif_receive_skb_list_entry, !83, !"__tracepoint_ptr_netif_receive_skb_list_entry", i1 false, i1 false}
!85 = !{ptr @__SCK__tp_func_netif_receive_skb_list_entry, !83, !"__SCK__tp_func_netif_receive_skb_list_entry", i1 false, i1 false}
!86 = !{ptr @__tracepoint_netif_rx_entry, !87, !"__tracepoint_netif_rx_entry", i1 false, i1 false}
!87 = !{!"../include/trace/events/net.h", i32 256, i32 1}
!88 = !{ptr @__tracepoint_ptr_netif_rx_entry, !87, !"__tracepoint_ptr_netif_rx_entry", i1 false, i1 false}
!89 = !{ptr @__SCK__tp_func_netif_rx_entry, !87, !"__SCK__tp_func_netif_rx_entry", i1 false, i1 false}
!90 = !{ptr @__tracepoint_netif_rx_ni_entry, !91, !"__tracepoint_netif_rx_ni_entry", i1 false, i1 false}
!91 = !{!"../include/trace/events/net.h", i32 263, i32 1}
!92 = !{ptr @__tracepoint_ptr_netif_rx_ni_entry, !91, !"__tracepoint_ptr_netif_rx_ni_entry", i1 false, i1 false}
!93 = !{ptr @__SCK__tp_func_netif_rx_ni_entry, !91, !"__SCK__tp_func_netif_rx_ni_entry", i1 false, i1 false}
!94 = !{ptr @__tracepoint_napi_gro_frags_exit, !95, !"__tracepoint_napi_gro_frags_exit", i1 false, i1 false}
!95 = !{!"../include/trace/events/net.h", i32 287, i32 1}
!96 = !{ptr @__tracepoint_ptr_napi_gro_frags_exit, !95, !"__tracepoint_ptr_napi_gro_frags_exit", i1 false, i1 false}
!97 = !{ptr @__SCK__tp_func_napi_gro_frags_exit, !95, !"__SCK__tp_func_napi_gro_frags_exit", i1 false, i1 false}
!98 = !{ptr @__tracepoint_napi_gro_receive_exit, !99, !"__tracepoint_napi_gro_receive_exit", i1 false, i1 false}
!99 = !{!"../include/trace/events/net.h", i32 294, i32 1}
!100 = !{ptr @__tracepoint_ptr_napi_gro_receive_exit, !99, !"__tracepoint_ptr_napi_gro_receive_exit", i1 false, i1 false}
!101 = !{ptr @__SCK__tp_func_napi_gro_receive_exit, !99, !"__SCK__tp_func_napi_gro_receive_exit", i1 false, i1 false}
!102 = !{ptr @__tracepoint_netif_receive_skb_exit, !103, !"__tracepoint_netif_receive_skb_exit", i1 false, i1 false}
!103 = !{!"../include/trace/events/net.h", i32 301, i32 1}
!104 = !{ptr @__tracepoint_ptr_netif_receive_skb_exit, !103, !"__tracepoint_ptr_netif_receive_skb_exit", i1 false, i1 false}
!105 = !{ptr @__SCK__tp_func_netif_receive_skb_exit, !103, !"__SCK__tp_func_netif_receive_skb_exit", i1 false, i1 false}
!106 = !{ptr @__tracepoint_netif_rx_exit, !107, !"__tracepoint_netif_rx_exit", i1 false, i1 false}
!107 = !{!"../include/trace/events/net.h", i32 308, i32 1}
!108 = !{ptr @__tracepoint_ptr_netif_rx_exit, !107, !"__tracepoint_ptr_netif_rx_exit", i1 false, i1 false}
!109 = !{ptr @__SCK__tp_func_netif_rx_exit, !107, !"__SCK__tp_func_netif_rx_exit", i1 false, i1 false}
!110 = !{ptr @__tracepoint_netif_rx_ni_exit, !111, !"__tracepoint_netif_rx_ni_exit", i1 false, i1 false}
!111 = !{!"../include/trace/events/net.h", i32 315, i32 1}
!112 = !{ptr @__tracepoint_ptr_netif_rx_ni_exit, !111, !"__tracepoint_ptr_netif_rx_ni_exit", i1 false, i1 false}
!113 = !{ptr @__SCK__tp_func_netif_rx_ni_exit, !111, !"__SCK__tp_func_netif_rx_ni_exit", i1 false, i1 false}
!114 = !{ptr @__tracepoint_netif_receive_skb_list_exit, !115, !"__tracepoint_netif_receive_skb_list_exit", i1 false, i1 false}
!115 = !{!"../include/trace/events/net.h", i32 322, i32 1}
!116 = !{ptr @__tracepoint_ptr_netif_receive_skb_list_exit, !115, !"__tracepoint_ptr_netif_receive_skb_list_exit", i1 false, i1 false}
!117 = !{ptr @__SCK__tp_func_netif_receive_skb_list_exit, !115, !"__SCK__tp_func_netif_receive_skb_list_exit", i1 false, i1 false}
!118 = !{ptr @event_class_net_dev_start_xmit, !47, !"event_class_net_dev_start_xmit", i1 false, i1 false}
!119 = !{ptr @event_net_dev_start_xmit, !47, !"event_net_dev_start_xmit", i1 false, i1 false}
!120 = !{ptr @__event_net_dev_start_xmit, !47, !"__event_net_dev_start_xmit", i1 false, i1 false}
!121 = !{ptr @event_class_net_dev_xmit, !51, !"event_class_net_dev_xmit", i1 false, i1 false}
!122 = !{ptr @event_net_dev_xmit, !51, !"event_net_dev_xmit", i1 false, i1 false}
!123 = !{ptr @__event_net_dev_xmit, !51, !"__event_net_dev_xmit", i1 false, i1 false}
!124 = !{ptr @event_class_net_dev_xmit_timeout, !55, !"event_class_net_dev_xmit_timeout", i1 false, i1 false}
!125 = !{ptr @event_net_dev_xmit_timeout, !55, !"event_net_dev_xmit_timeout", i1 false, i1 false}
!126 = !{ptr @__event_net_dev_xmit_timeout, !55, !"__event_net_dev_xmit_timeout", i1 false, i1 false}
!127 = !{ptr @event_class_net_dev_template, !128, !"event_class_net_dev_template", i1 false, i1 false}
!128 = !{!"../include/trace/events/net.h", i32 121, i32 1}
!129 = !{ptr @event_net_dev_queue, !59, !"event_net_dev_queue", i1 false, i1 false}
!130 = !{ptr @__event_net_dev_queue, !59, !"__event_net_dev_queue", i1 false, i1 false}
!131 = !{ptr @event_netif_receive_skb, !63, !"event_netif_receive_skb", i1 false, i1 false}
!132 = !{ptr @__event_netif_receive_skb, !63, !"__event_netif_receive_skb", i1 false, i1 false}
!133 = !{ptr @event_netif_rx, !67, !"event_netif_rx", i1 false, i1 false}
!134 = !{ptr @__event_netif_rx, !67, !"__event_netif_rx", i1 false, i1 false}
!135 = !{ptr @event_class_net_dev_rx_verbose_template, !136, !"event_class_net_dev_rx_verbose_template", i1 false, i1 false}
!136 = !{!"../include/trace/events/net.h", i32 164, i32 1}
!137 = !{ptr @event_napi_gro_frags_entry, !71, !"event_napi_gro_frags_entry", i1 false, i1 false}
!138 = !{ptr @__event_napi_gro_frags_entry, !71, !"__event_napi_gro_frags_entry", i1 false, i1 false}
!139 = !{ptr @event_napi_gro_receive_entry, !75, !"event_napi_gro_receive_entry", i1 false, i1 false}
!140 = !{ptr @__event_napi_gro_receive_entry, !75, !"__event_napi_gro_receive_entry", i1 false, i1 false}
!141 = !{ptr @event_netif_receive_skb_entry, !79, !"event_netif_receive_skb_entry", i1 false, i1 false}
!142 = !{ptr @__event_netif_receive_skb_entry, !79, !"__event_netif_receive_skb_entry", i1 false, i1 false}
!143 = !{ptr @event_netif_receive_skb_list_entry, !83, !"event_netif_receive_skb_list_entry", i1 false, i1 false}
!144 = !{ptr @__event_netif_receive_skb_list_entry, !83, !"__event_netif_receive_skb_list_entry", i1 false, i1 false}
!145 = !{ptr @event_netif_rx_entry, !87, !"event_netif_rx_entry", i1 false, i1 false}
!146 = !{ptr @__event_netif_rx_entry, !87, !"__event_netif_rx_entry", i1 false, i1 false}
!147 = !{ptr @event_netif_rx_ni_entry, !91, !"event_netif_rx_ni_entry", i1 false, i1 false}
!148 = !{ptr @__event_netif_rx_ni_entry, !91, !"__event_netif_rx_ni_entry", i1 false, i1 false}
!149 = !{ptr @event_class_net_dev_rx_exit_template, !150, !"event_class_net_dev_rx_exit_template", i1 false, i1 false}
!150 = !{!"../include/trace/events/net.h", i32 270, i32 1}
!151 = !{ptr @event_napi_gro_frags_exit, !95, !"event_napi_gro_frags_exit", i1 false, i1 false}
!152 = !{ptr @__event_napi_gro_frags_exit, !95, !"__event_napi_gro_frags_exit", i1 false, i1 false}
!153 = !{ptr @event_napi_gro_receive_exit, !99, !"event_napi_gro_receive_exit", i1 false, i1 false}
!154 = !{ptr @__event_napi_gro_receive_exit, !99, !"__event_napi_gro_receive_exit", i1 false, i1 false}
!155 = !{ptr @event_netif_receive_skb_exit, !103, !"event_netif_receive_skb_exit", i1 false, i1 false}
!156 = !{ptr @__event_netif_receive_skb_exit, !103, !"__event_netif_receive_skb_exit", i1 false, i1 false}
!157 = !{ptr @event_netif_rx_exit, !107, !"event_netif_rx_exit", i1 false, i1 false}
!158 = !{ptr @__event_netif_rx_exit, !107, !"__event_netif_rx_exit", i1 false, i1 false}
!159 = !{ptr @event_netif_rx_ni_exit, !111, !"event_netif_rx_ni_exit", i1 false, i1 false}
!160 = !{ptr @__event_netif_rx_ni_exit, !111, !"__event_netif_rx_ni_exit", i1 false, i1 false}
!161 = !{ptr @event_netif_receive_skb_list_exit, !115, !"event_netif_receive_skb_list_exit", i1 false, i1 false}
!162 = !{ptr @__event_netif_receive_skb_list_exit, !115, !"__event_netif_receive_skb_list_exit", i1 false, i1 false}
!163 = !{ptr @__bpf_trace_tp_map_net_dev_start_xmit, !47, !"__bpf_trace_tp_map_net_dev_start_xmit", i1 false, i1 false}
!164 = !{ptr @__bpf_trace_tp_map_net_dev_xmit, !51, !"__bpf_trace_tp_map_net_dev_xmit", i1 false, i1 false}
!165 = !{ptr @__bpf_trace_tp_map_net_dev_xmit_timeout, !55, !"__bpf_trace_tp_map_net_dev_xmit_timeout", i1 false, i1 false}
!166 = !{ptr @__bpf_trace_tp_map_net_dev_queue, !59, !"__bpf_trace_tp_map_net_dev_queue", i1 false, i1 false}
!167 = !{ptr @__bpf_trace_tp_map_netif_receive_skb, !63, !"__bpf_trace_tp_map_netif_receive_skb", i1 false, i1 false}
!168 = !{ptr @__bpf_trace_tp_map_netif_rx, !67, !"__bpf_trace_tp_map_netif_rx", i1 false, i1 false}
!169 = !{ptr @__bpf_trace_tp_map_napi_gro_frags_entry, !71, !"__bpf_trace_tp_map_napi_gro_frags_entry", i1 false, i1 false}
!170 = !{ptr @__bpf_trace_tp_map_napi_gro_receive_entry, !75, !"__bpf_trace_tp_map_napi_gro_receive_entry", i1 false, i1 false}
!171 = !{ptr @__bpf_trace_tp_map_netif_receive_skb_entry, !79, !"__bpf_trace_tp_map_netif_receive_skb_entry", i1 false, i1 false}
!172 = !{ptr @__bpf_trace_tp_map_netif_receive_skb_list_entry, !83, !"__bpf_trace_tp_map_netif_receive_skb_list_entry", i1 false, i1 false}
!173 = !{ptr @__bpf_trace_tp_map_netif_rx_entry, !87, !"__bpf_trace_tp_map_netif_rx_entry", i1 false, i1 false}
!174 = !{ptr @__bpf_trace_tp_map_netif_rx_ni_entry, !91, !"__bpf_trace_tp_map_netif_rx_ni_entry", i1 false, i1 false}
!175 = !{ptr @__bpf_trace_tp_map_napi_gro_frags_exit, !95, !"__bpf_trace_tp_map_napi_gro_frags_exit", i1 false, i1 false}
!176 = !{ptr @__bpf_trace_tp_map_napi_gro_receive_exit, !99, !"__bpf_trace_tp_map_napi_gro_receive_exit", i1 false, i1 false}
!177 = !{ptr @__bpf_trace_tp_map_netif_receive_skb_exit, !103, !"__bpf_trace_tp_map_netif_receive_skb_exit", i1 false, i1 false}
!178 = !{ptr @__bpf_trace_tp_map_netif_rx_exit, !107, !"__bpf_trace_tp_map_netif_rx_exit", i1 false, i1 false}
!179 = !{ptr @__bpf_trace_tp_map_netif_rx_ni_exit, !111, !"__bpf_trace_tp_map_netif_rx_ni_exit", i1 false, i1 false}
!180 = !{ptr @__bpf_trace_tp_map_netif_receive_skb_list_exit, !115, !"__bpf_trace_tp_map_netif_receive_skb_list_exit", i1 false, i1 false}
!181 = !{ptr @__tracepoint_napi_poll, !182, !"__tracepoint_napi_poll", i1 false, i1 false}
!182 = !{!"../include/trace/events/napi.h", i32 14, i32 1}
!183 = !{ptr @__tracepoint_ptr_napi_poll, !182, !"__tracepoint_ptr_napi_poll", i1 false, i1 false}
!184 = !{ptr @__SCK__tp_func_napi_poll, !182, !"__SCK__tp_func_napi_poll", i1 false, i1 false}
!185 = !{ptr @event_class_napi_poll, !182, !"event_class_napi_poll", i1 false, i1 false}
!186 = !{ptr @event_napi_poll, !182, !"event_napi_poll", i1 false, i1 false}
!187 = !{ptr @__event_napi_poll, !182, !"__event_napi_poll", i1 false, i1 false}
!188 = !{ptr @__bpf_trace_tp_map_napi_poll, !182, !"__bpf_trace_tp_map_napi_poll", i1 false, i1 false}
!189 = !{ptr @__tracepoint_sock_rcvqueue_full, !190, !"__tracepoint_sock_rcvqueue_full", i1 false, i1 false}
!190 = !{!"../include/trace/events/sock.h", i32 71, i32 1}
!191 = !{ptr @__tracepoint_ptr_sock_rcvqueue_full, !190, !"__tracepoint_ptr_sock_rcvqueue_full", i1 false, i1 false}
!192 = !{ptr @__SCK__tp_func_sock_rcvqueue_full, !190, !"__SCK__tp_func_sock_rcvqueue_full", i1 false, i1 false}
!193 = !{ptr @__tracepoint_sock_exceed_buf_limit, !194, !"__tracepoint_sock_exceed_buf_limit", i1 false, i1 false}
!194 = !{!"../include/trace/events/sock.h", i32 93, i32 1}
!195 = !{ptr @__tracepoint_ptr_sock_exceed_buf_limit, !194, !"__tracepoint_ptr_sock_exceed_buf_limit", i1 false, i1 false}
!196 = !{ptr @__SCK__tp_func_sock_exceed_buf_limit, !194, !"__SCK__tp_func_sock_exceed_buf_limit", i1 false, i1 false}
!197 = !{ptr @__tracepoint_inet_sock_set_state, !198, !"__tracepoint_inet_sock_set_state", i1 false, i1 false}
!198 = !{!"../include/trace/events/sock.h", i32 138, i32 1}
!199 = !{ptr @__tracepoint_ptr_inet_sock_set_state, !198, !"__tracepoint_ptr_inet_sock_set_state", i1 false, i1 false}
!200 = !{ptr @__SCK__tp_func_inet_sock_set_state, !198, !"__SCK__tp_func_inet_sock_set_state", i1 false, i1 false}
!201 = !{ptr @__tracepoint_inet_sk_error_report, !202, !"__tracepoint_inet_sk_error_report", i1 false, i1 false}
!202 = !{!"../include/trace/events/sock.h", i32 204, i32 1}
!203 = !{ptr @__tracepoint_ptr_inet_sk_error_report, !202, !"__tracepoint_ptr_inet_sk_error_report", i1 false, i1 false}
!204 = !{ptr @__SCK__tp_func_inet_sk_error_report, !202, !"__SCK__tp_func_inet_sk_error_report", i1 false, i1 false}
!205 = !{ptr @.str.7, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../include/trace/events/sock.h", i32 49, i32 1}
!207 = !{ptr @__TRACE_SYSTEM_2, !206, !"__TRACE_SYSTEM_2", i1 false, i1 false}
!208 = !{ptr @TRACE_SYSTEM_2, !206, !"TRACE_SYSTEM_2", i1 false, i1 false}
!209 = !{ptr @.str.8, !206, !"<string literal>", i1 false, i1 false}
!210 = !{ptr @__TRACE_SYSTEM_10, !206, !"__TRACE_SYSTEM_10", i1 false, i1 false}
!211 = !{ptr @TRACE_SYSTEM_10, !206, !"TRACE_SYSTEM_10", i1 false, i1 false}
!212 = !{ptr @.str.9, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../include/trace/events/sock.h", i32 50, i32 1}
!214 = !{ptr @__TRACE_SYSTEM_IPPROTO_TCP, !213, !"__TRACE_SYSTEM_IPPROTO_TCP", i1 false, i1 false}
!215 = !{ptr @TRACE_SYSTEM_IPPROTO_TCP, !213, !"TRACE_SYSTEM_IPPROTO_TCP", i1 false, i1 false}
!216 = !{ptr @.str.10, !213, !"<string literal>", i1 false, i1 false}
!217 = !{ptr @__TRACE_SYSTEM_IPPROTO_DCCP, !213, !"__TRACE_SYSTEM_IPPROTO_DCCP", i1 false, i1 false}
!218 = !{ptr @TRACE_SYSTEM_IPPROTO_DCCP, !213, !"TRACE_SYSTEM_IPPROTO_DCCP", i1 false, i1 false}
!219 = !{ptr @.str.11, !213, !"<string literal>", i1 false, i1 false}
!220 = !{ptr @__TRACE_SYSTEM_IPPROTO_SCTP, !213, !"__TRACE_SYSTEM_IPPROTO_SCTP", i1 false, i1 false}
!221 = !{ptr @TRACE_SYSTEM_IPPROTO_SCTP, !213, !"TRACE_SYSTEM_IPPROTO_SCTP", i1 false, i1 false}
!222 = !{ptr @.str.12, !213, !"<string literal>", i1 false, i1 false}
!223 = !{ptr @__TRACE_SYSTEM_IPPROTO_MPTCP, !213, !"__TRACE_SYSTEM_IPPROTO_MPTCP", i1 false, i1 false}
!224 = !{ptr @TRACE_SYSTEM_IPPROTO_MPTCP, !213, !"TRACE_SYSTEM_IPPROTO_MPTCP", i1 false, i1 false}
!225 = !{ptr @.str.13, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../include/trace/events/sock.h", i32 51, i32 1}
!227 = !{ptr @__TRACE_SYSTEM_TCP_ESTABLISHED, !226, !"__TRACE_SYSTEM_TCP_ESTABLISHED", i1 false, i1 false}
!228 = !{ptr @TRACE_SYSTEM_TCP_ESTABLISHED, !226, !"TRACE_SYSTEM_TCP_ESTABLISHED", i1 false, i1 false}
!229 = !{ptr @.str.14, !226, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @__TRACE_SYSTEM_TCP_SYN_SENT, !226, !"__TRACE_SYSTEM_TCP_SYN_SENT", i1 false, i1 false}
!231 = !{ptr @TRACE_SYSTEM_TCP_SYN_SENT, !226, !"TRACE_SYSTEM_TCP_SYN_SENT", i1 false, i1 false}
!232 = !{ptr @.str.15, !226, !"<string literal>", i1 false, i1 false}
!233 = !{ptr @__TRACE_SYSTEM_TCP_SYN_RECV, !226, !"__TRACE_SYSTEM_TCP_SYN_RECV", i1 false, i1 false}
!234 = !{ptr @TRACE_SYSTEM_TCP_SYN_RECV, !226, !"TRACE_SYSTEM_TCP_SYN_RECV", i1 false, i1 false}
!235 = !{ptr @.str.16, !226, !"<string literal>", i1 false, i1 false}
!236 = !{ptr @__TRACE_SYSTEM_TCP_FIN_WAIT1, !226, !"__TRACE_SYSTEM_TCP_FIN_WAIT1", i1 false, i1 false}
!237 = !{ptr @TRACE_SYSTEM_TCP_FIN_WAIT1, !226, !"TRACE_SYSTEM_TCP_FIN_WAIT1", i1 false, i1 false}
!238 = !{ptr @.str.17, !226, !"<string literal>", i1 false, i1 false}
!239 = !{ptr @__TRACE_SYSTEM_TCP_FIN_WAIT2, !226, !"__TRACE_SYSTEM_TCP_FIN_WAIT2", i1 false, i1 false}
!240 = !{ptr @TRACE_SYSTEM_TCP_FIN_WAIT2, !226, !"TRACE_SYSTEM_TCP_FIN_WAIT2", i1 false, i1 false}
!241 = !{ptr @.str.18, !226, !"<string literal>", i1 false, i1 false}
!242 = !{ptr @__TRACE_SYSTEM_TCP_TIME_WAIT, !226, !"__TRACE_SYSTEM_TCP_TIME_WAIT", i1 false, i1 false}
!243 = !{ptr @TRACE_SYSTEM_TCP_TIME_WAIT, !226, !"TRACE_SYSTEM_TCP_TIME_WAIT", i1 false, i1 false}
!244 = !{ptr @.str.19, !226, !"<string literal>", i1 false, i1 false}
!245 = !{ptr @__TRACE_SYSTEM_TCP_CLOSE, !226, !"__TRACE_SYSTEM_TCP_CLOSE", i1 false, i1 false}
!246 = !{ptr @TRACE_SYSTEM_TCP_CLOSE, !226, !"TRACE_SYSTEM_TCP_CLOSE", i1 false, i1 false}
!247 = !{ptr @.str.20, !226, !"<string literal>", i1 false, i1 false}
!248 = !{ptr @__TRACE_SYSTEM_TCP_CLOSE_WAIT, !226, !"__TRACE_SYSTEM_TCP_CLOSE_WAIT", i1 false, i1 false}
!249 = !{ptr @TRACE_SYSTEM_TCP_CLOSE_WAIT, !226, !"TRACE_SYSTEM_TCP_CLOSE_WAIT", i1 false, i1 false}
!250 = !{ptr @.str.21, !226, !"<string literal>", i1 false, i1 false}
!251 = !{ptr @__TRACE_SYSTEM_TCP_LAST_ACK, !226, !"__TRACE_SYSTEM_TCP_LAST_ACK", i1 false, i1 false}
!252 = !{ptr @TRACE_SYSTEM_TCP_LAST_ACK, !226, !"TRACE_SYSTEM_TCP_LAST_ACK", i1 false, i1 false}
!253 = !{ptr @.str.22, !226, !"<string literal>", i1 false, i1 false}
!254 = !{ptr @__TRACE_SYSTEM_TCP_LISTEN, !226, !"__TRACE_SYSTEM_TCP_LISTEN", i1 false, i1 false}
!255 = !{ptr @TRACE_SYSTEM_TCP_LISTEN, !226, !"TRACE_SYSTEM_TCP_LISTEN", i1 false, i1 false}
!256 = !{ptr @.str.23, !226, !"<string literal>", i1 false, i1 false}
!257 = !{ptr @__TRACE_SYSTEM_TCP_CLOSING, !226, !"__TRACE_SYSTEM_TCP_CLOSING", i1 false, i1 false}
!258 = !{ptr @TRACE_SYSTEM_TCP_CLOSING, !226, !"TRACE_SYSTEM_TCP_CLOSING", i1 false, i1 false}
!259 = !{ptr @.str.24, !226, !"<string literal>", i1 false, i1 false}
!260 = !{ptr @__TRACE_SYSTEM_TCP_NEW_SYN_RECV, !226, !"__TRACE_SYSTEM_TCP_NEW_SYN_RECV", i1 false, i1 false}
!261 = !{ptr @TRACE_SYSTEM_TCP_NEW_SYN_RECV, !226, !"TRACE_SYSTEM_TCP_NEW_SYN_RECV", i1 false, i1 false}
!262 = !{ptr @.str.25, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../include/trace/events/sock.h", i32 52, i32 1}
!264 = !{ptr @__TRACE_SYSTEM_0, !263, !"__TRACE_SYSTEM_0", i1 false, i1 false}
!265 = !{ptr @TRACE_SYSTEM_0, !263, !"TRACE_SYSTEM_0", i1 false, i1 false}
!266 = !{ptr @.str.26, !263, !"<string literal>", i1 false, i1 false}
!267 = !{ptr @__TRACE_SYSTEM_1, !263, !"__TRACE_SYSTEM_1", i1 false, i1 false}
!268 = !{ptr @TRACE_SYSTEM_1, !263, !"TRACE_SYSTEM_1", i1 false, i1 false}
!269 = !{ptr @event_class_sock_rcvqueue_full, !190, !"event_class_sock_rcvqueue_full", i1 false, i1 false}
!270 = !{ptr @event_sock_rcvqueue_full, !190, !"event_sock_rcvqueue_full", i1 false, i1 false}
!271 = !{ptr @__event_sock_rcvqueue_full, !190, !"__event_sock_rcvqueue_full", i1 false, i1 false}
!272 = !{ptr @event_class_sock_exceed_buf_limit, !194, !"event_class_sock_exceed_buf_limit", i1 false, i1 false}
!273 = !{ptr @event_sock_exceed_buf_limit, !194, !"event_sock_exceed_buf_limit", i1 false, i1 false}
!274 = !{ptr @__event_sock_exceed_buf_limit, !194, !"__event_sock_exceed_buf_limit", i1 false, i1 false}
!275 = !{ptr @event_class_inet_sock_set_state, !198, !"event_class_inet_sock_set_state", i1 false, i1 false}
!276 = !{ptr @event_inet_sock_set_state, !198, !"event_inet_sock_set_state", i1 false, i1 false}
!277 = !{ptr @__event_inet_sock_set_state, !198, !"__event_inet_sock_set_state", i1 false, i1 false}
!278 = !{ptr @event_class_inet_sk_error_report, !202, !"event_class_inet_sk_error_report", i1 false, i1 false}
!279 = !{ptr @event_inet_sk_error_report, !202, !"event_inet_sk_error_report", i1 false, i1 false}
!280 = !{ptr @__event_inet_sk_error_report, !202, !"__event_inet_sk_error_report", i1 false, i1 false}
!281 = !{ptr @__bpf_trace_tp_map_sock_rcvqueue_full, !190, !"__bpf_trace_tp_map_sock_rcvqueue_full", i1 false, i1 false}
!282 = !{ptr @__bpf_trace_tp_map_sock_exceed_buf_limit, !194, !"__bpf_trace_tp_map_sock_exceed_buf_limit", i1 false, i1 false}
!283 = !{ptr @__bpf_trace_tp_map_inet_sock_set_state, !198, !"__bpf_trace_tp_map_inet_sock_set_state", i1 false, i1 false}
!284 = !{ptr @__bpf_trace_tp_map_inet_sk_error_report, !202, !"__bpf_trace_tp_map_inet_sk_error_report", i1 false, i1 false}
!285 = !{ptr @__tracepoint_udp_fail_queue_rcv_skb, !286, !"__tracepoint_udp_fail_queue_rcv_skb", i1 false, i1 false}
!286 = !{!"../include/trace/events/udp.h", i32 11, i32 1}
!287 = !{ptr @__tracepoint_ptr_udp_fail_queue_rcv_skb, !286, !"__tracepoint_ptr_udp_fail_queue_rcv_skb", i1 false, i1 false}
!288 = !{ptr @__SCK__tp_func_udp_fail_queue_rcv_skb, !286, !"__SCK__tp_func_udp_fail_queue_rcv_skb", i1 false, i1 false}
!289 = !{ptr @event_class_udp_fail_queue_rcv_skb, !286, !"event_class_udp_fail_queue_rcv_skb", i1 false, i1 false}
!290 = !{ptr @event_udp_fail_queue_rcv_skb, !286, !"event_udp_fail_queue_rcv_skb", i1 false, i1 false}
!291 = !{ptr @__event_udp_fail_queue_rcv_skb, !286, !"__event_udp_fail_queue_rcv_skb", i1 false, i1 false}
!292 = !{ptr @__bpf_trace_tp_map_udp_fail_queue_rcv_skb, !286, !"__bpf_trace_tp_map_udp_fail_queue_rcv_skb", i1 false, i1 false}
!293 = !{ptr @__tracepoint_tcp_retransmit_skb, !294, !"__tracepoint_tcp_retransmit_skb", i1 false, i1 false}
!294 = !{!"../include/trace/events/tcp.h", i32 98, i32 1}
!295 = !{ptr @__tracepoint_ptr_tcp_retransmit_skb, !294, !"__tracepoint_ptr_tcp_retransmit_skb", i1 false, i1 false}
!296 = !{ptr @__SCK__tp_func_tcp_retransmit_skb, !294, !"__SCK__tp_func_tcp_retransmit_skb", i1 false, i1 false}
!297 = !{ptr @__tracepoint_tcp_send_reset, !298, !"__tracepoint_tcp_send_reset", i1 false, i1 false}
!298 = !{!"../include/trace/events/tcp.h", i32 109, i32 1}
!299 = !{ptr @__tracepoint_ptr_tcp_send_reset, !298, !"__tracepoint_ptr_tcp_send_reset", i1 false, i1 false}
!300 = !{ptr @__SCK__tp_func_tcp_send_reset, !298, !"__SCK__tp_func_tcp_send_reset", i1 false, i1 false}
!301 = !{ptr @__tracepoint_tcp_receive_reset, !302, !"__tracepoint_tcp_receive_reset", i1 false, i1 false}
!302 = !{!"../include/trace/events/tcp.h", i32 169, i32 1}
!303 = !{ptr @__tracepoint_ptr_tcp_receive_reset, !302, !"__tracepoint_ptr_tcp_receive_reset", i1 false, i1 false}
!304 = !{ptr @__SCK__tp_func_tcp_receive_reset, !302, !"__SCK__tp_func_tcp_receive_reset", i1 false, i1 false}
!305 = !{ptr @__tracepoint_tcp_destroy_sock, !306, !"__tracepoint_tcp_destroy_sock", i1 false, i1 false}
!306 = !{!"../include/trace/events/tcp.h", i32 176, i32 1}
!307 = !{ptr @__tracepoint_ptr_tcp_destroy_sock, !306, !"__tracepoint_ptr_tcp_destroy_sock", i1 false, i1 false}
!308 = !{ptr @__SCK__tp_func_tcp_destroy_sock, !306, !"__SCK__tp_func_tcp_destroy_sock", i1 false, i1 false}
!309 = !{ptr @__tracepoint_tcp_rcv_space_adjust, !310, !"__tracepoint_tcp_rcv_space_adjust", i1 false, i1 false}
!310 = !{!"../include/trace/events/tcp.h", i32 183, i32 1}
!311 = !{ptr @__tracepoint_ptr_tcp_rcv_space_adjust, !310, !"__tracepoint_ptr_tcp_rcv_space_adjust", i1 false, i1 false}
!312 = !{ptr @__SCK__tp_func_tcp_rcv_space_adjust, !310, !"__SCK__tp_func_tcp_rcv_space_adjust", i1 false, i1 false}
!313 = !{ptr @__tracepoint_tcp_retransmit_synack, !314, !"__tracepoint_tcp_retransmit_synack", i1 false, i1 false}
!314 = !{!"../include/trace/events/tcp.h", i32 190, i32 1}
!315 = !{ptr @__tracepoint_ptr_tcp_retransmit_synack, !314, !"__tracepoint_ptr_tcp_retransmit_synack", i1 false, i1 false}
!316 = !{ptr @__SCK__tp_func_tcp_retransmit_synack, !314, !"__SCK__tp_func_tcp_retransmit_synack", i1 false, i1 false}
!317 = !{ptr @__tracepoint_tcp_probe, !318, !"__tracepoint_tcp_probe", i1 false, i1 false}
!318 = !{!"../include/trace/events/tcp.h", i32 238, i32 1}
!319 = !{ptr @__tracepoint_ptr_tcp_probe, !318, !"__tracepoint_ptr_tcp_probe", i1 false, i1 false}
!320 = !{ptr @__SCK__tp_func_tcp_probe, !318, !"__SCK__tp_func_tcp_probe", i1 false, i1 false}
!321 = !{ptr @__tracepoint_tcp_bad_csum, !322, !"__tracepoint_tcp_bad_csum", i1 false, i1 false}
!322 = !{!"../include/trace/events/tcp.h", i32 367, i32 1}
!323 = !{ptr @__tracepoint_ptr_tcp_bad_csum, !322, !"__tracepoint_ptr_tcp_bad_csum", i1 false, i1 false}
!324 = !{ptr @__SCK__tp_func_tcp_bad_csum, !322, !"__SCK__tp_func_tcp_bad_csum", i1 false, i1 false}
!325 = !{ptr @event_class_tcp_event_sk_skb, !326, !"event_class_tcp_event_sk_skb", i1 false, i1 false}
!326 = !{!"../include/trace/events/tcp.h", i32 50, i32 1}
!327 = !{ptr @event_tcp_retransmit_skb, !294, !"event_tcp_retransmit_skb", i1 false, i1 false}
!328 = !{ptr @__event_tcp_retransmit_skb, !294, !"__event_tcp_retransmit_skb", i1 false, i1 false}
!329 = !{ptr @event_tcp_send_reset, !298, !"event_tcp_send_reset", i1 false, i1 false}
!330 = !{ptr @__event_tcp_send_reset, !298, !"__event_tcp_send_reset", i1 false, i1 false}
!331 = !{ptr @event_class_tcp_event_sk, !332, !"event_class_tcp_event_sk", i1 false, i1 false}
!332 = !{!"../include/trace/events/tcp.h", i32 121, i32 1}
!333 = !{ptr @event_tcp_receive_reset, !302, !"event_tcp_receive_reset", i1 false, i1 false}
!334 = !{ptr @__event_tcp_receive_reset, !302, !"__event_tcp_receive_reset", i1 false, i1 false}
!335 = !{ptr @event_tcp_destroy_sock, !306, !"event_tcp_destroy_sock", i1 false, i1 false}
!336 = !{ptr @__event_tcp_destroy_sock, !306, !"__event_tcp_destroy_sock", i1 false, i1 false}
!337 = !{ptr @event_tcp_rcv_space_adjust, !310, !"event_tcp_rcv_space_adjust", i1 false, i1 false}
!338 = !{ptr @__event_tcp_rcv_space_adjust, !310, !"__event_tcp_rcv_space_adjust", i1 false, i1 false}
!339 = !{ptr @event_class_tcp_retransmit_synack, !314, !"event_class_tcp_retransmit_synack", i1 false, i1 false}
!340 = !{ptr @event_tcp_retransmit_synack, !314, !"event_tcp_retransmit_synack", i1 false, i1 false}
!341 = !{ptr @__event_tcp_retransmit_synack, !314, !"__event_tcp_retransmit_synack", i1 false, i1 false}
!342 = !{ptr @event_class_tcp_probe, !318, !"event_class_tcp_probe", i1 false, i1 false}
!343 = !{ptr @event_tcp_probe, !318, !"event_tcp_probe", i1 false, i1 false}
!344 = !{ptr @__event_tcp_probe, !318, !"__event_tcp_probe", i1 false, i1 false}
!345 = !{ptr @event_class_tcp_event_skb, !346, !"event_class_tcp_event_skb", i1 false, i1 false}
!346 = !{!"../include/trace/events/tcp.h", i32 343, i32 1}
!347 = !{ptr @event_tcp_bad_csum, !322, !"event_tcp_bad_csum", i1 false, i1 false}
!348 = !{ptr @__event_tcp_bad_csum, !322, !"__event_tcp_bad_csum", i1 false, i1 false}
!349 = !{ptr @__bpf_trace_tp_map_tcp_retransmit_skb, !294, !"__bpf_trace_tp_map_tcp_retransmit_skb", i1 false, i1 false}
!350 = !{ptr @__bpf_trace_tp_map_tcp_send_reset, !298, !"__bpf_trace_tp_map_tcp_send_reset", i1 false, i1 false}
!351 = !{ptr @__bpf_trace_tp_map_tcp_receive_reset, !302, !"__bpf_trace_tp_map_tcp_receive_reset", i1 false, i1 false}
!352 = !{ptr @__bpf_trace_tp_map_tcp_destroy_sock, !306, !"__bpf_trace_tp_map_tcp_destroy_sock", i1 false, i1 false}
!353 = !{ptr @__bpf_trace_tp_map_tcp_rcv_space_adjust, !310, !"__bpf_trace_tp_map_tcp_rcv_space_adjust", i1 false, i1 false}
!354 = !{ptr @__bpf_trace_tp_map_tcp_retransmit_synack, !314, !"__bpf_trace_tp_map_tcp_retransmit_synack", i1 false, i1 false}
!355 = !{ptr @__bpf_trace_tp_map_tcp_probe, !318, !"__bpf_trace_tp_map_tcp_probe", i1 false, i1 false}
!356 = !{ptr @__bpf_trace_tp_map_tcp_bad_csum, !322, !"__bpf_trace_tp_map_tcp_bad_csum", i1 false, i1 false}
!357 = !{ptr @__tracepoint_fib_table_lookup, !358, !"__tracepoint_fib_table_lookup", i1 false, i1 false}
!358 = !{!"../include/trace/events/fib.h", i32 13, i32 1}
!359 = !{ptr @__tracepoint_ptr_fib_table_lookup, !358, !"__tracepoint_ptr_fib_table_lookup", i1 false, i1 false}
!360 = !{ptr @__SCK__tp_func_fib_table_lookup, !358, !"__SCK__tp_func_fib_table_lookup", i1 false, i1 false}
!361 = !{ptr @event_class_fib_table_lookup, !358, !"event_class_fib_table_lookup", i1 false, i1 false}
!362 = !{ptr @event_fib_table_lookup, !358, !"event_fib_table_lookup", i1 false, i1 false}
!363 = !{ptr @__event_fib_table_lookup, !358, !"__event_fib_table_lookup", i1 false, i1 false}
!364 = !{ptr @__bpf_trace_tp_map_fib_table_lookup, !358, !"__bpf_trace_tp_map_fib_table_lookup", i1 false, i1 false}
!365 = !{ptr @__tracepoint_qdisc_dequeue, !366, !"__tracepoint_qdisc_dequeue", i1 false, i1 false}
!366 = !{!"../include/trace/events/qdisc.h", i32 14, i32 1}
!367 = !{ptr @__tracepoint_ptr_qdisc_dequeue, !366, !"__tracepoint_ptr_qdisc_dequeue", i1 false, i1 false}
!368 = !{ptr @__SCK__tp_func_qdisc_dequeue, !366, !"__SCK__tp_func_qdisc_dequeue", i1 false, i1 false}
!369 = !{ptr @__tracepoint_qdisc_enqueue, !370, !"__tracepoint_qdisc_enqueue", i1 false, i1 false}
!370 = !{!"../include/trace/events/qdisc.h", i32 49, i32 1}
!371 = !{ptr @__tracepoint_ptr_qdisc_enqueue, !370, !"__tracepoint_ptr_qdisc_enqueue", i1 false, i1 false}
!372 = !{ptr @__SCK__tp_func_qdisc_enqueue, !370, !"__SCK__tp_func_qdisc_enqueue", i1 false, i1 false}
!373 = !{ptr @__tracepoint_qdisc_reset, !374, !"__tracepoint_qdisc_reset", i1 false, i1 false}
!374 = !{!"../include/trace/events/qdisc.h", i32 77, i32 1}
!375 = !{ptr @__tracepoint_ptr_qdisc_reset, !374, !"__tracepoint_ptr_qdisc_reset", i1 false, i1 false}
!376 = !{ptr @__SCK__tp_func_qdisc_reset, !374, !"__SCK__tp_func_qdisc_reset", i1 false, i1 false}
!377 = !{ptr @__tracepoint_qdisc_destroy, !378, !"__tracepoint_qdisc_destroy", i1 false, i1 false}
!378 = !{!"../include/trace/events/qdisc.h", i32 102, i32 1}
!379 = !{ptr @__tracepoint_ptr_qdisc_destroy, !378, !"__tracepoint_ptr_qdisc_destroy", i1 false, i1 false}
!380 = !{ptr @__SCK__tp_func_qdisc_destroy, !378, !"__SCK__tp_func_qdisc_destroy", i1 false, i1 false}
!381 = !{ptr @__tracepoint_qdisc_create, !382, !"__tracepoint_qdisc_create", i1 false, i1 false}
!382 = !{!"../include/trace/events/qdisc.h", i32 127, i32 1}
!383 = !{ptr @__tracepoint_ptr_qdisc_create, !382, !"__tracepoint_ptr_qdisc_create", i1 false, i1 false}
!384 = !{ptr @__SCK__tp_func_qdisc_create, !382, !"__SCK__tp_func_qdisc_create", i1 false, i1 false}
!385 = !{ptr @event_class_qdisc_dequeue, !366, !"event_class_qdisc_dequeue", i1 false, i1 false}
!386 = !{ptr @event_qdisc_dequeue, !366, !"event_qdisc_dequeue", i1 false, i1 false}
!387 = !{ptr @__event_qdisc_dequeue, !366, !"__event_qdisc_dequeue", i1 false, i1 false}
!388 = !{ptr @event_class_qdisc_enqueue, !370, !"event_class_qdisc_enqueue", i1 false, i1 false}
!389 = !{ptr @event_qdisc_enqueue, !370, !"event_qdisc_enqueue", i1 false, i1 false}
!390 = !{ptr @__event_qdisc_enqueue, !370, !"__event_qdisc_enqueue", i1 false, i1 false}
!391 = !{ptr @event_class_qdisc_reset, !374, !"event_class_qdisc_reset", i1 false, i1 false}
!392 = !{ptr @event_qdisc_reset, !374, !"event_qdisc_reset", i1 false, i1 false}
!393 = !{ptr @__event_qdisc_reset, !374, !"__event_qdisc_reset", i1 false, i1 false}
!394 = !{ptr @event_class_qdisc_destroy, !378, !"event_class_qdisc_destroy", i1 false, i1 false}
!395 = !{ptr @event_qdisc_destroy, !378, !"event_qdisc_destroy", i1 false, i1 false}
!396 = !{ptr @__event_qdisc_destroy, !378, !"__event_qdisc_destroy", i1 false, i1 false}
!397 = !{ptr @event_class_qdisc_create, !382, !"event_class_qdisc_create", i1 false, i1 false}
!398 = !{ptr @event_qdisc_create, !382, !"event_qdisc_create", i1 false, i1 false}
!399 = !{ptr @__event_qdisc_create, !382, !"__event_qdisc_create", i1 false, i1 false}
!400 = !{ptr @__bpf_trace_tp_map_qdisc_dequeue, !366, !"__bpf_trace_tp_map_qdisc_dequeue", i1 false, i1 false}
!401 = !{ptr @__bpf_trace_tp_map_qdisc_enqueue, !370, !"__bpf_trace_tp_map_qdisc_enqueue", i1 false, i1 false}
!402 = !{ptr @__bpf_trace_tp_map_qdisc_reset, !374, !"__bpf_trace_tp_map_qdisc_reset", i1 false, i1 false}
!403 = !{ptr @__bpf_trace_tp_map_qdisc_destroy, !378, !"__bpf_trace_tp_map_qdisc_destroy", i1 false, i1 false}
!404 = !{ptr @__bpf_trace_tp_map_qdisc_create, !382, !"__bpf_trace_tp_map_qdisc_create", i1 false, i1 false}
!405 = !{ptr @__tracepoint_br_fdb_add, !406, !"__tracepoint_br_fdb_add", i1 false, i1 false}
!406 = !{!"../include/trace/events/bridge.h", i32 12, i32 1}
!407 = !{ptr @__tracepoint_ptr_br_fdb_add, !406, !"__tracepoint_ptr_br_fdb_add", i1 false, i1 false}
!408 = !{ptr @__SCK__tp_func_br_fdb_add, !406, !"__SCK__tp_func_br_fdb_add", i1 false, i1 false}
!409 = !{ptr @__tracepoint_br_fdb_external_learn_add, !410, !"__tracepoint_br_fdb_external_learn_add", i1 false, i1 false}
!410 = !{!"../include/trace/events/bridge.h", i32 42, i32 1}
!411 = !{ptr @__tracepoint_ptr_br_fdb_external_learn_add, !410, !"__tracepoint_ptr_br_fdb_external_learn_add", i1 false, i1 false}
!412 = !{ptr @__SCK__tp_func_br_fdb_external_learn_add, !410, !"__SCK__tp_func_br_fdb_external_learn_add", i1 false, i1 false}
!413 = !{ptr @__tracepoint_fdb_delete, !414, !"__tracepoint_fdb_delete", i1 false, i1 false}
!414 = !{!"../include/trace/events/bridge.h", i32 69, i32 1}
!415 = !{ptr @__tracepoint_ptr_fdb_delete, !414, !"__tracepoint_ptr_fdb_delete", i1 false, i1 false}
!416 = !{ptr @__SCK__tp_func_fdb_delete, !414, !"__SCK__tp_func_fdb_delete", i1 false, i1 false}
!417 = !{ptr @__tracepoint_br_fdb_update, !418, !"__tracepoint_br_fdb_update", i1 false, i1 false}
!418 = !{!"../include/trace/events/bridge.h", i32 95, i32 1}
!419 = !{ptr @__tracepoint_ptr_br_fdb_update, !418, !"__tracepoint_ptr_br_fdb_update", i1 false, i1 false}
!420 = !{ptr @__SCK__tp_func_br_fdb_update, !418, !"__SCK__tp_func_br_fdb_update", i1 false, i1 false}
!421 = !{ptr @event_class_br_fdb_add, !406, !"event_class_br_fdb_add", i1 false, i1 false}
!422 = !{ptr @event_br_fdb_add, !406, !"event_br_fdb_add", i1 false, i1 false}
!423 = !{ptr @__event_br_fdb_add, !406, !"__event_br_fdb_add", i1 false, i1 false}
!424 = !{ptr @event_class_br_fdb_external_learn_add, !410, !"event_class_br_fdb_external_learn_add", i1 false, i1 false}
!425 = !{ptr @event_br_fdb_external_learn_add, !410, !"event_br_fdb_external_learn_add", i1 false, i1 false}
!426 = !{ptr @__event_br_fdb_external_learn_add, !410, !"__event_br_fdb_external_learn_add", i1 false, i1 false}
!427 = !{ptr @event_class_fdb_delete, !414, !"event_class_fdb_delete", i1 false, i1 false}
!428 = !{ptr @event_fdb_delete, !414, !"event_fdb_delete", i1 false, i1 false}
!429 = !{ptr @__event_fdb_delete, !414, !"__event_fdb_delete", i1 false, i1 false}
!430 = !{ptr @event_class_br_fdb_update, !418, !"event_class_br_fdb_update", i1 false, i1 false}
!431 = !{ptr @event_br_fdb_update, !418, !"event_br_fdb_update", i1 false, i1 false}
!432 = !{ptr @__event_br_fdb_update, !418, !"__event_br_fdb_update", i1 false, i1 false}
!433 = !{ptr @__bpf_trace_tp_map_br_fdb_add, !406, !"__bpf_trace_tp_map_br_fdb_add", i1 false, i1 false}
!434 = !{ptr @__bpf_trace_tp_map_br_fdb_external_learn_add, !410, !"__bpf_trace_tp_map_br_fdb_external_learn_add", i1 false, i1 false}
!435 = !{ptr @__bpf_trace_tp_map_fdb_delete, !414, !"__bpf_trace_tp_map_fdb_delete", i1 false, i1 false}
!436 = !{ptr @__bpf_trace_tp_map_br_fdb_update, !418, !"__bpf_trace_tp_map_br_fdb_update", i1 false, i1 false}
!437 = !{ptr @__ksymtab___tracepoint_br_fdb_add, !438, !"__ksymtab___tracepoint_br_fdb_add", i1 false, i1 false}
!438 = !{!"../net/core/net-traces.c", i32 40, i32 1}
!439 = !{ptr @__ksymtab___traceiter_br_fdb_add, !438, !"__ksymtab___traceiter_br_fdb_add", i1 false, i1 false}
!440 = !{ptr @__ksymtab___SCK__tp_func_br_fdb_add, !438, !"__ksymtab___SCK__tp_func_br_fdb_add", i1 false, i1 false}
!441 = !{ptr @__ksymtab___tracepoint_br_fdb_external_learn_add, !442, !"__ksymtab___tracepoint_br_fdb_external_learn_add", i1 false, i1 false}
!442 = !{!"../net/core/net-traces.c", i32 41, i32 1}
!443 = !{ptr @__ksymtab___traceiter_br_fdb_external_learn_add, !442, !"__ksymtab___traceiter_br_fdb_external_learn_add", i1 false, i1 false}
!444 = !{ptr @__ksymtab___SCK__tp_func_br_fdb_external_learn_add, !442, !"__ksymtab___SCK__tp_func_br_fdb_external_learn_add", i1 false, i1 false}
!445 = !{ptr @__ksymtab___tracepoint_fdb_delete, !446, !"__ksymtab___tracepoint_fdb_delete", i1 false, i1 false}
!446 = !{!"../net/core/net-traces.c", i32 42, i32 1}
!447 = !{ptr @__ksymtab___traceiter_fdb_delete, !446, !"__ksymtab___traceiter_fdb_delete", i1 false, i1 false}
!448 = !{ptr @__ksymtab___SCK__tp_func_fdb_delete, !446, !"__ksymtab___SCK__tp_func_fdb_delete", i1 false, i1 false}
!449 = !{ptr @__ksymtab___tracepoint_br_fdb_update, !450, !"__ksymtab___tracepoint_br_fdb_update", i1 false, i1 false}
!450 = !{!"../net/core/net-traces.c", i32 43, i32 1}
!451 = !{ptr @__ksymtab___traceiter_br_fdb_update, !450, !"__ksymtab___traceiter_br_fdb_update", i1 false, i1 false}
!452 = !{ptr @__ksymtab___SCK__tp_func_br_fdb_update, !450, !"__ksymtab___SCK__tp_func_br_fdb_update", i1 false, i1 false}
!453 = !{ptr @__tracepoint_page_pool_release, !454, !"__tracepoint_page_pool_release", i1 false, i1 false}
!454 = !{!"../include/trace/events/page_pool.h", i32 14, i32 1}
!455 = !{ptr @__tracepoint_ptr_page_pool_release, !454, !"__tracepoint_ptr_page_pool_release", i1 false, i1 false}
!456 = !{ptr @__SCK__tp_func_page_pool_release, !454, !"__SCK__tp_func_page_pool_release", i1 false, i1 false}
!457 = !{ptr @__tracepoint_page_pool_state_release, !458, !"__tracepoint_page_pool_state_release", i1 false, i1 false}
!458 = !{!"../include/trace/events/page_pool.h", i32 42, i32 1}
!459 = !{ptr @__tracepoint_ptr_page_pool_state_release, !458, !"__tracepoint_ptr_page_pool_state_release", i1 false, i1 false}
!460 = !{ptr @__SCK__tp_func_page_pool_state_release, !458, !"__SCK__tp_func_page_pool_state_release", i1 false, i1 false}
!461 = !{ptr @__tracepoint_page_pool_state_hold, !462, !"__tracepoint_page_pool_state_hold", i1 false, i1 false}
!462 = !{!"../include/trace/events/page_pool.h", i32 67, i32 1}
!463 = !{ptr @__tracepoint_ptr_page_pool_state_hold, !462, !"__tracepoint_ptr_page_pool_state_hold", i1 false, i1 false}
!464 = !{ptr @__SCK__tp_func_page_pool_state_hold, !462, !"__SCK__tp_func_page_pool_state_hold", i1 false, i1 false}
!465 = !{ptr @__tracepoint_page_pool_update_nid, !466, !"__tracepoint_page_pool_update_nid", i1 false, i1 false}
!466 = !{!"../include/trace/events/page_pool.h", i32 92, i32 1}
!467 = !{ptr @__tracepoint_ptr_page_pool_update_nid, !466, !"__tracepoint_ptr_page_pool_update_nid", i1 false, i1 false}
!468 = !{ptr @__SCK__tp_func_page_pool_update_nid, !466, !"__SCK__tp_func_page_pool_update_nid", i1 false, i1 false}
!469 = !{ptr @.str.27, !470, !"<string literal>", i1 false, i1 false}
!470 = !{!"../include/trace/events/mmflags.h", i32 274, i32 1}
!471 = !{ptr @__TRACE_SYSTEM_COMPACT_SKIPPED, !470, !"__TRACE_SYSTEM_COMPACT_SKIPPED", i1 false, i1 false}
!472 = !{ptr @TRACE_SYSTEM_COMPACT_SKIPPED, !470, !"TRACE_SYSTEM_COMPACT_SKIPPED", i1 false, i1 false}
!473 = !{ptr @.str.28, !470, !"<string literal>", i1 false, i1 false}
!474 = !{ptr @__TRACE_SYSTEM_COMPACT_DEFERRED, !470, !"__TRACE_SYSTEM_COMPACT_DEFERRED", i1 false, i1 false}
!475 = !{ptr @TRACE_SYSTEM_COMPACT_DEFERRED, !470, !"TRACE_SYSTEM_COMPACT_DEFERRED", i1 false, i1 false}
!476 = !{ptr @.str.29, !470, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @__TRACE_SYSTEM_COMPACT_CONTINUE, !470, !"__TRACE_SYSTEM_COMPACT_CONTINUE", i1 false, i1 false}
!478 = !{ptr @TRACE_SYSTEM_COMPACT_CONTINUE, !470, !"TRACE_SYSTEM_COMPACT_CONTINUE", i1 false, i1 false}
!479 = !{ptr @.str.30, !470, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @__TRACE_SYSTEM_COMPACT_SUCCESS, !470, !"__TRACE_SYSTEM_COMPACT_SUCCESS", i1 false, i1 false}
!481 = !{ptr @TRACE_SYSTEM_COMPACT_SUCCESS, !470, !"TRACE_SYSTEM_COMPACT_SUCCESS", i1 false, i1 false}
!482 = !{ptr @.str.31, !470, !"<string literal>", i1 false, i1 false}
!483 = !{ptr @__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, !470, !"__TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED", i1 false, i1 false}
!484 = !{ptr @TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED, !470, !"TRACE_SYSTEM_COMPACT_PARTIAL_SKIPPED", i1 false, i1 false}
!485 = !{ptr @.str.32, !470, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @__TRACE_SYSTEM_COMPACT_COMPLETE, !470, !"__TRACE_SYSTEM_COMPACT_COMPLETE", i1 false, i1 false}
!487 = !{ptr @TRACE_SYSTEM_COMPACT_COMPLETE, !470, !"TRACE_SYSTEM_COMPACT_COMPLETE", i1 false, i1 false}
!488 = !{ptr @.str.33, !470, !"<string literal>", i1 false, i1 false}
!489 = !{ptr @__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, !470, !"__TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE", i1 false, i1 false}
!490 = !{ptr @TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE, !470, !"TRACE_SYSTEM_COMPACT_NO_SUITABLE_PAGE", i1 false, i1 false}
!491 = !{ptr @.str.34, !470, !"<string literal>", i1 false, i1 false}
!492 = !{ptr @__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, !470, !"__TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE", i1 false, i1 false}
!493 = !{ptr @TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE, !470, !"TRACE_SYSTEM_COMPACT_NOT_SUITABLE_ZONE", i1 false, i1 false}
!494 = !{ptr @.str.35, !470, !"<string literal>", i1 false, i1 false}
!495 = !{ptr @__TRACE_SYSTEM_COMPACT_CONTENDED, !470, !"__TRACE_SYSTEM_COMPACT_CONTENDED", i1 false, i1 false}
!496 = !{ptr @TRACE_SYSTEM_COMPACT_CONTENDED, !470, !"TRACE_SYSTEM_COMPACT_CONTENDED", i1 false, i1 false}
!497 = !{ptr @.str.36, !498, !"<string literal>", i1 false, i1 false}
!498 = !{!"../include/trace/events/mmflags.h", i32 275, i32 1}
!499 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, !498, !"__TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL", i1 false, i1 false}
!500 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL, !498, !"TRACE_SYSTEM_COMPACT_PRIO_SYNC_FULL", i1 false, i1 false}
!501 = !{ptr @.str.37, !498, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, !498, !"__TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT", i1 false, i1 false}
!503 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT, !498, !"TRACE_SYSTEM_COMPACT_PRIO_SYNC_LIGHT", i1 false, i1 false}
!504 = !{ptr @.str.38, !498, !"<string literal>", i1 false, i1 false}
!505 = !{ptr @__TRACE_SYSTEM_COMPACT_PRIO_ASYNC, !498, !"__TRACE_SYSTEM_COMPACT_PRIO_ASYNC", i1 false, i1 false}
!506 = !{ptr @TRACE_SYSTEM_COMPACT_PRIO_ASYNC, !498, !"TRACE_SYSTEM_COMPACT_PRIO_ASYNC", i1 false, i1 false}
!507 = !{ptr @.str.39, !508, !"<string literal>", i1 false, i1 false}
!508 = !{!"../include/trace/events/mmflags.h", i32 277, i32 1}
!509 = !{ptr @__TRACE_SYSTEM_ZONE_DMA, !508, !"__TRACE_SYSTEM_ZONE_DMA", i1 false, i1 false}
!510 = !{ptr @TRACE_SYSTEM_ZONE_DMA, !508, !"TRACE_SYSTEM_ZONE_DMA", i1 false, i1 false}
!511 = !{ptr @.str.40, !508, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @__TRACE_SYSTEM_ZONE_NORMAL, !508, !"__TRACE_SYSTEM_ZONE_NORMAL", i1 false, i1 false}
!513 = !{ptr @TRACE_SYSTEM_ZONE_NORMAL, !508, !"TRACE_SYSTEM_ZONE_NORMAL", i1 false, i1 false}
!514 = !{ptr @.str.41, !508, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @__TRACE_SYSTEM_ZONE_HIGHMEM, !508, !"__TRACE_SYSTEM_ZONE_HIGHMEM", i1 false, i1 false}
!516 = !{ptr @TRACE_SYSTEM_ZONE_HIGHMEM, !508, !"TRACE_SYSTEM_ZONE_HIGHMEM", i1 false, i1 false}
!517 = !{ptr @.str.42, !508, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @__TRACE_SYSTEM_ZONE_MOVABLE, !508, !"__TRACE_SYSTEM_ZONE_MOVABLE", i1 false, i1 false}
!519 = !{ptr @TRACE_SYSTEM_ZONE_MOVABLE, !508, !"TRACE_SYSTEM_ZONE_MOVABLE", i1 false, i1 false}
!520 = !{ptr @.str.43, !521, !"<string literal>", i1 false, i1 false}
!521 = !{!"../include/trace/events/mmflags.h", i32 278, i32 1}
!522 = !{ptr @__TRACE_SYSTEM_LRU_INACTIVE_ANON, !521, !"__TRACE_SYSTEM_LRU_INACTIVE_ANON", i1 false, i1 false}
!523 = !{ptr @TRACE_SYSTEM_LRU_INACTIVE_ANON, !521, !"TRACE_SYSTEM_LRU_INACTIVE_ANON", i1 false, i1 false}
!524 = !{ptr @.str.44, !521, !"<string literal>", i1 false, i1 false}
!525 = !{ptr @__TRACE_SYSTEM_LRU_ACTIVE_ANON, !521, !"__TRACE_SYSTEM_LRU_ACTIVE_ANON", i1 false, i1 false}
!526 = !{ptr @TRACE_SYSTEM_LRU_ACTIVE_ANON, !521, !"TRACE_SYSTEM_LRU_ACTIVE_ANON", i1 false, i1 false}
!527 = !{ptr @.str.45, !521, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @__TRACE_SYSTEM_LRU_INACTIVE_FILE, !521, !"__TRACE_SYSTEM_LRU_INACTIVE_FILE", i1 false, i1 false}
!529 = !{ptr @TRACE_SYSTEM_LRU_INACTIVE_FILE, !521, !"TRACE_SYSTEM_LRU_INACTIVE_FILE", i1 false, i1 false}
!530 = !{ptr @.str.46, !521, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @__TRACE_SYSTEM_LRU_ACTIVE_FILE, !521, !"__TRACE_SYSTEM_LRU_ACTIVE_FILE", i1 false, i1 false}
!532 = !{ptr @TRACE_SYSTEM_LRU_ACTIVE_FILE, !521, !"TRACE_SYSTEM_LRU_ACTIVE_FILE", i1 false, i1 false}
!533 = !{ptr @.str.47, !521, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @__TRACE_SYSTEM_LRU_UNEVICTABLE, !521, !"__TRACE_SYSTEM_LRU_UNEVICTABLE", i1 false, i1 false}
!535 = !{ptr @TRACE_SYSTEM_LRU_UNEVICTABLE, !521, !"TRACE_SYSTEM_LRU_UNEVICTABLE", i1 false, i1 false}
!536 = !{ptr @event_class_page_pool_release, !454, !"event_class_page_pool_release", i1 false, i1 false}
!537 = !{ptr @event_page_pool_release, !454, !"event_page_pool_release", i1 false, i1 false}
!538 = !{ptr @__event_page_pool_release, !454, !"__event_page_pool_release", i1 false, i1 false}
!539 = !{ptr @event_class_page_pool_state_release, !458, !"event_class_page_pool_state_release", i1 false, i1 false}
!540 = !{ptr @event_page_pool_state_release, !458, !"event_page_pool_state_release", i1 false, i1 false}
!541 = !{ptr @__event_page_pool_state_release, !458, !"__event_page_pool_state_release", i1 false, i1 false}
!542 = !{ptr @event_class_page_pool_state_hold, !462, !"event_class_page_pool_state_hold", i1 false, i1 false}
!543 = !{ptr @event_page_pool_state_hold, !462, !"event_page_pool_state_hold", i1 false, i1 false}
!544 = !{ptr @__event_page_pool_state_hold, !462, !"__event_page_pool_state_hold", i1 false, i1 false}
!545 = !{ptr @event_class_page_pool_update_nid, !466, !"event_class_page_pool_update_nid", i1 false, i1 false}
!546 = !{ptr @event_page_pool_update_nid, !466, !"event_page_pool_update_nid", i1 false, i1 false}
!547 = !{ptr @__event_page_pool_update_nid, !466, !"__event_page_pool_update_nid", i1 false, i1 false}
!548 = !{ptr @__bpf_trace_tp_map_page_pool_release, !454, !"__bpf_trace_tp_map_page_pool_release", i1 false, i1 false}
!549 = !{ptr @__bpf_trace_tp_map_page_pool_state_release, !458, !"__bpf_trace_tp_map_page_pool_state_release", i1 false, i1 false}
!550 = !{ptr @__bpf_trace_tp_map_page_pool_state_hold, !462, !"__bpf_trace_tp_map_page_pool_state_hold", i1 false, i1 false}
!551 = !{ptr @__bpf_trace_tp_map_page_pool_update_nid, !466, !"__bpf_trace_tp_map_page_pool_update_nid", i1 false, i1 false}
!552 = !{ptr @__tracepoint_neigh_create, !553, !"__tracepoint_neigh_create", i1 false, i1 false}
!553 = !{!"../include/trace/events/neigh.h", i32 23, i32 1}
!554 = !{ptr @__tracepoint_ptr_neigh_create, !553, !"__tracepoint_ptr_neigh_create", i1 false, i1 false}
!555 = !{ptr @__SCK__tp_func_neigh_create, !553, !"__SCK__tp_func_neigh_create", i1 false, i1 false}
!556 = !{ptr @__tracepoint_neigh_update, !557, !"__tracepoint_neigh_update", i1 false, i1 false}
!557 = !{!"../include/trace/events/neigh.h", i32 72, i32 1}
!558 = !{ptr @__tracepoint_ptr_neigh_update, !557, !"__tracepoint_ptr_neigh_update", i1 false, i1 false}
!559 = !{ptr @__SCK__tp_func_neigh_update, !557, !"__SCK__tp_func_neigh_update", i1 false, i1 false}
!560 = !{ptr @__tracepoint_neigh_update_done, !561, !"__tracepoint_neigh_update_done", i1 false, i1 false}
!561 = !{!"../include/trace/events/neigh.h", i32 227, i32 1}
!562 = !{ptr @__tracepoint_ptr_neigh_update_done, !561, !"__tracepoint_ptr_neigh_update_done", i1 false, i1 false}
!563 = !{ptr @__SCK__tp_func_neigh_update_done, !561, !"__SCK__tp_func_neigh_update_done", i1 false, i1 false}
!564 = !{ptr @__tracepoint_neigh_timer_handler, !565, !"__tracepoint_neigh_timer_handler", i1 false, i1 false}
!565 = !{!"../include/trace/events/neigh.h", i32 232, i32 1}
!566 = !{ptr @__tracepoint_ptr_neigh_timer_handler, !565, !"__tracepoint_ptr_neigh_timer_handler", i1 false, i1 false}
!567 = !{ptr @__SCK__tp_func_neigh_timer_handler, !565, !"__SCK__tp_func_neigh_timer_handler", i1 false, i1 false}
!568 = !{ptr @__tracepoint_neigh_event_send_done, !569, !"__tracepoint_neigh_event_send_done", i1 false, i1 false}
!569 = !{!"../include/trace/events/neigh.h", i32 237, i32 1}
!570 = !{ptr @__tracepoint_ptr_neigh_event_send_done, !569, !"__tracepoint_ptr_neigh_event_send_done", i1 false, i1 false}
!571 = !{ptr @__SCK__tp_func_neigh_event_send_done, !569, !"__SCK__tp_func_neigh_event_send_done", i1 false, i1 false}
!572 = !{ptr @__tracepoint_neigh_event_send_dead, !573, !"__tracepoint_neigh_event_send_dead", i1 false, i1 false}
!573 = !{!"../include/trace/events/neigh.h", i32 242, i32 1}
!574 = !{ptr @__tracepoint_ptr_neigh_event_send_dead, !573, !"__tracepoint_ptr_neigh_event_send_dead", i1 false, i1 false}
!575 = !{ptr @__SCK__tp_func_neigh_event_send_dead, !573, !"__SCK__tp_func_neigh_event_send_dead", i1 false, i1 false}
!576 = !{ptr @__tracepoint_neigh_cleanup_and_release, !577, !"__tracepoint_neigh_cleanup_and_release", i1 false, i1 false}
!577 = !{!"../include/trace/events/neigh.h", i32 247, i32 1}
!578 = !{ptr @__tracepoint_ptr_neigh_cleanup_and_release, !577, !"__tracepoint_ptr_neigh_cleanup_and_release", i1 false, i1 false}
!579 = !{ptr @__SCK__tp_func_neigh_cleanup_and_release, !577, !"__SCK__tp_func_neigh_cleanup_and_release", i1 false, i1 false}
!580 = !{ptr @event_class_neigh_create, !553, !"event_class_neigh_create", i1 false, i1 false}
!581 = !{ptr @event_neigh_create, !553, !"event_neigh_create", i1 false, i1 false}
!582 = !{ptr @__event_neigh_create, !553, !"__event_neigh_create", i1 false, i1 false}
!583 = !{ptr @event_class_neigh_update, !557, !"event_class_neigh_update", i1 false, i1 false}
!584 = !{ptr @event_neigh_update, !557, !"event_neigh_update", i1 false, i1 false}
!585 = !{ptr @__event_neigh_update, !557, !"__event_neigh_update", i1 false, i1 false}
!586 = !{ptr @event_class_neigh__update, !587, !"event_class_neigh__update", i1 false, i1 false}
!587 = !{!"../include/trace/events/neigh.h", i32 156, i32 1}
!588 = !{ptr @event_neigh_update_done, !561, !"event_neigh_update_done", i1 false, i1 false}
!589 = !{ptr @__event_neigh_update_done, !561, !"__event_neigh_update_done", i1 false, i1 false}
!590 = !{ptr @event_neigh_timer_handler, !565, !"event_neigh_timer_handler", i1 false, i1 false}
!591 = !{ptr @__event_neigh_timer_handler, !565, !"__event_neigh_timer_handler", i1 false, i1 false}
!592 = !{ptr @event_neigh_event_send_done, !569, !"event_neigh_event_send_done", i1 false, i1 false}
!593 = !{ptr @__event_neigh_event_send_done, !569, !"__event_neigh_event_send_done", i1 false, i1 false}
!594 = !{ptr @event_neigh_event_send_dead, !573, !"event_neigh_event_send_dead", i1 false, i1 false}
!595 = !{ptr @__event_neigh_event_send_dead, !573, !"__event_neigh_event_send_dead", i1 false, i1 false}
!596 = !{ptr @event_neigh_cleanup_and_release, !577, !"event_neigh_cleanup_and_release", i1 false, i1 false}
!597 = !{ptr @__event_neigh_cleanup_and_release, !577, !"__event_neigh_cleanup_and_release", i1 false, i1 false}
!598 = !{ptr @__bpf_trace_tp_map_neigh_create, !553, !"__bpf_trace_tp_map_neigh_create", i1 false, i1 false}
!599 = !{ptr @__bpf_trace_tp_map_neigh_update, !557, !"__bpf_trace_tp_map_neigh_update", i1 false, i1 false}
!600 = !{ptr @__bpf_trace_tp_map_neigh_update_done, !561, !"__bpf_trace_tp_map_neigh_update_done", i1 false, i1 false}
!601 = !{ptr @__bpf_trace_tp_map_neigh_timer_handler, !565, !"__bpf_trace_tp_map_neigh_timer_handler", i1 false, i1 false}
!602 = !{ptr @__bpf_trace_tp_map_neigh_event_send_done, !569, !"__bpf_trace_tp_map_neigh_event_send_done", i1 false, i1 false}
!603 = !{ptr @__bpf_trace_tp_map_neigh_event_send_dead, !573, !"__bpf_trace_tp_map_neigh_event_send_dead", i1 false, i1 false}
!604 = !{ptr @__bpf_trace_tp_map_neigh_cleanup_and_release, !577, !"__bpf_trace_tp_map_neigh_cleanup_and_release", i1 false, i1 false}
!605 = !{ptr @__ksymtab___tracepoint_neigh_update, !606, !"__ksymtab___tracepoint_neigh_update", i1 false, i1 false}
!606 = !{!"../net/core/net-traces.c", i32 51, i32 1}
!607 = !{ptr @__ksymtab___traceiter_neigh_update, !606, !"__ksymtab___traceiter_neigh_update", i1 false, i1 false}
!608 = !{ptr @__ksymtab___SCK__tp_func_neigh_update, !606, !"__ksymtab___SCK__tp_func_neigh_update", i1 false, i1 false}
!609 = !{ptr @__ksymtab___tracepoint_neigh_update_done, !610, !"__ksymtab___tracepoint_neigh_update_done", i1 false, i1 false}
!610 = !{!"../net/core/net-traces.c", i32 52, i32 1}
!611 = !{ptr @__ksymtab___traceiter_neigh_update_done, !610, !"__ksymtab___traceiter_neigh_update_done", i1 false, i1 false}
!612 = !{ptr @__ksymtab___SCK__tp_func_neigh_update_done, !610, !"__ksymtab___SCK__tp_func_neigh_update_done", i1 false, i1 false}
!613 = !{ptr @__ksymtab___tracepoint_neigh_timer_handler, !614, !"__ksymtab___tracepoint_neigh_timer_handler", i1 false, i1 false}
!614 = !{!"../net/core/net-traces.c", i32 53, i32 1}
!615 = !{ptr @__ksymtab___traceiter_neigh_timer_handler, !614, !"__ksymtab___traceiter_neigh_timer_handler", i1 false, i1 false}
!616 = !{ptr @__ksymtab___SCK__tp_func_neigh_timer_handler, !614, !"__ksymtab___SCK__tp_func_neigh_timer_handler", i1 false, i1 false}
!617 = !{ptr @__ksymtab___tracepoint_neigh_event_send_done, !618, !"__ksymtab___tracepoint_neigh_event_send_done", i1 false, i1 false}
!618 = !{!"../net/core/net-traces.c", i32 54, i32 1}
!619 = !{ptr @__ksymtab___traceiter_neigh_event_send_done, !618, !"__ksymtab___traceiter_neigh_event_send_done", i1 false, i1 false}
!620 = !{ptr @__ksymtab___SCK__tp_func_neigh_event_send_done, !618, !"__ksymtab___SCK__tp_func_neigh_event_send_done", i1 false, i1 false}
!621 = !{ptr @__ksymtab___tracepoint_neigh_event_send_dead, !622, !"__ksymtab___tracepoint_neigh_event_send_dead", i1 false, i1 false}
!622 = !{!"../net/core/net-traces.c", i32 55, i32 1}
!623 = !{ptr @__ksymtab___traceiter_neigh_event_send_dead, !622, !"__ksymtab___traceiter_neigh_event_send_dead", i1 false, i1 false}
!624 = !{ptr @__ksymtab___SCK__tp_func_neigh_event_send_dead, !622, !"__ksymtab___SCK__tp_func_neigh_event_send_dead", i1 false, i1 false}
!625 = !{ptr @__ksymtab___tracepoint_neigh_cleanup_and_release, !626, !"__ksymtab___tracepoint_neigh_cleanup_and_release", i1 false, i1 false}
!626 = !{!"../net/core/net-traces.c", i32 56, i32 1}
!627 = !{ptr @__ksymtab___traceiter_neigh_cleanup_and_release, !626, !"__ksymtab___traceiter_neigh_cleanup_and_release", i1 false, i1 false}
!628 = !{ptr @__ksymtab___SCK__tp_func_neigh_cleanup_and_release, !626, !"__ksymtab___SCK__tp_func_neigh_cleanup_and_release", i1 false, i1 false}
!629 = !{ptr @__ksymtab___tracepoint_kfree_skb, !630, !"__ksymtab___tracepoint_kfree_skb", i1 false, i1 false}
!630 = !{!"../net/core/net-traces.c", i32 58, i32 1}
!631 = !{ptr @__ksymtab___traceiter_kfree_skb, !630, !"__ksymtab___traceiter_kfree_skb", i1 false, i1 false}
!632 = !{ptr @__ksymtab___SCK__tp_func_kfree_skb, !630, !"__ksymtab___SCK__tp_func_kfree_skb", i1 false, i1 false}
!633 = !{ptr @__ksymtab___tracepoint_napi_poll, !634, !"__ksymtab___tracepoint_napi_poll", i1 false, i1 false}
!634 = !{!"../net/core/net-traces.c", i32 60, i32 1}
!635 = !{ptr @__ksymtab___traceiter_napi_poll, !634, !"__ksymtab___traceiter_napi_poll", i1 false, i1 false}
!636 = !{ptr @__ksymtab___SCK__tp_func_napi_poll, !634, !"__ksymtab___SCK__tp_func_napi_poll", i1 false, i1 false}
!637 = !{ptr @__ksymtab___tracepoint_tcp_send_reset, !638, !"__ksymtab___tracepoint_tcp_send_reset", i1 false, i1 false}
!638 = !{!"../net/core/net-traces.c", i32 62, i32 1}
!639 = !{ptr @__ksymtab___traceiter_tcp_send_reset, !638, !"__ksymtab___traceiter_tcp_send_reset", i1 false, i1 false}
!640 = !{ptr @__ksymtab___SCK__tp_func_tcp_send_reset, !638, !"__ksymtab___SCK__tp_func_tcp_send_reset", i1 false, i1 false}
!641 = !{ptr @__ksymtab___tracepoint_tcp_bad_csum, !642, !"__ksymtab___tracepoint_tcp_bad_csum", i1 false, i1 false}
!642 = !{!"../net/core/net-traces.c", i32 63, i32 1}
!643 = !{ptr @__ksymtab___traceiter_tcp_bad_csum, !642, !"__ksymtab___traceiter_tcp_bad_csum", i1 false, i1 false}
!644 = !{ptr @__ksymtab___SCK__tp_func_tcp_bad_csum, !642, !"__ksymtab___SCK__tp_func_tcp_bad_csum", i1 false, i1 false}
!645 = !{ptr @__tpstrtab_kfree_skb, !1, !"__tpstrtab_kfree_skb", i1 false, i1 false}
!646 = !{ptr @__tpstrtab_consume_skb, !5, !"__tpstrtab_consume_skb", i1 false, i1 false}
!647 = !{ptr @__tpstrtab_skb_copy_datagram_iovec, !9, !"__tpstrtab_skb_copy_datagram_iovec", i1 false, i1 false}
!648 = !{ptr @str__skb__trace_system_name, !649, !"str__skb__trace_system_name", i1 false, i1 false}
!649 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!650 = !{ptr @.str.48, !1, !"<string literal>", i1 false, i1 false}
!651 = !{ptr @.str.49, !1, !"<string literal>", i1 false, i1 false}
!652 = !{ptr @.str.50, !1, !"<string literal>", i1 false, i1 false}
!653 = !{ptr @.str.51, !1, !"<string literal>", i1 false, i1 false}
!654 = !{ptr @.str.52, !1, !"<string literal>", i1 false, i1 false}
!655 = !{ptr @.str.53, !1, !"<string literal>", i1 false, i1 false}
!656 = !{ptr @.str.54, !1, !"<string literal>", i1 false, i1 false}
!657 = !{ptr @trace_event_fields_kfree_skb, !1, !"trace_event_fields_kfree_skb", i1 false, i1 false}
!658 = !{ptr @trace_event_type_funcs_kfree_skb, !1, !"trace_event_type_funcs_kfree_skb", i1 false, i1 false}
!659 = !{ptr @.str.55, !1, !"<string literal>", i1 false, i1 false}
!660 = !{ptr @.str.56, !1, !"<string literal>", i1 false, i1 false}
!661 = !{ptr @.str.57, !1, !"<string literal>", i1 false, i1 false}
!662 = !{ptr @.str.58, !1, !"<string literal>", i1 false, i1 false}
!663 = !{ptr @.str.59, !1, !"<string literal>", i1 false, i1 false}
!664 = !{ptr @.str.60, !1, !"<string literal>", i1 false, i1 false}
!665 = !{ptr @.str.61, !1, !"<string literal>", i1 false, i1 false}
!666 = !{ptr @.str.62, !1, !"<string literal>", i1 false, i1 false}
!667 = !{ptr @trace_raw_output_kfree_skb.symbols, !1, !"symbols", i1 false, i1 false}
!668 = !{ptr @print_fmt_kfree_skb, !1, !"print_fmt_kfree_skb", i1 false, i1 false}
!669 = !{ptr @trace_event_fields_consume_skb, !5, !"trace_event_fields_consume_skb", i1 false, i1 false}
!670 = !{ptr @trace_event_type_funcs_consume_skb, !5, !"trace_event_type_funcs_consume_skb", i1 false, i1 false}
!671 = !{ptr @.str.63, !5, !"<string literal>", i1 false, i1 false}
!672 = !{ptr @print_fmt_consume_skb, !5, !"print_fmt_consume_skb", i1 false, i1 false}
!673 = !{ptr @.str.64, !9, !"<string literal>", i1 false, i1 false}
!674 = !{ptr @.str.65, !9, !"<string literal>", i1 false, i1 false}
!675 = !{ptr @.str.66, !9, !"<string literal>", i1 false, i1 false}
!676 = !{ptr @trace_event_fields_skb_copy_datagram_iovec, !9, !"trace_event_fields_skb_copy_datagram_iovec", i1 false, i1 false}
!677 = !{ptr @trace_event_type_funcs_skb_copy_datagram_iovec, !9, !"trace_event_type_funcs_skb_copy_datagram_iovec", i1 false, i1 false}
!678 = !{ptr @.str.67, !9, !"<string literal>", i1 false, i1 false}
!679 = !{ptr @print_fmt_skb_copy_datagram_iovec, !9, !"print_fmt_skb_copy_datagram_iovec", i1 false, i1 false}
!680 = !{ptr @__tpstrtab_net_dev_start_xmit, !47, !"__tpstrtab_net_dev_start_xmit", i1 false, i1 false}
!681 = !{ptr @__tpstrtab_net_dev_xmit, !51, !"__tpstrtab_net_dev_xmit", i1 false, i1 false}
!682 = !{ptr @__tpstrtab_net_dev_xmit_timeout, !55, !"__tpstrtab_net_dev_xmit_timeout", i1 false, i1 false}
!683 = !{ptr @__tpstrtab_net_dev_queue, !59, !"__tpstrtab_net_dev_queue", i1 false, i1 false}
!684 = !{ptr @__tpstrtab_netif_receive_skb, !63, !"__tpstrtab_netif_receive_skb", i1 false, i1 false}
!685 = !{ptr @__tpstrtab_netif_rx, !67, !"__tpstrtab_netif_rx", i1 false, i1 false}
!686 = !{ptr @__tpstrtab_napi_gro_frags_entry, !71, !"__tpstrtab_napi_gro_frags_entry", i1 false, i1 false}
!687 = !{ptr @__tpstrtab_napi_gro_receive_entry, !75, !"__tpstrtab_napi_gro_receive_entry", i1 false, i1 false}
!688 = !{ptr @__tpstrtab_netif_receive_skb_entry, !79, !"__tpstrtab_netif_receive_skb_entry", i1 false, i1 false}
!689 = !{ptr @__tpstrtab_netif_receive_skb_list_entry, !83, !"__tpstrtab_netif_receive_skb_list_entry", i1 false, i1 false}
!690 = !{ptr @__tpstrtab_netif_rx_entry, !87, !"__tpstrtab_netif_rx_entry", i1 false, i1 false}
!691 = !{ptr @__tpstrtab_netif_rx_ni_entry, !91, !"__tpstrtab_netif_rx_ni_entry", i1 false, i1 false}
!692 = !{ptr @__tpstrtab_napi_gro_frags_exit, !95, !"__tpstrtab_napi_gro_frags_exit", i1 false, i1 false}
!693 = !{ptr @__tpstrtab_napi_gro_receive_exit, !99, !"__tpstrtab_napi_gro_receive_exit", i1 false, i1 false}
!694 = !{ptr @__tpstrtab_netif_receive_skb_exit, !103, !"__tpstrtab_netif_receive_skb_exit", i1 false, i1 false}
!695 = !{ptr @__tpstrtab_netif_rx_exit, !107, !"__tpstrtab_netif_rx_exit", i1 false, i1 false}
!696 = !{ptr @__tpstrtab_netif_rx_ni_exit, !111, !"__tpstrtab_netif_rx_ni_exit", i1 false, i1 false}
!697 = !{ptr @__tpstrtab_netif_receive_skb_list_exit, !115, !"__tpstrtab_netif_receive_skb_list_exit", i1 false, i1 false}
!698 = !{ptr @str__net__trace_system_name, !649, !"str__net__trace_system_name", i1 false, i1 false}
!699 = !{ptr @.str.68, !47, !"<string literal>", i1 false, i1 false}
!700 = !{ptr @.str.69, !47, !"<string literal>", i1 false, i1 false}
!701 = !{ptr @.str.70, !47, !"<string literal>", i1 false, i1 false}
!702 = !{ptr @.str.71, !47, !"<string literal>", i1 false, i1 false}
!703 = !{ptr @.str.72, !47, !"<string literal>", i1 false, i1 false}
!704 = !{ptr @.str.73, !47, !"<string literal>", i1 false, i1 false}
!705 = !{ptr @.str.74, !47, !"<string literal>", i1 false, i1 false}
!706 = !{ptr @.str.75, !47, !"<string literal>", i1 false, i1 false}
!707 = !{ptr @.str.76, !47, !"<string literal>", i1 false, i1 false}
!708 = !{ptr @.str.77, !47, !"<string literal>", i1 false, i1 false}
!709 = !{ptr @.str.78, !47, !"<string literal>", i1 false, i1 false}
!710 = !{ptr @.str.79, !47, !"<string literal>", i1 false, i1 false}
!711 = !{ptr @.str.80, !47, !"<string literal>", i1 false, i1 false}
!712 = !{ptr @.str.81, !47, !"<string literal>", i1 false, i1 false}
!713 = !{ptr @.str.82, !47, !"<string literal>", i1 false, i1 false}
!714 = !{ptr @.str.83, !47, !"<string literal>", i1 false, i1 false}
!715 = !{ptr @.str.84, !47, !"<string literal>", i1 false, i1 false}
!716 = !{ptr @.str.85, !47, !"<string literal>", i1 false, i1 false}
!717 = !{ptr @.str.86, !47, !"<string literal>", i1 false, i1 false}
!718 = !{ptr @.str.87, !47, !"<string literal>", i1 false, i1 false}
!719 = !{ptr @trace_event_fields_net_dev_start_xmit, !47, !"trace_event_fields_net_dev_start_xmit", i1 false, i1 false}
!720 = !{ptr @trace_event_type_funcs_net_dev_start_xmit, !47, !"trace_event_type_funcs_net_dev_start_xmit", i1 false, i1 false}
!721 = !{ptr @.str.88, !47, !"<string literal>", i1 false, i1 false}
!722 = !{ptr @print_fmt_net_dev_start_xmit, !47, !"print_fmt_net_dev_start_xmit", i1 false, i1 false}
!723 = !{ptr @.str.89, !51, !"<string literal>", i1 false, i1 false}
!724 = !{ptr @trace_event_fields_net_dev_xmit, !51, !"trace_event_fields_net_dev_xmit", i1 false, i1 false}
!725 = !{ptr @trace_event_type_funcs_net_dev_xmit, !51, !"trace_event_type_funcs_net_dev_xmit", i1 false, i1 false}
!726 = !{ptr @.str.90, !51, !"<string literal>", i1 false, i1 false}
!727 = !{ptr @print_fmt_net_dev_xmit, !51, !"print_fmt_net_dev_xmit", i1 false, i1 false}
!728 = !{ptr @.str.91, !55, !"<string literal>", i1 false, i1 false}
!729 = !{ptr @.str.92, !55, !"<string literal>", i1 false, i1 false}
!730 = !{ptr @trace_event_fields_net_dev_xmit_timeout, !55, !"trace_event_fields_net_dev_xmit_timeout", i1 false, i1 false}
!731 = !{ptr @trace_event_type_funcs_net_dev_xmit_timeout, !55, !"trace_event_type_funcs_net_dev_xmit_timeout", i1 false, i1 false}
!732 = !{ptr @.str.93, !55, !"<string literal>", i1 false, i1 false}
!733 = !{ptr @print_fmt_net_dev_xmit_timeout, !55, !"print_fmt_net_dev_xmit_timeout", i1 false, i1 false}
!734 = !{ptr @trace_event_fields_net_dev_template, !128, !"trace_event_fields_net_dev_template", i1 false, i1 false}
!735 = !{ptr @trace_event_type_funcs_net_dev_template, !128, !"trace_event_type_funcs_net_dev_template", i1 false, i1 false}
!736 = !{ptr @.str.94, !128, !"<string literal>", i1 false, i1 false}
!737 = !{ptr @print_fmt_net_dev_template, !128, !"print_fmt_net_dev_template", i1 false, i1 false}
!738 = !{ptr @.str.95, !136, !"<string literal>", i1 false, i1 false}
!739 = !{ptr @.str.96, !136, !"<string literal>", i1 false, i1 false}
!740 = !{ptr @.str.97, !136, !"<string literal>", i1 false, i1 false}
!741 = !{ptr @.str.98, !136, !"<string literal>", i1 false, i1 false}
!742 = !{ptr @.str.99, !136, !"<string literal>", i1 false, i1 false}
!743 = !{ptr @.str.100, !136, !"<string literal>", i1 false, i1 false}
!744 = !{ptr @.str.101, !136, !"<string literal>", i1 false, i1 false}
!745 = !{ptr @.str.102, !136, !"<string literal>", i1 false, i1 false}
!746 = !{ptr @.str.103, !136, !"<string literal>", i1 false, i1 false}
!747 = !{ptr @trace_event_fields_net_dev_rx_verbose_template, !136, !"trace_event_fields_net_dev_rx_verbose_template", i1 false, i1 false}
!748 = !{ptr @trace_event_type_funcs_net_dev_rx_verbose_template, !136, !"trace_event_type_funcs_net_dev_rx_verbose_template", i1 false, i1 false}
!749 = !{ptr @.str.104, !136, !"<string literal>", i1 false, i1 false}
!750 = !{ptr @print_fmt_net_dev_rx_verbose_template, !136, !"print_fmt_net_dev_rx_verbose_template", i1 false, i1 false}
!751 = !{ptr @.str.105, !150, !"<string literal>", i1 false, i1 false}
!752 = !{ptr @trace_event_fields_net_dev_rx_exit_template, !150, !"trace_event_fields_net_dev_rx_exit_template", i1 false, i1 false}
!753 = !{ptr @trace_event_type_funcs_net_dev_rx_exit_template, !150, !"trace_event_type_funcs_net_dev_rx_exit_template", i1 false, i1 false}
!754 = !{ptr @.str.106, !150, !"<string literal>", i1 false, i1 false}
!755 = !{ptr @print_fmt_net_dev_rx_exit_template, !150, !"print_fmt_net_dev_rx_exit_template", i1 false, i1 false}
!756 = !{ptr @__tpstrtab_napi_poll, !182, !"__tpstrtab_napi_poll", i1 false, i1 false}
!757 = !{ptr @str__napi__trace_system_name, !649, !"str__napi__trace_system_name", i1 false, i1 false}
!758 = !{ptr @.str.107, !182, !"<string literal>", i1 false, i1 false}
!759 = !{ptr @.str.108, !182, !"<string literal>", i1 false, i1 false}
!760 = !{ptr @.str.109, !182, !"<string literal>", i1 false, i1 false}
!761 = !{ptr @.str.110, !182, !"<string literal>", i1 false, i1 false}
!762 = !{ptr @.str.111, !182, !"<string literal>", i1 false, i1 false}
!763 = !{ptr @.str.112, !182, !"<string literal>", i1 false, i1 false}
!764 = !{ptr @trace_event_fields_napi_poll, !182, !"trace_event_fields_napi_poll", i1 false, i1 false}
!765 = !{ptr @trace_event_type_funcs_napi_poll, !182, !"trace_event_type_funcs_napi_poll", i1 false, i1 false}
!766 = !{ptr @.str.113, !182, !"<string literal>", i1 false, i1 false}
!767 = !{ptr @print_fmt_napi_poll, !182, !"print_fmt_napi_poll", i1 false, i1 false}
!768 = !{ptr @__tpstrtab_sock_rcvqueue_full, !190, !"__tpstrtab_sock_rcvqueue_full", i1 false, i1 false}
!769 = !{ptr @__tpstrtab_sock_exceed_buf_limit, !194, !"__tpstrtab_sock_exceed_buf_limit", i1 false, i1 false}
!770 = !{ptr @__tpstrtab_inet_sock_set_state, !198, !"__tpstrtab_inet_sock_set_state", i1 false, i1 false}
!771 = !{ptr @__tpstrtab_inet_sk_error_report, !202, !"__tpstrtab_inet_sk_error_report", i1 false, i1 false}
!772 = !{ptr @str__sock__trace_system_name, !649, !"str__sock__trace_system_name", i1 false, i1 false}
!773 = !{ptr @.str.114, !190, !"<string literal>", i1 false, i1 false}
!774 = !{ptr @.str.115, !190, !"<string literal>", i1 false, i1 false}
!775 = !{ptr @trace_event_fields_sock_rcvqueue_full, !190, !"trace_event_fields_sock_rcvqueue_full", i1 false, i1 false}
!776 = !{ptr @trace_event_type_funcs_sock_rcvqueue_full, !190, !"trace_event_type_funcs_sock_rcvqueue_full", i1 false, i1 false}
!777 = !{ptr @.str.116, !190, !"<string literal>", i1 false, i1 false}
!778 = !{ptr @print_fmt_sock_rcvqueue_full, !190, !"print_fmt_sock_rcvqueue_full", i1 false, i1 false}
!779 = !{ptr @.str.117, !194, !"<string literal>", i1 false, i1 false}
!780 = !{ptr @.str.118, !194, !"<string literal>", i1 false, i1 false}
!781 = !{ptr @.str.119, !194, !"<string literal>", i1 false, i1 false}
!782 = !{ptr @.str.120, !194, !"<string literal>", i1 false, i1 false}
!783 = !{ptr @.str.121, !194, !"<string literal>", i1 false, i1 false}
!784 = !{ptr @.str.122, !194, !"<string literal>", i1 false, i1 false}
!785 = !{ptr @.str.123, !194, !"<string literal>", i1 false, i1 false}
!786 = !{ptr @.str.124, !194, !"<string literal>", i1 false, i1 false}
!787 = !{ptr @.str.125, !194, !"<string literal>", i1 false, i1 false}
!788 = !{ptr @.str.126, !194, !"<string literal>", i1 false, i1 false}
!789 = !{ptr @trace_event_fields_sock_exceed_buf_limit, !194, !"trace_event_fields_sock_exceed_buf_limit", i1 false, i1 false}
!790 = !{ptr @trace_event_type_funcs_sock_exceed_buf_limit, !194, !"trace_event_type_funcs_sock_exceed_buf_limit", i1 false, i1 false}
!791 = !{ptr @.str.127, !194, !"<string literal>", i1 false, i1 false}
!792 = !{ptr @.str.128, !194, !"<string literal>", i1 false, i1 false}
!793 = !{ptr @.str.129, !194, !"<string literal>", i1 false, i1 false}
!794 = !{ptr @trace_raw_output_sock_exceed_buf_limit.symbols, !194, !"symbols", i1 false, i1 false}
!795 = !{ptr @print_fmt_sock_exceed_buf_limit, !194, !"print_fmt_sock_exceed_buf_limit", i1 false, i1 false}
!796 = !{ptr @.str.130, !198, !"<string literal>", i1 false, i1 false}
!797 = !{ptr @.str.131, !198, !"<string literal>", i1 false, i1 false}
!798 = !{ptr @.str.132, !198, !"<string literal>", i1 false, i1 false}
!799 = !{ptr @.str.133, !198, !"<string literal>", i1 false, i1 false}
!800 = !{ptr @.str.134, !198, !"<string literal>", i1 false, i1 false}
!801 = !{ptr @.str.135, !198, !"<string literal>", i1 false, i1 false}
!802 = !{ptr @.str.136, !198, !"<string literal>", i1 false, i1 false}
!803 = !{ptr @.str.137, !198, !"<string literal>", i1 false, i1 false}
!804 = !{ptr @.str.138, !198, !"<string literal>", i1 false, i1 false}
!805 = !{ptr @.str.139, !198, !"<string literal>", i1 false, i1 false}
!806 = !{ptr @.str.140, !198, !"<string literal>", i1 false, i1 false}
!807 = !{ptr @.str.141, !198, !"<string literal>", i1 false, i1 false}
!808 = !{ptr @.str.142, !198, !"<string literal>", i1 false, i1 false}
!809 = !{ptr @trace_event_fields_inet_sock_set_state, !198, !"trace_event_fields_inet_sock_set_state", i1 false, i1 false}
!810 = !{ptr @trace_event_type_funcs_inet_sock_set_state, !198, !"trace_event_type_funcs_inet_sock_set_state", i1 false, i1 false}
!811 = !{ptr @.str.143, !198, !"<string literal>", i1 false, i1 false}
!812 = !{ptr @.str.144, !198, !"<string literal>", i1 false, i1 false}
!813 = !{ptr @.str.145, !198, !"<string literal>", i1 false, i1 false}
!814 = !{ptr @trace_raw_output_inet_sock_set_state.symbols, !198, !"symbols", i1 false, i1 false}
!815 = !{ptr @trace_raw_output_inet_sock_set_state.symbols.146, !198, !"symbols", i1 false, i1 false}
!816 = !{ptr @trace_raw_output_inet_sock_set_state.symbols.147, !198, !"symbols", i1 false, i1 false}
!817 = !{ptr @trace_raw_output_inet_sock_set_state.symbols.148, !198, !"symbols", i1 false, i1 false}
!818 = !{ptr @print_fmt_inet_sock_set_state, !198, !"print_fmt_inet_sock_set_state", i1 false, i1 false}
!819 = !{ptr @.str.149, !202, !"<string literal>", i1 false, i1 false}
!820 = !{ptr @trace_event_fields_inet_sk_error_report, !202, !"trace_event_fields_inet_sk_error_report", i1 false, i1 false}
!821 = !{ptr @trace_event_type_funcs_inet_sk_error_report, !202, !"trace_event_type_funcs_inet_sk_error_report", i1 false, i1 false}
!822 = !{ptr @.str.150, !202, !"<string literal>", i1 false, i1 false}
!823 = !{ptr @trace_raw_output_inet_sk_error_report.symbols, !202, !"symbols", i1 false, i1 false}
!824 = !{ptr @trace_raw_output_inet_sk_error_report.symbols.151, !202, !"symbols", i1 false, i1 false}
!825 = !{ptr @print_fmt_inet_sk_error_report, !202, !"print_fmt_inet_sk_error_report", i1 false, i1 false}
!826 = !{ptr @__tpstrtab_udp_fail_queue_rcv_skb, !286, !"__tpstrtab_udp_fail_queue_rcv_skb", i1 false, i1 false}
!827 = !{ptr @str__udp__trace_system_name, !649, !"str__udp__trace_system_name", i1 false, i1 false}
!828 = !{ptr @.str.152, !286, !"<string literal>", i1 false, i1 false}
!829 = !{ptr @trace_event_fields_udp_fail_queue_rcv_skb, !286, !"trace_event_fields_udp_fail_queue_rcv_skb", i1 false, i1 false}
!830 = !{ptr @trace_event_type_funcs_udp_fail_queue_rcv_skb, !286, !"trace_event_type_funcs_udp_fail_queue_rcv_skb", i1 false, i1 false}
!831 = !{ptr @.str.153, !286, !"<string literal>", i1 false, i1 false}
!832 = !{ptr @print_fmt_udp_fail_queue_rcv_skb, !286, !"print_fmt_udp_fail_queue_rcv_skb", i1 false, i1 false}
!833 = !{ptr @__tpstrtab_tcp_retransmit_skb, !294, !"__tpstrtab_tcp_retransmit_skb", i1 false, i1 false}
!834 = !{ptr @__tpstrtab_tcp_send_reset, !298, !"__tpstrtab_tcp_send_reset", i1 false, i1 false}
!835 = !{ptr @__tpstrtab_tcp_receive_reset, !302, !"__tpstrtab_tcp_receive_reset", i1 false, i1 false}
!836 = !{ptr @__tpstrtab_tcp_destroy_sock, !306, !"__tpstrtab_tcp_destroy_sock", i1 false, i1 false}
!837 = !{ptr @__tpstrtab_tcp_rcv_space_adjust, !310, !"__tpstrtab_tcp_rcv_space_adjust", i1 false, i1 false}
!838 = !{ptr @__tpstrtab_tcp_retransmit_synack, !314, !"__tpstrtab_tcp_retransmit_synack", i1 false, i1 false}
!839 = !{ptr @__tpstrtab_tcp_probe, !318, !"__tpstrtab_tcp_probe", i1 false, i1 false}
!840 = !{ptr @__tpstrtab_tcp_bad_csum, !322, !"__tpstrtab_tcp_bad_csum", i1 false, i1 false}
!841 = !{ptr @str__tcp__trace_system_name, !649, !"str__tcp__trace_system_name", i1 false, i1 false}
!842 = !{ptr @.str.154, !326, !"<string literal>", i1 false, i1 false}
!843 = !{ptr @trace_event_fields_tcp_event_sk_skb, !326, !"trace_event_fields_tcp_event_sk_skb", i1 false, i1 false}
!844 = !{ptr @trace_event_type_funcs_tcp_event_sk_skb, !326, !"trace_event_type_funcs_tcp_event_sk_skb", i1 false, i1 false}
!845 = !{ptr @.str.155, !326, !"<string literal>", i1 false, i1 false}
!846 = !{ptr @trace_raw_output_tcp_event_sk_skb.symbols, !326, !"symbols", i1 false, i1 false}
!847 = !{ptr @trace_raw_output_tcp_event_sk_skb.symbols.156, !326, !"symbols", i1 false, i1 false}
!848 = !{ptr @print_fmt_tcp_event_sk_skb, !326, !"print_fmt_tcp_event_sk_skb", i1 false, i1 false}
!849 = !{ptr @.str.157, !332, !"<string literal>", i1 false, i1 false}
!850 = !{ptr @.str.158, !332, !"<string literal>", i1 false, i1 false}
!851 = !{ptr @trace_event_fields_tcp_event_sk, !332, !"trace_event_fields_tcp_event_sk", i1 false, i1 false}
!852 = !{ptr @trace_event_type_funcs_tcp_event_sk, !332, !"trace_event_type_funcs_tcp_event_sk", i1 false, i1 false}
!853 = !{ptr @.str.159, !332, !"<string literal>", i1 false, i1 false}
!854 = !{ptr @trace_raw_output_tcp_event_sk.symbols, !332, !"symbols", i1 false, i1 false}
!855 = !{ptr @print_fmt_tcp_event_sk, !332, !"print_fmt_tcp_event_sk", i1 false, i1 false}
!856 = !{ptr @.str.160, !314, !"<string literal>", i1 false, i1 false}
!857 = !{ptr @trace_event_fields_tcp_retransmit_synack, !314, !"trace_event_fields_tcp_retransmit_synack", i1 false, i1 false}
!858 = !{ptr @trace_event_type_funcs_tcp_retransmit_synack, !314, !"trace_event_type_funcs_tcp_retransmit_synack", i1 false, i1 false}
!859 = !{ptr @.str.161, !314, !"<string literal>", i1 false, i1 false}
!860 = !{ptr @trace_raw_output_tcp_retransmit_synack.symbols, !314, !"symbols", i1 false, i1 false}
!861 = !{ptr @print_fmt_tcp_retransmit_synack, !314, !"print_fmt_tcp_retransmit_synack", i1 false, i1 false}
!862 = !{ptr @.str.162, !318, !"<string literal>", i1 false, i1 false}
!863 = !{ptr @.str.163, !318, !"<string literal>", i1 false, i1 false}
!864 = !{ptr @.str.164, !318, !"<string literal>", i1 false, i1 false}
!865 = !{ptr @.str.165, !318, !"<string literal>", i1 false, i1 false}
!866 = !{ptr @.str.166, !318, !"<string literal>", i1 false, i1 false}
!867 = !{ptr @.str.167, !318, !"<string literal>", i1 false, i1 false}
!868 = !{ptr @.str.168, !318, !"<string literal>", i1 false, i1 false}
!869 = !{ptr @.str.169, !318, !"<string literal>", i1 false, i1 false}
!870 = !{ptr @.str.170, !318, !"<string literal>", i1 false, i1 false}
!871 = !{ptr @.str.171, !318, !"<string literal>", i1 false, i1 false}
!872 = !{ptr @trace_event_fields_tcp_probe, !318, !"trace_event_fields_tcp_probe", i1 false, i1 false}
!873 = !{ptr @trace_event_type_funcs_tcp_probe, !318, !"trace_event_type_funcs_tcp_probe", i1 false, i1 false}
!874 = !{ptr @.str.172, !318, !"<string literal>", i1 false, i1 false}
!875 = !{ptr @trace_raw_output_tcp_probe.symbols, !318, !"symbols", i1 false, i1 false}
!876 = !{ptr @print_fmt_tcp_probe, !318, !"print_fmt_tcp_probe", i1 false, i1 false}
!877 = !{ptr @trace_event_fields_tcp_event_skb, !346, !"trace_event_fields_tcp_event_skb", i1 false, i1 false}
!878 = !{ptr @trace_event_type_funcs_tcp_event_skb, !346, !"trace_event_type_funcs_tcp_event_skb", i1 false, i1 false}
!879 = !{ptr @.str.173, !346, !"<string literal>", i1 false, i1 false}
!880 = !{ptr @print_fmt_tcp_event_skb, !346, !"print_fmt_tcp_event_skb", i1 false, i1 false}
!881 = !{ptr @__tpstrtab_fib_table_lookup, !358, !"__tpstrtab_fib_table_lookup", i1 false, i1 false}
!882 = !{ptr @str__fib__trace_system_name, !649, !"str__fib__trace_system_name", i1 false, i1 false}
!883 = !{ptr @.str.174, !358, !"<string literal>", i1 false, i1 false}
!884 = !{ptr @.str.175, !358, !"<string literal>", i1 false, i1 false}
!885 = !{ptr @.str.176, !358, !"<string literal>", i1 false, i1 false}
!886 = !{ptr @.str.177, !358, !"<string literal>", i1 false, i1 false}
!887 = !{ptr @.str.178, !358, !"<string literal>", i1 false, i1 false}
!888 = !{ptr @.str.179, !358, !"<string literal>", i1 false, i1 false}
!889 = !{ptr @.str.180, !358, !"<string literal>", i1 false, i1 false}
!890 = !{ptr @.str.181, !358, !"<string literal>", i1 false, i1 false}
!891 = !{ptr @.str.182, !358, !"<string literal>", i1 false, i1 false}
!892 = !{ptr @.str.183, !358, !"<string literal>", i1 false, i1 false}
!893 = !{ptr @.str.184, !358, !"<string literal>", i1 false, i1 false}
!894 = !{ptr @.str.185, !358, !"<string literal>", i1 false, i1 false}
!895 = !{ptr @.str.186, !358, !"<string literal>", i1 false, i1 false}
!896 = !{ptr @.str.187, !358, !"<string literal>", i1 false, i1 false}
!897 = !{ptr @trace_event_fields_fib_table_lookup, !358, !"trace_event_fields_fib_table_lookup", i1 false, i1 false}
!898 = !{ptr @trace_event_type_funcs_fib_table_lookup, !358, !"trace_event_type_funcs_fib_table_lookup", i1 false, i1 false}
!899 = !{ptr @.str.188, !358, !"<string literal>", i1 false, i1 false}
!900 = !{ptr @print_fmt_fib_table_lookup, !358, !"print_fmt_fib_table_lookup", i1 false, i1 false}
!901 = !{ptr @__tpstrtab_qdisc_dequeue, !366, !"__tpstrtab_qdisc_dequeue", i1 false, i1 false}
!902 = !{ptr @__tpstrtab_qdisc_enqueue, !370, !"__tpstrtab_qdisc_enqueue", i1 false, i1 false}
!903 = !{ptr @__tpstrtab_qdisc_reset, !374, !"__tpstrtab_qdisc_reset", i1 false, i1 false}
!904 = !{ptr @__tpstrtab_qdisc_destroy, !378, !"__tpstrtab_qdisc_destroy", i1 false, i1 false}
!905 = !{ptr @__tpstrtab_qdisc_create, !382, !"__tpstrtab_qdisc_create", i1 false, i1 false}
!906 = !{ptr @str__qdisc__trace_system_name, !649, !"str__qdisc__trace_system_name", i1 false, i1 false}
!907 = !{ptr @.str.189, !366, !"<string literal>", i1 false, i1 false}
!908 = !{ptr @.str.190, !366, !"<string literal>", i1 false, i1 false}
!909 = !{ptr @.str.191, !366, !"<string literal>", i1 false, i1 false}
!910 = !{ptr @.str.192, !366, !"<string literal>", i1 false, i1 false}
!911 = !{ptr @.str.193, !366, !"<string literal>", i1 false, i1 false}
!912 = !{ptr @.str.194, !366, !"<string literal>", i1 false, i1 false}
!913 = !{ptr @.str.195, !366, !"<string literal>", i1 false, i1 false}
!914 = !{ptr @.str.196, !366, !"<string literal>", i1 false, i1 false}
!915 = !{ptr @.str.197, !366, !"<string literal>", i1 false, i1 false}
!916 = !{ptr @.str.198, !366, !"<string literal>", i1 false, i1 false}
!917 = !{ptr @trace_event_fields_qdisc_dequeue, !366, !"trace_event_fields_qdisc_dequeue", i1 false, i1 false}
!918 = !{ptr @trace_event_type_funcs_qdisc_dequeue, !366, !"trace_event_type_funcs_qdisc_dequeue", i1 false, i1 false}
!919 = !{ptr @.str.199, !366, !"<string literal>", i1 false, i1 false}
!920 = !{ptr @print_fmt_qdisc_dequeue, !366, !"print_fmt_qdisc_dequeue", i1 false, i1 false}
!921 = !{ptr @trace_event_fields_qdisc_enqueue, !370, !"trace_event_fields_qdisc_enqueue", i1 false, i1 false}
!922 = !{ptr @trace_event_type_funcs_qdisc_enqueue, !370, !"trace_event_type_funcs_qdisc_enqueue", i1 false, i1 false}
!923 = !{ptr @.str.200, !370, !"<string literal>", i1 false, i1 false}
!924 = !{ptr @print_fmt_qdisc_enqueue, !370, !"print_fmt_qdisc_enqueue", i1 false, i1 false}
!925 = !{ptr @.str.201, !374, !"<string literal>", i1 false, i1 false}
!926 = !{ptr @trace_event_fields_qdisc_reset, !374, !"trace_event_fields_qdisc_reset", i1 false, i1 false}
!927 = !{ptr @trace_event_type_funcs_qdisc_reset, !374, !"trace_event_type_funcs_qdisc_reset", i1 false, i1 false}
!928 = !{ptr @.str.202, !374, !"<string literal>", i1 false, i1 false}
!929 = !{ptr @print_fmt_qdisc_reset, !374, !"print_fmt_qdisc_reset", i1 false, i1 false}
!930 = !{ptr @trace_event_fields_qdisc_destroy, !378, !"trace_event_fields_qdisc_destroy", i1 false, i1 false}
!931 = !{ptr @trace_event_type_funcs_qdisc_destroy, !378, !"trace_event_type_funcs_qdisc_destroy", i1 false, i1 false}
!932 = !{ptr @print_fmt_qdisc_destroy, !378, !"print_fmt_qdisc_destroy", i1 false, i1 false}
!933 = !{ptr @trace_event_fields_qdisc_create, !382, !"trace_event_fields_qdisc_create", i1 false, i1 false}
!934 = !{ptr @trace_event_type_funcs_qdisc_create, !382, !"trace_event_type_funcs_qdisc_create", i1 false, i1 false}
!935 = !{ptr @.str.203, !382, !"<string literal>", i1 false, i1 false}
!936 = !{ptr @print_fmt_qdisc_create, !382, !"print_fmt_qdisc_create", i1 false, i1 false}
!937 = !{ptr @__tpstrtab_br_fdb_add, !406, !"__tpstrtab_br_fdb_add", i1 false, i1 false}
!938 = !{ptr @__tpstrtab_br_fdb_external_learn_add, !410, !"__tpstrtab_br_fdb_external_learn_add", i1 false, i1 false}
!939 = !{ptr @__tpstrtab_fdb_delete, !414, !"__tpstrtab_fdb_delete", i1 false, i1 false}
!940 = !{ptr @__tpstrtab_br_fdb_update, !418, !"__tpstrtab_br_fdb_update", i1 false, i1 false}
!941 = !{ptr @str__bridge__trace_system_name, !649, !"str__bridge__trace_system_name", i1 false, i1 false}
!942 = !{ptr @.str.204, !406, !"<string literal>", i1 false, i1 false}
!943 = !{ptr @.str.205, !406, !"<string literal>", i1 false, i1 false}
!944 = !{ptr @.str.206, !406, !"<string literal>", i1 false, i1 false}
!945 = !{ptr @.str.207, !406, !"<string literal>", i1 false, i1 false}
!946 = !{ptr @.str.208, !406, !"<string literal>", i1 false, i1 false}
!947 = !{ptr @trace_event_fields_br_fdb_add, !406, !"trace_event_fields_br_fdb_add", i1 false, i1 false}
!948 = !{ptr @trace_event_type_funcs_br_fdb_add, !406, !"trace_event_type_funcs_br_fdb_add", i1 false, i1 false}
!949 = !{ptr @.str.209, !406, !"<string literal>", i1 false, i1 false}
!950 = !{ptr @print_fmt_br_fdb_add, !406, !"print_fmt_br_fdb_add", i1 false, i1 false}
!951 = !{ptr @.str.210, !410, !"<string literal>", i1 false, i1 false}
!952 = !{ptr @.str.211, !410, !"<string literal>", i1 false, i1 false}
!953 = !{ptr @trace_event_fields_br_fdb_external_learn_add, !410, !"trace_event_fields_br_fdb_external_learn_add", i1 false, i1 false}
!954 = !{ptr @trace_event_type_funcs_br_fdb_external_learn_add, !410, !"trace_event_type_funcs_br_fdb_external_learn_add", i1 false, i1 false}
!955 = !{ptr @.str.212, !410, !"<string literal>", i1 false, i1 false}
!956 = !{ptr @print_fmt_br_fdb_external_learn_add, !410, !"print_fmt_br_fdb_external_learn_add", i1 false, i1 false}
!957 = !{ptr @trace_event_fields_fdb_delete, !414, !"trace_event_fields_fdb_delete", i1 false, i1 false}
!958 = !{ptr @trace_event_type_funcs_fdb_delete, !414, !"trace_event_type_funcs_fdb_delete", i1 false, i1 false}
!959 = !{ptr @.str.213, !414, !"<string literal>", i1 false, i1 false}
!960 = !{ptr @print_fmt_fdb_delete, !414, !"print_fmt_fdb_delete", i1 false, i1 false}
!961 = !{ptr @trace_event_fields_br_fdb_update, !418, !"trace_event_fields_br_fdb_update", i1 false, i1 false}
!962 = !{ptr @trace_event_type_funcs_br_fdb_update, !418, !"trace_event_type_funcs_br_fdb_update", i1 false, i1 false}
!963 = !{ptr @.str.214, !418, !"<string literal>", i1 false, i1 false}
!964 = !{ptr @print_fmt_br_fdb_update, !418, !"print_fmt_br_fdb_update", i1 false, i1 false}
!965 = !{ptr @__tpstrtab_page_pool_release, !454, !"__tpstrtab_page_pool_release", i1 false, i1 false}
!966 = !{ptr @__tpstrtab_page_pool_state_release, !458, !"__tpstrtab_page_pool_state_release", i1 false, i1 false}
!967 = !{ptr @__tpstrtab_page_pool_state_hold, !462, !"__tpstrtab_page_pool_state_hold", i1 false, i1 false}
!968 = !{ptr @__tpstrtab_page_pool_update_nid, !466, !"__tpstrtab_page_pool_update_nid", i1 false, i1 false}
!969 = !{ptr @str__page_pool__trace_system_name, !649, !"str__page_pool__trace_system_name", i1 false, i1 false}
!970 = !{ptr @.str.215, !454, !"<string literal>", i1 false, i1 false}
!971 = !{ptr @.str.216, !454, !"<string literal>", i1 false, i1 false}
!972 = !{ptr @.str.217, !454, !"<string literal>", i1 false, i1 false}
!973 = !{ptr @.str.218, !454, !"<string literal>", i1 false, i1 false}
!974 = !{ptr @.str.219, !454, !"<string literal>", i1 false, i1 false}
!975 = !{ptr @.str.220, !454, !"<string literal>", i1 false, i1 false}
!976 = !{ptr @.str.221, !454, !"<string literal>", i1 false, i1 false}
!977 = !{ptr @.str.222, !454, !"<string literal>", i1 false, i1 false}
!978 = !{ptr @trace_event_fields_page_pool_release, !454, !"trace_event_fields_page_pool_release", i1 false, i1 false}
!979 = !{ptr @trace_event_type_funcs_page_pool_release, !454, !"trace_event_type_funcs_page_pool_release", i1 false, i1 false}
!980 = !{ptr @.str.223, !454, !"<string literal>", i1 false, i1 false}
!981 = !{ptr @print_fmt_page_pool_release, !454, !"print_fmt_page_pool_release", i1 false, i1 false}
!982 = !{ptr @.str.224, !458, !"<string literal>", i1 false, i1 false}
!983 = !{ptr @.str.225, !458, !"<string literal>", i1 false, i1 false}
!984 = !{ptr @.str.226, !458, !"<string literal>", i1 false, i1 false}
!985 = !{ptr @trace_event_fields_page_pool_state_release, !458, !"trace_event_fields_page_pool_state_release", i1 false, i1 false}
!986 = !{ptr @trace_event_type_funcs_page_pool_state_release, !458, !"trace_event_type_funcs_page_pool_state_release", i1 false, i1 false}
!987 = !{ptr @.str.227, !458, !"<string literal>", i1 false, i1 false}
!988 = !{ptr @print_fmt_page_pool_state_release, !458, !"print_fmt_page_pool_state_release", i1 false, i1 false}
!989 = !{ptr @trace_event_fields_page_pool_state_hold, !462, !"trace_event_fields_page_pool_state_hold", i1 false, i1 false}
!990 = !{ptr @trace_event_type_funcs_page_pool_state_hold, !462, !"trace_event_type_funcs_page_pool_state_hold", i1 false, i1 false}
!991 = !{ptr @.str.228, !462, !"<string literal>", i1 false, i1 false}
!992 = !{ptr @print_fmt_page_pool_state_hold, !462, !"print_fmt_page_pool_state_hold", i1 false, i1 false}
!993 = !{ptr @.str.229, !466, !"<string literal>", i1 false, i1 false}
!994 = !{ptr @.str.230, !466, !"<string literal>", i1 false, i1 false}
!995 = !{ptr @trace_event_fields_page_pool_update_nid, !466, !"trace_event_fields_page_pool_update_nid", i1 false, i1 false}
!996 = !{ptr @trace_event_type_funcs_page_pool_update_nid, !466, !"trace_event_type_funcs_page_pool_update_nid", i1 false, i1 false}
!997 = !{ptr @.str.231, !466, !"<string literal>", i1 false, i1 false}
!998 = !{ptr @print_fmt_page_pool_update_nid, !466, !"print_fmt_page_pool_update_nid", i1 false, i1 false}
!999 = !{ptr @__tpstrtab_neigh_create, !553, !"__tpstrtab_neigh_create", i1 false, i1 false}
!1000 = !{ptr @__tpstrtab_neigh_update, !557, !"__tpstrtab_neigh_update", i1 false, i1 false}
!1001 = !{ptr @__tpstrtab_neigh_update_done, !561, !"__tpstrtab_neigh_update_done", i1 false, i1 false}
!1002 = !{ptr @__tpstrtab_neigh_timer_handler, !565, !"__tpstrtab_neigh_timer_handler", i1 false, i1 false}
!1003 = !{ptr @__tpstrtab_neigh_event_send_done, !569, !"__tpstrtab_neigh_event_send_done", i1 false, i1 false}
!1004 = !{ptr @__tpstrtab_neigh_event_send_dead, !573, !"__tpstrtab_neigh_event_send_dead", i1 false, i1 false}
!1005 = !{ptr @__tpstrtab_neigh_cleanup_and_release, !577, !"__tpstrtab_neigh_cleanup_and_release", i1 false, i1 false}
!1006 = !{ptr @str__neigh__trace_system_name, !649, !"str__neigh__trace_system_name", i1 false, i1 false}
!1007 = !{ptr @.str.232, !553, !"<string literal>", i1 false, i1 false}
!1008 = !{ptr @.str.233, !553, !"<string literal>", i1 false, i1 false}
!1009 = !{ptr @.str.234, !553, !"<string literal>", i1 false, i1 false}
!1010 = !{ptr @.str.235, !553, !"<string literal>", i1 false, i1 false}
!1011 = !{ptr @.str.236, !553, !"<string literal>", i1 false, i1 false}
!1012 = !{ptr @.str.237, !553, !"<string literal>", i1 false, i1 false}
!1013 = !{ptr @.str.238, !553, !"<string literal>", i1 false, i1 false}
!1014 = !{ptr @.str.239, !553, !"<string literal>", i1 false, i1 false}
!1015 = !{ptr @trace_event_fields_neigh_create, !553, !"trace_event_fields_neigh_create", i1 false, i1 false}
!1016 = !{ptr @trace_event_type_funcs_neigh_create, !553, !"trace_event_type_funcs_neigh_create", i1 false, i1 false}
!1017 = !{ptr @.str.240, !553, !"<string literal>", i1 false, i1 false}
!1018 = !{ptr @print_fmt_neigh_create, !553, !"print_fmt_neigh_create", i1 false, i1 false}
!1019 = !{ptr @.str.241, !557, !"<string literal>", i1 false, i1 false}
!1020 = !{ptr @.str.242, !557, !"<string literal>", i1 false, i1 false}
!1021 = !{ptr @.str.243, !557, !"<string literal>", i1 false, i1 false}
!1022 = !{ptr @.str.244, !557, !"<string literal>", i1 false, i1 false}
!1023 = !{ptr @.str.245, !557, !"<string literal>", i1 false, i1 false}
!1024 = !{ptr @.str.246, !557, !"<string literal>", i1 false, i1 false}
!1025 = !{ptr @.str.247, !557, !"<string literal>", i1 false, i1 false}
!1026 = !{ptr @.str.248, !557, !"<string literal>", i1 false, i1 false}
!1027 = !{ptr @.str.249, !557, !"<string literal>", i1 false, i1 false}
!1028 = !{ptr @.str.250, !557, !"<string literal>", i1 false, i1 false}
!1029 = !{ptr @.str.251, !557, !"<string literal>", i1 false, i1 false}
!1030 = !{ptr @.str.252, !557, !"<string literal>", i1 false, i1 false}
!1031 = !{ptr @.str.253, !557, !"<string literal>", i1 false, i1 false}
!1032 = !{ptr @.str.254, !557, !"<string literal>", i1 false, i1 false}
!1033 = !{ptr @trace_event_fields_neigh_update, !557, !"trace_event_fields_neigh_update", i1 false, i1 false}
!1034 = !{ptr @trace_event_type_funcs_neigh_update, !557, !"trace_event_type_funcs_neigh_update", i1 false, i1 false}
!1035 = !{ptr @.str.255, !557, !"<string literal>", i1 false, i1 false}
!1036 = !{ptr @.str.256, !557, !"<string literal>", i1 false, i1 false}
!1037 = !{ptr @.str.257, !557, !"<string literal>", i1 false, i1 false}
!1038 = !{ptr @.str.258, !557, !"<string literal>", i1 false, i1 false}
!1039 = !{ptr @.str.259, !557, !"<string literal>", i1 false, i1 false}
!1040 = !{ptr @.str.260, !557, !"<string literal>", i1 false, i1 false}
!1041 = !{ptr @.str.261, !557, !"<string literal>", i1 false, i1 false}
!1042 = !{ptr @.str.262, !557, !"<string literal>", i1 false, i1 false}
!1043 = !{ptr @.str.263, !557, !"<string literal>", i1 false, i1 false}
!1044 = !{ptr @trace_raw_output_neigh_update.symbols, !557, !"symbols", i1 false, i1 false}
!1045 = !{ptr @trace_raw_output_neigh_update.symbols.264, !557, !"symbols", i1 false, i1 false}
!1046 = !{ptr @print_fmt_neigh_update, !557, !"print_fmt_neigh_update", i1 false, i1 false}
!1047 = !{ptr @trace_event_fields_neigh__update, !587, !"trace_event_fields_neigh__update", i1 false, i1 false}
!1048 = !{ptr @trace_event_type_funcs_neigh__update, !587, !"trace_event_type_funcs_neigh__update", i1 false, i1 false}
!1049 = !{ptr @.str.265, !587, !"<string literal>", i1 false, i1 false}
!1050 = !{ptr @trace_raw_output_neigh__update.symbols, !587, !"symbols", i1 false, i1 false}
!1051 = !{ptr @print_fmt_neigh__update, !587, !"print_fmt_neigh__update", i1 false, i1 false}
!1052 = !{!"sp"}
!1053 = !{i32 1, !"wchar_size", i32 2}
!1054 = !{i32 1, !"min_enum_size", i32 4}
!1055 = !{i32 8, !"branch-target-enforcement", i32 0}
!1056 = !{i32 8, !"sign-return-address", i32 0}
!1057 = !{i32 8, !"sign-return-address-all", i32 0}
!1058 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1059 = !{i32 7, !"uwtable", i32 1}
!1060 = !{i32 7, !"frame-pointer", i32 2}
!1061 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1062 = !{!"branch_weights", i32 2000, i32 1}
!1063 = !{!"branch_weights", i32 1, i32 2000}
!1064 = !{!"auto-init"}
!1065 = !{i64 2162489765}
!1066 = !{i64 2162489862}
!1067 = !{i8 0, i8 2}
