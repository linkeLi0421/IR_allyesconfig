; ModuleID = '/llk/IR_all_yes/net/core/skbuff.c_pt.bc'
source_filename = "../net/core/skbuff.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+sysctl_max_skb_frags\22, \22a\22\09"
module asm "\09.weak\09__crc_sysctl_max_skb_frags\09\09\09\09"
module asm "\09.long\09__crc_sysctl_max_skb_frags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sysctl_max_skb_frags:\09\09\09\09\09"
module asm "\09.asciz \09\22sysctl_max_skb_frags\22\09\09\09\09\09"
module asm "__kstrtabns_sysctl_max_skb_frags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__napi_alloc_frag_align\22, \22a\22\09"
module asm "\09.weak\09__crc___napi_alloc_frag_align\09\09\09\09"
module asm "\09.long\09__crc___napi_alloc_frag_align\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___napi_alloc_frag_align:\09\09\09\09\09"
module asm "\09.asciz \09\22__napi_alloc_frag_align\22\09\09\09\09\09"
module asm "__kstrtabns___napi_alloc_frag_align:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__netdev_alloc_frag_align\22, \22a\22\09"
module asm "\09.weak\09__crc___netdev_alloc_frag_align\09\09\09\09"
module asm "\09.long\09__crc___netdev_alloc_frag_align\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netdev_alloc_frag_align:\09\09\09\09\09"
module asm "\09.asciz \09\22__netdev_alloc_frag_align\22\09\09\09\09\09"
module asm "__kstrtabns___netdev_alloc_frag_align:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+build_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_build_skb\09\09\09\09"
module asm "\09.long\09__crc_build_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_build_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22build_skb\22\09\09\09\09\09"
module asm "__kstrtabns_build_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+build_skb_around\22, \22a\22\09"
module asm "\09.weak\09__crc_build_skb_around\09\09\09\09"
module asm "\09.long\09__crc_build_skb_around\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_build_skb_around:\09\09\09\09\09"
module asm "\09.asciz \09\22build_skb_around\22\09\09\09\09\09"
module asm "__kstrtabns_build_skb_around:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+napi_build_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_napi_build_skb\09\09\09\09"
module asm "\09.long\09__crc_napi_build_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_build_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_build_skb\22\09\09\09\09\09"
module asm "__kstrtabns_napi_build_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__alloc_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___alloc_skb\09\09\09\09"
module asm "\09.long\09__crc___alloc_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___alloc_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__alloc_skb\22\09\09\09\09\09"
module asm "__kstrtabns___alloc_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__netdev_alloc_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___netdev_alloc_skb\09\09\09\09"
module asm "\09.long\09__crc___netdev_alloc_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___netdev_alloc_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__netdev_alloc_skb\22\09\09\09\09\09"
module asm "__kstrtabns___netdev_alloc_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__napi_alloc_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___napi_alloc_skb\09\09\09\09"
module asm "\09.long\09__crc___napi_alloc_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___napi_alloc_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__napi_alloc_skb\22\09\09\09\09\09"
module asm "__kstrtabns___napi_alloc_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_add_rx_frag\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_add_rx_frag\09\09\09\09"
module asm "\09.long\09__crc_skb_add_rx_frag\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_add_rx_frag:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_add_rx_frag\22\09\09\09\09\09"
module asm "__kstrtabns_skb_add_rx_frag:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_coalesce_rx_frag\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_coalesce_rx_frag\09\09\09\09"
module asm "\09.long\09__crc_skb_coalesce_rx_frag\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_coalesce_rx_frag:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_coalesce_rx_frag\22\09\09\09\09\09"
module asm "__kstrtabns_skb_coalesce_rx_frag:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__kfree_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___kfree_skb\09\09\09\09"
module asm "\09.long\09__crc___kfree_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___kfree_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__kfree_skb\22\09\09\09\09\09"
module asm "__kstrtabns___kfree_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kfree_skb_reason\22, \22a\22\09"
module asm "\09.weak\09__crc_kfree_skb_reason\09\09\09\09"
module asm "\09.long\09__crc_kfree_skb_reason\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kfree_skb_reason:\09\09\09\09\09"
module asm "\09.asciz \09\22kfree_skb_reason\22\09\09\09\09\09"
module asm "__kstrtabns_kfree_skb_reason:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kfree_skb_list\22, \22a\22\09"
module asm "\09.weak\09__crc_kfree_skb_list\09\09\09\09"
module asm "\09.long\09__crc_kfree_skb_list\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kfree_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22kfree_skb_list\22\09\09\09\09\09"
module asm "__kstrtabns_kfree_skb_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_dump\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_dump\09\09\09\09"
module asm "\09.long\09__crc_skb_dump\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_dump:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_dump\22\09\09\09\09\09"
module asm "__kstrtabns_skb_dump:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_tx_error\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_tx_error\09\09\09\09"
module asm "\09.long\09__crc_skb_tx_error\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_tx_error:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_tx_error\22\09\09\09\09\09"
module asm "__kstrtabns_skb_tx_error:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+consume_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_consume_skb\09\09\09\09"
module asm "\09.long\09__crc_consume_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_consume_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22consume_skb\22\09\09\09\09\09"
module asm "__kstrtabns_consume_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+napi_consume_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_napi_consume_skb\09\09\09\09"
module asm "\09.long\09__crc_napi_consume_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_napi_consume_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22napi_consume_skb\22\09\09\09\09\09"
module asm "__kstrtabns_napi_consume_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+alloc_skb_for_msg\22, \22a\22\09"
module asm "\09.weak\09__crc_alloc_skb_for_msg\09\09\09\09"
module asm "\09.long\09__crc_alloc_skb_for_msg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_alloc_skb_for_msg:\09\09\09\09\09"
module asm "\09.asciz \09\22alloc_skb_for_msg\22\09\09\09\09\09"
module asm "__kstrtabns_alloc_skb_for_msg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_morph\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_morph\09\09\09\09"
module asm "\09.long\09__crc_skb_morph\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_morph:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_morph\22\09\09\09\09\09"
module asm "__kstrtabns_skb_morph:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mm_account_pinned_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_mm_account_pinned_pages\09\09\09\09"
module asm "\09.long\09__crc_mm_account_pinned_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mm_account_pinned_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22mm_account_pinned_pages\22\09\09\09\09\09"
module asm "__kstrtabns_mm_account_pinned_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+mm_unaccount_pinned_pages\22, \22a\22\09"
module asm "\09.weak\09__crc_mm_unaccount_pinned_pages\09\09\09\09"
module asm "\09.long\09__crc_mm_unaccount_pinned_pages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_mm_unaccount_pinned_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22mm_unaccount_pinned_pages\22\09\09\09\09\09"
module asm "__kstrtabns_mm_unaccount_pinned_pages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+msg_zerocopy_alloc\22, \22a\22\09"
module asm "\09.weak\09__crc_msg_zerocopy_alloc\09\09\09\09"
module asm "\09.long\09__crc_msg_zerocopy_alloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_msg_zerocopy_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22msg_zerocopy_alloc\22\09\09\09\09\09"
module asm "__kstrtabns_msg_zerocopy_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+msg_zerocopy_realloc\22, \22a\22\09"
module asm "\09.weak\09__crc_msg_zerocopy_realloc\09\09\09\09"
module asm "\09.long\09__crc_msg_zerocopy_realloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_msg_zerocopy_realloc:\09\09\09\09\09"
module asm "\09.asciz \09\22msg_zerocopy_realloc\22\09\09\09\09\09"
module asm "__kstrtabns_msg_zerocopy_realloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+msg_zerocopy_callback\22, \22a\22\09"
module asm "\09.weak\09__crc_msg_zerocopy_callback\09\09\09\09"
module asm "\09.long\09__crc_msg_zerocopy_callback\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_msg_zerocopy_callback:\09\09\09\09\09"
module asm "\09.asciz \09\22msg_zerocopy_callback\22\09\09\09\09\09"
module asm "__kstrtabns_msg_zerocopy_callback:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+msg_zerocopy_put_abort\22, \22a\22\09"
module asm "\09.weak\09__crc_msg_zerocopy_put_abort\09\09\09\09"
module asm "\09.long\09__crc_msg_zerocopy_put_abort\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_msg_zerocopy_put_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22msg_zerocopy_put_abort\22\09\09\09\09\09"
module asm "__kstrtabns_msg_zerocopy_put_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_zerocopy_iter_dgram\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_zerocopy_iter_dgram\09\09\09\09"
module asm "\09.long\09__crc_skb_zerocopy_iter_dgram\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_zerocopy_iter_dgram:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_zerocopy_iter_dgram\22\09\09\09\09\09"
module asm "__kstrtabns_skb_zerocopy_iter_dgram:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_zerocopy_iter_stream\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_zerocopy_iter_stream\09\09\09\09"
module asm "\09.long\09__crc_skb_zerocopy_iter_stream\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_zerocopy_iter_stream:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_zerocopy_iter_stream\22\09\09\09\09\09"
module asm "__kstrtabns_skb_zerocopy_iter_stream:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_copy_ubufs\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_copy_ubufs\09\09\09\09"
module asm "\09.long\09__crc_skb_copy_ubufs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_copy_ubufs:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_copy_ubufs\22\09\09\09\09\09"
module asm "__kstrtabns_skb_copy_ubufs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_clone\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_clone\09\09\09\09"
module asm "\09.long\09__crc_skb_clone\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_clone:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_clone\22\09\09\09\09\09"
module asm "__kstrtabns_skb_clone:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_headers_offset_update\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_headers_offset_update\09\09\09\09"
module asm "\09.long\09__crc_skb_headers_offset_update\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_headers_offset_update:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_headers_offset_update\22\09\09\09\09\09"
module asm "__kstrtabns_skb_headers_offset_update:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_copy_header\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_copy_header\09\09\09\09"
module asm "\09.long\09__crc_skb_copy_header\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_copy_header:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_copy_header\22\09\09\09\09\09"
module asm "__kstrtabns_skb_copy_header:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_copy\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_copy\09\09\09\09"
module asm "\09.long\09__crc_skb_copy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_copy:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_copy\22\09\09\09\09\09"
module asm "__kstrtabns_skb_copy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__pskb_copy_fclone\22, \22a\22\09"
module asm "\09.weak\09__crc___pskb_copy_fclone\09\09\09\09"
module asm "\09.long\09__crc___pskb_copy_fclone\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___pskb_copy_fclone:\09\09\09\09\09"
module asm "\09.asciz \09\22__pskb_copy_fclone\22\09\09\09\09\09"
module asm "__kstrtabns___pskb_copy_fclone:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pskb_expand_head\22, \22a\22\09"
module asm "\09.weak\09__crc_pskb_expand_head\09\09\09\09"
module asm "\09.long\09__crc_pskb_expand_head\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pskb_expand_head:\09\09\09\09\09"
module asm "\09.asciz \09\22pskb_expand_head\22\09\09\09\09\09"
module asm "__kstrtabns_pskb_expand_head:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_realloc_headroom\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_realloc_headroom\09\09\09\09"
module asm "\09.long\09__crc_skb_realloc_headroom\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_realloc_headroom:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_realloc_headroom\22\09\09\09\09\09"
module asm "__kstrtabns_skb_realloc_headroom:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_expand_head\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_expand_head\09\09\09\09"
module asm "\09.long\09__crc_skb_expand_head\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_expand_head:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_expand_head\22\09\09\09\09\09"
module asm "__kstrtabns_skb_expand_head:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_copy_expand\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_copy_expand\09\09\09\09"
module asm "\09.long\09__crc_skb_copy_expand\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_copy_expand:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_copy_expand\22\09\09\09\09\09"
module asm "__kstrtabns_skb_copy_expand:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_pad\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_pad\09\09\09\09"
module asm "\09.long\09__crc___skb_pad\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_pad:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_pad\22\09\09\09\09\09"
module asm "__kstrtabns___skb_pad:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pskb_put\22, \22a\22\09"
module asm "\09.weak\09__crc_pskb_put\09\09\09\09"
module asm "\09.long\09__crc_pskb_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pskb_put:\09\09\09\09\09"
module asm "\09.asciz \09\22pskb_put\22\09\09\09\09\09"
module asm "__kstrtabns_pskb_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_put\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_put\09\09\09\09"
module asm "\09.long\09__crc_skb_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_put:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_put\22\09\09\09\09\09"
module asm "__kstrtabns_skb_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_push\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_push\09\09\09\09"
module asm "\09.long\09__crc_skb_push\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_push:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_push\22\09\09\09\09\09"
module asm "__kstrtabns_skb_push:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_pull\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_pull\09\09\09\09"
module asm "\09.long\09__crc_skb_pull\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_pull:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_pull\22\09\09\09\09\09"
module asm "__kstrtabns_skb_pull:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_pull_data\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_pull_data\09\09\09\09"
module asm "\09.long\09__crc_skb_pull_data\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_pull_data:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_pull_data\22\09\09\09\09\09"
module asm "__kstrtabns_skb_pull_data:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_trim\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_trim\09\09\09\09"
module asm "\09.long\09__crc_skb_trim\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_trim:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_trim\22\09\09\09\09\09"
module asm "__kstrtabns_skb_trim:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+___pskb_trim\22, \22a\22\09"
module asm "\09.weak\09__crc____pskb_trim\09\09\09\09"
module asm "\09.long\09__crc____pskb_trim\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab____pskb_trim:\09\09\09\09\09"
module asm "\09.asciz \09\22___pskb_trim\22\09\09\09\09\09"
module asm "__kstrtabns____pskb_trim:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pskb_trim_rcsum_slow\22, \22a\22\09"
module asm "\09.weak\09__crc_pskb_trim_rcsum_slow\09\09\09\09"
module asm "\09.long\09__crc_pskb_trim_rcsum_slow\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pskb_trim_rcsum_slow:\09\09\09\09\09"
module asm "\09.asciz \09\22pskb_trim_rcsum_slow\22\09\09\09\09\09"
module asm "__kstrtabns_pskb_trim_rcsum_slow:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__pskb_pull_tail\22, \22a\22\09"
module asm "\09.weak\09__crc___pskb_pull_tail\09\09\09\09"
module asm "\09.long\09__crc___pskb_pull_tail\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___pskb_pull_tail:\09\09\09\09\09"
module asm "\09.asciz \09\22__pskb_pull_tail\22\09\09\09\09\09"
module asm "__kstrtabns___pskb_pull_tail:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_copy_bits\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_copy_bits\09\09\09\09"
module asm "\09.long\09__crc_skb_copy_bits\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_copy_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_copy_bits\22\09\09\09\09\09"
module asm "__kstrtabns_skb_copy_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_splice_bits\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_splice_bits\09\09\09\09"
module asm "\09.long\09__crc_skb_splice_bits\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_splice_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_splice_bits\22\09\09\09\09\09"
module asm "__kstrtabns_skb_splice_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_send_sock_locked\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_send_sock_locked\09\09\09\09"
module asm "\09.long\09__crc_skb_send_sock_locked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_send_sock_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_send_sock_locked\22\09\09\09\09\09"
module asm "__kstrtabns_skb_send_sock_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_store_bits\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_store_bits\09\09\09\09"
module asm "\09.long\09__crc_skb_store_bits\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_store_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_store_bits\22\09\09\09\09\09"
module asm "__kstrtabns_skb_store_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_checksum\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_checksum\09\09\09\09"
module asm "\09.long\09__crc___skb_checksum\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_checksum:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_checksum\22\09\09\09\09\09"
module asm "__kstrtabns___skb_checksum:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_checksum\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_checksum\09\09\09\09"
module asm "\09.long\09__crc_skb_checksum\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_checksum:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_checksum\22\09\09\09\09\09"
module asm "__kstrtabns_skb_checksum:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_copy_and_csum_bits\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_copy_and_csum_bits\09\09\09\09"
module asm "\09.long\09__crc_skb_copy_and_csum_bits\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_copy_and_csum_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_copy_and_csum_bits\22\09\09\09\09\09"
module asm "__kstrtabns_skb_copy_and_csum_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_checksum_complete_head\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_checksum_complete_head\09\09\09\09"
module asm "\09.long\09__crc___skb_checksum_complete_head\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_checksum_complete_head:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_checksum_complete_head\22\09\09\09\09\09"
module asm "__kstrtabns___skb_checksum_complete_head:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_checksum_complete\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_checksum_complete\09\09\09\09"
module asm "\09.long\09__crc___skb_checksum_complete\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_checksum_complete:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_checksum_complete\22\09\09\09\09\09"
module asm "__kstrtabns___skb_checksum_complete:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+crc32c_csum_stub\22, \22a\22\09"
module asm "\09.weak\09__crc_crc32c_csum_stub\09\09\09\09"
module asm "\09.long\09__crc_crc32c_csum_stub\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_crc32c_csum_stub:\09\09\09\09\09"
module asm "\09.asciz \09\22crc32c_csum_stub\22\09\09\09\09\09"
module asm "__kstrtabns_crc32c_csum_stub:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_zerocopy_headlen\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_zerocopy_headlen\09\09\09\09"
module asm "\09.long\09__crc_skb_zerocopy_headlen\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_zerocopy_headlen:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_zerocopy_headlen\22\09\09\09\09\09"
module asm "__kstrtabns_skb_zerocopy_headlen:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_zerocopy\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_zerocopy\09\09\09\09"
module asm "\09.long\09__crc_skb_zerocopy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_zerocopy:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_zerocopy\22\09\09\09\09\09"
module asm "__kstrtabns_skb_zerocopy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_copy_and_csum_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_copy_and_csum_dev\09\09\09\09"
module asm "\09.long\09__crc_skb_copy_and_csum_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_copy_and_csum_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_copy_and_csum_dev\22\09\09\09\09\09"
module asm "__kstrtabns_skb_copy_and_csum_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_dequeue\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_dequeue\09\09\09\09"
module asm "\09.long\09__crc_skb_dequeue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_dequeue:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_dequeue\22\09\09\09\09\09"
module asm "__kstrtabns_skb_dequeue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_dequeue_tail\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_dequeue_tail\09\09\09\09"
module asm "\09.long\09__crc_skb_dequeue_tail\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_dequeue_tail:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_dequeue_tail\22\09\09\09\09\09"
module asm "__kstrtabns_skb_dequeue_tail:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_queue_purge\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_queue_purge\09\09\09\09"
module asm "\09.long\09__crc_skb_queue_purge\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_queue_purge:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_queue_purge\22\09\09\09\09\09"
module asm "__kstrtabns_skb_queue_purge:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_queue_head\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_queue_head\09\09\09\09"
module asm "\09.long\09__crc_skb_queue_head\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_queue_head:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_queue_head\22\09\09\09\09\09"
module asm "__kstrtabns_skb_queue_head:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_queue_tail\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_queue_tail\09\09\09\09"
module asm "\09.long\09__crc_skb_queue_tail\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_queue_tail:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_queue_tail\22\09\09\09\09\09"
module asm "__kstrtabns_skb_queue_tail:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_unlink\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_unlink\09\09\09\09"
module asm "\09.long\09__crc_skb_unlink\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_unlink:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_unlink\22\09\09\09\09\09"
module asm "__kstrtabns_skb_unlink:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_append\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_append\09\09\09\09"
module asm "\09.long\09__crc_skb_append\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_append:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_append\22\09\09\09\09\09"
module asm "__kstrtabns_skb_append:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_split\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_split\09\09\09\09"
module asm "\09.long\09__crc_skb_split\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_split:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_split\22\09\09\09\09\09"
module asm "__kstrtabns_skb_split:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_prepare_seq_read\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_prepare_seq_read\09\09\09\09"
module asm "\09.long\09__crc_skb_prepare_seq_read\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_prepare_seq_read:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_prepare_seq_read\22\09\09\09\09\09"
module asm "__kstrtabns_skb_prepare_seq_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_seq_read\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_seq_read\09\09\09\09"
module asm "\09.long\09__crc_skb_seq_read\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_seq_read:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_seq_read\22\09\09\09\09\09"
module asm "__kstrtabns_skb_seq_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_abort_seq_read\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_abort_seq_read\09\09\09\09"
module asm "\09.long\09__crc_skb_abort_seq_read\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_abort_seq_read:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_abort_seq_read\22\09\09\09\09\09"
module asm "__kstrtabns_skb_abort_seq_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_find_text\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_find_text\09\09\09\09"
module asm "\09.long\09__crc_skb_find_text\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_find_text:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_find_text\22\09\09\09\09\09"
module asm "__kstrtabns_skb_find_text:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_append_pagefrags\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_append_pagefrags\09\09\09\09"
module asm "\09.long\09__crc_skb_append_pagefrags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_append_pagefrags:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_append_pagefrags\22\09\09\09\09\09"
module asm "__kstrtabns_skb_append_pagefrags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_pull_rcsum\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_pull_rcsum\09\09\09\09"
module asm "\09.long\09__crc_skb_pull_rcsum\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_pull_rcsum:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_pull_rcsum\22\09\09\09\09\09"
module asm "__kstrtabns_skb_pull_rcsum:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_segment_list\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_segment_list\09\09\09\09"
module asm "\09.long\09__crc_skb_segment_list\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_segment_list:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_segment_list\22\09\09\09\09\09"
module asm "__kstrtabns_skb_segment_list:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_segment\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_segment\09\09\09\09"
module asm "\09.long\09__crc_skb_segment\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_segment:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_segment\22\09\09\09\09\09"
module asm "__kstrtabns_skb_segment:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_to_sgvec\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_to_sgvec\09\09\09\09"
module asm "\09.long\09__crc_skb_to_sgvec\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_to_sgvec:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_to_sgvec\22\09\09\09\09\09"
module asm "__kstrtabns_skb_to_sgvec:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_to_sgvec_nomark\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_to_sgvec_nomark\09\09\09\09"
module asm "\09.long\09__crc_skb_to_sgvec_nomark\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_to_sgvec_nomark:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_to_sgvec_nomark\22\09\09\09\09\09"
module asm "__kstrtabns_skb_to_sgvec_nomark:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_cow_data\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_cow_data\09\09\09\09"
module asm "\09.long\09__crc_skb_cow_data\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_cow_data:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_cow_data\22\09\09\09\09\09"
module asm "__kstrtabns_skb_cow_data:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_queue_err_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_queue_err_skb\09\09\09\09"
module asm "\09.long\09__crc_sock_queue_err_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_queue_err_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_queue_err_skb\22\09\09\09\09\09"
module asm "__kstrtabns_sock_queue_err_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_dequeue_err_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_dequeue_err_skb\09\09\09\09"
module asm "\09.long\09__crc_sock_dequeue_err_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_dequeue_err_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_dequeue_err_skb\22\09\09\09\09\09"
module asm "__kstrtabns_sock_dequeue_err_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_clone_sk\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_clone_sk\09\09\09\09"
module asm "\09.long\09__crc_skb_clone_sk\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_clone_sk:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_clone_sk\22\09\09\09\09\09"
module asm "__kstrtabns_skb_clone_sk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_complete_tx_timestamp\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_complete_tx_timestamp\09\09\09\09"
module asm "\09.long\09__crc_skb_complete_tx_timestamp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_complete_tx_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_complete_tx_timestamp\22\09\09\09\09\09"
module asm "__kstrtabns_skb_complete_tx_timestamp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__skb_tstamp_tx\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_tstamp_tx\09\09\09\09"
module asm "\09.long\09__crc___skb_tstamp_tx\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_tstamp_tx:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_tstamp_tx\22\09\09\09\09\09"
module asm "__kstrtabns___skb_tstamp_tx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_tstamp_tx\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_tstamp_tx\09\09\09\09"
module asm "\09.long\09__crc_skb_tstamp_tx\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_tstamp_tx:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_tstamp_tx\22\09\09\09\09\09"
module asm "__kstrtabns_skb_tstamp_tx:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_complete_wifi_ack\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_complete_wifi_ack\09\09\09\09"
module asm "\09.long\09__crc_skb_complete_wifi_ack\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_complete_wifi_ack:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_complete_wifi_ack\22\09\09\09\09\09"
module asm "__kstrtabns_skb_complete_wifi_ack:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_partial_csum_set\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_partial_csum_set\09\09\09\09"
module asm "\09.long\09__crc_skb_partial_csum_set\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_partial_csum_set:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_partial_csum_set\22\09\09\09\09\09"
module asm "__kstrtabns_skb_partial_csum_set:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_checksum_setup\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_checksum_setup\09\09\09\09"
module asm "\09.long\09__crc_skb_checksum_setup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_checksum_setup:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_checksum_setup\22\09\09\09\09\09"
module asm "__kstrtabns_skb_checksum_setup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_checksum_trimmed\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_checksum_trimmed\09\09\09\09"
module asm "\09.long\09__crc_skb_checksum_trimmed\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_checksum_trimmed:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_checksum_trimmed\22\09\09\09\09\09"
module asm "__kstrtabns_skb_checksum_trimmed:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_warn_lro_forwarding\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_warn_lro_forwarding\09\09\09\09"
module asm "\09.long\09__crc___skb_warn_lro_forwarding\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_warn_lro_forwarding:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_warn_lro_forwarding\22\09\09\09\09\09"
module asm "__kstrtabns___skb_warn_lro_forwarding:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+kfree_skb_partial\22, \22a\22\09"
module asm "\09.weak\09__crc_kfree_skb_partial\09\09\09\09"
module asm "\09.long\09__crc_kfree_skb_partial\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_kfree_skb_partial:\09\09\09\09\09"
module asm "\09.asciz \09\22kfree_skb_partial\22\09\09\09\09\09"
module asm "__kstrtabns_kfree_skb_partial:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_try_coalesce\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_try_coalesce\09\09\09\09"
module asm "\09.long\09__crc_skb_try_coalesce\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_try_coalesce:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_try_coalesce\22\09\09\09\09\09"
module asm "__kstrtabns_skb_try_coalesce:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_scrub_packet\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_scrub_packet\09\09\09\09"
module asm "\09.long\09__crc_skb_scrub_packet\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_scrub_packet:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_scrub_packet\22\09\09\09\09\09"
module asm "__kstrtabns_skb_scrub_packet:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_gso_validate_network_len\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_gso_validate_network_len\09\09\09\09"
module asm "\09.long\09__crc_skb_gso_validate_network_len\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_gso_validate_network_len:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_gso_validate_network_len\22\09\09\09\09\09"
module asm "__kstrtabns_skb_gso_validate_network_len:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_gso_validate_mac_len\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_gso_validate_mac_len\09\09\09\09"
module asm "\09.long\09__crc_skb_gso_validate_mac_len\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_gso_validate_mac_len:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_gso_validate_mac_len\22\09\09\09\09\09"
module asm "__kstrtabns_skb_gso_validate_mac_len:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_vlan_untag\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_vlan_untag\09\09\09\09"
module asm "\09.long\09__crc_skb_vlan_untag\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_vlan_untag:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_vlan_untag\22\09\09\09\09\09"
module asm "__kstrtabns_skb_vlan_untag:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_ensure_writable\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_ensure_writable\09\09\09\09"
module asm "\09.long\09__crc_skb_ensure_writable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_ensure_writable:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_ensure_writable\22\09\09\09\09\09"
module asm "__kstrtabns_skb_ensure_writable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_vlan_pop\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_vlan_pop\09\09\09\09"
module asm "\09.long\09__crc___skb_vlan_pop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_vlan_pop:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_vlan_pop\22\09\09\09\09\09"
module asm "__kstrtabns___skb_vlan_pop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_vlan_pop\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_vlan_pop\09\09\09\09"
module asm "\09.long\09__crc_skb_vlan_pop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_vlan_pop:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_vlan_pop\22\09\09\09\09\09"
module asm "__kstrtabns_skb_vlan_pop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_vlan_push\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_vlan_push\09\09\09\09"
module asm "\09.long\09__crc_skb_vlan_push\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_vlan_push:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_vlan_push\22\09\09\09\09\09"
module asm "__kstrtabns_skb_vlan_push:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_eth_pop\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_eth_pop\09\09\09\09"
module asm "\09.long\09__crc_skb_eth_pop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_eth_pop:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_eth_pop\22\09\09\09\09\09"
module asm "__kstrtabns_skb_eth_pop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_eth_push\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_eth_push\09\09\09\09"
module asm "\09.long\09__crc_skb_eth_push\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_eth_push:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_eth_push\22\09\09\09\09\09"
module asm "__kstrtabns_skb_eth_push:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_mpls_push\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_mpls_push\09\09\09\09"
module asm "\09.long\09__crc_skb_mpls_push\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_mpls_push:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_mpls_push\22\09\09\09\09\09"
module asm "__kstrtabns_skb_mpls_push:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_mpls_pop\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_mpls_pop\09\09\09\09"
module asm "\09.long\09__crc_skb_mpls_pop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_mpls_pop:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_mpls_pop\22\09\09\09\09\09"
module asm "__kstrtabns_skb_mpls_pop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_mpls_update_lse\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_mpls_update_lse\09\09\09\09"
module asm "\09.long\09__crc_skb_mpls_update_lse\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_mpls_update_lse:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_mpls_update_lse\22\09\09\09\09\09"
module asm "__kstrtabns_skb_mpls_update_lse:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+skb_mpls_dec_ttl\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_mpls_dec_ttl\09\09\09\09"
module asm "\09.long\09__crc_skb_mpls_dec_ttl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_mpls_dec_ttl:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_mpls_dec_ttl\22\09\09\09\09\09"
module asm "__kstrtabns_skb_mpls_dec_ttl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+alloc_skb_with_frags\22, \22a\22\09"
module asm "\09.weak\09__crc_alloc_skb_with_frags\09\09\09\09"
module asm "\09.long\09__crc_alloc_skb_with_frags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_alloc_skb_with_frags:\09\09\09\09\09"
module asm "\09.asciz \09\22alloc_skb_with_frags\22\09\09\09\09\09"
module asm "__kstrtabns_alloc_skb_with_frags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+pskb_extract\22, \22a\22\09"
module asm "\09.weak\09__crc_pskb_extract\09\09\09\09"
module asm "\09.long\09__crc_pskb_extract\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pskb_extract:\09\09\09\09\09"
module asm "\09.asciz \09\22pskb_extract\22\09\09\09\09\09"
module asm "__kstrtabns_pskb_extract:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_ext_add\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_ext_add\09\09\09\09"
module asm "\09.long\09__crc_skb_ext_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_ext_add:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_ext_add\22\09\09\09\09\09"
module asm "__kstrtabns_skb_ext_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_ext_del\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_ext_del\09\09\09\09"
module asm "\09.long\09__crc___skb_ext_del\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_ext_del:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_ext_del\22\09\09\09\09\09"
module asm "__kstrtabns___skb_ext_del:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__skb_ext_put\22, \22a\22\09"
module asm "\09.weak\09__crc___skb_ext_put\09\09\09\09"
module asm "\09.long\09__crc___skb_ext_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___skb_ext_put:\09\09\09\09\09"
module asm "\09.asciz \09\22__skb_ext_put\22\09\09\09\09\09"
module asm "__kstrtabns___skb_ext_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.napi_alloc_cache = type { %struct.page_frag_cache, i32, [64 x ptr] }
%struct.page_frag_cache = type { ptr, i16, i16, i32, i8 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.pipe_buf_operations = type { ptr, ptr, ptr, ptr }
%struct.skb_checksum_ops = type { ptr, ptr }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon.125 }
%struct.atomic_t = type { i32 }
%union.anon.125 = type { i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.48 }
%union.anon.48 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.58, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.58 = type { %struct.anon.59 }
%struct.anon.59 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.sk_buff = type { %union.anon.26, %union.anon.29, %union.anon.30, [48 x i8], %union.anon.31, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.33, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.26 = type { %struct.anon.27 }
%struct.anon.27 = type { ptr, ptr, %union.anon.28 }
%union.anon.28 = type { ptr }
%union.anon.29 = type { ptr }
%union.anon.30 = type { i64 }
%union.anon.31 = type { %struct.anon.32 }
%struct.anon.32 = type { i32, ptr }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.35, i32, i32, i32, i16, i16, %union.anon.37, i32, %union.anon.38, %union.anon.39, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.35 = type { i32 }
%union.anon.37 = type { i32 }
%union.anon.38 = type { i32 }
%union.anon.39 = type { i16 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.page = type { i32, %union.anon.7, %union.anon.140, %struct.atomic_t, i32 }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.140 = type { %struct.atomic_t }
%struct.sk_buff_fclones = type { %struct.sk_buff, %struct.sk_buff, %struct.refcount_struct }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.hlist_node = type { ptr, ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.173, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.193, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.173 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.spinlock = type { %union.anon.9 }
%union.anon.9 = type { %struct.raw_spinlock }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.possible_net_t = type { ptr }
%union.anon.193 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.sock_common = type { %union.anon.16, %union.anon.18, %union.anon.19, i16, i8, i8, i32, %union.anon.21, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.114, [0 x i32], %union.anon.115, i16, i16, %union.anon.116, %struct.refcount_struct, [0 x i32], %union.anon.117 }
%union.anon.16 = type { i64 }
%union.anon.18 = type { i32 }
%union.anon.19 = type { i32 }
%union.anon.21 = type { %struct.hlist_node }
%struct.in6_addr = type { %union.anon.66 }
%union.anon.66 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.114 = type { i32 }
%union.anon.115 = type { %struct.hlist_node }
%union.anon.116 = type { i32 }
%union.anon.117 = type { i32 }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.118, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.119, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.120, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, ptr }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head, %struct.lockdep_map }
%struct.anon.118 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.119 = type { ptr }
%union.anon.120 = type { ptr }
%struct.sk_buff_head = type { %union.anon.70, i32, %struct.spinlock }
%union.anon.70 = type { %struct.anon.71 }
%struct.anon.71 = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.sock_cgroup_data = type { ptr, i32, i16 }
%struct.callback_head = type { ptr, ptr }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.163, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon }
%struct.llist_node = type { ptr }
%union.anon = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.141 }
%union.anon.141 = type { %struct.anon.142 }
%struct.anon.142 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.163 = type { %struct.callback_head }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.dst_entry = type { ptr, ptr, i32, i32, ptr, ptr, ptr, i16, i16, i16, i16, i32, i32, ptr, %struct.callback_head, i16, i16, i32, %struct.atomic_t, ptr }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, ptr, i32, ptr, i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.rlimit = type { i32, i32 }
%struct.pacct_struct = type { i32, i32, i32, i64, i64, i32, i32 }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.121 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.121 = type { %struct.callback_head }
%struct.user_struct = type { %struct.refcount_struct, %struct.percpu_counter, i32, %struct.atomic_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic_t, %struct.atomic_t, %struct.ratelimit_state }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.mmpin = type { ptr, i32 }
%struct.ubuf_info = type { ptr, %union.anon.194, %struct.refcount_struct, i8, %struct.mmpin }
%union.anon.194 = type { %struct.anon.196 }
%struct.anon.196 = type { i32, i16, i8, i32 }
%struct.msghdr = type { ptr, i32, %struct.iov_iter, %union.anon.25, i8, i32, i32, ptr }
%struct.iov_iter = type { i8, i8, i8, i32, i32, %union.anon.22, %union.anon.23 }
%union.anon.22 = type { ptr }
%union.anon.23 = type { i64 }
%union.anon.25 = type { ptr }
%struct.anon.36 = type { i16, i16 }
%struct.partial_page = type { i32, i32, i32 }
%struct.splice_pipe_desc = type { ptr, ptr, i32, i32, ptr, ptr }
%struct.kvec = type { ptr, i32 }
%struct.sk_buff_list = type { ptr, ptr }
%struct.skb_seq_state = type { i32, i32, i32, i32, ptr, ptr, ptr, i32 }
%struct.ts_state = type { i32, [48 x i8] }
%struct.ts_config = type { ptr, i32, ptr, ptr }
%struct.ts_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head }
%struct.scatterlist = type { i32, i32, i32, i32, i32 }
%struct.socket = type { i32, i16, i32, ptr, ptr, ptr, [104 x i8], %struct.socket_wq }
%struct.socket_wq = type { %struct.wait_queue_head, ptr, i32, %struct.callback_head, [60 x i8] }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ipv6hdr = type { i8, [3 x i8], i16, i8, i8, %struct.in6_addr, %struct.in6_addr }
%struct.ipv6_opt_hdr = type { i8, i8 }
%struct.ip_auth_hdr = type { i8, i8, i16, i32, i32, [0 x i8] }
%struct.frag_hdr = type { i8, i8, i16, i32 }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.vlan_hdr = type { i16, i16 }
%struct.vlan_ethhdr = type { %union.anon.203, i16, i16, i16 }
%union.anon.203 = type { %struct.anon.204 }
%struct.anon.204 = type { [6 x i8], [6 x i8] }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.skb_ext = type { %struct.refcount_struct, [4 x i8], i8, [7 x i8], [0 x i8] }
%struct.sec_path = type { i32, i32, [6 x ptr], [1 x %struct.xfrm_offload] }
%struct.xfrm_offload = type { %struct.anon.200, i32, i32, i8, i8 }
%struct.anon.200 = type { i32, i32 }
%struct.xfrm_state = type { %struct.possible_net_t, %union.anon.187, %struct.hlist_node, %struct.hlist_node, %struct.hlist_node, %struct.refcount_struct, %struct.spinlock, %struct.xfrm_id, %struct.xfrm_selector, %struct.xfrm_mark, i32, i32, i32, %struct.xfrm_state_walk, %struct.anon.188, %struct.xfrm_lifetime_cfg, ptr, ptr, ptr, ptr, ptr, i16, i32, i32, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.xfrm_replay_state, ptr, %struct.xfrm_replay_state, ptr, i32, i32, i32, i32, %struct.timer_list, %struct.xfrm_stats, %struct.xfrm_lifetime_cur, %struct.hrtimer, %struct.xfrm_state_offload, i32, i64, %struct.page_frag, ptr, %struct.xfrm_mode, %struct.xfrm_mode, %struct.xfrm_mode, ptr, ptr, ptr }
%union.anon.187 = type { %struct.hlist_node }
%struct.xfrm_id = type { %union.xfrm_address_t, i32, i8 }
%union.xfrm_address_t = type { [4 x i32] }
%struct.xfrm_selector = type { %union.xfrm_address_t, %union.xfrm_address_t, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32 }
%struct.xfrm_mark = type { i32, i32 }
%struct.xfrm_state_walk = type { %struct.list_head, i8, i8, i8, i32, ptr }
%struct.anon.188 = type { i32, i8, i8, i8, i8, i8, i8, i16, %union.xfrm_address_t, i32, i32, i32, %struct.xfrm_mark }
%struct.xfrm_lifetime_cfg = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.xfrm_replay_state = type { i32, i32, i32 }
%struct.xfrm_stats = type { i32, i32, i32 }
%struct.xfrm_lifetime_cur = type { i64, i64, i64, i64 }
%struct.xfrm_state_offload = type { ptr, ptr, ptr, i32, i32, i8 }
%struct.xfrm_mode = type { i8, i8, i8 }
%struct.udphdr = type { i16, i16, i16, i16 }

@sysctl_max_skb_frags = dso_local global i32 17, section ".data..read_mostly", align 4
@__kstrtab_sysctl_max_skb_frags = external dso_local constant [0 x i8], align 1
@__kstrtabns_sysctl_max_skb_frags = external dso_local constant [0 x i8], align 1
@__ksymtab_sysctl_max_skb_frags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sysctl_max_skb_frags to i32), ptr @__kstrtab_sysctl_max_skb_frags, ptr @__kstrtabns_sysctl_max_skb_frags }, section "___ksymtab+sysctl_max_skb_frags", align 4
@napi_alloc_cache = weak dso_local global %struct.napi_alloc_cache zeroinitializer, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__kstrtab___napi_alloc_frag_align = external dso_local constant [0 x i8], align 1
@__kstrtabns___napi_alloc_frag_align = external dso_local constant [0 x i8], align 1
@__ksymtab___napi_alloc_frag_align = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__napi_alloc_frag_align to i32), ptr @__kstrtab___napi_alloc_frag_align, ptr @__kstrtabns___napi_alloc_frag_align }, section "___ksymtab+__napi_alloc_frag_align", align 4
@netdev_alloc_cache = weak dso_local global %struct.page_frag_cache zeroinitializer, section ".data..percpu", align 4
@__kstrtab___netdev_alloc_frag_align = external dso_local constant [0 x i8], align 1
@__kstrtabns___netdev_alloc_frag_align = external dso_local constant [0 x i8], align 1
@__ksymtab___netdev_alloc_frag_align = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netdev_alloc_frag_align to i32), ptr @__kstrtab___netdev_alloc_frag_align, ptr @__kstrtabns___netdev_alloc_frag_align }, section "___ksymtab+__netdev_alloc_frag_align", align 4
@skbuff_head_cache = dso_local local_unnamed_addr global ptr null, section ".data..ro_after_init", align 4
@__kstrtab_build_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_build_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_build_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @build_skb to i32), ptr @__kstrtab_build_skb, ptr @__kstrtabns_build_skb }, section "___ksymtab+build_skb", align 4
@__kstrtab_build_skb_around = external dso_local constant [0 x i8], align 1
@__kstrtabns_build_skb_around = external dso_local constant [0 x i8], align 1
@__ksymtab_build_skb_around = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @build_skb_around to i32), ptr @__kstrtab_build_skb_around, ptr @__kstrtabns_build_skb_around }, section "___ksymtab+build_skb_around", align 4
@__kstrtab_napi_build_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_build_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_build_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_build_skb to i32), ptr @__kstrtab_napi_build_skb, ptr @__kstrtabns_napi_build_skb }, section "___ksymtab+napi_build_skb", align 4
@skbuff_fclone_cache = internal unnamed_addr global ptr null, section ".data..ro_after_init", align 4
@__kstrtab___alloc_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___alloc_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___alloc_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__alloc_skb to i32), ptr @__kstrtab___alloc_skb, ptr @__kstrtabns___alloc_skb }, section "___ksymtab+__alloc_skb", align 4
@__kstrtab___netdev_alloc_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___netdev_alloc_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___netdev_alloc_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__netdev_alloc_skb to i32), ptr @__kstrtab___netdev_alloc_skb, ptr @__kstrtabns___netdev_alloc_skb }, section "___ksymtab+__netdev_alloc_skb", align 4
@__kstrtab___napi_alloc_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___napi_alloc_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___napi_alloc_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__napi_alloc_skb to i32), ptr @__kstrtab___napi_alloc_skb, ptr @__kstrtabns___napi_alloc_skb }, section "___ksymtab+__napi_alloc_skb", align 4
@__kstrtab_skb_add_rx_frag = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_add_rx_frag = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_add_rx_frag = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_add_rx_frag to i32), ptr @__kstrtab_skb_add_rx_frag, ptr @__kstrtabns_skb_add_rx_frag }, section "___ksymtab+skb_add_rx_frag", align 4
@__kstrtab_skb_coalesce_rx_frag = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_coalesce_rx_frag = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_coalesce_rx_frag = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_coalesce_rx_frag to i32), ptr @__kstrtab_skb_coalesce_rx_frag, ptr @__kstrtabns_skb_coalesce_rx_frag }, section "___ksymtab+skb_coalesce_rx_frag", align 4
@.str = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"net/core/skbuff.c\00", [46 x i8] zeroinitializer }, align 32
@__kstrtab___kfree_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___kfree_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___kfree_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__kfree_skb to i32), ptr @__kstrtab___kfree_skb, ptr @__kstrtabns___kfree_skb }, section "___ksymtab+__kfree_skb", align 4
@__kstrtab_kfree_skb_reason = external dso_local constant [0 x i8], align 1
@__kstrtabns_kfree_skb_reason = external dso_local constant [0 x i8], align 1
@__ksymtab_kfree_skb_reason = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kfree_skb_reason to i32), ptr @__kstrtab_kfree_skb_reason, ptr @__kstrtabns_kfree_skb_reason }, section "___ksymtab+kfree_skb_reason", align 4
@__kstrtab_kfree_skb_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_kfree_skb_list = external dso_local constant [0 x i8], align 1
@__ksymtab_kfree_skb_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kfree_skb_list to i32), ptr @__kstrtab_kfree_skb_list, ptr @__kstrtabns_kfree_skb_list }, section "___ksymtab+kfree_skb_list", align 4
@skb_dump._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str, i32 834, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [255 x i8], [33 x i8] } { [255 x i8] c"%sskb len=%u headroom=%u headlen=%u tailroom=%u\0Amac=(%d,%d) net=(%d,%d) trans=%d\0Ashinfo(txflags=%u nr_frags=%u gso(size=%hu type=%u segs=%hu))\0Acsum(0x%x ip_summed=%u complete_sw=%u valid=%u level=%u)\0Ahash(0x%x sw=%u l4=%u) proto=0x%04x pkttype=%u iif=%d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"skb_dump\00", [23 x i8] zeroinitializer }, align 32
@skb_dump._entry_ptr = internal global ptr @skb_dump._entry, section ".printk_index", align 4
@skb_dump._entry.3 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.4, ptr @.str.2, ptr @.str, i32 838, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%sdev name=%s feat=%pNF\0A\00", [39 x i8] zeroinitializer }, align 32
@skb_dump._entry_ptr.5 = internal global ptr @skb_dump._entry.3, section ".printk_index", align 4
@skb_dump._entry.6 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.2, ptr @.str, i32 841, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%ssk family=%hu type=%u proto=%u\0A\00", [62 x i8] zeroinitializer }, align 32
@skb_dump._entry_ptr.8 = internal global ptr @skb_dump._entry.6, section ".printk_index", align 4
@.str.9 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"skb headroom: \00", [17 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"skb linear:   \00", [17 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"skb tailroom: \00", [17 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"skb frag:     \00", [17 x i8] zeroinitializer }, align 32
@skb_dump._entry.13 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.2, ptr @.str, i32 879, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"skb fraglist:\0A\00", [17 x i8] zeroinitializer }, align 32
@skb_dump._entry_ptr.15 = internal global ptr @skb_dump._entry.13, section ".printk_index", align 4
@__kstrtab_skb_dump = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_dump = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_dump = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_dump to i32), ptr @__kstrtab_skb_dump, ptr @__kstrtabns_skb_dump }, section "___ksymtab+skb_dump", align 4
@__kstrtab_skb_tx_error = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_tx_error = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_tx_error = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_tx_error to i32), ptr @__kstrtab_skb_tx_error, ptr @__kstrtabns_skb_tx_error }, section "___ksymtab+skb_tx_error", align 4
@__kstrtab_consume_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_consume_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_consume_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @consume_skb to i32), ptr @__kstrtab_consume_skb, ptr @__kstrtabns_consume_skb }, section "___ksymtab+consume_skb", align 4
@napi_consume_skb.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@__kstrtab_napi_consume_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_napi_consume_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_napi_consume_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @napi_consume_skb to i32), ptr @__kstrtab_napi_consume_skb, ptr @__kstrtabns_napi_consume_skb }, section "___ksymtab+napi_consume_skb", align 4
@__kstrtab_alloc_skb_for_msg = external dso_local constant [0 x i8], align 1
@__kstrtabns_alloc_skb_for_msg = external dso_local constant [0 x i8], align 1
@__ksymtab_alloc_skb_for_msg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @alloc_skb_for_msg to i32), ptr @__kstrtab_alloc_skb_for_msg, ptr @__kstrtabns_alloc_skb_for_msg }, section "___ksymtab_gpl+alloc_skb_for_msg", align 4
@__kstrtab_skb_morph = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_morph = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_morph = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_morph to i32), ptr @__kstrtab_skb_morph, ptr @__kstrtabns_skb_morph }, section "___ksymtab_gpl+skb_morph", align 4
@__kstrtab_mm_account_pinned_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_mm_account_pinned_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_mm_account_pinned_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mm_account_pinned_pages to i32), ptr @__kstrtab_mm_account_pinned_pages, ptr @__kstrtabns_mm_account_pinned_pages }, section "___ksymtab_gpl+mm_account_pinned_pages", align 4
@__kstrtab_mm_unaccount_pinned_pages = external dso_local constant [0 x i8], align 1
@__kstrtabns_mm_unaccount_pinned_pages = external dso_local constant [0 x i8], align 1
@__ksymtab_mm_unaccount_pinned_pages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @mm_unaccount_pinned_pages to i32), ptr @__kstrtab_mm_unaccount_pinned_pages, ptr @__kstrtabns_mm_unaccount_pinned_pages }, section "___ksymtab_gpl+mm_unaccount_pinned_pages", align 4
@msg_zerocopy_alloc.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_msg_zerocopy_alloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_msg_zerocopy_alloc = external dso_local constant [0 x i8], align 1
@__ksymtab_msg_zerocopy_alloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @msg_zerocopy_alloc to i32), ptr @__kstrtab_msg_zerocopy_alloc, ptr @__kstrtabns_msg_zerocopy_alloc }, section "___ksymtab_gpl+msg_zerocopy_alloc", align 4
@msg_zerocopy_realloc.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_msg_zerocopy_realloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_msg_zerocopy_realloc = external dso_local constant [0 x i8], align 1
@__ksymtab_msg_zerocopy_realloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @msg_zerocopy_realloc to i32), ptr @__kstrtab_msg_zerocopy_realloc, ptr @__kstrtabns_msg_zerocopy_realloc }, section "___ksymtab_gpl+msg_zerocopy_realloc", align 4
@__kstrtab_msg_zerocopy_callback = external dso_local constant [0 x i8], align 1
@__kstrtabns_msg_zerocopy_callback = external dso_local constant [0 x i8], align 1
@__ksymtab_msg_zerocopy_callback = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @msg_zerocopy_callback to i32), ptr @__kstrtab_msg_zerocopy_callback, ptr @__kstrtabns_msg_zerocopy_callback }, section "___ksymtab_gpl+msg_zerocopy_callback", align 4
@__kstrtab_msg_zerocopy_put_abort = external dso_local constant [0 x i8], align 1
@__kstrtabns_msg_zerocopy_put_abort = external dso_local constant [0 x i8], align 1
@__ksymtab_msg_zerocopy_put_abort = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @msg_zerocopy_put_abort to i32), ptr @__kstrtab_msg_zerocopy_put_abort, ptr @__kstrtabns_msg_zerocopy_put_abort }, section "___ksymtab_gpl+msg_zerocopy_put_abort", align 4
@__kstrtab_skb_zerocopy_iter_dgram = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_zerocopy_iter_dgram = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_zerocopy_iter_dgram = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_zerocopy_iter_dgram to i32), ptr @__kstrtab_skb_zerocopy_iter_dgram, ptr @__kstrtabns_skb_zerocopy_iter_dgram }, section "___ksymtab_gpl+skb_zerocopy_iter_dgram", align 4
@__kstrtab_skb_zerocopy_iter_stream = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_zerocopy_iter_stream = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_zerocopy_iter_stream = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_zerocopy_iter_stream to i32), ptr @__kstrtab_skb_zerocopy_iter_stream, ptr @__kstrtabns_skb_zerocopy_iter_stream }, section "___ksymtab_gpl+skb_zerocopy_iter_stream", align 4
@__kstrtab_skb_copy_ubufs = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_copy_ubufs = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_copy_ubufs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_copy_ubufs to i32), ptr @__kstrtab_skb_copy_ubufs, ptr @__kstrtabns_skb_copy_ubufs }, section "___ksymtab_gpl+skb_copy_ubufs", align 4
@__kstrtab_skb_clone = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_clone = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_clone = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_clone to i32), ptr @__kstrtab_skb_clone, ptr @__kstrtabns_skb_clone }, section "___ksymtab+skb_clone", align 4
@__kstrtab_skb_headers_offset_update = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_headers_offset_update = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_headers_offset_update = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_headers_offset_update to i32), ptr @__kstrtab_skb_headers_offset_update, ptr @__kstrtabns_skb_headers_offset_update }, section "___ksymtab+skb_headers_offset_update", align 4
@__kstrtab_skb_copy_header = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_copy_header = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_copy_header = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_copy_header to i32), ptr @__kstrtab_skb_copy_header, ptr @__kstrtabns_skb_copy_header }, section "___ksymtab+skb_copy_header", align 4
@__kstrtab_skb_copy = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_copy = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_copy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_copy to i32), ptr @__kstrtab_skb_copy, ptr @__kstrtabns_skb_copy }, section "___ksymtab+skb_copy", align 4
@__kstrtab___pskb_copy_fclone = external dso_local constant [0 x i8], align 1
@__kstrtabns___pskb_copy_fclone = external dso_local constant [0 x i8], align 1
@__ksymtab___pskb_copy_fclone = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__pskb_copy_fclone to i32), ptr @__kstrtab___pskb_copy_fclone, ptr @__kstrtabns___pskb_copy_fclone }, section "___ksymtab+__pskb_copy_fclone", align 4
@__kstrtab_pskb_expand_head = external dso_local constant [0 x i8], align 1
@__kstrtabns_pskb_expand_head = external dso_local constant [0 x i8], align 1
@__ksymtab_pskb_expand_head = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pskb_expand_head to i32), ptr @__kstrtab_pskb_expand_head, ptr @__kstrtabns_pskb_expand_head }, section "___ksymtab+pskb_expand_head", align 4
@__kstrtab_skb_realloc_headroom = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_realloc_headroom = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_realloc_headroom = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_realloc_headroom to i32), ptr @__kstrtab_skb_realloc_headroom, ptr @__kstrtabns_skb_realloc_headroom }, section "___ksymtab+skb_realloc_headroom", align 4
@skb_expand_head.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.16 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s is expecting an increase in the headroom\00", [52 x i8] zeroinitializer }, align 32
@__func__.skb_expand_head = private unnamed_addr constant [16 x i8] c"skb_expand_head\00", align 1
@__kstrtab_skb_expand_head = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_expand_head = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_expand_head = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_expand_head to i32), ptr @__kstrtab_skb_expand_head, ptr @__kstrtabns_skb_expand_head }, section "___ksymtab+skb_expand_head", align 4
@__kstrtab_skb_copy_expand = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_copy_expand = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_copy_expand = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_copy_expand to i32), ptr @__kstrtab_skb_copy_expand, ptr @__kstrtabns_skb_copy_expand }, section "___ksymtab+skb_copy_expand", align 4
@__kstrtab___skb_pad = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_pad = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_pad = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_pad to i32), ptr @__kstrtab___skb_pad, ptr @__kstrtabns___skb_pad }, section "___ksymtab+__skb_pad", align 4
@__kstrtab_pskb_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_pskb_put = external dso_local constant [0 x i8], align 1
@__ksymtab_pskb_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pskb_put to i32), ptr @__kstrtab_pskb_put, ptr @__kstrtabns_pskb_put }, section "___ksymtab_gpl+pskb_put", align 4
@__kstrtab_skb_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_put = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_put to i32), ptr @__kstrtab_skb_put, ptr @__kstrtabns_skb_put }, section "___ksymtab+skb_put", align 4
@__kstrtab_skb_push = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_push = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_push = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_push to i32), ptr @__kstrtab_skb_push, ptr @__kstrtabns_skb_push }, section "___ksymtab+skb_push", align 4
@__kstrtab_skb_pull = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_pull = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_pull = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_pull to i32), ptr @__kstrtab_skb_pull, ptr @__kstrtabns_skb_pull }, section "___ksymtab+skb_pull", align 4
@__kstrtab_skb_pull_data = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_pull_data = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_pull_data = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_pull_data to i32), ptr @__kstrtab_skb_pull_data, ptr @__kstrtabns_skb_pull_data }, section "___ksymtab+skb_pull_data", align 4
@__kstrtab_skb_trim = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_trim = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_trim = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_trim to i32), ptr @__kstrtab_skb_trim, ptr @__kstrtabns_skb_trim }, section "___ksymtab+skb_trim", align 4
@__kstrtab____pskb_trim = external dso_local constant [0 x i8], align 1
@__kstrtabns____pskb_trim = external dso_local constant [0 x i8], align 1
@__ksymtab____pskb_trim = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @___pskb_trim to i32), ptr @__kstrtab____pskb_trim, ptr @__kstrtabns____pskb_trim }, section "___ksymtab+___pskb_trim", align 4
@__kstrtab_pskb_trim_rcsum_slow = external dso_local constant [0 x i8], align 1
@__kstrtabns_pskb_trim_rcsum_slow = external dso_local constant [0 x i8], align 1
@__ksymtab_pskb_trim_rcsum_slow = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pskb_trim_rcsum_slow to i32), ptr @__kstrtab_pskb_trim_rcsum_slow, ptr @__kstrtabns_pskb_trim_rcsum_slow }, section "___ksymtab+pskb_trim_rcsum_slow", align 4
@__kstrtab___pskb_pull_tail = external dso_local constant [0 x i8], align 1
@__kstrtabns___pskb_pull_tail = external dso_local constant [0 x i8], align 1
@__ksymtab___pskb_pull_tail = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__pskb_pull_tail to i32), ptr @__kstrtab___pskb_pull_tail, ptr @__kstrtabns___pskb_pull_tail }, section "___ksymtab+__pskb_pull_tail", align 4
@__kstrtab_skb_copy_bits = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_copy_bits = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_copy_bits = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_copy_bits to i32), ptr @__kstrtab_skb_copy_bits, ptr @__kstrtabns_skb_copy_bits }, section "___ksymtab+skb_copy_bits", align 4
@nosteal_pipe_buf_ops = external dso_local constant %struct.pipe_buf_operations, align 4
@__kstrtab_skb_splice_bits = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_splice_bits = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_splice_bits = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_splice_bits to i32), ptr @__kstrtab_skb_splice_bits, ptr @__kstrtabns_skb_splice_bits }, section "___ksymtab_gpl+skb_splice_bits", align 4
@__kstrtab_skb_send_sock_locked = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_send_sock_locked = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_send_sock_locked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_send_sock_locked to i32), ptr @__kstrtab_skb_send_sock_locked, ptr @__kstrtabns_skb_send_sock_locked }, section "___ksymtab_gpl+skb_send_sock_locked", align 4
@__kstrtab_skb_store_bits = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_store_bits = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_store_bits = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_store_bits to i32), ptr @__kstrtab_skb_store_bits, ptr @__kstrtabns_skb_store_bits }, section "___ksymtab+skb_store_bits", align 4
@__kstrtab___skb_checksum = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_checksum = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_checksum = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_checksum to i32), ptr @__kstrtab___skb_checksum, ptr @__kstrtabns___skb_checksum }, section "___ksymtab+__skb_checksum", align 4
@__const.skb_checksum.ops = private unnamed_addr constant %struct.skb_checksum_ops { ptr @csum_partial_ext, ptr @csum_block_add_ext }, align 8
@__kstrtab_skb_checksum = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_checksum = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_checksum = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_checksum to i32), ptr @__kstrtab_skb_checksum, ptr @__kstrtabns_skb_checksum }, section "___ksymtab+skb_checksum", align 4
@__kstrtab_skb_copy_and_csum_bits = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_copy_and_csum_bits = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_copy_and_csum_bits = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_copy_and_csum_bits to i32), ptr @__kstrtab_skb_copy_and_csum_bits, ptr @__kstrtabns_skb_copy_and_csum_bits }, section "___ksymtab+skb_copy_and_csum_bits", align 4
@__kstrtab___skb_checksum_complete_head = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_checksum_complete_head = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_checksum_complete_head = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_checksum_complete_head to i32), ptr @__kstrtab___skb_checksum_complete_head, ptr @__kstrtabns___skb_checksum_complete_head }, section "___ksymtab+__skb_checksum_complete_head", align 4
@__kstrtab___skb_checksum_complete = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_checksum_complete = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_checksum_complete = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_checksum_complete to i32), ptr @__kstrtab___skb_checksum_complete, ptr @__kstrtabns___skb_checksum_complete }, section "___ksymtab+__skb_checksum_complete", align 4
@default_crc32c_ops = internal constant { %struct.skb_checksum_ops, [24 x i8] } { %struct.skb_checksum_ops { ptr @warn_crc32c_csum_update, ptr @warn_crc32c_csum_combine }, [24 x i8] zeroinitializer }, align 32
@crc32c_csum_stub = dso_local global ptr @default_crc32c_ops, section ".data..read_mostly", align 4
@__kstrtab_crc32c_csum_stub = external dso_local constant [0 x i8], align 1
@__kstrtabns_crc32c_csum_stub = external dso_local constant [0 x i8], align 1
@__ksymtab_crc32c_csum_stub = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @crc32c_csum_stub to i32), ptr @__kstrtab_crc32c_csum_stub, ptr @__kstrtabns_crc32c_csum_stub }, section "___ksymtab+crc32c_csum_stub", align 4
@__kstrtab_skb_zerocopy_headlen = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_zerocopy_headlen = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_zerocopy_headlen = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_zerocopy_headlen to i32), ptr @__kstrtab_skb_zerocopy_headlen, ptr @__kstrtabns_skb_zerocopy_headlen }, section "___ksymtab_gpl+skb_zerocopy_headlen", align 4
@__kstrtab_skb_zerocopy = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_zerocopy = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_zerocopy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_zerocopy to i32), ptr @__kstrtab_skb_zerocopy, ptr @__kstrtabns_skb_zerocopy }, section "___ksymtab_gpl+skb_zerocopy", align 4
@__kstrtab_skb_copy_and_csum_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_copy_and_csum_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_copy_and_csum_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_copy_and_csum_dev to i32), ptr @__kstrtab_skb_copy_and_csum_dev, ptr @__kstrtabns_skb_copy_and_csum_dev }, section "___ksymtab+skb_copy_and_csum_dev", align 4
@__kstrtab_skb_dequeue = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_dequeue = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_dequeue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_dequeue to i32), ptr @__kstrtab_skb_dequeue, ptr @__kstrtabns_skb_dequeue }, section "___ksymtab+skb_dequeue", align 4
@__kstrtab_skb_dequeue_tail = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_dequeue_tail = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_dequeue_tail = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_dequeue_tail to i32), ptr @__kstrtab_skb_dequeue_tail, ptr @__kstrtabns_skb_dequeue_tail }, section "___ksymtab+skb_dequeue_tail", align 4
@__kstrtab_skb_queue_purge = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_queue_purge = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_queue_purge = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_queue_purge to i32), ptr @__kstrtab_skb_queue_purge, ptr @__kstrtabns_skb_queue_purge }, section "___ksymtab+skb_queue_purge", align 4
@__kstrtab_skb_queue_head = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_queue_head = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_queue_head = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_queue_head to i32), ptr @__kstrtab_skb_queue_head, ptr @__kstrtabns_skb_queue_head }, section "___ksymtab+skb_queue_head", align 4
@__kstrtab_skb_queue_tail = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_queue_tail = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_queue_tail = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_queue_tail to i32), ptr @__kstrtab_skb_queue_tail, ptr @__kstrtabns_skb_queue_tail }, section "___ksymtab+skb_queue_tail", align 4
@__kstrtab_skb_unlink = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_unlink = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_unlink = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_unlink to i32), ptr @__kstrtab_skb_unlink, ptr @__kstrtabns_skb_unlink }, section "___ksymtab+skb_unlink", align 4
@__kstrtab_skb_append = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_append = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_append = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_append to i32), ptr @__kstrtab_skb_append, ptr @__kstrtabns_skb_append }, section "___ksymtab+skb_append", align 4
@__kstrtab_skb_split = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_split = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_split = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_split to i32), ptr @__kstrtab_skb_split, ptr @__kstrtabns_skb_split }, section "___ksymtab+skb_split", align 4
@__kstrtab_skb_prepare_seq_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_prepare_seq_read = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_prepare_seq_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_prepare_seq_read to i32), ptr @__kstrtab_skb_prepare_seq_read, ptr @__kstrtabns_skb_prepare_seq_read }, section "___ksymtab+skb_prepare_seq_read", align 4
@__kstrtab_skb_seq_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_seq_read = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_seq_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_seq_read to i32), ptr @__kstrtab_skb_seq_read, ptr @__kstrtabns_skb_seq_read }, section "___ksymtab+skb_seq_read", align 4
@__kstrtab_skb_abort_seq_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_abort_seq_read = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_abort_seq_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_abort_seq_read to i32), ptr @__kstrtab_skb_abort_seq_read, ptr @__kstrtabns_skb_abort_seq_read }, section "___ksymtab+skb_abort_seq_read", align 4
@__kstrtab_skb_find_text = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_find_text = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_find_text = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_find_text to i32), ptr @__kstrtab_skb_find_text, ptr @__kstrtabns_skb_find_text }, section "___ksymtab+skb_find_text", align 4
@__kstrtab_skb_append_pagefrags = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_append_pagefrags = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_append_pagefrags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_append_pagefrags to i32), ptr @__kstrtab_skb_append_pagefrags, ptr @__kstrtabns_skb_append_pagefrags }, section "___ksymtab_gpl+skb_append_pagefrags", align 4
@__kstrtab_skb_pull_rcsum = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_pull_rcsum = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_pull_rcsum = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_pull_rcsum to i32), ptr @__kstrtab_skb_pull_rcsum, ptr @__kstrtabns_skb_pull_rcsum }, section "___ksymtab_gpl+skb_pull_rcsum", align 4
@__kstrtab_skb_segment_list = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_segment_list = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_segment_list = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_segment_list to i32), ptr @__kstrtab_skb_segment_list, ptr @__kstrtabns_skb_segment_list }, section "___ksymtab_gpl+skb_segment_list", align 4
@skb_segment._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str, i32 4199, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\014skbuff: skb_segment: too many frags: %u %u\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"skb_segment\00", [20 x i8] zeroinitializer }, align 32
@skb_segment._entry_ptr = internal global ptr @skb_segment._entry, section ".printk_index", align 4
@__kstrtab_skb_segment = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_segment = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_segment = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_segment to i32), ptr @__kstrtab_skb_segment, ptr @__kstrtabns_skb_segment }, section "___ksymtab_gpl+skb_segment", align 4
@.str.19 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"skbuff_head_cache\00", [46 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"skbuff_fclone_cache\00", [44 x i8] zeroinitializer }, align 32
@__kstrtab_skb_to_sgvec = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_to_sgvec = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_to_sgvec = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_to_sgvec to i32), ptr @__kstrtab_skb_to_sgvec, ptr @__kstrtabns_skb_to_sgvec }, section "___ksymtab_gpl+skb_to_sgvec", align 4
@__kstrtab_skb_to_sgvec_nomark = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_to_sgvec_nomark = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_to_sgvec_nomark = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_to_sgvec_nomark to i32), ptr @__kstrtab_skb_to_sgvec_nomark, ptr @__kstrtabns_skb_to_sgvec_nomark }, section "___ksymtab_gpl+skb_to_sgvec_nomark", align 4
@__kstrtab_skb_cow_data = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_cow_data = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_cow_data = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_cow_data to i32), ptr @__kstrtab_skb_cow_data, ptr @__kstrtabns_skb_cow_data }, section "___ksymtab_gpl+skb_cow_data", align 4
@__kstrtab_sock_queue_err_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_queue_err_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_queue_err_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_queue_err_skb to i32), ptr @__kstrtab_sock_queue_err_skb, ptr @__kstrtabns_sock_queue_err_skb }, section "___ksymtab+sock_queue_err_skb", align 4
@__kstrtab_sock_dequeue_err_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_dequeue_err_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_dequeue_err_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_dequeue_err_skb to i32), ptr @__kstrtab_sock_dequeue_err_skb, ptr @__kstrtabns_sock_dequeue_err_skb }, section "___ksymtab+sock_dequeue_err_skb", align 4
@__kstrtab_skb_clone_sk = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_clone_sk = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_clone_sk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_clone_sk to i32), ptr @__kstrtab_skb_clone_sk, ptr @__kstrtabns_skb_clone_sk }, section "___ksymtab+skb_clone_sk", align 4
@__kstrtab_skb_complete_tx_timestamp = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_complete_tx_timestamp = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_complete_tx_timestamp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_complete_tx_timestamp to i32), ptr @__kstrtab_skb_complete_tx_timestamp, ptr @__kstrtabns_skb_complete_tx_timestamp }, section "___ksymtab_gpl+skb_complete_tx_timestamp", align 4
@__kstrtab___skb_tstamp_tx = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_tstamp_tx = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_tstamp_tx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_tstamp_tx to i32), ptr @__kstrtab___skb_tstamp_tx, ptr @__kstrtabns___skb_tstamp_tx }, section "___ksymtab_gpl+__skb_tstamp_tx", align 4
@__kstrtab_skb_tstamp_tx = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_tstamp_tx = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_tstamp_tx = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_tstamp_tx to i32), ptr @__kstrtab_skb_tstamp_tx, ptr @__kstrtabns_skb_tstamp_tx }, section "___ksymtab_gpl+skb_tstamp_tx", align 4
@__kstrtab_skb_complete_wifi_ack = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_complete_wifi_ack = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_complete_wifi_ack = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_complete_wifi_ack to i32), ptr @__kstrtab_skb_complete_wifi_ack, ptr @__kstrtabns_skb_complete_wifi_ack }, section "___ksymtab_gpl+skb_complete_wifi_ack", align 4
@skb_partial_csum_set._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.22, ptr @.str, i32 4882, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\014skbuff: bad partial csum: csum=%u/%u headroom=%u headlen=%u\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"skb_partial_csum_set\00", [43 x i8] zeroinitializer }, align 32
@skb_partial_csum_set._entry_ptr = internal global ptr @skb_partial_csum_set._entry, section ".printk_index", align 4
@__kstrtab_skb_partial_csum_set = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_partial_csum_set = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_partial_csum_set = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_partial_csum_set to i32), ptr @__kstrtab_skb_partial_csum_set, ptr @__kstrtabns_skb_partial_csum_set }, section "___ksymtab_gpl+skb_partial_csum_set", align 4
@__kstrtab_skb_checksum_setup = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_checksum_setup = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_checksum_setup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_checksum_setup to i32), ptr @__kstrtab_skb_checksum_setup, ptr @__kstrtabns_skb_checksum_setup }, section "___ksymtab+skb_checksum_setup", align 4
@__kstrtab_skb_checksum_trimmed = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_checksum_trimmed = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_checksum_trimmed = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_checksum_trimmed to i32), ptr @__kstrtab_skb_checksum_trimmed, ptr @__kstrtabns_skb_checksum_trimmed }, section "___ksymtab+skb_checksum_trimmed", align 4
@__skb_warn_lro_forwarding._entry = internal constant %struct.pi_entry { ptr @.str.23, ptr @.str.24, ptr @.str, i32 5214, ptr null, ptr null }, align 1
@.str.23 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\014skbuff: %s: received packets cannot be forwarded while LRO is enabled\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"__skb_warn_lro_forwarding\00", [38 x i8] zeroinitializer }, align 32
@__skb_warn_lro_forwarding._entry_ptr = internal global ptr @__skb_warn_lro_forwarding._entry, section ".printk_index", align 4
@__kstrtab___skb_warn_lro_forwarding = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_warn_lro_forwarding = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_warn_lro_forwarding = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_warn_lro_forwarding to i32), ptr @__kstrtab___skb_warn_lro_forwarding, ptr @__kstrtabns___skb_warn_lro_forwarding }, section "___ksymtab+__skb_warn_lro_forwarding", align 4
@__kstrtab_kfree_skb_partial = external dso_local constant [0 x i8], align 1
@__kstrtabns_kfree_skb_partial = external dso_local constant [0 x i8], align 1
@__ksymtab_kfree_skb_partial = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @kfree_skb_partial to i32), ptr @__kstrtab_kfree_skb_partial, ptr @__kstrtabns_kfree_skb_partial }, section "___ksymtab+kfree_skb_partial", align 4
@skb_try_coalesce.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_skb_try_coalesce = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_try_coalesce = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_try_coalesce = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_try_coalesce to i32), ptr @__kstrtab_skb_try_coalesce, ptr @__kstrtabns_skb_try_coalesce }, section "___ksymtab+skb_try_coalesce", align 4
@__kstrtab_skb_scrub_packet = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_scrub_packet = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_scrub_packet = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_scrub_packet to i32), ptr @__kstrtab_skb_scrub_packet, ptr @__kstrtabns_skb_scrub_packet }, section "___ksymtab_gpl+skb_scrub_packet", align 4
@__kstrtab_skb_gso_validate_network_len = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_gso_validate_network_len = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_gso_validate_network_len = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_gso_validate_network_len to i32), ptr @__kstrtab_skb_gso_validate_network_len, ptr @__kstrtabns_skb_gso_validate_network_len }, section "___ksymtab_gpl+skb_gso_validate_network_len", align 4
@__kstrtab_skb_gso_validate_mac_len = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_gso_validate_mac_len = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_gso_validate_mac_len = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_gso_validate_mac_len to i32), ptr @__kstrtab_skb_gso_validate_mac_len, ptr @__kstrtabns_skb_gso_validate_mac_len }, section "___ksymtab_gpl+skb_gso_validate_mac_len", align 4
@__kstrtab_skb_vlan_untag = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_vlan_untag = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_vlan_untag = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_vlan_untag to i32), ptr @__kstrtab_skb_vlan_untag, ptr @__kstrtabns_skb_vlan_untag }, section "___ksymtab+skb_vlan_untag", align 4
@__kstrtab_skb_ensure_writable = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_ensure_writable = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_ensure_writable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_ensure_writable to i32), ptr @__kstrtab_skb_ensure_writable, ptr @__kstrtabns_skb_ensure_writable }, section "___ksymtab+skb_ensure_writable", align 4
@__skb_vlan_pop.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.25 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"__skb_vlan_pop got skb with skb->data not at mac header (offset %d)\0A\00", [59 x i8] zeroinitializer }, align 32
@__kstrtab___skb_vlan_pop = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_vlan_pop = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_vlan_pop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_vlan_pop to i32), ptr @__kstrtab___skb_vlan_pop, ptr @__kstrtabns___skb_vlan_pop }, section "___ksymtab+__skb_vlan_pop", align 4
@__kstrtab_skb_vlan_pop = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_vlan_pop = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_vlan_pop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_vlan_pop to i32), ptr @__kstrtab_skb_vlan_pop, ptr @__kstrtabns_skb_vlan_pop }, section "___ksymtab+skb_vlan_pop", align 4
@skb_vlan_push.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.26 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"skb_vlan_push got skb with skb->data not at mac header (offset %d)\0A\00", [60 x i8] zeroinitializer }, align 32
@__kstrtab_skb_vlan_push = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_vlan_push = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_vlan_push = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_vlan_push to i32), ptr @__kstrtab_skb_vlan_push, ptr @__kstrtabns_skb_vlan_push }, section "___ksymtab+skb_vlan_push", align 4
@__kstrtab_skb_eth_pop = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_eth_pop = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_eth_pop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_eth_pop to i32), ptr @__kstrtab_skb_eth_pop, ptr @__kstrtabns_skb_eth_pop }, section "___ksymtab+skb_eth_pop", align 4
@__kstrtab_skb_eth_push = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_eth_push = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_eth_push = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_eth_push to i32), ptr @__kstrtab_skb_eth_push, ptr @__kstrtabns_skb_eth_push }, section "___ksymtab+skb_eth_push", align 4
@__kstrtab_skb_mpls_push = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_mpls_push = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_mpls_push = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_mpls_push to i32), ptr @__kstrtab_skb_mpls_push, ptr @__kstrtabns_skb_mpls_push }, section "___ksymtab_gpl+skb_mpls_push", align 4
@__kstrtab_skb_mpls_pop = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_mpls_pop = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_mpls_pop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_mpls_pop to i32), ptr @__kstrtab_skb_mpls_pop, ptr @__kstrtabns_skb_mpls_pop }, section "___ksymtab_gpl+skb_mpls_pop", align 4
@__kstrtab_skb_mpls_update_lse = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_mpls_update_lse = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_mpls_update_lse = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_mpls_update_lse to i32), ptr @__kstrtab_skb_mpls_update_lse, ptr @__kstrtabns_skb_mpls_update_lse }, section "___ksymtab_gpl+skb_mpls_update_lse", align 4
@__kstrtab_skb_mpls_dec_ttl = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_mpls_dec_ttl = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_mpls_dec_ttl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_mpls_dec_ttl to i32), ptr @__kstrtab_skb_mpls_dec_ttl, ptr @__kstrtabns_skb_mpls_dec_ttl }, section "___ksymtab_gpl+skb_mpls_dec_ttl", align 4
@__kstrtab_alloc_skb_with_frags = external dso_local constant [0 x i8], align 1
@__kstrtabns_alloc_skb_with_frags = external dso_local constant [0 x i8], align 1
@__ksymtab_alloc_skb_with_frags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @alloc_skb_with_frags to i32), ptr @__kstrtab_alloc_skb_with_frags, ptr @__kstrtabns_alloc_skb_with_frags }, section "___ksymtab+alloc_skb_with_frags", align 4
@__kstrtab_pskb_extract = external dso_local constant [0 x i8], align 1
@__kstrtabns_pskb_extract = external dso_local constant [0 x i8], align 1
@__ksymtab_pskb_extract = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pskb_extract to i32), ptr @__kstrtab_pskb_extract, ptr @__kstrtabns_pskb_extract }, section "___ksymtab+pskb_extract", align 4
@skbuff_ext_cache = internal unnamed_addr global ptr null, section ".data..ro_after_init", align 4
@skb_ext_type_len = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"\04\07\02\04", [28 x i8] zeroinitializer }, align 32
@__kstrtab_skb_ext_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_ext_add = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_ext_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_ext_add to i32), ptr @__kstrtab_skb_ext_add, ptr @__kstrtabns_skb_ext_add }, section "___ksymtab+skb_ext_add", align 4
@__kstrtab___skb_ext_del = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_ext_del = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_ext_del = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_ext_del to i32), ptr @__kstrtab___skb_ext_del, ptr @__kstrtabns___skb_ext_del }, section "___ksymtab+__skb_ext_del", align 4
@__kstrtab___skb_ext_put = external dso_local constant [0 x i8], align 1
@__kstrtabns___skb_ext_put = external dso_local constant [0 x i8], align 1
@__ksymtab___skb_ext_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__skb_ext_put to i32), ptr @__kstrtab___skb_ext_put, ptr @__kstrtabns___skb_ext_put }, section "___ksymtab+__skb_ext_put", align 4
@__pcpu_unique_netdev_alloc_cache = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_napi_alloc_cache = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@memalloc_socks_key = external dso_local global %struct.static_key_false, align 4
@__tracepoint_kfree_skb = external dso_local global %struct.tracepoint, align 4
@.str.27 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/skb.h\00", [37 x i8] zeroinitializer }, align 32
@trace_kfree_skb.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.28 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.29 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@movable_zone = external dso_local local_unnamed_addr global i32, align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@__tracepoint_consume_skb = external dso_local global %struct.tracepoint, align 4
@trace_consume_skb.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.30 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"include/net/dst.h\00", [46 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/skbuff.h\00", [41 x i8] zeroinitializer }, align 32
@sock_owned_by_me.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.32 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"include/net/sock.h\00", [45 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@skb_zerocopy_clone.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__func__.skb_over_panic = private unnamed_addr constant [15 x i8] c"skb_over_panic\00", align 1
@skb_panic._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.35, ptr @.str.36, ptr @.str, i32 112, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"\010skbuff: %s: text:%px len:%d put:%d head:%px data:%px tail:%#lx end:%#lx dev:%s\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"skb_panic\00", [22 x i8] zeroinitializer }, align 32
@skb_panic._entry_ptr = internal global ptr @skb_panic._entry, section ".printk_index", align 4
@.str.37 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"<NULL>\00", [25 x i8] zeroinitializer }, align 32
@__func__.skb_under_panic = private unnamed_addr constant [16 x i8] c"skb_under_panic\00", align 1
@warn_crc32c_csum_update._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.39, ptr @.str, i32 3067, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\014skbuff: %s: attempt to compute crc32c without libcrc32c.ko\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"warn_crc32c_csum_update\00", [40 x i8] zeroinitializer }, align 32
@warn_crc32c_csum_update._entry_ptr = internal global ptr @warn_crc32c_csum_update._entry, section ".printk_index", align 4
@warn_crc32c_csum_combine._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.40, ptr @.str, i32 3076, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"warn_crc32c_csum_combine\00", [39 x i8] zeroinitializer }, align 32
@warn_crc32c_csum_combine._entry_ptr = internal global ptr @warn_crc32c_csum_combine._entry, section ".printk_index", align 4
@.str.41 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VM_BUG_ON_FOLIO(((unsigned int) folio_ref_count(folio) + 127u <= 127u))\00", [56 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@.str.42 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"skbuff_ext_cache\00", [47 x i8] zeroinitializer }, align 32
@high_memory = external dso_local local_unnamed_addr global ptr, align 4
@sysctl_tstamp_allow_data = external dso_local local_unnamed_addr global i32, align 4
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@pskb_carve_frag_list._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.44, ptr @.str, i32 6077, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013skbuff: Not enough bytes to eat. Want %d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"pskb_carve_frag_list\00", [43 x i8] zeroinitializer }, align 32
@pskb_carve_frag_list._entry_ptr = internal global ptr @pskb_carve_frag_list._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.45 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.46 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.47 = internal global [4 x i64] [i64 2, i64 32, i64 4294967206, i64 4294967282]
@__sancov_gen_cov_switch_values.48 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.49 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.50 = internal global [4 x i64] [i64 2, i64 2, i64 2, i64 3]
@__sancov_gen_cov_switch_values.51 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.52 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.53 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.54 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.55 = internal global [4 x i64] [i64 2, i64 2, i64 2, i64 3]
@__sancov_gen_cov_switch_values.56 = internal global [4 x i64] [i64 2, i64 16, i64 2048, i64 34525]
@__sancov_gen_cov_switch_values.57 = internal global [4 x i64] [i64 2, i64 16, i64 2048, i64 34525]
@__sancov_gen_cov_switch_values.58 = internal global [7 x i64] [i64 5, i64 8, i64 0, i64 43, i64 44, i64 51, i64 60]
@__sancov_gen_cov_switch_values.59 = internal global [4 x i64] [i64 2, i64 2, i64 2, i64 3]
@__sancov_gen_cov_switch_values.60 = internal global [4 x i64] [i64 2, i64 2, i64 2, i64 3]
@__sancov_gen_cov_switch_values.61 = internal global [4 x i64] [i64 2, i64 2, i64 2, i64 3]
@__sancov_gen_cov_switch_values.62 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.63 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.64 = internal global [4 x i64] [i64 2, i64 16, i64 33024, i64 34984]
@__sancov_gen_cov_switch_values.65 = internal global [4 x i64] [i64 2, i64 2, i64 2, i64 3]
@__sancov_gen_cov_switch_values.66 = internal global [4 x i64] [i64 2, i64 2, i64 2, i64 3]
@__sancov_gen_cov_switch_values.67 = internal global [4 x i64] [i64 2, i64 32, i64 6, i64 17]
@___asan_gen_.70 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 728, i32 3 }
@___asan_gen_.79 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 818, i32 2 }
@___asan_gen_.85 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 837, i32 3 }
@___asan_gen_.91 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 840, i32 3 }
@___asan_gen_.94 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 844, i32 25 }
@___asan_gen_.97 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 849, i32 25 }
@___asan_gen_.100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 854, i32 25 }
@___asan_gen_.103 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 868, i32 26 }
@___asan_gen_.109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 879, i32 3 }
@___asan_gen_.112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 1809, i32 6 }
@___asan_gen_.113 = private unnamed_addr constant [19 x i8] c"default_crc32c_ops\00", align 1
@___asan_gen_.115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 3080, i32 38 }
@___asan_gen_.124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 4197, i32 5 }
@___asan_gen_.127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 4356, i32 49 }
@___asan_gen_.130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 4363, i32 42 }
@___asan_gen_.139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 4881, i32 3 }
@___asan_gen_.145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 5213, i32 2 }
@___asan_gen_.148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 5586, i32 6 }
@___asan_gen_.151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 5658, i32 7 }
@___asan_gen_.152 = private unnamed_addr constant [17 x i8] c"skb_ext_type_len\00", align 1
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 4300, i32 17 }
@___asan_gen_.159 = private unnamed_addr constant [30 x i8] c"../include/trace/events/skb.h\00", align 1
@___asan_gen_.160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.159, i32 37, i32 1 }
@___asan_gen_.162 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.162, i32 108, i32 2 }
@___asan_gen_.165 = private unnamed_addr constant [21 x i8] c"../include/net/dst.h\00", align 1
@___asan_gen_.166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.165, i32 231, i32 2 }
@___asan_gen_.168 = private unnamed_addr constant [26 x i8] c"../include/linux/skbuff.h\00", align 1
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.168, i32 1011, i32 2 }
@___asan_gen_.171 = private unnamed_addr constant [22 x i8] c"../include/net/sock.h\00", align 1
@___asan_gen_.172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.171, i32 1750, i32 2 }
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.204, i32 717, i32 2 }
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 109, i32 2 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 3065, i32 2 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 3074, i32 2 }
@___asan_gen_.204 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.204, i32 1160, i32 2 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 4344, i32 39 }
@___asan_gen_.209 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.215 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.216 = private constant [21 x i8] c"../net/core/skbuff.c\00", align 1
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 6077, i32 4 }
@llvm.compiler.used = appending global [174 x ptr] [ptr @__ksymtab____pskb_trim, ptr @__ksymtab___alloc_skb, ptr @__ksymtab___kfree_skb, ptr @__ksymtab___napi_alloc_frag_align, ptr @__ksymtab___napi_alloc_skb, ptr @__ksymtab___netdev_alloc_frag_align, ptr @__ksymtab___netdev_alloc_skb, ptr @__ksymtab___pskb_copy_fclone, ptr @__ksymtab___pskb_pull_tail, ptr @__ksymtab___skb_checksum, ptr @__ksymtab___skb_checksum_complete, ptr @__ksymtab___skb_checksum_complete_head, ptr @__ksymtab___skb_ext_del, ptr @__ksymtab___skb_ext_put, ptr @__ksymtab___skb_pad, ptr @__ksymtab___skb_tstamp_tx, ptr @__ksymtab___skb_vlan_pop, ptr @__ksymtab___skb_warn_lro_forwarding, ptr @__ksymtab_alloc_skb_for_msg, ptr @__ksymtab_alloc_skb_with_frags, ptr @__ksymtab_build_skb, ptr @__ksymtab_build_skb_around, ptr @__ksymtab_consume_skb, ptr @__ksymtab_crc32c_csum_stub, ptr @__ksymtab_kfree_skb_list, ptr @__ksymtab_kfree_skb_partial, ptr @__ksymtab_kfree_skb_reason, ptr @__ksymtab_mm_account_pinned_pages, ptr @__ksymtab_mm_unaccount_pinned_pages, ptr @__ksymtab_msg_zerocopy_alloc, ptr @__ksymtab_msg_zerocopy_callback, ptr @__ksymtab_msg_zerocopy_put_abort, ptr @__ksymtab_msg_zerocopy_realloc, ptr @__ksymtab_napi_build_skb, ptr @__ksymtab_napi_consume_skb, ptr @__ksymtab_pskb_expand_head, ptr @__ksymtab_pskb_extract, ptr @__ksymtab_pskb_put, ptr @__ksymtab_pskb_trim_rcsum_slow, ptr @__ksymtab_skb_abort_seq_read, ptr @__ksymtab_skb_add_rx_frag, ptr @__ksymtab_skb_append, ptr @__ksymtab_skb_append_pagefrags, ptr @__ksymtab_skb_checksum, ptr @__ksymtab_skb_checksum_setup, ptr @__ksymtab_skb_checksum_trimmed, ptr @__ksymtab_skb_clone, ptr @__ksymtab_skb_clone_sk, ptr @__ksymtab_skb_coalesce_rx_frag, ptr @__ksymtab_skb_complete_tx_timestamp, ptr @__ksymtab_skb_complete_wifi_ack, ptr @__ksymtab_skb_copy, ptr @__ksymtab_skb_copy_and_csum_bits, ptr @__ksymtab_skb_copy_and_csum_dev, ptr @__ksymtab_skb_copy_bits, ptr @__ksymtab_skb_copy_expand, ptr @__ksymtab_skb_copy_header, ptr @__ksymtab_skb_copy_ubufs, ptr @__ksymtab_skb_cow_data, ptr @__ksymtab_skb_dequeue, ptr @__ksymtab_skb_dequeue_tail, ptr @__ksymtab_skb_dump, ptr @__ksymtab_skb_ensure_writable, ptr @__ksymtab_skb_eth_pop, ptr @__ksymtab_skb_eth_push, ptr @__ksymtab_skb_expand_head, ptr @__ksymtab_skb_ext_add, ptr @__ksymtab_skb_find_text, ptr @__ksymtab_skb_gso_validate_mac_len, ptr @__ksymtab_skb_gso_validate_network_len, ptr @__ksymtab_skb_headers_offset_update, ptr @__ksymtab_skb_morph, ptr @__ksymtab_skb_mpls_dec_ttl, ptr @__ksymtab_skb_mpls_pop, ptr @__ksymtab_skb_mpls_push, ptr @__ksymtab_skb_mpls_update_lse, ptr @__ksymtab_skb_partial_csum_set, ptr @__ksymtab_skb_prepare_seq_read, ptr @__ksymtab_skb_pull, ptr @__ksymtab_skb_pull_data, ptr @__ksymtab_skb_pull_rcsum, ptr @__ksymtab_skb_push, ptr @__ksymtab_skb_put, ptr @__ksymtab_skb_queue_head, ptr @__ksymtab_skb_queue_purge, ptr @__ksymtab_skb_queue_tail, ptr @__ksymtab_skb_realloc_headroom, ptr @__ksymtab_skb_scrub_packet, ptr @__ksymtab_skb_segment, ptr @__ksymtab_skb_segment_list, ptr @__ksymtab_skb_send_sock_locked, ptr @__ksymtab_skb_seq_read, ptr @__ksymtab_skb_splice_bits, ptr @__ksymtab_skb_split, ptr @__ksymtab_skb_store_bits, ptr @__ksymtab_skb_to_sgvec, ptr @__ksymtab_skb_to_sgvec_nomark, ptr @__ksymtab_skb_trim, ptr @__ksymtab_skb_try_coalesce, ptr @__ksymtab_skb_tstamp_tx, ptr @__ksymtab_skb_tx_error, ptr @__ksymtab_skb_unlink, ptr @__ksymtab_skb_vlan_pop, ptr @__ksymtab_skb_vlan_push, ptr @__ksymtab_skb_vlan_untag, ptr @__ksymtab_skb_zerocopy, ptr @__ksymtab_skb_zerocopy_headlen, ptr @__ksymtab_skb_zerocopy_iter_dgram, ptr @__ksymtab_skb_zerocopy_iter_stream, ptr @__ksymtab_sock_dequeue_err_skb, ptr @__ksymtab_sock_queue_err_skb, ptr @__ksymtab_sysctl_max_skb_frags, ptr @__skb_warn_lro_forwarding._entry, ptr @__skb_warn_lro_forwarding._entry_ptr, ptr @pskb_carve_frag_list._entry, ptr @pskb_carve_frag_list._entry_ptr, ptr @skb_dump._entry, ptr @skb_dump._entry.13, ptr @skb_dump._entry.3, ptr @skb_dump._entry.6, ptr @skb_dump._entry_ptr, ptr @skb_dump._entry_ptr.15, ptr @skb_dump._entry_ptr.5, ptr @skb_dump._entry_ptr.8, ptr @skb_panic._entry, ptr @skb_panic._entry_ptr, ptr @skb_partial_csum_set._entry, ptr @skb_partial_csum_set._entry_ptr, ptr @skb_segment._entry, ptr @skb_segment._entry_ptr, ptr @warn_crc32c_csum_combine._entry, ptr @warn_crc32c_csum_combine._entry_ptr, ptr @warn_crc32c_csum_update._entry, ptr @warn_crc32c_csum_update._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.4, ptr @.str.7, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.14, ptr @.str.16, ptr @default_crc32c_ops, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @skb_ext_type_len, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44], section "llvm.metadata"
@0 = internal global [50 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.70 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_dump._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.79 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 255, i32 288, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.79 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.79 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_dump._entry.3 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.85 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.85 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_dump._entry.6 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.91 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.91 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.94 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.97 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.103 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_dump._entry.13 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_crc32c_ops to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_segment._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_partial_csum_set._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_ext_type_len to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_panic._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @warn_crc32c_csum_update._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @warn_crc32c_csum_combine._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pskb_carve_frag_list._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__napi_alloc_frag_align(i32 noundef %fragsz, i32 noundef %align_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, ptrtoint (ptr @napi_alloc_cache to i32)
  %6 = inttoptr i32 %add to ptr
  %add2 = add i32 %fragsz, 127
  %and = and i32 %add2, -128
  %call3 = tail call ptr @page_frag_alloc_align(ptr noundef %6, i32 noundef %and, i32 noundef 2592, i32 noundef %align_mask) #20
  ret ptr %call3
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_frag_alloc_align(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__netdev_alloc_frag_align(i32 noundef %fragsz, i32 noundef %align_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %fragsz, 127
  %and = and i32 %add, -128
  %0 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and1 = and i32 %3, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not = icmp eq i32 %and1, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !372
  %and.i = and i32 %4, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool11.not = icmp eq i32 %and.i, 0
  br i1 %tobool11.not, label %if.else, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %5 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i36 = and i32 %5, -16384
  %6 = inttoptr i32 %and.i36 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add18 = add i32 %10, ptrtoint (ptr @netdev_alloc_cache to i32)
  %11 = inttoptr i32 %add18 to ptr
  %call19 = tail call ptr @page_frag_alloc_align(ptr noundef %11, i32 noundef %and, i32 noundef 2592, i32 noundef %align_mask) #20
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @local_bh_disable()
  %12 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i37 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i37 to ptr
  %cpu29 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu29 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu29, align 4
  %arrayidx30 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx30, align 4
  %add31 = add i32 %17, ptrtoint (ptr @napi_alloc_cache to i32)
  %18 = inttoptr i32 %add31 to ptr
  %call32 = tail call ptr @page_frag_alloc_align(ptr noundef %18, i32 noundef %and, i32 noundef 2592, i32 noundef %align_mask) #20
  tail call fastcc void @local_bh_enable()
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %data.0 = phi ptr [ %call19, %if.then ], [ %call32, %if.else ]
  ret ptr %data.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_disable() #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__local_bh_disable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_disable, %__here) to i32), i32 noundef 512) #20
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_bh_enable() #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__local_bh_enable_ip(i32 noundef ptrtoint (ptr blockaddress(@local_bh_enable, %__here) to i32), i32 noundef 512) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__build_skb(ptr noundef %data, i32 noundef %frag_size) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @skbuff_head_cache, align 4
  %call = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef 2592) #20
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !373

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = call ptr @memset(ptr %call, i32 0, i32 168)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %frag_size)
  %tobool.not.i = icmp eq i32 %frag_size, 0
  br i1 %tobool.not.i, label %cond.false.i, label %if.end.__build_skb_around.exit_crit_edge

if.end.__build_skb_around.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %__build_skb_around.exit

cond.false.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i32 @ksize(ptr noundef %data) #20
  br label %__build_skb_around.exit

__build_skb_around.exit:                          ; preds = %cond.false.i, %if.end.__build_skb_around.exit_crit_edge
  %cond.i = phi i32 [ %call.i, %cond.false.i ], [ %frag_size, %if.end.__build_skb_around.exit_crit_edge ]
  %sub.i = add i32 %cond.i, -256
  %add1.i = add i32 %cond.i, 256
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 20
  %2 = ptrtoint ptr %truesize.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %add1.i, ptr %truesize.i, align 8
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #20
  %3 = ptrtoint ptr %users.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 1, ptr %users.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 18
  %4 = ptrtoint ptr %head.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %data, ptr %head.i, align 8
  %data2.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 19
  %5 = ptrtoint ptr %data2.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %data, ptr %data2.i, align 4
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 16
  %6 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %data, ptr %tail.i.i, align 8
  %add.ptr.i = getelementptr i8, ptr %data, i32 %sub.i
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 17
  %7 = ptrtoint ptr %end.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr.i, ptr %end.i, align 4
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 15, i32 0, i32 21
  %8 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %mac_header.i, align 2
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 15, i32 0, i32 19
  %9 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 -1, ptr %transport_header.i, align 2
  %10 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 32)
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr.i, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref.i, i32 noundef 4) #20
  %11 = ptrtoint ptr %dataref.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 1, ptr %dataref.i, align 4
  %call4.i = tail call i64 @kcov_common_handle() #20
  %kcov_handle1.i.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 15, i32 0, i32 22
  %12 = ptrtoint ptr %kcov_handle1.i.i to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %call4.i, ptr %kcov_handle1.i.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %__build_skb_around.exit, %entry.cleanup_crit_edge
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @build_skb(ptr noundef %data, i32 noundef %frag_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @__build_skb(ptr noundef %data, i32 noundef %frag_size)
  %tobool.not = icmp eq ptr %call, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %frag_size)
  %tobool1.not = icmp eq i32 %frag_size, 0
  %or.cond = or i1 %tobool1.not, %tobool.not
  br i1 %or.cond, label %entry.if.end8_crit_edge, label %if.then

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then:                                          ; preds = %entry
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 12
  %0 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %head_frag, align 2
  %bf.set = or i8 %bf.load, 4
  store i8 %bf.set, ptr %head_frag, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %1 = load ptr, ptr @mem_map, align 4
  %2 = ptrtoint ptr %data to i32
  %sub.i = add i32 %2, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  %3 = getelementptr %struct.page, ptr %1, i32 %shr.i, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %5, -1
  br label %virt_to_head_page.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i = getelementptr %struct.page, ptr %1, i32 %shr.i
  %6 = ptrtoint ptr %add.ptr.i to i32
  br label %virt_to_head_page.exit

virt_to_head_page.exit:                           ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %6, %if.end.i.i ]
  %7 = inttoptr i32 %retval.0.i.i to ptr
  %8 = getelementptr inbounds %struct.page, ptr %7, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %11 = ptrtoint ptr %10 to i32
  %and.i = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %virt_to_head_page.exit.if.end8_crit_edge, label %if.then4

virt_to_head_page.exit.if.end8_crit_edge:         ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then4:                                         ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  %bf.set7 = or i8 %bf.load, 6
  %12 = ptrtoint ptr %head_frag to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %bf.set7, ptr %head_frag, align 2
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %virt_to_head_page.exit.if.end8_crit_edge, %entry.if.end8_crit_edge
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @build_skb_around(ptr noundef %skb, ptr noundef %data, i32 noundef %frag_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %skb, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end, !prof !373

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %frag_size)
  %tobool.not.i = icmp eq i32 %frag_size, 0
  br i1 %tobool.not.i, label %cond.false.i, label %if.end.__build_skb_around.exit_crit_edge

if.end.__build_skb_around.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %__build_skb_around.exit

cond.false.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i32 @ksize(ptr noundef %data) #20
  br label %__build_skb_around.exit

__build_skb_around.exit:                          ; preds = %cond.false.i, %if.end.__build_skb_around.exit_crit_edge
  %cond.i = phi i32 [ %call.i, %cond.false.i ], [ %frag_size, %if.end.__build_skb_around.exit_crit_edge ]
  %sub.i = add i32 %cond.i, -256
  %add1.i = add i32 %cond.i, 256
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %0 = ptrtoint ptr %truesize.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %add1.i, ptr %truesize.i, align 8
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #20
  %1 = ptrtoint ptr %users.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile i32 1, ptr %users.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %data, ptr %head.i, align 8
  %data2.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %3 = ptrtoint ptr %data2.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %data, ptr %data2.i, align 4
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %4 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %data, ptr %tail.i.i, align 8
  %add.ptr.i = getelementptr i8, ptr %data, i32 %sub.i
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %5 = ptrtoint ptr %end.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %add.ptr.i, ptr %end.i, align 4
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %6 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 -1, ptr %mac_header.i, align 2
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %7 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 -1, ptr %transport_header.i, align 2
  %8 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 32)
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr.i, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref.i, i32 noundef 4) #20
  %9 = ptrtoint ptr %dataref.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 1, ptr %dataref.i, align 4
  %call4.i = tail call i64 @kcov_common_handle() #20
  %kcov_handle1.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 22
  %10 = ptrtoint ptr %kcov_handle1.i.i to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %call4.i, ptr %kcov_handle1.i.i, align 8
  br i1 %tobool.not.i, label %__build_skb_around.exit.return_crit_edge, label %if.then5

__build_skb_around.exit.return_crit_edge:         ; preds = %__build_skb_around.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then5:                                         ; preds = %__build_skb_around.exit
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %11 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load = load i8, ptr %head_frag, align 2
  %bf.set = or i8 %bf.load, 4
  store i8 %bf.set, ptr %head_frag, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %12 = load ptr, ptr @mem_map, align 4
  %13 = ptrtoint ptr %data to i32
  %sub.i19 = add i32 %13, 1073741824
  %shr.i = lshr i32 %sub.i19, 12
  %14 = getelementptr %struct.page, ptr %12, i32 %shr.i, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %16, -1
  br label %virt_to_head_page.exit

if.end.i.i:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i20 = getelementptr %struct.page, ptr %12, i32 %shr.i
  %17 = ptrtoint ptr %add.ptr.i20 to i32
  br label %virt_to_head_page.exit

virt_to_head_page.exit:                           ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %17, %if.end.i.i ]
  %18 = inttoptr i32 %retval.0.i.i to ptr
  %19 = getelementptr inbounds %struct.page, ptr %18, i32 0, i32 1
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %22 = ptrtoint ptr %21 to i32
  %and.i = and i32 %22, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %virt_to_head_page.exit.return_crit_edge, label %if.then7

virt_to_head_page.exit.return_crit_edge:          ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then7:                                         ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  %bf.set10 = or i8 %bf.load, 6
  %23 = ptrtoint ptr %head_frag to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %bf.set10, ptr %head_frag, align 2
  br label %return

return:                                           ; preds = %if.then7, %virt_to_head_page.exit.return_crit_edge, %__build_skb_around.exit.return_crit_edge, %entry.return_crit_edge
  ret ptr %skb
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @napi_build_skb(ptr noundef %data, i32 noundef %frag_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__napi_build_skb(ptr noundef %data, i32 noundef %frag_size)
  %tobool.not = icmp eq ptr %call, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %frag_size)
  %tobool3.not = icmp eq i32 %frag_size, 0
  %or.cond = or i1 %tobool3.not, %tobool.not
  br i1 %or.cond, label %entry.if.end_crit_edge, label %if.then, !prof !375

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 12
  %0 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %head_frag, align 2
  %bf.set = or i8 %bf.load, 4
  store i8 %bf.set, ptr %head_frag, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %1 = load ptr, ptr @mem_map, align 4
  %2 = ptrtoint ptr %data to i32
  %sub.i = add i32 %2, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  %3 = getelementptr %struct.page, ptr %1, i32 %shr.i, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %and.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %5, -1
  br label %virt_to_head_page.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i = getelementptr %struct.page, ptr %1, i32 %shr.i
  %6 = ptrtoint ptr %add.ptr.i to i32
  br label %virt_to_head_page.exit

virt_to_head_page.exit:                           ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %6, %if.end.i.i ]
  %7 = inttoptr i32 %retval.0.i.i to ptr
  %8 = getelementptr inbounds %struct.page, ptr %7, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %11 = ptrtoint ptr %10 to i32
  %and.i.i10 = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i10)
  %tobool.i.not.i = icmp eq i32 %and.i.i10, 0
  br i1 %tobool.i.not.i, label %virt_to_head_page.exit.if.end_crit_edge, label %if.then.i

virt_to_head_page.exit.if.end_crit_edge:          ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then.i:                                        ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  %bf.set.i = or i8 %bf.load, 6
  %12 = ptrtoint ptr %head_frag to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %bf.set.i, ptr %head_frag, align 2
  br label %if.end

if.end:                                           ; preds = %if.then.i, %virt_to_head_page.exit.if.end_crit_edge, %entry.if.end_crit_edge
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__napi_build_skb(ptr noundef %data, i32 noundef %frag_size) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %5, ptrtoint (ptr @napi_alloc_cache to i32)
  %6 = inttoptr i32 %add.i to ptr
  %skb_count.i = getelementptr inbounds %struct.napi_alloc_cache, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %skb_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.napi_skb_cache_get.exit_crit_edge, !prof !373

entry.napi_skb_cache_get.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_skb_cache_get.exit

if.end.i:                                         ; preds = %entry
  %9 = load ptr, ptr @skbuff_head_cache, align 4
  %skb_cache.i = getelementptr inbounds %struct.napi_alloc_cache, ptr %6, i32 0, i32 2
  %call5.i = tail call i32 @kmem_cache_alloc_bulk(ptr noundef %9, i32 noundef 2592, i32 noundef 16, ptr noundef %skb_cache.i) #20
  %10 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %call5.i, ptr %skb_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool8.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool8.not.i, label %if.end.i.cleanup_crit_edge, label %if.end.i.napi_skb_cache_get.exit_crit_edge, !prof !373

if.end.i.napi_skb_cache_get.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_skb_cache_get.exit

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

napi_skb_cache_get.exit:                          ; preds = %if.end.i.napi_skb_cache_get.exit_crit_edge, %entry.napi_skb_cache_get.exit_crit_edge
  %11 = phi i32 [ %call5.i, %if.end.i.napi_skb_cache_get.exit_crit_edge ], [ %8, %entry.napi_skb_cache_get.exit_crit_edge ]
  %dec.i = add i32 %11, -1
  %12 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %dec.i, ptr %skb_count.i, align 4
  %arrayidx21.i = getelementptr %struct.napi_alloc_cache, ptr %6, i32 0, i32 2, i32 %dec.i
  %13 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx21.i, align 4
  %15 = load ptr, ptr @skbuff_head_cache, align 4
  tail call void @__kasan_unpoison_object_data(ptr noundef %15, ptr noundef %14) #20
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %napi_skb_cache_get.exit.cleanup_crit_edge, label %if.end, !prof !373

napi_skb_cache_get.exit.cleanup_crit_edge:        ; preds = %napi_skb_cache_get.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %napi_skb_cache_get.exit
  %16 = call ptr @memset(ptr %14, i32 0, i32 168)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %frag_size)
  %tobool.not.i7 = icmp eq i32 %frag_size, 0
  br i1 %tobool.not.i7, label %cond.false.i, label %if.end.__build_skb_around.exit_crit_edge

if.end.__build_skb_around.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %__build_skb_around.exit

cond.false.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call i32 @ksize(ptr noundef %data) #20
  br label %__build_skb_around.exit

__build_skb_around.exit:                          ; preds = %cond.false.i, %if.end.__build_skb_around.exit_crit_edge
  %cond.i = phi i32 [ %call.i, %cond.false.i ], [ %frag_size, %if.end.__build_skb_around.exit_crit_edge ]
  %sub.i = add i32 %cond.i, -256
  %add1.i = add i32 %cond.i, 256
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 20
  %17 = ptrtoint ptr %truesize.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %add1.i, ptr %truesize.i, align 8
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #20
  %18 = ptrtoint ptr %users.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile i32 1, ptr %users.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 18
  %19 = ptrtoint ptr %head.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %data, ptr %head.i, align 8
  %data2.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 19
  %20 = ptrtoint ptr %data2.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %data, ptr %data2.i, align 4
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 16
  %21 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %data, ptr %tail.i.i, align 8
  %add.ptr.i = getelementptr i8, ptr %data, i32 %sub.i
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 17
  %22 = ptrtoint ptr %end.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %add.ptr.i, ptr %end.i, align 4
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 15, i32 0, i32 21
  %23 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 -1, ptr %mac_header.i, align 2
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 15, i32 0, i32 19
  %24 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 -1, ptr %transport_header.i, align 2
  %25 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 32)
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr.i, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref.i, i32 noundef 4) #20
  %26 = ptrtoint ptr %dataref.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 1, ptr %dataref.i, align 4
  %call4.i = tail call i64 @kcov_common_handle() #20
  %kcov_handle1.i.i = getelementptr inbounds %struct.sk_buff, ptr %14, i32 0, i32 15, i32 0, i32 22
  %27 = ptrtoint ptr %kcov_handle1.i.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %call4.i, ptr %kcov_handle1.i.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %__build_skb_around.exit, %napi_skb_cache_get.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  %retval.0 = phi ptr [ %14, %__build_skb_around.exit ], [ null, %napi_skb_cache_get.exit.cleanup_crit_edge ], [ null, %if.end.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__alloc_skb(i32 noundef %size, i32 noundef %gfp_mask, i32 noundef %flags, i32 noundef %node) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %skbuff_head_cache.val = load ptr, ptr @skbuff_head_cache, align 4
  %skbuff_fclone_cache.val = load ptr, ptr @skbuff_fclone_cache, align 4
  %cond = select i1 %tobool.not, ptr %skbuff_head_cache.val, ptr %skbuff_fclone_cache.val
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memalloc_socks_key, ptr blockaddress(@__alloc_skb, %l_yes.i.i)) #20
          to label %sk_memalloc_socks.exit [label %l_yes.i.i], !srcloc !376

l_yes.i.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %sk_memalloc_socks.exit

sk_memalloc_socks.exit:                           ; preds = %l_yes.i.i, %entry
  %tobool1.not = phi i1 [ true, %entry ], [ false, %l_yes.i.i ]
  %and2 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %or.cond = or i1 %tobool3.not, %tobool1.not
  %or = or i32 %gfp_mask, 131072
  %gfp_mask.addr.0 = select i1 %or.cond, i32 %gfp_mask, i32 %or
  %and4 = and i32 %flags, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %and4)
  %cmp = icmp eq i32 %and4, 4
  br i1 %cmp, label %land.lhs.true5, label %sk_memalloc_socks.exit.if.else_crit_edge

sk_memalloc_socks.exit.if.else_crit_edge:         ; preds = %sk_memalloc_socks.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

land.lhs.true5:                                   ; preds = %sk_memalloc_socks.exit
  %0 = zext i32 %node to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values)
  switch i32 %node, label %land.lhs.true5.if.else_crit_edge [
    i32 -1, label %land.lhs.true5.if.then11_crit_edge
    i32 0, label %land.lhs.true5.if.then11_crit_edge104
  ], !prof !377

land.lhs.true5.if.then11_crit_edge104:            ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11

land.lhs.true5.if.then11_crit_edge:               ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11

land.lhs.true5.if.else_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.then11:                                        ; preds = %land.lhs.true5.if.then11_crit_edge, %land.lhs.true5.if.then11_crit_edge104
  %1 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %6, ptrtoint (ptr @napi_alloc_cache to i32)
  %7 = inttoptr i32 %add.i to ptr
  %skb_count.i = getelementptr inbounds %struct.napi_alloc_cache, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %skb_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then11.if.end18.i_crit_edge, !prof !373

if.then11.if.end18.i_crit_edge:                   ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18.i

if.end.i:                                         ; preds = %if.then11
  %10 = load ptr, ptr @skbuff_head_cache, align 4
  %skb_cache.i = getelementptr inbounds %struct.napi_alloc_cache, ptr %7, i32 0, i32 2
  %call5.i = tail call i32 @kmem_cache_alloc_bulk(ptr noundef %10, i32 noundef 2592, i32 noundef 16, ptr noundef %skb_cache.i) #20
  %11 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call5.i, ptr %skb_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool8.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool8.not.i, label %if.end.i.cleanup_crit_edge, label %if.end.i.if.end18.i_crit_edge, !prof !373

if.end.i.if.end18.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end18.i:                                       ; preds = %if.end.i.if.end18.i_crit_edge, %if.then11.if.end18.i_crit_edge
  %12 = phi i32 [ %call5.i, %if.end.i.if.end18.i_crit_edge ], [ %9, %if.then11.if.end18.i_crit_edge ]
  %dec.i = add i32 %12, -1
  %13 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %dec.i, ptr %skb_count.i, align 4
  %arrayidx21.i = getelementptr %struct.napi_alloc_cache, ptr %7, i32 0, i32 2, i32 %dec.i
  %14 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx21.i, align 4
  %16 = load ptr, ptr @skbuff_head_cache, align 4
  tail call void @__kasan_unpoison_object_data(ptr noundef %16, ptr noundef %15) #20
  br label %if.end15

if.else:                                          ; preds = %land.lhs.true5.if.else_crit_edge, %sk_memalloc_socks.exit.if.else_crit_edge
  %and13 = and i32 %gfp_mask.addr.0, -2
  %call.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %cond, i32 noundef %and13) #20
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end18.i
  %skb.0 = phi ptr [ %call.i, %if.else ], [ %15, %if.end18.i ]
  %tobool16.not = icmp eq ptr %skb.0, null
  br i1 %tobool16.not, label %if.end15.cleanup_crit_edge, label %if.end26, !prof !373

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end26:                                         ; preds = %if.end15
  tail call void @llvm.prefetch.p0(ptr nonnull %skb.0, i32 1, i32 3, i32 1)
  %17 = add i32 %size, 383
  %add28 = and i32 %17, -128
  %or1.i = or i32 %gfp_mask.addr.0, 532480
  %18 = tail call ptr @llvm.returnaddress(i32 0) #20
  %19 = ptrtoint ptr %18 to i32
  %call.i85 = tail call ptr @__kmalloc_track_caller(i32 noundef %add28, i32 noundef %or1.i, i32 noundef %19) #20
  %tobool.not.i86 = icmp eq ptr %call.i85, null
  br i1 %tobool.not.i86, label %lor.lhs.false.i, label %if.end26.if.end40_crit_edge

if.end26.if.end40_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end40

lor.lhs.false.i:                                  ; preds = %if.end26
  %call2.i = tail call zeroext i1 @gfp_pfmemalloc_allowed(i32 noundef %gfp_mask.addr.0) #20
  br i1 %call2.i, label %kmalloc_reserve.exit, label %lor.lhs.false.i.nodata_crit_edge

lor.lhs.false.i.nodata_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %nodata

kmalloc_reserve.exit:                             ; preds = %lor.lhs.false.i
  %call3.i = tail call ptr @__kmalloc_track_caller(i32 noundef %add28, i32 noundef %gfp_mask.addr.0, i32 noundef %19) #20
  %tobool30.not = icmp eq ptr %call3.i, null
  br i1 %tobool30.not, label %kmalloc_reserve.exit.nodata_crit_edge, label %kmalloc_reserve.exit.if.end40_crit_edge, !prof !373

kmalloc_reserve.exit.if.end40_crit_edge:          ; preds = %kmalloc_reserve.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end40

kmalloc_reserve.exit.nodata_crit_edge:            ; preds = %kmalloc_reserve.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %nodata

if.end40:                                         ; preds = %kmalloc_reserve.exit.if.end40_crit_edge, %if.end26.if.end40_crit_edge
  %frombool.i103 = phi i8 [ 2, %kmalloc_reserve.exit.if.end40_crit_edge ], [ 0, %if.end26.if.end40_crit_edge ]
  %obj.0.i102 = phi ptr [ %call3.i, %kmalloc_reserve.exit.if.end40_crit_edge ], [ %call.i85, %if.end26.if.end40_crit_edge ]
  %call41 = tail call i32 @ksize(ptr noundef nonnull %obj.0.i102) #20
  %sub = add i32 %call41, -256
  %add.ptr = getelementptr i8, ptr %obj.0.i102, i32 %sub
  tail call void @llvm.prefetch.p0(ptr %add.ptr, i32 1, i32 3, i32 1)
  %20 = call ptr @memset(ptr %skb.0, i32 0, i32 168)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool.not.i88 = icmp eq i32 %call41, 0
  br i1 %tobool.not.i88, label %cond.false.i, label %if.end40.__build_skb_around.exit_crit_edge

if.end40.__build_skb_around.exit_crit_edge:       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #22
  br label %__build_skb_around.exit

cond.false.i:                                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #22
  %call.i89 = tail call i32 @ksize(ptr noundef nonnull %obj.0.i102) #20
  %.pre = add i32 %call.i89, -256
  br label %__build_skb_around.exit

__build_skb_around.exit:                          ; preds = %cond.false.i, %if.end40.__build_skb_around.exit_crit_edge
  %sub.i.pre-phi = phi i32 [ %sub, %if.end40.__build_skb_around.exit_crit_edge ], [ %.pre, %cond.false.i ]
  %cond.i = phi i32 [ %call41, %if.end40.__build_skb_around.exit_crit_edge ], [ %call.i89, %cond.false.i ]
  %add1.i = add i32 %cond.i, 256
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 20
  %21 = ptrtoint ptr %truesize.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %add1.i, ptr %truesize.i, align 8
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #20
  %22 = ptrtoint ptr %users.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 1, ptr %users.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 18
  %23 = ptrtoint ptr %head.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %obj.0.i102, ptr %head.i, align 8
  %data2.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 19
  %24 = ptrtoint ptr %data2.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %obj.0.i102, ptr %data2.i, align 4
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 16
  %25 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %obj.0.i102, ptr %tail.i.i, align 8
  %add.ptr.i = getelementptr i8, ptr %obj.0.i102, i32 %sub.i.pre-phi
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 17
  %26 = ptrtoint ptr %end.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %add.ptr.i, ptr %end.i, align 4
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 15, i32 0, i32 21
  %27 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 -1, ptr %mac_header.i, align 2
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 15, i32 0, i32 19
  %28 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 -1, ptr %transport_header.i, align 2
  %29 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 32)
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr.i, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref.i, i32 noundef 4) #20
  %30 = ptrtoint ptr %dataref.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile i32 1, ptr %dataref.i, align 4
  %call4.i = tail call i64 @kcov_common_handle() #20
  %kcov_handle1.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 15, i32 0, i32 22
  %31 = ptrtoint ptr %kcov_handle1.i.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %call4.i, ptr %kcov_handle1.i.i, align 8
  %pfmemalloc43 = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 12
  %32 = ptrtoint ptr %pfmemalloc43 to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load = load i8, ptr %pfmemalloc43, align 2
  %bf.clear = and i8 %bf.load, -3
  %bf.set = or i8 %bf.clear, %frombool.i103
  store i8 %bf.set, ptr %pfmemalloc43, align 2
  br i1 %tobool.not, label %__build_skb_around.exit.cleanup_crit_edge, label %if.then46

__build_skb_around.exit.cleanup_crit_edge:        ; preds = %__build_skb_around.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then46:                                        ; preds = %__build_skb_around.exit
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear49 = and i8 %bf.set, -49
  %bf.set50 = or i8 %bf.clear49, 16
  %33 = ptrtoint ptr %pfmemalloc43 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %bf.set50, ptr %pfmemalloc43, align 2
  %fclone_ref = getelementptr inbounds %struct.sk_buff_fclones, ptr %skb.0, i32 0, i32 2
  %call.i.i.i90 = tail call zeroext i1 @__kasan_check_write(ptr noundef %fclone_ref, i32 noundef 4) #20
  %34 = ptrtoint ptr %fclone_ref to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile i32 1, ptr %fclone_ref, align 4
  %fclone51 = getelementptr inbounds %struct.sk_buff_fclones, ptr %skb.0, i32 0, i32 1, i32 12
  %35 = ptrtoint ptr %fclone51 to i32
  call void @__asan_load1_noabort(i32 %35)
  %bf.load52 = load i8, ptr %fclone51, align 2
  %bf.clear53 = and i8 %bf.load52, -49
  %bf.set54 = or i8 %bf.clear53, 32
  store i8 %bf.set54, ptr %fclone51, align 2
  br label %cleanup

nodata:                                           ; preds = %kmalloc_reserve.exit.nodata_crit_edge, %lor.lhs.false.i.nodata_crit_edge
  tail call void @kmem_cache_free(ptr noundef %cond, ptr noundef nonnull %skb.0) #20
  br label %cleanup

cleanup:                                          ; preds = %nodata, %if.then46, %__build_skb_around.exit.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %nodata ], [ null, %if.end15.cleanup_crit_edge ], [ %skb.0, %if.then46 ], [ %skb.0, %__build_skb_around.exit.cleanup_crit_edge ], [ null, %if.end.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ksize(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__netdev_alloc_skb(ptr noundef %dev, i32 noundef %len, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = add i32 %len, -641
  call void @__sanitizer_cov_trace_const_cmp4(i32 3072, i32 %0)
  %1 = icmp ult i32 %0, 3072
  %and = and i32 %gfp_mask, 1025
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %or.cond107 = and i1 %1, %tobool.not
  br i1 %or.cond107, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  %add = add i32 %len, 128
  %call = tail call ptr @__alloc_skb(i32 noundef %add, i32 noundef %gfp_mask, i32 noundef 2, i32 noundef -1)
  %tobool3.not = icmp eq ptr %call, null
  br i1 %tobool3.not, label %if.then.cleanup_crit_edge, label %if.then.skb_success_crit_edge

if.then.skb_success_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_success

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end5:                                          ; preds = %entry
  %add7 = add nuw nsw i32 %len, 511
  %and8 = and i32 %add7, -128
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memalloc_socks_key, ptr blockaddress(@__netdev_alloc_skb, %sk_memalloc_socks.exit.thread)) #20
          to label %2 [label %sk_memalloc_socks.exit.thread], !srcloc !376

sk_memalloc_socks.exit.thread:                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  %or113 = or i32 %gfp_mask, 131072
  br label %2

2:                                                ; preds = %sk_memalloc_socks.exit.thread, %if.end5
  %3 = phi i32 [ %or113, %sk_memalloc_socks.exit.thread ], [ %gfp_mask, %if.end5 ]
  %4 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i, align 4
  %and14 = and i32 %7, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %lor.lhs.false16, label %.do.body29_crit_edge

.do.body29_crit_edge:                             ; preds = %2
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body29

lor.lhs.false16:                                  ; preds = %2
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !372
  %and.i = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool27.not = icmp eq i32 %and.i, 0
  br i1 %tobool27.not, label %if.else, label %lor.lhs.false16.do.body29_crit_edge

lor.lhs.false16.do.body29_crit_edge:              ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body29

do.body29:                                        ; preds = %lor.lhs.false16.do.body29_crit_edge, %.do.body29_crit_edge
  %9 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i108 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i108 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add35 = add i32 %14, ptrtoint (ptr @netdev_alloc_cache to i32)
  %15 = inttoptr i32 %add35 to ptr
  %call.i = tail call ptr @page_frag_alloc_align(ptr noundef %15, i32 noundef %and8, i32 noundef %3, i32 noundef -1) #20
  %pfmemalloc37 = getelementptr inbounds %struct.page_frag_cache, ptr %15, i32 0, i32 4
  %16 = ptrtoint ptr %pfmemalloc37 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %pfmemalloc37, align 4, !range !378
  br label %if.end54

if.else:                                          ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @local_bh_disable()
  %18 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i109 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i109 to ptr
  %cpu47 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu47 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu47, align 4
  %arrayidx48 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx48, align 4
  %add49 = add i32 %23, ptrtoint (ptr @napi_alloc_cache to i32)
  %24 = inttoptr i32 %add49 to ptr
  %call.i110 = tail call ptr @page_frag_alloc_align(ptr noundef %24, i32 noundef %and8, i32 noundef %3, i32 noundef -1) #20
  %pfmemalloc51 = getelementptr inbounds %struct.page_frag_cache, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %pfmemalloc51 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %pfmemalloc51, align 4, !range !378
  tail call fastcc void @local_bh_enable()
  br label %if.end54

if.end54:                                         ; preds = %if.else, %do.body29
  %data.0 = phi ptr [ %call.i, %do.body29 ], [ %call.i110, %if.else ]
  %pfmemalloc.0.off0.in = phi i8 [ %17, %do.body29 ], [ %26, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %pfmemalloc.0.off0.in)
  %pfmemalloc.0.off0.not = icmp eq i8 %pfmemalloc.0.off0.in, 0
  %tobool55.not = icmp eq ptr %data.0, null
  br i1 %tobool55.not, label %if.end54.cleanup_crit_edge, label %if.end60, !prof !373

if.end54.cleanup_crit_edge:                       ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end60:                                         ; preds = %if.end54
  %call61 = tail call ptr @__build_skb(ptr noundef nonnull %data.0, i32 noundef %and8)
  %tobool62.not = icmp eq ptr %call61, null
  br i1 %tobool62.not, label %if.then71, label %if.end72, !prof !373

if.then71:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @page_frag_free(ptr noundef nonnull %data.0) #20
  br label %cleanup

if.end72:                                         ; preds = %if.end60
  br i1 %pfmemalloc.0.off0.not, label %if.end72.if.end76_crit_edge, label %if.then74

if.end72.if.end76_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end76

if.then74:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #22
  %pfmemalloc75 = getelementptr inbounds %struct.sk_buff, ptr %call61, i32 0, i32 12
  %27 = ptrtoint ptr %pfmemalloc75 to i32
  call void @__asan_load1_noabort(i32 %27)
  %bf.load = load i8, ptr %pfmemalloc75, align 2
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, ptr %pfmemalloc75, align 2
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.end72.if.end76_crit_edge
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %call61, i32 0, i32 12
  %28 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load77 = load i8, ptr %head_frag, align 2
  %bf.set79 = or i8 %bf.load77, 4
  store i8 %bf.set79, ptr %head_frag, align 2
  br label %skb_success

skb_success:                                      ; preds = %if.end76, %if.then.skb_success_crit_edge
  %skb.0 = phi ptr [ %call, %if.then.skb_success_crit_edge ], [ %call61, %if.end76 ]
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 19
  %29 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %30, i32 128
  store ptr %add.ptr.i, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 16
  %31 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %32, i32 128
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %33 = getelementptr inbounds %struct.anon.27, ptr %skb.0, i32 0, i32 2
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %dev, ptr %33, align 8
  br label %cleanup

cleanup:                                          ; preds = %skb_success, %if.then71, %if.end54.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then71 ], [ null, %if.end54.cleanup_crit_edge ], [ %skb.0, %skb_success ], [ null, %if.then.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__napi_alloc_skb(ptr nocapture noundef readonly %napi, i32 noundef %len, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = add i32 %len, -639
  call void @__sanitizer_cov_trace_const_cmp4(i32 3072, i32 %0)
  %1 = icmp ult i32 %0, 3072
  %and = and i32 %gfp_mask, 1025
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %or.cond64 = and i1 %1, %tobool.not
  br i1 %or.cond64, label %do.body, label %if.then

if.then:                                          ; preds = %entry
  %add = add i32 %len, 130
  %call = tail call ptr @__alloc_skb(i32 noundef %add, i32 noundef %gfp_mask, i32 noundef 6, i32 noundef -1)
  %tobool3.not = icmp eq ptr %call, null
  br i1 %tobool3.not, label %if.then.cleanup_crit_edge, label %if.then.skb_success_crit_edge

if.then.skb_success_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_success

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.body:                                          ; preds = %entry
  %2 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %5
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %add8 = add i32 %7, ptrtoint (ptr @napi_alloc_cache to i32)
  %8 = inttoptr i32 %add8 to ptr
  %add10 = add nuw nsw i32 %len, 513
  %and11 = and i32 %add10, -128
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memalloc_socks_key, ptr blockaddress(@__napi_alloc_skb, %sk_memalloc_socks.exit.thread)) #20
          to label %9 [label %sk_memalloc_socks.exit.thread], !srcloc !376

sk_memalloc_socks.exit.thread:                    ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  %or67 = or i32 %gfp_mask, 131072
  br label %9

9:                                                ; preds = %sk_memalloc_socks.exit.thread, %do.body
  %10 = phi i32 [ %or67, %sk_memalloc_socks.exit.thread ], [ %gfp_mask, %do.body ]
  %call.i = tail call ptr @page_frag_alloc_align(ptr noundef %8, i32 noundef %and11, i32 noundef %10, i32 noundef -1) #20
  %tobool17.not = icmp eq ptr %call.i, null
  br i1 %tobool17.not, label %.cleanup_crit_edge, label %if.end22, !prof !373

.cleanup_crit_edge:                               ; preds = %9
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end22:                                         ; preds = %9
  %call23 = tail call fastcc ptr @__napi_build_skb(ptr noundef nonnull %call.i, i32 noundef %and11)
  %tobool24.not = icmp eq ptr %call23, null
  br i1 %tobool24.not, label %if.then33, label %if.end34, !prof !373

if.then33:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @page_frag_free(ptr noundef nonnull %call.i) #20
  br label %cleanup

if.end34:                                         ; preds = %if.end22
  %pfmemalloc = getelementptr inbounds %struct.page_frag_cache, ptr %8, i32 0, i32 4
  %11 = ptrtoint ptr %pfmemalloc to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %pfmemalloc, align 4, !range !378
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool36.not = icmp eq i8 %12, 0
  br i1 %tobool36.not, label %if.end34.if.end39_crit_edge, label %if.then37

if.end34.if.end39_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end39

if.then37:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #22
  %pfmemalloc38 = getelementptr inbounds %struct.sk_buff, ptr %call23, i32 0, i32 12
  %13 = ptrtoint ptr %pfmemalloc38 to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load = load i8, ptr %pfmemalloc38, align 2
  %bf.set = or i8 %bf.load, 2
  store i8 %bf.set, ptr %pfmemalloc38, align 2
  br label %if.end39

if.end39:                                         ; preds = %if.then37, %if.end34.if.end39_crit_edge
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %call23, i32 0, i32 12
  %14 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load40 = load i8, ptr %head_frag, align 2
  %bf.set42 = or i8 %bf.load40, 4
  store i8 %bf.set42, ptr %head_frag, align 2
  br label %skb_success

skb_success:                                      ; preds = %if.end39, %if.then.skb_success_crit_edge
  %skb.0 = phi ptr [ %call, %if.then.skb_success_crit_edge ], [ %call23, %if.end39 ]
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 19
  %15 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %16, i32 130
  store ptr %add.ptr.i, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 16
  %17 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %18, i32 130
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %dev = getelementptr inbounds %struct.napi_struct, ptr %napi, i32 0, i32 7
  %19 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dev, align 8
  %21 = getelementptr inbounds %struct.anon.27, ptr %skb.0, i32 0, i32 2
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %20, ptr %21, align 8
  br label %cleanup

cleanup:                                          ; preds = %skb_success, %if.then33, %.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then33 ], [ null, %.cleanup_crit_edge ], [ %skb.0, %skb_success ], [ null, %if.then.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @skb_add_rx_frag(ptr nocapture noundef %skb, i32 noundef %i, ptr noundef %page, i32 noundef %off, i32 noundef %size, i32 noundef %truesize) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %i
  %2 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %page, ptr %arrayidx.i.i, align 4
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %i, i32 2
  %3 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %off, ptr %bv_offset.i.i, align 4
  %bv_len.i.i.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %i, i32 1
  %4 = ptrtoint ptr %bv_len.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %size, ptr %bv_len.i.i.i, align 4
  %5 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %and.i.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !374

if.then.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i = add i32 %7, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %8 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %8, %if.end.i.i.i ]
  %9 = inttoptr i32 %retval.0.i.i.i to ptr
  %10 = getelementptr inbounds %struct.page, ptr %9, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %13 = ptrtoint ptr %12 to i32
  %and.i8.i.i = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i8.i.i, 0
  br i1 %tobool.i.not.i.i, label %_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge, label %if.then.i.i

_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge: ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_fill_page_desc.exit

if.then.i.i:                                      ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %14 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %bf.set.i.i = or i8 %bf.load.i.i, 2
  store i8 %bf.set.i.i, ptr %pfmemalloc.i.i, align 2
  br label %skb_fill_page_desc.exit

skb_fill_page_desc.exit:                          ; preds = %if.then.i.i, %_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge
  %15 = trunc i32 %i to i8
  %conv.i = add i8 %15, 1
  %16 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %end.i.i.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv.i, ptr %nr_frags.i, align 2
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %19 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %len, align 4
  %add = add i32 %20, %size
  store i32 %add, ptr %len, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %21 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %data_len, align 8
  %add1 = add i32 %22, %size
  store i32 %add1, ptr %data_len, align 8
  %truesize2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %23 = ptrtoint ptr %truesize2 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %truesize2, align 8
  %add3 = add i32 %24, %truesize
  store i32 %add3, ptr %truesize2, align 8
  ret void
}

; Function Attrs: inlinehint mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @skb_fill_page_desc(ptr nocapture noundef %skb, i32 noundef %i, ptr noundef %page, i32 noundef %off, i32 noundef %size) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i.i, align 4
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %page, ptr %arrayidx.i, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %i, i32 2
  %3 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %off, ptr %bv_offset.i, align 4
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %i, i32 1
  %4 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %size, ptr %bv_len.i.i, align 4
  %5 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %and.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %7, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %8 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %8, %if.end.i.i ]
  %9 = inttoptr i32 %retval.0.i.i to ptr
  %10 = getelementptr inbounds %struct.page, ptr %9, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %13 = ptrtoint ptr %12 to i32
  %and.i8.i = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i)
  %tobool.i.not.i = icmp eq i32 %and.i8.i, 0
  br i1 %tobool.i.not.i, label %_compound_head.exit.i.__skb_fill_page_desc.exit_crit_edge, label %if.then.i

_compound_head.exit.i.__skb_fill_page_desc.exit_crit_edge: ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_fill_page_desc.exit

if.then.i:                                        ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %pfmemalloc.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %14 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load.i = load i8, ptr %pfmemalloc.i, align 2
  %bf.set.i = or i8 %bf.load.i, 2
  store i8 %bf.set.i, ptr %pfmemalloc.i, align 2
  br label %__skb_fill_page_desc.exit

__skb_fill_page_desc.exit:                        ; preds = %if.then.i, %_compound_head.exit.i.__skb_fill_page_desc.exit_crit_edge
  %15 = trunc i32 %i to i8
  %conv = add i8 %15, 1
  %16 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %end.i.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %nr_frags to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv, ptr %nr_frags, align 2
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @skb_coalesce_rx_frag(ptr nocapture noundef %skb, i32 noundef %i, i32 noundef %size, i32 noundef %truesize) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %i, i32 1
  %2 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bv_len.i, align 4
  %add.i = add i32 %3, %size
  store i32 %add.i, ptr %bv_len.i, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  %add = add i32 %5, %size
  store i32 %add, ptr %len, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %6 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_len, align 8
  %add1 = add i32 %7, %size
  store i32 %add1, ptr %data_len, align 8
  %truesize2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %8 = ptrtoint ptr %truesize2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %truesize2, align 8
  %add3 = add i32 %9, %truesize
  store i32 %add3, ptr %truesize2, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_release_head_state(ptr noundef %skb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %0, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.skb_dst_drop.exit_crit_edge, label %if.then.i

entry.skb_dst_drop.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_drop.exit

if.then.i:                                        ; preds = %entry
  %and.i.i31 = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i31)
  %tobool.not.i.i = icmp eq i32 %and.i.i31, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.i.refdst_drop.exit.i_crit_edge

if.then.i.refdst_drop.exit.i_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refdst_drop.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %and1.i.i = and i32 %2, -2
  %3 = inttoptr i32 %and1.i.i to ptr
  tail call void @dst_release(ptr noundef %3) #20
  br label %refdst_drop.exit.i

refdst_drop.exit.i:                               ; preds = %if.then.i.i, %if.then.i.refdst_drop.exit.i_crit_edge
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %0, align 8
  br label %skb_dst_drop.exit

skb_dst_drop.exit:                                ; preds = %refdst_drop.exit.i, %entry.skb_dst_drop.exit_crit_edge
  %destructor = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %5 = ptrtoint ptr %destructor to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %destructor, align 4
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %skb_dst_drop.exit.if.end23_crit_edge, label %if.then

skb_dst_drop.exit.if.end23_crit_edge:             ; preds = %skb_dst_drop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end23

if.then:                                          ; preds = %skb_dst_drop.exit
  %7 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %10, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.then.if.end_crit_edge, label %do.end, !prof !374

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 728, i32 noundef 9, ptr noundef null) #20
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then.if.end_crit_edge
  %11 = ptrtoint ptr %destructor to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %destructor, align 4
  tail call void %12(ptr noundef %skb) #20
  br label %if.end23

if.end23:                                         ; preds = %if.end, %skb_dst_drop.exit.if.end23_crit_edge
  %_nfct.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 5
  %13 = ptrtoint ptr %_nfct.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %_nfct.i, align 8
  %and.i = and i32 %14, -8
  %15 = inttoptr i32 %and.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i32 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i32, label %if.end23.nf_conntrack_put.exit_crit_edge, label %land.lhs.true.i

if.end23.nf_conntrack_put.exit_crit_edge:         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %nf_conntrack_put.exit

land.lhs.true.i:                                  ; preds = %if.end23
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %15, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr nonnull %15, i32 1, i32 3, i32 1) #20
  %16 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %15, ptr nonnull %15, i32 1, ptr nonnull elementtype(i32) %15) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %16, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i33, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.nf_conntrack_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !374

if.end5.i.i.i.i.nf_conntrack_put.exit_crit_edge:  ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %nf_conntrack_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef nonnull %15, i32 noundef 3) #20
  br label %nf_conntrack_put.exit

if.then.i33:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  tail call void @nf_conntrack_destroy(ptr noundef nonnull %15) #20
  br label %nf_conntrack_put.exit

nf_conntrack_put.exit:                            ; preds = %if.then.i33, %if.then10.i.i.i.i, %if.end5.i.i.i.i.nf_conntrack_put.exit_crit_edge, %if.end23.nf_conntrack_put.exit_crit_edge
  %active_extensions.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 13
  %17 = ptrtoint ptr %active_extensions.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %active_extensions.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i34 = icmp eq i8 %18, 0
  br i1 %tobool.not.i34, label %nf_conntrack_put.exit.skb_ext_put.exit_crit_edge, label %if.then.i35

nf_conntrack_put.exit.skb_ext_put.exit_crit_edge: ; preds = %nf_conntrack_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_ext_put.exit

if.then.i35:                                      ; preds = %nf_conntrack_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  %extensions.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %19 = ptrtoint ptr %extensions.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %extensions.i, align 8
  tail call void @__skb_ext_put(ptr noundef %20) #20
  br label %skb_ext_put.exit

skb_ext_put.exit:                                 ; preds = %if.then.i35, %nf_conntrack_put.exit.skb_ext_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__kfree_skb(ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @skb_release_head_state(ptr noundef %skb) #20
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %0 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.skb_release_all.exit_crit_edge, label %if.then.i, !prof !373

entry.skb_release_all.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_release_all.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef %skb) #20
  br label %skb_release_all.exit

skb_release_all.exit:                             ; preds = %if.then.i, %entry.skb_release_all.exit_crit_edge
  tail call fastcc void @kfree_skbmem(ptr noundef %skb)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @kfree_skbmem(ptr noundef %skb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %fclone = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %0 = ptrtoint ptr %fclone to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %fclone, align 2
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 3
  %conv = zext i8 %bf.clear to i32
  %1 = zext i32 %conv to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.45)
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %2 = load ptr, ptr @skbuff_head_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %2, ptr noundef %skb) #20
  br label %cleanup

sw.bb1:                                           ; preds = %entry
  %fclone_ref = getelementptr inbounds %struct.sk_buff_fclones, ptr %skb, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %fclone_ref, i32 noundef 4) #20
  %3 = ptrtoint ptr %fclone_ref to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %fclone_ref, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp = icmp eq i32 %4, 1
  br i1 %cmp, label %sw.bb1.fastpath_crit_edge, label %sw.bb1.sw.epilog_crit_edge

sw.bb1.sw.epilog_crit_edge:                       ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

sw.bb1.fastpath_crit_edge:                        ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #22
  br label %fastpath

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr5 = getelementptr i8, ptr %skb, i32 -200
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb1.sw.epilog_crit_edge
  %fclones.0 = phi ptr [ %add.ptr5, %sw.default ], [ %skb, %sw.bb1.sw.epilog_crit_edge ]
  %fclone_ref6 = getelementptr inbounds %struct.sk_buff_fclones, ptr %fclones.0, i32 0, i32 2
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %fclone_ref6, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %fclone_ref6, i32 1, i32 3, i32 1) #20
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %fclone_ref6, ptr %fclone_ref6, i32 1, ptr elementtype(i32) %fclone_ref6) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %refcount_dec_and_test.exit, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i, !prof !374

if.end5.i.i.i.cleanup_crit_edge:                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %fclone_ref6, i32 noundef 3) #20
  br label %cleanup

refcount_dec_and_test.exit:                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  br label %fastpath

fastpath:                                         ; preds = %refcount_dec_and_test.exit, %sw.bb1.fastpath_crit_edge
  %fclones.1 = phi ptr [ %fclones.0, %refcount_dec_and_test.exit ], [ %skb, %sw.bb1.fastpath_crit_edge ]
  %6 = load ptr, ptr @skbuff_fclone_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %6, ptr noundef %fclones.1) #20
  br label %cleanup

cleanup:                                          ; preds = %fastpath, %if.then10.i.i.i, %if.end5.i.i.i.cleanup_crit_edge, %sw.bb
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kfree_skb_reason(ptr noundef %skb, i32 noundef %reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %if.end.i, !prof !373

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end.i:                                         ; preds = %entry
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %0 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp eq i32 %1, 1
  br i1 %cmp.i, label %do.end.i, label %if.else.i, !prof !374

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !382
  br label %if.end

if.else.i:                                        ; preds = %if.end.i
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %users.i, i32 1, i32 3, i32 1) #20
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i, ptr %users.i, i32 1, ptr elementtype(i32) %users.i) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %refcount_dec_and_test.exit, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.return_crit_edge, label %if.then10.i.i.i, !prof !374

if.end5.i.i.i.return_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %users.i, i32 noundef 3) #20
  br label %return

refcount_dec_and_test.exit:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  br label %if.end

if.end:                                           ; preds = %refcount_dec_and_test.exit, %do.end.i
  %3 = tail call ptr @llvm.returnaddress(i32 0)
  tail call fastcc void @trace_kfree_skb(ptr noundef nonnull %skb, ptr noundef %3, i32 noundef %reason)
  tail call void @skb_release_head_state(ptr noundef nonnull %skb) #20
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %4 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %if.end.__kfree_skb.exit_crit_edge, label %if.then.i.i, !prof !373

if.end.__kfree_skb.exit_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %__kfree_skb.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef nonnull %skb) #20
  br label %__kfree_skb.exit

__kfree_skb.exit:                                 ; preds = %if.then.i.i, %if.end.__kfree_skb.exit_crit_edge
  tail call fastcc void @kfree_skbmem(ptr noundef nonnull %skb) #20
  br label %return

return:                                           ; preds = %__kfree_skb.exit, %if.then10.i.i.i, %if.end5.i.i.i.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_kfree_skb(ptr noundef %skb, ptr noundef %location, i32 noundef %reason) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_kfree_skb, i32 0, i32 1), ptr blockaddress(@trace_kfree_skb, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !376

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !374

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !383
  %call42 = tail call i32 @__traceiter_kfree_skb(ptr noundef null, ptr noundef %skb, ptr noundef %location, i32 noundef %reason) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !384
  %13 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !374

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !385
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_kfree_skb, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_kfree_skb, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_kfree_skb.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_kfree_skb.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.27, i32 noundef 62, ptr noundef nonnull @.str.28) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !386
  %31 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kfree_skb_list(ptr noundef %segs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not4 = icmp eq ptr %segs, null
  br i1 %tobool.not4, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  %segs.addr.05 = phi ptr [ %1, %while.body.while.body_crit_edge ], [ %segs, %entry.while.body_crit_edge ]
  %0 = ptrtoint ptr %segs.addr.05 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %segs.addr.05, align 8
  tail call fastcc void @kfree_skb(ptr noundef nonnull %segs.addr.05)
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @kfree_skb(ptr noundef %skb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %tobool.not.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i, label %entry.kfree_skb_reason.exit_crit_edge, label %if.end.i1, !prof !373

entry.kfree_skb_reason.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %kfree_skb_reason.exit

if.end.i1:                                        ; preds = %entry
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %0 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp eq i32 %1, 1
  br i1 %cmp.i, label %do.end.i, label %if.else.i, !prof !374

do.end.i:                                         ; preds = %if.end.i1
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !382
  br label %if.end.i

if.else.i:                                        ; preds = %if.end.i1
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %users.i, i32 1, i32 3, i32 1) #20
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i, ptr %users.i, i32 1, ptr elementtype(i32) %users.i) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %refcount_dec_and_test.exit, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.kfree_skb_reason.exit_crit_edge, label %if.then10.i.i.i, !prof !374

if.end5.i.i.i.kfree_skb_reason.exit_crit_edge:    ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %kfree_skb_reason.exit

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %users.i, i32 noundef 3) #20
  br label %kfree_skb_reason.exit

refcount_dec_and_test.exit:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  br label %if.end.i

if.end.i:                                         ; preds = %refcount_dec_and_test.exit, %do.end.i
  %3 = tail call ptr @llvm.returnaddress(i32 0) #20
  tail call fastcc void @trace_kfree_skb(ptr noundef nonnull %skb, ptr noundef %3, i32 noundef 0) #20
  tail call void @skb_release_head_state(ptr noundef nonnull %skb) #20
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %4 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %if.end.i.__kfree_skb.exit_crit_edge, label %if.then.i.i, !prof !373

if.end.i.__kfree_skb.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__kfree_skb.exit

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef nonnull %skb) #20
  br label %__kfree_skb.exit

__kfree_skb.exit:                                 ; preds = %if.then.i.i, %if.end.i.__kfree_skb.exit_crit_edge
  tail call fastcc void @kfree_skbmem(ptr noundef nonnull %skb) #20
  br label %kfree_skb_reason.exit

kfree_skb_reason.exit:                            ; preds = %__kfree_skb.exit, %if.then10.i.i.i, %if.end5.i.i.i.kfree_skb_reason.exit_crit_edge, %entry.kfree_skb_reason.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_dump(ptr noundef %level, ptr noundef readonly %skb, i1 noundef zeroext %full_pkt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %2 = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 2
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %8 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len1, align 4
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 304)
  %len.0 = select i1 %full_pkt, i32 %9, i32 %10
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %11 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %13 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %12 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %14 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %15 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not.i = icmp eq i32 %16, 0
  br i1 %tobool.i.not.i, label %cond.false.i, label %entry.skb_tailroom.exit_crit_edge

entry.skb_tailroom.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_tailroom.exit

cond.false.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %17 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tail.i, align 8
  %sub.ptr.lhs.cast.i296 = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i297 = ptrtoint ptr %18 to i32
  %sub.ptr.sub.i298 = sub i32 %sub.ptr.lhs.cast.i296, %sub.ptr.rhs.cast.i297
  br label %skb_tailroom.exit

skb_tailroom.exit:                                ; preds = %cond.false.i, %entry.skb_tailroom.exit_crit_edge
  %cond.i = phi i32 [ %sub.ptr.sub.i298, %cond.false.i ], [ 0, %entry.skb_tailroom.exit_crit_edge ]
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %19 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %mac_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %20)
  %cmp.i.not = icmp eq i16 %20, -1
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %21 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %transport_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %22)
  %cmp.i299.not = icmp eq i16 %22, -1
  %len11 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %23 = ptrtoint ptr %len11 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %len11, align 4
  %sub.i = sub i32 %24, %16
  br i1 %cmp.i.not, label %skb_tailroom.exit.cond.end23_crit_edge, label %cond.true20

skb_tailroom.exit.cond.end23_crit_edge:           ; preds = %skb_tailroom.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.end23

cond.true20:                                      ; preds = %skb_tailroom.exit
  call void @__sanitizer_cov_trace_pc() #22
  %conv = zext i16 %20 to i32
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %25 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %network_header.i, align 4
  %conv.i = zext i16 %26 to i32
  %sub.i302 = sub nsw i32 %conv.i, %conv
  br label %cond.end23

cond.end23:                                       ; preds = %cond.true20, %skb_tailroom.exit.cond.end23_crit_edge
  %cond17321 = phi i32 [ %conv, %cond.true20 ], [ -1, %skb_tailroom.exit.cond.end23_crit_edge ]
  %cond24 = phi i32 [ %sub.i302, %cond.true20 ], [ -1, %skb_tailroom.exit.cond.end23_crit_edge ]
  %network_header = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %27 = ptrtoint ptr %network_header to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %network_header, align 4
  %conv25 = zext i16 %28 to i32
  %conv.i304 = zext i16 %22 to i32
  %sub.i307 = sub nsw i32 %conv.i304, %conv25
  %cond32323 = select i1 %cmp.i299.not, i32 -1, i32 %sub.i307
  %cond39 = select i1 %cmp.i299.not, i32 -1, i32 %conv.i304
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 3
  %29 = ptrtoint ptr %tx_flags to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %tx_flags, align 1
  %conv40 = zext i8 %30 to i32
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 2
  %31 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %nr_frags, align 2
  %conv41 = zext i8 %32 to i32
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 4
  %33 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %gso_size, align 4
  %conv42 = zext i16 %34 to i32
  %gso_type = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 8
  %35 = ptrtoint ptr %gso_type to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %gso_type, align 8
  %gso_segs = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 5
  %37 = ptrtoint ptr %gso_segs to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %gso_segs, align 2
  %conv43 = zext i16 %38 to i32
  %39 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 8
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %42 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %42)
  %bf.load = load i16, ptr %ip_summed, align 8
  %bf.lshr = lshr i16 %bf.load, 9
  %43 = and i16 %bf.lshr, 3
  %bf.cast = zext i16 %43 to i32
  %csum_complete_sw = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %44 = ptrtoint ptr %csum_complete_sw to i32
  call void @__asan_loadN_noabort(i32 %44, i32 4)
  %bf.load45 = load i32, ptr %csum_complete_sw, align 2
  %bf.lshr46 = lshr i32 %bf.load45, 30
  %bf.cast48 = and i32 %bf.lshr46, 1
  %45 = and i16 %bf.load, 1
  %bf.cast52 = zext i16 %45 to i32
  %bf.lshr55 = lshr i32 %bf.load45, 28
  %bf.cast57 = and i32 %bf.lshr55, 3
  %hash = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %46 = ptrtoint ptr %hash to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %hash, align 4
  %48 = lshr i16 %bf.load, 6
  %49 = and i16 %48, 1
  %bf.cast62 = zext i16 %49 to i32
  %50 = lshr i16 %bf.load, 7
  %51 = and i16 %50, 1
  %conv68 = zext i16 %51 to i32
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %52 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %protocol, align 8
  %conv69 = zext i16 %53 to i32
  %bf.lshr71 = lshr i16 %bf.load, 13
  %bf.cast72 = zext i16 %bf.lshr71 to i32
  %skb_iif = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 7
  %54 = ptrtoint ptr %skb_iif to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %skb_iif, align 8
  %call74 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1, ptr noundef %level, i32 noundef %24, i32 noundef %sub.ptr.sub.i, i32 noundef %sub.i, i32 noundef %cond.i, i32 noundef %cond17321, i32 noundef %cond24, i32 noundef %conv25, i32 noundef %cond32323, i32 noundef %cond39, i32 noundef %conv40, i32 noundef %conv41, i32 noundef %conv42, i32 noundef %36, i32 noundef %conv43, i32 noundef %41, i32 noundef %bf.cast, i32 noundef %bf.cast48, i32 noundef %bf.cast52, i32 noundef %bf.cast57, i32 noundef %47, i32 noundef %bf.cast62, i32 noundef %conv68, i32 noundef %conv69, i32 noundef %bf.cast72, i32 noundef %55) #23
  %tobool75.not = icmp eq ptr %4, null
  br i1 %tobool75.not, label %cond.end23.if.end82_crit_edge, label %do.end79

cond.end23.if.end82_crit_edge:                    ; preds = %cond.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end82

do.end79:                                         ; preds = %cond.end23
  call void @__sanitizer_cov_trace_pc() #22
  %features = getelementptr inbounds %struct.net_device, ptr %4, i32 0, i32 23
  %call81 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.4, ptr noundef %level, ptr noundef nonnull %4, ptr noundef %features) #23
  br label %if.end82

if.end82:                                         ; preds = %do.end79, %cond.end23.if.end82_crit_edge
  %tobool83.not = icmp eq ptr %7, null
  br i1 %tobool83.not, label %if.end82.if.end93_crit_edge, label %do.end87

if.end82.if.end93_crit_edge:                      ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end93

do.end87:                                         ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #22
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 3
  %56 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %skc_family, align 8
  %conv89 = zext i16 %57 to i32
  %sk_type = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 45
  %58 = ptrtoint ptr %sk_type to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %sk_type, align 2
  %conv90 = zext i16 %59 to i32
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 46
  %60 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %sk_protocol, align 4
  %conv91 = zext i16 %61 to i32
  %call92 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7, ptr noundef %level, i32 noundef %conv89, i32 noundef %conv90, i32 noundef %conv91) #23
  br label %if.end93

if.end93:                                         ; preds = %do.end87, %if.end82.if.end93_crit_edge
  %full_pkt.not = xor i1 %full_pkt, true
  %tobool96.not = icmp eq ptr %12, %14
  %or.cond = select i1 %full_pkt.not, i1 true, i1 %tobool96.not
  br i1 %or.cond, label %if.end93.if.end98_crit_edge, label %if.then97

if.end93.if.end98_crit_edge:                      ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end98

if.then97:                                        ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #22
  %62 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %head.i, align 8
  tail call void @print_hex_dump(ptr noundef %level, ptr noundef nonnull @.str.9, i32 noundef 2, i32 noundef 16, i32 noundef 1, ptr noundef %63, i32 noundef %sub.ptr.sub.i, i1 noundef zeroext false) #20
  br label %if.end98

if.end98:                                         ; preds = %if.then97, %if.end93.if.end98_crit_edge
  %64 = ptrtoint ptr %len11 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %len11, align 4
  %66 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %data_len.i.i, align 8
  %sub.i310 = sub i32 %65, %67
  %68 = tail call i32 @llvm.smin.i32(i32 %sub.i310, i32 %len.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool107.not = icmp eq i32 %68, 0
  br i1 %tobool107.not, label %if.end98.if.end109_crit_edge, label %if.then108

if.end98.if.end109_crit_edge:                     ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end109

if.then108:                                       ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #22
  %69 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %data.i, align 4
  tail call void @print_hex_dump(ptr noundef %level, ptr noundef nonnull @.str.10, i32 noundef 2, i32 noundef 16, i32 noundef 1, ptr noundef %70, i32 noundef %68, i1 noundef zeroext false) #20
  br label %if.end109

if.end109:                                        ; preds = %if.then108, %if.end98.if.end109_crit_edge
  %sub = sub i32 %len.0, %68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i)
  %tobool113.not = icmp eq i32 %cond.i, 0
  %or.cond294 = select i1 %full_pkt.not, i1 true, i1 %tobool113.not
  br i1 %or.cond294, label %if.end109.if.end116_crit_edge, label %if.then114

if.end109.if.end116_crit_edge:                    ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end116

if.then114:                                       ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #22
  %tail.i311 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %71 = ptrtoint ptr %tail.i311 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %tail.i311, align 8
  tail call void @print_hex_dump(ptr noundef %level, ptr noundef nonnull @.str.11, i32 noundef 2, i32 noundef 16, i32 noundef 1, ptr noundef %72, i32 noundef %cond.i, i1 noundef zeroext false) #20
  br label %if.end116

if.end116:                                        ; preds = %if.then114, %if.end109.if.end116_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %tobool117.not333 = icmp eq i32 %sub, 0
  br i1 %tobool117.not333, label %if.end116.for.end177_crit_edge, label %land.rhs.preheader

if.end116.for.end177_crit_edge:                   ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end177

land.rhs.preheader:                               ; preds = %if.end116
  %73 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %end.i, align 4
  %nr_frags119348 = getelementptr inbounds %struct.skb_shared_info, ptr %74, i32 0, i32 2
  %75 = ptrtoint ptr %nr_frags119348 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %nr_frags119348, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %cmp121350.not = icmp eq i8 %76, 0
  br i1 %cmp121350.not, label %land.rhs.preheader.for.end177_crit_edge, label %land.rhs.preheader.for.body_crit_edge

land.rhs.preheader.for.body_crit_edge:            ; preds = %land.rhs.preheader
  br label %for.body

land.rhs.preheader.for.end177_crit_edge:          ; preds = %land.rhs.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end177

for.body:                                         ; preds = %for.end.for.body_crit_edge, %land.rhs.preheader.for.body_crit_edge
  %77 = phi ptr [ %119, %for.end.for.body_crit_edge ], [ %74, %land.rhs.preheader.for.body_crit_edge ]
  %len.1334352 = phi i32 [ %len.3, %for.end.for.body_crit_edge ], [ %sub, %land.rhs.preheader.for.body_crit_edge ]
  %i.0335351 = phi i32 [ %inc, %for.end.for.body_crit_edge ], [ 0, %land.rhs.preheader.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %77, i32 0, i32 12, i32 %i.0335351
  %78 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %arrayidx, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %77, i32 0, i32 12, i32 %i.0335351, i32 2
  %80 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %bv_offset.i, align 4
  %shr = lshr i32 %81, 12
  %add.ptr = getelementptr %struct.page, ptr %79, i32 %shr
  %and = and i32 %81, 4095
  %82 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %add.ptr, align 4
  %shr.i.i = lshr i32 %83, 30
  %84 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %84, ptr @__sancov_gen_cov_switch_values.46)
  switch i32 %shr.i.i, label %for.body.cond.false139_crit_edge [
    i32 2, label %for.body.cond.true129_crit_edge
    i32 3, label %skb_frag_must_loop.exit
  ]

for.body.cond.true129_crit_edge:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.true129

for.body.cond.false139_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.false139

skb_frag_must_loop.exit:                          ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %85 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %85)
  %cmp2.i.i = icmp eq i32 %85, 2
  br i1 %cmp2.i.i, label %skb_frag_must_loop.exit.cond.true129_crit_edge, label %skb_frag_must_loop.exit.cond.false139_crit_edge

skb_frag_must_loop.exit.cond.false139_crit_edge:  ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.false139

skb_frag_must_loop.exit.cond.true129_crit_edge:   ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.true129

cond.true129:                                     ; preds = %skb_frag_must_loop.exit.cond.true129_crit_edge, %for.body.cond.true129_crit_edge
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %77, i32 0, i32 12, i32 %i.0335351, i32 1
  %86 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %bv_len.i, align 4
  %sub131 = sub nuw nsw i32 4096, %and
  %88 = tail call i32 @llvm.umin.i32(i32 %87, i32 %sub131)
  br label %cond.end141

cond.false139:                                    ; preds = %skb_frag_must_loop.exit.cond.false139_crit_edge, %for.body.cond.false139_crit_edge
  %bv_len.i315 = getelementptr %struct.skb_shared_info, ptr %77, i32 0, i32 12, i32 %i.0335351, i32 1
  %89 = ptrtoint ptr %bv_len.i315 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %bv_len.i315, align 4
  br label %cond.end141

cond.end141:                                      ; preds = %cond.false139, %cond.true129
  %cond142 = phi i32 [ %88, %cond.true129 ], [ %90, %cond.false139 ]
  %bv_len.i316 = getelementptr %struct.skb_shared_info, ptr %77, i32 0, i32 12, i32 %i.0335351, i32 1
  %91 = ptrtoint ptr %bv_len.i316 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %bv_len.i316, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %cmp145326.not = icmp eq i32 %92, 0
  br i1 %cmp145326.not, label %cond.end141.for.end_crit_edge, label %cond.end141.for.body147_crit_edge

cond.end141.for.body147_crit_edge:                ; preds = %cond.end141
  br label %for.body147

cond.end141.for.end_crit_edge:                    ; preds = %cond.end141
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body147:                                      ; preds = %for.inc.for.body147_crit_edge, %cond.end141.for.body147_crit_edge
  %p.0331 = phi ptr [ %incdec.ptr, %for.inc.for.body147_crit_edge ], [ %add.ptr, %cond.end141.for.body147_crit_edge ]
  %copied.0330 = phi i32 [ %add, %for.inc.for.body147_crit_edge ], [ 0, %cond.end141.for.body147_crit_edge ]
  %p_len.0329 = phi i32 [ %117, %for.inc.for.body147_crit_edge ], [ %cond142, %cond.end141.for.body147_crit_edge ]
  %p_off.0328 = phi i32 [ 0, %for.inc.for.body147_crit_edge ], [ %and, %cond.end141.for.body147_crit_edge ]
  %len.2327 = phi i32 [ %sub163, %for.inc.for.body147_crit_edge ], [ %len.1334352, %cond.end141.for.body147_crit_edge ]
  %93 = tail call i32 @llvm.smin.i32(i32 %p_len.0329, i32 %len.2327)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %94 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %94, 512
  %95 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i = and i32 %95, -16384
  %96 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %98, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %99 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i = and i32 %99, -16384
  %100 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %100, i32 0, i32 2
  %101 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %102, i32 0, i32 213
  %103 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %104, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %p.0331, i32 noundef %or.i) #20
  %add.ptr156 = getelementptr i8, ptr %call.i.i, i32 %p_off.0328
  tail call void @print_hex_dump(ptr noundef %level, ptr noundef nonnull @.str.12, i32 noundef 2, i32 noundef 16, i32 noundef 1, ptr noundef %add.ptr156, i32 noundef %93, i1 noundef zeroext false) #20
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %105 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i = and i32 %105, -16384
  %106 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %106, i32 0, i32 2
  %107 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %108, i32 0, i32 213
  %109 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %110, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %111 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %111, -16384
  %112 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %114, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %sub163 = sub i32 %len.2327, %93
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub163)
  %tobool164.not = icmp eq i32 %sub163, 0
  br i1 %tobool164.not, label %for.body147.for.end177_crit_edge, label %for.inc

for.body147.for.end177_crit_edge:                 ; preds = %for.body147
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end177

for.inc:                                          ; preds = %for.body147
  %add = add i32 %copied.0330, %p_len.0329
  %incdec.ptr = getelementptr %struct.page, ptr %p.0331, i32 1
  %115 = ptrtoint ptr %bv_len.i316 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %bv_len.i316, align 4
  %sub168 = sub i32 %116, %add
  %117 = tail call i32 @llvm.umin.i32(i32 %sub168, i32 4096)
  %cmp145 = icmp ugt i32 %116, %add
  br i1 %cmp145, label %for.inc.for.body147_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.inc.for.body147_crit_edge:                    ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body147

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %cond.end141.for.end_crit_edge
  %len.3 = phi i32 [ %len.1334352, %cond.end141.for.end_crit_edge ], [ %sub163, %for.inc.for.end_crit_edge ]
  %inc = add nuw nsw i32 %i.0335351, 1
  %118 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %end.i, align 4
  %nr_frags119 = getelementptr inbounds %struct.skb_shared_info, ptr %119, i32 0, i32 2
  %120 = ptrtoint ptr %nr_frags119 to i32
  call void @__asan_load1_noabort(i32 %120)
  %121 = load i8, ptr %nr_frags119, align 2
  %conv120 = zext i8 %121 to i32
  %cmp121 = icmp ult i32 %inc, %conv120
  br i1 %cmp121, label %for.end.for.body_crit_edge, label %for.end.for.end177_crit_edge

for.end.for.end177_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end177

for.end.for.body_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end177:                                       ; preds = %for.end.for.end177_crit_edge, %for.body147.for.end177_crit_edge, %land.rhs.preheader.for.end177_crit_edge, %if.end116.for.end177_crit_edge
  br i1 %full_pkt, label %land.lhs.true180, label %for.end177.if.end195_crit_edge

for.end177.if.end195_crit_edge:                   ; preds = %for.end177
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end195

land.lhs.true180:                                 ; preds = %for.end177
  %122 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %end.i, align 4
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %123, i32 0, i32 6
  %124 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %frag_list.i, align 8
  %cmp.i318.not = icmp eq ptr %125, null
  br i1 %cmp.i318.not, label %land.lhs.true180.if.end195_crit_edge, label %do.end186

land.lhs.true180.if.end195_crit_edge:             ; preds = %land.lhs.true180
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end195

do.end186:                                        ; preds = %land.lhs.true180
  %call188 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.14) #23
  %126 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %end.i, align 4
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %127, i32 0, i32 6
  %128 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %128)
  %list_skb.0338 = load ptr, ptr %frag_list, align 8
  %tobool191.not339 = icmp eq ptr %list_skb.0338, null
  br i1 %tobool191.not339, label %do.end186.if.end195_crit_edge, label %do.end186.for.body192_crit_edge

do.end186.for.body192_crit_edge:                  ; preds = %do.end186
  br label %for.body192

do.end186.if.end195_crit_edge:                    ; preds = %do.end186
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end195

for.body192:                                      ; preds = %for.body192.for.body192_crit_edge, %do.end186.for.body192_crit_edge
  %list_skb.0340 = phi ptr [ %list_skb.0, %for.body192.for.body192_crit_edge ], [ %list_skb.0338, %do.end186.for.body192_crit_edge ]
  tail call void @skb_dump(ptr noundef %level, ptr noundef nonnull %list_skb.0340, i1 noundef zeroext true)
  %129 = ptrtoint ptr %list_skb.0340 to i32
  call void @__asan_load4_noabort(i32 %129)
  %list_skb.0 = load ptr, ptr %list_skb.0340, align 8
  %tobool191.not = icmp eq ptr %list_skb.0, null
  br i1 %tobool191.not, label %for.body192.if.end195_crit_edge, label %for.body192.for.body192_crit_edge

for.body192.for.body192_crit_edge:                ; preds = %for.body192
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body192

for.body192.if.end195_crit_edge:                  ; preds = %for.body192
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end195

if.end195:                                        ; preds = %for.body192.if.end195_crit_edge, %do.end186.if.end195_crit_edge, %land.lhs.true180.if.end195_crit_edge, %for.end177.if.end195_crit_edge
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @print_hex_dump(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__kunmap_atomic(ptr noundef %addr) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kunmap_local_indexed(ptr noundef %addr) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %0 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1 = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i1 to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i.i, align 8
  %pagefault_disabled.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 213
  %4 = ptrtoint ptr %pagefault_disabled.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pagefault_disabled.i.i, align 8
  %dec.i.i = add i32 %5, -1
  store i32 %dec.i.i, ptr %pagefault_disabled.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %6 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i, align 4
  %sub.i = add i32 %9, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_tx_error(ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i, label %entry.skb_zcopy_clear.exit_crit_edge, label %land.rhs.i.i

entry.skb_zcopy_clear.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy_clear.exit

land.rhs.i.i:                                     ; preds = %entry
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i.i.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %1, align 8
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool1.not.i.i = icmp eq i8 %4, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.skb_zcopy_clear.exit_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.skb_zcopy_clear.exit_crit_edge:      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy_clear.exit

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 11
  %5 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %skb_zcopy.exit.i.skb_zcopy_clear.exit_crit_edge, label %if.then.i

skb_zcopy.exit.i.skb_zcopy_clear.exit_crit_edge:  ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy_clear.exit

if.then.i:                                        ; preds = %skb_zcopy.exit.i
  %7 = ptrtoint ptr %6 to i32
  %and.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then2.i, label %if.then.i.if.end.i_crit_edge

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %8 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %6, align 4
  tail call void %9(ptr noundef nonnull %skb, ptr noundef nonnull %6, i1 noundef zeroext true) #20
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i.if.end.i_crit_edge
  %10 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %end.i.i.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %11, align 8
  %14 = and i8 %13, -8
  store i8 %14, ptr %11, align 8
  br label %skb_zcopy_clear.exit

skb_zcopy_clear.exit:                             ; preds = %if.end.i, %skb_zcopy.exit.i.skb_zcopy_clear.exit_crit_edge, %land.rhs.i.i.skb_zcopy_clear.exit_crit_edge, %entry.skb_zcopy_clear.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @consume_skb(ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %if.end.i, !prof !373

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end.i:                                         ; preds = %entry
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %0 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp.i = icmp eq i32 %1, 1
  br i1 %cmp.i, label %do.end.i, label %if.else.i, !prof !374

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !382
  br label %if.end

if.else.i:                                        ; preds = %if.end.i
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %users.i, i32 1, i32 3, i32 1) #20
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i, ptr %users.i, i32 1, ptr elementtype(i32) %users.i) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %refcount_dec_and_test.exit, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.return_crit_edge, label %if.then10.i.i.i, !prof !374

if.end5.i.i.i.return_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %users.i, i32 noundef 3) #20
  br label %return

refcount_dec_and_test.exit:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  br label %if.end

if.end:                                           ; preds = %refcount_dec_and_test.exit, %do.end.i
  tail call fastcc void @trace_consume_skb(ptr noundef nonnull %skb)
  tail call void @skb_release_head_state(ptr noundef nonnull %skb) #20
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %3 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %head.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i, label %if.end.__kfree_skb.exit_crit_edge, label %if.then.i.i, !prof !373

if.end.__kfree_skb.exit_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %__kfree_skb.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef nonnull %skb) #20
  br label %__kfree_skb.exit

__kfree_skb.exit:                                 ; preds = %if.then.i.i, %if.end.__kfree_skb.exit_crit_edge
  tail call fastcc void @kfree_skbmem(ptr noundef nonnull %skb) #20
  br label %return

return:                                           ; preds = %__kfree_skb.exit, %if.then10.i.i.i, %if.end5.i.i.i.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_consume_skb(ptr noundef %skb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_consume_skb, i32 0, i32 1), ptr blockaddress(@trace_consume_skb, %do.body)) #20
          to label %if.end48 [label %do.body], !srcloc !376

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !374

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !391
  %call42 = tail call i32 @__traceiter_consume_skb(ptr noundef null, ptr noundef %skb) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !392
  %13 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !374

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 108, i32 noundef 9, ptr noundef null) #20
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !385
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_consume_skb, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_consume_skb, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_consume_skb.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @trace_consume_skb.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.27, i32 noundef 79, ptr noundef nonnull @.str.28) #20
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !386
  %31 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__consume_stateless_skb(ptr noundef %skb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_consume_skb(ptr noundef %skb)
  tail call fastcc void @skb_release_data(ptr noundef %skb)
  tail call fastcc void @kfree_skbmem(ptr noundef %skb)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @skb_release_data(ptr noundef %skb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %cloned = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %2 = ptrtoint ptr %cloned to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %cloned, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  %cond = select i1 %tobool4.not, i32 1, i32 65537
  %dataref = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !393
  tail call void @llvm.prefetch.p0(ptr %dataref, i32 1, i32 3, i32 1) #20
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dataref, ptr %dataref, i32 %cond, ptr elementtype(i32) %dataref) #20, !srcloc !394
  %asmresult.i.i.i = extractvalue { i32, i32 } %4, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !395
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %tobool6.not = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool6.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.exit_crit_edge

land.lhs.true.exit_crit_edge:                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %exit

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i, label %if.end.skb_zcopy_clear.exit_crit_edge, label %land.rhs.i.i

if.end.skb_zcopy_clear.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy_clear.exit

land.rhs.i.i:                                     ; preds = %if.end
  %5 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %end.i, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %6, align 8
  %9 = and i8 %8, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool1.not.i.i = icmp eq i8 %9, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.skb_zcopy_clear.exit_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.skb_zcopy_clear.exit_crit_edge:      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy_clear.exit

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 11
  %10 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %skb_zcopy.exit.i.skb_zcopy_clear.exit_crit_edge, label %if.then.i

skb_zcopy.exit.i.skb_zcopy_clear.exit_crit_edge:  ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy_clear.exit

if.then.i:                                        ; preds = %skb_zcopy.exit.i
  %12 = ptrtoint ptr %11 to i32
  %and.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then2.i, label %if.then.i.if.end.i_crit_edge

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %13 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %11, align 4
  tail call void %14(ptr noundef nonnull %skb, ptr noundef nonnull %11, i1 noundef zeroext true) #20
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i.if.end.i_crit_edge
  %15 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %end.i, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %16, align 8
  %19 = and i8 %18, -8
  store i8 %19, ptr %16, align 8
  br label %skb_zcopy_clear.exit

skb_zcopy_clear.exit:                             ; preds = %if.end.i, %skb_zcopy.exit.i.skb_zcopy_clear.exit_crit_edge, %land.rhs.i.i.skb_zcopy_clear.exit_crit_edge, %if.end.skb_zcopy_clear.exit_crit_edge
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 2
  %20 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %nr_frags, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %cmp44.not = icmp eq i8 %21, 0
  br i1 %cmp44.not, label %skb_zcopy_clear.exit.for.end_crit_edge, label %skb_zcopy_clear.exit.for.body_crit_edge

skb_zcopy_clear.exit.for.body_crit_edge:          ; preds = %skb_zcopy_clear.exit
  br label %for.body

skb_zcopy_clear.exit.for.end_crit_edge:           ; preds = %skb_zcopy_clear.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %skb_zcopy_clear.exit.for.body_crit_edge
  %i.045 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %skb_zcopy_clear.exit.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %i.045
  %22 = ptrtoint ptr %cloned to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load9 = load i8, ptr %cloned, align 2
  %bf.clear10 = and i8 %bf.load9, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear10)
  %tobool11 = icmp ne i8 %bf.clear10, 0
  tail call fastcc void @__skb_frag_unref(ptr noundef %arrayidx, i1 noundef zeroext %tobool11)
  %inc = add nuw nsw i32 %i.045, 1
  %23 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %nr_frags, align 2
  %conv7 = zext i8 %24 to i32
  %cmp = icmp ult i32 %inc, %conv7
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %skb_zcopy_clear.exit.for.end_crit_edge
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 6
  %25 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %frag_list, align 8
  %tobool12.not = icmp eq ptr %26, null
  br i1 %tobool12.not, label %for.end.if.end15_crit_edge, label %for.end.if.end.i40_crit_edge

for.end.if.end.i40_crit_edge:                     ; preds = %for.end
  br label %if.end.i40

for.end.if.end15_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.end.i40:                                       ; preds = %kfree_skb.exit.if.end.i40_crit_edge, %for.end.if.end.i40_crit_edge
  %segs.addr.0.i47 = phi ptr [ %28, %kfree_skb.exit.if.end.i40_crit_edge ], [ %26, %for.end.if.end.i40_crit_edge ]
  %27 = ptrtoint ptr %segs.addr.0.i47 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %segs.addr.0.i47, align 8
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %segs.addr.0.i47, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %29 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp.i = icmp eq i32 %30, 1
  br i1 %cmp.i, label %do.end.i, label %if.else.i41, !prof !374

do.end.i:                                         ; preds = %if.end.i40
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !382
  br label %if.end.i.i

if.else.i41:                                      ; preds = %if.end.i40
  %call14.i = tail call fastcc zeroext i1 @refcount_dec_and_test(ptr noundef %users.i) #20
  br i1 %call14.i, label %if.else.i41.if.end.i.i_crit_edge, label %if.else.i41.kfree_skb.exit_crit_edge, !prof !373

if.else.i41.kfree_skb.exit_crit_edge:             ; preds = %if.else.i41
  call void @__sanitizer_cov_trace_pc() #22
  br label %kfree_skb.exit

if.else.i41.if.end.i.i_crit_edge:                 ; preds = %if.else.i41
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i41.if.end.i.i_crit_edge, %do.end.i
  %31 = tail call ptr @llvm.returnaddress(i32 0) #20
  tail call fastcc void @trace_kfree_skb(ptr noundef nonnull %segs.addr.0.i47, ptr noundef %31, i32 noundef 0) #20
  tail call void @skb_release_head_state(ptr noundef nonnull %segs.addr.0.i47) #20
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %segs.addr.0.i47, i32 0, i32 18
  %32 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %head.i.i, align 8
  %tobool.not.i.i38 = icmp eq ptr %33, null
  br i1 %tobool.not.i.i38, label %if.end.i.i.__kfree_skb.exit_crit_edge, label %if.then.i.i, !prof !373

if.end.i.i.__kfree_skb.exit_crit_edge:            ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__kfree_skb.exit

if.then.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef nonnull %segs.addr.0.i47) #20
  br label %__kfree_skb.exit

__kfree_skb.exit:                                 ; preds = %if.then.i.i, %if.end.i.i.__kfree_skb.exit_crit_edge
  tail call fastcc void @kfree_skbmem(ptr noundef nonnull %segs.addr.0.i47) #20
  br label %kfree_skb.exit

kfree_skb.exit:                                   ; preds = %__kfree_skb.exit, %if.else.i41.kfree_skb.exit_crit_edge
  %tobool.not.i31 = icmp eq ptr %28, null
  br i1 %tobool.not.i31, label %kfree_skb.exit.if.end15_crit_edge, label %kfree_skb.exit.if.end.i40_crit_edge

kfree_skb.exit.if.end.i40_crit_edge:              ; preds = %kfree_skb.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i40

kfree_skb.exit.if.end15_crit_edge:                ; preds = %kfree_skb.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.end15:                                         ; preds = %kfree_skb.exit.if.end15_crit_edge, %for.end.if.end15_crit_edge
  %head1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %34 = ptrtoint ptr %head1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %head1.i, align 8
  %36 = ptrtoint ptr %cloned to i32
  call void @__asan_load1_noabort(i32 %36)
  %bf.load.i = load i8, ptr %cloned, align 2
  %37 = and i8 %bf.load.i, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool.not.i32 = icmp eq i8 %37, 0
  br i1 %tobool.not.i32, label %if.else.i, label %if.then.i34

if.then.i34:                                      ; preds = %if.end15
  %bf.clear.i.i = and i8 %bf.load.i, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear.i.i)
  %tobool.not.i.i33 = icmp eq i8 %bf.clear.i.i, 0
  br i1 %tobool.not.i.i33, label %if.then.i34.if.end.i36_crit_edge, label %skb_pp_recycle.exit.i

if.then.i34.if.end.i36_crit_edge:                 ; preds = %if.then.i34
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i36

skb_pp_recycle.exit.i:                            ; preds = %if.then.i34
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %38 = load ptr, ptr @mem_map, align 4
  %39 = ptrtoint ptr %35 to i32
  %sub.i.i = add i32 %39, 1073741824
  %shr.i.i = lshr i32 %sub.i.i, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %38, i32 %shr.i.i
  %call.i.i35 = tail call zeroext i1 @page_pool_return_skb_page(ptr noundef %add.ptr.i.i) #20
  br i1 %call.i.i35, label %skb_pp_recycle.exit.i.exit_crit_edge, label %skb_pp_recycle.exit.i.if.end.i36_crit_edge

skb_pp_recycle.exit.i.if.end.i36_crit_edge:       ; preds = %skb_pp_recycle.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i36

skb_pp_recycle.exit.i.exit_crit_edge:             ; preds = %skb_pp_recycle.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %exit

if.end.i36:                                       ; preds = %skb_pp_recycle.exit.i.if.end.i36_crit_edge, %if.then.i34.if.end.i36_crit_edge
  tail call void @page_frag_free(ptr noundef %35) #20
  br label %exit

if.else.i:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef %35) #20
  br label %exit

exit:                                             ; preds = %if.else.i, %if.end.i36, %skb_pp_recycle.exit.i.exit_crit_edge, %land.lhs.true.exit_crit_edge
  %40 = ptrtoint ptr %cloned to i32
  call void @__asan_load1_noabort(i32 %40)
  %bf.load17 = load i8, ptr %cloned, align 2
  %bf.clear18 = and i8 %bf.load17, -2
  store i8 %bf.clear18, ptr %cloned, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__kfree_skb_defer(ptr noundef %skb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @skb_release_head_state(ptr noundef %skb) #20
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %0 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.skb_release_all.exit_crit_edge, label %if.then.i, !prof !373

entry.skb_release_all.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_release_all.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef %skb) #20
  br label %skb_release_all.exit

skb_release_all.exit:                             ; preds = %if.then.i, %entry.skb_release_all.exit_crit_edge
  %2 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %5
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %7, ptrtoint (ptr @napi_alloc_cache to i32)
  %8 = inttoptr i32 %add.i to ptr
  %9 = load ptr, ptr @skbuff_head_cache, align 4
  tail call void @__kasan_poison_object_data(ptr noundef %9, ptr noundef %skb) #20
  %skb_count.i = getelementptr inbounds %struct.napi_alloc_cache, ptr %8, i32 0, i32 1
  %10 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %skb_count.i, align 4
  %inc.i = add i32 %11, 1
  store i32 %inc.i, ptr %skb_count.i, align 4
  %arrayidx2.i = getelementptr %struct.napi_alloc_cache, ptr %8, i32 0, i32 2, i32 %11
  %12 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %skb, ptr %arrayidx2.i, align 4
  %13 = load i32, ptr %skb_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %13)
  %cmp.i = icmp eq i32 %13, 64
  br i1 %cmp.i, label %skb_release_all.exit.for.body.i_crit_edge, label %skb_release_all.exit.napi_skb_cache_put.exit_crit_edge, !prof !373

skb_release_all.exit.napi_skb_cache_put.exit_crit_edge: ; preds = %skb_release_all.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_skb_cache_put.exit

skb_release_all.exit.for.body.i_crit_edge:        ; preds = %skb_release_all.exit
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %skb_release_all.exit.for.body.i_crit_edge
  %i.019.i = phi i32 [ %inc8.i, %for.body.i.for.body.i_crit_edge ], [ 32, %skb_release_all.exit.for.body.i_crit_edge ]
  %14 = load ptr, ptr @skbuff_head_cache, align 4
  %arrayidx7.i = getelementptr %struct.napi_alloc_cache, ptr %8, i32 0, i32 2, i32 %i.019.i
  %15 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx7.i, align 4
  tail call void @__kasan_unpoison_object_data(ptr noundef %14, ptr noundef %16) #20
  %inc8.i = add nuw nsw i32 %i.019.i, 1
  %exitcond.not.i = icmp eq i32 %inc8.i, 64
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %17 = load ptr, ptr @skbuff_head_cache, align 4
  %add.ptr.i = getelementptr %struct.napi_alloc_cache, ptr %8, i32 0, i32 2, i32 32
  tail call void @kmem_cache_free_bulk(ptr noundef %17, i32 noundef 32, ptr noundef %add.ptr.i) #20
  %18 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 32, ptr %skb_count.i, align 4
  br label %napi_skb_cache_put.exit

napi_skb_cache_put.exit:                          ; preds = %for.end.i, %skb_release_all.exit.napi_skb_cache_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @napi_skb_free_stolen_head(ptr noundef %skb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %slow_gro = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %0 = ptrtoint ptr %slow_gro to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %slow_gro, align 2
  %1 = and i32 %bf.load, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then, !prof !374

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  tail call fastcc void @nf_reset_ct(ptr noundef %skb)
  %2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %2, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.then.skb_dst_drop.exit_crit_edge, label %if.then.i

if.then.skb_dst_drop.exit_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_drop.exit

if.then.i:                                        ; preds = %if.then
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.i.refdst_drop.exit.i_crit_edge

if.then.i.refdst_drop.exit.i_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refdst_drop.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %and1.i.i = and i32 %4, -2
  %5 = inttoptr i32 %and1.i.i to ptr
  tail call void @dst_release(ptr noundef %5) #20
  br label %refdst_drop.exit.i

refdst_drop.exit.i:                               ; preds = %if.then.i.i, %if.then.i.refdst_drop.exit.i_crit_edge
  %6 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %2, align 8
  br label %skb_dst_drop.exit

skb_dst_drop.exit:                                ; preds = %refdst_drop.exit.i, %if.then.skb_dst_drop.exit_crit_edge
  %active_extensions.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 13
  %7 = ptrtoint ptr %active_extensions.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %active_extensions.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i13 = icmp eq i8 %8, 0
  br i1 %tobool.not.i13, label %skb_dst_drop.exit.skb_ext_put.exit_crit_edge, label %if.then.i14

skb_dst_drop.exit.skb_ext_put.exit_crit_edge:     ; preds = %skb_dst_drop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_ext_put.exit

if.then.i14:                                      ; preds = %skb_dst_drop.exit
  call void @__sanitizer_cov_trace_pc() #22
  %extensions.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %9 = ptrtoint ptr %extensions.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %extensions.i, align 8
  tail call void @__skb_ext_put(ptr noundef %10) #20
  br label %skb_ext_put.exit

skb_ext_put.exit:                                 ; preds = %if.then.i14, %skb_dst_drop.exit.skb_ext_put.exit_crit_edge
  %destructor.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %11 = ptrtoint ptr %destructor.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %destructor.i, align 4
  %tobool.not.i15 = icmp eq ptr %12, null
  br i1 %tobool.not.i15, label %do.body.i, label %if.then.i16

if.then.i16:                                      ; preds = %skb_ext_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %12(ptr noundef %skb) #20
  %13 = ptrtoint ptr %destructor.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %destructor.i, align 4
  %14 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %14, align 4
  br label %skb_orphan.exit

do.body.i:                                        ; preds = %skb_ext_put.exit
  %16 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %tobool3.not.i = icmp eq ptr %18, null
  br i1 %tobool3.not.i, label %do.body.i.skb_orphan.exit_crit_edge, label %do.body7.i, !prof !374

do.body.i.skb_orphan.exit_crit_edge:              ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan.exit

do.body7.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #20, !srcloc !396
  unreachable

skb_orphan.exit:                                  ; preds = %do.body.i.skb_orphan.exit_crit_edge, %if.then.i16
  %19 = ptrtoint ptr %slow_gro to i32
  call void @__asan_loadN_noabort(i32 %19, i32 4)
  %bf.load4 = load i32, ptr %slow_gro, align 2
  %bf.clear5 = and i32 %bf.load4, -4097
  store i32 %bf.clear5, ptr %slow_gro, align 2
  br label %if.end

if.end:                                           ; preds = %skb_orphan.exit, %entry.if.end_crit_edge
  %20 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i17 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i17 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %25, ptrtoint (ptr @napi_alloc_cache to i32)
  %26 = inttoptr i32 %add.i to ptr
  %27 = load ptr, ptr @skbuff_head_cache, align 4
  tail call void @__kasan_poison_object_data(ptr noundef %27, ptr noundef %skb) #20
  %skb_count.i = getelementptr inbounds %struct.napi_alloc_cache, ptr %26, i32 0, i32 1
  %28 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %skb_count.i, align 4
  %inc.i = add i32 %29, 1
  store i32 %inc.i, ptr %skb_count.i, align 4
  %arrayidx2.i = getelementptr %struct.napi_alloc_cache, ptr %26, i32 0, i32 2, i32 %29
  %30 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %skb, ptr %arrayidx2.i, align 4
  %31 = load i32, ptr %skb_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %31)
  %cmp.i = icmp eq i32 %31, 64
  br i1 %cmp.i, label %if.end.for.body.i_crit_edge, label %if.end.napi_skb_cache_put.exit_crit_edge, !prof !373

if.end.napi_skb_cache_put.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %napi_skb_cache_put.exit

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %i.019.i = phi i32 [ %inc8.i, %for.body.i.for.body.i_crit_edge ], [ 32, %if.end.for.body.i_crit_edge ]
  %32 = load ptr, ptr @skbuff_head_cache, align 4
  %arrayidx7.i = getelementptr %struct.napi_alloc_cache, ptr %26, i32 0, i32 2, i32 %i.019.i
  %33 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx7.i, align 4
  tail call void @__kasan_unpoison_object_data(ptr noundef %32, ptr noundef %34) #20
  %inc8.i = add nuw nsw i32 %i.019.i, 1
  %exitcond.not.i = icmp eq i32 %inc8.i, 64
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %35 = load ptr, ptr @skbuff_head_cache, align 4
  %add.ptr.i = getelementptr %struct.napi_alloc_cache, ptr %26, i32 0, i32 2, i32 32
  tail call void @kmem_cache_free_bulk(ptr noundef %35, i32 noundef 32, ptr noundef %add.ptr.i) #20
  %36 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 32, ptr %skb_count.i, align 4
  br label %napi_skb_cache_put.exit

napi_skb_cache_put.exit:                          ; preds = %for.end.i, %if.end.napi_skb_cache_put.exit_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nf_reset_ct(ptr nocapture noundef %skb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %_nfct.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 5
  %0 = ptrtoint ptr %_nfct.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %_nfct.i, align 8
  %and.i = and i32 %1, -8
  %2 = inttoptr i32 %and.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.nf_conntrack_put.exit_crit_edge, label %land.lhs.true.i

entry.nf_conntrack_put.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %nf_conntrack_put.exit

land.lhs.true.i:                                  ; preds = %entry
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %2, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr nonnull %2, i32 1, i32 3, i32 1) #20
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %2, ptr nonnull %2, i32 1, ptr nonnull elementtype(i32) %2) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.nf_conntrack_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !374

if.end5.i.i.i.i.nf_conntrack_put.exit_crit_edge:  ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %nf_conntrack_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef nonnull %2, i32 noundef 3) #20
  br label %nf_conntrack_put.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  tail call void @nf_conntrack_destroy(ptr noundef nonnull %2) #20
  br label %nf_conntrack_put.exit

nf_conntrack_put.exit:                            ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.nf_conntrack_put.exit_crit_edge, %entry.nf_conntrack_put.exit_crit_edge
  %4 = ptrtoint ptr %_nfct.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %_nfct.i, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @napi_consume_skb(ptr noundef %skb, i32 noundef %budget) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %budget)
  %tobool.not = icmp eq i32 %budget, 0
  br i1 %tobool.not, label %if.then, label %do.body, !prof !373

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 0) #20
  br label %return

do.body:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool4.not = icmp eq i32 %0, 0
  br i1 %tobool4.not, label %do.body.if.end75_crit_edge, label %land.lhs.true

do.body.if.end75_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end75

land.lhs.true:                                    ; preds = %do.body
  %1 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !397
  %5 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !398
  %14 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i104 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i104 to ptr
  %preempt_count.i.i105 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i105 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i105, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i105, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool24.not = icmp eq i32 %13, 0
  br i1 %tobool24.not, label %land.rhs, label %land.lhs.true.if.end75_crit_edge

land.lhs.true.if.end75_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end75

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %21, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool26.not = icmp eq i32 %and, 0
  br i1 %tobool26.not, label %land.rhs.land.rhs38_crit_edge, label %lor.lhs.false

land.rhs.land.rhs38_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs38

lor.lhs.false:                                    ; preds = %land.rhs
  %22 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i106 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i106 to ptr
  %preempt_count.i107 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i107 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i107, align 4
  %and28 = and i32 %25, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %lor.rhs, label %lor.lhs.false.land.rhs38_crit_edge

lor.lhs.false.land.rhs38_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs38

lor.rhs:                                          ; preds = %lor.lhs.false
  %26 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i108 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i108 to ptr
  %preempt_count.i109 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i109 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i109, align 4
  %and31 = and i32 %29, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %lor.rhs.if.end75_crit_edge, label %lor.rhs.land.rhs38_crit_edge

lor.rhs.land.rhs38_crit_edge:                     ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs38

lor.rhs.if.end75_crit_edge:                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end75

land.rhs38:                                       ; preds = %lor.rhs.land.rhs38_crit_edge, %lor.lhs.false.land.rhs38_crit_edge, %land.rhs.land.rhs38_crit_edge
  %.b99 = load i1, ptr @napi_consume_skb.__already_done, align 1
  br i1 %.b99, label %land.rhs38.if.end75_crit_edge, label %if.then49, !prof !374

land.rhs38.if.end75_crit_edge:                    ; preds = %land.rhs38
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end75

if.then49:                                        ; preds = %land.rhs38
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @napi_consume_skb.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 978, i32 noundef 9, ptr noundef null) #20
  br label %if.end75

if.end75:                                         ; preds = %if.then49, %land.rhs38.if.end75_crit_edge, %lor.rhs.if.end75_crit_edge, %land.lhs.true.if.end75_crit_edge, %do.body.if.end75_crit_edge
  %tobool.not.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i, label %if.end75.return_crit_edge, label %if.end.i, !prof !373

if.end75.return_crit_edge:                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end.i:                                         ; preds = %if.end75
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %30 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %31)
  %cmp.i = icmp eq i32 %31, 1
  br i1 %cmp.i, label %do.end.i, label %if.else.i, !prof !374

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !382
  br label %if.end87

if.else.i:                                        ; preds = %if.end.i
  %call14.i = tail call fastcc zeroext i1 @refcount_dec_and_test(ptr noundef %users.i) #20
  br i1 %call14.i, label %if.else.i.if.end87_crit_edge, label %if.else.i.return_crit_edge, !prof !373

if.else.i.return_crit_edge:                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.else.i.if.end87_crit_edge:                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end87

if.end87:                                         ; preds = %if.else.i.if.end87_crit_edge, %do.end.i
  tail call fastcc void @trace_consume_skb(ptr noundef nonnull %skb)
  %fclone = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %32 = ptrtoint ptr %fclone to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load = load i8, ptr %fclone, align 2
  %33 = and i8 %bf.load, 48
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %cmp.not = icmp eq i8 %33, 0
  tail call void @skb_release_head_state(ptr noundef nonnull %skb) #20
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %34 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %head.i, align 8
  %tobool.not.i110 = icmp eq ptr %35, null
  br i1 %cmp.not, label %if.end90, label %if.then89

if.then89:                                        ; preds = %if.end87
  br i1 %tobool.not.i110, label %if.then89.__kfree_skb.exit_crit_edge, label %if.then.i.i, !prof !373

if.then89.__kfree_skb.exit_crit_edge:             ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #22
  br label %__kfree_skb.exit

if.then.i.i:                                      ; preds = %if.then89
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef nonnull %skb) #20
  br label %__kfree_skb.exit

__kfree_skb.exit:                                 ; preds = %if.then.i.i, %if.then89.__kfree_skb.exit_crit_edge
  tail call fastcc void @kfree_skbmem(ptr noundef nonnull %skb) #20
  br label %return

if.end90:                                         ; preds = %if.end87
  br i1 %tobool.not.i110, label %if.end90.skb_release_all.exit_crit_edge, label %if.then.i, !prof !373

if.end90.skb_release_all.exit_crit_edge:          ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_release_all.exit

if.then.i:                                        ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef nonnull %skb) #20
  br label %skb_release_all.exit

skb_release_all.exit:                             ; preds = %if.then.i, %if.end90.skb_release_all.exit_crit_edge
  %36 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i112 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i112 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %39
  %40 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx.i, align 4
  %add.i113 = add i32 %41, ptrtoint (ptr @napi_alloc_cache to i32)
  %42 = inttoptr i32 %add.i113 to ptr
  %43 = load ptr, ptr @skbuff_head_cache, align 4
  tail call void @__kasan_poison_object_data(ptr noundef %43, ptr noundef nonnull %skb) #20
  %skb_count.i = getelementptr inbounds %struct.napi_alloc_cache, ptr %42, i32 0, i32 1
  %44 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %skb_count.i, align 4
  %inc.i = add i32 %45, 1
  store i32 %inc.i, ptr %skb_count.i, align 4
  %arrayidx2.i = getelementptr %struct.napi_alloc_cache, ptr %42, i32 0, i32 2, i32 %45
  %46 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %skb, ptr %arrayidx2.i, align 4
  %47 = load i32, ptr %skb_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %47)
  %cmp.i114 = icmp eq i32 %47, 64
  br i1 %cmp.i114, label %skb_release_all.exit.for.body.i_crit_edge, label %skb_release_all.exit.return_crit_edge, !prof !373

skb_release_all.exit.return_crit_edge:            ; preds = %skb_release_all.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

skb_release_all.exit.for.body.i_crit_edge:        ; preds = %skb_release_all.exit
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %skb_release_all.exit.for.body.i_crit_edge
  %i.019.i = phi i32 [ %inc8.i, %for.body.i.for.body.i_crit_edge ], [ 32, %skb_release_all.exit.for.body.i_crit_edge ]
  %48 = load ptr, ptr @skbuff_head_cache, align 4
  %arrayidx7.i = getelementptr %struct.napi_alloc_cache, ptr %42, i32 0, i32 2, i32 %i.019.i
  %49 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx7.i, align 4
  tail call void @__kasan_unpoison_object_data(ptr noundef %48, ptr noundef %50) #20
  %inc8.i = add nuw nsw i32 %i.019.i, 1
  %exitcond.not.i = icmp eq i32 %inc8.i, 64
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %51 = load ptr, ptr @skbuff_head_cache, align 4
  %add.ptr.i = getelementptr %struct.napi_alloc_cache, ptr %42, i32 0, i32 2, i32 32
  tail call void @kmem_cache_free_bulk(ptr noundef %51, i32 noundef 32, ptr noundef %add.ptr.i) #20
  %52 = ptrtoint ptr %skb_count.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 32, ptr %skb_count.i, align 4
  br label %return

return:                                           ; preds = %for.end.i, %skb_release_all.exit.return_crit_edge, %__kfree_skb.exit, %if.else.i.return_crit_edge, %if.end75.return_crit_edge, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_skb_for_msg(ptr noundef %first) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call ptr @__alloc_skb(i32 noundef 0, i32 noundef 2592, i32 noundef 0, i32 noundef -1) #20
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %len = getelementptr inbounds %struct.sk_buff, ptr %first, i32 0, i32 6
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 6
  %2 = ptrtoint ptr %len1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %len1, align 4
  %3 = load i32, ptr %len, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 7
  %4 = ptrtoint ptr %data_len to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %data_len, align 8
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %first, i32 0, i32 20
  %5 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %truesize, align 8
  %truesize3 = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 20
  %7 = ptrtoint ptr %truesize3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %truesize3, align 8
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 17
  %8 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i, align 4
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %9, i32 0, i32 6
  %10 = ptrtoint ptr %frag_list to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %first, ptr %frag_list, align 8
  tail call fastcc void @__copy_skb_header(ptr noundef nonnull %call.i, ptr noundef %first)
  %destructor = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 4, i32 0, i32 1
  %11 = ptrtoint ptr %destructor to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %destructor, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret ptr %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__copy_skb_header(ptr nocapture noundef %new, ptr nocapture noundef readonly %old) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %0, align 8
  %3 = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %2, ptr %3, align 8
  %5 = getelementptr inbounds %struct.anon.27, ptr %old, i32 0, i32 2
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds %struct.anon.27, ptr %new, i32 0, i32 2
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %7, ptr %8, align 8
  %cb = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 3
  %cb1 = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 3
  %10 = call ptr @memcpy(ptr %cb, ptr %cb1, i32 48)
  %11 = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i = icmp eq i32 %13, 0
  %slow_gro.i.i = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 15, i32 0, i32 3
  %14 = ptrtoint ptr %slow_gro.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 4)
  %bf.load.i.i = load i32, ptr %slow_gro.i.i, align 2
  %bf.load.mask.i.i = and i32 %bf.load.i.i, 4096
  %bf.shl.i.i = select i1 %tobool.not.i.i, i32 %bf.load.mask.i.i, i32 4096
  %bf.clear4.i.i = and i32 %bf.load.i.i, -4097
  %bf.set.i.i = or i32 %bf.shl.i.i, %bf.clear4.i.i
  store i32 %bf.set.i.i, ptr %slow_gro.i.i, align 2
  %15 = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %13, ptr %15, align 8
  %and.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool6.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool6.not.i.i, label %skb_dst.exit.i.i, label %entry.skb_dst_copy.exit_crit_edge

entry.skb_dst_copy.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_copy.exit

skb_dst.exit.i.i:                                 ; preds = %entry
  %and25.i.i.i = and i32 %13, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and25.i.i.i)
  %tobool.not.i13.i.i = icmp eq i32 %and25.i.i.i, 0
  br i1 %tobool.not.i13.i.i, label %skb_dst.exit.i.i.skb_dst_copy.exit_crit_edge, label %if.then.i.i.i

skb_dst.exit.i.i.skb_dst_copy.exit_crit_edge:     ; preds = %skb_dst.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_copy.exit

if.then.i.i.i:                                    ; preds = %skb_dst.exit.i.i
  %17 = inttoptr i32 %and25.i.i.i to ptr
  %__refcnt.i.i.i.i = getelementptr inbounds %struct.dst_entry, ptr %17, i32 0, i32 18
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %__refcnt.i.i.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !399
  tail call void @llvm.prefetch.p0(ptr %__refcnt.i.i.i.i, i32 1, i32 3, i32 1) #20
  %18 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %__refcnt.i.i.i.i, ptr %__refcnt.i.i.i.i, i32 0, i32 1, ptr elementtype(i32) %__refcnt.i.i.i.i) #20, !srcloc !400
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i.i, label %do.end10.i.i.i.i, label %atomic_inc_not_zero.exit.thread.i.i.i.i

atomic_inc_not_zero.exit.thread.i.i.i.i:          ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !401
  br label %skb_dst_copy.exit

do.end10.i.i.i.i:                                 ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.30, i32 noundef 231, i32 noundef 9, ptr noundef null) #20
  br label %skb_dst_copy.exit

skb_dst_copy.exit:                                ; preds = %do.end10.i.i.i.i, %atomic_inc_not_zero.exit.thread.i.i.i.i, %skb_dst.exit.i.i.skb_dst_copy.exit_crit_edge, %entry.skb_dst_copy.exit_crit_edge
  %active_extensions.i = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 13
  %19 = ptrtoint ptr %active_extensions.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %active_extensions.i, align 1
  %active_extensions1.i = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 13
  %21 = ptrtoint ptr %active_extensions1.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %20, ptr %active_extensions1.i, align 1
  %22 = load i8, ptr %active_extensions.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i = icmp eq i8 %22, 0
  br i1 %tobool.not.i, label %skb_dst_copy.exit.__skb_ext_copy.exit_crit_edge, label %if.then.i

skb_dst_copy.exit.__skb_ext_copy.exit_crit_edge:  ; preds = %skb_dst_copy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_ext_copy.exit

if.then.i:                                        ; preds = %skb_dst_copy.exit
  %extensions.i = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 22
  %23 = ptrtoint ptr %extensions.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %extensions.i, align 8
  %call.i.i.i.i.i.i54 = tail call zeroext i1 @__kasan_check_write(ptr noundef %24, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %24, i32 1, i32 3, i32 1) #20
  %25 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %24, ptr %24, i32 1, ptr elementtype(i32) %24) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %25, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !373

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %26 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %26)
  %.not.i.i.i.i = icmp sgt i32 %26, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %24, i32 noundef %.sink.i.i.i.i) #20
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  %extensions3.i = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 22
  %27 = ptrtoint ptr %extensions3.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %extensions3.i, align 8
  br label %__skb_ext_copy.exit

__skb_ext_copy.exit:                              ; preds = %refcount_inc.exit.i, %skb_dst_copy.exit.__skb_ext_copy.exit_crit_edge
  %_nfct.i = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 5
  %28 = ptrtoint ptr %_nfct.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %_nfct.i, align 8
  %_nfct1.i = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 5
  %30 = ptrtoint ptr %_nfct1.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %_nfct1.i, align 8
  %31 = load i32, ptr %_nfct.i, align 8
  %and.i.i55 = and i32 %31, -8
  %32 = inttoptr i32 %and.i.i55 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i55)
  %tobool.not.i.i56 = icmp eq i32 %and.i.i55, 0
  br i1 %tobool.not.i.i56, label %__skb_ext_copy.exit.__nf_copy.exit_crit_edge, label %if.then.i.i

__skb_ext_copy.exit.__nf_copy.exit_crit_edge:     ; preds = %__skb_ext_copy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %__nf_copy.exit

if.then.i.i:                                      ; preds = %__skb_ext_copy.exit
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %32, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr nonnull %32, i32 1, i32 3, i32 1) #20
  %33 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %32, ptr nonnull %32, i32 1, ptr nonnull elementtype(i32) %32) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %33, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !373

if.then.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %34 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %.not.i.i.i.i.i = icmp sgt i32 %34, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.__nf_copy.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.__nf_copy.exit_crit_edge:       ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__nf_copy.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef nonnull %32, i32 noundef %.sink.i.i.i.i.i) #20
  br label %__nf_copy.exit

__nf_copy.exit:                                   ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.__nf_copy.exit_crit_edge, %__skb_ext_copy.exit.__nf_copy.exit_crit_edge
  %queue_mapping = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 10
  %35 = ptrtoint ptr %queue_mapping to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %queue_mapping, align 8
  %queue_mapping3 = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 10
  %37 = ptrtoint ptr %queue_mapping3 to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %36, ptr %queue_mapping3, align 8
  %38 = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 15
  %39 = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 15
  %40 = call ptr @memcpy(ptr %38, ptr %39, i32 64)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_morph(ptr noundef returned %dst, ptr nocapture noundef %src) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @skb_release_head_state(ptr noundef %dst) #20
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %dst, i32 0, i32 18
  %0 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.skb_release_all.exit_crit_edge, label %if.then.i, !prof !373

entry.skb_release_all.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_release_all.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef %dst) #20
  br label %skb_release_all.exit

skb_release_all.exit:                             ; preds = %if.then.i, %entry.skb_release_all.exit_crit_edge
  %call = tail call fastcc ptr @__skb_clone(ptr noundef %dst, ptr noundef %src)
  ret ptr %dst
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__skb_clone(ptr noundef returned %n, ptr nocapture noundef %skb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %prev = getelementptr inbounds %struct.anon.27, ptr %n, i32 0, i32 1
  %0 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %prev, align 4
  %1 = ptrtoint ptr %n to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %n, align 8
  %2 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %2, align 4
  tail call fastcc void @__copy_skb_header(ptr noundef %n, ptr noundef %skb)
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 6
  %6 = ptrtoint ptr %len1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %len1, align 4
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %7 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %data_len, align 8
  %data_len2 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 7
  %9 = ptrtoint ptr %data_len2 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %data_len2, align 8
  %mac_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %10 = ptrtoint ptr %mac_len to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %mac_len, align 4
  %mac_len3 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 8
  %12 = ptrtoint ptr %mac_len3 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %11, ptr %mac_len3, align 4
  %nohdr = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %13 = ptrtoint ptr %nohdr to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load = load i8, ptr %nohdr, align 2
  %14 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not = icmp eq i8 %14, 0
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %15 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %17 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %16 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %18 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %hdr_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 9
  %19 = ptrtoint ptr %hdr_len to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %hdr_len, align 2
  %conv4 = zext i16 %20 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub.ptr.sub.i, %cond.true ], [ %conv4, %cond.false ]
  %conv5 = trunc i32 %cond to i16
  %hdr_len6 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 9
  %21 = ptrtoint ptr %hdr_len6 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %conv5, ptr %hdr_len6, align 2
  %cloned = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 12
  %22 = ptrtoint ptr %cloned to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load7 = load i8, ptr %cloned, align 2
  %bf.set = and i8 %bf.load7, 55
  %bf.clear11 = or i8 %bf.set, -128
  store i8 %bf.clear11, ptr %cloned, align 2
  %23 = ptrtoint ptr %nohdr to i32
  call void @__asan_load1_noabort(i32 %23)
  %bf.load16 = load i8, ptr %nohdr, align 2
  %bf.clear18 = and i8 %bf.load16, 2
  %bf.clear21 = and i8 %bf.clear11, -75
  %bf.set22 = or i8 %bf.clear21, %bf.clear18
  store i8 %bf.set22, ptr %cloned, align 2
  %bf.load23 = load i8, ptr %nohdr, align 2
  %bf.clear24 = and i8 %bf.load23, 1
  %bf.clear28 = and i8 %bf.set22, -74
  %bf.set29 = or i8 %bf.clear28, %bf.clear24
  store i8 %bf.set29, ptr %cloned, align 2
  %destructor = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 4, i32 0, i32 1
  %24 = ptrtoint ptr %destructor to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %destructor, align 4
  %tail = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %25 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tail, align 8
  %tail30 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 16
  %27 = ptrtoint ptr %tail30 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %26, ptr %tail30, align 8
  %end = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %28 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %end, align 4
  %end31 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 17
  %30 = ptrtoint ptr %end31 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %29, ptr %end31, align 4
  %head = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %31 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %head, align 8
  %head32 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 18
  %33 = ptrtoint ptr %head32 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %32, ptr %head32, align 8
  %bf.load33 = load i8, ptr %nohdr, align 2
  %bf.clear35 = and i8 %bf.load33, 4
  %bf.clear40 = and i8 %bf.set29, -77
  %bf.set41 = or i8 %bf.clear35, %bf.clear40
  store i8 %bf.set41, ptr %cloned, align 2
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %34 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %data, align 4
  %data42 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 19
  %36 = ptrtoint ptr %data42 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %35, ptr %data42, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %37 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %truesize, align 8
  %truesize43 = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 20
  %39 = ptrtoint ptr %truesize43 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %truesize43, align 8
  %users = getelementptr inbounds %struct.sk_buff, ptr %n, i32 0, i32 21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users, i32 noundef 4) #20
  %40 = ptrtoint ptr %users to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile i32 1, ptr %users, align 4
  %41 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %end, align 4
  %dataref = getelementptr inbounds %struct.skb_shared_info, ptr %42, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %dataref, i32 1, i32 3, i32 1) #20
  %43 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dataref, ptr %dataref, i32 1, ptr elementtype(i32) %dataref) #20, !srcloc !403
  %44 = ptrtoint ptr %nohdr to i32
  call void @__asan_load1_noabort(i32 %44)
  %bf.load46 = load i8, ptr %nohdr, align 2
  %bf.set48 = or i8 %bf.load46, -128
  store i8 %bf.set48, ptr %nohdr, align 2
  ret ptr %n
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mm_account_pinned_pages(ptr nocapture noundef %mmp, i32 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 14) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %tobool.not = icmp eq i32 %size, 0
  %or.cond = or i1 %tobool.not, %call
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %shr = lshr i32 %size, 12
  %add = add nuw nsw i32 %shr, 2
  %0 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %signal.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 111
  %4 = ptrtoint ptr %signal.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %signal.i.i, align 16
  %arrayidx.i.i = getelementptr %struct.signal_struct, ptr %5, i32 0, i32 51, i32 8
  %6 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %arrayidx.i.i, align 8
  %shr2 = lshr i32 %7, 12
  %8 = ptrtoint ptr %mmp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mmp, align 4
  %tobool4.not = icmp eq ptr %9, null
  br i1 %tobool4.not, label %do.end, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %10 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 99
  %14 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cred, align 16
  %user7 = getelementptr inbounds %struct.cred, ptr %15, i32 0, i32 24
  %16 = ptrtoint ptr %user7 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %user7, align 4
  br label %cond.end

cond.end:                                         ; preds = %do.end, %if.end.cond.end_crit_edge
  %cond = phi ptr [ %17, %do.end ], [ %9, %if.end.cond.end_crit_edge ]
  %locked_vm = getelementptr inbounds %struct.user_struct, ptr %cond, i32 0, i32 6
  br label %do.body8

do.body8:                                         ; preds = %atomic_long_cmpxchg.exit.do.body8_crit_edge, %cond.end
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %locked_vm, i32 noundef 4) #20
  %18 = ptrtoint ptr %locked_vm to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %locked_vm, align 4
  %add10 = add i32 %19, %add
  call void @__sanitizer_cov_trace_cmp4(i32 %add10, i32 %shr2)
  %cmp = icmp ugt i32 %add10, %shr2
  br i1 %cmp, label %do.body8.cleanup_crit_edge, label %do.cond13

do.body8.cleanup_crit_edge:                       ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.cond13:                                        ; preds = %do.body8
  %call.i.i43 = tail call zeroext i1 @__kasan_check_write(ptr noundef %locked_vm, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !404
  tail call void @llvm.prefetch.p0(ptr %locked_vm, i32 1, i32 3, i32 1) #20
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge, %do.cond13
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %locked_vm, ptr %locked_vm, i32 %19, i32 %add10, ptr elementtype(i32) %locked_vm) #20, !srcloc !405
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %20, 0
  %tobool.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %atomic_long_cmpxchg.exit, label %do.body.i.i.i.i.do.body.i.i.i.i_crit_edge

do.body.i.i.i.i.do.body.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i.i

atomic_long_cmpxchg.exit:                         ; preds = %do.body.i.i.i.i
  %asmresult3.i.i.i.i = extractvalue { i32, i32 } %20, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !406
  %cmp16.not = icmp eq i32 %asmresult3.i.i.i.i, %19
  br i1 %cmp16.not, label %do.end17, label %atomic_long_cmpxchg.exit.do.body8_crit_edge

atomic_long_cmpxchg.exit.do.body8_crit_edge:      ; preds = %atomic_long_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body8

do.end17:                                         ; preds = %atomic_long_cmpxchg.exit
  %21 = ptrtoint ptr %mmp to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mmp, align 4
  %tobool19.not = icmp eq ptr %22, null
  br i1 %tobool19.not, label %if.then20, label %if.else

if.then20:                                        ; preds = %do.end17
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cond, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %cond, i32 1, i32 3, i32 1) #20
  %23 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %cond, ptr %cond, i32 1, ptr elementtype(i32) %cond) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %23, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then20.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !373

if.then20.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then20
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %24 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %24)
  %.not.i.i.i.i = icmp sgt i32 %24, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_uid.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_uid.exit_crit_edge:           ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %get_uid.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then20.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then20.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %cond, i32 noundef %.sink.i.i.i.i) #20
  br label %get_uid.exit

get_uid.exit:                                     ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_uid.exit_crit_edge
  %25 = ptrtoint ptr %mmp to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %cond, ptr %mmp, align 4
  %num_pg23 = getelementptr inbounds %struct.mmpin, ptr %mmp, i32 0, i32 1
  %26 = ptrtoint ptr %num_pg23 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %add, ptr %num_pg23, align 4
  br label %cleanup

if.else:                                          ; preds = %do.end17
  call void @__sanitizer_cov_trace_pc() #22
  %num_pg24 = getelementptr inbounds %struct.mmpin, ptr %mmp, i32 0, i32 1
  %27 = ptrtoint ptr %num_pg24 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_pg24, align 4
  %add25 = add i32 %28, %add
  store i32 %add25, ptr %num_pg24, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else, %get_uid.exit, %do.body8.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.else ], [ 0, %get_uid.exit ], [ -105, %do.body8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mm_unaccount_pinned_pages(ptr nocapture noundef readonly %mmp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mmp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mmp, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %num_pg = getelementptr inbounds %struct.mmpin, ptr %mmp, i32 0, i32 1
  %2 = ptrtoint ptr %num_pg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_pg, align 4
  %locked_vm = getelementptr inbounds %struct.user_struct, ptr %1, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %locked_vm, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %locked_vm, i32 1, i32 3, i32 1) #20
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %locked_vm, ptr %locked_vm, i32 %3, ptr elementtype(i32) %locked_vm) #20, !srcloc !407
  %5 = ptrtoint ptr %mmp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mmp, align 4
  tail call void @free_uid(ptr noundef %6) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_uid(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @msg_zerocopy_alloc(ptr noundef %sk, i32 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i75 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i75 to ptr
  %preempt_count.i76 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i76 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i76, align 4
  %and2 = and i32 %7, 983040
  %or = or i32 %and2, %and
  %8 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i77 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i77 to ptr
  %preempt_count.i78 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i78 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i78, align 4
  %and5 = and i32 %11, 256
  %or6 = or i32 %or, %and5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6)
  %tobool.not = icmp eq i32 %or6, 0
  br i1 %tobool.not, label %entry.if.end36_crit_edge, label %land.rhs

entry.if.end36_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

land.rhs:                                         ; preds = %entry
  %.b74 = load i1, ptr @msg_zerocopy_alloc.__already_done, align 1
  br i1 %.b74, label %land.rhs.if.end36_crit_edge, label %if.then, !prof !374

land.rhs.if.end36_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @msg_zerocopy_alloc.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1172, i32 noundef 9, ptr noundef null) #20
  br label %if.end36

if.end36:                                         ; preds = %if.then, %land.rhs.if.end36_crit_edge, %entry.if.end36_crit_edge
  %call44 = tail call ptr @sock_omalloc(ptr noundef %sk, i32 noundef 0, i32 noundef 3264) #20
  %tobool45.not = icmp eq ptr %call44, null
  br i1 %tobool45.not, label %if.end36.cleanup_crit_edge, label %do.end50

if.end36.cleanup_crit_edge:                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.end50:                                         ; preds = %if.end36
  %mmp = getelementptr inbounds %struct.sk_buff, ptr %call44, i32 0, i32 3, i32 24
  %12 = ptrtoint ptr %mmp to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %mmp, align 4
  %call52 = tail call i32 @mm_account_pinned_pages(ptr noundef %mmp, i32 noundef %size)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.end55, label %if.then54

if.then54:                                        ; preds = %do.end50
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %call44)
  br label %cleanup

if.end55:                                         ; preds = %do.end50
  %cb = getelementptr inbounds %struct.sk_buff, ptr %call44, i32 0, i32 3
  %13 = ptrtoint ptr %cb to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @msg_zerocopy_callback, ptr %cb, align 4
  %sk_zckey = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 68
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_zckey, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !408
  tail call void @llvm.prefetch.p0(ptr %sk_zckey, i32 1, i32 3, i32 1) #20
  %14 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_zckey, ptr %sk_zckey, i32 1, ptr elementtype(i32) %sk_zckey) #20, !srcloc !409
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %14, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !410
  %sub = add i32 %asmresult.i.i.i.i, -1
  %15 = getelementptr inbounds %struct.sk_buff, ptr %call44, i32 0, i32 3, i32 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %sub, ptr %15, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %call44, i32 0, i32 3, i32 8
  %17 = ptrtoint ptr %len to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 1, ptr %len, align 4
  %bytelen = getelementptr inbounds %struct.sk_buff, ptr %call44, i32 0, i32 3, i32 12
  %18 = ptrtoint ptr %bytelen to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %size, ptr %bytelen, align 4
  %zerocopy = getelementptr inbounds %struct.sk_buff, ptr %call44, i32 0, i32 3, i32 10
  %19 = ptrtoint ptr %zerocopy to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load = load i8, ptr %zerocopy, align 2
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %zerocopy, align 2
  %flags = getelementptr inbounds %struct.sk_buff, ptr %call44, i32 0, i32 3, i32 20
  %20 = ptrtoint ptr %flags to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 3, ptr %flags, align 4
  %refcnt = getelementptr inbounds %struct.sk_buff, ptr %call44, i32 0, i32 3, i32 16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #20
  %21 = ptrtoint ptr %refcnt to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile i32 1, ptr %refcnt, align 4
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #20
  %22 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %22, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end55.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !373

if.end55.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end55
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %23 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %23)
  %.not.i.i.i.i = icmp sgt i32 %23, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.cleanup_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.cleanup_crit_edge:                ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end55.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end55.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.cleanup_crit_edge, %if.then54, %if.end36.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then54 ], [ null, %if.end36.cleanup_crit_edge ], [ %cb, %if.else.i.i.i.i.cleanup_crit_edge ], [ %cb, %if.end15.sink.split.i.i.i.i ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sock_omalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @msg_zerocopy_callback(ptr nocapture readnone %skb, ptr noundef %uarg, i1 noundef zeroext %success) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %zerocopy = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 1, i32 0, i32 2
  %0 = ptrtoint ptr %zerocopy to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %zerocopy, align 2
  %bf.lshr910 = select i1 %success, i8 -1, i8 127
  %bf.set = and i8 %bf.load, %bf.lshr910
  store i8 %bf.set, ptr %zerocopy, align 2
  %refcnt = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 2
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #20
  %1 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 1, ptr elementtype(i32) %refcnt) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end_crit_edge, label %if.then10.i.i.i, !prof !374

if.end5.i.i.i.if.end_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %refcnt, i32 noundef 3) #20
  br label %if.end

if.then:                                          ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  %add.ptr.i.i = getelementptr i8, ptr %uarg, i32 -24
  %2 = getelementptr i8, ptr %uarg, i32 -12
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 4
  %mmp.i = getelementptr %struct.ubuf_info, ptr %uarg, i32 0, i32 4
  %5 = ptrtoint ptr %mmp.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mmp.i, align 4
  %tobool.not.i.i = icmp eq ptr %6, null
  br i1 %tobool.not.i.i, label %if.then.mm_unaccount_pinned_pages.exit.i_crit_edge, label %if.then.i.i

if.then.mm_unaccount_pinned_pages.exit.i_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %mm_unaccount_pinned_pages.exit.i

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %num_pg.i.i = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 4, i32 1
  %7 = ptrtoint ptr %num_pg.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_pg.i.i, align 4
  %locked_vm.i.i = getelementptr inbounds %struct.user_struct, ptr %6, i32 0, i32 6
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %locked_vm.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %locked_vm.i.i, i32 1, i32 3, i32 1) #20
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %locked_vm.i.i, ptr %locked_vm.i.i, i32 %8, ptr elementtype(i32) %locked_vm.i.i) #20, !srcloc !407
  %10 = ptrtoint ptr %mmp.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mmp.i, align 4
  tail call void @free_uid(ptr noundef %11) #20
  br label %mm_unaccount_pinned_pages.exit.i

mm_unaccount_pinned_pages.exit.i:                 ; preds = %if.then.i.i, %if.then.mm_unaccount_pinned_pages.exit.i_crit_edge
  %12 = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 1
  %len1.i = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 1, i32 0, i32 1
  %13 = ptrtoint ptr %len1.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %len1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool.not.i = icmp eq i16 %14, 0
  br i1 %tobool.not.i, label %mm_unaccount_pinned_pages.exit.i.release.i_crit_edge, label %lor.lhs.false.i

mm_unaccount_pinned_pages.exit.i.release.i_crit_edge: ; preds = %mm_unaccount_pinned_pages.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %release.i

lor.lhs.false.i:                                  ; preds = %mm_unaccount_pinned_pages.exit.i
  %15 = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 13
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and1.i.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %if.end.i, label %lor.lhs.false.i.release.i_crit_edge

lor.lhs.false.i.release.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %release.i

if.end.i:                                         ; preds = %lor.lhs.false.i
  %18 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %12, align 4
  %conv.i = zext i16 %14 to i32
  %add.i = add nsw i32 %conv.i, -1
  %sub.i = add i32 %add.i, %19
  %20 = ptrtoint ptr %zerocopy to i32
  call void @__asan_load1_noabort(i32 %20)
  %bf.load.i = load i8, ptr %zerocopy, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool5.not.i = icmp sgt i8 %bf.load.i, -1
  %ee_origin.i = getelementptr i8, ptr %uarg, i32 28
  %21 = call ptr @memset(ptr %uarg, i32 0, i32 48)
  %22 = ptrtoint ptr %ee_origin.i to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 5, ptr %ee_origin.i, align 4
  %23 = getelementptr i8, ptr %uarg, i32 36
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %sub.i, ptr %23, align 4
  %ee_info.i = getelementptr i8, ptr %uarg, i32 32
  %25 = ptrtoint ptr %ee_info.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %19, ptr %ee_info.i, align 4
  br i1 %tobool5.not.i, label %if.then10.i, label %if.end.i.if.end14.i_crit_edge

if.end.i.if.end14.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14.i

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %ee_code.i = getelementptr i8, ptr %uarg, i32 30
  %26 = ptrtoint ptr %ee_code.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %ee_code.i, align 2
  %28 = or i8 %27, 1
  store i8 %28, ptr %ee_code.i, align 2
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then10.i, %if.end.i.if.end14.i_crit_edge
  %sk_error_queue.i = getelementptr inbounds %struct.sock, ptr %4, i32 0, i32 7
  %lock.i = getelementptr inbounds %struct.sock, ptr %4, i32 0, i32 7, i32 2
  %call18.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #20
  %prev.i.i = getelementptr inbounds %struct.sock, ptr %4, i32 0, i32 7, i32 0, i32 0, i32 1
  %29 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %prev.i.i, align 4
  %cmp.i.i = icmp eq ptr %30, %sk_error_queue.i
  %tobool22.not62.i = icmp eq ptr %30, null
  %tobool22.not.i = or i1 %cmp.i.i, %tobool22.not62.i
  br i1 %tobool22.not.i, label %if.end14.i.if.then33.i_crit_edge, label %lor.lhs.false23.i

if.end14.i.if.then33.i_crit_edge:                 ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then33.i

lor.lhs.false23.i:                                ; preds = %if.end14.i
  %ee_origin27.i = getelementptr inbounds %struct.sk_buff, ptr %30, i32 0, i32 3, i32 28
  %31 = ptrtoint ptr %ee_origin27.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %ee_origin27.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 5, i8 %32)
  %cmp29.not.i = icmp eq i8 %32, 5
  br i1 %cmp29.not.i, label %lor.lhs.false31.i, label %lor.lhs.false23.i.if.then33.i_crit_edge

lor.lhs.false23.i.if.then33.i_crit_edge:          ; preds = %lor.lhs.false23.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then33.i

lor.lhs.false31.i:                                ; preds = %lor.lhs.false23.i
  %ee_info.i.i = getelementptr inbounds %struct.sk_buff, ptr %30, i32 0, i32 3, i32 32
  %33 = ptrtoint ptr %ee_info.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %ee_info.i.i, align 4
  %35 = getelementptr inbounds %struct.sk_buff, ptr %30, i32 0, i32 3, i32 36
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  %sub.i.i = sub i32 %37, %34
  %conv.i.i = zext i32 %sub.i.i to i64
  %conv2.i.i = zext i16 %14 to i64
  %add.i.i = add nuw nsw i64 %conv2.i.i, 1
  %add3.i.i = add nuw nsw i64 %add.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %add3.i.i)
  %cmp.i60.i = icmp ult i64 %add3.i.i, 4294967296
  %add5.i.i = add i32 %37, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add5.i.i, i32 %19)
  %cmp6.not.i.i = icmp eq i32 %add5.i.i, %19
  %or.cond.i.i = select i1 %cmp.i60.i, i1 %cmp6.not.i.i, i1 false
  br i1 %or.cond.i.i, label %skb_zerocopy_notify_extend.exit.thread.i, label %lor.lhs.false31.i.if.then33.i_crit_edge

lor.lhs.false31.i.if.then33.i_crit_edge:          ; preds = %lor.lhs.false31.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then33.i

skb_zerocopy_notify_extend.exit.thread.i:         ; preds = %lor.lhs.false31.i
  call void @__sanitizer_cov_trace_pc() #22
  %add12.i.i = add i32 %37, %conv.i
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %add12.i.i, ptr %35, align 4
  br label %if.end34.i

if.then33.i:                                      ; preds = %lor.lhs.false31.i.if.then33.i_crit_edge, %lor.lhs.false23.i.if.then33.i_crit_edge, %if.end14.i.if.then33.i_crit_edge
  %39 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %sk_error_queue.i, ptr %add.ptr.i.i, align 8
  %prev10.i.i.i.i = getelementptr i8, ptr %uarg, i32 -20
  %40 = ptrtoint ptr %prev10.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %30, ptr %prev10.i.i.i.i, align 4
  %41 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %add.ptr.i.i, ptr %prev.i.i, align 4
  %42 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %add.ptr.i.i, ptr %30, align 4
  %qlen.i.i.i.i = getelementptr inbounds %struct.sock, ptr %4, i32 0, i32 7, i32 1
  %43 = ptrtoint ptr %qlen.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %qlen.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %44, 1
  store volatile i32 %add.i.i.i.i, ptr %qlen.i.i.i.i, align 4
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.then33.i, %skb_zerocopy_notify_extend.exit.thread.i
  %skb.0.i = phi ptr [ null, %if.then33.i ], [ %add.ptr.i.i, %skb_zerocopy_notify_extend.exit.thread.i ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call18.i) #20
  tail call void @sk_error_report(ptr noundef %4) #20
  br label %release.i

release.i:                                        ; preds = %if.end34.i, %lor.lhs.false.i.release.i_crit_edge, %mm_unaccount_pinned_pages.exit.i.release.i_crit_edge
  %skb.1.i = phi ptr [ %add.ptr.i.i, %lor.lhs.false.i.release.i_crit_edge ], [ %skb.0.i, %if.end34.i ], [ %add.ptr.i.i, %mm_unaccount_pinned_pages.exit.i.release.i_crit_edge ]
  tail call void @consume_skb(ptr noundef %skb.1.i) #20
  %skc_refcnt.i.i = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 19
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i, i32 1, i32 3, i32 1) #20
  %45 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i, ptr %skc_refcnt.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %45, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i61.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %release.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.if.end_crit_edge, label %if.then10.i.i.i.i.i, !prof !374

if.end5.i.i.i.i.i.if.end_crit_edge:               ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i, i32 noundef 3) #20
  br label %if.end

if.then.i61.i:                                    ; preds = %release.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  tail call void @sk_free(ptr noundef %4) #20
  br label %if.end

if.end:                                           ; preds = %if.then.i61.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.if.end_crit_edge, %if.then10.i.i.i, %if.end5.i.i.i.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @msg_zerocopy_realloc(ptr noundef %sk, i32 noundef %size, ptr noundef %uarg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %uarg, null
  br i1 %tobool.not, label %entry.new_alloc_crit_edge, label %if.then

entry.new_alloc_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %new_alloc

if.then:                                          ; preds = %entry
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %if.then.sock_owned_by_user.exit_crit_edge

if.then.sock_owned_by_user.exit_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %if.then
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !374

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.32, i32 noundef 1750, i32 noundef 9, ptr noundef null) #20
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %if.then.sock_owned_by_user.exit_crit_edge
  %owned.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %1 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %land.end, label %if.end36

land.end:                                         ; preds = %sock_owned_by_user.exit
  %.b94 = load i1, ptr @msg_zerocopy_realloc.__already_done, align 1
  br i1 %.b94, label %land.end.return_crit_edge, label %if.then7, !prof !374

land.end.return_crit_edge:                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then7:                                         ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @msg_zerocopy_realloc.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1216, i32 noundef 9, ptr noundef null) #20
  br label %return

if.end36:                                         ; preds = %sock_owned_by_user.exit
  %bytelen37 = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 1, i32 0, i32 3
  %3 = ptrtoint ptr %bytelen37 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %bytelen37, align 4
  %add = add i32 %4, %size
  %len = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 1, i32 0, i32 1
  %5 = ptrtoint ptr %len to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -2, i16 %6)
  %cmp = icmp eq i16 %6, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 524288, i32 %add)
  %cmp39 = icmp ugt i32 %add, 524288
  %or.cond = select i1 %cmp, i1 true, i1 %cmp39
  br i1 %or.cond, label %cleanup, label %if.end47

if.end47:                                         ; preds = %if.end36
  %7 = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 1
  %sk_zckey = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 68
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_zckey, i32 noundef 4) #20
  %8 = ptrtoint ptr %sk_zckey to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %sk_zckey, align 4
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %7, align 4
  %12 = ptrtoint ptr %len to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %len, align 4
  %conv50 = zext i16 %13 to i32
  %add51 = add i32 %11, %conv50
  call void @__sanitizer_cov_trace_cmp4(i32 %add51, i32 %9)
  %cmp52 = icmp eq i32 %add51, %9
  br i1 %cmp52, label %if.then54, label %if.end47.new_alloc_crit_edge

if.end47.new_alloc_crit_edge:                     ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %new_alloc

if.then54:                                        ; preds = %if.end47
  %mmp = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 4
  %call55 = tail call i32 @mm_account_pinned_pages(ptr noundef %mmp, i32 noundef %size)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.end58, label %if.then54.return_crit_edge

if.then54.return_crit_edge:                       ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end58:                                         ; preds = %if.then54
  %14 = ptrtoint ptr %len to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %len, align 4
  %inc = add i16 %15, 1
  store i16 %inc, ptr %len, align 4
  %16 = ptrtoint ptr %bytelen37 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %add, ptr %bytelen37, align 4
  %inc62 = add i32 %9, 1
  %call.i.i96 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_zckey, i32 noundef 4) #20
  %17 = ptrtoint ptr %sk_zckey to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 %inc62, ptr %sk_zckey, align 4
  %sk_type63 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %18 = ptrtoint ptr %sk_type63 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %sk_type63, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %19)
  %cmp65 = icmp eq i16 %19, 1
  br i1 %cmp65, label %if.then67, label %if.end58.return_crit_edge

if.end58.return_crit_edge:                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then67:                                        ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @net_zcopy_get(ptr noundef nonnull %uarg)
  br label %return

cleanup:                                          ; preds = %if.end36
  %sk_type = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %20 = ptrtoint ptr %sk_type to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %sk_type, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %21)
  %cmp43.not = icmp eq i16 %21, 1
  br i1 %cmp43.not, label %cleanup.new_alloc_crit_edge, label %cleanup.return_crit_edge

cleanup.return_crit_edge:                         ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

cleanup.new_alloc_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %new_alloc

new_alloc:                                        ; preds = %cleanup.new_alloc_crit_edge, %if.end47.new_alloc_crit_edge, %entry.new_alloc_crit_edge
  %call73 = tail call ptr @msg_zerocopy_alloc(ptr noundef %sk, i32 noundef %size)
  br label %return

return:                                           ; preds = %new_alloc, %cleanup.return_crit_edge, %if.then67, %if.end58.return_crit_edge, %if.then54.return_crit_edge, %if.then7, %land.end.return_crit_edge
  %retval.1 = phi ptr [ null, %cleanup.return_crit_edge ], [ %call73, %new_alloc ], [ %uarg, %if.end58.return_crit_edge ], [ %uarg, %if.then67 ], [ null, %if.then54.return_crit_edge ], [ null, %land.end.return_crit_edge ], [ null, %if.then7 ]
  ret ptr %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @net_zcopy_get(ptr noundef %uarg) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %refcnt = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 2
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #20
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 1, ptr elementtype(i32) %refcnt) #20, !srcloc !402
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %entry.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !373

entry.if.end15.sink.split.i.i.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %entry
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.refcount_inc.exit_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !374

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %entry.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %entry.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt, i32 noundef %.sink.i.i.i) #20
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.refcount_inc.exit_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @refcount_dec_and_test(ptr noundef %r) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %r, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %r, i32 1, i32 3, i32 1) #20
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %r, ptr %r, i32 1, ptr elementtype(i32) %r) #20, !srcloc !380
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 1
  br i1 %cmp.i.i, label %do.end.i.i, label %if.end5.i.i

do.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  br label %__refcount_dec_and_test.exit

if.end5.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %.not.i.i = icmp sgt i32 %asmresult.i.i.i.i.i, 0
  br i1 %.not.i.i, label %if.end5.i.i.__refcount_dec_and_test.exit_crit_edge, label %if.then10.i.i, !prof !374

if.end5.i.i.__refcount_dec_and_test.exit_crit_edge: ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__refcount_dec_and_test.exit

if.then10.i.i:                                    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %r, i32 noundef 3) #20
  br label %__refcount_dec_and_test.exit

__refcount_dec_and_test.exit:                     ; preds = %if.then10.i.i, %if.end5.i.i.__refcount_dec_and_test.exit_crit_edge, %do.end.i.i
  ret i1 %cmp.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @msg_zerocopy_put_abort(ptr noundef %uarg, i1 noundef zeroext %have_uref) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr i8, ptr %uarg, i32 -12
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %sk_zckey = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 68
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_zckey, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %sk_zckey, i32 1, i32 3, i32 1) #20
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_zckey, ptr %sk_zckey, i32 1, ptr elementtype(i32) %sk_zckey) #20, !srcloc !407
  %len = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 1, i32 0, i32 1
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %len, align 4
  %dec = add i16 %5, -1
  store i16 %dec, ptr %len, align 4
  br i1 %have_uref, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @msg_zerocopy_callback(ptr undef, ptr noundef %uarg, i1 noundef zeroext true)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_zerocopy_iter_dgram(ptr noundef %skb, ptr noundef %msg, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %msg_iter = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 2
  %call = tail call i32 @__zerocopy_sg_from_iter(ptr noundef %2, ptr noundef %skb, ptr noundef %msg_iter, i32 noundef %len) #20
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__zerocopy_sg_from_iter(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_zerocopy_iter_stream(ptr noundef %sk, ptr noundef %skb, ptr noundef %msg, i32 noundef %len, ptr noundef %uarg) #0 align 64 {
entry:
  %orig_iter = alloca %struct.iov_iter, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i, label %entry.skb_zcopy.exit_crit_edge, label %land.rhs.i

entry.skb_zcopy.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy.exit

land.rhs.i:                                       ; preds = %entry
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %1, align 8
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool1.not.i = icmp eq i8 %4, 0
  br i1 %tobool1.not.i, label %land.rhs.i.skb_zcopy.exit_crit_edge, label %cond.true.i

land.rhs.i.skb_zcopy.exit_crit_edge:              ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy.exit

cond.true.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  %destructor_arg.i = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 11
  %5 = ptrtoint ptr %destructor_arg.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %destructor_arg.i, align 4
  br label %skb_zcopy.exit

skb_zcopy.exit:                                   ; preds = %cond.true.i, %land.rhs.i.skb_zcopy.exit_crit_edge, %entry.skb_zcopy.exit_crit_edge
  %cond.i = phi ptr [ %6, %cond.true.i ], [ null, %land.rhs.i.skb_zcopy.exit_crit_edge ], [ null, %entry.skb_zcopy.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %orig_iter)
  %msg_iter = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 2
  %7 = call ptr @memcpy(ptr %orig_iter, ptr %msg_iter, i32 24)
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %8 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len1, align 4
  %tobool.not = icmp eq ptr %cond.i, null
  %cmp.not = icmp eq ptr %cond.i, %uarg
  %or.cond = or i1 %tobool.not, %cmp.not
  br i1 %or.cond, label %if.end, label %skb_zcopy.exit.cleanup_crit_edge

skb_zcopy.exit.cleanup_crit_edge:                 ; preds = %skb_zcopy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %skb_zcopy.exit
  %call3 = tail call i32 @__zerocopy_sg_from_iter(ptr noundef %sk, ptr noundef %skb, ptr noundef %msg_iter, i32 noundef %len) #20
  %10 = zext i32 %call3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.47)
  switch i32 %call3, label %if.end.if.end12_crit_edge [
    i32 -14, label %if.end.if.then9_crit_edge
    i32 -90, label %land.lhs.true6
  ]

if.end.if.then9_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then9

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

land.lhs.true6:                                   ; preds = %if.end
  %11 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %len1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %9)
  %cmp8 = icmp eq i32 %12, %9
  br i1 %cmp8, label %land.lhs.true6.if.then9_crit_edge, label %land.lhs.true6.if.end12_crit_edge

land.lhs.true6.if.end12_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

land.lhs.true6.if.then9_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then9

if.then9:                                         ; preds = %land.lhs.true6.if.then9_crit_edge, %if.end.if.then9_crit_edge
  %13 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %16 = call ptr @memcpy(ptr %msg_iter, ptr %orig_iter, i32 24)
  store ptr %sk, ptr %13, align 4
  %call11 = tail call i32 @___pskb_trim(ptr noundef %skb, i32 noundef %9)
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %15, ptr %13, align 4
  br label %cleanup

if.end12:                                         ; preds = %land.lhs.true6.if.end12_crit_edge, %if.end.if.end12_crit_edge
  %tobool1.not.i36 = icmp eq ptr %uarg, null
  %or.cond.i = or i1 %tobool.not.i, %tobool1.not.i36
  br i1 %or.cond.i, label %if.end12.skb_zcopy_set.exit_crit_edge, label %land.rhs.i.i

if.end12.skb_zcopy_set.exit_crit_edge:            ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy_set.exit

land.rhs.i.i:                                     ; preds = %if.end12
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %18 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %end.i.i.i, align 4
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %19, align 8
  %22 = and i8 %21, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool1.not.i.i = icmp eq i8 %22, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.if.else.i_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.if.else.i_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else.i

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 11
  %23 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool3.not.i = icmp eq ptr %24, null
  br i1 %tobool3.not.i, label %skb_zcopy.exit.i.if.else.i_crit_edge, label %skb_zcopy.exit.i.skb_zcopy_set.exit_crit_edge

skb_zcopy.exit.i.skb_zcopy_set.exit_crit_edge:    ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy_set.exit

skb_zcopy.exit.i.if.else.i_crit_edge:             ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else.i

if.else.i:                                        ; preds = %skb_zcopy.exit.i.if.else.i_crit_edge, %land.rhs.i.i.if.else.i_crit_edge
  %refcnt.i.i = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 2
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #20
  %25 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %25, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.else.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !373

if.else.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.else.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %26 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %26)
  %.not.i.i.i.i.i = icmp sgt i32 %26, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.net_zcopy_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.net_zcopy_get.exit.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %net_zcopy_get.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.else.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.else.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #20
  br label %net_zcopy_get.exit.i

net_zcopy_get.exit.i:                             ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.net_zcopy_get.exit.i_crit_edge
  %27 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %end.i.i.i, align 4
  %destructor_arg.i2.i = getelementptr inbounds %struct.skb_shared_info, ptr %28, i32 0, i32 11
  %29 = ptrtoint ptr %destructor_arg.i2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %uarg, ptr %destructor_arg.i2.i, align 4
  %flags.i.i = getelementptr inbounds %struct.ubuf_info, ptr %uarg, i32 0, i32 3
  %30 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %flags.i.i, align 4
  %32 = load ptr, ptr %end.i.i.i, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %32, align 8
  %or7.i.i = or i8 %34, %31
  store i8 %or7.i.i, ptr %32, align 8
  br label %skb_zcopy_set.exit

skb_zcopy_set.exit:                               ; preds = %net_zcopy_get.exit.i, %skb_zcopy.exit.i.skb_zcopy_set.exit_crit_edge, %if.end12.skb_zcopy_set.exit_crit_edge
  %35 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %len1, align 4
  %sub = sub i32 %36, %9
  br label %cleanup

cleanup:                                          ; preds = %skb_zcopy_set.exit, %if.then9, %skb_zcopy.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.then9 ], [ %sub, %skb_zcopy_set.exit ], [ -17, %skb_zcopy.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %orig_iter)
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @___pskb_trim(ptr noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %1, %3
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %4 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %7 to i32
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %8 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %skb_cloned.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_cloned.exit:                                  ; preds = %entry
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %9 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %10, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i.not, label %skb_cloned.exit.if.end_crit_edge, label %land.lhs.true

skb_cloned.exit.if.end_crit_edge:                 ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %skb_cloned.exit
  %call3 = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef 0, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup103_crit_edge, !prof !374

land.lhs.true.cleanup103_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup103

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %skb_cloned.exit.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %len)
  %cmp.not = icmp ult i32 %sub.i, %len
  br i1 %cmp.not, label %for.cond.preheader, label %if.end.drop_pages_crit_edge

if.end.drop_pages_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %drop_pages

for.cond.preheader:                               ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp10217.not = icmp eq i8 %7, 0
  br i1 %cmp10217.not, label %for.cond.preheader.for.end34_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end34_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end34

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %11 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %end.i, align 4
  br label %for.body

for.body:                                         ; preds = %if.then16.for.body_crit_edge, %for.body.lr.ph
  %i.0219 = phi i32 [ 0, %for.body.lr.ph ], [ %inc33, %if.then16.for.body_crit_edge ]
  %offset.0218 = phi i32 [ %sub.i, %for.body.lr.ph ], [ %add, %if.then16.for.body_crit_edge ]
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0219, i32 1
  %13 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %bv_len.i, align 4
  %add = add i32 %14, %offset.0218
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %len)
  %cmp14 = icmp ult i32 %add, %len
  %inc33 = add nuw nsw i32 %i.0219, 1
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %for.body
  %exitcond.not = icmp eq i32 %inc33, %conv
  br i1 %exitcond.not, label %if.then16.for.end34_crit_edge, label %if.then16.for.body_crit_edge

if.then16.for.body_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.then16.for.end34_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end34

if.end17:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %sub = sub i32 %len, %offset.0218
  %15 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %sub, ptr %bv_len.i, align 4
  br label %drop_pages

drop_pages:                                       ; preds = %if.end17, %if.end.drop_pages_crit_edge
  %i.1 = phi i32 [ 0, %if.end.drop_pages_crit_edge ], [ %inc33, %if.end17 ]
  %conv21 = trunc i32 %i.1 to i8
  %16 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %end.i, align 4
  %nr_frags23 = getelementptr inbounds %struct.skb_shared_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %nr_frags23 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv21, ptr %nr_frags23, align 2
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1, i32 %conv)
  %cmp25220 = icmp slt i32 %i.1, %conv
  br i1 %cmp25220, label %drop_pages.for.body27_crit_edge, label %drop_pages.for.end_crit_edge

drop_pages.for.end_crit_edge:                     ; preds = %drop_pages
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

drop_pages.for.body27_crit_edge:                  ; preds = %drop_pages
  br label %for.body27

for.body27:                                       ; preds = %for.body27.for.body27_crit_edge, %drop_pages.for.body27_crit_edge
  %i.2221 = phi i32 [ %inc28, %for.body27.for.body27_crit_edge ], [ %i.1, %drop_pages.for.body27_crit_edge ]
  %19 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %end.i, align 4
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %20, i32 0, i32 12, i32 %i.2221
  %21 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %bf.load.i173 = load i8, ptr %cloned.i, align 2
  %bf.clear.i = and i8 %bf.load.i173, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear.i)
  %tobool.i = icmp ne i8 %bf.clear.i, 0
  tail call fastcc void @__skb_frag_unref(ptr noundef %arrayidx.i, i1 noundef zeroext %tobool.i) #20
  %inc28 = add nuw nsw i32 %i.2221, 1
  %exitcond229.not = icmp eq i32 %inc28, %conv
  br i1 %exitcond229.not, label %for.body27.for.end_crit_edge, label %for.body27.for.body27_crit_edge

for.body27.for.body27_crit_edge:                  ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body27

for.body27.for.end_crit_edge:                     ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %for.body27.for.end_crit_edge, %drop_pages.for.end_crit_edge
  %22 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %end.i, align 4
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %23, i32 0, i32 6
  %24 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %frag_list.i, align 8
  %cmp.i175.not = icmp eq ptr %25, null
  br i1 %cmp.i175.not, label %for.end.done_crit_edge, label %for.end.while.body.i.i.i_crit_edge

for.end.while.body.i.i.i_crit_edge:               ; preds = %for.end
  br label %while.body.i.i.i

for.end.done_crit_edge:                           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %done

while.body.i.i.i:                                 ; preds = %while.body.i.i.i.while.body.i.i.i_crit_edge, %for.end.while.body.i.i.i_crit_edge
  %segs.addr.05.i.i.i = phi ptr [ %27, %while.body.i.i.i.while.body.i.i.i_crit_edge ], [ %25, %for.end.while.body.i.i.i_crit_edge ]
  %26 = ptrtoint ptr %segs.addr.05.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %segs.addr.05.i.i.i, align 8
  tail call fastcc void @kfree_skb(ptr noundef nonnull %segs.addr.05.i.i.i) #20
  %tobool.not.i.i.i = icmp eq ptr %27, null
  br i1 %tobool.not.i.i.i, label %while.body.i.i.i.done.sink.split_crit_edge, label %while.body.i.i.i.while.body.i.i.i_crit_edge

while.body.i.i.i.while.body.i.i.i_crit_edge:      ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.i.i

while.body.i.i.i.done.sink.split_crit_edge:       ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %done.sink.split

for.end34:                                        ; preds = %if.then16.for.end34_crit_edge, %for.cond.preheader.for.end34_crit_edge
  %offset.0.lcssa = phi i32 [ %sub.i, %for.cond.preheader.for.end34_crit_edge ], [ %add, %if.then16.for.end34_crit_edge ]
  %28 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %end.i, align 4
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 6
  br label %for.cond36

for.cond36:                                       ; preds = %if.end58.for.cond36_crit_edge, %for.end34
  %fragp.0 = phi ptr [ %frag_list, %for.end34 ], [ %frag.1, %if.end58.for.cond36_crit_edge ]
  %offset.1 = phi i32 [ %offset.0.lcssa, %for.end34 ], [ %add41, %if.end58.for.cond36_crit_edge ]
  %30 = ptrtoint ptr %fragp.0 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %fragp.0, align 4
  %tobool37.not = icmp eq ptr %31, null
  br i1 %tobool37.not, label %for.cond36.done_crit_edge, label %for.body38

for.cond36.done_crit_edge:                        ; preds = %for.cond36
  call void @__sanitizer_cov_trace_pc() #22
  br label %done

for.body38:                                       ; preds = %for.cond36
  %len40 = getelementptr inbounds %struct.sk_buff, ptr %31, i32 0, i32 6
  %32 = ptrtoint ptr %len40 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %len40, align 4
  %add41 = add i32 %33, %offset.1
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %31, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %34 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %cmp.i179.not = icmp eq i32 %35, 1
  br i1 %cmp.i179.not, label %for.body38.if.end58_crit_edge, label %if.then44

for.body38.if.end58_crit_edge:                    ; preds = %for.body38
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end58

if.then44:                                        ; preds = %for.body38
  %call45 = tail call ptr @skb_clone(ptr noundef nonnull %31, i32 noundef 2592)
  %tobool46.not = icmp eq ptr %call45, null
  br i1 %tobool46.not, label %if.then44.cleanup103_crit_edge, label %cleanup, !prof !373

if.then44.cleanup103_crit_edge:                   ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup103

cleanup:                                          ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #22
  %36 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %31, align 8
  %38 = ptrtoint ptr %call45 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %call45, align 8
  tail call void @consume_skb(ptr noundef nonnull %31)
  %39 = ptrtoint ptr %fragp.0 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %call45, ptr %fragp.0, align 4
  br label %if.end58

if.end58:                                         ; preds = %cleanup, %for.body38.if.end58_crit_edge
  %frag.1 = phi ptr [ %call45, %cleanup ], [ %31, %for.body38.if.end58_crit_edge ]
  %cmp59 = icmp ult i32 %add41, %len
  br i1 %cmp59, label %if.end58.for.cond36_crit_edge, label %if.end62

if.end58.for.cond36_crit_edge:                    ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond36

if.end62:                                         ; preds = %if.end58
  call void @__sanitizer_cov_trace_cmp4(i32 %add41, i32 %len)
  %cmp63 = icmp ugt i32 %add41, %len
  br i1 %cmp63, label %land.lhs.true65, label %if.end62.if.end76_crit_edge

if.end62.if.end76_crit_edge:                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end76

land.lhs.true65:                                  ; preds = %if.end62
  %sub66 = sub i32 %len, %offset.1
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %frag.1, i32 0, i32 6
  %40 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %len1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %41, i32 %sub66)
  %cmp.i180 = icmp ugt i32 %41, %sub66
  br i1 %cmp.i180, label %cond.true.i, label %land.lhs.true65.if.end76_crit_edge

land.lhs.true65.if.end76_crit_edge:               ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end76

cond.true.i:                                      ; preds = %land.lhs.true65
  %data_len.i192 = getelementptr inbounds %struct.sk_buff, ptr %frag.1, i32 0, i32 7
  %42 = ptrtoint ptr %data_len.i192 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %data_len.i192, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i193 = icmp eq i32 %43, 0
  br i1 %tobool.not.i193, label %__skb_trim.exit.i, label %pskb_trim.exit

__skb_trim.exit.i:                                ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %44 = ptrtoint ptr %len1.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %sub66, ptr %len1.i, align 4
  %data.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %frag.1, i32 0, i32 19
  %45 = ptrtoint ptr %data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %data.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %46, i32 %sub66
  %tail.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %frag.1, i32 0, i32 16
  %47 = ptrtoint ptr %tail.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %add.ptr.i.i.i.i, ptr %tail.i.i.i.i, align 8
  br label %if.end76

pskb_trim.exit:                                   ; preds = %cond.true.i
  %call.i194 = tail call i32 @___pskb_trim(ptr noundef nonnull %frag.1, i32 noundef %sub66) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i194)
  %tobool68.not = icmp eq i32 %call.i194, 0
  br i1 %tobool68.not, label %pskb_trim.exit.if.end76_crit_edge, label %pskb_trim.exit.cleanup103_crit_edge, !prof !374

pskb_trim.exit.cleanup103_crit_edge:              ; preds = %pskb_trim.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup103

pskb_trim.exit.if.end76_crit_edge:                ; preds = %pskb_trim.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end76

if.end76:                                         ; preds = %pskb_trim.exit.if.end76_crit_edge, %__skb_trim.exit.i, %land.lhs.true65.if.end76_crit_edge, %if.end62.if.end76_crit_edge
  %48 = ptrtoint ptr %frag.1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %frag.1, align 8
  %tobool78.not = icmp eq ptr %49, null
  br i1 %tobool78.not, label %if.end76.done_crit_edge, label %if.end76.while.body.i.i_crit_edge

if.end76.while.body.i.i_crit_edge:                ; preds = %if.end76
  br label %while.body.i.i

if.end76.done_crit_edge:                          ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #22
  br label %done

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %if.end76.while.body.i.i_crit_edge
  %segs.addr.05.i.i = phi ptr [ %51, %while.body.i.i.while.body.i.i_crit_edge ], [ %49, %if.end76.while.body.i.i_crit_edge ]
  %50 = ptrtoint ptr %segs.addr.05.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %segs.addr.05.i.i, align 8
  tail call fastcc void @kfree_skb(ptr noundef nonnull %segs.addr.05.i.i) #20
  %tobool.not.i.i = icmp eq ptr %51, null
  br i1 %tobool.not.i.i, label %while.body.i.i.done.sink.split_crit_edge, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.i

while.body.i.i.done.sink.split_crit_edge:         ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %done.sink.split

done.sink.split:                                  ; preds = %while.body.i.i.done.sink.split_crit_edge, %while.body.i.i.i.done.sink.split_crit_edge
  %frag.1.lcssa.sink = phi ptr [ %frag.1, %while.body.i.i.done.sink.split_crit_edge ], [ %frag_list.i, %while.body.i.i.i.done.sink.split_crit_edge ]
  %52 = ptrtoint ptr %frag.1.lcssa.sink to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr null, ptr %frag.1.lcssa.sink, align 4
  br label %done

done:                                             ; preds = %done.sink.split, %if.end76.done_crit_edge, %for.cond36.done_crit_edge, %for.end.done_crit_edge
  %53 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %len.i, align 4
  %55 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %data_len.i, align 8
  %sub.i183 = sub i32 %54, %56
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i183, i32 %len)
  %cmp88 = icmp ult i32 %sub.i183, %len
  br i1 %cmp88, label %if.then90, label %if.else

if.then90:                                        ; preds = %done
  call void @__sanitizer_cov_trace_pc() #22
  %sub92.neg = sub i32 %len, %54
  %sub93 = add i32 %sub92.neg, %56
  %57 = ptrtoint ptr %data_len.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %sub93, ptr %data_len.i, align 8
  %58 = ptrtoint ptr %len.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %len, ptr %len.i, align 4
  br label %if.end97

if.else:                                          ; preds = %done
  call void @__sanitizer_cov_trace_pc() #22
  %59 = ptrtoint ptr %len.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %len, ptr %len.i, align 4
  %60 = ptrtoint ptr %data_len.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %data_len.i, align 8
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %61 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %62, i32 %len
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %63 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %add.ptr.i, ptr %tail.i, align 8
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then90
  %64 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %64, align 4
  %tobool98.not = icmp eq ptr %66, null
  br i1 %tobool98.not, label %if.end97.if.then101_crit_edge, label %lor.lhs.false

if.end97.if.then101_crit_edge:                    ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then101

lor.lhs.false:                                    ; preds = %if.end97
  %destructor = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %67 = ptrtoint ptr %destructor to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %destructor, align 4
  %cmp99 = icmp eq ptr %68, @sock_edemux
  br i1 %cmp99, label %lor.lhs.false.if.then101_crit_edge, label %lor.lhs.false.cleanup103_crit_edge

lor.lhs.false.cleanup103_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup103

lor.lhs.false.if.then101_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then101

if.then101:                                       ; preds = %lor.lhs.false.if.then101_crit_edge, %if.end97.if.then101_crit_edge
  %69 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool.not.i185 = icmp eq i32 %70, 0
  br i1 %tobool.not.i185, label %if.then101.if.end6.i_crit_edge, label %if.then.i

if.then101.if.end6.i_crit_edge:                   ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6.i

if.then.i:                                        ; preds = %if.then101
  %71 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %end.i, align 4
  %tail.i187 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %73 = ptrtoint ptr %tail.i187 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %tail.i187, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %72 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %74 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_cmp4(i32 %70, i32 %sub.ptr.sub.i)
  %cmp.i188 = icmp ugt i32 %70, %sub.ptr.sub.i
  br i1 %cmp.i188, label %if.then.i.cleanup103_crit_edge, label %lor.lhs.false.i

if.then.i.cleanup103_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup103

lor.lhs.false.i:                                  ; preds = %if.then.i
  %75 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %75)
  %bf.load.i.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i189 = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i189, label %lor.lhs.false.i.if.end.i_crit_edge, label %skb_cloned.exit.i

lor.lhs.false.i.if.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

skb_cloned.exit.i:                                ; preds = %lor.lhs.false.i
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %72, i32 0, i32 10
  %call.i.i.i.i190 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #20
  %76 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i.i = and i32 %77, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp.i.not.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp.i.not.i, label %skb_cloned.exit.i.if.end.i_crit_edge, label %skb_cloned.exit.i.cleanup103_crit_edge

skb_cloned.exit.i.cleanup103_crit_edge:           ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup103

skb_cloned.exit.i.if.end.i_crit_edge:             ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.end.i:                                         ; preds = %skb_cloned.exit.i.if.end.i_crit_edge, %lor.lhs.false.i.if.end.i_crit_edge
  %78 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %data_len.i, align 8
  %call5.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %79) #20
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.end.i, %if.then101.if.end6.i_crit_edge
  %80 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %end.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %82 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %81 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %83 to i32
  %sub.ptr.sub.i.i = add i32 %sub.ptr.lhs.cast.i.i, 512
  %add8.i = sub i32 %sub.ptr.sub.i.i, %sub.ptr.rhs.cast.i.i
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %84 = ptrtoint ptr %truesize.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %add8.i, ptr %truesize.i, align 8
  br label %cleanup103

cleanup103:                                       ; preds = %if.end6.i, %skb_cloned.exit.i.cleanup103_crit_edge, %if.then.i.cleanup103_crit_edge, %lor.lhs.false.cleanup103_crit_edge, %pskb_trim.exit.cleanup103_crit_edge, %if.then44.cleanup103_crit_edge, %land.lhs.true.cleanup103_crit_edge
  %retval.4 = phi i32 [ %call3, %land.lhs.true.cleanup103_crit_edge ], [ 0, %lor.lhs.false.cleanup103_crit_edge ], [ 0, %if.then.i.cleanup103_crit_edge ], [ 0, %skb_cloned.exit.i.cleanup103_crit_edge ], [ 0, %if.end6.i ], [ %call.i194, %pskb_trim.exit.cleanup103_crit_edge ], [ -12, %if.then44.cleanup103_crit_edge ]
  ret i32 %retval.4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_copy_ubufs(ptr noundef %skb, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %3 to i32
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %4 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i.not = icmp eq i32 %5, 1
  br i1 %cmp.i.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %and.i223 = and i32 %gfp_mask, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i223)
  %tobool.i224.not = icmp eq i32 %and.i223, 0
  br i1 %tobool.i224.not, label %lor.lhs.false.do.end4.i_crit_edge, label %do.body1.i

lor.lhs.false.do.end4.i_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end4.i

do.body1.i:                                       ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__might_sleep(ptr noundef nonnull @.str.31, i32 noundef 1719) #20
  br label %do.end4.i

do.end4.i:                                        ; preds = %do.body1.i, %lor.lhs.false.do.end4.i_crit_edge
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %6 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load.i219 = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i219)
  %tobool.not.i220 = icmp sgt i8 %bf.load.i219, -1
  br i1 %tobool.not.i220, label %do.end4.i.if.end_crit_edge, label %skb_cloned.exit

do.end4.i.if.end_crit_edge:                       ; preds = %do.end4.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_cloned.exit:                                  ; preds = %do.end4.i
  %7 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %end.i, align 4
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %8, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %9 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %10, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i222.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i222.not, label %skb_cloned.exit.if.end_crit_edge, label %skb_unclone.exit

skb_cloned.exit.if.end_crit_edge:                 ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_unclone.exit:                                 ; preds = %skb_cloned.exit
  %call7.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef 0, i32 noundef %gfp_mask) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool3.not = icmp eq i32 %call7.i, 0
  br i1 %tobool3.not, label %skb_unclone.exit.if.end_crit_edge, label %skb_unclone.exit.cleanup_crit_edge

skb_unclone.exit.cleanup_crit_edge:               ; preds = %skb_unclone.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_unclone.exit.if.end_crit_edge:                ; preds = %skb_unclone.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %skb_unclone.exit.if.end_crit_edge, %skb_cloned.exit.if.end_crit_edge, %do.end4.i.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool4.not = icmp eq i8 %3, 0
  br i1 %tobool4.not, label %if.end.release_crit_edge, label %if.end6

if.end.release_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %release

if.end6:                                          ; preds = %if.end
  %11 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %end.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %cmp10.not.i = icmp eq i8 %14, 0
  br i1 %cmp10.not.i, label %if.end6.for.body17.preheader_crit_edge, label %for.body.preheader.i

if.end6.for.body17.preheader_crit_edge:           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body17.preheader

for.body.preheader.i:                             ; preds = %if.end6
  %conv.i173 = zext i8 %14 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.012.in.i = phi i32 [ %i.012.i, %for.body.i.for.body.i_crit_edge ], [ %conv.i173, %for.body.preheader.i ]
  %len.011.i = phi i32 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %i.012.i = add nsw i32 %i.012.in.i, -1
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.012.i, i32 1
  %15 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %bv_len.i.i, align 4
  %add.i = add i32 %16, %len.011.i
  %cmp.i174 = icmp ugt i32 %i.012.in.i, 1
  br i1 %cmp.i174, label %for.body.i.for.body.i_crit_edge, label %__skb_pagelen.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

__skb_pagelen.exit:                               ; preds = %for.body.i
  %sub = add i32 %add.i, 4095
  %shr = lshr i32 %sub, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub)
  %cmp230.not = icmp ult i32 %sub, 4096
  br i1 %cmp230.not, label %__skb_pagelen.exit.for.body17.preheader_crit_edge, label %for.body.preheader

__skb_pagelen.exit.for.body17.preheader_crit_edge: ; preds = %__skb_pagelen.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body17.preheader

for.body.preheader:                               ; preds = %__skb_pagelen.exit
  %umax = tail call i32 @llvm.umax.i32(i32 %shr, i32 1)
  br label %for.body

for.body17.preheader:                             ; preds = %if.end13.for.body17.preheader_crit_edge, %__skb_pagelen.exit.for.body17.preheader_crit_edge, %if.end6.for.body17.preheader_crit_edge
  %shr279 = phi i32 [ %shr, %__skb_pagelen.exit.for.body17.preheader_crit_edge ], [ 0, %if.end6.for.body17.preheader_crit_edge ], [ %shr, %if.end13.for.body17.preheader_crit_edge ]
  %sub278 = phi i32 [ %sub, %__skb_pagelen.exit.for.body17.preheader_crit_edge ], [ 4095, %if.end6.for.body17.preheader_crit_edge ], [ %sub, %if.end13.for.body17.preheader_crit_edge ]
  %head.0.lcssa = phi ptr [ null, %__skb_pagelen.exit.for.body17.preheader_crit_edge ], [ null, %if.end6.for.body17.preheader_crit_edge ], [ %call38.i.i.i, %if.end13.for.body17.preheader_crit_edge ]
  %smax = tail call i32 @llvm.smax.i32(i32 %conv, i32 1)
  br label %for.body17

for.body:                                         ; preds = %if.end13.for.body_crit_edge, %for.body.preheader
  %head.0232 = phi ptr [ %call38.i.i.i, %if.end13.for.body_crit_edge ], [ null, %for.body.preheader ]
  %i.0231 = phi i32 [ %inc, %if.end13.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef %gfp_mask, i32 noundef 0, i32 noundef 0, ptr noundef null) #20
  %tobool10.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool10.not, label %while.cond.preheader, label %if.end13

while.cond.preheader:                             ; preds = %for.body
  %tobool12.not264 = icmp eq ptr %head.0232, null
  br i1 %tobool12.not264, label %while.cond.preheader.cleanup_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.cleanup_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

while.body:                                       ; preds = %put_page.exit.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %head.1265 = phi ptr [ %19, %put_page.exit.while.body_crit_edge ], [ %head.0232, %while.cond.preheader.while.body_crit_edge ]
  %private = getelementptr inbounds %struct.page, ptr %head.1265, i32 0, i32 1, i32 0, i32 3
  %17 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %private, align 4
  %19 = inttoptr i32 %18 to ptr
  %20 = getelementptr inbounds %struct.page, ptr %head.1265, i32 0, i32 1
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  %and.i.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %22, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  %23 = ptrtoint ptr %head.1265 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %23, %if.end.i.i ]
  %24 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %24, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  %25 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp.i.i.i.i = icmp eq i32 %26, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %27 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %27, ptr noundef nonnull @.str.34) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !411
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !393
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %28 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #20, !srcloc !394
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %28, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !395
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@skb_copy_ubufs, %if.then.i.i.i.i.i)) #20
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %24, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #20
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__put_page(ptr noundef %24) #20
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %tobool12.not = icmp eq i32 %18, 0
  br i1 %tobool12.not, label %put_page.exit.cleanup_crit_edge, label %put_page.exit.while.body_crit_edge

put_page.exit.while.body_crit_edge:               ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

put_page.exit.cleanup_crit_edge:                  ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end13:                                         ; preds = %for.body
  %29 = ptrtoint ptr %head.0232 to i32
  %private1.i = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 1, i32 0, i32 3
  %30 = ptrtoint ptr %private1.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %private1.i, align 4
  %inc = add nuw nsw i32 %i.0231, 1
  %exitcond.not = icmp eq i32 %inc, %umax
  br i1 %exitcond.not, label %if.end13.for.body17.preheader_crit_edge, label %if.end13.for.body_crit_edge

if.end13.for.body_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end13.for.body17.preheader_crit_edge:          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body17.preheader

for.body86.preheader:                             ; preds = %for.end79
  %umax270 = tail call i32 @llvm.umax.i32(i32 %conv, i32 1)
  br label %for.body86

for.body17:                                       ; preds = %for.end79.for.body17_crit_edge, %for.body17.preheader
  %page.0253 = phi ptr [ %page.1.lcssa, %for.end79.for.body17_crit_edge ], [ %head.0.lcssa, %for.body17.preheader ]
  %d_off.0252 = phi i32 [ %d_off.1.lcssa, %for.end79.for.body17_crit_edge ], [ 0, %for.body17.preheader ]
  %i.1249 = phi i32 [ %inc81, %for.end79.for.body17_crit_edge ], [ 0, %for.body17.preheader ]
  %31 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %end.i, align 4
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %32, i32 0, i32 12, i32 %i.1249
  %33 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %32, i32 0, i32 12, i32 %i.1249, i32 2
  %35 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %bv_offset.i, align 4
  %shr21 = lshr i32 %36, 12
  %add.ptr = getelementptr %struct.page, ptr %34, i32 %shr21
  %and = and i32 %36, 4095
  %37 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %add.ptr, align 4
  %shr.i.i = lshr i32 %38, 30
  %39 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %39, ptr @__sancov_gen_cov_switch_values.48)
  switch i32 %shr.i.i, label %for.body17.cond.false30_crit_edge [
    i32 2, label %for.body17.cond.true_crit_edge
    i32 3, label %skb_frag_must_loop.exit
  ]

for.body17.cond.true_crit_edge:                   ; preds = %for.body17
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.true

for.body17.cond.false30_crit_edge:                ; preds = %for.body17
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.false30

skb_frag_must_loop.exit:                          ; preds = %for.body17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %40 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %40)
  %cmp2.i.i = icmp eq i32 %40, 2
  br i1 %cmp2.i.i, label %skb_frag_must_loop.exit.cond.true_crit_edge, label %skb_frag_must_loop.exit.cond.false30_crit_edge

skb_frag_must_loop.exit.cond.false30_crit_edge:   ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.false30

skb_frag_must_loop.exit.cond.true_crit_edge:      ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.true

cond.true:                                        ; preds = %skb_frag_must_loop.exit.cond.true_crit_edge, %for.body17.cond.true_crit_edge
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %32, i32 0, i32 12, i32 %i.1249, i32 1
  %41 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %bv_len.i, align 4
  %sub26 = sub nuw nsw i32 4096, %and
  %43 = tail call i32 @llvm.umin.i32(i32 %42, i32 %sub26)
  br label %cond.end32

cond.false30:                                     ; preds = %skb_frag_must_loop.exit.cond.false30_crit_edge, %for.body17.cond.false30_crit_edge
  %bv_len.i177 = getelementptr %struct.skb_shared_info, ptr %32, i32 0, i32 12, i32 %i.1249, i32 1
  %44 = ptrtoint ptr %bv_len.i177 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %bv_len.i177, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false30, %cond.true
  %cond33 = phi i32 [ %43, %cond.true ], [ %45, %cond.false30 ]
  %bv_len.i178 = getelementptr %struct.skb_shared_info, ptr %32, i32 0, i32 12, i32 %i.1249, i32 1
  %46 = ptrtoint ptr %bv_len.i178 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %bv_len.i178, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %cmp36239.not = icmp eq i32 %47, 0
  br i1 %cmp36239.not, label %cond.end32.for.end79_crit_edge, label %cond.end32.for.body38_crit_edge

cond.end32.for.body38_crit_edge:                  ; preds = %cond.end32
  br label %for.body38

cond.end32.for.end79_crit_edge:                   ; preds = %cond.end32
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end79

for.body38:                                       ; preds = %do.end.for.body38_crit_edge, %cond.end32.for.body38_crit_edge
  %page.1245 = phi ptr [ %page.2.lcssa, %do.end.for.body38_crit_edge ], [ %page.0253, %cond.end32.for.body38_crit_edge ]
  %p.0244 = phi ptr [ %incdec.ptr, %do.end.for.body38_crit_edge ], [ %add.ptr, %cond.end32.for.body38_crit_edge ]
  %copied.0243 = phi i32 [ %add69, %do.end.for.body38_crit_edge ], [ 0, %cond.end32.for.body38_crit_edge ]
  %p_len.0242 = phi i32 [ %76, %do.end.for.body38_crit_edge ], [ %cond33, %cond.end32.for.body38_crit_edge ]
  %p_off.0241 = phi i32 [ 0, %do.end.for.body38_crit_edge ], [ %and, %cond.end32.for.body38_crit_edge ]
  %d_off.1240 = phi i32 [ %d_off.2.lcssa, %do.end.for.body38_crit_edge ], [ %d_off.0252, %cond.end32.for.body38_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %48 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %48, 512
  %49 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %52, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %53 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i = and i32 %53, -16384
  %54 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %54, i32 0, i32 2
  %55 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %56, i32 0, i32 213
  %57 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %58, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %p.0244, i32 noundef %or.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %p_len.0242)
  %cmp41233.not = icmp eq i32 %p_len.0242, 0
  br i1 %cmp41233.not, label %for.body38.do.end_crit_edge, label %while.body43.lr.ph

for.body38.do.end_crit_edge:                      ; preds = %for.body38
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

while.body43.lr.ph:                               ; preds = %for.body38
  %add.ptr60 = getelementptr i8, ptr %call.i.i, i32 %p_off.0241
  br label %while.body43

while.body43:                                     ; preds = %if.end48.while.body43_crit_edge, %while.body43.lr.ph
  %done.0236 = phi i32 [ 0, %while.body43.lr.ph ], [ %add62, %if.end48.while.body43_crit_edge ]
  %page.2235 = phi ptr [ %page.1245, %while.body43.lr.ph ], [ %page.3, %if.end48.while.body43_crit_edge ]
  %d_off.2234 = phi i32 [ %d_off.1240, %while.body43.lr.ph ], [ %add63, %if.end48.while.body43_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %d_off.2234)
  %cmp44 = icmp eq i32 %d_off.2234, 4096
  br i1 %cmp44, label %if.then46, label %while.body43.if.end48_crit_edge

while.body43.if.end48_crit_edge:                  ; preds = %while.body43
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end48

if.then46:                                        ; preds = %while.body43
  call void @__sanitizer_cov_trace_pc() #22
  %private47 = getelementptr inbounds %struct.page, ptr %page.2235, i32 0, i32 1, i32 0, i32 3
  %59 = ptrtoint ptr %private47 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %private47, align 4
  %61 = inttoptr i32 %60 to ptr
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %while.body43.if.end48_crit_edge
  %d_off.3 = phi i32 [ 0, %if.then46 ], [ %d_off.2234, %while.body43.if.end48_crit_edge ]
  %page.3 = phi ptr [ %61, %if.then46 ], [ %page.2235, %while.body43.if.end48_crit_edge ]
  %sub49 = sub i32 4096, %d_off.3
  %sub50 = sub i32 %p_len.0242, %done.0236
  %62 = tail call i32 @llvm.umin.i32(i32 %sub49, i32 %sub50)
  %call58 = tail call ptr @page_address(ptr noundef %page.3) #20
  %add.ptr59 = getelementptr i8, ptr %call58, i32 %d_off.3
  %add.ptr61 = getelementptr i8, ptr %add.ptr60, i32 %done.0236
  %63 = call ptr @memcpy(ptr %add.ptr59, ptr %add.ptr61, i32 %62)
  %add62 = add i32 %62, %done.0236
  %add63 = add i32 %62, %d_off.3
  %cmp41 = icmp ugt i32 %p_len.0242, %add62
  br i1 %cmp41, label %if.end48.while.body43_crit_edge, label %if.end48.do.end_crit_edge

if.end48.do.end_crit_edge:                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

if.end48.while.body43_crit_edge:                  ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body43

do.end:                                           ; preds = %if.end48.do.end_crit_edge, %for.body38.do.end_crit_edge
  %d_off.2.lcssa = phi i32 [ %d_off.1240, %for.body38.do.end_crit_edge ], [ %add63, %if.end48.do.end_crit_edge ]
  %page.2.lcssa = phi ptr [ %page.1245, %for.body38.do.end_crit_edge ], [ %page.3, %if.end48.do.end_crit_edge ]
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %64 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 2
  %66 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %67, i32 0, i32 213
  %68 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %69, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %70 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %70, -16384
  %71 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %71, i32 0, i32 1
  %72 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i179 = add i32 %73, -1
  store volatile i32 %sub.i.i179, ptr %preempt_count.i.i.i, align 4
  %add69 = add i32 %p_len.0242, %copied.0243
  %incdec.ptr = getelementptr %struct.page, ptr %p.0244, i32 1
  %74 = ptrtoint ptr %bv_len.i178 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %bv_len.i178, align 4
  %sub71 = sub i32 %75, %add69
  %76 = tail call i32 @llvm.umin.i32(i32 %sub71, i32 4096)
  %cmp36 = icmp ugt i32 %75, %add69
  br i1 %cmp36, label %do.end.for.body38_crit_edge, label %do.end.for.end79_crit_edge

do.end.for.end79_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end79

do.end.for.body38_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body38

for.end79:                                        ; preds = %do.end.for.end79_crit_edge, %cond.end32.for.end79_crit_edge
  %d_off.1.lcssa = phi i32 [ %d_off.0252, %cond.end32.for.end79_crit_edge ], [ %d_off.2.lcssa, %do.end.for.end79_crit_edge ]
  %page.1.lcssa = phi ptr [ %page.0253, %cond.end32.for.end79_crit_edge ], [ %page.2.lcssa, %do.end.for.end79_crit_edge ]
  %inc81 = add nuw nsw i32 %i.1249, 1
  %exitcond269.not = icmp eq i32 %inc81, %smax
  br i1 %exitcond269.not, label %for.body86.preheader, label %for.end79.for.body17_crit_edge

for.end79.for.body17_crit_edge:                   ; preds = %for.end79
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body17

for.cond90.preheader:                             ; preds = %for.body86
  %sub91 = add nsw i32 %shr279, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 8191, i32 %sub278)
  %cmp92257 = icmp ugt i32 %sub278, 8191
  br i1 %cmp92257, label %for.body94.preheader, label %for.cond90.preheader.for.end98_crit_edge

for.cond90.preheader.for.end98_crit_edge:         ; preds = %for.cond90.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end98

for.body94.preheader:                             ; preds = %for.cond90.preheader
  %smax272 = tail call i32 @llvm.smax.i32(i32 %sub91, i32 1)
  br label %for.body94

for.body86:                                       ; preds = %for.body86.for.body86_crit_edge, %for.body86.preheader
  %i.2256 = phi i32 [ %inc88, %for.body86.for.body86_crit_edge ], [ 0, %for.body86.preheader ]
  %77 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %end.i, align 4
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %78, i32 0, i32 12, i32 %i.2256
  %79 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  %bf.clear.i = and i8 %bf.load.i, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear.i)
  %tobool.i = icmp ne i8 %bf.clear.i, 0
  tail call fastcc void @__skb_frag_unref(ptr noundef %arrayidx.i, i1 noundef zeroext %tobool.i) #20
  %inc88 = add nuw nsw i32 %i.2256, 1
  %exitcond271.not = icmp eq i32 %inc88, %umax270
  br i1 %exitcond271.not, label %for.cond90.preheader, label %for.body86.for.body86_crit_edge

for.body86.for.body86_crit_edge:                  ; preds = %for.body86
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body86

for.body94:                                       ; preds = %__skb_fill_page_desc.exit.for.body94_crit_edge, %for.body94.preheader
  %head.2259 = phi ptr [ %97, %__skb_fill_page_desc.exit.for.body94_crit_edge ], [ %head.0.lcssa, %for.body94.preheader ]
  %i.3258 = phi i32 [ %inc97, %__skb_fill_page_desc.exit.for.body94_crit_edge ], [ 0, %for.body94.preheader ]
  %80 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %end.i, align 4
  %arrayidx.i183 = getelementptr %struct.skb_shared_info, ptr %81, i32 0, i32 12, i32 %i.3258
  %82 = ptrtoint ptr %arrayidx.i183 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %head.2259, ptr %arrayidx.i183, align 4
  %bv_offset.i184 = getelementptr %struct.skb_shared_info, ptr %81, i32 0, i32 12, i32 %i.3258, i32 2
  %83 = ptrtoint ptr %bv_offset.i184 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 0, ptr %bv_offset.i184, align 4
  %bv_len.i.i185 = getelementptr %struct.skb_shared_info, ptr %81, i32 0, i32 12, i32 %i.3258, i32 1
  %84 = ptrtoint ptr %bv_len.i.i185 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 4096, ptr %bv_len.i.i185, align 4
  %85 = getelementptr inbounds %struct.page, ptr %head.2259, i32 0, i32 1
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %85, align 4
  %and.i.i186 = and i32 %87, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i186)
  %tobool.not.i.i187 = icmp eq i32 %and.i.i186, 0
  br i1 %tobool.not.i.i187, label %if.end.i.i190, label %if.then.i.i189, !prof !374

if.then.i.i189:                                   ; preds = %for.body94
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i188 = add i32 %87, -1
  br label %_compound_head.exit.i192

if.end.i.i190:                                    ; preds = %for.body94
  call void @__sanitizer_cov_trace_pc() #22
  %88 = ptrtoint ptr %head.2259 to i32
  br label %_compound_head.exit.i192

_compound_head.exit.i192:                         ; preds = %if.end.i.i190, %if.then.i.i189
  %retval.0.i.i191 = phi i32 [ %sub.i.i188, %if.then.i.i189 ], [ %88, %if.end.i.i190 ]
  %89 = inttoptr i32 %retval.0.i.i191 to ptr
  %90 = getelementptr inbounds %struct.page, ptr %89, i32 0, i32 1
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %90, align 4
  %93 = ptrtoint ptr %92 to i32
  %and.i8.i = and i32 %93, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i)
  %tobool.i.not.i = icmp eq i32 %and.i8.i, 0
  br i1 %tobool.i.not.i, label %_compound_head.exit.i192.__skb_fill_page_desc.exit_crit_edge, label %if.then.i

_compound_head.exit.i192.__skb_fill_page_desc.exit_crit_edge: ; preds = %_compound_head.exit.i192
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_fill_page_desc.exit

if.then.i:                                        ; preds = %_compound_head.exit.i192
  call void @__sanitizer_cov_trace_pc() #22
  %94 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %94)
  %bf.load.i193 = load i8, ptr %cloned.i, align 2
  %bf.set.i = or i8 %bf.load.i193, 2
  store i8 %bf.set.i, ptr %cloned.i, align 2
  br label %__skb_fill_page_desc.exit

__skb_fill_page_desc.exit:                        ; preds = %if.then.i, %_compound_head.exit.i192.__skb_fill_page_desc.exit_crit_edge
  %private95 = getelementptr inbounds %struct.page, ptr %head.2259, i32 0, i32 1, i32 0, i32 3
  %95 = ptrtoint ptr %private95 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %private95, align 4
  %97 = inttoptr i32 %96 to ptr
  %inc97 = add nuw nsw i32 %i.3258, 1
  %exitcond273.not = icmp eq i32 %inc97, %smax272
  br i1 %exitcond273.not, label %for.end98.loopexit, label %__skb_fill_page_desc.exit.for.body94_crit_edge

__skb_fill_page_desc.exit.for.body94_crit_edge:   ; preds = %__skb_fill_page_desc.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body94

for.end98.loopexit:                               ; preds = %__skb_fill_page_desc.exit
  call void @__sanitizer_cov_trace_pc() #22
  %98 = inttoptr i32 %96 to ptr
  br label %for.end98

for.end98:                                        ; preds = %for.end98.loopexit, %for.cond90.preheader.for.end98_crit_edge
  %head.2.lcssa = phi ptr [ %head.0.lcssa, %for.cond90.preheader.for.end98_crit_edge ], [ %98, %for.end98.loopexit ]
  %99 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %end.i, align 4
  %arrayidx.i195 = getelementptr %struct.skb_shared_info, ptr %100, i32 0, i32 12, i32 %sub91
  %101 = ptrtoint ptr %arrayidx.i195 to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %head.2.lcssa, ptr %arrayidx.i195, align 4
  %bv_offset.i196 = getelementptr %struct.skb_shared_info, ptr %100, i32 0, i32 12, i32 %sub91, i32 2
  %102 = ptrtoint ptr %bv_offset.i196 to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 0, ptr %bv_offset.i196, align 4
  %bv_len.i.i197 = getelementptr %struct.skb_shared_info, ptr %100, i32 0, i32 12, i32 %sub91, i32 1
  %103 = ptrtoint ptr %bv_len.i.i197 to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %d_off.1.lcssa, ptr %bv_len.i.i197, align 4
  %104 = getelementptr inbounds %struct.page, ptr %head.2.lcssa, i32 0, i32 1
  %105 = ptrtoint ptr %104 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %104, align 4
  %and.i.i198 = and i32 %106, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i198)
  %tobool.not.i.i199 = icmp eq i32 %and.i.i198, 0
  br i1 %tobool.not.i.i199, label %if.end.i.i202, label %if.then.i.i201, !prof !374

if.then.i.i201:                                   ; preds = %for.end98
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i200 = add i32 %106, -1
  br label %_compound_head.exit.i206

if.end.i.i202:                                    ; preds = %for.end98
  call void @__sanitizer_cov_trace_pc() #22
  %107 = ptrtoint ptr %head.2.lcssa to i32
  br label %_compound_head.exit.i206

_compound_head.exit.i206:                         ; preds = %if.end.i.i202, %if.then.i.i201
  %retval.0.i.i203 = phi i32 [ %sub.i.i200, %if.then.i.i201 ], [ %107, %if.end.i.i202 ]
  %108 = inttoptr i32 %retval.0.i.i203 to ptr
  %109 = getelementptr inbounds %struct.page, ptr %108, i32 0, i32 1
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %109, align 4
  %112 = ptrtoint ptr %111 to i32
  %and.i8.i204 = and i32 %112, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i204)
  %tobool.i.not.i205 = icmp eq i32 %and.i8.i204, 0
  br i1 %tobool.i.not.i205, label %_compound_head.exit.i206.__skb_fill_page_desc.exit211_crit_edge, label %if.then.i210

_compound_head.exit.i206.__skb_fill_page_desc.exit211_crit_edge: ; preds = %_compound_head.exit.i206
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_fill_page_desc.exit211

if.then.i210:                                     ; preds = %_compound_head.exit.i206
  call void @__sanitizer_cov_trace_pc() #22
  %113 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %113)
  %bf.load.i208 = load i8, ptr %cloned.i, align 2
  %bf.set.i209 = or i8 %bf.load.i208, 2
  store i8 %bf.set.i209, ptr %cloned.i, align 2
  br label %__skb_fill_page_desc.exit211

__skb_fill_page_desc.exit211:                     ; preds = %if.then.i210, %_compound_head.exit.i206.__skb_fill_page_desc.exit211_crit_edge
  %conv100 = trunc i32 %shr279 to i8
  %114 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %end.i, align 4
  %nr_frags102 = getelementptr inbounds %struct.skb_shared_info, ptr %115, i32 0, i32 2
  %116 = ptrtoint ptr %nr_frags102 to i32
  call void @__asan_store1_noabort(i32 %116)
  store i8 %conv100, ptr %nr_frags102, align 2
  br label %release

release:                                          ; preds = %__skb_fill_page_desc.exit211, %if.end.release_crit_edge
  %tobool.not.i.i213 = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i213, label %release.cleanup_crit_edge, label %land.rhs.i.i214

release.cleanup_crit_edge:                        ; preds = %release
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

land.rhs.i.i214:                                  ; preds = %release
  %117 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %end.i, align 4
  %119 = ptrtoint ptr %118 to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %118, align 8
  %121 = and i8 %120, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %121)
  %tobool1.not.i.i = icmp eq i8 %121, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i214.cleanup_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i214.cleanup_crit_edge:                ; preds = %land.rhs.i.i214
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i214
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %118, i32 0, i32 11
  %122 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i215 = icmp eq ptr %123, null
  br i1 %tobool.not.i215, label %skb_zcopy.exit.i.cleanup_crit_edge, label %if.then.i218

skb_zcopy.exit.i.cleanup_crit_edge:               ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then.i218:                                     ; preds = %skb_zcopy.exit.i
  %124 = ptrtoint ptr %123 to i32
  %and.i.i216 = and i32 %124, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i216)
  %tobool.i.not.i217 = icmp eq i32 %and.i.i216, 0
  br i1 %tobool.i.not.i217, label %if.then2.i, label %if.then.i218.if.end.i_crit_edge

if.then.i218.if.end.i_crit_edge:                  ; preds = %if.then.i218
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then2.i:                                       ; preds = %if.then.i218
  call void @__sanitizer_cov_trace_pc() #22
  %125 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %123, align 4
  tail call void %126(ptr noundef nonnull %skb, ptr noundef nonnull %123, i1 noundef zeroext false) #20
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i218.if.end.i_crit_edge
  %127 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %end.i, align 4
  %129 = ptrtoint ptr %128 to i32
  call void @__asan_load1_noabort(i32 %129)
  %130 = load i8, ptr %128, align 8
  %131 = and i8 %130, -8
  store i8 %131, ptr %128, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %skb_zcopy.exit.i.cleanup_crit_edge, %land.rhs.i.i214.cleanup_crit_edge, %release.cleanup_crit_edge, %put_page.exit.cleanup_crit_edge, %while.cond.preheader.cleanup_crit_edge, %skb_unclone.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %skb_unclone.exit.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ 0, %release.cleanup_crit_edge ], [ 0, %land.rhs.i.i214.cleanup_crit_edge ], [ 0, %skb_zcopy.exit.i.cleanup_crit_edge ], [ 0, %if.end.i ], [ -12, %while.cond.preheader.cleanup_crit_edge ], [ -12, %put_page.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_clone(ptr noundef %skb, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i, label %entry.if.end_crit_edge, label %land.rhs.i.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.rhs.i.i:                                     ; preds = %entry
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i.i.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %1, align 8
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool1.not.i.i = icmp eq i8 %4, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.if.end_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.if.end_crit_edge:                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 11
  %5 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %skb_zcopy.exit.i.if.end_crit_edge, label %if.end.i, !prof !374

skb_zcopy.exit.i.if.end_crit_edge:                ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end.i:                                         ; preds = %skb_zcopy.exit.i
  %7 = ptrtoint ptr %6 to i32
  %and.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %land.lhs.true.i, label %if.end.i.skb_orphan_frags.exit_crit_edge

if.end.i.skb_orphan_frags.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i:                                  ; preds = %if.end.i
  %8 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %6, align 4
  %cmp.i = icmp eq ptr %9, @msg_zerocopy_callback
  br i1 %cmp.i, label %land.lhs.true.i.if.end_crit_edge, label %land.lhs.true.i.skb_orphan_frags.exit_crit_edge

land.lhs.true.i.skb_orphan_frags.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_orphan_frags.exit:                            ; preds = %land.lhs.true.i.skb_orphan_frags.exit_crit_edge, %if.end.i.skb_orphan_frags.exit_crit_edge
  %call8.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb, i32 noundef %gfp_mask) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool.not = icmp eq i32 %call8.i, 0
  br i1 %tobool.not, label %skb_orphan_frags.exit.if.end_crit_edge, label %skb_orphan_frags.exit.cleanup_crit_edge

skb_orphan_frags.exit.cleanup_crit_edge:          ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_orphan_frags.exit.if.end_crit_edge:           ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %skb_orphan_frags.exit.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge, %skb_zcopy.exit.i.if.end_crit_edge, %land.rhs.i.i.if.end_crit_edge, %entry.if.end_crit_edge
  %fclone = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %10 = ptrtoint ptr %fclone to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load = load i8, ptr %fclone, align 2
  %11 = and i8 %bf.load, 48
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %11)
  %cmp = icmp eq i8 %11, 16
  br i1 %cmp, label %land.lhs.true, label %if.end.if.else_crit_edge

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

land.lhs.true:                                    ; preds = %if.end
  %fclone_ref = getelementptr inbounds %struct.sk_buff_fclones, ptr %skb, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %fclone_ref, i32 noundef 4) #20
  %12 = ptrtoint ptr %fclone_ref to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %fclone_ref, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %13)
  %cmp3 = icmp eq i32 %13, 1
  br i1 %cmp3, label %if.then5, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.then5:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %skb2 = getelementptr inbounds %struct.sk_buff_fclones, ptr %skb, i32 0, i32 1
  %call.i.i.i30 = tail call zeroext i1 @__kasan_check_write(ptr noundef %fclone_ref, i32 noundef 4) #20
  %14 = ptrtoint ptr %fclone_ref to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile i32 2, ptr %fclone_ref, align 4
  br label %if.end17

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end.if.else_crit_edge
  %15 = ptrtoint ptr %fclone to i32
  call void @__asan_load1_noabort(i32 %15)
  %bf.load.i = load i8, ptr %fclone, align 2
  %16 = and i8 %bf.load.i, 2
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 16
  %19 = or i32 %18, %gfp_mask
  %20 = load ptr, ptr @skbuff_head_cache, align 4
  %call10 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %20, i32 noundef %19) #20
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.else.cleanup_crit_edge, label %if.end13

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end13:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %fclone14 = getelementptr inbounds %struct.sk_buff, ptr %call10, i32 0, i32 12
  %21 = ptrtoint ptr %fclone14 to i32
  call void @__asan_load1_noabort(i32 %21)
  %bf.load15 = load i8, ptr %fclone14, align 2
  %bf.clear16 = and i8 %bf.load15, -49
  store i8 %bf.clear16, ptr %fclone14, align 2
  br label %if.end17

if.end17:                                         ; preds = %if.end13, %if.then5
  %n.0 = phi ptr [ %skb2, %if.then5 ], [ %call10, %if.end13 ]
  %call18 = tail call fastcc ptr @__skb_clone(ptr noundef %n.0, ptr noundef %skb)
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.else.cleanup_crit_edge, %skb_orphan_frags.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %n.0, %if.end17 ], [ null, %skb_orphan_frags.exit.cleanup_crit_edge ], [ null, %if.else.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @skb_headers_offset_update(ptr nocapture noundef %skb, i32 noundef %off) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %ip_summed, align 8
  %1 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %1)
  %cmp = icmp eq i16 %1, 1536
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %.pre = trunc i32 %off to i16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %2, align 8
  %5 = trunc i32 %off to i16
  %conv3 = add i16 %4, %5
  store i16 %conv3, ptr %2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %.pre-phi = phi i16 [ %.pre, %entry.if.end_crit_edge ], [ %5, %if.then ]
  %transport_header = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %6 = ptrtoint ptr %transport_header to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %transport_header, align 2
  %conv6 = add i16 %7, %.pre-phi
  store i16 %conv6, ptr %transport_header, align 2
  %network_header = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %8 = ptrtoint ptr %network_header to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %network_header, align 4
  %conv9 = add i16 %9, %.pre-phi
  store i16 %conv9, ptr %network_header, align 4
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %10 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %mac_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %11)
  %cmp.i.not = icmp eq i16 %11, -1
  br i1 %cmp.i.not, label %if.end.if.end14_crit_edge, label %if.then10

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14

if.then10:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %conv13 = add i16 %11, %.pre-phi
  %12 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv13, ptr %mac_header.i, align 2
  br label %if.end14

if.end14:                                         ; preds = %if.then10, %if.end.if.end14_crit_edge
  %inner_transport_header = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 15
  %13 = ptrtoint ptr %inner_transport_header to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %inner_transport_header, align 2
  %conv17 = add i16 %14, %.pre-phi
  store i16 %conv17, ptr %inner_transport_header, align 2
  %inner_network_header = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 16
  %15 = ptrtoint ptr %inner_network_header to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %inner_network_header, align 4
  %conv20 = add i16 %16, %.pre-phi
  store i16 %conv20, ptr %inner_network_header, align 4
  %inner_mac_header = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 17
  %17 = ptrtoint ptr %inner_mac_header to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %inner_mac_header, align 2
  %conv23 = add i16 %18, %.pre-phi
  store i16 %conv23, ptr %inner_mac_header, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_copy_header(ptr nocapture noundef %new, ptr nocapture noundef readonly %old) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__copy_skb_header(ptr noundef %new, ptr noundef %old)
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %old, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %gso_size, align 4
  %end.i15 = getelementptr inbounds %struct.sk_buff, ptr %new, i32 0, i32 17
  %4 = ptrtoint ptr %end.i15 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i15, align 4
  %gso_size2 = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %gso_size2 to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %3, ptr %gso_size2, align 4
  %7 = load ptr, ptr %end.i, align 4
  %gso_segs = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %gso_segs to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %gso_segs, align 2
  %10 = load ptr, ptr %end.i15, align 4
  %gso_segs5 = getelementptr inbounds %struct.skb_shared_info, ptr %10, i32 0, i32 5
  %11 = ptrtoint ptr %gso_segs5 to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %9, ptr %gso_segs5, align 2
  %12 = load ptr, ptr %end.i, align 4
  %gso_type = getelementptr inbounds %struct.skb_shared_info, ptr %12, i32 0, i32 8
  %13 = ptrtoint ptr %gso_type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %gso_type, align 8
  %15 = load ptr, ptr %end.i15, align 4
  %gso_type8 = getelementptr inbounds %struct.skb_shared_info, ptr %15, i32 0, i32 8
  %16 = ptrtoint ptr %gso_type8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %14, ptr %gso_type8, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_copy(ptr nocapture noundef readonly %skb, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %4 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i, align 4
  %sub.ptr.lhs.cast.i36 = ptrtoint ptr %5 to i32
  %sub.ptr.sub.i38 = sub i32 %sub.ptr.lhs.cast.i36, %sub.ptr.rhs.cast.i
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %6 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_len, align 8
  %add = add i32 %sub.ptr.sub.i38, %7
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %8 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %9 = and i8 %bf.load.i.i, 2
  %10 = zext i8 %9 to i32
  %call3 = tail call ptr @__alloc_skb(i32 noundef %add, i32 noundef %gfp_mask, i32 noundef %10, i32 noundef -1)
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %data.i39 = getelementptr inbounds %struct.sk_buff, ptr %call3, i32 0, i32 19
  %11 = ptrtoint ptr %data.i39 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %data.i39, align 4
  %add.ptr.i = getelementptr i8, ptr %12, i32 %sub.ptr.sub.i
  store ptr %add.ptr.i, ptr %data.i39, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call3, i32 0, i32 16
  %13 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %14, i32 %sub.ptr.sub.i
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %15 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %len, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %call3, i32 0, i32 7
  %17 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.i.not.i = icmp eq i32 %18, 0
  br i1 %tobool.i.not.i, label %do.end8.i, label %do.body3.i, !prof !374

do.body3.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i:                                        ; preds = %if.end
  %add.ptr.i40 = getelementptr i8, ptr %add.ptr1.i, i32 %16
  %19 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %add.ptr.i40, ptr %tail.i, align 8
  %len9.i = getelementptr inbounds %struct.sk_buff, ptr %call3, i32 0, i32 6
  %20 = ptrtoint ptr %len9.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %len9.i, align 4
  %add.i = add i32 %21, %16
  store i32 %add.i, ptr %len9.i, align 4
  %end.i41 = getelementptr inbounds %struct.sk_buff, ptr %call3, i32 0, i32 17
  %22 = ptrtoint ptr %end.i41 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %end.i41, align 4
  %cmp.i = icmp ugt ptr %add.ptr.i40, %23
  br i1 %cmp.i, label %if.then17.i, label %skb_put.exit, !prof !373

if.then17.i:                                      ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %24 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef nonnull %call3, i32 noundef %16, ptr noundef %24) #20
  unreachable

skb_put.exit:                                     ; preds = %do.end8.i
  %sub = sub i32 0, %sub.ptr.sub.i
  %head = getelementptr inbounds %struct.sk_buff, ptr %call3, i32 0, i32 18
  %25 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %head, align 8
  %27 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %len, align 4
  %add6 = add i32 %28, %sub.ptr.sub.i
  %call7 = tail call i32 @skb_copy_bits(ptr noundef %skb, i32 noundef %sub, ptr noundef %26, i32 noundef %add6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %do.end18, label %do.body12, !prof !374

do.body12:                                        ; preds = %skb_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1595, 0\0A.popsection", ""() #20, !srcloc !413
  unreachable

do.end18:                                         ; preds = %skb_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @__copy_skb_header(ptr noundef nonnull %call3, ptr noundef %skb) #20
  %29 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %end.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %30, i32 0, i32 4
  %31 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %gso_size.i, align 4
  %33 = ptrtoint ptr %end.i41 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %end.i41, align 4
  %gso_size2.i = getelementptr inbounds %struct.skb_shared_info, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %gso_size2.i to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %32, ptr %gso_size2.i, align 4
  %36 = load ptr, ptr %end.i, align 4
  %gso_segs.i = getelementptr inbounds %struct.skb_shared_info, ptr %36, i32 0, i32 5
  %37 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %gso_segs.i, align 2
  %39 = load ptr, ptr %end.i41, align 4
  %gso_segs5.i = getelementptr inbounds %struct.skb_shared_info, ptr %39, i32 0, i32 5
  %40 = ptrtoint ptr %gso_segs5.i to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %38, ptr %gso_segs5.i, align 2
  %41 = load ptr, ptr %end.i, align 4
  %gso_type.i = getelementptr inbounds %struct.skb_shared_info, ptr %41, i32 0, i32 8
  %42 = ptrtoint ptr %gso_type.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %gso_type.i, align 8
  %44 = load ptr, ptr %end.i41, align 4
  %gso_type8.i = getelementptr inbounds %struct.skb_shared_info, ptr %44, i32 0, i32 8
  %45 = ptrtoint ptr %gso_type8.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %43, ptr %gso_type8.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %do.end18, %entry.cleanup_crit_edge
  ret ptr %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_put(ptr nocapture noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %0 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tail.i, align 8
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %do.end8, label %do.body3, !prof !374

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8:                                          ; preds = %entry
  %add.ptr = getelementptr i8, ptr %1, i32 %len
  %4 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %add.ptr, ptr %tail.i, align 8
  %len9 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %5 = ptrtoint ptr %len9 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %len9, align 4
  %add = add i32 %6, %len
  store i32 %add, ptr %len9, align 4
  %end = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %7 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %end, align 4
  %cmp = icmp ugt ptr %add.ptr, %8
  br i1 %cmp, label %if.then17, label %if.end18, !prof !373

if.then17:                                        ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #22
  %9 = tail call ptr @llvm.returnaddress(i32 0)
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef %skb, i32 noundef %len, ptr noundef %9)
  unreachable

if.end18:                                         ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #22
  ret ptr %1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_copy_bits(ptr nocapture noundef readonly %skb, i32 noundef %offset, ptr nocapture noundef writeonly %to, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %1, %3
  %sub = sub i32 %1, %len
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %offset)
  %cmp = icmp slt i32 %sub, %offset
  br i1 %cmp, label %entry.fault_crit_edge, label %if.end

entry.fault_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %fault

if.end:                                           ; preds = %entry
  %sub2 = sub i32 %sub.i, %offset
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub2)
  %cmp3 = icmp sgt i32 %sub2, 0
  br i1 %cmp3, label %if.then4, label %if.end.if.end12_crit_edge

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.then4:                                         ; preds = %if.end
  %4 = tail call i32 @llvm.smin.i32(i32 %sub2, i32 %len)
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %6, i32 %offset
  %7 = call ptr @memcpy(ptr %to, ptr %add.ptr.i, i32 %4)
  %sub8 = sub i32 %len, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub8)
  %cmp9 = icmp eq i32 %sub8, 0
  br i1 %cmp9, label %if.then4.cleanup177_crit_edge, label %if.end11

if.then4.cleanup177_crit_edge:                    ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup177

if.end11:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  %add = add i32 %4, %offset
  %add.ptr = getelementptr i8, ptr %to, i32 %4
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end.if.end12_crit_edge
  %len.addr.0 = phi i32 [ %sub8, %if.end11 ], [ %len, %if.end.if.end12_crit_edge ]
  %to.addr.0 = phi ptr [ %add.ptr, %if.end11 ], [ %to, %if.end.if.end12_crit_edge ]
  %offset.addr.0 = phi i32 [ %add, %if.end11 ], [ %offset, %if.end.if.end12_crit_edge ]
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %8 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i, align 4
  %nr_frags313 = getelementptr inbounds %struct.skb_shared_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %nr_frags313 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %nr_frags313, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %cmp14315.not = icmp eq i8 %11, 0
  br i1 %cmp14315.not, label %if.end12.for.end107_crit_edge, label %if.end12.for.body_crit_edge

if.end12.for.body_crit_edge:                      ; preds = %if.end12
  br label %for.body

if.end12.for.end107_crit_edge:                    ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end107

for.body:                                         ; preds = %for.inc106.for.body_crit_edge, %if.end12.for.body_crit_edge
  %12 = phi ptr [ %75, %for.inc106.for.body_crit_edge ], [ %9, %if.end12.for.body_crit_edge ]
  %offset.addr.1321 = phi i32 [ %offset.addr.3, %for.inc106.for.body_crit_edge ], [ %offset.addr.0, %if.end12.for.body_crit_edge ]
  %to.addr.1320 = phi ptr [ %to.addr.3, %for.inc106.for.body_crit_edge ], [ %to.addr.0, %if.end12.for.body_crit_edge ]
  %len.addr.1319 = phi i32 [ %len.addr.2, %for.inc106.for.body_crit_edge ], [ %len.addr.0, %if.end12.for.body_crit_edge ]
  %i.0317 = phi i32 [ %inc, %for.inc106.for.body_crit_edge ], [ 0, %if.end12.for.body_crit_edge ]
  %start.0316 = phi i32 [ %add41, %for.inc106.for.body_crit_edge ], [ %sub.i, %if.end12.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0317
  %add17 = add i32 %offset.addr.1321, %len.addr.1319
  call void @__sanitizer_cov_trace_cmp4(i32 %start.0316, i32 %add17)
  %cmp18 = icmp sgt i32 %start.0316, %add17
  br i1 %cmp18, label %do.end, label %for.body.if.end33_crit_edge, !prof !373

for.body.if.end33_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2364, i32 noundef 9, ptr noundef null) #20
  br label %if.end33

if.end33:                                         ; preds = %do.end, %for.body.if.end33_crit_edge
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0317, i32 1
  %13 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %bv_len.i, align 4
  %add41 = add i32 %14, %start.0316
  %sub42 = sub i32 %add41, %offset.addr.1321
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub42)
  %cmp43 = icmp sgt i32 %sub42, 0
  br i1 %cmp43, label %if.then45, label %if.end33.for.inc106_crit_edge

if.end33.for.inc106_crit_edge:                    ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc106

if.then45:                                        ; preds = %if.end33
  %15 = tail call i32 @llvm.smin.i32(i32 %sub42, i32 %len.addr.1319)
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0317, i32 2
  %18 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %bv_offset.i, align 4
  %add52 = sub i32 %offset.addr.1321, %start.0316
  %sub53 = add i32 %add52, %19
  %shr = lshr i32 %sub53, 12
  %add.ptr54 = getelementptr %struct.page, ptr %17, i32 %shr
  %and = and i32 %sub53, 4095
  %20 = ptrtoint ptr %add.ptr54 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %add.ptr54, align 4
  %shr.i.i = lshr i32 %21, 30
  %22 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.49)
  switch i32 %shr.i.i, label %if.then45.skb_frag_must_loop.exit.thread276_crit_edge [
    i32 2, label %skb_frag_must_loop.exit.thread
    i32 3, label %skb_frag_must_loop.exit
  ]

if.then45.skb_frag_must_loop.exit.thread276_crit_edge: ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_frag_must_loop.exit.thread276

skb_frag_must_loop.exit.thread:                   ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #22
  %sub60272 = sub nuw nsw i32 4096, %and
  %23 = tail call i32 @llvm.umin.i32(i32 %15, i32 %sub60272)
  br label %26

skb_frag_must_loop.exit:                          ; preds = %if.then45
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %24 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp2.i.i = icmp eq i32 %24, 2
  %sub60 = sub nuw nsw i32 4096, %and
  %25 = tail call i32 @llvm.umin.i32(i32 %15, i32 %sub60)
  br i1 %cmp2.i.i, label %skb_frag_must_loop.exit._crit_edge, label %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread276_crit_edge

skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread276_crit_edge: ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_frag_must_loop.exit.thread276

skb_frag_must_loop.exit._crit_edge:               ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %26

26:                                               ; preds = %skb_frag_must_loop.exit._crit_edge, %skb_frag_must_loop.exit.thread
  %spec.select267.sub60275 = phi i32 [ %23, %skb_frag_must_loop.exit.thread ], [ %25, %skb_frag_must_loop.exit._crit_edge ]
  br label %skb_frag_must_loop.exit.thread276

skb_frag_must_loop.exit.thread276:                ; preds = %26, %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread276_crit_edge, %if.then45.skb_frag_must_loop.exit.thread276_crit_edge
  %27 = phi i32 [ %spec.select267.sub60275, %26 ], [ %15, %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread276_crit_edge ], [ %15, %if.then45.skb_frag_must_loop.exit.thread276_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp69308.not = icmp eq i32 %15, 0
  br i1 %cmp69308.not, label %skb_frag_must_loop.exit.thread276.for.end_crit_edge, label %for.body71.preheader

skb_frag_must_loop.exit.thread276.for.end_crit_edge: ; preds = %skb_frag_must_loop.exit.thread276
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.preheader:                             ; preds = %skb_frag_must_loop.exit.thread276
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %28 = load i32, ptr @pgprot_kernel, align 4
  %or.i.peel = or i32 %28, 512
  %29 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i.peel = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i.peel to ptr
  %preempt_count.i.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i.peel, align 4
  %add.i.i.i.peel = add i32 %32, 1
  store volatile i32 %add.i.i.i.peel, ptr %preempt_count.i.i.i.i.peel, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %33 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i.peel = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i1.i.i.peel to ptr
  %task.i.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i.i.i.i.peel, align 8
  %pagefault_disabled.i.i.i.i.peel = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 213
  %37 = ptrtoint ptr %pagefault_disabled.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %pagefault_disabled.i.i.i.i.peel, align 8
  %inc.i.i.i.i.peel = add i32 %38, 1
  store i32 %inc.i.i.i.i.peel, ptr %pagefault_disabled.i.i.i.i.peel, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i.peel = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr54, i32 noundef %or.i.peel) #20
  %add.ptr74.peel = getelementptr i8, ptr %call.i.i.peel, i32 %and
  %39 = call ptr @memcpy(ptr %to.addr.1320, ptr %add.ptr74.peel, i32 %27)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i.peel) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %40 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.peel = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i1.i.peel to ptr
  %task.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %task.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task.i.i.i.peel, align 8
  %pagefault_disabled.i.i.i.peel = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 213
  %44 = ptrtoint ptr %pagefault_disabled.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %pagefault_disabled.i.i.i.peel, align 8
  %dec.i.i.i.peel = add i32 %45, -1
  store i32 %dec.i.i.i.peel, ptr %pagefault_disabled.i.i.i.peel, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %46 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.peel = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i.i.peel to ptr
  %preempt_count.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i.i.peel, align 4
  %sub.i.i.peel = add i32 %49, -1
  store volatile i32 %sub.i.i.peel, ptr %preempt_count.i.i.i.peel, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %27)
  %cmp69.peel = icmp ugt i32 %15, %27
  br i1 %cmp69.peel, label %for.body71.peel.next, label %for.body71.preheader.for.end_crit_edge

for.body71.preheader.for.end_crit_edge:           ; preds = %for.body71.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.peel.next:                             ; preds = %for.body71.preheader
  %sub82.peel = sub i32 %15, %27
  %50 = tail call i32 @llvm.umin.i32(i32 %sub82.peel, i32 4096)
  br label %for.body71

for.body71:                                       ; preds = %for.body71.for.body71_crit_edge, %for.body71.peel.next
  %p.0312.pn = phi ptr [ %p.0312, %for.body71.for.body71_crit_edge ], [ %add.ptr54, %for.body71.peel.next ]
  %copied.0311 = phi i32 [ %add81, %for.body71.for.body71_crit_edge ], [ %27, %for.body71.peel.next ]
  %p_len.0310 = phi i32 [ %73, %for.body71.for.body71_crit_edge ], [ %50, %for.body71.peel.next ]
  %p.0312 = getelementptr %struct.page, ptr %p.0312.pn, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %51 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %51, 512
  %52 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %55, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %56 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 2
  %58 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %59, i32 0, i32 213
  %60 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %61, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %p.0312, i32 noundef %or.i) #20
  %add.ptr73 = getelementptr i8, ptr %to.addr.1320, i32 %copied.0311
  %62 = call ptr @memcpy(ptr %add.ptr73, ptr %call.i.i, i32 %p_len.0310)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %63 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 2
  %65 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %66, i32 0, i32 213
  %67 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %68, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %69 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %72, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %add81 = add i32 %copied.0311, %p_len.0310
  %sub82 = sub i32 %15, %add81
  %73 = tail call i32 @llvm.umin.i32(i32 %sub82, i32 4096)
  %cmp69 = icmp ugt i32 %15, %add81
  br i1 %cmp69, label %for.body71.for.body71_crit_edge, label %for.body71.for.end_crit_edge, !llvm.loop !414

for.body71.for.end_crit_edge:                     ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.for.body71_crit_edge:                  ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body71

for.end:                                          ; preds = %for.body71.for.end_crit_edge, %for.body71.preheader.for.end_crit_edge, %skb_frag_must_loop.exit.thread276.for.end_crit_edge
  %sub90 = sub i32 %len.addr.1319, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub90)
  %cmp91 = icmp eq i32 %sub90, 0
  %add95 = add i32 %15, %offset.addr.1321
  %add.ptr96 = getelementptr i8, ptr %to.addr.1320, i32 %15
  br i1 %cmp91, label %for.end.cleanup177_crit_edge, label %for.end.for.inc106_crit_edge

for.end.for.inc106_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc106

for.end.cleanup177_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup177

for.inc106:                                       ; preds = %for.end.for.inc106_crit_edge, %if.end33.for.inc106_crit_edge
  %len.addr.2 = phi i32 [ %sub90, %for.end.for.inc106_crit_edge ], [ %len.addr.1319, %if.end33.for.inc106_crit_edge ]
  %to.addr.3 = phi ptr [ %add.ptr96, %for.end.for.inc106_crit_edge ], [ %to.addr.1320, %if.end33.for.inc106_crit_edge ]
  %offset.addr.3 = phi i32 [ %add95, %for.end.for.inc106_crit_edge ], [ %offset.addr.1321, %if.end33.for.inc106_crit_edge ]
  %inc = add nuw nsw i32 %i.0317, 1
  %74 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 2
  %76 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %77 to i32
  %cmp14 = icmp ult i32 %inc, %conv
  br i1 %cmp14, label %for.inc106.for.body_crit_edge, label %for.inc106.for.end107_crit_edge

for.inc106.for.end107_crit_edge:                  ; preds = %for.inc106
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end107

for.inc106.for.body_crit_edge:                    ; preds = %for.inc106
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end107:                                       ; preds = %for.inc106.for.end107_crit_edge, %if.end12.for.end107_crit_edge
  %start.0.lcssa = phi i32 [ %sub.i, %if.end12.for.end107_crit_edge ], [ %add41, %for.inc106.for.end107_crit_edge ]
  %len.addr.1.lcssa = phi i32 [ %len.addr.0, %if.end12.for.end107_crit_edge ], [ %len.addr.2, %for.inc106.for.end107_crit_edge ]
  %to.addr.1.lcssa = phi ptr [ %to.addr.0, %if.end12.for.end107_crit_edge ], [ %to.addr.3, %for.inc106.for.end107_crit_edge ]
  %offset.addr.1.lcssa = phi i32 [ %offset.addr.0, %if.end12.for.end107_crit_edge ], [ %offset.addr.3, %for.inc106.for.end107_crit_edge ]
  %.lcssa = phi ptr [ %9, %if.end12.for.end107_crit_edge ], [ %75, %for.inc106.for.end107_crit_edge ]
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 6
  %78 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %78)
  %frag_iter.0326 = load ptr, ptr %frag_list, align 8
  %tobool110.not327 = icmp eq ptr %frag_iter.0326, null
  br i1 %tobool110.not327, label %for.end107.for.end173_crit_edge, label %for.end107.for.body111_crit_edge

for.end107.for.body111_crit_edge:                 ; preds = %for.end107
  br label %for.body111

for.end107.for.end173_crit_edge:                  ; preds = %for.end107
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end173

for.body111:                                      ; preds = %cleanup169.for.body111_crit_edge, %for.end107.for.body111_crit_edge
  %frag_iter.0332 = phi ptr [ %frag_iter.0, %cleanup169.for.body111_crit_edge ], [ %frag_iter.0326, %for.end107.for.body111_crit_edge ]
  %offset.addr.5331 = phi i32 [ %offset.addr.7, %cleanup169.for.body111_crit_edge ], [ %offset.addr.1.lcssa, %for.end107.for.body111_crit_edge ]
  %to.addr.5330 = phi ptr [ %to.addr.7, %cleanup169.for.body111_crit_edge ], [ %to.addr.1.lcssa, %for.end107.for.body111_crit_edge ]
  %len.addr.4329 = phi i32 [ %len.addr.6, %cleanup169.for.body111_crit_edge ], [ %len.addr.1.lcssa, %for.end107.for.body111_crit_edge ]
  %start.2328 = phi i32 [ %add147, %cleanup169.for.body111_crit_edge ], [ %start.0.lcssa, %for.end107.for.body111_crit_edge ]
  %add114 = add i32 %offset.addr.5331, %len.addr.4329
  call void @__sanitizer_cov_trace_cmp4(i32 %start.2328, i32 %add114)
  %cmp115 = icmp sgt i32 %start.2328, %add114
  br i1 %cmp115, label %do.end132, label %for.body111.if.end138_crit_edge, !prof !373

for.body111.if.end138_crit_edge:                  ; preds = %for.body111
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end138

do.end132:                                        ; preds = %for.body111
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2394, i32 noundef 9, ptr noundef null) #20
  br label %if.end138

if.end138:                                        ; preds = %do.end132, %for.body111.if.end138_crit_edge
  %len146 = getelementptr inbounds %struct.sk_buff, ptr %frag_iter.0332, i32 0, i32 6
  %79 = ptrtoint ptr %len146 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %len146, align 4
  %add147 = add i32 %80, %start.2328
  %sub148 = sub i32 %add147, %offset.addr.5331
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub148)
  %cmp149 = icmp sgt i32 %sub148, 0
  br i1 %cmp149, label %if.then151, label %if.end138.cleanup169_crit_edge

if.end138.cleanup169_crit_edge:                   ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup169

if.then151:                                       ; preds = %if.end138
  %81 = tail call i32 @llvm.smin.i32(i32 %sub148, i32 %len.addr.4329)
  %sub156 = sub i32 %offset.addr.5331, %start.2328
  %call157 = tail call i32 @skb_copy_bits(ptr noundef nonnull %frag_iter.0332, i32 noundef %sub156, ptr noundef %to.addr.5330, i32 noundef %81)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call157)
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %if.end160, label %if.then151.fault_crit_edge

if.then151.fault_crit_edge:                       ; preds = %if.then151
  call void @__sanitizer_cov_trace_pc() #22
  br label %fault

if.end160:                                        ; preds = %if.then151
  %sub161 = sub i32 %len.addr.4329, %81
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub161)
  %cmp162 = icmp eq i32 %sub161, 0
  br i1 %cmp162, label %if.end160.cleanup177_crit_edge, label %if.end165

if.end160.cleanup177_crit_edge:                   ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup177

if.end165:                                        ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #22
  %add166 = add i32 %81, %offset.addr.5331
  %add.ptr167 = getelementptr i8, ptr %to.addr.5330, i32 %81
  br label %cleanup169

cleanup169:                                       ; preds = %if.end165, %if.end138.cleanup169_crit_edge
  %len.addr.6 = phi i32 [ %sub161, %if.end165 ], [ %len.addr.4329, %if.end138.cleanup169_crit_edge ]
  %to.addr.7 = phi ptr [ %add.ptr167, %if.end165 ], [ %to.addr.5330, %if.end138.cleanup169_crit_edge ]
  %offset.addr.7 = phi i32 [ %add166, %if.end165 ], [ %offset.addr.5331, %if.end138.cleanup169_crit_edge ]
  %82 = ptrtoint ptr %frag_iter.0332 to i32
  call void @__asan_load4_noabort(i32 %82)
  %frag_iter.0 = load ptr, ptr %frag_iter.0332, align 8
  %tobool110.not = icmp eq ptr %frag_iter.0, null
  br i1 %tobool110.not, label %cleanup169.for.end173_crit_edge, label %cleanup169.for.body111_crit_edge

cleanup169.for.body111_crit_edge:                 ; preds = %cleanup169
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body111

cleanup169.for.end173_crit_edge:                  ; preds = %cleanup169
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end173

for.end173:                                       ; preds = %cleanup169.for.end173_crit_edge, %for.end107.for.end173_crit_edge
  %len.addr.4.lcssa = phi i32 [ %len.addr.1.lcssa, %for.end107.for.end173_crit_edge ], [ %len.addr.6, %cleanup169.for.end173_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.4.lcssa)
  %tobool174.not = icmp eq i32 %len.addr.4.lcssa, 0
  br i1 %tobool174.not, label %for.end173.cleanup177_crit_edge, label %for.end173.fault_crit_edge

for.end173.fault_crit_edge:                       ; preds = %for.end173
  call void @__sanitizer_cov_trace_pc() #22
  br label %fault

for.end173.cleanup177_crit_edge:                  ; preds = %for.end173
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup177

fault:                                            ; preds = %for.end173.fault_crit_edge, %if.then151.fault_crit_edge, %entry.fault_crit_edge
  br label %cleanup177

cleanup177:                                       ; preds = %fault, %for.end173.cleanup177_crit_edge, %if.end160.cleanup177_crit_edge, %for.end.cleanup177_crit_edge, %if.then4.cleanup177_crit_edge
  %retval.6 = phi i32 [ -14, %fault ], [ 0, %if.then4.cleanup177_crit_edge ], [ 0, %for.end173.cleanup177_crit_edge ], [ 0, %if.end160.cleanup177_crit_edge ], [ 0, %for.end.cleanup177_crit_edge ]
  ret i32 %retval.6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__pskb_copy_fclone(ptr noundef %skb, i32 noundef %headroom, i32 noundef %gfp_mask, i1 noundef zeroext %fclone) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = add i32 %1, %headroom
  %add = sub i32 %sub.i, %3
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %4 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %5 = and i8 %bf.load.i.i, 2
  %6 = zext i8 %5 to i32
  %cond = zext i1 %fclone to i32
  %or = or i32 %6, %cond
  %call2 = tail call ptr @__alloc_skb(i32 noundef %add, i32 noundef %gfp_mask, i32 noundef %or, i32 noundef -1)
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %entry.cleanup37_crit_edge, label %if.end

entry.cleanup37_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup37

if.end:                                           ; preds = %entry
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 19
  %7 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %8, i32 %headroom
  store ptr %add.ptr.i, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 16
  %9 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %10, i32 %headroom
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %11 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %len.i, align 4
  %13 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %data_len.i, align 8
  %sub.i81 = sub i32 %12, %14
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 7
  %15 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not.i = icmp eq i32 %16, 0
  br i1 %tobool.i.not.i, label %do.end8.i, label %do.body3.i, !prof !374

do.body3.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i:                                        ; preds = %if.end
  %add.ptr.i82 = getelementptr i8, ptr %add.ptr1.i, i32 %sub.i81
  %17 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr.i82, ptr %tail.i, align 8
  %len9.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 6
  %18 = ptrtoint ptr %len9.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %len9.i, align 4
  %add.i = add i32 %19, %sub.i81
  store i32 %add.i, ptr %len9.i, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 17
  %20 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %end.i, align 4
  %cmp.i = icmp ugt ptr %add.ptr.i82, %21
  br i1 %cmp.i, label %if.then17.i, label %skb_put.exit, !prof !373

if.then17.i:                                      ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %22 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef nonnull %call2, i32 noundef %sub.i81, ptr noundef %22) #20
  unreachable

skb_put.exit:                                     ; preds = %do.end8.i
  %data.i83 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %23 = ptrtoint ptr %data.i83 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %data.i83, align 4
  %25 = call ptr @memcpy(ptr %add.ptr.i, ptr %24, i32 %add.i)
  %26 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %data_len.i, align 8
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 20
  %28 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %truesize, align 8
  %add6 = add i32 %29, %27
  store i32 %add6, ptr %truesize, align 8
  %30 = load i32, ptr %data_len.i, align 8
  %31 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %data_len.i.i, align 8
  %32 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %len.i, align 4
  %34 = ptrtoint ptr %len9.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %len9.i, align 4
  %end.i84 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %35 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %end.i84, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %36, i32 0, i32 2
  %37 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %nr_frags, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %38)
  %tobool12.not = icmp eq i8 %38, 0
  br i1 %tobool12.not, label %skb_put.exit.if.end30_crit_edge, label %if.then13

skb_put.exit.if.end30_crit_edge:                  ; preds = %skb_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

if.then13:                                        ; preds = %skb_put.exit
  %tobool.not.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i, label %if.then13.lor.lhs.false_crit_edge, label %land.rhs.i.i

if.then13.lor.lhs.false_crit_edge:                ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

land.rhs.i.i:                                     ; preds = %if.then13
  %39 = ptrtoint ptr %36 to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %36, align 8
  %41 = and i8 %40, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool1.not.i.i = icmp eq i8 %41, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.lor.lhs.false_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.lor.lhs.false_crit_edge:             ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %36, i32 0, i32 11
  %42 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i = icmp eq ptr %43, null
  br i1 %tobool.not.i, label %skb_zcopy.exit.i.lor.lhs.false_crit_edge, label %if.end.i, !prof !374

skb_zcopy.exit.i.lor.lhs.false_crit_edge:         ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

if.end.i:                                         ; preds = %skb_zcopy.exit.i
  %44 = ptrtoint ptr %43 to i32
  %and.i.i = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i85 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i85, label %land.lhs.true.i, label %if.end.i.skb_orphan_frags.exit_crit_edge

if.end.i.skb_orphan_frags.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i:                                  ; preds = %if.end.i
  %45 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %43, align 4
  %cmp.i86 = icmp eq ptr %46, @msg_zerocopy_callback
  br i1 %cmp.i86, label %land.lhs.true.i.lor.lhs.false_crit_edge, label %land.lhs.true.i.skb_orphan_frags.exit_crit_edge

land.lhs.true.i.skb_orphan_frags.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i.lor.lhs.false_crit_edge:          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

skb_orphan_frags.exit:                            ; preds = %land.lhs.true.i.skb_orphan_frags.exit_crit_edge, %if.end.i.skb_orphan_frags.exit_crit_edge
  %call8.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb, i32 noundef %gfp_mask) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool15.not = icmp eq i32 %call8.i, 0
  br i1 %tobool15.not, label %skb_orphan_frags.exit.lor.lhs.false_crit_edge, label %skb_orphan_frags.exit.cleanup_crit_edge

skb_orphan_frags.exit.cleanup_crit_edge:          ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_orphan_frags.exit.lor.lhs.false_crit_edge:    ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %skb_orphan_frags.exit.lor.lhs.false_crit_edge, %land.lhs.true.i.lor.lhs.false_crit_edge, %skb_zcopy.exit.i.lor.lhs.false_crit_edge, %land.rhs.i.i.lor.lhs.false_crit_edge, %if.then13.lor.lhs.false_crit_edge
  %call16 = tail call fastcc i32 @skb_zerocopy_clone(ptr noundef nonnull %call2, ptr noundef %skb, i32 noundef %gfp_mask)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %for.cond.preheader, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.preheader:                               ; preds = %lor.lhs.false
  %47 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %end.i84, align 4
  %nr_frags21105 = getelementptr inbounds %struct.skb_shared_info, ptr %48, i32 0, i32 2
  %49 = ptrtoint ptr %nr_frags21105 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %nr_frags21105, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %cmp107.not = icmp eq i8 %50, 0
  br i1 %cmp107.not, label %for.cond.preheader.cleanup.thread_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.cleanup.thread_crit_edge:      ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread

for.body:                                         ; preds = %skb_frag_ref.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %51 = phi ptr [ %69, %skb_frag_ref.exit.for.body_crit_edge ], [ %48, %for.cond.preheader.for.body_crit_edge ]
  %i.0108 = phi i32 [ %inc, %skb_frag_ref.exit.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %52 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %end.i, align 4
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %53, i32 0, i32 12, i32 %i.0108
  %arrayidx26 = getelementptr %struct.skb_shared_info, ptr %51, i32 0, i32 12, i32 %i.0108
  %54 = call ptr @memcpy(ptr %arrayidx, ptr %arrayidx26, i32 12)
  %55 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %end.i84, align 4
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %56, i32 0, i32 12, i32 %i.0108
  %57 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx.i, align 4
  %59 = getelementptr inbounds %struct.page, ptr %58, i32 0, i32 1
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %59, align 4
  %and.i.i.i.i = and i32 %61, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i, !prof !374

if.then.i.i.i.i:                                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i.i = add i32 %61, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %62 = ptrtoint ptr %58 to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i ], [ %62, %if.end.i.i.i.i ]
  %63 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %63, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  %64 = ptrtoint ptr %_refcount.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %_refcount.i.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %65, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, 128
  br i1 %cmp.i.i.i.i, label %if.then.i1.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i1.i.i.i:                                 ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %66 = inttoptr i32 %retval.0.i.i.i.i to ptr
  tail call void @dump_page(ptr noundef %66, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i.i.i
  %call.i.i.i.i9.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %67 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i.i, ptr %_refcount.i.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@__pskb_copy_fclone, %if.then.i.i.i.i.i.i)) #20
          to label %skb_frag_ref.exit [label %if.then.i.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i.i:                              ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %63, i32 noundef 1) #20
  br label %skb_frag_ref.exit

skb_frag_ref.exit:                                ; preds = %if.then.i.i.i.i.i.i, %do.end5.i.i.i.i
  %inc = add nuw nsw i32 %i.0108, 1
  %68 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %end.i84, align 4
  %nr_frags21 = getelementptr inbounds %struct.skb_shared_info, ptr %69, i32 0, i32 2
  %70 = ptrtoint ptr %nr_frags21 to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %nr_frags21, align 2
  %conv = zext i8 %71 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %skb_frag_ref.exit.for.body_crit_edge, label %cleanup.thread.loopexit

skb_frag_ref.exit.for.body_crit_edge:             ; preds = %skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

cleanup.thread.loopexit:                          ; preds = %skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  %phi.cast = trunc i32 %inc to i8
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %cleanup.thread.loopexit, %for.cond.preheader.cleanup.thread_crit_edge
  %i.0.lcssa = phi i8 [ 0, %for.cond.preheader.cleanup.thread_crit_edge ], [ %phi.cast, %cleanup.thread.loopexit ]
  %72 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %end.i, align 4
  %nr_frags29 = getelementptr inbounds %struct.skb_shared_info, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %nr_frags29 to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 %i.0.lcssa, ptr %nr_frags29, align 2
  br label %if.end30

cleanup:                                          ; preds = %lor.lhs.false.cleanup_crit_edge, %skb_orphan_frags.exit.cleanup_crit_edge
  tail call fastcc void @kfree_skb(ptr noundef nonnull %call2)
  br label %cleanup37

if.end30:                                         ; preds = %cleanup.thread, %skb_put.exit.if.end30_crit_edge
  %75 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %end.i84, align 4
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %76, i32 0, i32 6
  %77 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %frag_list.i, align 8
  %cmp.i92.not = icmp eq ptr %78, null
  br i1 %cmp.i92.not, label %if.end30.if.end36_crit_edge, label %if.then32

if.end30.if.end36_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

if.then32:                                        ; preds = %if.end30
  %79 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %end.i, align 4
  %frag_list35 = getelementptr inbounds %struct.skb_shared_info, ptr %80, i32 0, i32 6
  %81 = ptrtoint ptr %frag_list35 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %78, ptr %frag_list35, align 8
  %82 = load ptr, ptr %end.i, align 4
  %frag_list.i96 = getelementptr inbounds %struct.skb_shared_info, ptr %82, i32 0, i32 6
  %83 = ptrtoint ptr %frag_list.i96 to i32
  call void @__asan_load4_noabort(i32 %83)
  %list.04.i = load ptr, ptr %frag_list.i96, align 8
  %tobool.not5.i = icmp eq ptr %list.04.i, null
  br i1 %tobool.not5.i, label %if.then32.if.end36_crit_edge, label %if.then32.for.body.i_crit_edge

if.then32.for.body.i_crit_edge:                   ; preds = %if.then32
  br label %for.body.i

if.then32.if.end36_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

for.body.i:                                       ; preds = %skb_get.exit.i.for.body.i_crit_edge, %if.then32.for.body.i_crit_edge
  %list.06.i = phi ptr [ %list.0.i, %skb_get.exit.i.for.body.i_crit_edge ], [ %list.04.i, %if.then32.for.body.i_crit_edge ]
  %users.i.i = getelementptr inbounds %struct.sk_buff, ptr %list.06.i, i32 0, i32 21
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %users.i.i, i32 1, i32 3, i32 1) #20
  %84 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i.i, ptr %users.i.i, i32 1, ptr elementtype(i32) %users.i.i) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %84, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !373

for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %for.body.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %85 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %85)
  %.not.i.i.i.i.i = icmp sgt i32 %85, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.skb_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.skb_get.exit.i_crit_edge:       ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_get.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %users.i.i, i32 noundef %.sink.i.i.i.i.i) #20
  br label %skb_get.exit.i

skb_get.exit.i:                                   ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.skb_get.exit.i_crit_edge
  %86 = ptrtoint ptr %list.06.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %list.0.i = load ptr, ptr %list.06.i, align 8
  %tobool.not.i97 = icmp eq ptr %list.0.i, null
  br i1 %tobool.not.i97, label %skb_get.exit.i.if.end36_crit_edge, label %skb_get.exit.i.for.body.i_crit_edge

skb_get.exit.i.for.body.i_crit_edge:              ; preds = %skb_get.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

skb_get.exit.i.if.end36_crit_edge:                ; preds = %skb_get.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

if.end36:                                         ; preds = %skb_get.exit.i.if.end36_crit_edge, %if.then32.if.end36_crit_edge, %if.end30.if.end36_crit_edge
  tail call fastcc void @__copy_skb_header(ptr noundef nonnull %call2, ptr noundef %skb) #20
  %87 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %end.i84, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %88, i32 0, i32 4
  %89 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %gso_size.i, align 4
  %91 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %end.i, align 4
  %gso_size2.i = getelementptr inbounds %struct.skb_shared_info, ptr %92, i32 0, i32 4
  %93 = ptrtoint ptr %gso_size2.i to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 %90, ptr %gso_size2.i, align 4
  %94 = load ptr, ptr %end.i84, align 4
  %gso_segs.i = getelementptr inbounds %struct.skb_shared_info, ptr %94, i32 0, i32 5
  %95 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %gso_segs.i, align 2
  %97 = load ptr, ptr %end.i, align 4
  %gso_segs5.i = getelementptr inbounds %struct.skb_shared_info, ptr %97, i32 0, i32 5
  %98 = ptrtoint ptr %gso_segs5.i to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 %96, ptr %gso_segs5.i, align 2
  %99 = load ptr, ptr %end.i84, align 4
  %gso_type.i = getelementptr inbounds %struct.skb_shared_info, ptr %99, i32 0, i32 8
  %100 = ptrtoint ptr %gso_type.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %gso_type.i, align 8
  %102 = load ptr, ptr %end.i, align 4
  %gso_type8.i = getelementptr inbounds %struct.skb_shared_info, ptr %102, i32 0, i32 8
  %103 = ptrtoint ptr %gso_type8.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %101, ptr %gso_type8.i, align 8
  br label %cleanup37

cleanup37:                                        ; preds = %if.end36, %cleanup, %entry.cleanup37_crit_edge
  %n.2 = phi ptr [ null, %cleanup ], [ %call2, %if.end36 ], [ null, %entry.cleanup37_crit_edge ]
  ret ptr %n.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @skb_zerocopy_clone(ptr noundef %nskb, ptr noundef readonly %orig, i32 noundef %gfp_mask) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %orig, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %land.rhs.i

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

land.rhs.i:                                       ; preds = %entry
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %orig, i32 0, i32 17
  %0 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %1, align 8
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool1.not.i = icmp eq i8 %4, 0
  br i1 %tobool1.not.i, label %land.rhs.i.return_crit_edge, label %skb_zcopy.exit

land.rhs.i.return_crit_edge:                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

skb_zcopy.exit:                                   ; preds = %land.rhs.i
  %destructor_arg.i = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 11
  %5 = ptrtoint ptr %destructor_arg.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %destructor_arg.i, align 4
  %tobool.not = icmp eq ptr %6, null
  %tobool.not.i62 = icmp eq ptr %nskb, null
  %or.cond = or i1 %tobool.not, %tobool.not.i62
  br i1 %or.cond, label %skb_zcopy.exit.return_crit_edge, label %land.rhs.i65

skb_zcopy.exit.return_crit_edge:                  ; preds = %skb_zcopy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

land.rhs.i65:                                     ; preds = %skb_zcopy.exit
  %end.i.i63 = getelementptr inbounds %struct.sk_buff, ptr %nskb, i32 0, i32 17
  %7 = ptrtoint ptr %end.i.i63 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %end.i.i63, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %8, align 8
  %11 = and i8 %10, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool1.not.i64 = icmp eq i8 %11, 0
  br i1 %tobool1.not.i64, label %land.rhs.i65.if.end50_crit_edge, label %skb_zcopy.exit69

land.rhs.i65.if.end50_crit_edge:                  ; preds = %land.rhs.i65
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end50

skb_zcopy.exit69:                                 ; preds = %land.rhs.i65
  %destructor_arg.i66 = getelementptr inbounds %struct.skb_shared_info, ptr %8, i32 0, i32 11
  %12 = ptrtoint ptr %destructor_arg.i66 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %destructor_arg.i66, align 4
  %tobool2.not = icmp eq ptr %13, null
  br i1 %tobool2.not, label %skb_zcopy.exit69.if.end50_crit_edge, label %if.then3

skb_zcopy.exit69.if.end50_crit_edge:              ; preds = %skb_zcopy.exit69
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end50

if.then3:                                         ; preds = %skb_zcopy.exit69
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %gfp_mask)
  %tobool4.not = icmp eq i32 %gfp_mask, 0
  br i1 %tobool4.not, label %land.end, label %if.end40

land.end:                                         ; preds = %if.then3
  %.b61 = load i1, ptr @skb_zerocopy_clone.__already_done, align 1
  br i1 %.b61, label %land.end.return_crit_edge, label %if.then11, !prof !374

land.end.return_crit_edge:                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then11:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @skb_zerocopy_clone.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1385, i32 noundef 9, ptr noundef null) #20
  br label %return

if.end40:                                         ; preds = %if.then3
  %14 = ptrtoint ptr %end.i.i63 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %end.i.i63, align 4
  %destructor_arg = getelementptr inbounds %struct.skb_shared_info, ptr %15, i32 0, i32 11
  %16 = ptrtoint ptr %destructor_arg to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %destructor_arg, align 4
  %18 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %end.i.i, align 4
  %destructor_arg43 = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 11
  %20 = ptrtoint ptr %destructor_arg43 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %destructor_arg43, align 4
  %cmp = icmp eq ptr %17, %21
  br i1 %cmp, label %if.end40.return_crit_edge, label %if.end45

if.end40.return_crit_edge:                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end45:                                         ; preds = %if.end40
  %call46 = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %nskb, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %if.end45.if.end50_crit_edge, label %if.end45.return_crit_edge

if.end45.return_crit_edge:                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end45.if.end50_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end50

if.end50:                                         ; preds = %if.end45.if.end50_crit_edge, %skb_zcopy.exit69.if.end50_crit_edge, %land.rhs.i65.if.end50_crit_edge
  %22 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %end.i.i, align 4
  %destructor_arg52 = getelementptr inbounds %struct.skb_shared_info, ptr %23, i32 0, i32 11
  %24 = ptrtoint ptr %destructor_arg52 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %destructor_arg52, align 4
  %tobool1.not.i73 = icmp eq ptr %25, null
  br i1 %tobool1.not.i73, label %if.end50.return_crit_edge, label %land.rhs.i.i

if.end50.return_crit_edge:                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

land.rhs.i.i:                                     ; preds = %if.end50
  %26 = ptrtoint ptr %end.i.i63 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %end.i.i63, align 4
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %27, align 8
  %30 = and i8 %29, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool1.not.i.i = icmp eq i8 %30, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.if.else.i_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.if.else.i_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else.i

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 11
  %31 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool3.not.i = icmp eq ptr %32, null
  br i1 %tobool3.not.i, label %skb_zcopy.exit.i.if.else.i_crit_edge, label %skb_zcopy.exit.i.return_crit_edge

skb_zcopy.exit.i.return_crit_edge:                ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

skb_zcopy.exit.i.if.else.i_crit_edge:             ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else.i

if.else.i:                                        ; preds = %skb_zcopy.exit.i.if.else.i_crit_edge, %land.rhs.i.i.if.else.i_crit_edge
  %refcnt.i.i = getelementptr inbounds %struct.ubuf_info, ptr %25, i32 0, i32 2
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #20
  %33 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %33, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.else.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !373

if.else.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.else.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %34 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %.not.i.i.i.i.i = icmp sgt i32 %34, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.net_zcopy_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.net_zcopy_get.exit.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %net_zcopy_get.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.else.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.else.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #20
  br label %net_zcopy_get.exit.i

net_zcopy_get.exit.i:                             ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.net_zcopy_get.exit.i_crit_edge
  %35 = ptrtoint ptr %end.i.i63 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %end.i.i63, align 4
  %destructor_arg.i2.i = getelementptr inbounds %struct.skb_shared_info, ptr %36, i32 0, i32 11
  %37 = ptrtoint ptr %destructor_arg.i2.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %25, ptr %destructor_arg.i2.i, align 4
  %flags.i.i = getelementptr inbounds %struct.ubuf_info, ptr %25, i32 0, i32 3
  %38 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %flags.i.i, align 4
  %40 = load ptr, ptr %end.i.i63, align 4
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %40, align 8
  %or7.i.i = or i8 %42, %39
  store i8 %or7.i.i, ptr %40, align 8
  br label %return

return:                                           ; preds = %net_zcopy_get.exit.i, %skb_zcopy.exit.i.return_crit_edge, %if.end50.return_crit_edge, %if.end45.return_crit_edge, %if.end40.return_crit_edge, %if.then11, %land.end.return_crit_edge, %skb_zcopy.exit.return_crit_edge, %land.rhs.i.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -12, %if.then11 ], [ -12, %land.end.return_crit_edge ], [ 0, %if.end40.return_crit_edge ], [ -5, %if.end45.return_crit_edge ], [ 0, %skb_zcopy.exit.return_crit_edge ], [ 0, %if.end50.return_crit_edge ], [ 0, %skb_zcopy.exit.i.return_crit_edge ], [ 0, %net_zcopy_get.exit.i ], [ 0, %land.rhs.i.return_crit_edge ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pskb_expand_head(ptr noundef %skb, i32 noundef %nhead, i32 noundef %ntail, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nhead)
  %cmp = icmp slt i32 %nhead, 0
  br i1 %cmp, label %do.body3, label %do.body9, !prof !373

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1691, 0\0A.popsection", ""() #20, !srcloc !417
  unreachable

do.body9:                                         ; preds = %entry
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %4 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i.not = icmp eq i32 %5, 1
  br i1 %cmp.i.not, label %do.end27, label %do.body19, !prof !374

do.body19:                                        ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1693, 0\0A.popsection", ""() #20, !srcloc !418
  unreachable

do.end27:                                         ; preds = %do.body9
  %pfmemalloc.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %6 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load.i = load i8, ptr %pfmemalloc.i, align 2
  %7 = and i8 %bf.load.i, 2
  %8 = zext i8 %7 to i32
  %9 = shl nuw nsw i32 %8, 16
  %10 = or i32 %9, %gfp_mask
  %add = add nuw i32 %nhead, 383
  %add1 = add i32 %add, %ntail
  %11 = add i32 %add1, %sub.ptr.sub.i
  %add32 = and i32 %11, -128
  %or1.i = or i32 %10, 532480
  %12 = tail call ptr @llvm.returnaddress(i32 0) #20
  %13 = ptrtoint ptr %12 to i32
  %call.i = tail call ptr @__kmalloc_track_caller(i32 noundef %add32, i32 noundef %or1.i, i32 noundef %13) #20
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %do.end27.if.end36_crit_edge

do.end27.if.end36_crit_edge:                      ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

lor.lhs.false.i:                                  ; preds = %do.end27
  %call2.i = tail call zeroext i1 @gfp_pfmemalloc_allowed(i32 noundef %10) #20
  br i1 %call2.i, label %kmalloc_reserve.exit, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

kmalloc_reserve.exit:                             ; preds = %lor.lhs.false.i
  %call3.i = tail call ptr @__kmalloc_track_caller(i32 noundef %add32, i32 noundef %10, i32 noundef %13) #20
  %tobool34.not = icmp eq ptr %call3.i, null
  br i1 %tobool34.not, label %kmalloc_reserve.exit.cleanup_crit_edge, label %kmalloc_reserve.exit.if.end36_crit_edge

kmalloc_reserve.exit.if.end36_crit_edge:          ; preds = %kmalloc_reserve.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

kmalloc_reserve.exit.cleanup_crit_edge:           ; preds = %kmalloc_reserve.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end36:                                         ; preds = %kmalloc_reserve.exit.if.end36_crit_edge, %do.end27.if.end36_crit_edge
  %obj.0.i194 = phi ptr [ %call3.i, %kmalloc_reserve.exit.if.end36_crit_edge ], [ %call.i, %do.end27.if.end36_crit_edge ]
  %call37 = tail call i32 @ksize(ptr noundef nonnull %obj.0.i194) #20
  %sub = add i32 %call37, -256
  %add.ptr = getelementptr i8, ptr %obj.0.i194, i32 %nhead
  %14 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %head.i, align 8
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %16 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %tail.i, align 8
  %sub.ptr.lhs.cast = ptrtoint ptr %17 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %15 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %18 = call ptr @memcpy(ptr %add.ptr, ptr %15, i32 %sub.ptr.sub)
  %add.ptr40 = getelementptr i8, ptr %obj.0.i194, i32 %sub
  %19 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %22 to i32
  %23 = mul nuw nsw i32 %conv, 12
  %24 = add nuw nsw i32 %23, 40
  %25 = call ptr @memcpy(ptr %add.ptr40, ptr %20, i32 %24)
  %26 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load.i148 = load i8, ptr %pfmemalloc.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i148)
  %tobool.not.i149 = icmp sgt i8 %bf.load.i148, -1
  br i1 %tobool.not.i149, label %if.end36.if.else_crit_edge, label %skb_cloned.exit

if.end36.if.else_crit_edge:                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

skb_cloned.exit:                                  ; preds = %if.end36
  %27 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %end.i, align 4
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %28, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %29 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %30, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i150.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i150.not, label %skb_cloned.exit.if.else_crit_edge, label %if.then45

skb_cloned.exit.if.else_crit_edge:                ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.then45:                                        ; preds = %skb_cloned.exit
  %tobool.not.i181 = icmp eq ptr %skb, null
  br i1 %tobool.not.i181, label %if.then45.if.end54_crit_edge, label %land.rhs.i184

if.then45.if.end54_crit_edge:                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54

land.rhs.i184:                                    ; preds = %if.then45
  %31 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %end.i, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %32, align 8
  %35 = and i8 %34, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool1.not.i183 = icmp eq i8 %35, 0
  br i1 %tobool1.not.i183, label %land.rhs.i184.land.rhs.i157_crit_edge, label %skb_zcopy.exit188

land.rhs.i184.land.rhs.i157_crit_edge:            ; preds = %land.rhs.i184
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs.i157

skb_zcopy.exit188:                                ; preds = %land.rhs.i184
  %destructor_arg.i185 = getelementptr inbounds %struct.skb_shared_info, ptr %32, i32 0, i32 11
  %36 = ptrtoint ptr %destructor_arg.i185 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %destructor_arg.i185, align 4
  %tobool.not.i152 = icmp eq ptr %37, null
  br i1 %tobool.not.i152, label %skb_zcopy.exit188.land.rhs.i157_crit_edge, label %if.end.i153, !prof !374

skb_zcopy.exit188.land.rhs.i157_crit_edge:        ; preds = %skb_zcopy.exit188
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs.i157

if.end.i153:                                      ; preds = %skb_zcopy.exit188
  %38 = ptrtoint ptr %37 to i32
  %and.i179 = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i179)
  %tobool.i180.not = icmp eq i32 %and.i179, 0
  br i1 %tobool.i180.not, label %land.lhs.true.i, label %if.end.i153.skb_orphan_frags.exit_crit_edge

if.end.i153.skb_orphan_frags.exit_crit_edge:      ; preds = %if.end.i153
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i:                                  ; preds = %if.end.i153
  %39 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %37, align 4
  %cmp.i154 = icmp eq ptr %40, @msg_zerocopy_callback
  br i1 %cmp.i154, label %land.lhs.true.i.land.rhs.i157_crit_edge, label %land.lhs.true.i.skb_orphan_frags.exit_crit_edge

land.lhs.true.i.skb_orphan_frags.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i.land.rhs.i157_crit_edge:          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs.i157

skb_orphan_frags.exit:                            ; preds = %land.lhs.true.i.skb_orphan_frags.exit_crit_edge, %if.end.i153.skb_orphan_frags.exit_crit_edge
  %call8.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb, i32 noundef %10) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool47.not = icmp eq i32 %call8.i, 0
  br i1 %tobool47.not, label %skb_orphan_frags.exit.land.rhs.i157_crit_edge, label %nofrags

skb_orphan_frags.exit.land.rhs.i157_crit_edge:    ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs.i157

land.rhs.i157:                                    ; preds = %skb_orphan_frags.exit.land.rhs.i157_crit_edge, %land.lhs.true.i.land.rhs.i157_crit_edge, %skb_zcopy.exit188.land.rhs.i157_crit_edge, %land.rhs.i184.land.rhs.i157_crit_edge
  %41 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %end.i, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %42, align 8
  %45 = and i8 %44, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool1.not.i = icmp eq i8 %45, 0
  br i1 %tobool1.not.i, label %land.rhs.i157.if.end54_crit_edge, label %skb_zcopy.exit

land.rhs.i157.if.end54_crit_edge:                 ; preds = %land.rhs.i157
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54

skb_zcopy.exit:                                   ; preds = %land.rhs.i157
  %destructor_arg.i158 = getelementptr inbounds %struct.skb_shared_info, ptr %42, i32 0, i32 11
  %46 = ptrtoint ptr %destructor_arg.i158 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %destructor_arg.i158, align 4
  %tobool51.not = icmp eq ptr %47, null
  br i1 %tobool51.not, label %skb_zcopy.exit.if.end54_crit_edge, label %if.then52

skb_zcopy.exit.if.end54_crit_edge:                ; preds = %skb_zcopy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54

if.then52:                                        ; preds = %skb_zcopy.exit
  %refcnt = getelementptr inbounds %struct.ubuf_info, ptr %47, i32 0, i32 2
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %refcnt, i32 1, i32 3, i32 1) #20
  %48 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt, ptr %refcnt, i32 1, ptr elementtype(i32) %refcnt) #20, !srcloc !402
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %48, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.then52.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !373

if.then52.if.end15.sink.split.i.i.i_crit_edge:    ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %if.then52
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %49 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %49)
  %.not.i.i.i = icmp sgt i32 %49, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.if.end54_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !374

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.if.end54_crit_edge:                 ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %if.then52.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %if.then52.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt, i32 noundef %.sink.i.i.i) #20
  br label %if.end54

if.end54:                                         ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.if.end54_crit_edge, %skb_zcopy.exit.if.end54_crit_edge, %land.rhs.i157.if.end54_crit_edge, %if.then45.if.end54_crit_edge
  %50 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %end.i, align 4
  %nr_frags56206 = getelementptr inbounds %struct.skb_shared_info, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %nr_frags56206 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %nr_frags56206, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %cmp58208.not = icmp eq i8 %53, 0
  br i1 %cmp58208.not, label %if.end54.for.end_crit_edge, label %if.end54.for.body_crit_edge

if.end54.for.body_crit_edge:                      ; preds = %if.end54
  br label %for.body

if.end54.for.end_crit_edge:                       ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %skb_frag_ref.exit.for.body_crit_edge, %if.end54.for.body_crit_edge
  %54 = phi ptr [ %67, %skb_frag_ref.exit.for.body_crit_edge ], [ %51, %if.end54.for.body_crit_edge ]
  %i.0209 = phi i32 [ %inc, %skb_frag_ref.exit.for.body_crit_edge ], [ 0, %if.end54.for.body_crit_edge ]
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %54, i32 0, i32 12, i32 %i.0209
  %55 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx.i, align 4
  %57 = getelementptr inbounds %struct.page, ptr %56, i32 0, i32 1
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  %and.i.i.i.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i, !prof !374

if.then.i.i.i.i:                                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i.i = add i32 %59, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %60 = ptrtoint ptr %56 to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i ], [ %60, %if.end.i.i.i.i ]
  %61 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %61, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  %62 = ptrtoint ptr %_refcount.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %_refcount.i.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %63, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, 128
  br i1 %cmp.i.i.i.i, label %if.then.i1.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i1.i.i.i:                                 ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %64 = inttoptr i32 %retval.0.i.i.i.i to ptr
  tail call void @dump_page(ptr noundef %64, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i.i.i
  %call.i.i.i.i9.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %65 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i.i, ptr %_refcount.i.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@pskb_expand_head, %if.then.i.i.i.i.i.i)) #20
          to label %skb_frag_ref.exit [label %if.then.i.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i.i:                              ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %61, i32 noundef 1) #20
  br label %skb_frag_ref.exit

skb_frag_ref.exit:                                ; preds = %if.then.i.i.i.i.i.i, %do.end5.i.i.i.i
  %inc = add nuw nsw i32 %i.0209, 1
  %66 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %end.i, align 4
  %nr_frags56 = getelementptr inbounds %struct.skb_shared_info, ptr %67, i32 0, i32 2
  %68 = ptrtoint ptr %nr_frags56 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %nr_frags56, align 2
  %conv57 = zext i8 %69 to i32
  %cmp58 = icmp ult i32 %inc, %conv57
  br i1 %cmp58, label %skb_frag_ref.exit.for.body_crit_edge, label %skb_frag_ref.exit.for.end_crit_edge

skb_frag_ref.exit.for.end_crit_edge:              ; preds = %skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

skb_frag_ref.exit.for.body_crit_edge:             ; preds = %skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %skb_frag_ref.exit.for.end_crit_edge, %if.end54.for.end_crit_edge
  %.lcssa = phi ptr [ %51, %if.end54.for.end_crit_edge ], [ %67, %skb_frag_ref.exit.for.end_crit_edge ]
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 6
  %70 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %frag_list.i, align 8
  %cmp.i163.not = icmp eq ptr %71, null
  br i1 %cmp.i163.not, label %for.end.if.end62_crit_edge, label %for.end.for.body.i_crit_edge

for.end.for.body.i_crit_edge:                     ; preds = %for.end
  br label %for.body.i

for.end.if.end62_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end62

for.body.i:                                       ; preds = %skb_get.exit.i.for.body.i_crit_edge, %for.end.for.body.i_crit_edge
  %list.06.i = phi ptr [ %list.0.i, %skb_get.exit.i.for.body.i_crit_edge ], [ %71, %for.end.for.body.i_crit_edge ]
  %users.i.i = getelementptr inbounds %struct.sk_buff, ptr %list.06.i, i32 0, i32 21
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %users.i.i, i32 1, i32 3, i32 1) #20
  %72 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i.i, ptr %users.i.i, i32 1, ptr elementtype(i32) %users.i.i) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %72, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !373

for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %for.body.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %73 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %73)
  %.not.i.i.i.i.i = icmp sgt i32 %73, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.skb_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.skb_get.exit.i_crit_edge:       ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_get.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %users.i.i, i32 noundef %.sink.i.i.i.i.i) #20
  br label %skb_get.exit.i

skb_get.exit.i:                                   ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.skb_get.exit.i_crit_edge
  %74 = ptrtoint ptr %list.06.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %list.0.i = load ptr, ptr %list.06.i, align 8
  %tobool.not.i166 = icmp eq ptr %list.0.i, null
  br i1 %tobool.not.i166, label %skb_get.exit.i.if.end62_crit_edge, label %skb_get.exit.i.for.body.i_crit_edge

skb_get.exit.i.for.body.i_crit_edge:              ; preds = %skb_get.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

skb_get.exit.i.if.end62_crit_edge:                ; preds = %skb_get.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end62

if.end62:                                         ; preds = %skb_get.exit.i.if.end62_crit_edge, %for.end.if.end62_crit_edge
  tail call fastcc void @skb_release_data(ptr noundef %skb)
  br label %if.end63

if.else:                                          ; preds = %skb_cloned.exit.if.else_crit_edge, %if.end36.if.else_crit_edge
  %75 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %head.i, align 8
  %77 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %77)
  %bf.load.i167 = load i8, ptr %pfmemalloc.i, align 2
  %78 = and i8 %bf.load.i167, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %78)
  %tobool.not.i168 = icmp eq i8 %78, 0
  br i1 %tobool.not.i168, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.else
  %bf.clear.i.i = and i8 %bf.load.i167, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear.i.i)
  %tobool.not.i.i = icmp eq i8 %bf.clear.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.if.end.i170_crit_edge, label %skb_pp_recycle.exit.i

if.then.i.if.end.i170_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i170

skb_pp_recycle.exit.i:                            ; preds = %if.then.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %79 = load ptr, ptr @mem_map, align 4
  %80 = ptrtoint ptr %76 to i32
  %sub.i.i = add i32 %80, 1073741824
  %shr.i.i = lshr i32 %sub.i.i, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %79, i32 %shr.i.i
  %call.i.i169 = tail call zeroext i1 @page_pool_return_skb_page(ptr noundef %add.ptr.i.i) #20
  br i1 %call.i.i169, label %skb_pp_recycle.exit.i.if.end63_crit_edge, label %skb_pp_recycle.exit.i.if.end.i170_crit_edge

skb_pp_recycle.exit.i.if.end.i170_crit_edge:      ; preds = %skb_pp_recycle.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i170

skb_pp_recycle.exit.i.if.end63_crit_edge:         ; preds = %skb_pp_recycle.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end63

if.end.i170:                                      ; preds = %skb_pp_recycle.exit.i.if.end.i170_crit_edge, %if.then.i.if.end.i170_crit_edge
  tail call void @page_frag_free(ptr noundef %76) #20
  br label %if.end63

if.else.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef %76) #20
  br label %if.end63

if.end63:                                         ; preds = %if.else.i, %if.end.i170, %skb_pp_recycle.exit.i.if.end63_crit_edge, %if.end62
  %81 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast66 = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast67 = ptrtoint ptr %82 to i32
  %sub.ptr.sub68 = sub i32 %sub.ptr.lhs.cast66, %sub.ptr.rhs.cast67
  store ptr %obj.0.i194, ptr %head.i, align 8
  %83 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %bf.load = load i8, ptr %pfmemalloc.i, align 2
  %data70 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %84 = ptrtoint ptr %data70 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %data70, align 4
  %add.ptr71 = getelementptr i8, ptr %85, i32 %sub.ptr.sub68
  store ptr %add.ptr71, ptr %data70, align 4
  %86 = ptrtoint ptr %end.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %add.ptr40, ptr %end.i, align 4
  %87 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %tail.i, align 8
  %add.ptr74 = getelementptr i8, ptr %88, i32 %sub.ptr.sub68
  store ptr %add.ptr74, ptr %tail.i, align 8
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %89 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %89)
  %bf.load.i171 = load i16, ptr %ip_summed.i, align 8
  %90 = and i16 %bf.load.i171, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %90)
  %cmp.i172 = icmp eq i16 %90, 1536
  br i1 %cmp.i172, label %if.then.i173, label %entry.if.end_crit_edge.i

entry.if.end_crit_edge.i:                         ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #22
  %.pre.i = trunc i32 %nhead to i16
  br label %if.end.i174

if.then.i173:                                     ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #22
  %91 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %92 = ptrtoint ptr %91 to i32
  call void @__asan_load2_noabort(i32 %92)
  %93 = load i16, ptr %91, align 8
  %94 = trunc i32 %nhead to i16
  %conv3.i = add i16 %93, %94
  store i16 %conv3.i, ptr %91, align 8
  br label %if.end.i174

if.end.i174:                                      ; preds = %if.then.i173, %entry.if.end_crit_edge.i
  %.pre-phi.i = phi i16 [ %.pre.i, %entry.if.end_crit_edge.i ], [ %94, %if.then.i173 ]
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %95 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %transport_header.i, align 2
  %conv6.i = add i16 %96, %.pre-phi.i
  store i16 %conv6.i, ptr %transport_header.i, align 2
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %97 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %97)
  %98 = load i16, ptr %network_header.i, align 4
  %conv9.i = add i16 %98, %.pre-phi.i
  store i16 %conv9.i, ptr %network_header.i, align 4
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %99 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %mac_header.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %100)
  %cmp.i.not.i = icmp eq i16 %100, -1
  br i1 %cmp.i.not.i, label %if.end.i174.skb_headers_offset_update.exit_crit_edge, label %if.then10.i

if.end.i174.skb_headers_offset_update.exit_crit_edge: ; preds = %if.end.i174
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_headers_offset_update.exit

if.then10.i:                                      ; preds = %if.end.i174
  call void @__sanitizer_cov_trace_pc() #22
  %conv13.i = add i16 %100, %.pre-phi.i
  %101 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_store2_noabort(i32 %101)
  store i16 %conv13.i, ptr %mac_header.i.i, align 2
  br label %skb_headers_offset_update.exit

skb_headers_offset_update.exit:                   ; preds = %if.then10.i, %if.end.i174.skb_headers_offset_update.exit_crit_edge
  %inner_transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 15
  %102 = ptrtoint ptr %inner_transport_header.i to i32
  call void @__asan_load2_noabort(i32 %102)
  %103 = load i16, ptr %inner_transport_header.i, align 2
  %conv17.i = add i16 %103, %.pre-phi.i
  store i16 %conv17.i, ptr %inner_transport_header.i, align 2
  %inner_network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 16
  %104 = ptrtoint ptr %inner_network_header.i to i32
  call void @__asan_load2_noabort(i32 %104)
  %105 = load i16, ptr %inner_network_header.i, align 4
  %conv20.i = add i16 %105, %.pre-phi.i
  store i16 %conv20.i, ptr %inner_network_header.i, align 4
  %inner_mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 17
  %106 = ptrtoint ptr %inner_mac_header.i to i32
  call void @__asan_load2_noabort(i32 %106)
  %107 = load i16, ptr %inner_mac_header.i, align 2
  %conv23.i = add i16 %107, %.pre-phi.i
  store i16 %conv23.i, ptr %inner_mac_header.i, align 2
  %hdr_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 9
  %108 = ptrtoint ptr %hdr_len to i32
  call void @__asan_store2_noabort(i32 %108)
  store i16 0, ptr %hdr_len, align 2
  %bf.clear79 = and i8 %bf.load, 59
  %109 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 %bf.clear79, ptr %pfmemalloc.i, align 2
  %dataref = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr40, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref, i32 noundef 4) #20
  %110 = ptrtoint ptr %dataref to i32
  call void @__asan_store4_noabort(i32 %110)
  store volatile i32 1, ptr %dataref, align 4
  %111 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %end.i, align 4
  %meta_len1.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %meta_len1.i.i to i32
  call void @__asan_store1_noabort(i32 %113)
  store i8 0, ptr %meta_len1.i.i, align 1
  %114 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %115 = ptrtoint ptr %114 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %114, align 4
  %tobool82.not = icmp eq ptr %116, null
  br i1 %tobool82.not, label %skb_headers_offset_update.exit.if.then85_crit_edge, label %lor.lhs.false

skb_headers_offset_update.exit.if.then85_crit_edge: ; preds = %skb_headers_offset_update.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then85

lor.lhs.false:                                    ; preds = %skb_headers_offset_update.exit
  %destructor = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %117 = ptrtoint ptr %destructor to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %destructor, align 4
  %cmp83 = icmp eq ptr %118, @sock_edemux
  br i1 %cmp83, label %lor.lhs.false.if.then85_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false.if.then85_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then85

if.then85:                                        ; preds = %lor.lhs.false.if.then85_crit_edge, %skb_headers_offset_update.exit.if.then85_crit_edge
  %sub86 = sub i32 %sub, %sub.ptr.sub.i
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %119 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %truesize, align 8
  %add87 = add i32 %sub86, %120
  store i32 %add87, ptr %truesize, align 8
  br label %cleanup

nofrags:                                          ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef nonnull %obj.0.i194) #20
  br label %cleanup

cleanup:                                          ; preds = %nofrags, %if.then85, %lor.lhs.false.cleanup_crit_edge, %kmalloc_reserve.exit.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then85 ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ -12, %kmalloc_reserve.exit.cleanup_crit_edge ], [ -12, %nofrags ], [ -12, %lor.lhs.false.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @skb_cloned(ptr nocapture noundef readonly %skb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %cloned = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %0 = ptrtoint ptr %cloned to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %cloned, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %entry.land.end_crit_edge, label %land.rhs

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.end

land.rhs:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %1 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %end.i, align 4
  %dataref = getelementptr inbounds %struct.skb_shared_info, ptr %2, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref, i32 noundef 4) #20
  %3 = ptrtoint ptr %dataref to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dataref, align 4
  %and = and i32 %4, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and)
  %cmp = icmp ne i32 %and, 1
  %phi.cast = zext i1 %cmp to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry.land.end_crit_edge
  %5 = phi i32 [ 0, %entry.land.end_crit_edge ], [ %phi.cast, %land.rhs ]
  ret i32 %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_edemux(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_realloc_headroom(ptr noundef %skb, i32 noundef %headroom) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub = sub i32 %headroom, %sub.ptr.sub.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub)
  %cmp = icmp slt i32 %sub, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i = tail call ptr @__pskb_copy_fclone(ptr noundef %skb, i32 noundef %sub.ptr.sub.i, i32 noundef 2592, i1 noundef zeroext false) #20
  br label %if.end6

if.else:                                          ; preds = %entry
  %call2 = tail call ptr @skb_clone(ptr noundef %skb, i32 noundef 2592)
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.else.if.end6_crit_edge, label %land.lhs.true

if.else.if.end6_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

land.lhs.true:                                    ; preds = %if.else
  %add = add nuw i32 %sub, 127
  %and = and i32 %add, -128
  %call3 = tail call i32 @pskb_expand_head(ptr noundef nonnull %call2, i32 noundef %and, i32 noundef 0, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.if.end6_crit_edge, label %if.then5

land.lhs.true.if.end6_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %call2)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %land.lhs.true.if.end6_crit_edge, %if.else.if.end6_crit_edge, %if.then
  %skb2.0 = phi ptr [ %call.i.i, %if.then ], [ null, %if.then5 ], [ %call2, %land.lhs.true.if.end6_crit_edge ], [ null, %if.else.if.end6_crit_edge ]
  ret ptr %skb2.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_expand_head(ptr noundef %skb, i32 noundef %headroom) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i.neg = sub i32 %sub.ptr.rhs.cast.i, %sub.ptr.lhs.cast.i
  %sub = add i32 %sub.ptr.sub.i.neg, %headroom
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %4 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i, align 4
  %sub.ptr.lhs.cast.i101 = ptrtoint ptr %5 to i32
  %sub.ptr.sub.i103.neg = sub i32 %sub.ptr.rhs.cast.i, %sub.ptr.lhs.cast.i101
  %6 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub)
  %cmp = icmp slt i32 %sub, 1
  br i1 %cmp, label %land.rhs, label %if.end38

land.rhs:                                         ; preds = %entry
  %.b97 = load i1, ptr @skb_expand_head.__already_done, align 1
  br i1 %.b97, label %land.rhs.cleanup70_crit_edge, label %if.then, !prof !374

land.rhs.cleanup70_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup70

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @skb_expand_head.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1810, i32 noundef 9, ptr noundef nonnull @.str.16, ptr noundef nonnull @__func__.skb_expand_head) #20
  br label %cleanup70

if.end38:                                         ; preds = %entry
  %add = add nuw i32 %sub, 127
  %and = and i32 %add, -128
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %9 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp.i.not = icmp eq i32 %10, 1
  br i1 %cmp.i.not, label %lor.lhs.false, label %if.end38.if.then42_crit_edge

if.end38.if.then42_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then42

lor.lhs.false:                                    ; preds = %if.end38
  %destructor.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %11 = ptrtoint ptr %destructor.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %destructor.i, align 4
  %cmp.i104 = icmp eq ptr %12, @sock_wfree
  %cmp2.i = icmp eq ptr %12, @__sock_wfree
  %or.cond.i = or i1 %cmp.i104, %cmp2.i
  %cmp4.i = icmp eq ptr %12, @tcp_wfree
  %spec.select.i = or i1 %cmp4.i, %or.cond.i
  br i1 %spec.select.i, label %lor.lhs.false.if.end58_crit_edge, label %lor.lhs.false.if.then42_crit_edge

lor.lhs.false.if.then42_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then42

lor.lhs.false.if.end58_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end58

if.then42:                                        ; preds = %lor.lhs.false.if.then42_crit_edge, %if.end38.if.then42_crit_edge
  %call43 = tail call ptr @skb_clone(ptr noundef %skb, i32 noundef 2592)
  %tobool44.not = icmp eq ptr %call43, null
  br i1 %tobool44.not, label %if.then42.fail_crit_edge, label %if.end54, !prof !373

if.then42.fail_crit_edge:                         ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail

if.end54:                                         ; preds = %if.then42
  %tobool55.not = icmp eq ptr %8, null
  br i1 %tobool55.not, label %if.end54.cleanup.thread_crit_edge, label %if.then56

if.end54.cleanup.thread_crit_edge:                ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread

if.then56:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @skb_set_owner_w(ptr noundef nonnull %call43, ptr noundef nonnull %8) #20
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then56, %if.end54.cleanup.thread_crit_edge
  tail call void @consume_skb(ptr noundef %skb)
  br label %if.end58

if.end58:                                         ; preds = %cleanup.thread, %lor.lhs.false.if.end58_crit_edge
  %skb.addr.1 = phi ptr [ %skb, %lor.lhs.false.if.end58_crit_edge ], [ %call43, %cleanup.thread ]
  %call59 = tail call i32 @pskb_expand_head(ptr noundef %skb.addr.1, i32 noundef %and, i32 noundef 0, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %if.end62, label %if.end58.fail_crit_edge

if.end58.fail_crit_edge:                          ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail

if.end62:                                         ; preds = %if.end58
  %tobool63.not = icmp eq ptr %8, null
  br i1 %tobool63.not, label %if.end62.cleanup70_crit_edge, label %land.lhs.true

if.end62.cleanup70_crit_edge:                     ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup70

land.lhs.true:                                    ; preds = %if.end62
  %destructor.i105 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 4, i32 0, i32 1
  %13 = ptrtoint ptr %destructor.i105 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %destructor.i105, align 4
  %cmp.i106 = icmp eq ptr %14, @sock_wfree
  %cmp2.i107 = icmp eq ptr %14, @__sock_wfree
  %or.cond.i108 = or i1 %cmp.i106, %cmp2.i107
  %cmp4.i109 = icmp eq ptr %14, @tcp_wfree
  %spec.select.i110 = or i1 %cmp4.i109, %or.cond.i108
  br i1 %spec.select.i110, label %if.then65, label %land.lhs.true.cleanup70_crit_edge

land.lhs.true.cleanup70_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup70

if.then65:                                        ; preds = %land.lhs.true
  %end.i111 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 17
  %15 = ptrtoint ptr %end.i111 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %end.i111, align 4
  %head.i112 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 18
  %17 = ptrtoint ptr %head.i112 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %head.i112, align 8
  %sub.ptr.lhs.cast.i113 = ptrtoint ptr %16 to i32
  %sub.ptr.rhs.cast.i114 = ptrtoint ptr %18 to i32
  %sub.ptr.sub.i115 = sub i32 %sub.ptr.lhs.cast.i113, %sub.ptr.rhs.cast.i114
  %sub67 = add i32 %sub.ptr.sub.i115, %sub.ptr.sub.i103.neg
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %8, i32 0, i32 23
  %call.i.i.i.i116 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc, i32 1, i32 3, i32 1) #20
  %19 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc, ptr %sk_wmem_alloc, i32 %sub67, ptr elementtype(i32) %sk_wmem_alloc) #20, !srcloc !402
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %tobool1.not.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool1.not.i.i, label %if.then65.if.end15.sink.split.i.i_crit_edge, label %if.else.i.i, !prof !373

if.then65.if.end15.sink.split.i.i_crit_edge:      ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i

if.else.i.i:                                      ; preds = %if.then65
  %add.i.i = add i32 %asmresult.i.i.i.i, %sub67
  %20 = or i32 %add.i.i, %asmresult.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %20)
  %.not.i.i = icmp sgt i32 %20, -1
  br i1 %.not.i.i, label %if.else.i.i.refcount_add.exit_crit_edge, label %if.else.i.i.if.end15.sink.split.i.i_crit_edge, !prof !374

if.else.i.i.if.end15.sink.split.i.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i

if.else.i.i.refcount_add.exit_crit_edge:          ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refcount_add.exit

if.end15.sink.split.i.i:                          ; preds = %if.else.i.i.if.end15.sink.split.i.i_crit_edge, %if.then65.if.end15.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 2, %if.then65.if.end15.sink.split.i.i_crit_edge ], [ 1, %if.else.i.i.if.end15.sink.split.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc, i32 noundef %.sink.i.i) #20
  br label %refcount_add.exit

refcount_add.exit:                                ; preds = %if.end15.sink.split.i.i, %if.else.i.i.refcount_add.exit_crit_edge
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 20
  %21 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %truesize, align 8
  %add68 = add i32 %22, %sub67
  store i32 %add68, ptr %truesize, align 8
  br label %cleanup70

fail:                                             ; preds = %if.end58.fail_crit_edge, %if.then42.fail_crit_edge
  %skb.addr.2 = phi ptr [ %skb.addr.1, %if.end58.fail_crit_edge ], [ %skb, %if.then42.fail_crit_edge ]
  tail call fastcc void @kfree_skb(ptr noundef %skb.addr.2)
  br label %cleanup70

cleanup70:                                        ; preds = %fail, %refcount_add.exit, %land.lhs.true.cleanup70_crit_edge, %if.end62.cleanup70_crit_edge, %if.then, %land.rhs.cleanup70_crit_edge
  %retval.0 = phi ptr [ null, %fail ], [ %skb, %if.then ], [ %skb.addr.1, %refcount_add.exit ], [ %skb.addr.1, %land.lhs.true.cleanup70_crit_edge ], [ %skb.addr.1, %if.end62.cleanup70_crit_edge ], [ %skb, %land.rhs.cleanup70_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_set_owner_w(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_copy_expand(ptr nocapture noundef readonly %skb, i32 noundef %newheadroom, i32 noundef %newtailroom, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  %add = add i32 %newtailroom, %newheadroom
  %add1 = add i32 %add, %1
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %2 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %3 = and i8 %bf.load.i.i, 2
  %4 = zext i8 %3 to i32
  %call2 = tail call ptr @__alloc_skb(i32 noundef %add1, i32 noundef %gfp_mask, i32 noundef %4, i32 noundef -1)
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %7 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %6 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %8 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %data.i48 = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 19
  %9 = ptrtoint ptr %data.i48 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %data.i48, align 4
  %add.ptr.i = getelementptr i8, ptr %10, i32 %newheadroom
  store ptr %add.ptr.i, ptr %data.i48, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 16
  %11 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %12, i32 %newheadroom
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %13 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %len, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 7
  %15 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not.i = icmp eq i32 %16, 0
  br i1 %tobool.i.not.i, label %do.end8.i, label %do.body3.i, !prof !374

do.body3.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i:                                        ; preds = %if.end
  %add.ptr.i49 = getelementptr i8, ptr %add.ptr1.i, i32 %14
  %17 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr.i49, ptr %tail.i, align 8
  %len9.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 6
  %18 = ptrtoint ptr %len9.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %len9.i, align 4
  %add.i = add i32 %19, %14
  store i32 %add.i, ptr %len9.i, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 17
  %20 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %end.i, align 4
  %cmp.i = icmp ugt ptr %add.ptr.i49, %21
  br i1 %cmp.i, label %if.then17.i, label %skb_put.exit, !prof !373

if.then17.i:                                      ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %22 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef nonnull %call2, i32 noundef %14, ptr noundef %22) #20
  unreachable

skb_put.exit:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i, i32 %newheadroom)
  %cmp.not = icmp slt i32 %sub.ptr.sub.i, %newheadroom
  %sub = sub i32 %newheadroom, %sub.ptr.sub.i
  %23 = tail call i32 @llvm.smin.i32(i32 %sub.ptr.sub.i, i32 %newheadroom)
  %head_copy_off.0 = select i1 %cmp.not, i32 %sub, i32 0
  %sub8 = sub i32 0, %23
  %head = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 18
  %24 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %head, align 8
  %add.ptr = getelementptr i8, ptr %25, i32 %head_copy_off.0
  %26 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %len, align 4
  %add10 = add i32 %27, %23
  %call11 = tail call i32 @skb_copy_bits(ptr noundef %skb, i32 noundef %sub8, ptr noundef %add.ptr, i32 noundef %add10)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %do.end22, label %do.body16, !prof !374

do.body16:                                        ; preds = %skb_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1890, 0\0A.popsection", ""() #20, !srcloc !419
  unreachable

do.end22:                                         ; preds = %skb_put.exit
  tail call fastcc void @__copy_skb_header(ptr noundef nonnull %call2, ptr noundef %skb) #20
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %28 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %end.i.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 4
  %30 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %gso_size.i, align 4
  %32 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %end.i, align 4
  %gso_size2.i = getelementptr inbounds %struct.skb_shared_info, ptr %33, i32 0, i32 4
  %34 = ptrtoint ptr %gso_size2.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %31, ptr %gso_size2.i, align 4
  %35 = load ptr, ptr %end.i.i, align 4
  %gso_segs.i = getelementptr inbounds %struct.skb_shared_info, ptr %35, i32 0, i32 5
  %36 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %gso_segs.i, align 2
  %38 = load ptr, ptr %end.i, align 4
  %gso_segs5.i = getelementptr inbounds %struct.skb_shared_info, ptr %38, i32 0, i32 5
  %39 = ptrtoint ptr %gso_segs5.i to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %37, ptr %gso_segs5.i, align 2
  %40 = load ptr, ptr %end.i.i, align 4
  %gso_type.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 8
  %41 = ptrtoint ptr %gso_type.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %gso_type.i, align 8
  %43 = load ptr, ptr %end.i, align 4
  %gso_type8.i = getelementptr inbounds %struct.skb_shared_info, ptr %43, i32 0, i32 8
  %44 = ptrtoint ptr %gso_type8.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %42, ptr %gso_type8.i, align 8
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 15
  %45 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %46 = and i16 %bf.load.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %46)
  %cmp.i50 = icmp eq i16 %46, 1536
  br i1 %cmp.i50, label %if.then.i, label %entry.if.end_crit_edge.i

entry.if.end_crit_edge.i:                         ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #22
  %.pre.i = trunc i32 %sub to i16
  br label %if.end.i

if.then.i:                                        ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #22
  %47 = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 15, i32 0, i32 5
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %47, align 8
  %50 = trunc i32 %sub to i16
  %conv3.i = add i16 %49, %50
  store i16 %conv3.i, ptr %47, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry.if.end_crit_edge.i
  %.pre-phi.i = phi i16 [ %.pre.i, %entry.if.end_crit_edge.i ], [ %50, %if.then.i ]
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 15, i32 0, i32 19
  %51 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %transport_header.i, align 2
  %conv6.i = add i16 %52, %.pre-phi.i
  store i16 %conv6.i, ptr %transport_header.i, align 2
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 15, i32 0, i32 20
  %53 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %network_header.i, align 4
  %conv9.i = add i16 %54, %.pre-phi.i
  store i16 %conv9.i, ptr %network_header.i, align 4
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 15, i32 0, i32 21
  %55 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %mac_header.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %56)
  %cmp.i.not.i = icmp eq i16 %56, -1
  br i1 %cmp.i.not.i, label %if.end.i.skb_headers_offset_update.exit_crit_edge, label %if.then10.i

if.end.i.skb_headers_offset_update.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_headers_offset_update.exit

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv13.i = add i16 %56, %.pre-phi.i
  %57 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 %conv13.i, ptr %mac_header.i.i, align 2
  br label %skb_headers_offset_update.exit

skb_headers_offset_update.exit:                   ; preds = %if.then10.i, %if.end.i.skb_headers_offset_update.exit_crit_edge
  %inner_transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 15, i32 0, i32 15
  %58 = ptrtoint ptr %inner_transport_header.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %inner_transport_header.i, align 2
  %conv17.i = add i16 %59, %.pre-phi.i
  store i16 %conv17.i, ptr %inner_transport_header.i, align 2
  %inner_network_header.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 15, i32 0, i32 16
  %60 = ptrtoint ptr %inner_network_header.i to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %inner_network_header.i, align 4
  %conv20.i = add i16 %61, %.pre-phi.i
  store i16 %conv20.i, ptr %inner_network_header.i, align 4
  %inner_mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %call2, i32 0, i32 15, i32 0, i32 17
  %62 = ptrtoint ptr %inner_mac_header.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %inner_mac_header.i, align 2
  %conv23.i = add i16 %63, %.pre-phi.i
  store i16 %conv23.i, ptr %inner_mac_header.i, align 2
  br label %cleanup

cleanup:                                          ; preds = %skb_headers_offset_update.exit, %entry.cleanup_crit_edge
  ret ptr %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__skb_pad(ptr noundef %skb, i32 noundef %pad, i1 noundef zeroext %free_on_error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %0 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.land.lhs.true_crit_edge, label %skb_cloned.exit

entry.land.lhs.true_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

skb_cloned.exit:                                  ; preds = %entry
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %1 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %end.i.i, align 4
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %2, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %3 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %4, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i.not, label %skb_cloned.exit.land.lhs.true_crit_edge, label %skb_cloned.exit.if.end_crit_edge

skb_cloned.exit.if.end_crit_edge:                 ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_cloned.exit.land.lhs.true_crit_edge:          ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %skb_cloned.exit.land.lhs.true_crit_edge, %entry.land.lhs.true_crit_edge
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %5 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not.i = icmp eq i32 %6, 0
  br i1 %tobool.i.not.i, label %cond.false.i, label %land.lhs.true.skb_tailroom.exit_crit_edge

land.lhs.true.skb_tailroom.exit_crit_edge:        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_tailroom.exit

cond.false.i:                                     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %7 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %end.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %9 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tail.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %8 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %10 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  br label %skb_tailroom.exit

skb_tailroom.exit:                                ; preds = %cond.false.i, %land.lhs.true.skb_tailroom.exit_crit_edge
  %cond.i = phi i32 [ %sub.ptr.sub.i, %cond.false.i ], [ 0, %land.lhs.true.skb_tailroom.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cond.i, i32 %pad)
  %cmp.not = icmp slt i32 %cond.i, %pad
  br i1 %cmp.not, label %skb_tailroom.exit.if.end_crit_edge, label %if.then

skb_tailroom.exit.if.end_crit_edge:               ; preds = %skb_tailroom.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %skb_tailroom.exit
  call void @__sanitizer_cov_trace_pc() #22
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %data, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %13 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %len, align 4
  %add.ptr = getelementptr i8, ptr %12, i32 %14
  %15 = call ptr @memset(ptr %add.ptr, i32 0, i32 %pad)
  br label %cleanup

if.end:                                           ; preds = %skb_tailroom.exit.if.end_crit_edge, %skb_cloned.exit.if.end_crit_edge
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %16 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %data_len, align 8
  %add = add i32 %17, %pad
  %end = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %18 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %end, align 4
  %tail = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %20 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %tail, align 8
  %sub.ptr.lhs.cast = ptrtoint ptr %19 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %21 to i32
  %sub.ptr.sub.neg = sub i32 %sub.ptr.rhs.cast, %sub.ptr.lhs.cast
  %sub = add i32 %add, %sub.ptr.sub.neg
  %22 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load.i55 = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i55)
  %tobool.not.i56 = icmp sgt i8 %bf.load.i55, -1
  br i1 %tobool.not.i56, label %skb_cloned.exit64.thread, label %skb_cloned.exit64

skb_cloned.exit64.thread:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp470 = icmp sgt i32 %sub, 0
  br i1 %cmp470, label %skb_cloned.exit64.thread.if.then7_crit_edge, label %skb_cloned.exit64.thread.if.end18_crit_edge, !prof !374

skb_cloned.exit64.thread.if.end18_crit_edge:      ; preds = %skb_cloned.exit64.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

skb_cloned.exit64.thread.if.then7_crit_edge:      ; preds = %skb_cloned.exit64.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

skb_cloned.exit64:                                ; preds = %if.end
  %dataref.i58 = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 10
  %call.i.i.i59 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i58, i32 noundef 4) #20
  %23 = ptrtoint ptr %dataref.i58 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %dataref.i58, align 4
  %and.i60 = and i32 %24, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i60)
  %cmp.i61.not = icmp ne i32 %and.i60, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp4 = icmp sgt i32 %sub, 0
  %brmerge = select i1 %cmp.i61.not, i1 true, i1 %cmp4
  br i1 %brmerge, label %skb_cloned.exit64.if.then7_crit_edge, label %skb_cloned.exit64.if.end18_crit_edge, !prof !420

skb_cloned.exit64.if.end18_crit_edge:             ; preds = %skb_cloned.exit64
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

skb_cloned.exit64.if.then7_crit_edge:             ; preds = %skb_cloned.exit64
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then7

if.then7:                                         ; preds = %skb_cloned.exit64.if.then7_crit_edge, %skb_cloned.exit64.thread.if.then7_crit_edge
  %call8 = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef %sub, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.then7.if.end18_crit_edge, label %if.then7.free_skb_crit_edge, !prof !374

if.then7.free_skb_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_skb

if.then7.if.end18_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

if.end18:                                         ; preds = %if.then7.if.end18_crit_edge, %skb_cloned.exit64.if.end18_crit_edge, %skb_cloned.exit64.thread.if.end18_crit_edge
  %25 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %data_len, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.i.not.i66 = icmp eq i32 %26, 0
  br i1 %tobool.i.not.i66, label %if.end18.if.end28_crit_edge, label %cond.true.i

if.end18.if.end28_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

cond.true.i:                                      ; preds = %if.end18
  %call.i.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %26) #20
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %cond.true.i.free_skb_crit_edge, label %cond.true.i.if.end28_crit_edge

cond.true.i.if.end28_crit_edge:                   ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

cond.true.i.free_skb_crit_edge:                   ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_skb

if.end28:                                         ; preds = %cond.true.i.if.end28_crit_edge, %if.end18.if.end28_crit_edge
  %data29 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %27 = ptrtoint ptr %data29 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %data29, align 4
  %len30 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %29 = ptrtoint ptr %len30 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %len30, align 4
  %add.ptr31 = getelementptr i8, ptr %28, i32 %30
  %31 = call ptr @memset(ptr %add.ptr31, i32 0, i32 %pad)
  br label %cleanup

free_skb:                                         ; preds = %cond.true.i.free_skb_crit_edge, %if.then7.free_skb_crit_edge
  %err.0 = phi i32 [ %call8, %if.then7.free_skb_crit_edge ], [ -12, %cond.true.i.free_skb_crit_edge ]
  br i1 %free_on_error, label %if.then33, label %free_skb.cleanup_crit_edge

free_skb.cleanup_crit_edge:                       ; preds = %free_skb
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then33:                                        ; preds = %free_skb
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef %skb)
  br label %cleanup

cleanup:                                          ; preds = %if.then33, %free_skb.cleanup_crit_edge, %if.end28, %if.then
  %retval.0 = phi i32 [ 0, %if.end28 ], [ 0, %if.then ], [ %err.0, %if.then33 ], [ %err.0, %free_skb.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pskb_put(ptr noundef %skb, ptr noundef %tail, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.not = icmp eq ptr %tail, %skb
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %0 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %data_len, align 8
  %add = add i32 %1, %len
  store i32 %add, ptr %data_len, align 8
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %2 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len1, align 4
  %add2 = add i32 %3, %len
  store i32 %add2, ptr %len1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %tail, i32 0, i32 16
  %4 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tail.i.i, align 8
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %tail, i32 0, i32 7
  %6 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i.not.i = icmp eq i32 %7, 0
  br i1 %tobool.i.not.i, label %do.end8.i, label %do.body3.i, !prof !374

do.body3.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i:                                        ; preds = %if.end
  %add.ptr.i = getelementptr i8, ptr %5, i32 %len
  %8 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %add.ptr.i, ptr %tail.i.i, align 8
  %len9.i = getelementptr inbounds %struct.sk_buff, ptr %tail, i32 0, i32 6
  %9 = ptrtoint ptr %len9.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len9.i, align 4
  %add.i = add i32 %10, %len
  store i32 %add.i, ptr %len9.i, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %tail, i32 0, i32 17
  %11 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %end.i, align 4
  %cmp.i = icmp ugt ptr %add.ptr.i, %12
  br i1 %cmp.i, label %if.then17.i, label %skb_put.exit, !prof !373

if.then17.i:                                      ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %13 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef %tail, i32 noundef %len, ptr noundef %13) #20
  unreachable

skb_put.exit:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  ret ptr %5
}

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @skb_over_panic(ptr nocapture noundef readonly %skb, i32 noundef %sz, ptr noundef %addr) unnamed_addr #11 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %4 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %6 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tail.i, align 8
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %8 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i, align 4
  %10 = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 2
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 8
  %tobool.not.i = icmp eq ptr %12, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.37, ptr %12
  %13 = ptrtoint ptr %9 to i32
  %14 = ptrtoint ptr %7 to i32
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.35, ptr noundef nonnull @__func__.skb_over_panic, ptr noundef %addr, i32 noundef %1, i32 noundef %sz, ptr noundef %3, ptr noundef %5, i32 noundef %14, i32 noundef %13, ptr noundef nonnull %spec.select.i) #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 113, 0\0A.popsection", ""() #20, !srcloc !421
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_push(ptr nocapture noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %idx.neg = sub i32 0, %len
  %add.ptr = getelementptr i8, ptr %1, i32 %idx.neg
  store ptr %add.ptr, ptr %data, align 4
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %2 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len1, align 4
  %add = add i32 %3, %len
  store i32 %add, ptr %len1, align 4
  %head = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %4 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head, align 8
  %cmp = icmp ult ptr %add.ptr, %5
  br i1 %cmp, label %if.then, label %if.end, !prof !373

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %6 = tail call ptr @llvm.returnaddress(i32 0)
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_under_panic(ptr noundef %skb, i32 noundef %len, ptr noundef %6)
  unreachable

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %data, align 4
  ret ptr %8
}

; Function Attrs: noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @skb_under_panic(ptr nocapture noundef readonly %skb, i32 noundef %sz, ptr noundef %addr) unnamed_addr #11 align 64 {
entry:
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %4 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %6 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tail.i, align 8
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %8 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i, align 4
  %10 = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 2
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 8
  %tobool.not.i = icmp eq ptr %12, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.37, ptr %12
  %13 = ptrtoint ptr %9 to i32
  %14 = ptrtoint ptr %7 to i32
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.35, ptr noundef nonnull @__func__.skb_under_panic, ptr noundef %addr, i32 noundef %1, i32 noundef %sz, ptr noundef %3, ptr noundef %5, i32 noundef %14, i32 noundef %13, ptr noundef nonnull %spec.select.i) #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 113, 0\0A.popsection", ""() #20, !srcloc !421
  unreachable
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_pull(ptr nocapture noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %len)
  %cmp.i = icmp ult i32 %1, %len
  br i1 %cmp.i, label %entry.skb_pull_inline.exit_crit_edge, label %cond.false.i, !prof !373

entry.skb_pull_inline.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_pull_inline.exit

cond.false.i:                                     ; preds = %entry
  %sub.i.i = sub i32 %1, %len
  %2 = ptrtoint ptr %len1.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %sub.i.i, ptr %len1.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %3 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %4)
  %cmp.i.i = icmp ult i32 %sub.i.i, %4
  br i1 %cmp.i.i, label %do.body4.i.i, label %__skb_pull.exit.i, !prof !373

do.body4.i.i:                                     ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #20, !srcloc !422
  unreachable

__skb_pull.exit.i:                                ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #22
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %6, i32 %len
  store ptr %add.ptr.i.i, ptr %data.i.i, align 4
  br label %skb_pull_inline.exit

skb_pull_inline.exit:                             ; preds = %__skb_pull.exit.i, %entry.skb_pull_inline.exit_crit_edge
  %cond.i = phi ptr [ %add.ptr.i.i, %__skb_pull.exit.i ], [ null, %entry.skb_pull_inline.exit_crit_edge ]
  ret ptr %cond.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_pull_data(ptr nocapture noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %len)
  %cmp = icmp ult i32 %1, %len
  br i1 %cmp, label %entry.cleanup_crit_edge, label %cond.false.i.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

cond.false.i.i:                                   ; preds = %entry
  %data1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data1, align 4
  %sub.i.i.i = sub i32 %1, %len
  %4 = ptrtoint ptr %len2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %sub.i.i.i, ptr %len2, align 4
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %5 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %data_len.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i, i32 %6)
  %cmp.i.i.i = icmp ult i32 %sub.i.i.i, %6
  br i1 %cmp.i.i.i, label %do.body4.i.i.i, label %skb_pull.exit, !prof !373

do.body4.i.i.i:                                   ; preds = %cond.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #20, !srcloc !422
  unreachable

skb_pull.exit:                                    ; preds = %cond.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i.i.i = getelementptr i8, ptr %3, i32 %len
  %7 = ptrtoint ptr %data1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr.i.i.i, ptr %data1, align 4
  br label %cleanup

cleanup:                                          ; preds = %skb_pull.exit, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %3, %skb_pull.exit ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_trim(ptr nocapture noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %len)
  %cmp = icmp ugt i32 %1, %len
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %if.end21.critedge.i.i, label %do.end.i.i, !prof !374

do.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.31, i32 noundef 2789, i32 noundef 9, ptr noundef null) #20
  br label %if.end

if.end21.critedge.i.i:                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %4 = ptrtoint ptr %len1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %len, ptr %len1, align 4
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i.i.i, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 %len
  %tail.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %7 = ptrtoint ptr %tail.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr.i.i.i, ptr %tail.i.i.i, align 8
  br label %if.end

if.end:                                           ; preds = %if.end21.critedge.i.i, %do.end.i.i, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_condense(ptr noundef %skb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %0 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %data_len, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then:                                          ; preds = %entry
  %end = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %2 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end, align 4
  %tail = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %4 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tail, align 8
  %sub.ptr.lhs.cast = ptrtoint ptr %3 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %5 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %sub.ptr.sub)
  %cmp = icmp ugt i32 %1, %sub.ptr.sub
  br i1 %cmp, label %if.then.return_crit_edge, label %lor.lhs.false

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

lor.lhs.false:                                    ; preds = %if.then
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %6 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %lor.lhs.false.if.end_crit_edge, label %skb_cloned.exit

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_cloned.exit:                                  ; preds = %lor.lhs.false
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %3, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %7 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %8, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i.not, label %skb_cloned.exit.if.end_crit_edge, label %skb_cloned.exit.return_crit_edge

skb_cloned.exit.return_crit_edge:                 ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

skb_cloned.exit.if.end_crit_edge:                 ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %skb_cloned.exit.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge
  %9 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %data_len, align 8
  %call5 = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %10)
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry.if.end6_crit_edge
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %11 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %end.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %13 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %12 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %14 to i32
  %sub.ptr.sub.i = add i32 %sub.ptr.lhs.cast.i, 512
  %add8 = sub i32 %sub.ptr.sub.i, %sub.ptr.rhs.cast.i
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %15 = ptrtoint ptr %truesize to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %add8, ptr %truesize, align 8
  br label %return

return:                                           ; preds = %if.end6, %skb_cloned.exit.return_crit_edge, %if.then.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pskb_trim_rcsum_slow(ptr noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  %ops.i = alloca %struct.skb_checksum_ops, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %ip_summed, align 8
  %bf.lshr = lshr i16 %bf.load, 9
  %trunc = trunc i16 %bf.lshr to i2
  %1 = zext i2 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.50)
  switch i2 %trunc, label %entry.if.end25_crit_edge [
    i2 -2, label %if.then
    i2 -1, label %if.then12
  ]

entry.if.end25_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %len2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %2 = ptrtoint ptr %len2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len2, align 4
  %sub = sub i32 %3, %len
  %4 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ops.i) #20
  %7 = load i64, ptr @__const.skb_checksum.ops, align 8
  %8 = ptrtoint ptr %ops.i to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %7, ptr %ops.i, align 8
  %call.i = call i32 @__skb_checksum(ptr noundef %skb, i32 noundef %len, i32 noundef %sub, i32 noundef 0, ptr noundef nonnull %ops.i) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ops.i) #20
  %neg.i = xor i32 %call.i, -1
  %and.i.i.i = and i32 %len, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  %or.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %neg.i, i32 %neg.i, i32 24) #20
  %retval.0.i.i.i = select i1 %tobool.not.i.i.i, i32 %neg.i, i32 %or.i.i.i.i
  %add.i.i.i = add i32 %retval.0.i.i.i, %6
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %retval.0.i.i.i)
  %cmp.i.i.i = icmp ult i32 %add.i.i.i, %retval.0.i.i.i
  %conv.i.i.i = zext i1 %cmp.i.i.i to i32
  %add1.i.i.i = add i32 %add.i.i.i, %conv.i.i.i
  %9 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %add1.i.i.i, ptr %4, align 8
  br label %if.end25

if.then12:                                        ; preds = %entry
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %10 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %12 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %11, %13
  %14 = tail call i32 @llvm.umin.i32(i32 %sub.i, i32 %len)
  %15 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %15, align 8
  %conv.i = zext i16 %17 to i32
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %18 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %20 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %19 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %21 to i32
  %csum_offset = getelementptr inbounds %struct.anon.36, ptr %15, i32 0, i32 1
  %22 = ptrtoint ptr %csum_offset to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %csum_offset, align 2
  %conv18 = zext i16 %23 to i32
  %sub.ptr.sub.i.neg.i = add nuw nsw i32 %conv.i, 2
  %sub.i45 = sub i32 %sub.ptr.sub.i.neg.i, %sub.ptr.lhs.cast.i.i
  %add = add i32 %sub.i45, %sub.ptr.rhs.cast.i.i
  %add19 = add i32 %add, %conv18
  call void @__sanitizer_cov_trace_cmp4(i32 %add19, i32 %14)
  %cmp20.not = icmp ugt i32 %add19, %14
  br i1 %cmp20.not, label %if.then12.return_crit_edge, label %if.then12.if.end25_crit_edge

if.then12.if.end25_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

if.then12.return_crit_edge:                       ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end25:                                         ; preds = %if.then12.if.end25_crit_edge, %if.then, %entry.if.end25_crit_edge
  %data_len.i46 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %24 = ptrtoint ptr %data_len.i46 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %data_len.i46, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i, label %__skb_trim.exit.i, label %if.then.i

if.then.i:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #22
  %call.i47 = tail call i32 @___pskb_trim(ptr noundef %skb, i32 noundef %len) #20
  br label %return

__skb_trim.exit.i:                                ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #22
  %len22.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %26 = ptrtoint ptr %len22.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %len, ptr %len22.i.i.i, align 4
  %data.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %27 = ptrtoint ptr %data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %data.i.i.i.i, align 4
  %add.ptr.i.i.i.i = getelementptr i8, ptr %28, i32 %len
  %tail.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %29 = ptrtoint ptr %tail.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %add.ptr.i.i.i.i, ptr %tail.i.i.i.i, align 8
  br label %return

return:                                           ; preds = %__skb_trim.exit.i, %if.then.i, %if.then12.return_crit_edge
  %retval.1 = phi i32 [ -22, %if.then12.return_crit_edge ], [ %call.i47, %if.then.i ], [ 0, %__skb_trim.exit.i ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_checksum(ptr nocapture noundef readonly %skb, i32 noundef %offset, i32 noundef %len, i32 noundef %csum) #0 align 64 {
entry:
  %ops = alloca %struct.skb_checksum_ops, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ops) #20
  %0 = load i64, ptr @__const.skb_checksum.ops, align 8
  %1 = ptrtoint ptr %ops to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %0, ptr %ops, align 8
  %call = call i32 @__skb_checksum(ptr noundef %skb, i32 noundef %offset, i32 noundef %len, i32 noundef %csum, ptr noundef nonnull %ops)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ops) #20
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %delta) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tail = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %0 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tail, align 8
  %add.ptr = getelementptr i8, ptr %1, i32 %delta
  %end = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %2 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %add.ptr to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.ptr.sub)
  %cmp = icmp sgt i32 %sub.ptr.sub, 0
  br i1 %cmp, label %entry.if.then_crit_edge, label %lor.lhs.false

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %4 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %lor.lhs.false.do.body_crit_edge, label %skb_cloned.exit

lor.lhs.false.do.body_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

skb_cloned.exit:                                  ; preds = %lor.lhs.false
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %3, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %5 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %6, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i.not, label %skb_cloned.exit.do.body_crit_edge, label %skb_cloned.exit.if.then_crit_edge

skb_cloned.exit.if.then_crit_edge:                ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

skb_cloned.exit.do.body_crit_edge:                ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

if.then:                                          ; preds = %skb_cloned.exit.if.then_crit_edge, %entry.if.then_crit_edge
  %add = add i32 %sub.ptr.sub, 128
  %spec.select = select i1 %cmp, i32 %add, i32 0
  %call2 = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef %spec.select, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.then.do.body_crit_edge, label %if.then.cleanup130_crit_edge

if.then.cleanup130_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup130

if.then.do.body_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.body:                                          ; preds = %if.then.do.body_crit_edge, %skb_cloned.exit.do.body_crit_edge, %lor.lhs.false.do.body_crit_edge
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %7 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %9 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %8, %10
  %11 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tail, align 8
  %call8 = tail call i32 @skb_copy_bits(ptr noundef %skb, i32 noundef %sub.i, ptr noundef %12, i32 noundef %delta)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %do.end19, label %do.body13, !prof !374

do.body13:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2217, 0\0A.popsection", ""() #20, !srcloc !423
  unreachable

do.end19:                                         ; preds = %do.body
  %13 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %end, align 4
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %14, i32 0, i32 6
  %15 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %frag_list.i, align 8
  %cmp.i214.not = icmp eq ptr %16, null
  br i1 %cmp.i214.not, label %do.end19.pull_pages_crit_edge, label %for.cond.preheader

do.end19.pull_pages_crit_edge:                    ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %pull_pages

for.cond.preheader:                               ; preds = %do.end19
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %14, i32 0, i32 2
  %17 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %18 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %cmp24257.not = icmp eq i8 %18, 0
  br i1 %cmp24257.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %eat.0259 = phi i32 [ %sub, %for.inc.for.body_crit_edge ], [ %delta, %for.cond.preheader.for.body_crit_edge ]
  %i.0258 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %14, i32 0, i32 12, i32 %i.0258, i32 1
  %19 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %bv_len.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %eat.0259, i32 %20)
  %cmp28.not = icmp sgt i32 %eat.0259, %20
  br i1 %cmp28.not, label %for.inc, label %for.body.pull_pages_crit_edge

for.body.pull_pages_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %pull_pages

for.inc:                                          ; preds = %for.body
  %sub = sub i32 %eat.0259, %20
  %inc = add nuw nsw i32 %i.0258, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %eat.0.lcssa = phi i32 [ %delta, %for.cond.preheader.for.end_crit_edge ], [ %sub, %for.inc.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %eat.0.lcssa)
  %tobool32.not = icmp eq i32 %eat.0.lcssa, 0
  br i1 %tobool32.not, label %for.end.pull_pages_crit_edge, label %for.end.do.body35_crit_edge

for.end.do.body35_crit_edge:                      ; preds = %for.end
  br label %do.body35

for.end.pull_pages_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %pull_pages

do.body35:                                        ; preds = %if.then38.do.body35_crit_edge, %for.end.do.body35_crit_edge
  %eat.2 = phi i32 [ %sub40, %if.then38.do.body35_crit_edge ], [ %eat.0.lcssa, %for.end.do.body35_crit_edge ]
  %list.0 = phi ptr [ %24, %if.then38.do.body35_crit_edge ], [ %16, %for.end.do.body35_crit_edge ]
  %len = getelementptr inbounds %struct.sk_buff, ptr %list.0, i32 0, i32 6
  %21 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %eat.2, i32 %22)
  %cmp36.not = icmp ult i32 %eat.2, %22
  br i1 %cmp36.not, label %if.else, label %if.then38

if.then38:                                        ; preds = %do.body35
  %sub40 = sub i32 %eat.2, %22
  %23 = ptrtoint ptr %list.0 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %list.0, align 8
  %tobool57.not = icmp eq i32 %sub40, 0
  br i1 %tobool57.not, label %if.then38.do.end58_crit_edge, label %if.then38.do.body35_crit_edge

if.then38.do.body35_crit_edge:                    ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body35

if.then38.do.end58_crit_edge:                     ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end58

if.else:                                          ; preds = %do.body35
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %list.0, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %25 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %26)
  %cmp.i217.not = icmp eq i32 %26, 1
  br i1 %cmp.i217.not, label %if.else.if.end50_crit_edge, label %if.then43

if.else.if.end50_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end50

if.then43:                                        ; preds = %if.else
  %call44 = tail call ptr @skb_clone(ptr noundef %list.0, i32 noundef 2592)
  %tobool45.not = icmp eq ptr %call44, null
  br i1 %tobool45.not, label %if.then43.cleanup130_crit_edge, label %if.end47

if.then43.cleanup130_crit_edge:                   ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup130

if.end47:                                         ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #22
  %27 = ptrtoint ptr %list.0 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %list.0, align 8
  br label %if.end50

if.end50:                                         ; preds = %if.end47, %if.else.if.end50_crit_edge
  %list.1 = phi ptr [ %call44, %if.end47 ], [ %list.0, %if.else.if.end50_crit_edge ]
  %clone.0 = phi ptr [ %call44, %if.end47 ], [ null, %if.else.if.end50_crit_edge ]
  %insp.0 = phi ptr [ %28, %if.end47 ], [ %list.0, %if.else.if.end50_crit_edge ]
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %list.1, i32 0, i32 6
  %29 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %len1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %eat.2)
  %cmp.i218 = icmp ult i32 %30, %eat.2
  br i1 %cmp.i218, label %if.end50.if.then53_crit_edge, label %cond.false.i, !prof !373

if.end50.if.then53_crit_edge:                     ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then53

cond.false.i:                                     ; preds = %if.end50
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %list.1, i32 0, i32 7
  %31 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %30, %32
  call void @__sanitizer_cov_trace_cmp4(i32 %eat.2, i32 %sub.i.i)
  %cmp.i234 = icmp ugt i32 %eat.2, %sub.i.i
  br i1 %cmp.i234, label %land.lhs.true.i, label %cond.false.i.pskb_pull.exit_crit_edge

cond.false.i.pskb_pull.exit_crit_edge:            ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %pskb_pull.exit

land.lhs.true.i:                                  ; preds = %cond.false.i
  %sub.i235 = sub i32 %eat.2, %sub.i.i
  %call2.i = tail call ptr @__pskb_pull_tail(ptr noundef %list.1, i32 noundef %sub.i235) #20
  %tobool.not.i236 = icmp eq ptr %call2.i, null
  br i1 %tobool.not.i236, label %land.lhs.true.i.if.then53_crit_edge, label %land.lhs.true.i.pskb_pull.exit_crit_edge

land.lhs.true.i.pskb_pull.exit_crit_edge:         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %pskb_pull.exit

land.lhs.true.i.if.then53_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then53

pskb_pull.exit:                                   ; preds = %land.lhs.true.i.pskb_pull.exit_crit_edge, %cond.false.i.pskb_pull.exit_crit_edge
  %33 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %len1.i, align 4
  %sub4.i = sub i32 %34, %eat.2
  store i32 %sub4.i, ptr %len1.i, align 4
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %list.1, i32 0, i32 19
  %35 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %36, i32 %eat.2
  store ptr %add.ptr.i, ptr %data.i, align 4
  %tobool52.not = icmp eq ptr %add.ptr.i, null
  br i1 %tobool52.not, label %pskb_pull.exit.if.then53_crit_edge, label %pskb_pull.exit.do.end58_crit_edge

pskb_pull.exit.do.end58_crit_edge:                ; preds = %pskb_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end58

pskb_pull.exit.if.then53_crit_edge:               ; preds = %pskb_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then53

if.then53:                                        ; preds = %pskb_pull.exit.if.then53_crit_edge, %land.lhs.true.i.if.then53_crit_edge, %if.end50.if.then53_crit_edge
  tail call fastcc void @kfree_skb(ptr noundef %clone.0)
  br label %cleanup130

do.end58:                                         ; preds = %pskb_pull.exit.do.end58_crit_edge, %if.then38.do.end58_crit_edge
  %clone.1 = phi ptr [ %clone.0, %pskb_pull.exit.do.end58_crit_edge ], [ null, %if.then38.do.end58_crit_edge ]
  %insp.1 = phi ptr [ %insp.0, %pskb_pull.exit.do.end58_crit_edge ], [ %24, %if.then38.do.end58_crit_edge ]
  %37 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %end, align 4
  %frag_list60260 = getelementptr inbounds %struct.skb_shared_info, ptr %38, i32 0, i32 6
  %39 = ptrtoint ptr %frag_list60260 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %frag_list60260, align 8
  %cmp61.not261 = icmp eq ptr %40, %insp.1
  br i1 %cmp61.not261, label %do.end58.while.end_crit_edge, label %do.end58.while.body_crit_edge

do.end58.while.body_crit_edge:                    ; preds = %do.end58
  br label %while.body

do.end58.while.end_crit_edge:                     ; preds = %do.end58
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %do.end58.while.body_crit_edge
  %41 = phi ptr [ %48, %while.body.while.body_crit_edge ], [ %40, %do.end58.while.body_crit_edge ]
  %frag_list60262 = phi ptr [ %frag_list60, %while.body.while.body_crit_edge ], [ %frag_list60260, %do.end58.while.body_crit_edge ]
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %41, align 8
  %44 = ptrtoint ptr %frag_list60262 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %43, ptr %frag_list60262, align 8
  tail call void @consume_skb(ptr noundef %41)
  %45 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %end, align 4
  %frag_list60 = getelementptr inbounds %struct.skb_shared_info, ptr %46, i32 0, i32 6
  %47 = ptrtoint ptr %frag_list60 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %frag_list60, align 8
  %cmp61.not = icmp eq ptr %48, %insp.1
  br i1 %cmp61.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %do.end58.while.end_crit_edge
  %tobool66.not = icmp eq ptr %clone.1, null
  br i1 %tobool66.not, label %while.end.pull_pages_crit_edge, label %if.then67

while.end.pull_pages_crit_edge:                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %pull_pages

if.then67:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  %49 = ptrtoint ptr %clone.1 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %insp.1, ptr %clone.1, align 8
  %50 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %end, align 4
  %frag_list70 = getelementptr inbounds %struct.skb_shared_info, ptr %51, i32 0, i32 6
  %52 = ptrtoint ptr %frag_list70 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %clone.1, ptr %frag_list70, align 8
  br label %pull_pages

pull_pages:                                       ; preds = %if.then67, %while.end.pull_pages_crit_edge, %for.end.pull_pages_crit_edge, %for.body.pull_pages_crit_edge, %do.end19.pull_pages_crit_edge
  %53 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %end, align 4
  %nr_frags80265 = getelementptr inbounds %struct.skb_shared_info, ptr %54, i32 0, i32 2
  %55 = ptrtoint ptr %nr_frags80265 to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %nr_frags80265, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %cmp82267.not = icmp eq i8 %56, 0
  br i1 %cmp82267.not, label %pull_pages.for.end117_crit_edge, label %for.body84.lr.ph

pull_pages.for.end117_crit_edge:                  ; preds = %pull_pages
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end117

for.body84.lr.ph:                                 ; preds = %pull_pages
  %pp_recycle.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  br label %for.body84

for.body84:                                       ; preds = %for.inc115.for.body84_crit_edge, %for.body84.lr.ph
  %57 = phi ptr [ %54, %for.body84.lr.ph ], [ %67, %for.inc115.for.body84_crit_edge ]
  %eat.3271 = phi i32 [ %delta, %for.body84.lr.ph ], [ %eat.7.ph, %for.inc115.for.body84_crit_edge ]
  %k.0269 = phi i32 [ 0, %for.body84.lr.ph ], [ %k.3.ph, %for.inc115.for.body84_crit_edge ]
  %i.1268 = phi i32 [ 0, %for.body84.lr.ph ], [ %inc116, %for.inc115.for.body84_crit_edge ]
  %arrayidx88 = getelementptr %struct.skb_shared_info, ptr %57, i32 0, i32 12, i32 %i.1268
  %bv_len.i224 = getelementptr %struct.skb_shared_info, ptr %57, i32 0, i32 12, i32 %i.1268, i32 1
  %58 = ptrtoint ptr %bv_len.i224 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %bv_len.i224, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %eat.3271, i32 %59)
  %cmp90.not = icmp slt i32 %eat.3271, %59
  br i1 %cmp90.not, label %if.else94, label %if.then92

if.then92:                                        ; preds = %for.body84
  call void @__sanitizer_cov_trace_pc() #22
  %60 = ptrtoint ptr %pp_recycle.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %bf.load.i226 = load i8, ptr %pp_recycle.i, align 2
  %bf.clear.i = and i8 %bf.load.i226, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear.i)
  %tobool.i = icmp ne i8 %bf.clear.i, 0
  tail call fastcc void @__skb_frag_unref(ptr noundef %arrayidx88, i1 noundef zeroext %tobool.i) #20
  %sub93 = sub i32 %eat.3271, %59
  br label %for.inc115

if.else94:                                        ; preds = %for.body84
  %arrayidx97 = getelementptr %struct.skb_shared_info, ptr %57, i32 0, i32 12, i32 %k.0269
  %61 = call ptr @memcpy(ptr %arrayidx97, ptr %arrayidx88, i32 12)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %eat.3271)
  %tobool101.not = icmp eq i32 %eat.3271, 0
  br i1 %tobool101.not, label %if.else94.cleanup108.thread_crit_edge, label %if.then102

if.else94.cleanup108.thread_crit_edge:            ; preds = %if.else94
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup108.thread

if.then102:                                       ; preds = %if.else94
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %57, i32 0, i32 12, i32 %k.0269, i32 2
  %62 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %bv_offset.i, align 4
  %add.i = add i32 %63, %eat.3271
  store i32 %add.i, ptr %bv_offset.i, align 4
  %bv_len.i229 = getelementptr %struct.skb_shared_info, ptr %57, i32 0, i32 12, i32 %k.0269, i32 1
  %64 = ptrtoint ptr %bv_len.i229 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %bv_len.i229, align 4
  %sub.i230 = sub i32 %65, %eat.3271
  store i32 %sub.i230, ptr %bv_len.i229, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.1268)
  %tobool103.not = icmp eq i32 %i.1268, 0
  br i1 %tobool103.not, label %if.then102.end121_crit_edge, label %if.then102.cleanup108.thread_crit_edge

if.then102.cleanup108.thread_crit_edge:           ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup108.thread

if.then102.end121_crit_edge:                      ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #22
  br label %end121

cleanup108.thread:                                ; preds = %if.then102.cleanup108.thread_crit_edge, %if.else94.cleanup108.thread_crit_edge
  %inc107 = add i32 %k.0269, 1
  br label %for.inc115

for.inc115:                                       ; preds = %cleanup108.thread, %if.then92
  %k.3.ph = phi i32 [ %inc107, %cleanup108.thread ], [ %k.0269, %if.then92 ]
  %eat.7.ph = phi i32 [ 0, %cleanup108.thread ], [ %sub93, %if.then92 ]
  %inc116 = add nuw nsw i32 %i.1268, 1
  %66 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %end, align 4
  %nr_frags80 = getelementptr inbounds %struct.skb_shared_info, ptr %67, i32 0, i32 2
  %68 = ptrtoint ptr %nr_frags80 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %nr_frags80, align 2
  %conv81 = zext i8 %69 to i32
  %cmp82 = icmp ult i32 %inc116, %conv81
  br i1 %cmp82, label %for.inc115.for.body84_crit_edge, label %for.inc115.for.end117_crit_edge

for.inc115.for.end117_crit_edge:                  ; preds = %for.inc115
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end117

for.inc115.for.body84_crit_edge:                  ; preds = %for.inc115
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body84

for.end117:                                       ; preds = %for.inc115.for.end117_crit_edge, %pull_pages.for.end117_crit_edge
  %.lcssa264 = phi ptr [ %54, %pull_pages.for.end117_crit_edge ], [ %67, %for.inc115.for.end117_crit_edge ]
  %k.0.lcssa = phi i32 [ 0, %pull_pages.for.end117_crit_edge ], [ %k.3.ph, %for.inc115.for.end117_crit_edge ]
  %nr_frags80.le = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa264, i32 0, i32 2
  %conv118 = trunc i32 %k.0.lcssa to i8
  %70 = ptrtoint ptr %nr_frags80.le to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %conv118, ptr %nr_frags80.le, align 2
  br label %end121

end121:                                           ; preds = %for.end117, %if.then102.end121_crit_edge
  %71 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %tail, align 8
  %add.ptr123 = getelementptr i8, ptr %72, i32 %delta
  store ptr %add.ptr123, ptr %tail, align 8
  %73 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %data_len.i, align 8
  %sub124 = sub i32 %74, %delta
  store i32 %sub124, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %74, i32 %delta)
  %tobool126.not = icmp ne i32 %74, %delta
  %tobool.not.i.i = icmp eq ptr %skb, null
  %or.cond = or i1 %tobool.not.i.i, %tobool126.not
  br i1 %or.cond, label %end121.if.end128_crit_edge, label %land.rhs.i.i

end121.if.end128_crit_edge:                       ; preds = %end121
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end128

land.rhs.i.i:                                     ; preds = %end121
  %75 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %end, align 4
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %76, align 8
  %79 = and i8 %78, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %79)
  %tobool1.not.i.i = icmp eq i8 %79, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.if.end128_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.if.end128_crit_edge:                 ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end128

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %76, i32 0, i32 11
  %80 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i232 = icmp eq ptr %81, null
  br i1 %tobool.not.i232, label %skb_zcopy.exit.i.if.end128_crit_edge, label %if.then.i

skb_zcopy.exit.i.if.end128_crit_edge:             ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end128

if.then.i:                                        ; preds = %skb_zcopy.exit.i
  %82 = ptrtoint ptr %81 to i32
  %and.i.i = and i32 %82, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then2.i, label %if.then.i.if.end.i_crit_edge

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %83 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %81, align 4
  tail call void %84(ptr noundef nonnull %skb, ptr noundef nonnull %81, i1 noundef zeroext false) #20
  br label %if.end.i

if.end.i:                                         ; preds = %if.then2.i, %if.then.i.if.end.i_crit_edge
  %85 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %end, align 4
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %86, align 8
  %89 = and i8 %88, -8
  store i8 %89, ptr %86, align 8
  br label %if.end128

if.end128:                                        ; preds = %if.end.i, %skb_zcopy.exit.i.if.end128_crit_edge, %land.rhs.i.i.if.end128_crit_edge, %end121.if.end128_crit_edge
  %90 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %tail, align 8
  br label %cleanup130

cleanup130:                                       ; preds = %if.end128, %if.then53, %if.then43.cleanup130_crit_edge, %if.then.cleanup130_crit_edge
  %retval.2 = phi ptr [ %91, %if.end128 ], [ null, %if.then.cleanup130_crit_edge ], [ null, %if.then53 ], [ null, %if.then43.cleanup130_crit_edge ]
  ret ptr %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_splice_bits(ptr nocapture noundef readonly %skb, ptr noundef %sk, i32 noundef %offset, ptr noundef %pipe, i32 noundef %tlen, i32 %flags) #0 align 64 {
entry:
  %offset.addr = alloca i32, align 4
  %tlen.addr = alloca i32, align 4
  %partial = alloca [17 x %struct.partial_page], align 4
  %pages = alloca [17 x ptr], align 4
  %spd = alloca %struct.splice_pipe_desc, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %offset.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %offset, ptr %offset.addr, align 4
  %1 = ptrtoint ptr %tlen.addr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %tlen, ptr %tlen.addr, align 4
  call void @llvm.lifetime.start.p0(i64 204, ptr nonnull %partial) #20
  %2 = call ptr @memset(ptr %partial, i32 255, i32 204)
  call void @llvm.lifetime.start.p0(i64 68, ptr nonnull %pages) #20
  %3 = call ptr @memset(ptr %pages, i32 255, i32 68)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %spd) #20
  %4 = getelementptr inbounds %struct.splice_pipe_desc, ptr %spd, i32 0, i32 1
  %5 = getelementptr inbounds %struct.splice_pipe_desc, ptr %spd, i32 0, i32 2
  %6 = getelementptr inbounds %struct.splice_pipe_desc, ptr %spd, i32 0, i32 3
  %7 = getelementptr inbounds %struct.splice_pipe_desc, ptr %spd, i32 0, i32 4
  %8 = getelementptr inbounds %struct.splice_pipe_desc, ptr %spd, i32 0, i32 5
  %9 = ptrtoint ptr %spd to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %pages, ptr %spd, align 4
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %partial, ptr %4, align 4
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %5, align 4
  %12 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 17, ptr %6, align 4
  %13 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @nosteal_pipe_buf_ops, ptr %7, align 4
  %14 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @sock_spd_release, ptr %8, align 4
  %15 = call fastcc zeroext i1 @__skb_splice_bits(ptr noundef %skb, ptr noundef nonnull %offset.addr, ptr noundef nonnull %tlen.addr, ptr noundef nonnull %spd, ptr noundef %sk)
  %16 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not = icmp eq i32 %17, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call5 = call i32 @splice_to_pipe(ptr noundef %pipe, ptr noundef nonnull %spd) #20
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %call5, %if.then ], [ 0, %entry.if.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %spd) #20
  call void @llvm.lifetime.end.p0(i64 68, ptr nonnull %pages) #20
  call void @llvm.lifetime.end.p0(i64 204, ptr nonnull %partial) #20
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sock_spd_release(ptr nocapture noundef readonly %spd, i32 noundef %i) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %spd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spd, align 4
  %arrayidx = getelementptr ptr, ptr %1, i32 %i
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %4 = getelementptr inbounds %struct.page, ptr %3, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  %and.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %6, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %7 = ptrtoint ptr %3 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %7, %if.end.i.i ]
  %8 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %8, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  %9 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @dump_page(ptr noundef %8, ptr noundef nonnull @.str.34) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !411
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !393
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #20, !srcloc !394
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %11, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !395
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@sock_spd_release, %if.then.i.i.i.i.i)) #20
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %8, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #20
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__put_page(ptr noundef %8) #20
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__skb_splice_bits(ptr nocapture noundef readonly %skb, ptr nocapture noundef %offset, ptr nocapture noundef %len, ptr nocapture noundef %spd, ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  %flen.i4 = alloca i32, align 4
  %flen.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %0 = load ptr, ptr @mem_map, align 4
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %1 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %data, align 4
  %3 = ptrtoint ptr %2 to i32
  %sub = add i32 %3, 1073741824
  %shr = lshr i32 %sub, 12
  %add.ptr = getelementptr %struct.page, ptr %0, i32 %shr
  %and = and i32 %3, 4095
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %4 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %6 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %5, %7
  %head_frag.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %8 = ptrtoint ptr %head_frag.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load.i = load i8, ptr %head_frag.i, align 2
  %9 = and i8 %bf.load.i, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i, label %entry.skb_head_is_locked.exit_crit_edge, label %lor.rhs.i

entry.skb_head_is_locked.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_head_is_locked.exit

lor.rhs.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i.i, label %lor.rhs.i.skb_head_is_locked.exit_crit_edge, label %land.rhs.i.i

lor.rhs.i.skb_head_is_locked.exit_crit_edge:      ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_head_is_locked.exit

land.rhs.i.i:                                     ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %10 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %end.i.i.i, align 4
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %11, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #20
  %12 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i.i = and i32 %13, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp.i.i = icmp ne i32 %and.i.i, 1
  br label %skb_head_is_locked.exit

skb_head_is_locked.exit:                          ; preds = %land.rhs.i.i, %lor.rhs.i.skb_head_is_locked.exit_crit_edge, %entry.skb_head_is_locked.exit_crit_edge
  %14 = phi i1 [ true, %entry.skb_head_is_locked.exit_crit_edge ], [ false, %lor.rhs.i.skb_head_is_locked.exit_crit_edge ], [ %cmp.i.i, %land.rhs.i.i ]
  %15 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i1 = icmp eq i32 %16, 0
  br i1 %tobool.not.i1, label %skb_head_is_locked.exit.cleanup29_crit_edge, label %if.end.i

skb_head_is_locked.exit.cleanup29_crit_edge:      ; preds = %skb_head_is_locked.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup29

if.end.i:                                         ; preds = %skb_head_is_locked.exit
  %17 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %offset, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %sub.i)
  %cmp.not.i = icmp ult i32 %18, %sub.i
  br i1 %cmp.not.i, label %if.end2.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i2 = sub i32 %18, %sub.i
  %19 = ptrtoint ptr %offset to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %sub.i2, ptr %offset, align 4
  br label %__splice_segment.exit

if.end2.i:                                        ; preds = %if.end.i
  %add.i = add i32 %18, %and
  %sub3.i = sub i32 %sub.i, %18
  %20 = ptrtoint ptr %offset to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %offset, align 4
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond.i.do.body.i_crit_edge, %if.end2.i
  %plen.addr.0.i = phi i32 [ %sub3.i, %if.end2.i ], [ %sub9.i, %do.cond.i.do.body.i_crit_edge ]
  %poff.addr.0.i = phi i32 [ %add.i, %if.end2.i ], [ %add8.i, %do.cond.i.do.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flen.i) #20
  %21 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %len, align 4
  %23 = tail call i32 @llvm.umin.i32(i32 %22, i32 %plen.addr.0.i) #20
  %24 = ptrtoint ptr %flen.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %flen.i, align 4
  %call.i = call fastcc zeroext i1 @spd_fill_page(ptr noundef %spd, ptr noundef %add.ptr, ptr noundef nonnull %flen.i, i32 noundef %poff.addr.0.i, i1 noundef zeroext %14, ptr noundef %sk) #20
  br i1 %call.i, label %cleanup.i, label %do.cond.i

cleanup.i:                                        ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flen.i) #20
  br label %cleanup29

do.cond.i:                                        ; preds = %do.body.i
  %25 = ptrtoint ptr %flen.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %flen.i, align 4
  %add8.i = add i32 %26, %poff.addr.0.i
  %sub9.i = sub i32 %plen.addr.0.i, %26
  %27 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %len, align 4
  %sub10.i = sub i32 %28, %26
  store i32 %sub10.i, ptr %len, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flen.i) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %26)
  %tobool11.not.i = icmp eq i32 %28, %26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub9.i)
  %tobool12.not.i = icmp eq i32 %sub9.i, 0
  %or.cond.i = select i1 %tobool11.not.i, i1 true, i1 %tobool12.not.i
  br i1 %or.cond.i, label %do.cond.i.__splice_segment.exit_crit_edge, label %do.cond.i.do.body.i_crit_edge

do.cond.i.do.body.i_crit_edge:                    ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

do.cond.i.__splice_segment.exit_crit_edge:        ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__splice_segment.exit

__splice_segment.exit:                            ; preds = %do.cond.i.__splice_segment.exit_crit_edge, %if.then1.i
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %29 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %end.i, align 4
  %nr_frags33 = getelementptr inbounds %struct.skb_shared_info, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %nr_frags33 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %nr_frags33, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %cmp35.not = icmp eq i8 %32, 0
  br i1 %cmp35.not, label %__splice_segment.exit.for.end_crit_edge, label %__splice_segment.exit.for.body_crit_edge

__splice_segment.exit.for.body_crit_edge:         ; preds = %__splice_segment.exit
  br label %for.body

__splice_segment.exit.for.end_crit_edge:          ; preds = %__splice_segment.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %__splice_segment.exit.for.body_crit_edge
  %33 = phi ptr [ %55, %for.inc.for.body_crit_edge ], [ %30, %__splice_segment.exit.for.body_crit_edge ]
  %seg.036 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %__splice_segment.exit.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %33, i32 0, i32 12, i32 %seg.036
  %34 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %33, i32 0, i32 12, i32 %seg.036, i32 2
  %36 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %bv_offset.i, align 4
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %33, i32 0, i32 12, i32 %seg.036, i32 1
  %38 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %bv_len.i, align 4
  %40 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i5 = icmp eq i32 %41, 0
  br i1 %tobool.not.i5, label %for.body.cleanup29_crit_edge, label %if.end.i7

for.body.cleanup29_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup29

if.end.i7:                                        ; preds = %for.body
  %42 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %offset, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %39)
  %cmp.not.i6 = icmp ult i32 %43, %39
  br i1 %cmp.not.i6, label %if.end2.i12, label %if.then1.i9

if.then1.i9:                                      ; preds = %if.end.i7
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i8 = sub i32 %43, %39
  %44 = ptrtoint ptr %offset to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %sub.i8, ptr %offset, align 4
  br label %for.inc

if.end2.i12:                                      ; preds = %if.end.i7
  %add.i10 = add i32 %43, %37
  %sub3.i11 = sub i32 %39, %43
  %45 = ptrtoint ptr %offset to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 0, ptr %offset, align 4
  br label %do.body.i16

do.body.i16:                                      ; preds = %do.cond.i24.do.body.i16_crit_edge, %if.end2.i12
  %plen.addr.0.i13 = phi i32 [ %sub3.i11, %if.end2.i12 ], [ %sub9.i19, %do.cond.i24.do.body.i16_crit_edge ]
  %poff.addr.0.i14 = phi i32 [ %add.i10, %if.end2.i12 ], [ %add8.i18, %do.cond.i24.do.body.i16_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flen.i4) #20
  %46 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %len, align 4
  %48 = tail call i32 @llvm.umin.i32(i32 %47, i32 %plen.addr.0.i13) #20
  %49 = ptrtoint ptr %flen.i4 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %flen.i4, align 4
  %call.i15 = call fastcc zeroext i1 @spd_fill_page(ptr noundef %spd, ptr noundef %35, ptr noundef nonnull %flen.i4, i32 noundef %poff.addr.0.i14, i1 noundef zeroext false, ptr noundef %sk) #20
  br i1 %call.i15, label %cleanup.i17, label %do.cond.i24

cleanup.i17:                                      ; preds = %do.body.i16
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flen.i4) #20
  br label %cleanup29

do.cond.i24:                                      ; preds = %do.body.i16
  %50 = ptrtoint ptr %flen.i4 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %flen.i4, align 4
  %add8.i18 = add i32 %51, %poff.addr.0.i14
  %sub9.i19 = sub i32 %plen.addr.0.i13, %51
  %52 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %len, align 4
  %sub10.i20 = sub i32 %53, %51
  store i32 %sub10.i20, ptr %len, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flen.i4) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %53, i32 %51)
  %tobool11.not.i21 = icmp eq i32 %53, %51
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub9.i19)
  %tobool12.not.i22 = icmp eq i32 %sub9.i19, 0
  %or.cond.i23 = select i1 %tobool11.not.i21, i1 true, i1 %tobool12.not.i22
  br i1 %or.cond.i23, label %do.cond.i24.for.inc_crit_edge, label %do.cond.i24.do.body.i16_crit_edge

do.cond.i24.do.body.i16_crit_edge:                ; preds = %do.cond.i24
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i16

do.cond.i24.for.inc_crit_edge:                    ; preds = %do.cond.i24
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

for.inc:                                          ; preds = %do.cond.i24.for.inc_crit_edge, %if.then1.i9
  %inc = add nuw nsw i32 %seg.036, 1
  %54 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %55, i32 0, i32 2
  %56 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %57 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %__splice_segment.exit.for.end_crit_edge
  %.lcssa = phi ptr [ %30, %__splice_segment.exit.for.end_crit_edge ], [ %55, %for.inc.for.end_crit_edge ]
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 6
  %58 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %58)
  %iter.037 = load ptr, ptr %frag_list, align 8
  %tobool.not38 = icmp eq ptr %iter.037, null
  br i1 %tobool.not38, label %for.end.cleanup29_crit_edge, label %for.end.for.body16_crit_edge

for.end.for.body16_crit_edge:                     ; preds = %for.end
  br label %for.body16

for.end.cleanup29_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup29

for.body16:                                       ; preds = %for.inc27.for.body16_crit_edge, %for.end.for.body16_crit_edge
  %iter.039 = phi ptr [ %iter.0, %for.inc27.for.body16_crit_edge ], [ %iter.037, %for.end.for.body16_crit_edge ]
  %59 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %offset, align 4
  %len17 = getelementptr inbounds %struct.sk_buff, ptr %iter.039, i32 0, i32 6
  %61 = ptrtoint ptr %len17 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %len17, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %60, i32 %62)
  %cmp18.not = icmp ult i32 %60, %62
  br i1 %cmp18.not, label %if.end23, label %if.then20

if.then20:                                        ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #22
  %sub22 = sub i32 %60, %62
  %63 = ptrtoint ptr %offset to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %sub22, ptr %offset, align 4
  br label %for.inc27

if.end23:                                         ; preds = %for.body16
  %call24 = tail call fastcc zeroext i1 @__skb_splice_bits(ptr noundef nonnull %iter.039, ptr noundef %offset, ptr noundef %len, ptr noundef %spd, ptr noundef %sk)
  br i1 %call24, label %if.end23.cleanup29_crit_edge, label %if.end23.for.inc27_crit_edge

if.end23.for.inc27_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc27

if.end23.cleanup29_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup29

for.inc27:                                        ; preds = %if.end23.for.inc27_crit_edge, %if.then20
  %64 = ptrtoint ptr %iter.039 to i32
  call void @__asan_load4_noabort(i32 %64)
  %iter.0 = load ptr, ptr %iter.039, align 8
  %tobool.not = icmp eq ptr %iter.0, null
  br i1 %tobool.not, label %for.inc27.cleanup29_crit_edge, label %for.inc27.for.body16_crit_edge

for.inc27.for.body16_crit_edge:                   ; preds = %for.inc27
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body16

for.inc27.cleanup29_crit_edge:                    ; preds = %for.inc27
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup29

cleanup29:                                        ; preds = %for.inc27.cleanup29_crit_edge, %if.end23.cleanup29_crit_edge, %for.end.cleanup29_crit_edge, %cleanup.i17, %for.body.cleanup29_crit_edge, %cleanup.i, %skb_head_is_locked.exit.cleanup29_crit_edge
  %retval.2 = phi i1 [ true, %cleanup.i ], [ true, %skb_head_is_locked.exit.cleanup29_crit_edge ], [ true, %cleanup.i17 ], [ false, %for.end.cleanup29_crit_edge ], [ true, %if.end23.cleanup29_crit_edge ], [ false, %for.inc27.cleanup29_crit_edge ], [ true, %for.body.cleanup29_crit_edge ]
  ret i1 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @splice_to_pipe(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_send_sock_locked(ptr noundef %sk, ptr noundef readonly %skb, i32 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  %kv.i = alloca %struct.kvec, align 4
  %msg.i = alloca %struct.msghdr, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.kvec, ptr %kv.i, i32 0, i32 1
  %msg_flags.i = getelementptr inbounds %struct.msghdr, ptr %msg.i, i32 0, i32 6
  br label %do_frag_list.i

do_frag_list.i:                                   ; preds = %do_frag_list.i.backedge, %entry
  %len.addr.0.i = phi i32 [ %len, %entry ], [ %len.addr.3224.i, %do_frag_list.i.backedge ]
  %offset.addr.0.i = phi i32 [ %offset, %entry ], [ %offset.addr.6225.i, %do_frag_list.i.backedge ]
  %skb.addr.0.i = phi ptr [ %skb, %entry ], [ %skb.addr.0.i.be, %do_frag_list.i.backedge ]
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i, i32 0, i32 6
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i, i32 0, i32 7
  %1 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %len.i.i, align 4
  %3 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %data_len.i.i, align 8
  %sub.i199.i = sub i32 %2, %4
  call void @__sanitizer_cov_trace_cmp4(i32 %offset.addr.0.i, i32 %sub.i199.i)
  %cmp200.i = icmp uge i32 %offset.addr.0.i, %sub.i199.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.0.i)
  %tobool.not201.i = icmp eq i32 %len.addr.0.i, 0
  %or.cond202.i = select i1 %cmp200.i, i1 true, i1 %tobool.not201.i
  br i1 %or.cond202.i, label %do_frag_list.i.while.end.i_crit_edge, label %while.body.lr.ph.i

do_frag_list.i.while.end.i_crit_edge:             ; preds = %do_frag_list.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.body.lr.ph.i:                               ; preds = %do_frag_list.i
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i, i32 0, i32 19
  br label %while.body.i

while.cond.i:                                     ; preds = %while.body.i
  %sub5.i = sub i32 %len.addr.1203.i, %call3.i
  %add.i = add i32 %call3.i, %offset.addr.1204.i
  %5 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %len.i.i, align 4
  %7 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %6, %8
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %sub.i.i)
  %cmp.i = icmp uge i32 %add.i, %sub.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub5.i)
  %tobool.not.i = icmp eq i32 %sub5.i, 0
  %or.cond.i = select i1 %cmp.i, i1 true, i1 %tobool.not.i
  br i1 %or.cond.i, label %while.cond.i.while.end.i_crit_edge, label %while.cond.i.while.body.i_crit_edge

while.cond.i.while.body.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.cond.i.while.end.i_crit_edge:               ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.body.i:                                     ; preds = %while.cond.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %sub.i205.i = phi i32 [ %sub.i199.i, %while.body.lr.ph.i ], [ %sub.i.i, %while.cond.i.while.body.i_crit_edge ]
  %offset.addr.1204.i = phi i32 [ %offset.addr.0.i, %while.body.lr.ph.i ], [ %add.i, %while.cond.i.while.body.i_crit_edge ]
  %len.addr.1203.i = phi i32 [ %len.addr.0.i, %while.body.lr.ph.i ], [ %sub5.i, %while.cond.i.while.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %kv.i) #20
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %msg.i) #20
  %sub.i = sub i32 %sub.i205.i, %offset.addr.1204.i
  %9 = call i32 @llvm.smin.i32(i32 %len.addr.1203.i, i32 %sub.i) #20
  %10 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %11, i32 %offset.addr.1204.i
  %12 = ptrtoint ptr %kv.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %add.ptr.i, ptr %kv.i, align 4
  %13 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %9, ptr %0, align 4
  %14 = call ptr @memset(ptr %msg.i, i32 0, i32 56)
  %15 = ptrtoint ptr %msg_flags.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 64, ptr %msg_flags.i, align 4
  %call3.i = call i32 @kernel_sendmsg_locked(ptr noundef %sk, ptr noundef nonnull %msg.i, ptr noundef nonnull %kv.i, i32 noundef 1, i32 noundef %9) #20, !callees !424
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call3.i)
  %cmp4.i = icmp slt i32 %call3.i, 1
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %msg.i) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %kv.i) #20
  br i1 %cmp4.i, label %while.body.i.error.i_crit_edge, label %while.cond.i

while.body.i.error.i_crit_edge:                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %error.i

while.end.i:                                      ; preds = %while.cond.i.while.end.i_crit_edge, %do_frag_list.i.while.end.i_crit_edge
  %len.addr.1.lcssa.i = phi i32 [ %len.addr.0.i, %do_frag_list.i.while.end.i_crit_edge ], [ %sub5.i, %while.cond.i.while.end.i_crit_edge ]
  %offset.addr.1.lcssa.i = phi i32 [ %offset.addr.0.i, %do_frag_list.i.while.end.i_crit_edge ], [ %add.i, %while.cond.i.while.end.i_crit_edge ]
  %sub.i.lcssa.i = phi i32 [ %sub.i199.i, %do_frag_list.i.while.end.i_crit_edge ], [ %sub.i.i, %while.cond.i.while.end.i_crit_edge ]
  %tobool.not.lcssa.i = phi i1 [ %tobool.not201.i, %do_frag_list.i.while.end.i_crit_edge ], [ %tobool.not.i, %while.cond.i.while.end.i_crit_edge ]
  br i1 %tobool.not.lcssa.i, label %while.end.i.out.i_crit_edge, label %if.end9.i

while.end.i.out.i_crit_edge:                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

if.end9.i:                                        ; preds = %while.end.i
  %sub11.i = sub i32 %offset.addr.1.lcssa.i, %sub.i.lcssa.i
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i, i32 0, i32 17
  %16 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %end.i.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %nr_frags.i, align 2
  %20 = zext i8 %19 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp14210.not.i = icmp eq i8 %19, 0
  br i1 %cmp14210.not.i, label %if.end9.i.for.end.i_crit_edge, label %if.end9.i.for.body.i_crit_edge

if.end9.i.for.body.i_crit_edge:                   ; preds = %if.end9.i
  br label %for.body.i

if.end9.i.for.end.i_crit_edge:                    ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end9.i.for.body.i_crit_edge
  %indvars.iv.i = phi i32 [ %indvars.iv.next.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end9.i.for.body.i_crit_edge ]
  %offset.addr.3211.i = phi i32 [ %sub23.i, %for.inc.i.for.body.i_crit_edge ], [ %sub11.i, %if.end9.i.for.body.i_crit_edge ]
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %17, i32 0, i32 12, i32 %indvars.iv.i, i32 1
  %21 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %bv_len.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %offset.addr.3211.i, i32 %22)
  %cmp18.i = icmp ult i32 %offset.addr.3211.i, %22
  br i1 %cmp18.i, label %for.body.i.for.end.i_crit_edge, label %for.inc.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.inc.i:                                        ; preds = %for.body.i
  %sub23.i = sub i32 %offset.addr.3211.i, %22
  %indvars.iv.next.i = add nuw nsw i32 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i32 %indvars.iv.next.i, %20
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge, %if.end9.i.for.end.i_crit_edge
  %offset.addr.3.lcssa.i = phi i32 [ %sub11.i, %if.end9.i.for.end.i_crit_edge ], [ %sub23.i, %for.inc.i.for.end.i_crit_edge ], [ %offset.addr.3211.i, %for.body.i.for.end.i_crit_edge ]
  %fragidx.0.lcssa.i = phi i32 [ 0, %if.end9.i.for.end.i_crit_edge ], [ %20, %for.inc.i.for.end.i_crit_edge ], [ %indvars.iv.i, %for.body.i.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.1.lcssa.i)
  %tobool28.not223.i = icmp eq i32 %len.addr.1.lcssa.i, 0
  br i1 %tobool28.not223.i, label %for.end.i.out.i_crit_edge, label %land.rhs29.preheader.i

for.end.i.out.i_crit_edge:                        ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

land.rhs29.preheader.i:                           ; preds = %for.end.i
  %23 = and i32 %fragidx.0.lcssa.i, 65535
  br label %land.rhs29.i

land.rhs29.i:                                     ; preds = %for.inc70.i.land.rhs29.i_crit_edge, %land.rhs29.preheader.i
  %indvars.iv245.i = phi i32 [ %23, %land.rhs29.preheader.i ], [ %indvars.iv.next246.i, %for.inc70.i.land.rhs29.i_crit_edge ]
  %offset.addr.6225.i = phi i32 [ %offset.addr.3.lcssa.i, %land.rhs29.preheader.i ], [ 0, %for.inc70.i.land.rhs29.i_crit_edge ]
  %len.addr.3224.i = phi i32 [ %len.addr.1.lcssa.i, %land.rhs29.preheader.i ], [ %len.addr.4.lcssa.i, %for.inc70.i.land.rhs29.i_crit_edge ]
  %24 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %end.i.i, align 4
  %nr_frags32.i = getelementptr inbounds %struct.skb_shared_info, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %nr_frags32.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %nr_frags32.i, align 2
  %28 = zext i8 %27 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %indvars.iv245.i, i32 %28)
  %cmp34.i = icmp ult i32 %indvars.iv245.i, %28
  br i1 %cmp34.i, label %for.body37.i, label %if.then74.critedge.i

for.body37.i:                                     ; preds = %land.rhs29.i
  %arrayidx42.i = getelementptr %struct.skb_shared_info, ptr %25, i32 0, i32 12, i32 %indvars.iv245.i
  %bv_len.i172.i = getelementptr %struct.skb_shared_info, ptr %25, i32 0, i32 12, i32 %indvars.iv245.i, i32 1
  %29 = ptrtoint ptr %bv_len.i172.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bv_len.i172.i, align 4
  %sub44.i = sub i32 %30, %offset.addr.6225.i
  %31 = call i32 @llvm.umin.i32(i32 %len.addr.3224.i, i32 %sub44.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool53.not217.i = icmp eq i32 %31, 0
  br i1 %tobool53.not217.i, label %for.body37.i.for.inc70.i_crit_edge, label %while.body54.lr.ph.i

for.body37.i.for.inc70.i_crit_edge:               ; preds = %for.body37.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc70.i

while.body54.lr.ph.i:                             ; preds = %for.body37.i
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %25, i32 0, i32 12, i32 %indvars.iv245.i, i32 2
  br label %while.body54.i

while.body54.i:                                   ; preds = %if.end62.i.while.body54.i_crit_edge, %while.body54.lr.ph.i
  %slen.0220.i = phi i32 [ %31, %while.body54.lr.ph.i ], [ %sub65.i, %if.end62.i.while.body54.i_crit_edge ]
  %offset.addr.7219.i = phi i32 [ %offset.addr.6225.i, %while.body54.lr.ph.i ], [ %add64.i, %if.end62.i.while.body54.i_crit_edge ]
  %len.addr.4218.i = phi i32 [ %len.addr.3224.i, %while.body54.lr.ph.i ], [ %sub63.i, %if.end62.i.while.body54.i_crit_edge ]
  %32 = ptrtoint ptr %arrayidx42.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx42.i, align 4
  %34 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %bv_offset.i.i, align 4
  %add57.i = add i32 %35, %offset.addr.7219.i
  %call58.i = call i32 @kernel_sendpage_locked(ptr noundef %sk, ptr noundef %33, i32 noundef %add57.i, i32 noundef %slen.0220.i, i32 noundef 64) #20, !callees !425
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call58.i)
  %cmp59.i = icmp slt i32 %call58.i, 1
  br i1 %cmp59.i, label %while.body54.i.error.i_crit_edge, label %if.end62.i

while.body54.i.error.i_crit_edge:                 ; preds = %while.body54.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %error.i

if.end62.i:                                       ; preds = %while.body54.i
  %sub63.i = sub i32 %len.addr.4218.i, %call58.i
  %add64.i = add i32 %call58.i, %offset.addr.7219.i
  %sub65.i = sub i32 %slen.0220.i, %call58.i
  %tobool53.not.i = icmp eq i32 %sub65.i, 0
  br i1 %tobool53.not.i, label %if.end62.i.for.inc70.i_crit_edge, label %if.end62.i.while.body54.i_crit_edge

if.end62.i.while.body54.i_crit_edge:              ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body54.i

if.end62.i.for.inc70.i_crit_edge:                 ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc70.i

for.inc70.i:                                      ; preds = %if.end62.i.for.inc70.i_crit_edge, %for.body37.i.for.inc70.i_crit_edge
  %len.addr.4.lcssa.i = phi i32 [ %len.addr.3224.i, %for.body37.i.for.inc70.i_crit_edge ], [ %sub63.i, %if.end62.i.for.inc70.i_crit_edge ]
  %indvars.iv.next246.i = add nuw nsw i32 %indvars.iv245.i, 1
  %tobool28.not.i = icmp eq i32 %len.addr.4.lcssa.i, 0
  br i1 %tobool28.not.i, label %for.inc70.i.out.i_crit_edge, label %for.inc70.i.land.rhs29.i_crit_edge

for.inc70.i.land.rhs29.i_crit_edge:               ; preds = %for.inc70.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs29.i

for.inc70.i.out.i_crit_edge:                      ; preds = %for.inc70.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

if.then74.critedge.i:                             ; preds = %land.rhs29.i
  %cmp75.i = icmp eq ptr %skb.addr.0.i, %skb
  br i1 %cmp75.i, label %if.then77.i, label %if.else.i

if.then77.i:                                      ; preds = %if.then74.critedge.i
  %frag_list.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %25, i32 0, i32 6
  %36 = ptrtoint ptr %frag_list.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %frag_list.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %37, null
  br i1 %cmp.i.not.i, label %if.then77.i.out.i_crit_edge, label %if.then77.i.do_frag_list.i.backedge_crit_edge

if.then77.i.do_frag_list.i.backedge_crit_edge:    ; preds = %if.then77.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do_frag_list.i.backedge

if.then77.i.out.i_crit_edge:                      ; preds = %if.then77.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

if.else.i:                                        ; preds = %if.then74.critedge.i
  %38 = ptrtoint ptr %skb.addr.0.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %skb.addr.0.i, align 8
  %tobool82.not.i = icmp eq ptr %39, null
  br i1 %tobool82.not.i, label %if.else.i.out.i_crit_edge, label %if.else.i.do_frag_list.i.backedge_crit_edge

if.else.i.do_frag_list.i.backedge_crit_edge:      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do_frag_list.i.backedge

if.else.i.out.i_crit_edge:                        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

do_frag_list.i.backedge:                          ; preds = %if.else.i.do_frag_list.i.backedge_crit_edge, %if.then77.i.do_frag_list.i.backedge_crit_edge
  %skb.addr.0.i.be = phi ptr [ %39, %if.else.i.do_frag_list.i.backedge_crit_edge ], [ %37, %if.then77.i.do_frag_list.i.backedge_crit_edge ]
  br label %do_frag_list.i

out.i:                                            ; preds = %if.else.i.out.i_crit_edge, %if.then77.i.out.i_crit_edge, %for.inc70.i.out.i_crit_edge, %for.end.i.out.i_crit_edge, %while.end.i.out.i_crit_edge
  %len.addr.5.i = phi i32 [ 0, %for.inc70.i.out.i_crit_edge ], [ %len.addr.3224.i, %if.then77.i.out.i_crit_edge ], [ %len.addr.3224.i, %if.else.i.out.i_crit_edge ], [ 0, %while.end.i.out.i_crit_edge ], [ 0, %for.end.i.out.i_crit_edge ]
  %sub88.i = sub i32 %len, %len.addr.5.i
  br label %__skb_send_sock.exit

error.i:                                          ; preds = %while.body54.i.error.i_crit_edge, %while.body.i.error.i_crit_edge
  %len.addr.6.i = phi i32 [ %len.addr.4218.i, %while.body54.i.error.i_crit_edge ], [ %len.addr.1203.i, %while.body.i.error.i_crit_edge ]
  %ret.5.i = phi i32 [ %call58.i, %while.body54.i.error.i_crit_edge ], [ %call3.i, %while.body.i.error.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %len.addr.6.i, i32 %len)
  %cmp89.i = icmp eq i32 %len.addr.6.i, %len
  %sub93.i = sub i32 %len, %len.addr.6.i
  %cond95.i = select i1 %cmp89.i, i32 %ret.5.i, i32 %sub93.i
  br label %__skb_send_sock.exit

__skb_send_sock.exit:                             ; preds = %error.i, %out.i
  %retval.0.i = phi i32 [ %cond95.i, %error.i ], [ %sub88.i, %out.i ]
  ret i32 %retval.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_sendmsg_locked(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_sendpage_locked(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_send_sock(ptr nocapture noundef readonly %sk, ptr noundef readonly %skb, i32 noundef %offset, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  %kv.i = alloca %struct.kvec, align 4
  %msg.i = alloca %struct.msghdr, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.kvec, ptr %kv.i, i32 0, i32 1
  %msg_flags.i = getelementptr inbounds %struct.msghdr, ptr %msg.i, i32 0, i32 6
  %sk_socket.i3 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  br label %do_frag_list.i

do_frag_list.i:                                   ; preds = %do_frag_list.i.backedge, %entry
  %len.addr.0.i = phi i32 [ %len, %entry ], [ %len.addr.3224.i, %do_frag_list.i.backedge ]
  %offset.addr.0.i = phi i32 [ %offset, %entry ], [ %offset.addr.6225.i, %do_frag_list.i.backedge ]
  %skb.addr.0.i = phi ptr [ %skb, %entry ], [ %skb.addr.0.i.be, %do_frag_list.i.backedge ]
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i, i32 0, i32 6
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i, i32 0, i32 7
  %1 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %len.i.i, align 4
  %3 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %data_len.i.i, align 8
  %sub.i199.i = sub i32 %2, %4
  call void @__sanitizer_cov_trace_cmp4(i32 %offset.addr.0.i, i32 %sub.i199.i)
  %cmp200.i = icmp uge i32 %offset.addr.0.i, %sub.i199.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.0.i)
  %tobool.not201.i = icmp eq i32 %len.addr.0.i, 0
  %or.cond202.i = select i1 %cmp200.i, i1 true, i1 %tobool.not201.i
  br i1 %or.cond202.i, label %do_frag_list.i.while.end.i_crit_edge, label %while.body.lr.ph.i

do_frag_list.i.while.end.i_crit_edge:             ; preds = %do_frag_list.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.body.lr.ph.i:                               ; preds = %do_frag_list.i
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i, i32 0, i32 19
  br label %while.body.i

while.cond.i:                                     ; preds = %sendmsg_unlocked.exit
  %sub5.i = sub i32 %len.addr.1203.i, %call.i5
  %add.i = add i32 %call.i5, %offset.addr.1204.i
  %5 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %len.i.i, align 4
  %7 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %6, %8
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %sub.i.i)
  %cmp.i = icmp uge i32 %add.i, %sub.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub5.i)
  %tobool.not.i = icmp eq i32 %sub5.i, 0
  %or.cond.i = select i1 %cmp.i, i1 true, i1 %tobool.not.i
  br i1 %or.cond.i, label %while.cond.i.while.end.i_crit_edge, label %while.cond.i.while.body.i_crit_edge

while.cond.i.while.body.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.cond.i.while.end.i_crit_edge:               ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.body.i:                                     ; preds = %while.cond.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %sub.i205.i = phi i32 [ %sub.i199.i, %while.body.lr.ph.i ], [ %sub.i.i, %while.cond.i.while.body.i_crit_edge ]
  %offset.addr.1204.i = phi i32 [ %offset.addr.0.i, %while.body.lr.ph.i ], [ %add.i, %while.cond.i.while.body.i_crit_edge ]
  %len.addr.1203.i = phi i32 [ %len.addr.0.i, %while.body.lr.ph.i ], [ %sub5.i, %while.cond.i.while.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %kv.i) #20
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %msg.i) #20
  %sub.i = sub i32 %sub.i205.i, %offset.addr.1204.i
  %9 = call i32 @llvm.smin.i32(i32 %len.addr.1203.i, i32 %sub.i) #20
  %10 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %11, i32 %offset.addr.1204.i
  %12 = ptrtoint ptr %kv.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %add.ptr.i, ptr %kv.i, align 4
  %13 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %9, ptr %0, align 4
  %14 = call ptr @memset(ptr %msg.i, i32 0, i32 56)
  %15 = ptrtoint ptr %msg_flags.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 64, ptr %msg_flags.i, align 4
  %16 = ptrtoint ptr %sk_socket.i3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %sk_socket.i3, align 8
  %tobool.not.i4 = icmp eq ptr %17, null
  br i1 %tobool.not.i4, label %sendmsg_unlocked.exit.thread, label %sendmsg_unlocked.exit

sendmsg_unlocked.exit.thread:                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %msg.i) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %kv.i) #20
  br label %error.i

sendmsg_unlocked.exit:                            ; preds = %while.body.i
  %call.i5 = call i32 @kernel_sendmsg(ptr noundef nonnull %17, ptr noundef nonnull %msg.i, ptr noundef nonnull %kv.i, i32 noundef 1, i32 noundef %9) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i5)
  %cmp4.i = icmp slt i32 %call.i5, 1
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %msg.i) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %kv.i) #20
  br i1 %cmp4.i, label %sendmsg_unlocked.exit.error.i_crit_edge, label %while.cond.i

sendmsg_unlocked.exit.error.i_crit_edge:          ; preds = %sendmsg_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %error.i

while.end.i:                                      ; preds = %while.cond.i.while.end.i_crit_edge, %do_frag_list.i.while.end.i_crit_edge
  %len.addr.1.lcssa.i = phi i32 [ %len.addr.0.i, %do_frag_list.i.while.end.i_crit_edge ], [ %sub5.i, %while.cond.i.while.end.i_crit_edge ]
  %offset.addr.1.lcssa.i = phi i32 [ %offset.addr.0.i, %do_frag_list.i.while.end.i_crit_edge ], [ %add.i, %while.cond.i.while.end.i_crit_edge ]
  %sub.i.lcssa.i = phi i32 [ %sub.i199.i, %do_frag_list.i.while.end.i_crit_edge ], [ %sub.i.i, %while.cond.i.while.end.i_crit_edge ]
  %tobool.not.lcssa.i = phi i1 [ %tobool.not201.i, %do_frag_list.i.while.end.i_crit_edge ], [ %tobool.not.i, %while.cond.i.while.end.i_crit_edge ]
  br i1 %tobool.not.lcssa.i, label %while.end.i.out.i_crit_edge, label %if.end9.i

while.end.i.out.i_crit_edge:                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

if.end9.i:                                        ; preds = %while.end.i
  %sub11.i = sub i32 %offset.addr.1.lcssa.i, %sub.i.lcssa.i
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i, i32 0, i32 17
  %18 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %end.i.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %nr_frags.i, align 2
  %22 = zext i8 %21 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %cmp14210.not.i = icmp eq i8 %21, 0
  br i1 %cmp14210.not.i, label %if.end9.i.for.end.i_crit_edge, label %if.end9.i.for.body.i_crit_edge

if.end9.i.for.body.i_crit_edge:                   ; preds = %if.end9.i
  br label %for.body.i

if.end9.i.for.end.i_crit_edge:                    ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end9.i.for.body.i_crit_edge
  %indvars.iv.i = phi i32 [ %indvars.iv.next.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end9.i.for.body.i_crit_edge ]
  %offset.addr.3211.i = phi i32 [ %sub23.i, %for.inc.i.for.body.i_crit_edge ], [ %sub11.i, %if.end9.i.for.body.i_crit_edge ]
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %19, i32 0, i32 12, i32 %indvars.iv.i, i32 1
  %23 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bv_len.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %offset.addr.3211.i, i32 %24)
  %cmp18.i = icmp ult i32 %offset.addr.3211.i, %24
  br i1 %cmp18.i, label %for.body.i.for.end.i_crit_edge, label %for.inc.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.inc.i:                                        ; preds = %for.body.i
  %sub23.i = sub i32 %offset.addr.3211.i, %24
  %indvars.iv.next.i = add nuw nsw i32 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i32 %indvars.iv.next.i, %22
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge, %if.end9.i.for.end.i_crit_edge
  %offset.addr.3.lcssa.i = phi i32 [ %sub11.i, %if.end9.i.for.end.i_crit_edge ], [ %sub23.i, %for.inc.i.for.end.i_crit_edge ], [ %offset.addr.3211.i, %for.body.i.for.end.i_crit_edge ]
  %fragidx.0.lcssa.i = phi i32 [ 0, %if.end9.i.for.end.i_crit_edge ], [ %22, %for.inc.i.for.end.i_crit_edge ], [ %indvars.iv.i, %for.body.i.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.1.lcssa.i)
  %tobool28.not223.i = icmp eq i32 %len.addr.1.lcssa.i, 0
  br i1 %tobool28.not223.i, label %for.end.i.out.i_crit_edge, label %land.rhs29.preheader.i

for.end.i.out.i_crit_edge:                        ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

land.rhs29.preheader.i:                           ; preds = %for.end.i
  %25 = and i32 %fragidx.0.lcssa.i, 65535
  br label %land.rhs29.i

land.rhs29.i:                                     ; preds = %for.inc70.i.land.rhs29.i_crit_edge, %land.rhs29.preheader.i
  %indvars.iv245.i = phi i32 [ %25, %land.rhs29.preheader.i ], [ %indvars.iv.next246.i, %for.inc70.i.land.rhs29.i_crit_edge ]
  %offset.addr.6225.i = phi i32 [ %offset.addr.3.lcssa.i, %land.rhs29.preheader.i ], [ 0, %for.inc70.i.land.rhs29.i_crit_edge ]
  %len.addr.3224.i = phi i32 [ %len.addr.1.lcssa.i, %land.rhs29.preheader.i ], [ %len.addr.4.lcssa.i, %for.inc70.i.land.rhs29.i_crit_edge ]
  %26 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %end.i.i, align 4
  %nr_frags32.i = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %nr_frags32.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %nr_frags32.i, align 2
  %30 = zext i8 %29 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %indvars.iv245.i, i32 %30)
  %cmp34.i = icmp ult i32 %indvars.iv245.i, %30
  br i1 %cmp34.i, label %for.body37.i, label %if.then74.critedge.i

for.body37.i:                                     ; preds = %land.rhs29.i
  %arrayidx42.i = getelementptr %struct.skb_shared_info, ptr %27, i32 0, i32 12, i32 %indvars.iv245.i
  %bv_len.i172.i = getelementptr %struct.skb_shared_info, ptr %27, i32 0, i32 12, i32 %indvars.iv245.i, i32 1
  %31 = ptrtoint ptr %bv_len.i172.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %bv_len.i172.i, align 4
  %sub44.i = sub i32 %32, %offset.addr.6225.i
  %33 = call i32 @llvm.umin.i32(i32 %len.addr.3224.i, i32 %sub44.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool53.not217.i = icmp eq i32 %33, 0
  br i1 %tobool53.not217.i, label %for.body37.i.for.inc70.i_crit_edge, label %while.body54.lr.ph.i

for.body37.i.for.inc70.i_crit_edge:               ; preds = %for.body37.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc70.i

while.body54.lr.ph.i:                             ; preds = %for.body37.i
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %27, i32 0, i32 12, i32 %indvars.iv245.i, i32 2
  br label %while.body54.i

while.body54.i:                                   ; preds = %if.end62.i.while.body54.i_crit_edge, %while.body54.lr.ph.i
  %slen.0220.i = phi i32 [ %33, %while.body54.lr.ph.i ], [ %sub65.i, %if.end62.i.while.body54.i_crit_edge ]
  %offset.addr.7219.i = phi i32 [ %offset.addr.6225.i, %while.body54.lr.ph.i ], [ %add64.i, %if.end62.i.while.body54.i_crit_edge ]
  %len.addr.4218.i = phi i32 [ %len.addr.3224.i, %while.body54.lr.ph.i ], [ %sub63.i, %if.end62.i.while.body54.i_crit_edge ]
  %34 = ptrtoint ptr %sk_socket.i3 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sk_socket.i3, align 8
  %tobool.not.i1 = icmp eq ptr %35, null
  br i1 %tobool.not.i1, label %while.body54.i.error.i_crit_edge, label %sendpage_unlocked.exit

while.body54.i.error.i_crit_edge:                 ; preds = %while.body54.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %error.i

sendpage_unlocked.exit:                           ; preds = %while.body54.i
  %36 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %bv_offset.i.i, align 4
  %add57.i = add i32 %37, %offset.addr.7219.i
  %38 = ptrtoint ptr %arrayidx42.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx42.i, align 4
  %call.i = call i32 @kernel_sendpage(ptr noundef nonnull %35, ptr noundef %39, i32 noundef %add57.i, i32 noundef %slen.0220.i, i32 noundef 64) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp59.i = icmp slt i32 %call.i, 1
  br i1 %cmp59.i, label %sendpage_unlocked.exit.error.i_crit_edge, label %if.end62.i

sendpage_unlocked.exit.error.i_crit_edge:         ; preds = %sendpage_unlocked.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %error.i

if.end62.i:                                       ; preds = %sendpage_unlocked.exit
  %sub63.i = sub i32 %len.addr.4218.i, %call.i
  %add64.i = add i32 %call.i, %offset.addr.7219.i
  %sub65.i = sub i32 %slen.0220.i, %call.i
  %tobool53.not.i = icmp eq i32 %sub65.i, 0
  br i1 %tobool53.not.i, label %if.end62.i.for.inc70.i_crit_edge, label %if.end62.i.while.body54.i_crit_edge

if.end62.i.while.body54.i_crit_edge:              ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body54.i

if.end62.i.for.inc70.i_crit_edge:                 ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc70.i

for.inc70.i:                                      ; preds = %if.end62.i.for.inc70.i_crit_edge, %for.body37.i.for.inc70.i_crit_edge
  %len.addr.4.lcssa.i = phi i32 [ %len.addr.3224.i, %for.body37.i.for.inc70.i_crit_edge ], [ %sub63.i, %if.end62.i.for.inc70.i_crit_edge ]
  %indvars.iv.next246.i = add nuw nsw i32 %indvars.iv245.i, 1
  %tobool28.not.i = icmp eq i32 %len.addr.4.lcssa.i, 0
  br i1 %tobool28.not.i, label %for.inc70.i.out.i_crit_edge, label %for.inc70.i.land.rhs29.i_crit_edge

for.inc70.i.land.rhs29.i_crit_edge:               ; preds = %for.inc70.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs29.i

for.inc70.i.out.i_crit_edge:                      ; preds = %for.inc70.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

if.then74.critedge.i:                             ; preds = %land.rhs29.i
  %cmp75.i = icmp eq ptr %skb.addr.0.i, %skb
  br i1 %cmp75.i, label %if.then77.i, label %if.else.i

if.then77.i:                                      ; preds = %if.then74.critedge.i
  %frag_list.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 6
  %40 = ptrtoint ptr %frag_list.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %frag_list.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %41, null
  br i1 %cmp.i.not.i, label %if.then77.i.out.i_crit_edge, label %if.then77.i.do_frag_list.i.backedge_crit_edge

if.then77.i.do_frag_list.i.backedge_crit_edge:    ; preds = %if.then77.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do_frag_list.i.backedge

if.then77.i.out.i_crit_edge:                      ; preds = %if.then77.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

if.else.i:                                        ; preds = %if.then74.critedge.i
  %42 = ptrtoint ptr %skb.addr.0.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %skb.addr.0.i, align 8
  %tobool82.not.i = icmp eq ptr %43, null
  br i1 %tobool82.not.i, label %if.else.i.out.i_crit_edge, label %if.else.i.do_frag_list.i.backedge_crit_edge

if.else.i.do_frag_list.i.backedge_crit_edge:      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do_frag_list.i.backedge

if.else.i.out.i_crit_edge:                        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

do_frag_list.i.backedge:                          ; preds = %if.else.i.do_frag_list.i.backedge_crit_edge, %if.then77.i.do_frag_list.i.backedge_crit_edge
  %skb.addr.0.i.be = phi ptr [ %43, %if.else.i.do_frag_list.i.backedge_crit_edge ], [ %41, %if.then77.i.do_frag_list.i.backedge_crit_edge ]
  br label %do_frag_list.i

out.i:                                            ; preds = %if.else.i.out.i_crit_edge, %if.then77.i.out.i_crit_edge, %for.inc70.i.out.i_crit_edge, %for.end.i.out.i_crit_edge, %while.end.i.out.i_crit_edge
  %len.addr.5.i = phi i32 [ 0, %for.inc70.i.out.i_crit_edge ], [ %len.addr.3224.i, %if.then77.i.out.i_crit_edge ], [ %len.addr.3224.i, %if.else.i.out.i_crit_edge ], [ 0, %while.end.i.out.i_crit_edge ], [ 0, %for.end.i.out.i_crit_edge ]
  %sub88.i = sub i32 %len, %len.addr.5.i
  br label %__skb_send_sock.exit

error.i:                                          ; preds = %sendpage_unlocked.exit.error.i_crit_edge, %while.body54.i.error.i_crit_edge, %sendmsg_unlocked.exit.error.i_crit_edge, %sendmsg_unlocked.exit.thread
  %len.addr.6.i = phi i32 [ %len.addr.1203.i, %sendmsg_unlocked.exit.thread ], [ %len.addr.4218.i, %sendpage_unlocked.exit.error.i_crit_edge ], [ %len.addr.4218.i, %while.body54.i.error.i_crit_edge ], [ %len.addr.1203.i, %sendmsg_unlocked.exit.error.i_crit_edge ]
  %ret.5.i = phi i32 [ -22, %sendmsg_unlocked.exit.thread ], [ -22, %while.body54.i.error.i_crit_edge ], [ %call.i, %sendpage_unlocked.exit.error.i_crit_edge ], [ %call.i5, %sendmsg_unlocked.exit.error.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %len.addr.6.i, i32 %len)
  %cmp89.i = icmp eq i32 %len.addr.6.i, %len
  %sub93.i = sub i32 %len, %len.addr.6.i
  %cond95.i = select i1 %cmp89.i, i32 %ret.5.i, i32 %sub93.i
  br label %__skb_send_sock.exit

__skb_send_sock.exit:                             ; preds = %error.i, %out.i
  %retval.0.i = phi i32 [ %cond95.i, %error.i ], [ %sub88.i, %out.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_store_bits(ptr nocapture noundef readonly %skb, i32 noundef %offset, ptr nocapture noundef readonly %from, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %1, %3
  %sub = sub i32 %1, %len
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %offset)
  %cmp = icmp slt i32 %sub, %offset
  br i1 %cmp, label %entry.fault_crit_edge, label %if.end

entry.fault_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %fault

if.end:                                           ; preds = %entry
  %sub2 = sub i32 %sub.i, %offset
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub2)
  %cmp3 = icmp sgt i32 %sub2, 0
  br i1 %cmp3, label %if.then4, label %if.end.if.end12_crit_edge

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.then4:                                         ; preds = %if.end
  %4 = tail call i32 @llvm.smin.i32(i32 %sub2, i32 %len)
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %6, i32 %offset
  %7 = call ptr @memcpy(ptr %add.ptr.i, ptr %from, i32 %4)
  %sub8 = sub i32 %len, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub8)
  %cmp9 = icmp eq i32 %sub8, 0
  br i1 %cmp9, label %if.then4.cleanup177_crit_edge, label %if.end11

if.then4.cleanup177_crit_edge:                    ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup177

if.end11:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  %add = add i32 %4, %offset
  %add.ptr = getelementptr i8, ptr %from, i32 %4
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end.if.end12_crit_edge
  %len.addr.0 = phi i32 [ %sub8, %if.end11 ], [ %len, %if.end.if.end12_crit_edge ]
  %from.addr.0 = phi ptr [ %add.ptr, %if.end11 ], [ %from, %if.end.if.end12_crit_edge ]
  %offset.addr.0 = phi i32 [ %add, %if.end11 ], [ %offset, %if.end.if.end12_crit_edge ]
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %8 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i, align 4
  %nr_frags313 = getelementptr inbounds %struct.skb_shared_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %nr_frags313 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %nr_frags313, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %cmp14315.not = icmp eq i8 %11, 0
  br i1 %cmp14315.not, label %if.end12.for.end107_crit_edge, label %if.end12.for.body_crit_edge

if.end12.for.body_crit_edge:                      ; preds = %if.end12
  br label %for.body

if.end12.for.end107_crit_edge:                    ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end107

for.body:                                         ; preds = %for.inc106.for.body_crit_edge, %if.end12.for.body_crit_edge
  %12 = phi ptr [ %75, %for.inc106.for.body_crit_edge ], [ %9, %if.end12.for.body_crit_edge ]
  %offset.addr.1321 = phi i32 [ %offset.addr.3, %for.inc106.for.body_crit_edge ], [ %offset.addr.0, %if.end12.for.body_crit_edge ]
  %from.addr.1320 = phi ptr [ %from.addr.3, %for.inc106.for.body_crit_edge ], [ %from.addr.0, %if.end12.for.body_crit_edge ]
  %len.addr.1319 = phi i32 [ %len.addr.2, %for.inc106.for.body_crit_edge ], [ %len.addr.0, %if.end12.for.body_crit_edge ]
  %i.0317 = phi i32 [ %inc, %for.inc106.for.body_crit_edge ], [ 0, %if.end12.for.body_crit_edge ]
  %start.0316 = phi i32 [ %add41, %for.inc106.for.body_crit_edge ], [ %sub.i, %if.end12.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0317
  %add17 = add i32 %offset.addr.1321, %len.addr.1319
  call void @__sanitizer_cov_trace_cmp4(i32 %start.0316, i32 %add17)
  %cmp18 = icmp sgt i32 %start.0316, %add17
  br i1 %cmp18, label %do.end, label %for.body.if.end33_crit_edge, !prof !373

for.body.if.end33_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2766, i32 noundef 9, ptr noundef null) #20
  br label %if.end33

if.end33:                                         ; preds = %do.end, %for.body.if.end33_crit_edge
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0317, i32 1
  %13 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %bv_len.i, align 4
  %add41 = add i32 %14, %start.0316
  %sub42 = sub i32 %add41, %offset.addr.1321
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub42)
  %cmp43 = icmp sgt i32 %sub42, 0
  br i1 %cmp43, label %if.then45, label %if.end33.for.inc106_crit_edge

if.end33.for.inc106_crit_edge:                    ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc106

if.then45:                                        ; preds = %if.end33
  %15 = tail call i32 @llvm.smin.i32(i32 %sub42, i32 %len.addr.1319)
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0317, i32 2
  %18 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %bv_offset.i, align 4
  %add52 = sub i32 %offset.addr.1321, %start.0316
  %sub53 = add i32 %add52, %19
  %shr = lshr i32 %sub53, 12
  %add.ptr54 = getelementptr %struct.page, ptr %17, i32 %shr
  %and = and i32 %sub53, 4095
  %20 = ptrtoint ptr %add.ptr54 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %add.ptr54, align 4
  %shr.i.i = lshr i32 %21, 30
  %22 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.51)
  switch i32 %shr.i.i, label %if.then45.skb_frag_must_loop.exit.thread276_crit_edge [
    i32 2, label %skb_frag_must_loop.exit.thread
    i32 3, label %skb_frag_must_loop.exit
  ]

if.then45.skb_frag_must_loop.exit.thread276_crit_edge: ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_frag_must_loop.exit.thread276

skb_frag_must_loop.exit.thread:                   ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #22
  %sub60272 = sub nuw nsw i32 4096, %and
  %23 = tail call i32 @llvm.umin.i32(i32 %15, i32 %sub60272)
  br label %26

skb_frag_must_loop.exit:                          ; preds = %if.then45
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %24 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp2.i.i = icmp eq i32 %24, 2
  %sub60 = sub nuw nsw i32 4096, %and
  %25 = tail call i32 @llvm.umin.i32(i32 %15, i32 %sub60)
  br i1 %cmp2.i.i, label %skb_frag_must_loop.exit._crit_edge, label %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread276_crit_edge

skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread276_crit_edge: ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_frag_must_loop.exit.thread276

skb_frag_must_loop.exit._crit_edge:               ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %26

26:                                               ; preds = %skb_frag_must_loop.exit._crit_edge, %skb_frag_must_loop.exit.thread
  %spec.select267.sub60275 = phi i32 [ %23, %skb_frag_must_loop.exit.thread ], [ %25, %skb_frag_must_loop.exit._crit_edge ]
  br label %skb_frag_must_loop.exit.thread276

skb_frag_must_loop.exit.thread276:                ; preds = %26, %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread276_crit_edge, %if.then45.skb_frag_must_loop.exit.thread276_crit_edge
  %27 = phi i32 [ %spec.select267.sub60275, %26 ], [ %15, %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread276_crit_edge ], [ %15, %if.then45.skb_frag_must_loop.exit.thread276_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp69308.not = icmp eq i32 %15, 0
  br i1 %cmp69308.not, label %skb_frag_must_loop.exit.thread276.for.end_crit_edge, label %for.body71.preheader

skb_frag_must_loop.exit.thread276.for.end_crit_edge: ; preds = %skb_frag_must_loop.exit.thread276
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.preheader:                             ; preds = %skb_frag_must_loop.exit.thread276
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %28 = load i32, ptr @pgprot_kernel, align 4
  %or.i.peel = or i32 %28, 512
  %29 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i.peel = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i.peel to ptr
  %preempt_count.i.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i.peel, align 4
  %add.i.i.i.peel = add i32 %32, 1
  store volatile i32 %add.i.i.i.peel, ptr %preempt_count.i.i.i.i.peel, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %33 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i.peel = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i1.i.i.peel to ptr
  %task.i.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i.i.i.i.peel, align 8
  %pagefault_disabled.i.i.i.i.peel = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 213
  %37 = ptrtoint ptr %pagefault_disabled.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %pagefault_disabled.i.i.i.i.peel, align 8
  %inc.i.i.i.i.peel = add i32 %38, 1
  store i32 %inc.i.i.i.i.peel, ptr %pagefault_disabled.i.i.i.i.peel, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i.peel = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr54, i32 noundef %or.i.peel) #20
  %add.ptr73.peel = getelementptr i8, ptr %call.i.i.peel, i32 %and
  %39 = call ptr @memcpy(ptr %add.ptr73.peel, ptr %from.addr.1320, i32 %27)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i.peel) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %40 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.peel = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i1.i.peel to ptr
  %task.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %task.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task.i.i.i.peel, align 8
  %pagefault_disabled.i.i.i.peel = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 213
  %44 = ptrtoint ptr %pagefault_disabled.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %pagefault_disabled.i.i.i.peel, align 8
  %dec.i.i.i.peel = add i32 %45, -1
  store i32 %dec.i.i.i.peel, ptr %pagefault_disabled.i.i.i.peel, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %46 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.peel = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i.i.peel to ptr
  %preempt_count.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %preempt_count.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %preempt_count.i.i.i.peel, align 4
  %sub.i.i.peel = add i32 %49, -1
  store volatile i32 %sub.i.i.peel, ptr %preempt_count.i.i.i.peel, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %27)
  %cmp69.peel = icmp ugt i32 %15, %27
  br i1 %cmp69.peel, label %for.body71.peel.next, label %for.body71.preheader.for.end_crit_edge

for.body71.preheader.for.end_crit_edge:           ; preds = %for.body71.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.peel.next:                             ; preds = %for.body71.preheader
  %sub82.peel = sub i32 %15, %27
  %50 = tail call i32 @llvm.umin.i32(i32 %sub82.peel, i32 4096)
  br label %for.body71

for.body71:                                       ; preds = %for.body71.for.body71_crit_edge, %for.body71.peel.next
  %p.0312.pn = phi ptr [ %p.0312, %for.body71.for.body71_crit_edge ], [ %add.ptr54, %for.body71.peel.next ]
  %copied.0311 = phi i32 [ %add81, %for.body71.for.body71_crit_edge ], [ %27, %for.body71.peel.next ]
  %p_len.0310 = phi i32 [ %73, %for.body71.for.body71_crit_edge ], [ %50, %for.body71.peel.next ]
  %p.0312 = getelementptr %struct.page, ptr %p.0312.pn, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %51 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %51, 512
  %52 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i = and i32 %52, -16384
  %53 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %55, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %56 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 2
  %58 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %59, i32 0, i32 213
  %60 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %61, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %p.0312, i32 noundef %or.i) #20
  %add.ptr74 = getelementptr i8, ptr %from.addr.1320, i32 %copied.0311
  %62 = call ptr @memcpy(ptr %call.i.i, ptr %add.ptr74, i32 %p_len.0310)
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %63 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i = and i32 %63, -16384
  %64 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 2
  %65 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %66, i32 0, i32 213
  %67 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %68, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %69 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %72, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %add81 = add i32 %copied.0311, %p_len.0310
  %sub82 = sub i32 %15, %add81
  %73 = tail call i32 @llvm.umin.i32(i32 %sub82, i32 4096)
  %cmp69 = icmp ugt i32 %15, %add81
  br i1 %cmp69, label %for.body71.for.body71_crit_edge, label %for.body71.for.end_crit_edge, !llvm.loop !426

for.body71.for.end_crit_edge:                     ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.for.body71_crit_edge:                  ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body71

for.end:                                          ; preds = %for.body71.for.end_crit_edge, %for.body71.preheader.for.end_crit_edge, %skb_frag_must_loop.exit.thread276.for.end_crit_edge
  %sub90 = sub i32 %len.addr.1319, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub90)
  %cmp91 = icmp eq i32 %sub90, 0
  %add95 = add i32 %15, %offset.addr.1321
  %add.ptr96 = getelementptr i8, ptr %from.addr.1320, i32 %15
  br i1 %cmp91, label %for.end.cleanup177_crit_edge, label %for.end.for.inc106_crit_edge

for.end.for.inc106_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc106

for.end.cleanup177_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup177

for.inc106:                                       ; preds = %for.end.for.inc106_crit_edge, %if.end33.for.inc106_crit_edge
  %len.addr.2 = phi i32 [ %sub90, %for.end.for.inc106_crit_edge ], [ %len.addr.1319, %if.end33.for.inc106_crit_edge ]
  %from.addr.3 = phi ptr [ %add.ptr96, %for.end.for.inc106_crit_edge ], [ %from.addr.1320, %if.end33.for.inc106_crit_edge ]
  %offset.addr.3 = phi i32 [ %add95, %for.end.for.inc106_crit_edge ], [ %offset.addr.1321, %if.end33.for.inc106_crit_edge ]
  %inc = add nuw nsw i32 %i.0317, 1
  %74 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %75, i32 0, i32 2
  %76 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %77 to i32
  %cmp14 = icmp ult i32 %inc, %conv
  br i1 %cmp14, label %for.inc106.for.body_crit_edge, label %for.inc106.for.end107_crit_edge

for.inc106.for.end107_crit_edge:                  ; preds = %for.inc106
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end107

for.inc106.for.body_crit_edge:                    ; preds = %for.inc106
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end107:                                       ; preds = %for.inc106.for.end107_crit_edge, %if.end12.for.end107_crit_edge
  %start.0.lcssa = phi i32 [ %sub.i, %if.end12.for.end107_crit_edge ], [ %add41, %for.inc106.for.end107_crit_edge ]
  %len.addr.1.lcssa = phi i32 [ %len.addr.0, %if.end12.for.end107_crit_edge ], [ %len.addr.2, %for.inc106.for.end107_crit_edge ]
  %from.addr.1.lcssa = phi ptr [ %from.addr.0, %if.end12.for.end107_crit_edge ], [ %from.addr.3, %for.inc106.for.end107_crit_edge ]
  %offset.addr.1.lcssa = phi i32 [ %offset.addr.0, %if.end12.for.end107_crit_edge ], [ %offset.addr.3, %for.inc106.for.end107_crit_edge ]
  %.lcssa = phi ptr [ %9, %if.end12.for.end107_crit_edge ], [ %75, %for.inc106.for.end107_crit_edge ]
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 6
  %78 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %78)
  %frag_iter.0326 = load ptr, ptr %frag_list, align 8
  %tobool110.not327 = icmp eq ptr %frag_iter.0326, null
  br i1 %tobool110.not327, label %for.end107.for.end173_crit_edge, label %for.end107.for.body111_crit_edge

for.end107.for.body111_crit_edge:                 ; preds = %for.end107
  br label %for.body111

for.end107.for.end173_crit_edge:                  ; preds = %for.end107
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end173

for.body111:                                      ; preds = %cleanup169.for.body111_crit_edge, %for.end107.for.body111_crit_edge
  %frag_iter.0332 = phi ptr [ %frag_iter.0, %cleanup169.for.body111_crit_edge ], [ %frag_iter.0326, %for.end107.for.body111_crit_edge ]
  %offset.addr.5331 = phi i32 [ %offset.addr.7, %cleanup169.for.body111_crit_edge ], [ %offset.addr.1.lcssa, %for.end107.for.body111_crit_edge ]
  %from.addr.5330 = phi ptr [ %from.addr.7, %cleanup169.for.body111_crit_edge ], [ %from.addr.1.lcssa, %for.end107.for.body111_crit_edge ]
  %len.addr.4329 = phi i32 [ %len.addr.6, %cleanup169.for.body111_crit_edge ], [ %len.addr.1.lcssa, %for.end107.for.body111_crit_edge ]
  %start.2328 = phi i32 [ %add147, %cleanup169.for.body111_crit_edge ], [ %start.0.lcssa, %for.end107.for.body111_crit_edge ]
  %add114 = add i32 %offset.addr.5331, %len.addr.4329
  call void @__sanitizer_cov_trace_cmp4(i32 %start.2328, i32 %add114)
  %cmp115 = icmp sgt i32 %start.2328, %add114
  br i1 %cmp115, label %do.end132, label %for.body111.if.end138_crit_edge, !prof !373

for.body111.if.end138_crit_edge:                  ; preds = %for.body111
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end138

do.end132:                                        ; preds = %for.body111
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2796, i32 noundef 9, ptr noundef null) #20
  br label %if.end138

if.end138:                                        ; preds = %do.end132, %for.body111.if.end138_crit_edge
  %len146 = getelementptr inbounds %struct.sk_buff, ptr %frag_iter.0332, i32 0, i32 6
  %79 = ptrtoint ptr %len146 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %len146, align 4
  %add147 = add i32 %80, %start.2328
  %sub148 = sub i32 %add147, %offset.addr.5331
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub148)
  %cmp149 = icmp sgt i32 %sub148, 0
  br i1 %cmp149, label %if.then151, label %if.end138.cleanup169_crit_edge

if.end138.cleanup169_crit_edge:                   ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup169

if.then151:                                       ; preds = %if.end138
  %81 = tail call i32 @llvm.smin.i32(i32 %sub148, i32 %len.addr.4329)
  %sub156 = sub i32 %offset.addr.5331, %start.2328
  %call157 = tail call i32 @skb_store_bits(ptr noundef nonnull %frag_iter.0332, i32 noundef %sub156, ptr noundef %from.addr.5330, i32 noundef %81)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call157)
  %tobool158.not = icmp eq i32 %call157, 0
  br i1 %tobool158.not, label %if.end160, label %if.then151.fault_crit_edge

if.then151.fault_crit_edge:                       ; preds = %if.then151
  call void @__sanitizer_cov_trace_pc() #22
  br label %fault

if.end160:                                        ; preds = %if.then151
  %sub161 = sub i32 %len.addr.4329, %81
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub161)
  %cmp162 = icmp eq i32 %sub161, 0
  br i1 %cmp162, label %if.end160.cleanup177_crit_edge, label %if.end165

if.end160.cleanup177_crit_edge:                   ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup177

if.end165:                                        ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #22
  %add166 = add i32 %81, %offset.addr.5331
  %add.ptr167 = getelementptr i8, ptr %from.addr.5330, i32 %81
  br label %cleanup169

cleanup169:                                       ; preds = %if.end165, %if.end138.cleanup169_crit_edge
  %len.addr.6 = phi i32 [ %sub161, %if.end165 ], [ %len.addr.4329, %if.end138.cleanup169_crit_edge ]
  %from.addr.7 = phi ptr [ %add.ptr167, %if.end165 ], [ %from.addr.5330, %if.end138.cleanup169_crit_edge ]
  %offset.addr.7 = phi i32 [ %add166, %if.end165 ], [ %offset.addr.5331, %if.end138.cleanup169_crit_edge ]
  %82 = ptrtoint ptr %frag_iter.0332 to i32
  call void @__asan_load4_noabort(i32 %82)
  %frag_iter.0 = load ptr, ptr %frag_iter.0332, align 8
  %tobool110.not = icmp eq ptr %frag_iter.0, null
  br i1 %tobool110.not, label %cleanup169.for.end173_crit_edge, label %cleanup169.for.body111_crit_edge

cleanup169.for.body111_crit_edge:                 ; preds = %cleanup169
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body111

cleanup169.for.end173_crit_edge:                  ; preds = %cleanup169
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end173

for.end173:                                       ; preds = %cleanup169.for.end173_crit_edge, %for.end107.for.end173_crit_edge
  %len.addr.4.lcssa = phi i32 [ %len.addr.1.lcssa, %for.end107.for.end173_crit_edge ], [ %len.addr.6, %cleanup169.for.end173_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.4.lcssa)
  %tobool174.not = icmp eq i32 %len.addr.4.lcssa, 0
  br i1 %tobool174.not, label %for.end173.cleanup177_crit_edge, label %for.end173.fault_crit_edge

for.end173.fault_crit_edge:                       ; preds = %for.end173
  call void @__sanitizer_cov_trace_pc() #22
  br label %fault

for.end173.cleanup177_crit_edge:                  ; preds = %for.end173
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup177

fault:                                            ; preds = %for.end173.fault_crit_edge, %if.then151.fault_crit_edge, %entry.fault_crit_edge
  br label %cleanup177

cleanup177:                                       ; preds = %fault, %for.end173.cleanup177_crit_edge, %if.end160.cleanup177_crit_edge, %for.end.cleanup177_crit_edge, %if.then4.cleanup177_crit_edge
  %retval.6 = phi i32 [ -14, %fault ], [ 0, %if.then4.cleanup177_crit_edge ], [ 0, %for.end173.cleanup177_crit_edge ], [ 0, %if.end160.cleanup177_crit_edge ], [ 0, %for.end.cleanup177_crit_edge ]
  ret i32 %retval.6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__skb_checksum(ptr nocapture noundef readonly %skb, i32 noundef %offset, i32 noundef %len, i32 noundef %csum, ptr nocapture noundef readonly %ops) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %1, %3
  %sub = sub i32 %sub.i, %offset
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp sgt i32 %sub, 0
  br i1 %cmp, label %if.then, label %entry.if.end8_crit_edge

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then:                                          ; preds = %entry
  %4 = tail call i32 @llvm.smin.i32(i32 %sub, i32 %len)
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops, align 4
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %data, align 4
  %add.ptr = getelementptr i8, ptr %8, i32 %offset
  %call3 = tail call i32 %6(ptr noundef %add.ptr, i32 noundef %4, i32 noundef %csum) #20
  %sub4 = sub i32 %len, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub4)
  %cmp5 = icmp eq i32 %sub4, 0
  br i1 %cmp5, label %if.then.cleanup193_crit_edge, label %if.end7

if.then.cleanup193_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup193

if.end7:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %add = add i32 %4, %offset
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %entry.if.end8_crit_edge
  %pos.0 = phi i32 [ %4, %if.end7 ], [ 0, %entry.if.end8_crit_edge ]
  %csum.addr.0 = phi i32 [ %call3, %if.end7 ], [ %csum, %entry.if.end8_crit_edge ]
  %len.addr.0 = phi i32 [ %sub4, %if.end7 ], [ %len, %entry.if.end8_crit_edge ]
  %offset.addr.0 = phi i32 [ %add, %if.end7 ], [ %offset, %entry.if.end8_crit_edge ]
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %9 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i, align 4
  %nr_frags344 = getelementptr inbounds %struct.skb_shared_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %nr_frags344 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %nr_frags344, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp10346.not = icmp eq i8 %12, 0
  br i1 %cmp10346.not, label %if.end8.for.end105_crit_edge, label %for.body.lr.ph

if.end8.for.end105_crit_edge:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end105

for.body.lr.ph:                                   ; preds = %if.end8
  %combine = getelementptr inbounds %struct.skb_checksum_ops, ptr %ops, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc104.for.body_crit_edge, %for.body.lr.ph
  %13 = phi ptr [ %10, %for.body.lr.ph ], [ %82, %for.inc104.for.body_crit_edge ]
  %offset.addr.1353 = phi i32 [ %offset.addr.0, %for.body.lr.ph ], [ %offset.addr.3, %for.inc104.for.body_crit_edge ]
  %len.addr.1352 = phi i32 [ %len.addr.0, %for.body.lr.ph ], [ %len.addr.2, %for.inc104.for.body_crit_edge ]
  %csum.addr.1351 = phi i32 [ %csum.addr.0, %for.body.lr.ph ], [ %csum.addr.3, %for.inc104.for.body_crit_edge ]
  %pos.1350 = phi i32 [ %pos.0, %for.body.lr.ph ], [ %pos.3, %for.inc104.for.body_crit_edge ]
  %i.0348 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc104.for.body_crit_edge ]
  %start.0347 = phi i32 [ %sub.i, %for.body.lr.ph ], [ %add37, %for.inc104.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %13, i32 0, i32 12, i32 %i.0348
  %add13 = add i32 %offset.addr.1353, %len.addr.1352
  call void @__sanitizer_cov_trace_cmp4(i32 %start.0347, i32 %add13)
  %cmp14 = icmp sgt i32 %start.0347, %add13
  br i1 %cmp14, label %do.end, label %for.body.if.end29_crit_edge, !prof !373

for.body.if.end29_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2845, i32 noundef 9, ptr noundef null) #20
  br label %if.end29

if.end29:                                         ; preds = %do.end, %for.body.if.end29_crit_edge
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %13, i32 0, i32 12, i32 %i.0348, i32 1
  %14 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %bv_len.i, align 4
  %add37 = add i32 %15, %start.0347
  %sub38 = sub i32 %add37, %offset.addr.1353
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub38)
  %cmp39 = icmp sgt i32 %sub38, 0
  br i1 %cmp39, label %if.then41, label %if.end29.for.inc104_crit_edge

if.end29.for.inc104_crit_edge:                    ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc104

if.then41:                                        ; preds = %if.end29
  %16 = tail call i32 @llvm.smin.i32(i32 %sub38, i32 %len.addr.1352)
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %13, i32 0, i32 12, i32 %i.0348, i32 2
  %19 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %bv_offset.i, align 4
  %add48 = sub i32 %offset.addr.1353, %start.0347
  %sub49 = add i32 %add48, %20
  %shr = lshr i32 %sub49, 12
  %add.ptr50 = getelementptr %struct.page, ptr %18, i32 %shr
  %and = and i32 %sub49, 4095
  %21 = ptrtoint ptr %add.ptr50 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %add.ptr50, align 4
  %shr.i.i = lshr i32 %22, 30
  %23 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.52)
  switch i32 %shr.i.i, label %if.then41.skb_frag_must_loop.exit.thread303_crit_edge [
    i32 2, label %skb_frag_must_loop.exit.thread
    i32 3, label %skb_frag_must_loop.exit
  ]

if.then41.skb_frag_must_loop.exit.thread303_crit_edge: ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_frag_must_loop.exit.thread303

skb_frag_must_loop.exit.thread:                   ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #22
  %sub56299 = sub nuw nsw i32 4096, %and
  %24 = tail call i32 @llvm.umin.i32(i32 %16, i32 %sub56299)
  br label %27

skb_frag_must_loop.exit:                          ; preds = %if.then41
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %25 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %25)
  %cmp2.i.i = icmp eq i32 %25, 2
  %sub56 = sub nuw nsw i32 4096, %and
  %26 = tail call i32 @llvm.umin.i32(i32 %16, i32 %sub56)
  br i1 %cmp2.i.i, label %skb_frag_must_loop.exit._crit_edge, label %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread303_crit_edge

skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread303_crit_edge: ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_frag_must_loop.exit.thread303

skb_frag_must_loop.exit._crit_edge:               ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %27

27:                                               ; preds = %skb_frag_must_loop.exit._crit_edge, %skb_frag_must_loop.exit.thread
  %spec.select294.sub56302 = phi i32 [ %24, %skb_frag_must_loop.exit.thread ], [ %26, %skb_frag_must_loop.exit._crit_edge ]
  br label %skb_frag_must_loop.exit.thread303

skb_frag_must_loop.exit.thread303:                ; preds = %27, %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread303_crit_edge, %if.then41.skb_frag_must_loop.exit.thread303_crit_edge
  %28 = phi i32 [ %spec.select294.sub56302, %27 ], [ %16, %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread303_crit_edge ], [ %16, %if.then41.skb_frag_must_loop.exit.thread303_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp65336.not = icmp eq i32 %16, 0
  br i1 %cmp65336.not, label %skb_frag_must_loop.exit.thread303.for.end_crit_edge, label %for.body67.preheader

skb_frag_must_loop.exit.thread303.for.end_crit_edge: ; preds = %skb_frag_must_loop.exit.thread303
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body67.preheader:                             ; preds = %skb_frag_must_loop.exit.thread303
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %29 = load i32, ptr @pgprot_kernel, align 4
  %or.i.peel = or i32 %29, 512
  %30 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i.peel = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i.i.i.peel to ptr
  %preempt_count.i.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i.i.i.peel, align 4
  %add.i.i.i.peel = add i32 %33, 1
  store volatile i32 %add.i.i.i.peel, ptr %preempt_count.i.i.i.i.peel, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %34 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i.peel = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i1.i.i.peel to ptr
  %task.i.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %task.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %task.i.i.i.i.peel, align 8
  %pagefault_disabled.i.i.i.i.peel = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 213
  %38 = ptrtoint ptr %pagefault_disabled.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %pagefault_disabled.i.i.i.i.peel, align 8
  %inc.i.i.i.i.peel = add i32 %39, 1
  store i32 %inc.i.i.i.i.peel, ptr %pagefault_disabled.i.i.i.i.peel, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i.peel = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr50, i32 noundef %or.i.peel) #20
  %40 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ops, align 4
  %add.ptr70.peel = getelementptr i8, ptr %call.i.i.peel, i32 %and
  %call71.peel = tail call i32 %41(ptr noundef %add.ptr70.peel, i32 noundef %28, i32 noundef 0) #20
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i.peel) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %42 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.peel = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i1.i.peel to ptr
  %task.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 2
  %44 = ptrtoint ptr %task.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %task.i.i.i.peel, align 8
  %pagefault_disabled.i.i.i.peel = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 213
  %46 = ptrtoint ptr %pagefault_disabled.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %pagefault_disabled.i.i.i.peel, align 8
  %dec.i.i.i.peel = add i32 %47, -1
  store i32 %dec.i.i.i.peel, ptr %pagefault_disabled.i.i.i.peel, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %48 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.peel = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i.i.peel to ptr
  %preempt_count.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i.i.peel, align 4
  %sub.i.i.peel = add i32 %51, -1
  store volatile i32 %sub.i.i.peel, ptr %preempt_count.i.i.i.peel, align 4
  %52 = ptrtoint ptr %combine to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %combine, align 4
  %call78.peel = tail call i32 %53(i32 noundef %csum.addr.1351, i32 noundef %call71.peel, i32 noundef %pos.1350, i32 noundef %28) #20
  %add79.peel = add i32 %28, %pos.1350
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %28)
  %cmp65.peel = icmp ugt i32 %16, %28
  br i1 %cmp65.peel, label %for.body67.peel.next, label %for.body67.preheader.for.end_crit_edge

for.body67.preheader.for.end_crit_edge:           ; preds = %for.body67.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body67.peel.next:                             ; preds = %for.body67.preheader
  %sub81.peel = sub i32 %16, %28
  %54 = tail call i32 @llvm.umin.i32(i32 %sub81.peel, i32 4096)
  br label %for.body67

for.body67:                                       ; preds = %for.body67.for.body67_crit_edge, %for.body67.peel.next
  %p.0342.pn = phi ptr [ %p.0342, %for.body67.for.body67_crit_edge ], [ %add.ptr50, %for.body67.peel.next ]
  %copied.0341 = phi i32 [ %add80, %for.body67.for.body67_crit_edge ], [ %28, %for.body67.peel.next ]
  %p_len.0340 = phi i32 [ %80, %for.body67.for.body67_crit_edge ], [ %54, %for.body67.peel.next ]
  %csum.addr.2338 = phi i32 [ %call78, %for.body67.for.body67_crit_edge ], [ %call78.peel, %for.body67.peel.next ]
  %pos.2337 = phi i32 [ %add79, %for.body67.for.body67_crit_edge ], [ %add79.peel, %for.body67.peel.next ]
  %p.0342 = getelementptr %struct.page, ptr %p.0342.pn, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %55 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %55, 512
  %56 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i = and i32 %56, -16384
  %57 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %59, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %60 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 2
  %62 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %63, i32 0, i32 213
  %64 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %65, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %p.0342, i32 noundef %or.i) #20
  %66 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %ops, align 4
  %call71 = tail call i32 %67(ptr noundef %call.i.i, i32 noundef %p_len.0340, i32 noundef 0) #20
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %68 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 2
  %70 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %71, i32 0, i32 213
  %72 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %73, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %74 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %74, -16384
  %75 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %77, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %78 = ptrtoint ptr %combine to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %combine, align 4
  %call78 = tail call i32 %79(i32 noundef %csum.addr.2338, i32 noundef %call71, i32 noundef %pos.2337, i32 noundef %p_len.0340) #20
  %add79 = add i32 %p_len.0340, %pos.2337
  %add80 = add i32 %copied.0341, %p_len.0340
  %sub81 = sub i32 %16, %add80
  %80 = tail call i32 @llvm.umin.i32(i32 %sub81, i32 4096)
  %cmp65 = icmp ugt i32 %16, %add80
  br i1 %cmp65, label %for.body67.for.body67_crit_edge, label %for.body67.for.end_crit_edge, !llvm.loop !427

for.body67.for.end_crit_edge:                     ; preds = %for.body67
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body67.for.body67_crit_edge:                  ; preds = %for.body67
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body67

for.end:                                          ; preds = %for.body67.for.end_crit_edge, %for.body67.preheader.for.end_crit_edge, %skb_frag_must_loop.exit.thread303.for.end_crit_edge
  %pos.2.lcssa = phi i32 [ %pos.1350, %skb_frag_must_loop.exit.thread303.for.end_crit_edge ], [ %add79.peel, %for.body67.preheader.for.end_crit_edge ], [ %add79, %for.body67.for.end_crit_edge ]
  %csum.addr.2.lcssa = phi i32 [ %csum.addr.1351, %skb_frag_must_loop.exit.thread303.for.end_crit_edge ], [ %call78.peel, %for.body67.preheader.for.end_crit_edge ], [ %call78, %for.body67.for.end_crit_edge ]
  %sub89 = sub i32 %len.addr.1352, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub89)
  %tobool90.not = icmp eq i32 %sub89, 0
  %add93 = add i32 %16, %offset.addr.1353
  br i1 %tobool90.not, label %for.end.cleanup193_crit_edge, label %for.end.for.inc104_crit_edge

for.end.for.inc104_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc104

for.end.cleanup193_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup193

for.inc104:                                       ; preds = %for.end.for.inc104_crit_edge, %if.end29.for.inc104_crit_edge
  %pos.3 = phi i32 [ %pos.2.lcssa, %for.end.for.inc104_crit_edge ], [ %pos.1350, %if.end29.for.inc104_crit_edge ]
  %csum.addr.3 = phi i32 [ %csum.addr.2.lcssa, %for.end.for.inc104_crit_edge ], [ %csum.addr.1351, %if.end29.for.inc104_crit_edge ]
  %len.addr.2 = phi i32 [ %sub89, %for.end.for.inc104_crit_edge ], [ %len.addr.1352, %if.end29.for.inc104_crit_edge ]
  %offset.addr.3 = phi i32 [ %add93, %for.end.for.inc104_crit_edge ], [ %offset.addr.1353, %if.end29.for.inc104_crit_edge ]
  %inc = add nuw nsw i32 %i.0348, 1
  %81 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %82, i32 0, i32 2
  %83 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %84 to i32
  %cmp10 = icmp ult i32 %inc, %conv
  br i1 %cmp10, label %for.inc104.for.body_crit_edge, label %for.inc104.for.end105_crit_edge

for.inc104.for.end105_crit_edge:                  ; preds = %for.inc104
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end105

for.inc104.for.body_crit_edge:                    ; preds = %for.inc104
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end105:                                       ; preds = %for.inc104.for.end105_crit_edge, %if.end8.for.end105_crit_edge
  %start.0.lcssa = phi i32 [ %sub.i, %if.end8.for.end105_crit_edge ], [ %add37, %for.inc104.for.end105_crit_edge ]
  %pos.1.lcssa = phi i32 [ %pos.0, %if.end8.for.end105_crit_edge ], [ %pos.3, %for.inc104.for.end105_crit_edge ]
  %csum.addr.1.lcssa = phi i32 [ %csum.addr.0, %if.end8.for.end105_crit_edge ], [ %csum.addr.3, %for.inc104.for.end105_crit_edge ]
  %len.addr.1.lcssa = phi i32 [ %len.addr.0, %if.end8.for.end105_crit_edge ], [ %len.addr.2, %for.inc104.for.end105_crit_edge ]
  %offset.addr.1.lcssa = phi i32 [ %offset.addr.0, %if.end8.for.end105_crit_edge ], [ %offset.addr.3, %for.inc104.for.end105_crit_edge ]
  %.lcssa = phi ptr [ %10, %if.end8.for.end105_crit_edge ], [ %82, %for.inc104.for.end105_crit_edge ]
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 6
  %85 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %85)
  %frag_iter.0360 = load ptr, ptr %frag_list, align 8
  %tobool108.not361 = icmp eq ptr %frag_iter.0360, null
  br i1 %tobool108.not361, label %for.end105.do.body175_crit_edge, label %for.body109.lr.ph

for.end105.do.body175_crit_edge:                  ; preds = %for.end105
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body175

for.body109.lr.ph:                                ; preds = %for.end105
  %combine157 = getelementptr inbounds %struct.skb_checksum_ops, ptr %ops, i32 0, i32 1
  br label %for.body109

for.body109:                                      ; preds = %cleanup170.for.body109_crit_edge, %for.body109.lr.ph
  %frag_iter.0367 = phi ptr [ %frag_iter.0360, %for.body109.lr.ph ], [ %frag_iter.0, %cleanup170.for.body109_crit_edge ]
  %offset.addr.5366 = phi i32 [ %offset.addr.1.lcssa, %for.body109.lr.ph ], [ %offset.addr.7, %cleanup170.for.body109_crit_edge ]
  %len.addr.4365 = phi i32 [ %len.addr.1.lcssa, %for.body109.lr.ph ], [ %len.addr.5, %cleanup170.for.body109_crit_edge ]
  %csum.addr.5364 = phi i32 [ %csum.addr.1.lcssa, %for.body109.lr.ph ], [ %csum.addr.6, %cleanup170.for.body109_crit_edge ]
  %pos.5363 = phi i32 [ %pos.1.lcssa, %for.body109.lr.ph ], [ %pos.7, %cleanup170.for.body109_crit_edge ]
  %start.2362 = phi i32 [ %start.0.lcssa, %for.body109.lr.ph ], [ %add145, %cleanup170.for.body109_crit_edge ]
  %add112 = add i32 %offset.addr.5366, %len.addr.4365
  call void @__sanitizer_cov_trace_cmp4(i32 %start.2362, i32 %add112)
  %cmp113 = icmp sgt i32 %start.2362, %add112
  br i1 %cmp113, label %do.end130, label %for.body109.if.end136_crit_edge, !prof !373

for.body109.if.end136_crit_edge:                  ; preds = %for.body109
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end136

do.end130:                                        ; preds = %for.body109
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2881, i32 noundef 9, ptr noundef null) #20
  br label %if.end136

if.end136:                                        ; preds = %do.end130, %for.body109.if.end136_crit_edge
  %len144 = getelementptr inbounds %struct.sk_buff, ptr %frag_iter.0367, i32 0, i32 6
  %86 = ptrtoint ptr %len144 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %len144, align 4
  %add145 = add i32 %87, %start.2362
  %sub146 = sub i32 %add145, %offset.addr.5366
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub146)
  %cmp147 = icmp sgt i32 %sub146, 0
  br i1 %cmp147, label %if.then149, label %if.end136.cleanup170_crit_edge

if.end136.cleanup170_crit_edge:                   ; preds = %if.end136
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup170

if.then149:                                       ; preds = %if.end136
  %88 = tail call i32 @llvm.smin.i32(i32 %sub146, i32 %len.addr.4365)
  %sub155 = sub i32 %offset.addr.5366, %start.2362
  %call156 = tail call i32 @__skb_checksum(ptr noundef nonnull %frag_iter.0367, i32 noundef %sub155, i32 noundef %88, i32 noundef 0, ptr noundef %ops)
  %89 = ptrtoint ptr %combine157 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %combine157, align 4
  %call158 = tail call i32 %90(i32 noundef %csum.addr.5364, i32 noundef %call156, i32 noundef %pos.5363, i32 noundef %88) #20
  %sub159 = sub i32 %len.addr.4365, %88
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub159)
  %cmp160 = icmp eq i32 %sub159, 0
  %add164 = add i32 %88, %offset.addr.5366
  %add165 = add i32 %88, %pos.5363
  br i1 %cmp160, label %if.then149.cleanup193_crit_edge, label %if.then149.cleanup170_crit_edge

if.then149.cleanup170_crit_edge:                  ; preds = %if.then149
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup170

if.then149.cleanup193_crit_edge:                  ; preds = %if.then149
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup193

cleanup170:                                       ; preds = %if.then149.cleanup170_crit_edge, %if.end136.cleanup170_crit_edge
  %pos.7 = phi i32 [ %add165, %if.then149.cleanup170_crit_edge ], [ %pos.5363, %if.end136.cleanup170_crit_edge ]
  %csum.addr.6 = phi i32 [ %call158, %if.then149.cleanup170_crit_edge ], [ %csum.addr.5364, %if.end136.cleanup170_crit_edge ]
  %len.addr.5 = phi i32 [ %sub159, %if.then149.cleanup170_crit_edge ], [ %len.addr.4365, %if.end136.cleanup170_crit_edge ]
  %offset.addr.7 = phi i32 [ %add164, %if.then149.cleanup170_crit_edge ], [ %offset.addr.5366, %if.end136.cleanup170_crit_edge ]
  %91 = ptrtoint ptr %frag_iter.0367 to i32
  call void @__asan_load4_noabort(i32 %91)
  %frag_iter.0 = load ptr, ptr %frag_iter.0367, align 8
  %tobool108.not = icmp eq ptr %frag_iter.0, null
  br i1 %tobool108.not, label %cleanup170.do.body175_crit_edge, label %cleanup170.for.body109_crit_edge

cleanup170.for.body109_crit_edge:                 ; preds = %cleanup170
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body109

cleanup170.do.body175_crit_edge:                  ; preds = %cleanup170
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body175

do.body175:                                       ; preds = %cleanup170.do.body175_crit_edge, %for.end105.do.body175_crit_edge
  %csum.addr.5.lcssa = phi i32 [ %csum.addr.1.lcssa, %for.end105.do.body175_crit_edge ], [ %csum.addr.6, %cleanup170.do.body175_crit_edge ]
  %len.addr.4.lcssa = phi i32 [ %len.addr.1.lcssa, %for.end105.do.body175_crit_edge ], [ %len.addr.5, %cleanup170.do.body175_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.4.lcssa)
  %tobool176.not = icmp eq i32 %len.addr.4.lcssa, 0
  br i1 %tobool176.not, label %do.body175.cleanup193_crit_edge, label %do.body184, !prof !374

do.body175.cleanup193_crit_edge:                  ; preds = %do.body175
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup193

do.body184:                                       ; preds = %do.body175
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2899, 0\0A.popsection", ""() #20, !srcloc !428
  unreachable

cleanup193:                                       ; preds = %do.body175.cleanup193_crit_edge, %if.then149.cleanup193_crit_edge, %for.end.cleanup193_crit_edge, %if.then.cleanup193_crit_edge
  %retval.8 = phi i32 [ %call3, %if.then.cleanup193_crit_edge ], [ %csum.addr.5.lcssa, %do.body175.cleanup193_crit_edge ], [ %call158, %if.then149.cleanup193_crit_edge ], [ %csum.addr.2.lcssa, %for.end.cleanup193_crit_edge ]
  ret i32 %retval.8
}

; Function Attrs: alwaysinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @csum_partial_ext(ptr noundef %buff, i32 noundef %len, i32 noundef %sum) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %call = tail call i32 @csum_partial(ptr noundef %buff, i32 noundef %len, i32 noundef %sum) #20
  ret i32 %call
}

; Function Attrs: alwaysinline mustprogress nofree nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @csum_block_add_ext(i32 noundef %csum, i32 noundef %csum2, i32 noundef %offset, i32 noundef %len) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %and.i.i = and i32 %offset, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %or.i.i.i = tail call i32 @llvm.fshl.i32(i32 %csum2, i32 %csum2, i32 24) #20
  %retval.0.i.i = select i1 %tobool.not.i.i, i32 %csum2, i32 %or.i.i.i
  %add.i.i = add i32 %retval.0.i.i, %csum
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %retval.0.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, %retval.0.i.i
  %conv.i.i = zext i1 %cmp.i.i to i32
  %add1.i.i = add i32 %add.i.i, %conv.i.i
  ret i32 %add1.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_copy_and_csum_bits(ptr nocapture noundef readonly %skb, i32 noundef %offset, ptr noundef %to, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %1, %3
  %sub = sub i32 %sub.i, %offset
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp sgt i32 %sub, 0
  br i1 %cmp, label %if.then, label %entry.if.end9_crit_edge

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.then:                                          ; preds = %entry
  %4 = tail call i32 @llvm.smin.i32(i32 %sub, i32 %len)
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data, align 4
  %add.ptr = getelementptr i8, ptr %6, i32 %offset
  %call3 = tail call i32 @csum_partial_copy_nocheck(ptr noundef %add.ptr, ptr noundef %to, i32 noundef %4) #20
  %sub4 = sub i32 %len, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub4)
  %cmp5 = icmp eq i32 %sub4, 0
  br i1 %cmp5, label %if.then.cleanup196_crit_edge, label %if.end7

if.then.cleanup196_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup196

if.end7:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %add = add i32 %4, %offset
  %add.ptr8 = getelementptr i8, ptr %to, i32 %4
  br label %if.end9

if.end9:                                          ; preds = %if.end7, %entry.if.end9_crit_edge
  %pos.0 = phi i32 [ %4, %if.end7 ], [ 0, %entry.if.end9_crit_edge ]
  %csum.0 = phi i32 [ %call3, %if.end7 ], [ 0, %entry.if.end9_crit_edge ]
  %len.addr.0 = phi i32 [ %sub4, %if.end7 ], [ %len, %entry.if.end9_crit_edge ]
  %to.addr.0 = phi ptr [ %add.ptr8, %if.end7 ], [ %to, %entry.if.end9_crit_edge ]
  %offset.addr.0 = phi i32 [ %add, %if.end7 ], [ %offset, %entry.if.end9_crit_edge ]
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %7 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %end.i, align 4
  %nr_frags362 = getelementptr inbounds %struct.skb_shared_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %nr_frags362 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %nr_frags362, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %cmp11364.not = icmp eq i8 %10, 0
  br i1 %cmp11364.not, label %if.end9.for.end110_crit_edge, label %if.end9.for.body_crit_edge

if.end9.for.body_crit_edge:                       ; preds = %if.end9
  br label %for.body

if.end9.for.end110_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end110

for.body:                                         ; preds = %for.inc109.for.body_crit_edge, %if.end9.for.body_crit_edge
  %offset.addr.1372 = phi i32 [ %offset.addr.3, %for.inc109.for.body_crit_edge ], [ %offset.addr.0, %if.end9.for.body_crit_edge ]
  %to.addr.1371 = phi ptr [ %to.addr.3, %for.inc109.for.body_crit_edge ], [ %to.addr.0, %if.end9.for.body_crit_edge ]
  %len.addr.1370 = phi i32 [ %len.addr.2, %for.inc109.for.body_crit_edge ], [ %len.addr.0, %if.end9.for.body_crit_edge ]
  %csum.1369 = phi i32 [ %csum.3, %for.inc109.for.body_crit_edge ], [ %csum.0, %if.end9.for.body_crit_edge ]
  %pos.1368 = phi i32 [ %pos.3, %for.inc109.for.body_crit_edge ], [ %pos.0, %if.end9.for.body_crit_edge ]
  %i.0366 = phi i32 [ %inc, %for.inc109.for.body_crit_edge ], [ 0, %if.end9.for.body_crit_edge ]
  %start.0365 = phi i32 [ %add38, %for.inc109.for.body_crit_edge ], [ %sub.i, %if.end9.for.body_crit_edge ]
  %add13 = add i32 %offset.addr.1372, %len.addr.1370
  call void @__sanitizer_cov_trace_cmp4(i32 %start.0365, i32 %add13)
  %cmp14 = icmp sgt i32 %start.0365, %add13
  br i1 %cmp14, label %do.end, label %for.body.if.end29_crit_edge, !prof !373

for.body.if.end29_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2944, i32 noundef 9, ptr noundef null) #20
  br label %if.end29

if.end29:                                         ; preds = %do.end, %for.body.if.end29_crit_edge
  %11 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %end.i, align 4
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0366, i32 1
  %13 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %bv_len.i, align 4
  %add38 = add i32 %14, %start.0365
  %sub39 = sub i32 %add38, %offset.addr.1372
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub39)
  %cmp40 = icmp sgt i32 %sub39, 0
  br i1 %cmp40, label %if.then42, label %if.end29.for.inc109_crit_edge

if.end29.for.inc109_crit_edge:                    ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc109

if.then42:                                        ; preds = %if.end29
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0366
  %15 = tail call i32 @llvm.smin.i32(i32 %sub39, i32 %len.addr.1370)
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %12, i32 0, i32 12, i32 %i.0366, i32 2
  %18 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %bv_offset.i, align 4
  %add52 = sub i32 %offset.addr.1372, %start.0365
  %sub53 = add i32 %add52, %19
  %shr = lshr i32 %sub53, 12
  %add.ptr54 = getelementptr %struct.page, ptr %17, i32 %shr
  %and = and i32 %sub53, 4095
  %20 = ptrtoint ptr %add.ptr54 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %add.ptr54, align 4
  %shr.i.i = lshr i32 %21, 30
  %22 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.53)
  switch i32 %shr.i.i, label %if.then42.skb_frag_must_loop.exit.thread317_crit_edge [
    i32 2, label %skb_frag_must_loop.exit.thread
    i32 3, label %skb_frag_must_loop.exit
  ]

if.then42.skb_frag_must_loop.exit.thread317_crit_edge: ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_frag_must_loop.exit.thread317

skb_frag_must_loop.exit.thread:                   ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #22
  %sub60313 = sub nuw nsw i32 4096, %and
  %23 = tail call i32 @llvm.umin.i32(i32 %15, i32 %sub60313)
  br label %26

skb_frag_must_loop.exit:                          ; preds = %if.then42
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %24 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp2.i.i = icmp eq i32 %24, 2
  %sub60 = sub nuw nsw i32 4096, %and
  %25 = tail call i32 @llvm.umin.i32(i32 %15, i32 %sub60)
  br i1 %cmp2.i.i, label %skb_frag_must_loop.exit._crit_edge, label %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread317_crit_edge

skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread317_crit_edge: ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_frag_must_loop.exit.thread317

skb_frag_must_loop.exit._crit_edge:               ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %26

26:                                               ; preds = %skb_frag_must_loop.exit._crit_edge, %skb_frag_must_loop.exit.thread
  %spec.select299.sub60316 = phi i32 [ %23, %skb_frag_must_loop.exit.thread ], [ %25, %skb_frag_must_loop.exit._crit_edge ]
  br label %skb_frag_must_loop.exit.thread317

skb_frag_must_loop.exit.thread317:                ; preds = %26, %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread317_crit_edge, %if.then42.skb_frag_must_loop.exit.thread317_crit_edge
  %27 = phi i32 [ %spec.select299.sub60316, %26 ], [ %15, %skb_frag_must_loop.exit.skb_frag_must_loop.exit.thread317_crit_edge ], [ %15, %if.then42.skb_frag_must_loop.exit.thread317_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp69354.not = icmp eq i32 %15, 0
  br i1 %cmp69354.not, label %skb_frag_must_loop.exit.thread317.for.end_crit_edge, label %for.body71.preheader

skb_frag_must_loop.exit.thread317.for.end_crit_edge: ; preds = %skb_frag_must_loop.exit.thread317
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.preheader:                             ; preds = %skb_frag_must_loop.exit.thread317
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %28 = load i32, ptr @pgprot_kernel, align 4
  %or.i.peel = or i32 %28, 512
  %29 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i.peel = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i.peel to ptr
  %preempt_count.i.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i.peel, align 4
  %add.i.i.i.peel = add i32 %32, 1
  store volatile i32 %add.i.i.i.peel, ptr %preempt_count.i.i.i.i.peel, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %33 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i.peel = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i1.i.i.peel to ptr
  %task.i.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i.i.i.i.peel, align 8
  %pagefault_disabled.i.i.i.i.peel = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 213
  %37 = ptrtoint ptr %pagefault_disabled.i.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %pagefault_disabled.i.i.i.i.peel, align 8
  %inc.i.i.i.i.peel = add i32 %38, 1
  store i32 %inc.i.i.i.i.peel, ptr %pagefault_disabled.i.i.i.i.peel, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i.peel = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr54, i32 noundef %or.i.peel) #20
  %add.ptr73.peel = getelementptr i8, ptr %call.i.i.peel, i32 %and
  %call75.peel = tail call i32 @csum_partial_copy_nocheck(ptr noundef %add.ptr73.peel, ptr noundef %to.addr.1371, i32 noundef %27) #20
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i.peel) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %39 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.peel = and i32 %39, -16384
  %40 = inttoptr i32 %and.i.i.i1.i.peel to ptr
  %task.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %task.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %task.i.i.i.peel, align 8
  %pagefault_disabled.i.i.i.peel = getelementptr inbounds %struct.task_struct, ptr %42, i32 0, i32 213
  %43 = ptrtoint ptr %pagefault_disabled.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %pagefault_disabled.i.i.i.peel, align 8
  %dec.i.i.i.peel = add i32 %44, -1
  store i32 %dec.i.i.i.peel, ptr %pagefault_disabled.i.i.i.peel, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %45 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.peel = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i.i.i.peel to ptr
  %preempt_count.i.i.i.peel = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %preempt_count.i.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %preempt_count.i.i.i.peel, align 4
  %sub.i.i.peel = add i32 %48, -1
  store volatile i32 %sub.i.i.peel, ptr %preempt_count.i.i.i.peel, align 4
  %and.i.i.peel = and i32 %pos.1368, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.peel)
  %tobool.not.i.i.peel = icmp eq i32 %and.i.i.peel, 0
  %or.i.i.i.peel = tail call i32 @llvm.fshl.i32(i32 %call75.peel, i32 %call75.peel, i32 24) #20
  %retval.0.i.i.peel = select i1 %tobool.not.i.i.peel, i32 %call75.peel, i32 %or.i.i.i.peel
  %add.i.i.peel = add i32 %retval.0.i.i.peel, %csum.1369
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.peel, i32 %retval.0.i.i.peel)
  %cmp.i.i.peel = icmp ult i32 %add.i.i.peel, %retval.0.i.i.peel
  %conv.i.i.peel = zext i1 %cmp.i.i.peel to i32
  %add1.i.i.peel = add i32 %add.i.i.peel, %conv.i.i.peel
  %add83.peel = add i32 %27, %pos.1368
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %27)
  %cmp69.peel = icmp ugt i32 %15, %27
  br i1 %cmp69.peel, label %for.body71.peel.next, label %for.body71.preheader.for.end_crit_edge

for.body71.preheader.for.end_crit_edge:           ; preds = %for.body71.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.peel.next:                             ; preds = %for.body71.preheader
  %sub85.peel = sub i32 %15, %27
  %49 = tail call i32 @llvm.umin.i32(i32 %sub85.peel, i32 4096)
  br label %for.body71

for.body71:                                       ; preds = %for.body71.for.body71_crit_edge, %for.body71.peel.next
  %p.0360.pn = phi ptr [ %p.0360, %for.body71.for.body71_crit_edge ], [ %add.ptr54, %for.body71.peel.next ]
  %copied.0359 = phi i32 [ %add84, %for.body71.for.body71_crit_edge ], [ %27, %for.body71.peel.next ]
  %p_len.0358 = phi i32 [ %71, %for.body71.for.body71_crit_edge ], [ %49, %for.body71.peel.next ]
  %csum.2356 = phi i32 [ %add1.i.i, %for.body71.for.body71_crit_edge ], [ %add1.i.i.peel, %for.body71.peel.next ]
  %pos.2355 = phi i32 [ %add83, %for.body71.for.body71_crit_edge ], [ %add83.peel, %for.body71.peel.next ]
  %p.0360 = getelementptr %struct.page, ptr %p.0360.pn, i32 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %50 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %50, 512
  %51 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %54, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %55 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i = and i32 %55, -16384
  %56 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %58, i32 0, i32 213
  %59 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %60, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %p.0360, i32 noundef %or.i) #20
  %add.ptr74 = getelementptr i8, ptr %to.addr.1371, i32 %copied.0359
  %call75 = tail call i32 @csum_partial_copy_nocheck(ptr noundef %call.i.i, ptr noundef %add.ptr74, i32 noundef %p_len.0358) #20
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %61 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i = and i32 %61, -16384
  %62 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 2
  %63 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %64, i32 0, i32 213
  %65 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %66, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %67 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %67, -16384
  %68 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 1
  %69 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %70, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %and.i.i = and i32 %pos.2355, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %or.i.i.i = tail call i32 @llvm.fshl.i32(i32 %call75, i32 %call75, i32 24) #20
  %retval.0.i.i = select i1 %tobool.not.i.i, i32 %call75, i32 %or.i.i.i
  %add.i.i = add i32 %retval.0.i.i, %csum.2356
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %retval.0.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, %retval.0.i.i
  %conv.i.i = zext i1 %cmp.i.i to i32
  %add1.i.i = add i32 %add.i.i, %conv.i.i
  %add83 = add i32 %p_len.0358, %pos.2355
  %add84 = add i32 %copied.0359, %p_len.0358
  %sub85 = sub i32 %15, %add84
  %71 = tail call i32 @llvm.umin.i32(i32 %sub85, i32 4096)
  %cmp69 = icmp ugt i32 %15, %add84
  br i1 %cmp69, label %for.body71.for.body71_crit_edge, label %for.body71.for.end_crit_edge, !llvm.loop !429

for.body71.for.end_crit_edge:                     ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body71.for.body71_crit_edge:                  ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body71

for.end:                                          ; preds = %for.body71.for.end_crit_edge, %for.body71.preheader.for.end_crit_edge, %skb_frag_must_loop.exit.thread317.for.end_crit_edge
  %pos.2.lcssa = phi i32 [ %pos.1368, %skb_frag_must_loop.exit.thread317.for.end_crit_edge ], [ %add83.peel, %for.body71.preheader.for.end_crit_edge ], [ %add83, %for.body71.for.end_crit_edge ]
  %csum.2.lcssa = phi i32 [ %csum.1369, %skb_frag_must_loop.exit.thread317.for.end_crit_edge ], [ %add1.i.i.peel, %for.body71.preheader.for.end_crit_edge ], [ %add1.i.i, %for.body71.for.end_crit_edge ]
  %sub93 = sub i32 %len.addr.1370, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub93)
  %tobool94.not = icmp eq i32 %sub93, 0
  %add97 = add i32 %15, %offset.addr.1372
  %add.ptr98 = getelementptr i8, ptr %to.addr.1371, i32 %15
  br i1 %tobool94.not, label %for.end.cleanup196_crit_edge, label %for.end.for.inc109_crit_edge

for.end.for.inc109_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc109

for.end.cleanup196_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup196

for.inc109:                                       ; preds = %for.end.for.inc109_crit_edge, %if.end29.for.inc109_crit_edge
  %pos.3 = phi i32 [ %pos.2.lcssa, %for.end.for.inc109_crit_edge ], [ %pos.1368, %if.end29.for.inc109_crit_edge ]
  %csum.3 = phi i32 [ %csum.2.lcssa, %for.end.for.inc109_crit_edge ], [ %csum.1369, %if.end29.for.inc109_crit_edge ]
  %len.addr.2 = phi i32 [ %sub93, %for.end.for.inc109_crit_edge ], [ %len.addr.1370, %if.end29.for.inc109_crit_edge ]
  %to.addr.3 = phi ptr [ %add.ptr98, %for.end.for.inc109_crit_edge ], [ %to.addr.1371, %if.end29.for.inc109_crit_edge ]
  %offset.addr.3 = phi i32 [ %add97, %for.end.for.inc109_crit_edge ], [ %offset.addr.1372, %if.end29.for.inc109_crit_edge ]
  %inc = add nuw nsw i32 %i.0366, 1
  %72 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %75 to i32
  %cmp11 = icmp ult i32 %inc, %conv
  br i1 %cmp11, label %for.inc109.for.body_crit_edge, label %for.inc109.for.end110_crit_edge

for.inc109.for.end110_crit_edge:                  ; preds = %for.inc109
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end110

for.inc109.for.body_crit_edge:                    ; preds = %for.inc109
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end110:                                       ; preds = %for.inc109.for.end110_crit_edge, %if.end9.for.end110_crit_edge
  %start.0.lcssa = phi i32 [ %sub.i, %if.end9.for.end110_crit_edge ], [ %add38, %for.inc109.for.end110_crit_edge ]
  %pos.1.lcssa = phi i32 [ %pos.0, %if.end9.for.end110_crit_edge ], [ %pos.3, %for.inc109.for.end110_crit_edge ]
  %csum.1.lcssa = phi i32 [ %csum.0, %if.end9.for.end110_crit_edge ], [ %csum.3, %for.inc109.for.end110_crit_edge ]
  %len.addr.1.lcssa = phi i32 [ %len.addr.0, %if.end9.for.end110_crit_edge ], [ %len.addr.2, %for.inc109.for.end110_crit_edge ]
  %to.addr.1.lcssa = phi ptr [ %to.addr.0, %if.end9.for.end110_crit_edge ], [ %to.addr.3, %for.inc109.for.end110_crit_edge ]
  %offset.addr.1.lcssa = phi i32 [ %offset.addr.0, %if.end9.for.end110_crit_edge ], [ %offset.addr.3, %for.inc109.for.end110_crit_edge ]
  %.lcssa = phi ptr [ %8, %if.end9.for.end110_crit_edge ], [ %73, %for.inc109.for.end110_crit_edge ]
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 6
  %76 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %76)
  %frag_iter.0380 = load ptr, ptr %frag_list, align 8
  %tobool113.not381 = icmp eq ptr %frag_iter.0380, null
  br i1 %tobool113.not381, label %for.end110.do.body178_crit_edge, label %for.end110.for.body114_crit_edge

for.end110.for.body114_crit_edge:                 ; preds = %for.end110
  br label %for.body114

for.end110.do.body178_crit_edge:                  ; preds = %for.end110
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body178

for.body114:                                      ; preds = %cleanup172.for.body114_crit_edge, %for.end110.for.body114_crit_edge
  %frag_iter.0388 = phi ptr [ %frag_iter.0, %cleanup172.for.body114_crit_edge ], [ %frag_iter.0380, %for.end110.for.body114_crit_edge ]
  %offset.addr.5387 = phi i32 [ %offset.addr.7, %cleanup172.for.body114_crit_edge ], [ %offset.addr.1.lcssa, %for.end110.for.body114_crit_edge ]
  %to.addr.5386 = phi ptr [ %to.addr.7, %cleanup172.for.body114_crit_edge ], [ %to.addr.1.lcssa, %for.end110.for.body114_crit_edge ]
  %len.addr.4385 = phi i32 [ %len.addr.6, %cleanup172.for.body114_crit_edge ], [ %len.addr.1.lcssa, %for.end110.for.body114_crit_edge ]
  %csum.5384 = phi i32 [ %csum.7, %cleanup172.for.body114_crit_edge ], [ %csum.1.lcssa, %for.end110.for.body114_crit_edge ]
  %pos.5383 = phi i32 [ %pos.7, %cleanup172.for.body114_crit_edge ], [ %pos.1.lcssa, %for.end110.for.body114_crit_edge ]
  %start.2382 = phi i32 [ %add151, %cleanup172.for.body114_crit_edge ], [ %start.0.lcssa, %for.end110.for.body114_crit_edge ]
  %add118 = add i32 %offset.addr.5387, %len.addr.4385
  call void @__sanitizer_cov_trace_cmp4(i32 %start.2382, i32 %add118)
  %cmp119 = icmp sgt i32 %start.2382, %add118
  br i1 %cmp119, label %do.end136, label %for.body114.if.end142_crit_edge, !prof !373

for.body114.if.end142_crit_edge:                  ; preds = %for.body114
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end142

do.end136:                                        ; preds = %for.body114
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2981, i32 noundef 9, ptr noundef null) #20
  br label %if.end142

if.end142:                                        ; preds = %do.end136, %for.body114.if.end142_crit_edge
  %len150 = getelementptr inbounds %struct.sk_buff, ptr %frag_iter.0388, i32 0, i32 6
  %77 = ptrtoint ptr %len150 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %len150, align 4
  %add151 = add i32 %78, %start.2382
  %sub152 = sub i32 %add151, %offset.addr.5387
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub152)
  %cmp153 = icmp sgt i32 %sub152, 0
  br i1 %cmp153, label %if.then155, label %if.end142.cleanup172_crit_edge

if.end142.cleanup172_crit_edge:                   ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup172

if.then155:                                       ; preds = %if.end142
  %79 = tail call i32 @llvm.smin.i32(i32 %sub152, i32 %len.addr.4385)
  %sub160 = sub i32 %offset.addr.5387, %start.2382
  %call161 = tail call i32 @skb_copy_and_csum_bits(ptr noundef nonnull %frag_iter.0388, i32 noundef %sub160, ptr noundef %to.addr.5386, i32 noundef %79)
  %and.i.i301 = and i32 %pos.5383, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i301)
  %tobool.not.i.i302 = icmp eq i32 %and.i.i301, 0
  %or.i.i.i303 = tail call i32 @llvm.fshl.i32(i32 %call161, i32 %call161, i32 24) #20
  %retval.0.i.i304 = select i1 %tobool.not.i.i302, i32 %call161, i32 %or.i.i.i303
  %add.i.i305 = add i32 %retval.0.i.i304, %csum.5384
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i305, i32 %retval.0.i.i304)
  %cmp.i.i306 = icmp ult i32 %add.i.i305, %retval.0.i.i304
  %conv.i.i307 = zext i1 %cmp.i.i306 to i32
  %add1.i.i308 = add i32 %add.i.i305, %conv.i.i307
  %sub163 = sub i32 %len.addr.4385, %79
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub163)
  %cmp164 = icmp eq i32 %sub163, 0
  br i1 %cmp164, label %if.then155.cleanup196_crit_edge, label %if.end167

if.then155.cleanup196_crit_edge:                  ; preds = %if.then155
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup196

if.end167:                                        ; preds = %if.then155
  call void @__sanitizer_cov_trace_pc() #22
  %add168 = add i32 %79, %offset.addr.5387
  %add.ptr169 = getelementptr i8, ptr %to.addr.5386, i32 %79
  %add170 = add i32 %79, %pos.5383
  br label %cleanup172

cleanup172:                                       ; preds = %if.end167, %if.end142.cleanup172_crit_edge
  %pos.7 = phi i32 [ %add170, %if.end167 ], [ %pos.5383, %if.end142.cleanup172_crit_edge ]
  %csum.7 = phi i32 [ %add1.i.i308, %if.end167 ], [ %csum.5384, %if.end142.cleanup172_crit_edge ]
  %len.addr.6 = phi i32 [ %sub163, %if.end167 ], [ %len.addr.4385, %if.end142.cleanup172_crit_edge ]
  %to.addr.7 = phi ptr [ %add.ptr169, %if.end167 ], [ %to.addr.5386, %if.end142.cleanup172_crit_edge ]
  %offset.addr.7 = phi i32 [ %add168, %if.end167 ], [ %offset.addr.5387, %if.end142.cleanup172_crit_edge ]
  %80 = ptrtoint ptr %frag_iter.0388 to i32
  call void @__asan_load4_noabort(i32 %80)
  %frag_iter.0 = load ptr, ptr %frag_iter.0388, align 8
  %tobool113.not = icmp eq ptr %frag_iter.0, null
  br i1 %tobool113.not, label %cleanup172.do.body178_crit_edge, label %cleanup172.for.body114_crit_edge

cleanup172.for.body114_crit_edge:                 ; preds = %cleanup172
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body114

cleanup172.do.body178_crit_edge:                  ; preds = %cleanup172
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body178

do.body178:                                       ; preds = %cleanup172.do.body178_crit_edge, %for.end110.do.body178_crit_edge
  %csum.5.lcssa = phi i32 [ %csum.1.lcssa, %for.end110.do.body178_crit_edge ], [ %csum.7, %cleanup172.do.body178_crit_edge ]
  %len.addr.4.lcssa = phi i32 [ %len.addr.1.lcssa, %for.end110.do.body178_crit_edge ], [ %len.addr.6, %cleanup172.do.body178_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.4.lcssa)
  %tobool179.not = icmp eq i32 %len.addr.4.lcssa, 0
  br i1 %tobool179.not, label %do.body178.cleanup196_crit_edge, label %do.body187, !prof !374

do.body178.cleanup196_crit_edge:                  ; preds = %do.body178
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup196

do.body187:                                       ; preds = %do.body178
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2999, 0\0A.popsection", ""() #20, !srcloc !430
  unreachable

cleanup196:                                       ; preds = %do.body178.cleanup196_crit_edge, %if.then155.cleanup196_crit_edge, %for.end.cleanup196_crit_edge, %if.then.cleanup196_crit_edge
  %retval.6 = phi i32 [ %call3, %if.then.cleanup196_crit_edge ], [ %csum.5.lcssa, %do.body178.cleanup196_crit_edge ], [ %add1.i.i308, %if.then155.cleanup196_crit_edge ], [ %csum.2.lcssa, %for.end.cleanup196_crit_edge ]
  ret i32 %retval.6
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @csum_partial_copy_nocheck(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @__skb_checksum_complete_head(ptr noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  %ops.i = alloca %struct.skb_checksum_ops, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ops.i) #20
  %3 = load i64, ptr @__const.skb_checksum.ops, align 8
  %4 = ptrtoint ptr %ops.i to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %ops.i, align 8
  %call.i = call i32 @__skb_checksum(ptr noundef %skb, i32 noundef 0, i32 noundef %len, i32 noundef %2, ptr noundef nonnull %ops.i) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ops.i) #20
  %5 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %call.i) #24, !srcloc !431
  %neg.i = xor i32 %5, -1
  %shr.i = lshr i32 %neg.i, 16
  %conv.i = trunc i32 %shr.i to i16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv.i)
  %tobool.not = icmp eq i16 %conv.i, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end18_crit_edge, !prof !374

entry.if.end18_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

if.then:                                          ; preds = %entry
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %6 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %6)
  %bf.load = load i16, ptr %ip_summed, align 8
  %7 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %7)
  %cmp = icmp eq i16 %7, 1024
  br i1 %cmp, label %land.lhs.true, label %if.then.if.end18_crit_edge, !prof !373

if.then.if.end18_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

land.lhs.true:                                    ; preds = %if.then
  %csum_complete_sw = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %8 = ptrtoint ptr %csum_complete_sw to i32
  call void @__asan_loadN_noabort(i32 %8, i32 4)
  %bf.load12 = load i32, ptr %csum_complete_sw, align 2
  %9 = and i32 %bf.load12, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool16.not = icmp eq i32 %9, 0
  br i1 %tobool16.not, label %if.then17, label %land.lhs.true.if.end18_crit_edge

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

if.then17:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %10 = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 2
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 8
  tail call void @netdev_rx_csum_fault(ptr noundef %12, ptr noundef %skb) #20
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %land.lhs.true.if.end18_crit_edge, %if.then.if.end18_crit_edge, %entry.if.end18_crit_edge
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %13 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp.i.not = icmp eq i32 %14, 1
  br i1 %cmp.i.not, label %if.then21, label %if.end18.if.end28_crit_edge

if.end18.if.end28_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.then21:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #22
  %csum_valid = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %15 = zext i1 %tobool.not to i16
  %16 = ptrtoint ptr %csum_valid to i32
  call void @__asan_load2_noabort(i32 %16)
  %bf.load26 = load i16, ptr %csum_valid, align 8
  %bf.clear27 = and i16 %bf.load26, -2
  %bf.set = or i16 %bf.clear27, %15
  store i16 %bf.set, ptr %csum_valid, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then21, %if.end18.if.end28_crit_edge
  ret i16 %conv.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netdev_rx_csum_fault(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @__skb_checksum_complete(ptr noundef %skb) #0 align 64 {
entry:
  %ops.i = alloca %struct.skb_checksum_ops, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ops.i) #20
  %2 = load i64, ptr @__const.skb_checksum.ops, align 8
  %3 = ptrtoint ptr %ops.i to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %2, ptr %ops.i, align 8
  %call.i = call i32 @__skb_checksum(ptr noundef %skb, i32 noundef 0, i32 noundef %1, i32 noundef 0, ptr noundef nonnull %ops.i) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ops.i) #20
  %4 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 8
  %add.i = add i32 %6, %call.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %call.i)
  %cmp.i = icmp ult i32 %add.i, %call.i
  %conv.i = zext i1 %cmp.i to i32
  %add1.i = add i32 %add.i, %conv.i
  %7 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %add1.i) #24, !srcloc !431
  %neg.i = xor i32 %7, -1
  %shr.i = lshr i32 %neg.i, 16
  %conv.i53 = trunc i32 %shr.i to i16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv.i53)
  %tobool.not = icmp eq i16 %conv.i53, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end19_crit_edge, !prof !374

entry.if.end19_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

if.then:                                          ; preds = %entry
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %8 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load = load i16, ptr %ip_summed, align 8
  %9 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %9)
  %cmp = icmp eq i16 %9, 1024
  br i1 %cmp, label %land.lhs.true, label %if.then.if.end19_crit_edge, !prof !373

if.then.if.end19_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

land.lhs.true:                                    ; preds = %if.then
  %csum_complete_sw = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %10 = ptrtoint ptr %csum_complete_sw to i32
  call void @__asan_loadN_noabort(i32 %10, i32 4)
  %bf.load13 = load i32, ptr %csum_complete_sw, align 2
  %11 = and i32 %bf.load13, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool17.not = icmp eq i32 %11, 0
  br i1 %tobool17.not, label %if.then18, label %land.lhs.true.if.end19_crit_edge

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

if.then18:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %12 = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 2
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 8
  tail call void @netdev_rx_csum_fault(ptr noundef %14, ptr noundef %skb) #20
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %land.lhs.true.if.end19_crit_edge, %if.then.if.end19_crit_edge, %entry.if.end19_crit_edge
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %15 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp.i54.not = icmp eq i32 %16, 1
  br i1 %cmp.i54.not, label %if.then22, label %if.end19.if.end37_crit_edge

if.end19.if.end37_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end37

if.then22:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  %17 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %call.i, ptr %4, align 8
  %ip_summed23 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %18 = ptrtoint ptr %ip_summed23 to i32
  call void @__asan_load2_noabort(i32 %18)
  %bf.load24 = load i16, ptr %ip_summed23, align 8
  %csum_complete_sw26 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %19 = ptrtoint ptr %csum_complete_sw26 to i32
  call void @__asan_loadN_noabort(i32 %19, i32 4)
  %bf.load27 = load i32, ptr %csum_complete_sw26, align 2
  %bf.set29 = or i32 %bf.load27, 1073741824
  store i32 %bf.set29, ptr %csum_complete_sw26, align 2
  %20 = zext i1 %tobool.not to i16
  %bf.set = and i16 %bf.load24, -1538
  %bf.clear35 = or i16 %bf.set, %20
  %bf.set36 = or i16 %bf.clear35, 1024
  store i16 %bf.set36, ptr %ip_summed23, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.then22, %if.end19.if.end37_crit_edge
  ret i16 %conv.i53
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @skb_zerocopy_headlen(ptr nocapture noundef readonly %from) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 12
  %0 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %head_frag, align 2
  %1 = and i8 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.then_crit_edge, label %lor.lhs.false

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 6
  %2 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 7
  %4 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %3, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %sub.i)
  %cmp = icmp ult i32 %sub.i, 128
  br i1 %cmp, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false1

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 17
  %6 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %nr_frags, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %9)
  %cmp3 = icmp ugt i8 %9, 16
  br i1 %cmp3, label %lor.lhs.false1.if.then_crit_edge, label %lor.lhs.false1.if.end8_crit_edge

lor.lhs.false1.if.end8_crit_edge:                 ; preds = %lor.lhs.false1
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

lor.lhs.false1.if.then_crit_edge:                 ; preds = %lor.lhs.false1
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false1.if.then_crit_edge, %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %len.i20 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 6
  %10 = ptrtoint ptr %len.i20 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len.i20, align 4
  %data_len.i21 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 7
  %12 = ptrtoint ptr %data_len.i21 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data_len.i21, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %13)
  %tobool6.not = icmp eq i32 %11, %13
  %sub.i22 = select i1 %tobool6.not, i32 0, i32 %13
  %spec.select = sub i32 %11, %sub.i22
  br label %if.end8

if.end8:                                          ; preds = %if.then, %lor.lhs.false1.if.end8_crit_edge
  %hlen.0 = phi i32 [ 0, %lor.lhs.false1.if.end8_crit_edge ], [ %spec.select, %if.then ]
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 17
  %14 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %end.i.i, align 4
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %15, i32 0, i32 6
  %16 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %frag_list.i, align 8
  %cmp.i.not = icmp eq ptr %17, null
  br i1 %cmp.i.not, label %if.end8.if.end12_crit_edge, label %if.then10

if.end8.if.end12_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  %len11 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 6
  %18 = ptrtoint ptr %len11 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %len11, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end8.if.end12_crit_edge
  %hlen.1 = phi i32 [ %19, %if.then10 ], [ %hlen.0, %if.end8.if.end12_crit_edge ]
  ret i32 %hlen.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_zerocopy(ptr noundef %to, ptr noundef %from, i32 noundef %len, i32 noundef %hlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 12
  %0 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %head_frag, align 2
  %1 = and i8 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %hlen)
  %tobool1.not = icmp eq i32 %hlen, 0
  %spec.select = and i1 %tobool1.not, %tobool.not
  br i1 %spec.select, label %do.body5, label %do.end10, !prof !373

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3143, 0\0A.popsection", ""() #20, !srcloc !432
  unreachable

do.end10:                                         ; preds = %entry
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i, label %skb_tailroom.exit, label %skb_tailroom.exit.thread

skb_tailroom.exit:                                ; preds = %do.end10
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 17
  %4 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 16
  %6 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tail.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %5 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %7 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i, i32 %len)
  %cmp.not = icmp slt i32 %sub.ptr.sub.i, %len
  br i1 %cmp.not, label %if.end14, label %do.end8.i

skb_tailroom.exit.thread:                         ; preds = %do.end10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp.not192 = icmp sgt i32 %len, 0
  br i1 %cmp.not192, label %if.end14.thread, label %do.body3.i

do.body3.i:                                       ; preds = %skb_tailroom.exit.thread
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i:                                        ; preds = %skb_tailroom.exit
  %8 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tail.i, align 8
  %add.ptr.i = getelementptr i8, ptr %9, i32 %len
  store ptr %add.ptr.i, ptr %tail.i, align 8
  %len9.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 6
  %10 = ptrtoint ptr %len9.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len9.i, align 4
  %add.i = add i32 %11, %len
  store i32 %add.i, ptr %len9.i, align 4
  %12 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %end.i, align 4
  %cmp.i = icmp ugt ptr %add.ptr.i, %13
  br i1 %cmp.i, label %if.then17.i, label %skb_put.exit, !prof !373

if.then17.i:                                      ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %14 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef %to, i32 noundef %len, ptr noundef %14) #20
  unreachable

skb_put.exit:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %call13 = tail call i32 @skb_copy_bits(ptr noundef %from, i32 noundef 0, ptr noundef %9, i32 noundef %len)
  br label %cleanup83

if.end14:                                         ; preds = %skb_tailroom.exit
  br i1 %tobool1.not, label %if.end14.if.else_crit_edge, label %do.end8.i158

if.end14.if.else_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.end14.thread:                                  ; preds = %skb_tailroom.exit.thread
  br i1 %tobool1.not, label %if.end14.thread.if.else_crit_edge, label %do.body3.i152

if.end14.thread.if.else_crit_edge:                ; preds = %if.end14.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

do.body3.i152:                                    ; preds = %if.end14.thread
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i158:                                     ; preds = %if.end14
  %15 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tail.i, align 8
  %add.ptr.i153 = getelementptr i8, ptr %16, i32 %hlen
  store ptr %add.ptr.i153, ptr %tail.i, align 8
  %len9.i154 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 6
  %17 = ptrtoint ptr %len9.i154 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %len9.i154, align 4
  %add.i155 = add i32 %18, %hlen
  store i32 %add.i155, ptr %len9.i154, align 4
  %19 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %end.i, align 4
  %cmp.i157 = icmp ugt ptr %add.ptr.i153, %20
  br i1 %cmp.i157, label %if.then17.i159, label %skb_put.exit160, !prof !373

if.then17.i159:                                   ; preds = %do.end8.i158
  call void @__sanitizer_cov_trace_pc() #22
  %21 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef %to, i32 noundef %hlen, ptr noundef %21) #20
  unreachable

skb_put.exit160:                                  ; preds = %do.end8.i158
  %call18 = tail call i32 @skb_copy_bits(ptr noundef %from, i32 noundef 0, ptr noundef %16, i32 noundef %hlen)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end27, label %skb_put.exit160.cleanup83_crit_edge, !prof !374

skb_put.exit160.cleanup83_crit_edge:              ; preds = %skb_put.exit160
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup83

if.end27:                                         ; preds = %skb_put.exit160
  call void @__sanitizer_cov_trace_pc() #22
  %sub = sub i32 %len, %hlen
  br label %if.end36

if.else:                                          ; preds = %if.end14.thread.if.else_crit_edge, %if.end14.if.else_crit_edge
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 6
  %22 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 7
  %24 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %23, %25
  %26 = tail call i32 @llvm.smin.i32(i32 %sub.i, i32 %len)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool30.not = icmp eq i32 %26, 0
  br i1 %tobool30.not, label %if.else.if.end36_crit_edge, label %if.then31

if.else.if.end36_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

if.then31:                                        ; preds = %if.else
  %head = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 18
  %27 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %head, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %29 = load ptr, ptr @mem_map, align 4
  %30 = ptrtoint ptr %28 to i32
  %sub.i161 = add i32 %30, 1073741824
  %shr.i = lshr i32 %sub.i161, 12
  %31 = getelementptr %struct.page, ptr %29, i32 %shr.i, i32 1
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  %and.i.i = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %33, -1
  br label %virt_to_head_page.exit

if.end.i.i:                                       ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i162 = getelementptr %struct.page, ptr %29, i32 %shr.i
  %34 = ptrtoint ptr %add.ptr.i162 to i32
  br label %virt_to_head_page.exit

virt_to_head_page.exit:                           ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %34, %if.end.i.i ]
  %35 = inttoptr i32 %retval.0.i.i to ptr
  %data = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 19
  %36 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %data, align 4
  %call33 = tail call ptr @page_address(ptr noundef %35) #20
  %sub.ptr.lhs.cast = ptrtoint ptr %37 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %call33 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 17
  %38 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %end.i.i, align 4
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %39, i32 0, i32 12, i32 0
  %40 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %35, ptr %arrayidx.i, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %39, i32 0, i32 12, i32 0, i32 2
  %41 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %sub.ptr.sub, ptr %bv_offset.i, align 4
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %39, i32 0, i32 12, i32 0, i32 1
  %42 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %26, ptr %bv_len.i.i, align 4
  %43 = getelementptr inbounds %struct.page, ptr %35, i32 0, i32 1
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 4
  %and.i.i163 = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i163)
  %tobool.not.i.i164 = icmp eq i32 %and.i.i163, 0
  br i1 %tobool.not.i.i164, label %virt_to_head_page.exit._compound_head.exit.i_crit_edge, label %if.then.i.i166, !prof !374

virt_to_head_page.exit._compound_head.exit.i_crit_edge: ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %_compound_head.exit.i

if.then.i.i166:                                   ; preds = %virt_to_head_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i165 = add i32 %45, -1
  %.pre = inttoptr i32 %sub.i.i165 to ptr
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.then.i.i166, %virt_to_head_page.exit._compound_head.exit.i_crit_edge
  %.pre-phi = phi ptr [ %35, %virt_to_head_page.exit._compound_head.exit.i_crit_edge ], [ %.pre, %if.then.i.i166 ]
  %46 = getelementptr inbounds %struct.page, ptr %.pre-phi, i32 0, i32 1
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %46, align 4
  %49 = ptrtoint ptr %48 to i32
  %and.i8.i = and i32 %49, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i)
  %tobool.i.not.i169 = icmp eq i32 %and.i8.i, 0
  br i1 %tobool.i.not.i169, label %_compound_head.exit.i.__skb_fill_page_desc.exit_crit_edge, label %if.then.i

_compound_head.exit.i.__skb_fill_page_desc.exit_crit_edge: ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_fill_page_desc.exit

if.then.i:                                        ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %pfmemalloc.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 12
  %50 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %bf.load.i = load i8, ptr %pfmemalloc.i, align 2
  %bf.set.i = or i8 %bf.load.i, 2
  store i8 %bf.set.i, ptr %pfmemalloc.i, align 2
  br label %__skb_fill_page_desc.exit

__skb_fill_page_desc.exit:                        ; preds = %if.then.i, %_compound_head.exit.i.__skb_fill_page_desc.exit_crit_edge
  %51 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %43, align 4
  %and.i.i170 = and i32 %52, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i170)
  %tobool.not.i.i171 = icmp eq i32 %and.i.i170, 0
  br i1 %tobool.not.i.i171, label %__skb_fill_page_desc.exit._compound_head.exit.i176_crit_edge, label %if.then.i.i173, !prof !374

__skb_fill_page_desc.exit._compound_head.exit.i176_crit_edge: ; preds = %__skb_fill_page_desc.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %_compound_head.exit.i176

if.then.i.i173:                                   ; preds = %__skb_fill_page_desc.exit
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i172 = add i32 %52, -1
  %.pre213 = inttoptr i32 %sub.i.i172 to ptr
  br label %_compound_head.exit.i176

_compound_head.exit.i176:                         ; preds = %if.then.i.i173, %__skb_fill_page_desc.exit._compound_head.exit.i176_crit_edge
  %.pre-phi214 = phi ptr [ %35, %__skb_fill_page_desc.exit._compound_head.exit.i176_crit_edge ], [ %.pre213, %if.then.i.i173 ]
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %.pre-phi214, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  %53 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %54, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !373

if.then.i1.i:                                     ; preds = %_compound_head.exit.i176
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @dump_page(ptr noundef %.pre-phi214, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i176
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #20
  %55 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@skb_zerocopy, %if.then.i.i.i.i)) #20
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !376

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %.pre-phi214, i32 noundef 1) #20
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %sub34 = sub i32 %len, %26
  br label %if.end36

if.end36:                                         ; preds = %get_page.exit, %if.else.if.end36_crit_edge, %if.end27
  %j.0 = phi i32 [ 0, %if.end27 ], [ 1, %get_page.exit ], [ 0, %if.else.if.end36_crit_edge ]
  %plen.0 = phi i32 [ 0, %if.end27 ], [ %26, %get_page.exit ], [ 0, %if.else.if.end36_crit_edge ]
  %len.addr.0 = phi i32 [ %sub, %if.end27 ], [ %sub34, %get_page.exit ], [ %len, %if.else.if.end36_crit_edge ]
  %add = add i32 %len.addr.0, %plen.0
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 20
  %56 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %truesize, align 8
  %add37 = add i32 %57, %add
  store i32 %add37, ptr %truesize, align 8
  %len39 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 6
  %58 = ptrtoint ptr %len39 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %len39, align 4
  %add40 = add i32 %59, %add
  store i32 %add40, ptr %len39, align 4
  %60 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %data_len.i.i, align 8
  %add42 = add i32 %61, %add
  store i32 %add42, ptr %data_len.i.i, align 8
  %tobool.not.i.i177 = icmp eq ptr %from, null
  br i1 %tobool.not.i.i177, label %if.end36.if.end52_crit_edge, label %land.rhs.i.i

if.end36.if.end52_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

land.rhs.i.i:                                     ; preds = %if.end36
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 17
  %62 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %end.i.i.i, align 4
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %63, align 8
  %66 = and i8 %65, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %66)
  %tobool1.not.i.i = icmp eq i8 %66, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.if.end52_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.if.end52_crit_edge:                  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %63, i32 0, i32 11
  %67 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i = icmp eq ptr %68, null
  br i1 %tobool.not.i, label %skb_zcopy.exit.i.if.end52_crit_edge, label %if.end.i, !prof !374

skb_zcopy.exit.i.if.end52_crit_edge:              ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

if.end.i:                                         ; preds = %skb_zcopy.exit.i
  %69 = ptrtoint ptr %68 to i32
  %and.i.i178 = and i32 %69, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i178)
  %tobool.i.not.i179 = icmp eq i32 %and.i.i178, 0
  br i1 %tobool.i.not.i179, label %land.lhs.true.i, label %if.end.i.skb_orphan_frags.exit_crit_edge

if.end.i.skb_orphan_frags.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i:                                  ; preds = %if.end.i
  %70 = ptrtoint ptr %68 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %68, align 4
  %cmp.i180 = icmp eq ptr %71, @msg_zerocopy_callback
  br i1 %cmp.i180, label %land.lhs.true.i.if.end52_crit_edge, label %land.lhs.true.i.skb_orphan_frags.exit_crit_edge

land.lhs.true.i.skb_orphan_frags.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i.if.end52_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

skb_orphan_frags.exit:                            ; preds = %land.lhs.true.i.skb_orphan_frags.exit_crit_edge, %if.end.i.skb_orphan_frags.exit_crit_edge
  %call8.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %from, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool44.not = icmp eq i32 %call8.i, 0
  br i1 %tobool44.not, label %skb_orphan_frags.exit.if.end52_crit_edge, label %if.then51, !prof !374

skb_orphan_frags.exit.if.end52_crit_edge:         ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

if.then51:                                        ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @skb_tx_error(ptr noundef nonnull %from)
  br label %cleanup83

if.end52:                                         ; preds = %skb_orphan_frags.exit.if.end52_crit_edge, %land.lhs.true.i.if.end52_crit_edge, %skb_zcopy.exit.i.if.end52_crit_edge, %land.rhs.i.i.if.end52_crit_edge, %if.end36.if.end52_crit_edge
  %call53 = tail call fastcc i32 @skb_zerocopy_clone(ptr noundef %to, ptr noundef %from, i32 noundef 2592)
  %end.i181 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 17
  %72 = ptrtoint ptr %end.i181 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %end.i181, align 4
  %nr_frags204 = getelementptr inbounds %struct.skb_shared_info, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %nr_frags204 to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load i8, ptr %nr_frags204, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %75)
  %cmp55206 = icmp eq i8 %75, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.0)
  %tobool57.not207 = icmp eq i32 %len.addr.0, 0
  %or.cond208 = select i1 %cmp55206, i1 true, i1 %tobool57.not207
  br i1 %or.cond208, label %if.end52.for.end_crit_edge, label %if.end59.lr.ph

if.end52.for.end_crit_edge:                       ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

if.end59.lr.ph:                                   ; preds = %if.end52
  %end.i182 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 17
  br label %if.end59

if.end59:                                         ; preds = %for.inc.if.end59_crit_edge, %if.end59.lr.ph
  %76 = phi ptr [ %73, %if.end59.lr.ph ], [ %99, %for.inc.if.end59_crit_edge ]
  %len.addr.1211 = phi i32 [ %len.addr.0, %if.end59.lr.ph ], [ %sub78, %for.inc.if.end59_crit_edge ]
  %j.1210 = phi i32 [ %j.0, %if.end59.lr.ph ], [ %inc, %for.inc.if.end59_crit_edge ]
  %i.0209 = phi i32 [ 0, %if.end59.lr.ph ], [ %inc79, %for.inc.if.end59_crit_edge ]
  %77 = ptrtoint ptr %end.i182 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %end.i182, align 4
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %78, i32 0, i32 12, i32 %j.1210
  %arrayidx63 = getelementptr %struct.skb_shared_info, ptr %76, i32 0, i32 12, i32 %i.0209
  %79 = call ptr @memcpy(ptr %arrayidx, ptr %arrayidx63, i32 12)
  %80 = load ptr, ptr %end.i182, align 4
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %80, i32 0, i32 12, i32 %j.1210, i32 1
  %81 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %bv_len.i, align 4
  %83 = tail call i32 @llvm.smin.i32(i32 %82, i32 %len.addr.1211)
  %84 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %83, ptr %bv_len.i, align 4
  %sub78 = sub i32 %len.addr.1211, %83
  %85 = ptrtoint ptr %end.i182 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %end.i182, align 4
  %arrayidx.i188 = getelementptr %struct.skb_shared_info, ptr %86, i32 0, i32 12, i32 %j.1210
  %87 = ptrtoint ptr %arrayidx.i188 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %arrayidx.i188, align 4
  %89 = getelementptr inbounds %struct.page, ptr %88, i32 0, i32 1
  %90 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %89, align 4
  %and.i.i.i.i = and i32 %91, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i189, !prof !374

if.then.i.i.i.i189:                               ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i.i = add i32 %91, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #22
  %92 = ptrtoint ptr %88 to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i189
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i189 ], [ %92, %if.end.i.i.i.i ]
  %93 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %93, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  %94 = ptrtoint ptr %_refcount.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %_refcount.i.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %95, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, 128
  br i1 %cmp.i.i.i.i, label %if.then.i1.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i1.i.i.i:                                 ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %96 = inttoptr i32 %retval.0.i.i.i.i to ptr
  tail call void @dump_page(ptr noundef %96, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i.i.i
  %call.i.i.i.i9.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %97 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i.i, ptr %_refcount.i.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@skb_zerocopy, %if.then.i.i.i.i.i.i)) #20
          to label %for.inc [label %if.then.i.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i.i:                              ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %93, i32 noundef 1) #20
  br label %for.inc

for.inc:                                          ; preds = %if.then.i.i.i.i.i.i, %do.end5.i.i.i.i
  %inc = add nuw nsw i32 %j.1210, 1
  %inc79 = add nuw nsw i32 %i.0209, 1
  %98 = ptrtoint ptr %end.i181 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %end.i181, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %99, i32 0, i32 2
  %100 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %100)
  %101 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %101 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %inc79, i32 %conv)
  %cmp55 = icmp uge i32 %inc79, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub78)
  %tobool57.not = icmp eq i32 %sub78, 0
  %or.cond = select i1 %cmp55, i1 true, i1 %tobool57.not
  br i1 %or.cond, label %for.inc.for.end_crit_edge, label %for.inc.if.end59_crit_edge

for.inc.if.end59_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end59

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end52.for.end_crit_edge
  %j.1.lcssa = phi i32 [ %j.0, %if.end52.for.end_crit_edge ], [ %inc, %for.inc.for.end_crit_edge ]
  %conv80 = trunc i32 %j.1.lcssa to i8
  %end.i190 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 17
  %102 = ptrtoint ptr %end.i190 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %end.i190, align 4
  %nr_frags82 = getelementptr inbounds %struct.skb_shared_info, ptr %103, i32 0, i32 2
  %104 = ptrtoint ptr %nr_frags82 to i32
  call void @__asan_store1_noabort(i32 %104)
  store i8 %conv80, ptr %nr_frags82, align 2
  br label %cleanup83

cleanup83:                                        ; preds = %for.end, %if.then51, %skb_put.exit160.cleanup83_crit_edge, %skb_put.exit
  %retval.0 = phi i32 [ %call13, %skb_put.exit ], [ -12, %if.then51 ], [ 0, %for.end ], [ %call18, %skb_put.exit160.cleanup83_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_copy_and_csum_dev(ptr nocapture noundef readonly %skb, ptr noundef %to) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %ip_summed, align 8
  %1 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %1)
  %cmp = icmp eq i16 %1, 1536
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %2, align 8
  %conv.i = zext i16 %4 to i32
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %7 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %6 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %8 to i32
  %sub.ptr.sub.i.neg.i = sub i32 %conv.i, %sub.ptr.lhs.cast.i.i
  %sub.i = add i32 %sub.ptr.sub.i.neg.i, %sub.ptr.rhs.cast.i.i
  br label %do.body

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %9 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %11 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %data_len.i, align 8
  %sub.i51 = sub i32 %10, %12
  br label %do.body

do.body:                                          ; preds = %if.else, %if.then
  %csstart.0 = phi i32 [ %sub.i, %if.then ], [ %sub.i51, %if.else ]
  %len.i52 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %13 = ptrtoint ptr %len.i52 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %len.i52, align 4
  %data_len.i53 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %15 = ptrtoint ptr %data_len.i53 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %data_len.i53, align 8
  %sub.i54 = sub i32 %14, %16
  call void @__sanitizer_cov_trace_cmp4(i32 %csstart.0, i32 %sub.i54)
  %cmp4 = icmp ugt i32 %csstart.0, %sub.i54
  br i1 %cmp4, label %do.body8, label %do.end14, !prof !373

do.body8:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3205, 0\0A.popsection", ""() #20, !srcloc !433
  unreachable

do.end14:                                         ; preds = %do.body
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %17 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i, align 4
  %19 = call ptr @memcpy(ptr %to, ptr %18, i32 %csstart.0)
  %20 = ptrtoint ptr %len.i52 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %len.i52, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %csstart.0)
  %cmp15.not = icmp eq i32 %21, %csstart.0
  br i1 %cmp15.not, label %do.end14.if.end20_crit_edge, label %if.then17

do.end14.if.end20_crit_edge:                      ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20

if.then17:                                        ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr = getelementptr i8, ptr %to, i32 %csstart.0
  %sub = sub i32 %21, %csstart.0
  %call19 = tail call i32 @skb_copy_and_csum_bits(ptr noundef %skb, i32 noundef %csstart.0, ptr noundef %add.ptr, i32 noundef %sub)
  br label %if.end20

if.end20:                                         ; preds = %if.then17, %do.end14.if.end20_crit_edge
  %csum.0 = phi i32 [ %call19, %if.then17 ], [ 0, %do.end14.if.end20_crit_edge ]
  %22 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %22)
  %bf.load22 = load i16, ptr %ip_summed, align 8
  %23 = and i16 %bf.load22, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %23)
  %cmp27 = icmp eq i16 %23, 1536
  br i1 %cmp27, label %if.then29, label %if.end20.if.end33_crit_edge

if.end20.if.end33_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end33

if.then29:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #22
  %24 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %csum_offset = getelementptr inbounds %struct.anon.36, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %csum_offset to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %csum_offset, align 2
  %conv30 = zext i16 %26 to i32
  %add = add i32 %csstart.0, %conv30
  %27 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %csum.0) #24, !srcloc !431
  %neg.i = xor i32 %27, -1
  %shr.i = lshr i32 %neg.i, 16
  %conv.i55 = trunc i32 %shr.i to i16
  %add.ptr32 = getelementptr i8, ptr %to, i32 %add
  %28 = ptrtoint ptr %add.ptr32 to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %conv.i55, ptr %add.ptr32, align 2
  br label %if.end33

if.end33:                                         ; preds = %if.then29, %if.end20.if.end33_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_dequeue(ptr noundef %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 2
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %0 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list, align 4
  %cmp.i.i = icmp eq ptr %1, %list
  %spec.store.select.i.i = select i1 %cmp.i.i, ptr null, ptr %1
  %tobool.not.i = icmp eq ptr %spec.store.select.i.i, null
  br i1 %tobool.not.i, label %entry.__skb_dequeue.exit_crit_edge, label %if.then.i

entry.__skb_dequeue.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_dequeue.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %qlen.i.i = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 1
  %2 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %qlen.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %qlen.i.i, align 4
  %4 = ptrtoint ptr %spec.store.select.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec.store.select.i.i, align 8
  %prev9.i.i = getelementptr inbounds %struct.anon.27, ptr %spec.store.select.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %prev9.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev9.i.i, align 4
  store ptr null, ptr %prev9.i.i, align 4
  store ptr null, ptr %spec.store.select.i.i, align 8
  %prev17.i.i = getelementptr inbounds %struct.anon.27, ptr %5, i32 0, i32 1
  %8 = ptrtoint ptr %prev17.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %7, ptr %prev17.i.i, align 4
  %9 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %5, ptr %7, align 8
  br label %__skb_dequeue.exit

__skb_dequeue.exit:                               ; preds = %if.then.i, %entry.__skb_dequeue.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #20
  ret ptr %spec.store.select.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_dequeue_tail(ptr noundef %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 2
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %prev.i.i = getelementptr inbounds %struct.anon.71, ptr %list, i32 0, i32 1
  %0 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %prev.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, %list
  %spec.store.select.i.i = select i1 %cmp.i.i, ptr null, ptr %1
  %tobool.not.i = icmp eq ptr %spec.store.select.i.i, null
  br i1 %tobool.not.i, label %entry.__skb_dequeue_tail.exit_crit_edge, label %if.then.i

entry.__skb_dequeue_tail.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_dequeue_tail.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %qlen.i.i = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 1
  %2 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %qlen.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %qlen.i.i, align 4
  %4 = ptrtoint ptr %spec.store.select.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec.store.select.i.i, align 8
  %prev9.i.i = getelementptr inbounds %struct.anon.27, ptr %spec.store.select.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %prev9.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev9.i.i, align 4
  store ptr null, ptr %prev9.i.i, align 4
  store ptr null, ptr %spec.store.select.i.i, align 8
  %prev17.i.i = getelementptr inbounds %struct.anon.27, ptr %5, i32 0, i32 1
  %8 = ptrtoint ptr %prev17.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %7, ptr %prev17.i.i, align 4
  %9 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %5, ptr %7, align 8
  br label %__skb_dequeue_tail.exit

__skb_dequeue_tail.exit:                          ; preds = %if.then.i, %entry.__skb_dequeue_tail.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #20
  ret ptr %spec.store.select.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_queue_purge(ptr noundef %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %lock.i = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 2
  %call2.i2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #20
  %0 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list, align 4
  %cmp.i.i.i3 = icmp eq ptr %1, %list
  %tobool.not.i.i14 = icmp eq ptr %1, null
  %tobool.not.i.i5 = or i1 %cmp.i.i.i3, %tobool.not.i.i14
  br i1 %tobool.not.i.i5, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %qlen.i.i.i = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 1
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.lr.ph
  %2 = phi ptr [ %1, %while.body.lr.ph ], [ %12, %while.body.while.body_crit_edge ]
  %call2.i6 = phi i32 [ %call2.i2, %while.body.lr.ph ], [ %call2.i, %while.body.while.body_crit_edge ]
  %3 = ptrtoint ptr %qlen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %qlen.i.i.i, align 4
  %sub.i.i.i = add i32 %4, -1
  store volatile i32 %sub.i.i.i, ptr %qlen.i.i.i, align 4
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %2, align 8
  %prev9.i.i.i = getelementptr inbounds %struct.anon.27, ptr %2, i32 0, i32 1
  %7 = ptrtoint ptr %prev9.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev9.i.i.i, align 4
  store ptr null, ptr %prev9.i.i.i, align 4
  store ptr null, ptr %2, align 8
  %prev17.i.i.i = getelementptr inbounds %struct.anon.27, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %prev17.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %8, ptr %prev17.i.i.i, align 4
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %6, ptr %8, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call2.i6) #20
  tail call fastcc void @kfree_skb(ptr noundef nonnull %2)
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #20
  %11 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %list, align 4
  %cmp.i.i.i = icmp eq ptr %12, %list
  %tobool.not.i.i1 = icmp eq ptr %12, null
  %tobool.not.i.i = or i1 %cmp.i.i.i, %tobool.not.i.i1
  br i1 %tobool.not.i.i, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  %call2.i.lcssa = phi i32 [ %call2.i2, %entry.while.end_crit_edge ], [ %call2.i, %while.body.while.end_crit_edge ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call2.i.lcssa) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_rbtree_purge(ptr noundef %root) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @rb_first(ptr noundef %root) #20
  %tobool.not8 = icmp eq ptr %call, null
  br i1 %tobool.not8, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  %p.010 = phi ptr [ %call1, %while.body.while.body_crit_edge ], [ %call, %entry.while.body_crit_edge ]
  %sum.09 = phi i32 [ %add, %while.body.while.body_crit_edge ], [ 0, %entry.while.body_crit_edge ]
  %call1 = tail call ptr @rb_next(ptr noundef nonnull %p.010) #20
  tail call void @rb_erase(ptr noundef nonnull %p.010, ptr noundef %root) #20
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %p.010, i32 0, i32 20
  %0 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %truesize, align 8
  %add = add i32 %1, %sum.09
  tail call fastcc void @kfree_skb(ptr noundef nonnull %p.010)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  %sum.0.lcssa = phi i32 [ 0, %entry.while.end_crit_edge ], [ %add, %while.body.while.end_crit_edge ]
  ret i32 %sum.0.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_first(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_next(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_erase(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_queue_head(ptr noundef %list, ptr noundef %newsk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 2
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %0 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %list, align 4
  %2 = ptrtoint ptr %newsk to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %1, ptr %newsk, align 8
  %prev10.i.i.i = getelementptr inbounds %struct.anon.27, ptr %newsk, i32 0, i32 1
  %3 = ptrtoint ptr %prev10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %list, ptr %prev10.i.i.i, align 4
  %prev17.i.i.i = getelementptr inbounds %struct.sk_buff_list, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %prev17.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %newsk, ptr %prev17.i.i.i, align 4
  store volatile ptr %newsk, ptr %list, align 4
  %qlen.i.i.i = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 1
  %5 = ptrtoint ptr %qlen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %qlen.i.i.i, align 4
  %add.i.i.i = add i32 %6, 1
  store volatile i32 %add.i.i.i, ptr %qlen.i.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_queue_tail(ptr noundef %list, ptr noundef %newsk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 2
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %prev.i.i = getelementptr inbounds %struct.sk_buff_list, ptr %list, i32 0, i32 1
  %0 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i.i, align 4
  %2 = ptrtoint ptr %newsk to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %list, ptr %newsk, align 8
  %prev10.i.i.i = getelementptr inbounds %struct.anon.27, ptr %newsk, i32 0, i32 1
  %3 = ptrtoint ptr %prev10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %1, ptr %prev10.i.i.i, align 4
  store volatile ptr %newsk, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %newsk, ptr %1, align 4
  %qlen.i.i.i = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 1
  %5 = ptrtoint ptr %qlen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %qlen.i.i.i, align 4
  %add.i.i.i = add i32 %6, 1
  store volatile i32 %add.i.i.i, ptr %qlen.i.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_unlink(ptr nocapture noundef %skb, ptr noundef %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 2
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %qlen.i = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 1
  %0 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %qlen.i, align 4
  %sub.i = add i32 %1, -1
  store volatile i32 %sub.i, ptr %qlen.i, align 4
  %2 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skb, align 8
  %prev9.i = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 1
  %4 = ptrtoint ptr %prev9.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev9.i, align 4
  store ptr null, ptr %prev9.i, align 4
  store ptr null, ptr %skb, align 8
  %prev17.i = getelementptr inbounds %struct.anon.27, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %prev17.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %5, ptr %prev17.i, align 4
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %3, ptr %5, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_append(ptr noundef %old, ptr noundef %newsk, ptr noundef %list) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 2
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %0 = ptrtoint ptr %old to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %old, align 4
  %2 = ptrtoint ptr %newsk to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %1, ptr %newsk, align 8
  %prev10.i.i = getelementptr inbounds %struct.anon.27, ptr %newsk, i32 0, i32 1
  %3 = ptrtoint ptr %prev10.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %old, ptr %prev10.i.i, align 4
  %prev17.i.i = getelementptr inbounds %struct.sk_buff_list, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %prev17.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %newsk, ptr %prev17.i.i, align 4
  store volatile ptr %newsk, ptr %old, align 4
  %qlen.i.i = getelementptr inbounds %struct.sk_buff_head, ptr %list, i32 0, i32 1
  %5 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %qlen.i.i, align 4
  %add.i.i = add i32 %6, 1
  store volatile i32 %add.i.i, ptr %qlen.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_split(ptr noundef %skb, ptr noundef %skb1, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %1, %3
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %4 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %5, align 8
  %8 = and i8 %7, 6
  %end.i20 = getelementptr inbounds %struct.sk_buff, ptr %skb1, i32 0, i32 17
  %9 = ptrtoint ptr %end.i20 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i20, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %10, align 8
  %or19 = or i8 %12, %8
  store i8 %or19, ptr %10, align 8
  %call6 = tail call fastcc i32 @skb_zerocopy_clone(ptr noundef %skb1, ptr noundef %skb, i32 noundef 0)
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %len)
  %cmp = icmp ugt i32 %sub.i, %len
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %sub.i21 = sub i32 %sub.i, %len
  %tail.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb1, i32 0, i32 16
  %13 = ptrtoint ptr %tail.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tail.i.i.i, align 8
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb1, i32 0, i32 7
  %15 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %data_len.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not.i.i = icmp eq i32 %16, 0
  br i1 %tobool.i.not.i.i, label %do.end8.i.i, label %do.body3.i.i, !prof !374

do.body3.i.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i.i:                                      ; preds = %if.then
  %add.ptr.i.i = getelementptr i8, ptr %14, i32 %sub.i21
  %17 = ptrtoint ptr %tail.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr.i.i, ptr %tail.i.i.i, align 8
  %len9.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb1, i32 0, i32 6
  %18 = ptrtoint ptr %len9.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %len9.i.i, align 4
  %add.i.i = add i32 %19, %sub.i21
  store i32 %add.i.i, ptr %len9.i.i, align 4
  %20 = ptrtoint ptr %end.i20 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %end.i20, align 4
  %cmp.i.i = icmp ugt ptr %add.ptr.i.i, %21
  br i1 %cmp.i.i, label %if.then17.i.i, label %skb_put.exit.i, !prof !373

if.then17.i.i:                                    ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %22 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef %skb1, i32 noundef %sub.i21, ptr noundef %22) #20
  unreachable

skb_put.exit.i:                                   ; preds = %do.end8.i.i
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %23 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i40.i = getelementptr i8, ptr %24, i32 %len
  %25 = call ptr @memcpy(ptr %14, ptr %add.ptr.i40.i, i32 %sub.i21)
  %26 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %end.i, align 4
  %nr_frags49.i = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %nr_frags49.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %nr_frags49.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %cmp51.not.i = icmp eq i8 %29, 0
  br i1 %cmp51.not.i, label %skb_put.exit.i.skb_split_inside_header.exit_crit_edge, label %skb_put.exit.i.for.body.i_crit_edge

skb_put.exit.i.for.body.i_crit_edge:              ; preds = %skb_put.exit.i
  br label %for.body.i

skb_put.exit.i.skb_split_inside_header.exit_crit_edge: ; preds = %skb_put.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_split_inside_header.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %skb_put.exit.i.for.body.i_crit_edge
  %30 = phi ptr [ %35, %for.body.i.for.body.i_crit_edge ], [ %27, %skb_put.exit.i.for.body.i_crit_edge ]
  %i.052.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %skb_put.exit.i.for.body.i_crit_edge ]
  %31 = ptrtoint ptr %end.i20 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %end.i20, align 4
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %32, i32 0, i32 12, i32 %i.052.i
  %arrayidx7.i = getelementptr %struct.skb_shared_info, ptr %30, i32 0, i32 12, i32 %i.052.i
  %33 = call ptr @memcpy(ptr %arrayidx.i, ptr %arrayidx7.i, i32 12)
  %inc.i = add nuw nsw i32 %i.052.i, 1
  %34 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %end.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %nr_frags.i, align 2
  %conv.i = zext i8 %37 to i32
  %cmp.i = icmp ult i32 %inc.i, %conv.i
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.skb_split_inside_header.exit_crit_edge

for.body.i.skb_split_inside_header.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_split_inside_header.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

skb_split_inside_header.exit:                     ; preds = %for.body.i.skb_split_inside_header.exit_crit_edge, %skb_put.exit.i.skb_split_inside_header.exit_crit_edge
  %.lcssa.i = phi i8 [ 0, %skb_put.exit.i.skb_split_inside_header.exit_crit_edge ], [ %37, %for.body.i.skb_split_inside_header.exit_crit_edge ]
  %38 = ptrtoint ptr %end.i20 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %end.i20, align 4
  %nr_frags11.i = getelementptr inbounds %struct.skb_shared_info, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %nr_frags11.i to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %.lcssa.i, ptr %nr_frags11.i, align 2
  %41 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %end.i, align 4
  %nr_frags13.i = getelementptr inbounds %struct.skb_shared_info, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %nr_frags13.i to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 0, ptr %nr_frags13.i, align 2
  %44 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %data_len.i, align 8
  %46 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %data_len.i.i.i, align 8
  %47 = ptrtoint ptr %len9.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %len9.i.i, align 4
  %add.i = add i32 %48, %45
  store i32 %add.i, ptr %len9.i.i, align 4
  store i32 0, ptr %data_len.i, align 8
  %49 = ptrtoint ptr %len.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %len, ptr %len.i, align 4
  %50 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i48.i = getelementptr i8, ptr %51, i32 %len
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %52 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %add.ptr.i48.i, ptr %tail.i.i, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_split_no_header(ptr noundef %skb, ptr noundef %skb1, i32 noundef %len, i32 noundef %sub.i)
  br label %if.end

if.end:                                           ; preds = %if.else, %skb_split_inside_header.exit
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @skb_split_no_header(ptr nocapture noundef %skb, ptr nocapture noundef %skb1, i32 noundef %len, i32 noundef %pos) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %3 to i32
  store i8 0, ptr %nr_frags, align 2
  %len3 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %4 = ptrtoint ptr %len3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len3, align 4
  %sub = sub i32 %5, %len
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb1, i32 0, i32 7
  %6 = ptrtoint ptr %data_len to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sub, ptr %data_len, align 8
  %len4 = getelementptr inbounds %struct.sk_buff, ptr %skb1, i32 0, i32 6
  %7 = ptrtoint ptr %len4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %sub, ptr %len4, align 4
  store i32 %len, ptr %len3, align 4
  %sub6 = sub i32 %len, %pos
  %data_len7 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %8 = ptrtoint ptr %data_len7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %sub6, ptr %data_len7, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %cmp95.not = icmp eq i8 %3, 0
  br i1 %cmp95.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %end.i84 = getelementptr inbounds %struct.sk_buff, ptr %skb1, i32 0, i32 17
  br label %for.body

for.body:                                         ; preds = %if.end40.for.body_crit_edge, %for.body.lr.ph
  %k.0100 = phi i32 [ 0, %for.body.lr.ph ], [ %k.1, %if.end40.for.body_crit_edge ]
  %i.097 = phi i32 [ 0, %for.body.lr.ph ], [ %inc42, %if.end40.for.body_crit_edge ]
  %pos.addr.096 = phi i32 [ %pos, %for.body.lr.ph ], [ %add, %if.end40.for.body_crit_edge ]
  %9 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i, align 4
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %10, i32 0, i32 12, i32 %i.097, i32 1
  %11 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bv_len.i, align 4
  %add = add i32 %12, %pos.addr.096
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %len)
  %cmp11 = icmp ugt i32 %add, %len
  br i1 %cmp11, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %10, i32 0, i32 12, i32 %i.097
  %13 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %end.i84, align 4
  %arrayidx15 = getelementptr %struct.skb_shared_info, ptr %14, i32 0, i32 12, i32 %k.0100
  %15 = call ptr @memcpy(ptr %arrayidx15, ptr %arrayidx, i32 12)
  call void @__sanitizer_cov_trace_cmp4(i32 %pos.addr.096, i32 %len)
  %cmp19 = icmp ult i32 %pos.addr.096, %len
  br i1 %cmp19, label %if.then21, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then21:                                        ; preds = %if.then
  %16 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %end.i, align 4
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %17, i32 0, i32 12, i32 %i.097
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.i, align 4
  %20 = getelementptr inbounds %struct.page, ptr %19, i32 0, i32 1
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  %and.i.i.i.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i, !prof !374

if.then.i.i.i.i:                                  ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i.i = add i32 %22, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #22
  %23 = ptrtoint ptr %19 to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i ], [ %23, %if.end.i.i.i.i ]
  %24 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %24, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  %25 = ptrtoint ptr %_refcount.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %_refcount.i.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %26, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, 128
  br i1 %cmp.i.i.i.i, label %if.then.i1.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i1.i.i.i:                                 ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %27 = inttoptr i32 %retval.0.i.i.i.i to ptr
  tail call void @dump_page(ptr noundef %27, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i.i.i
  %call.i.i.i.i9.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %28 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i.i, ptr %_refcount.i.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@skb_split_no_header, %if.then.i.i.i.i.i.i)) #20
          to label %skb_frag_ref.exit [label %if.then.i.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i.i:                              ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %24, i32 noundef 1) #20
  br label %skb_frag_ref.exit

skb_frag_ref.exit:                                ; preds = %if.then.i.i.i.i.i.i, %do.end5.i.i.i.i
  %29 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %end.i84, align 4
  %sub25 = sub i32 %len, %pos.addr.096
  %bv_offset.i = getelementptr inbounds %struct.skb_shared_info, ptr %30, i32 0, i32 12, i32 0, i32 2
  %31 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %bv_offset.i, align 4
  %add.i = add i32 %32, %sub25
  store i32 %add.i, ptr %bv_offset.i, align 4
  %33 = load ptr, ptr %end.i84, align 4
  %bv_len.i88 = getelementptr inbounds %struct.skb_shared_info, ptr %33, i32 0, i32 12, i32 0, i32 1
  %34 = ptrtoint ptr %bv_len.i88 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %bv_len.i88, align 4
  %sub.i = sub i32 %35, %sub25
  store i32 %sub.i, ptr %bv_len.i88, align 4
  %36 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %end.i, align 4
  %bv_len.i90 = getelementptr %struct.skb_shared_info, ptr %37, i32 0, i32 12, i32 %i.097, i32 1
  %38 = ptrtoint ptr %bv_len.i90 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %sub25, ptr %bv_len.i90, align 4
  %39 = load ptr, ptr %end.i, align 4
  %nr_frags35 = getelementptr inbounds %struct.skb_shared_info, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %nr_frags35 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %nr_frags35, align 2
  %inc = add i8 %41, 1
  store i8 %inc, ptr %nr_frags35, align 2
  br label %if.end

if.end:                                           ; preds = %skb_frag_ref.exit, %if.then.if.end_crit_edge
  %inc36 = add i32 %k.0100, 1
  br label %if.end40

if.else:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %nr_frags38 = getelementptr inbounds %struct.skb_shared_info, ptr %10, i32 0, i32 2
  %42 = ptrtoint ptr %nr_frags38 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %nr_frags38, align 2
  %inc39 = add i8 %43, 1
  store i8 %inc39, ptr %nr_frags38, align 2
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.end
  %k.1 = phi i32 [ %inc36, %if.end ], [ %k.0100, %if.else ]
  %inc42 = add nuw nsw i32 %i.097, 1
  %exitcond.not = icmp eq i32 %inc42, %conv
  br i1 %exitcond.not, label %if.end40.for.end_crit_edge, label %if.end40.for.body_crit_edge

if.end40.for.body_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end40.for.end_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %if.end40.for.end_crit_edge, %entry.for.end_crit_edge
  %k.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %k.1, %if.end40.for.end_crit_edge ]
  %conv43 = trunc i32 %k.0.lcssa to i8
  %end.i93 = getelementptr inbounds %struct.sk_buff, ptr %skb1, i32 0, i32 17
  %44 = ptrtoint ptr %end.i93 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %end.i93, align 4
  %nr_frags45 = getelementptr inbounds %struct.skb_shared_info, ptr %45, i32 0, i32 2
  %46 = ptrtoint ptr %nr_frags45 to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %conv43, ptr %nr_frags45, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_shift(ptr noundef %tgt, ptr noundef %skb, i32 noundef %shiftlen) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %shiftlen)
  %cmp = icmp ult i32 %1, %shiftlen
  br i1 %cmp, label %do.body2, label %do.end7, !prof !373

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3501, 0\0A.popsection", ""() #20, !srcloc !434
  unreachable

do.end7:                                          ; preds = %entry
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %tobool8.not = icmp eq i32 %1, %3
  br i1 %tobool8.not, label %if.end10, label %do.end7.cleanup_crit_edge

do.end7.cleanup_crit_edge:                        ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end10:                                         ; preds = %do.end7
  %tobool.not.i = icmp eq ptr %tgt, null
  br i1 %tobool.not.i, label %if.end10.lor.lhs.false_crit_edge, label %land.rhs.i

if.end10.lor.lhs.false_crit_edge:                 ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

land.rhs.i:                                       ; preds = %if.end10
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %tgt, i32 0, i32 17
  %4 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %5, align 8
  %8 = and i8 %7, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool1.not.i = icmp eq i8 %8, 0
  br i1 %tobool1.not.i, label %land.rhs.i.lor.lhs.false_crit_edge, label %skb_zcopy.exit

land.rhs.i.lor.lhs.false_crit_edge:               ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

skb_zcopy.exit:                                   ; preds = %land.rhs.i
  %destructor_arg.i = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 11
  %9 = ptrtoint ptr %destructor_arg.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %destructor_arg.i, align 4
  %tobool12.not = icmp eq ptr %10, null
  br i1 %tobool12.not, label %skb_zcopy.exit.lor.lhs.false_crit_edge, label %skb_zcopy.exit.cleanup_crit_edge

skb_zcopy.exit.cleanup_crit_edge:                 ; preds = %skb_zcopy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_zcopy.exit.lor.lhs.false_crit_edge:           ; preds = %skb_zcopy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %skb_zcopy.exit.lor.lhs.false_crit_edge, %land.rhs.i.lor.lhs.false_crit_edge, %if.end10.lor.lhs.false_crit_edge
  %tobool.not.i264 = icmp eq ptr %skb, null
  br i1 %tobool.not.i264, label %lor.lhs.false.if.end16_crit_edge, label %land.rhs.i267

lor.lhs.false.if.end16_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

land.rhs.i267:                                    ; preds = %lor.lhs.false
  %end.i.i265 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %11 = ptrtoint ptr %end.i.i265 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %end.i.i265, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %12, align 8
  %15 = and i8 %14, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool1.not.i266 = icmp eq i8 %15, 0
  br i1 %tobool1.not.i266, label %land.rhs.i267.if.end16_crit_edge, label %skb_zcopy.exit271

land.rhs.i267.if.end16_crit_edge:                 ; preds = %land.rhs.i267
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

skb_zcopy.exit271:                                ; preds = %land.rhs.i267
  %destructor_arg.i268 = getelementptr inbounds %struct.skb_shared_info, ptr %12, i32 0, i32 11
  %16 = ptrtoint ptr %destructor_arg.i268 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %destructor_arg.i268, align 4
  %tobool14.not = icmp eq ptr %17, null
  br i1 %tobool14.not, label %skb_zcopy.exit271.if.end16_crit_edge, label %skb_zcopy.exit271.cleanup_crit_edge

skb_zcopy.exit271.cleanup_crit_edge:              ; preds = %skb_zcopy.exit271
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_zcopy.exit271.if.end16_crit_edge:             ; preds = %skb_zcopy.exit271
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

if.end16:                                         ; preds = %skb_zcopy.exit271.if.end16_crit_edge, %land.rhs.i267.if.end16_crit_edge, %lor.lhs.false.if.end16_crit_edge
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %tgt, i32 0, i32 17
  %18 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %21 to i32
  %end.i272 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %22 = ptrtoint ptr %end.i272 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %end.i272, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool19.not = icmp eq i8 %21, 0
  br i1 %tobool19.not, label %if.end16.if.end44_crit_edge, label %lor.lhs.false20

if.end16.if.end44_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44

lor.lhs.false20:                                  ; preds = %if.end16
  %frags = getelementptr inbounds %struct.skb_shared_info, ptr %23, i32 0, i32 12
  %24 = ptrtoint ptr %frags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %frags, align 4
  %bv_offset.i = getelementptr inbounds %struct.skb_shared_info, ptr %23, i32 0, i32 12, i32 0, i32 2
  %26 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %bv_offset.i, align 4
  br i1 %tobool.not.i, label %lor.lhs.false20.if.then2.i_crit_edge, label %land.rhs.i.i

lor.lhs.false20.if.then2.i_crit_edge:             ; preds = %lor.lhs.false20
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then2.i

land.rhs.i.i:                                     ; preds = %lor.lhs.false20
  %28 = ptrtoint ptr %19 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %19, align 8
  %30 = and i8 %29, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool1.not.i.i = icmp eq i8 %30, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.if.then2.i_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.if.then2.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then2.i

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 11
  %31 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %destructor_arg.i.i, align 4
  %phi.cmp.i.not = icmp eq ptr %32, null
  br i1 %phi.cmp.i.not, label %skb_zcopy.exit.i.if.then2.i_crit_edge, label %skb_zcopy.exit.i.if.end44_crit_edge

skb_zcopy.exit.i.if.end44_crit_edge:              ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44

skb_zcopy.exit.i.if.then2.i_crit_edge:            ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then2.i

if.then2.i:                                       ; preds = %skb_zcopy.exit.i.if.then2.i_crit_edge, %land.rhs.i.i.if.then2.i_crit_edge, %lor.lhs.false20.if.then2.i_crit_edge
  %sub.i275 = add nsw i32 %conv, -1
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %19, i32 0, i32 12, i32 %sub.i275
  %33 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx.i, align 4
  %cmp.i = icmp eq ptr %34, %25
  br i1 %cmp.i, label %skb_can_coalesce.exit, label %if.then2.i.if.end44_crit_edge

if.then2.i.if.end44_crit_edge:                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44

skb_can_coalesce.exit:                            ; preds = %if.then2.i
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %19, i32 0, i32 12, i32 %sub.i275, i32 2
  %35 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %bv_offset.i.i, align 4
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %19, i32 0, i32 12, i32 %sub.i275, i32 1
  %37 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %bv_len.i.i, align 4
  %add.i = add i32 %38, %36
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %27)
  %cmp7.i = icmp eq i32 %add.i, %27
  br i1 %cmp7.i, label %if.else, label %skb_can_coalesce.exit.if.end44_crit_edge

skb_can_coalesce.exit.if.end44_crit_edge:         ; preds = %skb_can_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44

if.else:                                          ; preds = %skb_can_coalesce.exit
  %bv_len.i = getelementptr inbounds %struct.skb_shared_info, ptr %23, i32 0, i32 12, i32 0, i32 1
  %39 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %bv_len.i, align 4
  %sub26 = sub i32 %shiftlen, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub26)
  %cmp27 = icmp slt i32 %sub26, 0
  br i1 %cmp27, label %if.then29, label %if.else.if.end44_crit_edge

if.else.if.end44_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44

if.then29:                                        ; preds = %if.else
  %call30 = tail call fastcc i32 @skb_prepare_for_shift(ptr noundef %skb)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %lor.lhs.false32, label %if.then29.cleanup_crit_edge

if.then29.cleanup_crit_edge:                      ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false32:                                  ; preds = %if.then29
  %call33 = tail call fastcc i32 @skb_prepare_for_shift(ptr noundef %tgt)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end36, label %lor.lhs.false32.cleanup_crit_edge

lor.lhs.false32.cleanup_crit_edge:                ; preds = %lor.lhs.false32
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end36:                                         ; preds = %lor.lhs.false32
  call void @__sanitizer_cov_trace_pc() #22
  %41 = ptrtoint ptr %end.i272 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %end.i272, align 4
  %43 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %end.i, align 4
  %bv_len.i279 = getelementptr %struct.skb_shared_info, ptr %44, i32 0, i32 12, i32 %sub.i275, i32 1
  %45 = ptrtoint ptr %bv_len.i279 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %bv_len.i279, align 4
  %add.i280 = add i32 %46, %shiftlen
  store i32 %add.i280, ptr %bv_len.i279, align 4
  %bv_len.i281 = getelementptr inbounds %struct.skb_shared_info, ptr %42, i32 0, i32 12, i32 0, i32 1
  %47 = ptrtoint ptr %bv_len.i281 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %bv_len.i281, align 4
  %sub.i282 = sub i32 %48, %shiftlen
  store i32 %sub.i282, ptr %bv_len.i281, align 4
  %bv_offset.i283 = getelementptr inbounds %struct.skb_shared_info, ptr %42, i32 0, i32 12, i32 0, i32 2
  %49 = ptrtoint ptr %bv_offset.i283 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %bv_offset.i283, align 4
  %add.i284 = add i32 %50, %shiftlen
  store i32 %add.i284, ptr %bv_offset.i283, align 4
  br label %onlymerged

if.end44:                                         ; preds = %if.else.if.end44_crit_edge, %skb_can_coalesce.exit.if.end44_crit_edge, %if.then2.i.if.end44_crit_edge, %skb_zcopy.exit.i.if.end44_crit_edge, %if.end16.if.end44_crit_edge
  %from.0 = phi i32 [ 0, %skb_can_coalesce.exit.if.end44_crit_edge ], [ 0, %if.end16.if.end44_crit_edge ], [ 1, %if.else.if.end44_crit_edge ], [ 0, %skb_zcopy.exit.i.if.end44_crit_edge ], [ 0, %if.then2.i.if.end44_crit_edge ]
  %merge.0 = phi i32 [ -1, %skb_can_coalesce.exit.if.end44_crit_edge ], [ -1, %if.end16.if.end44_crit_edge ], [ %sub.i275, %if.else.if.end44_crit_edge ], [ -1, %skb_zcopy.exit.i.if.end44_crit_edge ], [ -1, %if.then2.i.if.end44_crit_edge ]
  %todo.0 = phi i32 [ %shiftlen, %skb_can_coalesce.exit.if.end44_crit_edge ], [ %shiftlen, %if.end16.if.end44_crit_edge ], [ %sub26, %if.else.if.end44_crit_edge ], [ %shiftlen, %skb_zcopy.exit.i.if.end44_crit_edge ], [ %shiftlen, %if.then2.i.if.end44_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %shiftlen)
  %cmp46 = icmp eq i32 %1, %shiftlen
  br i1 %cmp46, label %land.lhs.true, label %if.end44.if.end56_crit_edge

if.end44.if.end56_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end56

land.lhs.true:                                    ; preds = %if.end44
  %nr_frags49 = getelementptr inbounds %struct.skb_shared_info, ptr %23, i32 0, i32 2
  %51 = ptrtoint ptr %nr_frags49 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %nr_frags49, align 2
  %conv50 = zext i8 %52 to i32
  %sub51 = sub nsw i32 %conv50, %from.0
  %sub52 = sub nsw i32 17, %conv
  call void @__sanitizer_cov_trace_cmp4(i32 %sub51, i32 %sub52)
  %cmp53 = icmp ugt i32 %sub51, %sub52
  br i1 %cmp53, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end56_crit_edge

land.lhs.true.if.end56_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end56

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end56:                                         ; preds = %land.lhs.true.if.end56_crit_edge, %if.end44.if.end56_crit_edge
  %cloned.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %53 = ptrtoint ptr %cloned.i.i.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %bf.load.i.i.i = load i8, ptr %cloned.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i.i)
  %tobool.not.i.i.i = icmp sgt i8 %bf.load.i.i.i, -1
  br i1 %tobool.not.i.i.i, label %if.end56.lor.lhs.false59_crit_edge, label %skb_cloned.exit.i.i

if.end56.lor.lhs.false59_crit_edge:               ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false59

skb_cloned.exit.i.i:                              ; preds = %if.end56
  %dataref.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %23, i32 0, i32 10
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i.i, i32 noundef 4) #20
  %54 = ptrtoint ptr %dataref.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %dataref.i.i.i, align 4
  %and.i.i.i = and i32 %55, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i.i)
  %cmp.i.not.i.i = icmp eq i32 %and.i.i.i, 1
  br i1 %cmp.i.not.i.i, label %skb_cloned.exit.i.i.lor.lhs.false59_crit_edge, label %skb_prepare_for_shift.exit

skb_cloned.exit.i.i.lor.lhs.false59_crit_edge:    ; preds = %skb_cloned.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false59

skb_prepare_for_shift.exit:                       ; preds = %skb_cloned.exit.i.i
  %truesize.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %56 = ptrtoint ptr %truesize.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %truesize.i.i, align 8
  %call7.i.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #20
  %58 = ptrtoint ptr %truesize.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %57, ptr %truesize.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool58.not = icmp eq i32 %call7.i.i, 0
  br i1 %tobool58.not, label %skb_prepare_for_shift.exit.lor.lhs.false59_crit_edge, label %skb_prepare_for_shift.exit.cleanup_crit_edge

skb_prepare_for_shift.exit.cleanup_crit_edge:     ; preds = %skb_prepare_for_shift.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_prepare_for_shift.exit.lor.lhs.false59_crit_edge: ; preds = %skb_prepare_for_shift.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %skb_prepare_for_shift.exit.lor.lhs.false59_crit_edge, %skb_cloned.exit.i.i.lor.lhs.false59_crit_edge, %if.end56.lor.lhs.false59_crit_edge
  %call60 = tail call fastcc i32 @skb_prepare_for_shift(ptr noundef %tgt)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %while.cond.preheader, label %lor.lhs.false59.cleanup_crit_edge

lor.lhs.false59.cleanup_crit_edge:                ; preds = %lor.lhs.false59
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

while.cond.preheader:                             ; preds = %lor.lhs.false59
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %todo.0)
  %cmp64325 = icmp sgt i32 %todo.0, 0
  br i1 %cmp64325, label %while.cond.preheader.land.rhs_crit_edge, label %while.cond.preheader.while.end_crit_edge

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.cond.preheader.land.rhs_crit_edge:          ; preds = %while.cond.preheader
  br label %land.rhs

land.rhs:                                         ; preds = %if.then84.land.rhs_crit_edge, %while.cond.preheader.land.rhs_crit_edge
  %todo.1328 = phi i32 [ %sub86, %if.then84.land.rhs_crit_edge ], [ %todo.0, %while.cond.preheader.land.rhs_crit_edge ]
  %to.0327 = phi i32 [ %inc88, %if.then84.land.rhs_crit_edge ], [ %conv, %while.cond.preheader.land.rhs_crit_edge ]
  %from.1326 = phi i32 [ %inc87, %if.then84.land.rhs_crit_edge ], [ %from.0, %while.cond.preheader.land.rhs_crit_edge ]
  %59 = ptrtoint ptr %end.i272 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %end.i272, align 4
  %nr_frags67 = getelementptr inbounds %struct.skb_shared_info, ptr %60, i32 0, i32 2
  %61 = ptrtoint ptr %nr_frags67 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %nr_frags67, align 2
  %conv68 = zext i8 %62 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %from.1326, i32 %conv68)
  %cmp69 = icmp ult i32 %from.1326, %conv68
  br i1 %cmp69, label %while.body, label %land.rhs.while.end_crit_edge

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %to.0327)
  %cmp71 = icmp eq i32 %to.0327, 17
  br i1 %cmp71, label %while.body.cleanup_crit_edge, label %if.end74

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end74:                                         ; preds = %while.body
  %arrayidx77 = getelementptr %struct.skb_shared_info, ptr %60, i32 0, i32 12, i32 %from.1326
  %63 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %end.i, align 4
  %arrayidx80 = getelementptr %struct.skb_shared_info, ptr %64, i32 0, i32 12, i32 %to.0327
  %bv_len.i289 = getelementptr %struct.skb_shared_info, ptr %60, i32 0, i32 12, i32 %from.1326, i32 1
  %65 = ptrtoint ptr %bv_len.i289 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %bv_len.i289, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %todo.1328, i32 %66)
  %cmp82.not = icmp ult i32 %todo.1328, %66
  br i1 %cmp82.not, label %if.else89, label %if.then84

if.then84:                                        ; preds = %if.end74
  %67 = call ptr @memcpy(ptr %arrayidx80, ptr %arrayidx77, i32 12)
  %68 = ptrtoint ptr %bv_len.i289 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %bv_len.i289, align 4
  %sub86 = sub i32 %todo.1328, %69
  %inc87 = add nuw nsw i32 %from.1326, 1
  %inc88 = add nuw nsw i32 %to.0327, 1
  %cmp64 = icmp sgt i32 %sub86, 0
  br i1 %cmp64, label %if.then84.land.rhs_crit_edge, label %if.then84.while.end_crit_edge

if.then84.while.end_crit_edge:                    ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

if.then84.land.rhs_crit_edge:                     ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.rhs

if.else89:                                        ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @__skb_frag_ref(ptr noundef %arrayidx77)
  %70 = ptrtoint ptr %arrayidx77 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %arrayidx77, align 4
  %72 = ptrtoint ptr %arrayidx80 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %71, ptr %arrayidx80, align 4
  %bv_offset.i291 = getelementptr %struct.skb_shared_info, ptr %60, i32 0, i32 12, i32 %from.1326, i32 2
  %73 = ptrtoint ptr %bv_offset.i291 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %bv_offset.i291, align 4
  %bv_offset1.i = getelementptr %struct.skb_shared_info, ptr %64, i32 0, i32 12, i32 %to.0327, i32 2
  %75 = ptrtoint ptr %bv_offset1.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %74, ptr %bv_offset1.i, align 4
  %bv_len.i292 = getelementptr %struct.skb_shared_info, ptr %64, i32 0, i32 12, i32 %to.0327, i32 1
  %76 = ptrtoint ptr %bv_len.i292 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %todo.1328, ptr %bv_len.i292, align 4
  %77 = load i32, ptr %bv_offset.i291, align 4
  %add.i294 = add i32 %77, %todo.1328
  store i32 %add.i294, ptr %bv_offset.i291, align 4
  %78 = ptrtoint ptr %bv_len.i289 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %bv_len.i289, align 4
  %sub.i296 = sub i32 %79, %todo.1328
  store i32 %sub.i296, ptr %bv_len.i289, align 4
  %inc90 = add nuw i32 %to.0327, 1
  br label %while.end

while.end:                                        ; preds = %if.else89, %if.then84.while.end_crit_edge, %land.rhs.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %from.1322 = phi i32 [ %from.1326, %if.else89 ], [ %from.0, %while.cond.preheader.while.end_crit_edge ], [ %from.1326, %land.rhs.while.end_crit_edge ], [ %inc87, %if.then84.while.end_crit_edge ]
  %to.1 = phi i32 [ %inc90, %if.else89 ], [ %conv, %while.cond.preheader.while.end_crit_edge ], [ %to.0327, %land.rhs.while.end_crit_edge ], [ %inc88, %if.then84.while.end_crit_edge ]
  %todo.2 = phi i32 [ 0, %if.else89 ], [ %todo.0, %while.cond.preheader.while.end_crit_edge ], [ %todo.1328, %land.rhs.while.end_crit_edge ], [ %sub86, %if.then84.while.end_crit_edge ]
  %conv92 = trunc i32 %to.1 to i8
  %80 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %end.i, align 4
  %nr_frags94 = getelementptr inbounds %struct.skb_shared_info, ptr %81, i32 0, i32 2
  %82 = ptrtoint ptr %nr_frags94 to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 %conv92, ptr %nr_frags94, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %merge.0)
  %cmp95 = icmp sgt i32 %merge.0, -1
  br i1 %cmp95, label %if.then97, label %while.end.if.end106_crit_edge

while.end.if.end106_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end106

if.then97:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  %83 = ptrtoint ptr %end.i272 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %end.i272, align 4
  %frags99 = getelementptr inbounds %struct.skb_shared_info, ptr %84, i32 0, i32 12
  %85 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %end.i, align 4
  %bv_len.i300 = getelementptr inbounds %struct.skb_shared_info, ptr %84, i32 0, i32 12, i32 0, i32 1
  %87 = ptrtoint ptr %bv_len.i300 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %bv_len.i300, align 4
  %bv_len.i301 = getelementptr %struct.skb_shared_info, ptr %86, i32 0, i32 12, i32 %merge.0, i32 1
  %89 = ptrtoint ptr %bv_len.i301 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %bv_len.i301, align 4
  %add.i302 = add i32 %90, %88
  store i32 %add.i302, ptr %bv_len.i301, align 4
  %91 = ptrtoint ptr %cloned.i.i.i to i32
  call void @__asan_load1_noabort(i32 %91)
  %bf.load = load i8, ptr %cloned.i.i.i, align 2
  %bf.clear = and i8 %bf.load, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear)
  %tobool105 = icmp ne i8 %bf.clear, 0
  tail call fastcc void @__skb_frag_unref(ptr noundef %frags99, i1 noundef zeroext %tobool105)
  br label %if.end106

if.end106:                                        ; preds = %if.then97, %while.end.if.end106_crit_edge
  %92 = ptrtoint ptr %end.i272 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %end.i272, align 4
  %nr_frags109334 = getelementptr inbounds %struct.skb_shared_info, ptr %93, i32 0, i32 2
  %94 = ptrtoint ptr %nr_frags109334 to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %nr_frags109334, align 2
  %conv110335 = zext i8 %95 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %from.1322, i32 %conv110335)
  %cmp111336 = icmp ult i32 %from.1322, %conv110335
  br i1 %cmp111336, label %if.end106.while.body113_crit_edge, label %if.end106.while.end122_crit_edge

if.end106.while.end122_crit_edge:                 ; preds = %if.end106
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end122

if.end106.while.body113_crit_edge:                ; preds = %if.end106
  br label %while.body113

while.body113:                                    ; preds = %while.body113.while.body113_crit_edge, %if.end106.while.body113_crit_edge
  %96 = phi ptr [ %99, %while.body113.while.body113_crit_edge ], [ %93, %if.end106.while.body113_crit_edge ]
  %to.2338 = phi i32 [ %inc116, %while.body113.while.body113_crit_edge ], [ 0, %if.end106.while.body113_crit_edge ]
  %from.2337 = phi i32 [ %inc120, %while.body113.while.body113_crit_edge ], [ %from.1322, %if.end106.while.body113_crit_edge ]
  %inc116 = add nuw nsw i32 %to.2338, 1
  %arrayidx117 = getelementptr %struct.skb_shared_info, ptr %96, i32 0, i32 12, i32 %to.2338
  %inc120 = add nuw nsw i32 %from.2337, 1
  %arrayidx121 = getelementptr %struct.skb_shared_info, ptr %96, i32 0, i32 12, i32 %from.2337
  %97 = call ptr @memcpy(ptr %arrayidx117, ptr %arrayidx121, i32 12)
  %98 = ptrtoint ptr %end.i272 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %end.i272, align 4
  %nr_frags109 = getelementptr inbounds %struct.skb_shared_info, ptr %99, i32 0, i32 2
  %100 = ptrtoint ptr %nr_frags109 to i32
  call void @__asan_load1_noabort(i32 %100)
  %101 = load i8, ptr %nr_frags109, align 2
  %conv110 = zext i8 %101 to i32
  %cmp111 = icmp ult i32 %inc120, %conv110
  br i1 %cmp111, label %while.body113.while.body113_crit_edge, label %while.end122.loopexit

while.body113.while.body113_crit_edge:            ; preds = %while.body113
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body113

while.end122.loopexit:                            ; preds = %while.body113
  call void @__sanitizer_cov_trace_pc() #22
  %phi.cast = trunc i32 %inc116 to i8
  br label %while.end122

while.end122:                                     ; preds = %while.end122.loopexit, %if.end106.while.end122_crit_edge
  %.lcssa = phi ptr [ %93, %if.end106.while.end122_crit_edge ], [ %99, %while.end122.loopexit ]
  %to.2.lcssa = phi i8 [ 0, %if.end106.while.end122_crit_edge ], [ %phi.cast, %while.end122.loopexit ]
  %nr_frags109.le = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 2
  %102 = ptrtoint ptr %nr_frags109.le to i32
  call void @__asan_store1_noabort(i32 %102)
  store i8 %to.2.lcssa, ptr %nr_frags109.le, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %todo.2)
  %cmp127 = icmp sgt i32 %todo.2, 0
  br i1 %cmp127, label %land.rhs129, label %while.end122.onlymerged_crit_edge

while.end122.onlymerged_crit_edge:                ; preds = %while.end122
  call void @__sanitizer_cov_trace_pc() #22
  br label %onlymerged

land.rhs129:                                      ; preds = %while.end122
  %103 = ptrtoint ptr %end.i272 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %end.i272, align 4
  %nr_frags131 = getelementptr inbounds %struct.skb_shared_info, ptr %104, i32 0, i32 2
  %105 = ptrtoint ptr %nr_frags131 to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %nr_frags131, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %106)
  %tobool132.not = icmp eq i8 %106, 0
  br i1 %tobool132.not, label %do.body143, label %land.rhs129.onlymerged_crit_edge, !prof !373

land.rhs129.onlymerged_crit_edge:                 ; preds = %land.rhs129
  call void @__sanitizer_cov_trace_pc() #22
  br label %onlymerged

do.body143:                                       ; preds = %land.rhs129
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3596, 0\0A.popsection", ""() #20, !srcloc !435
  unreachable

onlymerged:                                       ; preds = %land.rhs129.onlymerged_crit_edge, %while.end122.onlymerged_crit_edge, %if.end36
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %tgt, i32 0, i32 15
  %107 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %107)
  %bf.load152 = load i16, ptr %ip_summed, align 8
  %bf.set = or i16 %bf.load152, 1536
  store i16 %bf.set, ptr %ip_summed, align 8
  %ip_summed154 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %108 = ptrtoint ptr %ip_summed154 to i32
  call void @__asan_load2_noabort(i32 %108)
  %bf.load155 = load i16, ptr %ip_summed154, align 8
  %bf.set157 = or i16 %bf.load155, 1536
  store i16 %bf.set157, ptr %ip_summed154, align 8
  %109 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %len, align 4
  %sub159 = sub i32 %110, %shiftlen
  store i32 %sub159, ptr %len, align 4
  %111 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %data_len.i, align 8
  %sub160 = sub i32 %112, %shiftlen
  store i32 %sub160, ptr %data_len.i, align 8
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %113 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %truesize, align 8
  %sub161 = sub i32 %114, %shiftlen
  store i32 %sub161, ptr %truesize, align 8
  %len162 = getelementptr inbounds %struct.sk_buff, ptr %tgt, i32 0, i32 6
  %115 = ptrtoint ptr %len162 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %len162, align 4
  %add = add i32 %116, %shiftlen
  store i32 %add, ptr %len162, align 4
  %data_len163 = getelementptr inbounds %struct.sk_buff, ptr %tgt, i32 0, i32 7
  %117 = ptrtoint ptr %data_len163 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %data_len163, align 8
  %add164 = add i32 %118, %shiftlen
  store i32 %add164, ptr %data_len163, align 8
  %truesize165 = getelementptr inbounds %struct.sk_buff, ptr %tgt, i32 0, i32 20
  %119 = ptrtoint ptr %truesize165 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %truesize165, align 8
  %add166 = add i32 %120, %shiftlen
  store i32 %add166, ptr %truesize165, align 8
  br label %cleanup

cleanup:                                          ; preds = %onlymerged, %while.body.cleanup_crit_edge, %lor.lhs.false59.cleanup_crit_edge, %skb_prepare_for_shift.exit.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %lor.lhs.false32.cleanup_crit_edge, %if.then29.cleanup_crit_edge, %skb_zcopy.exit271.cleanup_crit_edge, %skb_zcopy.exit.cleanup_crit_edge, %do.end7.cleanup_crit_edge
  %retval.0 = phi i32 [ %shiftlen, %onlymerged ], [ 0, %do.end7.cleanup_crit_edge ], [ 0, %skb_zcopy.exit271.cleanup_crit_edge ], [ 0, %skb_zcopy.exit.cleanup_crit_edge ], [ 0, %lor.lhs.false32.cleanup_crit_edge ], [ 0, %if.then29.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %lor.lhs.false59.cleanup_crit_edge ], [ 0, %skb_prepare_for_shift.exit.cleanup_crit_edge ], [ 0, %while.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @skb_prepare_for_shift(ptr noundef %skb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %0 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %entry.skb_unclone_keeptruesize.exit_crit_edge, label %skb_cloned.exit.i

entry.skb_unclone_keeptruesize.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_unclone_keeptruesize.exit

skb_cloned.exit.i:                                ; preds = %entry
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %1 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %end.i.i.i, align 4
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %2, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #20
  %3 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i.i = and i32 %4, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp.i.not.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp.i.not.i, label %skb_cloned.exit.i.skb_unclone_keeptruesize.exit_crit_edge, label %if.then6.i

skb_cloned.exit.i.skb_unclone_keeptruesize.exit_crit_edge: ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_unclone_keeptruesize.exit

if.then6.i:                                       ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %5 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %truesize.i, align 8
  %call7.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #20
  %7 = ptrtoint ptr %truesize.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %truesize.i, align 8
  br label %skb_unclone_keeptruesize.exit

skb_unclone_keeptruesize.exit:                    ; preds = %if.then6.i, %skb_cloned.exit.i.skb_unclone_keeptruesize.exit_crit_edge, %entry.skb_unclone_keeptruesize.exit_crit_edge
  %retval.0.i = phi i32 [ %call7.i, %if.then6.i ], [ 0, %skb_cloned.exit.i.skb_unclone_keeptruesize.exit_crit_edge ], [ 0, %entry.skb_unclone_keeptruesize.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__skb_frag_ref(ptr nocapture noundef readonly %frag) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %frag to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %frag, align 4
  %2 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %4, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %5 = ptrtoint ptr %1 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  %7 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %8, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !373

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @dump_page(ptr noundef %6, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #20
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@__skb_frag_ref, %if.then.i.i.i.i)) #20
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !376

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %6, i32 noundef 1) #20
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__skb_frag_unref(ptr nocapture noundef readonly %frag, i1 noundef zeroext %recycle) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %frag to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %frag, align 4
  br i1 %recycle, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call zeroext i1 @page_pool_return_skb_page(ptr noundef %1) #20
  br i1 %call1, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %2 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %4, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %5 = ptrtoint ptr %1 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  %7 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i.i.i.i = icmp eq i32 %8, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @dump_page(ptr noundef %6, ptr noundef nonnull @.str.34) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !411
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !393
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #20, !srcloc !394
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !395
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__skb_frag_unref, %if.then.i.i.i.i.i)) #20
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %6, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #20
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.cleanup_crit_edge

folio_put_testzero.exit.i.i.cleanup_crit_edge:    ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__put_page(ptr noundef %6) #20
  br label %cleanup

cleanup:                                          ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @skb_prepare_seq_read(ptr noundef %skb, i32 noundef %from, i32 noundef %to, ptr nocapture noundef writeonly %st) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %st to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %from, ptr %st, align 4
  %upper_offset = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 1
  %1 = ptrtoint ptr %upper_offset to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %to, ptr %upper_offset, align 4
  %cur_skb = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 5
  %2 = ptrtoint ptr %cur_skb to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %skb, ptr %cur_skb, align 4
  %root_skb = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 4
  %3 = ptrtoint ptr %root_skb to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %skb, ptr %root_skb, align 4
  %stepped_offset = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 3
  %4 = ptrtoint ptr %stepped_offset to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %stepped_offset, align 4
  %frag_idx = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 2
  %5 = ptrtoint ptr %frag_idx to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %frag_idx, align 4
  %frag_data = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 6
  %6 = ptrtoint ptr %frag_data to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %frag_data, align 4
  %frag_off = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 7
  %7 = ptrtoint ptr %frag_off to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %frag_off, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_seq_read(i32 noundef %consumed, ptr nocapture noundef writeonly %data, ptr nocapture noundef %st) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %st to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %st, align 4
  %add = add i32 %1, %consumed
  %upper_offset = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 1
  %2 = ptrtoint ptr %upper_offset to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %upper_offset, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %3)
  %cmp.not = icmp ult i32 %add, %3
  br i1 %cmp.not, label %next_skb.preheader, label %if.then, !prof !374

next_skb.preheader:                               ; preds = %entry
  %cur_skb = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 5
  %stepped_offset = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 3
  %frag_data12 = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 6
  %frag_idx = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 2
  %frag_off = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 7
  %root_skb = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 4
  br label %next_skb

if.then:                                          ; preds = %entry
  %frag_data = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 6
  %4 = ptrtoint ptr %frag_data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %frag_data, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %if.then.cleanup131_crit_edge, label %do.end

if.then.cleanup131_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup131

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @__kunmap_atomic(ptr noundef nonnull %5)
  %6 = ptrtoint ptr %frag_data to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %frag_data, align 4
  br label %cleanup131

next_skb:                                         ; preds = %next_skb.backedge, %next_skb.preheader
  %7 = ptrtoint ptr %cur_skb to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cur_skb, align 4
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 6
  %9 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 7
  %11 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %10, %12
  %13 = ptrtoint ptr %stepped_offset to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %stepped_offset, align 4
  %add10 = add i32 %sub.i, %14
  call void @__sanitizer_cov_trace_cmp4(i32 %add10, i32 %add)
  %cmp11 = icmp ugt i32 %add10, %add
  br i1 %cmp11, label %land.lhs.true, label %next_skb.if.end19_crit_edge

next_skb.if.end19_crit_edge:                      ; preds = %next_skb
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

land.lhs.true:                                    ; preds = %next_skb
  %15 = ptrtoint ptr %frag_data12 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %frag_data12, align 4
  %tobool13.not = icmp eq ptr %16, null
  br i1 %tobool13.not, label %if.then14, label %land.lhs.true.if.end19_crit_edge

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

if.then14:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %data16 = getelementptr inbounds %struct.sk_buff, ptr %8, i32 0, i32 19
  %17 = ptrtoint ptr %data16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data16, align 4
  %sub = sub i32 %add, %14
  %add.ptr = getelementptr i8, ptr %18, i32 %sub
  %19 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %add.ptr, ptr %data, align 4
  %sub18 = sub i32 %add10, %add
  br label %cleanup131

if.end19:                                         ; preds = %land.lhs.true.if.end19_crit_edge, %next_skb.if.end19_crit_edge
  %20 = ptrtoint ptr %frag_idx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %frag_idx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp20 = icmp eq i32 %21, 0
  br i1 %cmp20, label %land.lhs.true21, label %if.end19.if.end29_crit_edge

if.end19.if.end29_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29

land.lhs.true21:                                  ; preds = %if.end19
  %22 = ptrtoint ptr %frag_data12 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %frag_data12, align 4
  %tobool23.not = icmp eq ptr %23, null
  br i1 %tobool23.not, label %if.then24, label %land.lhs.true21.if.end29_crit_edge

land.lhs.true21.if.end29_crit_edge:               ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end29

if.then24:                                        ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #22
  %24 = ptrtoint ptr %stepped_offset to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %add10, ptr %stepped_offset, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then24, %land.lhs.true21.if.end29_crit_edge, %if.end19.if.end29_crit_edge
  %25 = ptrtoint ptr %frag_idx to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %frag_idx, align 4
  %27 = ptrtoint ptr %cur_skb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %cur_skb, align 4
  %end.i232 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 17
  %29 = ptrtoint ptr %end.i232 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %end.i232, align 4
  %nr_frags233 = getelementptr inbounds %struct.skb_shared_info, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %nr_frags233 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %nr_frags233, align 2
  %conv234 = zext i8 %32 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %conv234)
  %cmp33235 = icmp ult i32 %26, %conv234
  br i1 %cmp33235, label %if.end29.while.body_crit_edge, label %if.end29.while.end_crit_edge

if.end29.while.end_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

if.end29.while.body_crit_edge:                    ; preds = %if.end29
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %if.end29.while.body_crit_edge
  %33 = phi ptr [ %94, %cleanup.while.body_crit_edge ], [ %30, %if.end29.while.body_crit_edge ]
  %34 = phi i32 [ %90, %cleanup.while.body_crit_edge ], [ %26, %if.end29.while.body_crit_edge ]
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %33, i32 0, i32 12, i32 %34
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %33, i32 0, i32 12, i32 %34, i32 2
  %35 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %bv_offset.i, align 4
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %33, i32 0, i32 12, i32 %34, i32 1
  %37 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %bv_len.i, align 4
  %39 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx, align 4
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %40, align 4
  %shr.i.i = lshr i32 %42, 30
  %43 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %43, ptr @__sancov_gen_cov_switch_values.54)
  switch i32 %shr.i.i, label %while.body.if.end51_crit_edge [
    i32 2, label %while.body.if.then42_crit_edge
    i32 3, label %skb_frag_must_loop.exit
  ]

while.body.if.then42_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then42

while.body.if.end51_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end51

skb_frag_must_loop.exit:                          ; preds = %while.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %44 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %44)
  %cmp2.i.i = icmp eq i32 %44, 2
  br i1 %cmp2.i.i, label %skb_frag_must_loop.exit.if.then42_crit_edge, label %skb_frag_must_loop.exit.if.end51_crit_edge

skb_frag_must_loop.exit.if.end51_crit_edge:       ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end51

skb_frag_must_loop.exit.if.then42_crit_edge:      ; preds = %skb_frag_must_loop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then42

if.then42:                                        ; preds = %skb_frag_must_loop.exit.if.then42_crit_edge, %while.body.if.then42_crit_edge
  %45 = ptrtoint ptr %frag_off to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %frag_off, align 4
  %add43 = add i32 %46, %36
  %shr = lshr i32 %add43, 12
  %and = and i32 %add43, 4095
  %sub47 = sub i32 %38, %46
  %sub48 = sub nuw nsw i32 4096, %and
  %47 = tail call i32 @llvm.umin.i32(i32 %sub47, i32 %sub48)
  br label %if.end51

if.end51:                                         ; preds = %if.then42, %skb_frag_must_loop.exit.if.end51_crit_edge, %while.body.if.end51_crit_edge
  %pg_idx.0 = phi i32 [ %shr, %if.then42 ], [ 0, %skb_frag_must_loop.exit.if.end51_crit_edge ], [ 0, %while.body.if.end51_crit_edge ]
  %pg_off.0 = phi i32 [ %and, %if.then42 ], [ %36, %skb_frag_must_loop.exit.if.end51_crit_edge ], [ %36, %while.body.if.end51_crit_edge ]
  %pg_sz.0 = phi i32 [ %47, %if.then42 ], [ %38, %skb_frag_must_loop.exit.if.end51_crit_edge ], [ %38, %while.body.if.end51_crit_edge ]
  %48 = ptrtoint ptr %stepped_offset to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %stepped_offset, align 4
  %add53 = add i32 %49, %pg_sz.0
  call void @__sanitizer_cov_trace_cmp4(i32 %add53, i32 %add)
  %cmp54 = icmp ugt i32 %add53, %add
  %50 = ptrtoint ptr %frag_data12 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %frag_data12, align 4
  %tobool58.not = icmp eq ptr %51, null
  br i1 %cmp54, label %if.then56, label %if.end71

if.then56:                                        ; preds = %if.end51
  br i1 %tobool58.not, label %if.then59, label %if.then56.cleanup.thread_crit_edge

if.then56.cleanup.thread_crit_edge:               ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread

if.then59:                                        ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr61 = getelementptr %struct.page, ptr %40, i32 %pg_idx.0
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %52 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %52, 512
  %53 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i = and i32 %53, -16384
  %54 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %56, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !387
  %57 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i = and i32 %57, -16384
  %58 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 2
  %59 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %60, i32 0, i32 213
  %61 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %inc.i.i.i.i = add i32 %62, 1
  store i32 %inc.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !388
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %add.ptr61, i32 noundef %or.i) #20
  %63 = ptrtoint ptr %frag_data12 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %call.i.i, ptr %frag_data12, align 4
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then59, %if.then56.cleanup.thread_crit_edge
  %64 = ptrtoint ptr %frag_data12 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %frag_data12, align 4
  %add.ptr66 = getelementptr i8, ptr %65, i32 %pg_off.0
  %66 = ptrtoint ptr %stepped_offset to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %stepped_offset, align 4
  %sub68 = sub i32 %add, %67
  %add.ptr69 = getelementptr i8, ptr %add.ptr66, i32 %sub68
  %68 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %add.ptr69, ptr %data, align 4
  %sub70 = sub i32 %add53, %add
  br label %cleanup131

if.end71:                                         ; preds = %if.end51
  br i1 %tobool58.not, label %if.end71.if.end83_crit_edge, label %do.end78

if.end71.if.end83_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end83

do.end78:                                         ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kunmap_local_indexed(ptr noundef nonnull %51) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %69 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i = and i32 %69, -16384
  %70 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %70, i32 0, i32 2
  %71 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %72, i32 0, i32 213
  %73 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %74, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %75 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %75, -16384
  %76 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %78, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  %79 = ptrtoint ptr %frag_data12 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr null, ptr %frag_data12, align 4
  br label %if.end83

if.end83:                                         ; preds = %do.end78, %if.end71.if.end83_crit_edge
  %80 = ptrtoint ptr %stepped_offset to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %stepped_offset, align 4
  %add85 = add i32 %81, %pg_sz.0
  store i32 %add85, ptr %stepped_offset, align 4
  %82 = ptrtoint ptr %frag_off to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %frag_off, align 4
  %add87 = add i32 %83, %pg_sz.0
  store i32 %add87, ptr %frag_off, align 4
  %84 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %bv_len.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add87, i32 %85)
  %cmp90 = icmp eq i32 %add87, %85
  br i1 %cmp90, label %if.then92, label %if.end83.cleanup_crit_edge

if.end83.cleanup_crit_edge:                       ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then92:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #22
  %86 = ptrtoint ptr %frag_off to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 0, ptr %frag_off, align 4
  %87 = ptrtoint ptr %frag_idx to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %frag_idx, align 4
  %inc = add i32 %88, 1
  store i32 %inc, ptr %frag_idx, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then92, %if.end83.cleanup_crit_edge
  %89 = ptrtoint ptr %frag_idx to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %frag_idx, align 4
  %91 = ptrtoint ptr %cur_skb to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %cur_skb, align 4
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %92, i32 0, i32 17
  %93 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %94, i32 0, i32 2
  %95 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %96 to i32
  %cmp33 = icmp ult i32 %90, %conv
  br i1 %cmp33, label %cleanup.while.body_crit_edge, label %cleanup.while.end_crit_edge

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %if.end29.while.end_crit_edge
  %97 = ptrtoint ptr %frag_data12 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %frag_data12, align 4
  %tobool99.not = icmp eq ptr %98, null
  br i1 %tobool99.not, label %while.end.if.end109_crit_edge, label %do.end104

while.end.if.end109_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end109

do.end104:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kunmap_local_indexed(ptr noundef nonnull %98) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %99 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i212 = and i32 %99, -16384
  %100 = inttoptr i32 %and.i.i.i1.i212 to ptr
  %task.i.i.i213 = getelementptr inbounds %struct.thread_info, ptr %100, i32 0, i32 2
  %101 = ptrtoint ptr %task.i.i.i213 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %task.i.i.i213, align 8
  %pagefault_disabled.i.i.i214 = getelementptr inbounds %struct.task_struct, ptr %102, i32 0, i32 213
  %103 = ptrtoint ptr %pagefault_disabled.i.i.i214 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %pagefault_disabled.i.i.i214, align 8
  %dec.i.i.i215 = add i32 %104, -1
  store i32 %dec.i.i.i215, ptr %pagefault_disabled.i.i.i214, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %105 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i216 = and i32 %105, -16384
  %106 = inttoptr i32 %and.i.i.i.i216 to ptr
  %preempt_count.i.i.i217 = getelementptr inbounds %struct.thread_info, ptr %106, i32 0, i32 1
  %107 = ptrtoint ptr %preempt_count.i.i.i217 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %preempt_count.i.i.i217, align 4
  %sub.i.i218 = add i32 %108, -1
  store volatile i32 %sub.i.i218, ptr %preempt_count.i.i.i217, align 4
  %109 = ptrtoint ptr %frag_data12 to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr null, ptr %frag_data12, align 4
  br label %if.end109

if.end109:                                        ; preds = %do.end104, %while.end.if.end109_crit_edge
  %110 = ptrtoint ptr %root_skb to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %root_skb, align 4
  %112 = ptrtoint ptr %cur_skb to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %cur_skb, align 4
  %cmp111 = icmp eq ptr %111, %113
  br i1 %cmp111, label %land.lhs.true113, label %if.end109.if.else_crit_edge

if.end109.if.else_crit_edge:                      ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

land.lhs.true113:                                 ; preds = %if.end109
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %111, i32 0, i32 17
  %114 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %end.i.i, align 4
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %115, i32 0, i32 6
  %116 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %frag_list.i, align 8
  %cmp.i.not = icmp eq ptr %117, null
  br i1 %cmp.i.not, label %land.lhs.true113.if.else_crit_edge, label %land.lhs.true113.next_skb.backedge_crit_edge

land.lhs.true113.next_skb.backedge_crit_edge:     ; preds = %land.lhs.true113
  call void @__sanitizer_cov_trace_pc() #22
  br label %next_skb.backedge

land.lhs.true113.if.else_crit_edge:               ; preds = %land.lhs.true113
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

next_skb.backedge:                                ; preds = %if.else.next_skb.backedge_crit_edge, %land.lhs.true113.next_skb.backedge_crit_edge
  %storemerge = phi ptr [ %117, %land.lhs.true113.next_skb.backedge_crit_edge ], [ %121, %if.else.next_skb.backedge_crit_edge ]
  %118 = ptrtoint ptr %cur_skb to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %storemerge, ptr %cur_skb, align 4
  %119 = ptrtoint ptr %frag_idx to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 0, ptr %frag_idx, align 4
  br label %next_skb

if.else:                                          ; preds = %land.lhs.true113.if.else_crit_edge, %if.end109.if.else_crit_edge
  %120 = ptrtoint ptr %113 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %113, align 8
  %tobool123.not = icmp eq ptr %121, null
  br i1 %tobool123.not, label %if.else.cleanup131_crit_edge, label %if.else.next_skb.backedge_crit_edge

if.else.next_skb.backedge_crit_edge:              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %next_skb.backedge

if.else.cleanup131_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup131

cleanup131:                                       ; preds = %if.else.cleanup131_crit_edge, %cleanup.thread, %if.then14, %do.end, %if.then.cleanup131_crit_edge
  %retval.3 = phi i32 [ %sub18, %if.then14 ], [ 0, %do.end ], [ 0, %if.then.cleanup131_crit_edge ], [ %sub70, %cleanup.thread ], [ 0, %if.else.cleanup131_crit_edge ]
  ret i32 %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_abort_seq_read(ptr nocapture noundef readonly %st) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %frag_data = getelementptr inbounds %struct.skb_seq_state, ptr %st, i32 0, i32 6
  %0 = ptrtoint ptr %frag_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %frag_data, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kunmap_local_indexed(ptr noundef nonnull %1) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %2 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i1.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i.i.i, align 8
  %pagefault_disabled.i.i.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 213
  %6 = ptrtoint ptr %pagefault_disabled.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pagefault_disabled.i.i.i, align 8
  %dec.i.i.i = add i32 %7, -1
  store i32 %dec.i.i.i, ptr %pagefault_disabled.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %8 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_find_text(ptr noundef %skb, i32 noundef %from, i32 noundef %to, ptr noundef %config) #0 align 64 {
entry:
  %state = alloca %struct.ts_state, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %state) #20
  %0 = getelementptr inbounds i8, ptr %state, i32 36
  %1 = call ptr @memset(ptr %0, i32 255, i32 16)
  %get_next_block = getelementptr inbounds %struct.ts_config, ptr %config, i32 0, i32 2
  %2 = ptrtoint ptr %get_next_block to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @skb_ts_get_next_block, ptr %get_next_block, align 4
  %finish = getelementptr inbounds %struct.ts_config, ptr %config, i32 0, i32 3
  %3 = ptrtoint ptr %finish to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @skb_ts_finish, ptr %finish, align 4
  %cb = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1
  %4 = ptrtoint ptr %cb to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %from, ptr %cb, align 4
  %upper_offset.i = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1, i32 4
  %5 = ptrtoint ptr %upper_offset.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %to, ptr %upper_offset.i, align 4
  %cur_skb.i = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1, i32 20
  %6 = ptrtoint ptr %cur_skb.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %skb, ptr %cur_skb.i, align 4
  %root_skb.i = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1, i32 16
  %7 = ptrtoint ptr %root_skb.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %skb, ptr %root_skb.i, align 4
  %stepped_offset.i = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1, i32 12
  %8 = ptrtoint ptr %stepped_offset.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %stepped_offset.i, align 4
  %frag_idx.i = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1, i32 8
  %9 = ptrtoint ptr %frag_idx.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %frag_idx.i, align 4
  %frag_data.i = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1, i32 24
  %10 = ptrtoint ptr %frag_data.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %frag_data.i, align 4
  %frag_off.i = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1, i32 28
  %11 = ptrtoint ptr %frag_off.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %frag_off.i, align 4
  %12 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %state, align 4
  %13 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %config, align 4
  %find.i.i = getelementptr inbounds %struct.ts_ops, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %find.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %find.i.i, align 4
  %call.i.i = call i32 %16(ptr noundef %config, ptr noundef nonnull %state) #20
  %17 = ptrtoint ptr %finish to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %finish, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %entry.textsearch_find.exit_crit_edge, label %if.then.i.i

entry.textsearch_find.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %textsearch_find.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  call void %18(ptr noundef %config, ptr noundef nonnull %state) #20
  br label %textsearch_find.exit

textsearch_find.exit:                             ; preds = %if.then.i.i, %entry.textsearch_find.exit_crit_edge
  %sub = sub i32 %to, %from
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %sub)
  %cmp.not = icmp ugt i32 %call.i.i, %sub
  %spec.select = select i1 %cmp.not, i32 -1, i32 %call.i.i
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %state) #20
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @skb_ts_get_next_block(i32 noundef %offset, ptr nocapture noundef writeonly %text, ptr nocapture noundef readnone %conf, ptr nocapture noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %cb = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1
  %call = tail call i32 @skb_seq_read(i32 noundef %offset, ptr noundef %text, ptr noundef %cb)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @skb_ts_finish(ptr nocapture noundef readnone %conf, ptr nocapture noundef readonly %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %frag_data.i = getelementptr inbounds %struct.ts_state, ptr %state, i32 0, i32 1, i32 24
  %0 = ptrtoint ptr %frag_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %frag_data.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.skb_abort_seq_read.exit_crit_edge, label %do.end.i

entry.skb_abort_seq_read.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_abort_seq_read.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kunmap_local_indexed(ptr noundef nonnull %1) #20
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !389
  %2 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i1.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i1.i.i to ptr
  %task.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %task.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %task.i.i.i.i, align 8
  %pagefault_disabled.i.i.i.i = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 213
  %6 = ptrtoint ptr %pagefault_disabled.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pagefault_disabled.i.i.i.i, align 8
  %dec.i.i.i.i = add i32 %7, -1
  store i32 %dec.i.i.i.i, ptr %pagefault_disabled.i.i.i.i, align 8
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !390
  %8 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  br label %skb_abort_seq_read.exit

skb_abort_seq_read.exit:                          ; preds = %do.end.i, %entry.skb_abort_seq_read.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_append_pagefrags(ptr noundef %skb, ptr noundef %page, i32 noundef %offset, i32 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %3 to i32
  %tobool.not.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i, label %entry.skb_zcopy.exit.i_crit_edge, label %land.rhs.i.i

entry.skb_zcopy.exit.i_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy.exit.i

land.rhs.i.i:                                     ; preds = %entry
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %1, align 8
  %6 = and i8 %5, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool1.not.i.i = icmp eq i8 %6, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.skb_zcopy.exit.i_crit_edge, label %cond.true.i.i

land.rhs.i.i.skb_zcopy.exit.i_crit_edge:          ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_zcopy.exit.i

cond.true.i.i:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 11
  %7 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %destructor_arg.i.i, align 4
  %phi.cmp.i = icmp ne ptr %8, null
  br label %skb_zcopy.exit.i

skb_zcopy.exit.i:                                 ; preds = %cond.true.i.i, %land.rhs.i.i.skb_zcopy.exit.i_crit_edge, %entry.skb_zcopy.exit.i_crit_edge
  %cond.i.i = phi i1 [ %phi.cmp.i, %cond.true.i.i ], [ false, %land.rhs.i.i.skb_zcopy.exit.i_crit_edge ], [ false, %entry.skb_zcopy.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not.i = icmp eq i8 %3, 0
  %or.cond.i = or i1 %tobool1.not.i, %cond.i.i
  br i1 %or.cond.i, label %skb_zcopy.exit.i.if.else_crit_edge, label %if.then2.i

skb_zcopy.exit.i.if.else_crit_edge:               ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.then2.i:                                       ; preds = %skb_zcopy.exit.i
  %sub.i = add nsw i32 %conv, -1
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %sub.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i, align 4
  %cmp.i = icmp eq ptr %10, %page
  br i1 %cmp.i, label %skb_can_coalesce.exit, label %if.then2.i.if.else_crit_edge

if.then2.i.if.else_crit_edge:                     ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

skb_can_coalesce.exit:                            ; preds = %if.then2.i
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %sub.i, i32 2
  %11 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bv_offset.i.i, align 4
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %1, i32 0, i32 12, i32 %sub.i, i32 1
  %13 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %bv_len.i.i, align 4
  %add.i = add i32 %14, %12
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %offset)
  %cmp7.i = icmp eq i32 %add.i, %offset
  br i1 %cmp7.i, label %if.then, label %skb_can_coalesce.exit.if.else_crit_edge

skb_can_coalesce.exit.if.else_crit_edge:          ; preds = %skb_can_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.then:                                          ; preds = %skb_can_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #22
  %15 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %bv_len.i.i, align 4
  %add.i18 = add i32 %16, %size
  store i32 %add.i18, ptr %bv_len.i.i, align 4
  br label %cleanup

if.else:                                          ; preds = %skb_can_coalesce.exit.if.else_crit_edge, %if.then2.i.if.else_crit_edge, %skb_zcopy.exit.i.if.else_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 17, i8 %3)
  %cmp = icmp ult i8 %3, 17
  br i1 %cmp, label %if.then4, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then4:                                         ; preds = %if.else
  %17 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %17, align 4
  %and.i.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i19 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i19, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %19, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  %20 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %20, %if.end.i.i ]
  %21 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %21, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  %22 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %23, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !373

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @dump_page(ptr noundef %21, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #20
  %24 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@skb_append_pagefrags, %if.then.i.i.i.i)) #20
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !376

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %21, i32 noundef 1) #20
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %25 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %end.i, align 4
  %arrayidx.i.i = getelementptr %struct.skb_shared_info, ptr %26, i32 0, i32 12, i32 %conv
  %27 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %page, ptr %arrayidx.i.i, align 4
  %bv_offset.i.i21 = getelementptr %struct.skb_shared_info, ptr %26, i32 0, i32 12, i32 %conv, i32 2
  %28 = ptrtoint ptr %bv_offset.i.i21 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %offset, ptr %bv_offset.i.i21, align 4
  %bv_len.i.i.i = getelementptr %struct.skb_shared_info, ptr %26, i32 0, i32 12, i32 %conv, i32 1
  %29 = ptrtoint ptr %bv_len.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %size, ptr %bv_len.i.i.i, align 4
  %30 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %17, align 4
  %and.i.i.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !374

if.then.i.i.i:                                    ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i = add i32 %31, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  %32 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %32, %if.end.i.i.i ]
  %33 = inttoptr i32 %retval.0.i.i.i to ptr
  %34 = getelementptr inbounds %struct.page, ptr %33, i32 0, i32 1
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 4
  %37 = ptrtoint ptr %36 to i32
  %and.i8.i.i = and i32 %37, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i8.i.i, 0
  br i1 %tobool.i.not.i.i, label %_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge, label %if.then.i.i22

_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge: ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_fill_page_desc.exit

if.then.i.i22:                                    ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %38 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %bf.set.i.i = or i8 %bf.load.i.i, 2
  store i8 %bf.set.i.i, ptr %pfmemalloc.i.i, align 2
  br label %skb_fill_page_desc.exit

skb_fill_page_desc.exit:                          ; preds = %if.then.i.i22, %_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge
  %conv.i = add nuw nsw i8 %3, 1
  %39 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %end.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %conv.i, ptr %nr_frags.i, align 2
  br label %cleanup

cleanup:                                          ; preds = %skb_fill_page_desc.exit, %if.else.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -90, %if.else.cleanup_crit_edge ], [ 0, %skb_fill_page_desc.exit ], [ 0, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_pull_rcsum(ptr nocapture noundef %skb, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %len)
  %cmp = icmp ult i32 %1, %len
  br i1 %cmp, label %do.body4, label %do.end9, !prof !373

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3838, 0\0A.popsection", ""() #20, !srcloc !436
  unreachable

do.end9:                                          ; preds = %entry
  %data1 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %2 = ptrtoint ptr %data1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data1, align 4
  %sub.i = sub i32 %1, %len
  %4 = ptrtoint ptr %len2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %sub.i, ptr %len2, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %5 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %6)
  %cmp.i = icmp ult i32 %sub.i, %6
  br i1 %cmp.i, label %do.body4.i, label %__skb_pull.exit, !prof !373

do.body4.i:                                       ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #20, !srcloc !422
  unreachable

__skb_pull.exit:                                  ; preds = %do.end9
  %add.ptr.i = getelementptr i8, ptr %3, i32 %len
  %7 = ptrtoint ptr %data1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr.i, ptr %data1, align 4
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %8 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.lshr.i = lshr i16 %bf.load.i, 9
  %trunc.i = trunc i16 %bf.lshr.i to i2
  %9 = zext i2 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.55)
  switch i2 %trunc.i, label %__skb_pull.exit.skb_postpull_rcsum.exit_crit_edge [
    i2 -2, label %if.then.i
    i2 -1, label %land.lhs.true.i
  ]

__skb_pull.exit.skb_postpull_rcsum.exit_crit_edge: ; preds = %__skb_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_postpull_rcsum.exit

if.then.i:                                        ; preds = %__skb_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  %10 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 8
  %sub.i.i = sub i32 0, %12
  %call2.i = tail call i32 @csum_partial(ptr noundef %3, i32 noundef %len, i32 noundef %sub.i.i) #20
  %sub.i25.i = sub i32 0, %call2.i
  %13 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub.i25.i, ptr %10, align 8
  br label %skb_postpull_rcsum.exit

land.lhs.true.i:                                  ; preds = %__skb_pull.exit
  %14 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %14, align 8
  %conv.i.i = zext i16 %16 to i32
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %17 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %head.i.i.i, align 8
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %18 to i32
  %sub.ptr.sub.i.neg.i.i = sub i32 %conv.i.i, %sub.ptr.lhs.cast.i.i.i
  %sub.i26.i = add i32 %sub.ptr.sub.i.neg.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i26.i)
  %cmp13.i = icmp slt i32 %sub.i26.i, 0
  br i1 %cmp13.i, label %if.then15.i, label %land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge

land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_postpull_rcsum.exit

if.then15.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear18.i = and i16 %bf.load.i, -1537
  %19 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %bf.clear18.i, ptr %ip_summed.i, align 8
  br label %skb_postpull_rcsum.exit

skb_postpull_rcsum.exit:                          ; preds = %if.then15.i, %land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge, %if.then.i, %__skb_pull.exit.skb_postpull_rcsum.exit_crit_edge
  %20 = ptrtoint ptr %data1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data1, align 4
  ret ptr %21
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_segment_list(ptr noundef %skb, i64 noundef %features, i32 noundef %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %frag_list, align 8
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %4 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head.i.i, align 8
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %6 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %mac_header.i.i, align 2
  %add.ptr.i = getelementptr %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 32
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %add.ptr.i, align 4
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %10 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i121 = zext i16 %11 to i32
  %add.ptr.i.i122 = getelementptr i8, ptr %5, i32 %conv.i.i121
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %12 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i123 = ptrtoint ptr %add.ptr.i.i122 to i32
  %sub.ptr.rhs.cast.i124 = ptrtoint ptr %13 to i32
  %sub.ptr.sub.i.neg = sub i32 %sub.ptr.rhs.cast.i124, %sub.ptr.lhs.cast.i123
  %add = add i32 %sub.ptr.sub.i.neg, %offset
  %idx.neg.i = sub i32 0, %add
  %add.ptr.i126 = getelementptr i8, ptr %13, i32 %idx.neg.i
  store ptr %add.ptr.i126, ptr %data.i, align 4
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %14 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %len1.i, align 4
  %add.i = add i32 %add, %15
  store i32 %add.i, ptr %len1.i, align 4
  %cmp.i = icmp ult ptr %add.ptr.i126, %5
  br i1 %cmp.i, label %if.then.i, label %skb_push.exit, !prof !373

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %16 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_under_panic(ptr noundef %skb, i32 noundef %add, ptr noundef %16) #20
  unreachable

skb_push.exit:                                    ; preds = %entry
  %conv.i.i = zext i16 %7 to i32
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 %conv.i.i
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %5 to i32
  %17 = add i32 %9, %sub.ptr.rhs.cast.i
  %sub.i = sub i32 %sub.ptr.lhs.cast.i, %17
  %18 = ptrtoint ptr %frag_list to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %frag_list, align 8
  %sub33 = sub i32 0, %sub.i
  %add34 = add i32 %sub.i, %offset
  %and.i = and i64 %features, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  %and5.i = and i64 %features, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i)
  %tobool6.not.i = icmp eq i64 %and5.i, 0
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %skb_push.exit
  %list_skb.0 = phi ptr [ %3, %skb_push.exit ], [ %20, %do.cond.do.body_crit_edge ]
  %delta_truesize.0 = phi i32 [ 0, %skb_push.exit ], [ %add6, %do.cond.do.body_crit_edge ]
  %delta_len.0 = phi i32 [ 0, %skb_push.exit ], [ %add25, %do.cond.do.body_crit_edge ]
  %tail.0 = phi ptr [ null, %skb_push.exit ], [ %nskb.0, %do.cond.do.body_crit_edge ]
  %19 = ptrtoint ptr %list_skb.0 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %list_skb.0, align 8
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %list_skb.0, i32 0, i32 20
  %21 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %truesize, align 8
  %add6 = add i32 %22, %delta_truesize.0
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %list_skb.0, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %23 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp.i128.not = icmp eq i32 %24, 1
  br i1 %cmp.i128.not, label %do.body.if.end12_crit_edge, label %if.then

do.body.if.end12_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.then:                                          ; preds = %do.body
  %call8 = tail call ptr @skb_clone(ptr noundef %list_skb.0, i32 noundef 2592)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.then.if.end12_crit_edge, label %if.then10

if.then.if.end12_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.then10:                                        ; preds = %if.then
  tail call void @consume_skb(ptr noundef %list_skb.0)
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %call8, i32 0, i32 12
  %25 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %if.then10.if.end12_crit_edge, label %skb_cloned.exit.i

if.then10.if.end12_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

skb_cloned.exit.i:                                ; preds = %if.then10
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call8, i32 0, i32 17
  %26 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %end.i.i.i, align 4
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 10
  %call.i.i.i.i129 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #20
  %28 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i11.i = and i32 %29, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i11.i)
  %cmp.i.not.i = icmp eq i32 %and.i11.i, 1
  br i1 %cmp.i.not.i, label %skb_cloned.exit.i.if.end12_crit_edge, label %if.then6.i

skb_cloned.exit.i.if.end12_crit_edge:             ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.then6.i:                                       ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %call7.i = tail call i32 @pskb_expand_head(ptr noundef nonnull %call8, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #20
  br label %if.end12

if.end12:                                         ; preds = %if.then6.i, %skb_cloned.exit.i.if.end12_crit_edge, %if.then10.if.end12_crit_edge, %if.then.if.end12_crit_edge, %do.body.if.end12_crit_edge
  %nskb.0 = phi ptr [ %list_skb.0, %do.body.if.end12_crit_edge ], [ %list_skb.0, %if.then.if.end12_crit_edge ], [ %call8, %if.then10.if.end12_crit_edge ], [ %call8, %skb_cloned.exit.i.if.end12_crit_edge ], [ %call8, %if.then6.i ]
  %err.0 = phi i32 [ 0, %do.body.if.end12_crit_edge ], [ -12, %if.then.if.end12_crit_edge ], [ 0, %if.then10.if.end12_crit_edge ], [ 0, %skb_cloned.exit.i.if.end12_crit_edge ], [ %call7.i, %if.then6.i ]
  %tobool13.not = icmp eq ptr %tail.0, null
  %skb.tail.0 = select i1 %tobool13.not, ptr %skb, ptr %tail.0
  %30 = ptrtoint ptr %skb.tail.0 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %nskb.0, ptr %skb.tail.0, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool19.not = icmp eq i32 %err.0, 0
  br i1 %tobool19.not, label %if.end24, label %if.then22, !prof !374

if.then22:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  %31 = ptrtoint ptr %nskb.0 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %20, ptr %nskb.0, align 8
  br label %err_linearize

if.end24:                                         ; preds = %if.end12
  %len = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 6
  %32 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %len, align 4
  %add25 = add i32 %33, %delta_len.0
  %head.i.i130 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 18
  %34 = ptrtoint ptr %head.i.i130 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %head.i.i130, align 8
  %network_header.i.i131 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 20
  %36 = ptrtoint ptr %network_header.i.i131 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %network_header.i.i131, align 4
  %conv.i.i132 = zext i16 %37 to i32
  %add.ptr.i.i133 = getelementptr i8, ptr %35, i32 %conv.i.i132
  %data.i134 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 19
  %38 = ptrtoint ptr %data.i134 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %data.i134, align 4
  %sub.ptr.lhs.cast.i135 = ptrtoint ptr %add.ptr.i.i133 to i32
  %sub.ptr.rhs.cast.i136 = ptrtoint ptr %39 to i32
  %sub.ptr.sub.i137.neg = sub i32 %sub.ptr.rhs.cast.i136, %sub.ptr.lhs.cast.i135
  %add28 = add i32 %sub.ptr.sub.i137.neg, %offset
  %idx.neg.i139 = sub i32 0, %add28
  %add.ptr.i140 = getelementptr i8, ptr %39, i32 %idx.neg.i139
  store ptr %add.ptr.i140, ptr %data.i134, align 4
  %add.i142 = add i32 %add28, %33
  store i32 %add.i142, ptr %len, align 4
  %cmp.i144 = icmp ult ptr %add.ptr.i140, %35
  br i1 %cmp.i144, label %if.then.i145, label %skb_push.exit146, !prof !373

if.then.i145:                                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  %40 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_under_panic(ptr noundef %nskb.0, i32 noundef %add28, ptr noundef %40) #20
  unreachable

skb_push.exit146:                                 ; preds = %if.end24
  tail call void @skb_release_head_state(ptr noundef %nskb.0)
  tail call fastcc void @__copy_skb_header(ptr noundef %nskb.0, ptr noundef %skb)
  %41 = ptrtoint ptr %data.i134 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %data.i134, align 4
  %43 = ptrtoint ptr %head.i.i130 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %head.i.i130, align 8
  %sub.ptr.lhs.cast.i149 = ptrtoint ptr %42 to i32
  %sub.ptr.rhs.cast.i150 = ptrtoint ptr %44 to i32
  %sub.ptr.sub.i151 = sub i32 %sub.ptr.lhs.cast.i149, %sub.ptr.rhs.cast.i150
  %45 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %data.i, align 4
  %47 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i154 = ptrtoint ptr %46 to i32
  %sub.ptr.rhs.cast.i155 = ptrtoint ptr %48 to i32
  %sub.ptr.sub.i156.neg = sub i32 %sub.ptr.rhs.cast.i155, %sub.ptr.lhs.cast.i154
  %sub32 = add i32 %sub.ptr.sub.i156.neg, %sub.ptr.sub.i151
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15
  %49 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %50 = and i16 %bf.load.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %50)
  %cmp.i157 = icmp eq i16 %50, 1536
  br i1 %cmp.i157, label %if.then.i158, label %entry.if.end_crit_edge.i

entry.if.end_crit_edge.i:                         ; preds = %skb_push.exit146
  call void @__sanitizer_cov_trace_pc() #22
  %.pre.i = trunc i32 %sub32 to i16
  br label %if.end.i

if.then.i158:                                     ; preds = %skb_push.exit146
  call void @__sanitizer_cov_trace_pc() #22
  %51 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 5
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %51, align 8
  %54 = trunc i32 %sub32 to i16
  %conv3.i = add i16 %53, %54
  store i16 %conv3.i, ptr %51, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i158, %entry.if.end_crit_edge.i
  %.pre-phi.i = phi i16 [ %.pre.i, %entry.if.end_crit_edge.i ], [ %54, %if.then.i158 ]
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 19
  %55 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %transport_header.i, align 2
  %conv6.i = add i16 %56, %.pre-phi.i
  store i16 %conv6.i, ptr %transport_header.i, align 2
  %57 = ptrtoint ptr %network_header.i.i131 to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %network_header.i.i131, align 4
  %conv9.i = add i16 %58, %.pre-phi.i
  store i16 %conv9.i, ptr %network_header.i.i131, align 4
  %mac_header.i.i159 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 21
  %59 = ptrtoint ptr %mac_header.i.i159 to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %mac_header.i.i159, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %60)
  %cmp.i.not.i160 = icmp eq i16 %60, -1
  br i1 %cmp.i.not.i160, label %if.end.i.skb_headers_offset_update.exit_crit_edge, label %if.then10.i

if.end.i.skb_headers_offset_update.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_headers_offset_update.exit

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv13.i = add i16 %60, %.pre-phi.i
  %61 = ptrtoint ptr %mac_header.i.i159 to i32
  call void @__asan_store2_noabort(i32 %61)
  store i16 %conv13.i, ptr %mac_header.i.i159, align 2
  br label %skb_headers_offset_update.exit

skb_headers_offset_update.exit:                   ; preds = %if.then10.i, %if.end.i.skb_headers_offset_update.exit_crit_edge
  %inner_transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 15
  %62 = ptrtoint ptr %inner_transport_header.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %inner_transport_header.i, align 2
  %conv17.i = add i16 %63, %.pre-phi.i
  store i16 %conv17.i, ptr %inner_transport_header.i, align 2
  %inner_network_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 16
  %64 = ptrtoint ptr %inner_network_header.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %inner_network_header.i, align 4
  %conv20.i = add i16 %65, %.pre-phi.i
  store i16 %conv20.i, ptr %inner_network_header.i, align 4
  %inner_mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 17
  %66 = ptrtoint ptr %inner_mac_header.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %inner_mac_header.i, align 2
  %conv23.i = add i16 %67, %.pre-phi.i
  store i16 %conv23.i, ptr %inner_mac_header.i, align 2
  %68 = ptrtoint ptr %data.i134 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %data.i134, align 4
  %add.ptr = getelementptr i8, ptr %69, i32 %sub33
  %70 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %data.i, align 4
  %add.ptr.i162 = getelementptr i8, ptr %71, i32 %sub33
  %72 = call ptr @memcpy(ptr %add.ptr, ptr %add.ptr.i162, i32 %add34)
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 7
  %73 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool.i.not.i = icmp eq i32 %74, 0
  br i1 %tobool.i.not.i, label %skb_headers_offset_update.exit.do.cond_crit_edge, label %land.rhs.i

skb_headers_offset_update.exit.do.cond_crit_edge: ; preds = %skb_headers_offset_update.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.cond

land.rhs.i:                                       ; preds = %skb_headers_offset_update.exit
  %end.i.i.i163 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 17
  %75 = ptrtoint ptr %end.i.i.i163 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %end.i.i.i163, align 4
  %frag_list.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %76, i32 0, i32 6
  %77 = ptrtoint ptr %frag_list.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %frag_list.i.i, align 8
  %cmp.i.i = icmp ne ptr %78, null
  %or.cond.i = and i1 %tobool.not.i, %cmp.i.i
  br i1 %or.cond.i, label %land.rhs.i.land.lhs.true_crit_edge, label %lor.rhs.i

land.rhs.i.land.lhs.true_crit_edge:               ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

lor.rhs.i:                                        ; preds = %land.rhs.i
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %76, i32 0, i32 2
  %79 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %80)
  %tobool3.not.i = icmp ne i8 %80, 0
  %or.cond = and i1 %tobool6.not.i, %tobool3.not.i
  br i1 %or.cond, label %lor.rhs.i.land.lhs.true_crit_edge, label %lor.rhs.i.do.cond_crit_edge

lor.rhs.i.do.cond_crit_edge:                      ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.cond

lor.rhs.i.land.lhs.true_crit_edge:                ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.rhs.i.land.lhs.true_crit_edge, %land.rhs.i.land.lhs.true_crit_edge
  %call.i = tail call ptr @__pskb_pull_tail(ptr noundef %nskb.0, i32 noundef %74) #20
  %tobool.not.i164.not = icmp eq ptr %call.i, null
  br i1 %tobool.not.i164.not, label %land.lhs.true.err_linearize_crit_edge, label %land.lhs.true.do.cond_crit_edge

land.lhs.true.do.cond_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.cond

land.lhs.true.err_linearize_crit_edge:            ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_linearize

do.cond:                                          ; preds = %land.lhs.true.do.cond_crit_edge, %lor.rhs.i.do.cond_crit_edge, %skb_headers_offset_update.exit.do.cond_crit_edge
  %tobool40.not = icmp eq ptr %20, null
  br i1 %tobool40.not, label %do.end, label %do.cond.do.body_crit_edge

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.end:                                           ; preds = %do.cond
  %truesize41 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %81 = ptrtoint ptr %truesize41 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %truesize41, align 8
  %sub42 = sub i32 %82, %add6
  store i32 %sub42, ptr %truesize41, align 8
  %data_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %83 = ptrtoint ptr %data_len to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %data_len, align 8
  %sub44 = sub i32 %84, %add25
  store i32 %sub44, ptr %data_len, align 8
  %85 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %len1.i, align 4
  %sub47 = sub i32 %86, %add25
  store i32 %sub47, ptr %len1.i, align 4
  %87 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %end.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %88, i32 0, i32 4
  %89 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 0, ptr %gso_size.i, align 4
  %90 = load ptr, ptr %end.i, align 4
  %gso_segs.i = getelementptr inbounds %struct.skb_shared_info, ptr %90, i32 0, i32 5
  %91 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 0, ptr %gso_segs.i, align 2
  %92 = load ptr, ptr %end.i, align 4
  %gso_type.i = getelementptr inbounds %struct.skb_shared_info, ptr %92, i32 0, i32 8
  %93 = ptrtoint ptr %gso_type.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 0, ptr %gso_type.i, align 8
  %prev = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 1
  %94 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %nskb.0, ptr %prev, align 4
  %95 = load i32, ptr %data_len, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool.i.not.i166 = icmp eq i32 %95, 0
  br i1 %tobool.i.not.i166, label %do.end.if.end54_crit_edge, label %land.rhs.i173

do.end.if.end54_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54

land.rhs.i173:                                    ; preds = %do.end
  %96 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %end.i, align 4
  %frag_list.i.i168 = getelementptr inbounds %struct.skb_shared_info, ptr %97, i32 0, i32 6
  %98 = ptrtoint ptr %frag_list.i.i168 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %frag_list.i.i168, align 8
  %cmp.i.i169 = icmp ne ptr %99, null
  %or.cond.i172 = and i1 %tobool.not.i, %cmp.i.i169
  br i1 %or.cond.i172, label %land.rhs.i173.land.lhs.true50_crit_edge, label %lor.rhs.i176

land.rhs.i173.land.lhs.true50_crit_edge:          ; preds = %land.rhs.i173
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true50

lor.rhs.i176:                                     ; preds = %land.rhs.i173
  %nr_frags.i174 = getelementptr inbounds %struct.skb_shared_info, ptr %97, i32 0, i32 2
  %100 = ptrtoint ptr %nr_frags.i174 to i32
  call void @__asan_load1_noabort(i32 %100)
  %101 = load i8, ptr %nr_frags.i174, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %101)
  %tobool3.not.i175 = icmp ne i8 %101, 0
  %or.cond189 = and i1 %tobool6.not.i, %tobool3.not.i175
  br i1 %or.cond189, label %lor.rhs.i176.land.lhs.true50_crit_edge, label %lor.rhs.i176.if.end54_crit_edge

lor.rhs.i176.if.end54_crit_edge:                  ; preds = %lor.rhs.i176
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54

lor.rhs.i176.land.lhs.true50_crit_edge:           ; preds = %lor.rhs.i176
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true50

land.lhs.true50:                                  ; preds = %lor.rhs.i176.land.lhs.true50_crit_edge, %land.rhs.i173.land.lhs.true50_crit_edge
  %call.i182 = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %95) #20
  %tobool.not.i183.not = icmp eq ptr %call.i182, null
  br i1 %tobool.not.i183.not, label %land.lhs.true50.err_linearize_crit_edge, label %land.lhs.true50.if.end54_crit_edge

land.lhs.true50.if.end54_crit_edge:               ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54

land.lhs.true50.err_linearize_crit_edge:          ; preds = %land.lhs.true50
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_linearize

if.end54:                                         ; preds = %land.lhs.true50.if.end54_crit_edge, %lor.rhs.i176.if.end54_crit_edge, %do.end.if.end54_crit_edge
  %users.i185 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i185, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %users.i185, i32 1, i32 3, i32 1) #20
  %102 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i185, ptr %users.i185, i32 1, ptr elementtype(i32) %users.i185) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %102, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end54.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !373

if.end54.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end54
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %103 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %103)
  %.not.i.i.i.i = icmp sgt i32 %103, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.cleanup_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.cleanup_crit_edge:                ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end54.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end54.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %users.i185, i32 noundef %.sink.i.i.i.i) #20
  br label %cleanup

err_linearize:                                    ; preds = %land.lhs.true50.err_linearize_crit_edge, %land.lhs.true.err_linearize_crit_edge, %if.then22
  %104 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %skb, align 8
  %tobool.not4.i = icmp eq ptr %105, null
  br i1 %tobool.not4.i, label %err_linearize.kfree_skb_list.exit_crit_edge, label %err_linearize.while.body.i_crit_edge

err_linearize.while.body.i_crit_edge:             ; preds = %err_linearize
  br label %while.body.i

err_linearize.kfree_skb_list.exit_crit_edge:      ; preds = %err_linearize
  call void @__sanitizer_cov_trace_pc() #22
  br label %kfree_skb_list.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %err_linearize.while.body.i_crit_edge
  %segs.addr.05.i = phi ptr [ %107, %while.body.i.while.body.i_crit_edge ], [ %105, %err_linearize.while.body.i_crit_edge ]
  %106 = ptrtoint ptr %segs.addr.05.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %segs.addr.05.i, align 8
  tail call fastcc void @kfree_skb(ptr noundef nonnull %segs.addr.05.i) #20
  %tobool.not.i186 = icmp eq ptr %107, null
  br i1 %tobool.not.i186, label %while.body.i.kfree_skb_list.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.body.i.kfree_skb_list.exit_crit_edge:       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %kfree_skb_list.exit

kfree_skb_list.exit:                              ; preds = %while.body.i.kfree_skb_list.exit_crit_edge, %err_linearize.kfree_skb_list.exit_crit_edge
  %108 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr null, ptr %skb, align 8
  br label %cleanup

cleanup:                                          ; preds = %kfree_skb_list.exit, %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -12 to ptr), %kfree_skb_list.exit ], [ %skb, %if.else.i.i.i.i.cleanup_crit_edge ], [ %skb, %if.end15.sink.split.i.i.i.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_segment(ptr noundef %head_skb, i64 noundef %features) #0 align 64 {
entry:
  %ops.i = alloca %struct.skb_checksum_ops, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %frag_list, align 8
  %frags = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 12
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %gso_size, align 4
  %conv = zext i16 %5 to i32
  %data = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 19
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %data, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 18
  %8 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %head.i, align 8
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 15, i32 0, i32 21
  %10 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %mac_header.i, align 2
  %conv.i = zext i16 %11 to i32
  %add.ptr.i = getelementptr i8, ptr %9, i32 %conv.i
  %sub.ptr.lhs.cast = ptrtoint ptr %7 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.rhs.cast.i = ptrtoint ptr %9 to i32
  %add.ptr.i866 = getelementptr %struct.sk_buff, ptr %head_skb, i32 0, i32 3, i32 32
  %12 = ptrtoint ptr %add.ptr.i866 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %add.ptr.i866, align 4
  %14 = add i32 %13, %sub.ptr.rhs.cast.i
  %sub.i = sub i32 %sub.ptr.rhs.cast, %14
  %len5 = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 6
  %15 = ptrtoint ptr %len5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %len5, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 2
  %17 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %nr_frags, align 2
  %conv7 = zext i8 %18 to i32
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end22_crit_edge, label %land.lhs.true

entry.if.end22_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

land.lhs.true:                                    ; preds = %entry
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 12
  %19 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load = load i8, ptr %head_frag, align 2
  %20 = and i8 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool8.not = icmp eq i8 %20, 0
  br i1 %tobool8.not, label %land.lhs.true9, label %land.lhs.true.if.end22_crit_edge

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

land.lhs.true9:                                   ; preds = %land.lhs.true
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 6
  %21 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 7
  %23 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %24)
  %tobool11.not = icmp eq i32 %22, %24
  br i1 %tobool11.not, label %land.lhs.true9.if.end22_crit_edge, label %land.lhs.true12

land.lhs.true9.if.end22_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %gso_type = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 8
  %25 = ptrtoint ptr %gso_type to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %gso_type, align 8
  %and = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool14.not = icmp eq i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %5)
  %cmp.not = icmp eq i16 %5, -1
  %or.cond = select i1 %tobool14.not, i1 true, i1 %cmp.not
  br i1 %or.cond, label %land.lhs.true12.if.end22_crit_edge, label %land.lhs.true16

land.lhs.true12.if.end22_crit_edge:               ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

land.lhs.true16:                                  ; preds = %land.lhs.true12
  call void @__sanitizer_cov_trace_pc() #22
  %data_len.i871 = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 7
  %27 = ptrtoint ptr %data_len.i871 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %data_len.i871, align 8
  %sub.i872 = sub i32 %16, %28
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i872, i32 %conv)
  %cmp18.not = icmp eq i32 %sub.i872, %conv
  %and21 = and i64 %features, -2
  %spec.select = select i1 %cmp18.not, i64 %features, i64 %and21
  br label %if.end22

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true12.if.end22_crit_edge, %land.lhs.true9.if.end22_crit_edge, %land.lhs.true.if.end22_crit_edge, %entry.if.end22_crit_edge
  %features.addr.0 = phi i64 [ %features, %land.lhs.true.if.end22_crit_edge ], [ %features, %land.lhs.true12.if.end22_crit_edge ], [ %features, %land.lhs.true9.if.end22_crit_edge ], [ %features, %entry.if.end22_crit_edge ], [ %spec.select, %land.lhs.true16 ]
  %idx.neg.i = sub i32 0, %sub.ptr.sub
  %add.ptr.i873 = getelementptr i8, ptr %7, i32 %idx.neg.i
  %29 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %add.ptr.i873, ptr %data, align 4
  %add.i = add i32 %sub.ptr.sub, %16
  %30 = ptrtoint ptr %len5 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %add.i, ptr %len5, align 4
  %call24 = tail call zeroext i16 @skb_network_protocol(ptr noundef %head_skb, ptr noundef null) #20
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %call24)
  %tobool25.not = icmp eq i16 %call24, 0
  br i1 %tobool25.not, label %if.end22.cleanup574_crit_edge, label %if.end31, !prof !373

if.end22.cleanup574_crit_edge:                    ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup574

if.end31:                                         ; preds = %if.end22
  %and32 = and i64 %features.addr.0, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and32)
  %tobool33.not = icmp eq i64 %and32, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 -30458, i16 %call24)
  %cmp.i = icmp eq i16 %call24, -30458
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #22
  %and.i = and i64 %features.addr.0, 34359738368
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i = icmp ne i64 %and.i, 0
  br label %can_checksum_protocol.exit

if.end.i:                                         ; preds = %if.end31
  %and3.i = and i64 %features.addr.0, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and3.i)
  %tobool4.not.i = icmp eq i64 %and3.i, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %if.end.i.can_checksum_protocol.exit_crit_edge

if.end.i.can_checksum_protocol.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %can_checksum_protocol.exit

if.end6.i:                                        ; preds = %if.end.i
  %31 = zext i16 %call24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.56)
  switch i16 %call24, label %if.end6.i.normal_crit_edge [
    i16 2048, label %sw.bb.i
    i16 -31011, label %sw.bb12.i
  ]

if.end6.i.normal_crit_edge:                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %normal

sw.bb.i:                                          ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  %and8.i = and i64 %features.addr.0, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and8.i)
  %tobool9.i = icmp ne i64 %and8.i, 0
  br label %can_checksum_protocol.exit

sw.bb12.i:                                        ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  %and13.i = and i64 %features.addr.0, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13.i)
  %tobool14.i = icmp ne i64 %and13.i, 0
  br label %can_checksum_protocol.exit

can_checksum_protocol.exit:                       ; preds = %sw.bb12.i, %sw.bb.i, %if.end.i.can_checksum_protocol.exit_crit_edge, %if.then.i
  %retval.0.i = phi i1 [ %tobool.i, %if.then.i ], [ %tobool14.i, %sw.bb12.i ], [ %tobool9.i, %sw.bb.i ], [ true, %if.end.i.can_checksum_protocol.exit_crit_edge ]
  %call38.not = xor i1 %retval.0.i, true
  %brmerge = select i1 %tobool33.not, i1 true, i1 %call38.not
  br i1 %brmerge, label %can_checksum_protocol.exit.normal_crit_edge, label %land.lhs.true49

can_checksum_protocol.exit.normal_crit_edge:      ; preds = %can_checksum_protocol.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %normal

land.lhs.true49:                                  ; preds = %can_checksum_protocol.exit
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %5)
  %cmp50.not = icmp eq i16 %5, -1
  br i1 %cmp50.not, label %land.lhs.true49.normal_crit_edge, label %if.then52

land.lhs.true49.normal_crit_edge:                 ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #22
  br label %normal

if.then52:                                        ; preds = %land.lhs.true49
  %and53 = and i64 %features.addr.0, 268435456
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and53)
  %tobool54.not = icmp eq i64 %and53, 0
  br i1 %tobool54.not, label %if.then55, label %if.then52.if.end90_crit_edge

if.then52.if.end90_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end90

if.then55:                                        ; preds = %if.then52
  br i1 %tobool.not, label %if.then55.normal_crit_edge, label %lor.lhs.false

if.then55.normal_crit_edge:                       ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #22
  br label %normal

lor.lhs.false:                                    ; preds = %if.then55
  %32 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %end.i, align 4
  %gso_type58 = getelementptr inbounds %struct.skb_shared_info, ptr %33, i32 0, i32 8
  %34 = ptrtoint ptr %gso_type58 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %gso_type58, align 8
  %conv.i875 = sext i32 %35 to i64
  %shl.i = shl nsw i64 %conv.i875, 16
  %and.i876 = and i64 %shl.i, %features.addr.0
  call void @__sanitizer_cov_trace_cmp8(i64 %and.i876, i64 %shl.i)
  %cmp.i877 = icmp eq i64 %and.i876, %shl.i
  br i1 %cmp.i877, label %if.end61, label %lor.lhs.false.normal_crit_edge

lor.lhs.false.normal_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %normal

if.end61:                                         ; preds = %lor.lhs.false
  %len62 = getelementptr inbounds %struct.sk_buff, ptr %3, i32 0, i32 6
  %36 = ptrtoint ptr %len62 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %len62, align 4
  %frag_list64 = getelementptr inbounds %struct.skb_shared_info, ptr %33, i32 0, i32 6
  %38 = ptrtoint ptr %frag_list64 to i32
  call void @__asan_load4_noabort(i32 %38)
  %iter.01225 = load ptr, ptr %frag_list64, align 8
  %tobool65.not1226 = icmp eq ptr %iter.01225, null
  br i1 %tobool65.not1226, label %if.end61.for.end_crit_edge, label %if.end61.for.body_crit_edge

if.end61.for.body_crit_edge:                      ; preds = %if.end61
  br label %for.body

if.end61.for.end_crit_edge:                       ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %if.end82.for.body_crit_edge, %if.end61.for.body_crit_edge
  %iter.01228 = phi ptr [ %iter.0, %if.end82.for.body_crit_edge ], [ %iter.01225, %if.end61.for.body_crit_edge ]
  %len.01227 = phi i32 [ %sub, %if.end82.for.body_crit_edge ], [ %16, %if.end61.for.body_crit_edge ]
  %len66 = getelementptr inbounds %struct.sk_buff, ptr %iter.01228, i32 0, i32 6
  %39 = ptrtoint ptr %len66 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %len66, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %40)
  %cmp67.not = icmp eq i32 %37, %40
  br i1 %cmp67.not, label %for.body.if.end72_crit_edge, label %land.lhs.true69

for.body.if.end72_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end72

land.lhs.true69:                                  ; preds = %for.body
  %41 = ptrtoint ptr %iter.01228 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %iter.01228, align 8
  %tobool70.not = icmp eq ptr %42, null
  br i1 %tobool70.not, label %land.lhs.true69.if.end72_crit_edge, label %land.lhs.true69.normal_crit_edge

land.lhs.true69.normal_crit_edge:                 ; preds = %land.lhs.true69
  call void @__sanitizer_cov_trace_pc() #22
  br label %normal

land.lhs.true69.if.end72_crit_edge:               ; preds = %land.lhs.true69
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end72

if.end72:                                         ; preds = %land.lhs.true69.if.end72_crit_edge, %for.body.if.end72_crit_edge
  %data_len.i880 = getelementptr inbounds %struct.sk_buff, ptr %iter.01228, i32 0, i32 7
  %43 = ptrtoint ptr %data_len.i880 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %data_len.i880, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %44)
  %tobool74.not = icmp eq i32 %40, %44
  br i1 %tobool74.not, label %if.end72.if.end82_crit_edge, label %land.lhs.true75

if.end72.if.end82_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end82

land.lhs.true75:                                  ; preds = %if.end72
  %head_frag76 = getelementptr inbounds %struct.sk_buff, ptr %iter.01228, i32 0, i32 12
  %45 = ptrtoint ptr %head_frag76 to i32
  call void @__asan_load1_noabort(i32 %45)
  %bf.load77 = load i8, ptr %head_frag76, align 2
  %46 = and i8 %bf.load77, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool80.not = icmp eq i8 %46, 0
  br i1 %tobool80.not, label %land.lhs.true75.normal_crit_edge, label %land.lhs.true75.if.end82_crit_edge

land.lhs.true75.if.end82_crit_edge:               ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end82

land.lhs.true75.normal_crit_edge:                 ; preds = %land.lhs.true75
  call void @__sanitizer_cov_trace_pc() #22
  br label %normal

if.end82:                                         ; preds = %land.lhs.true75.if.end82_crit_edge, %if.end72.if.end82_crit_edge
  %sub = sub i32 %len.01227, %40
  %47 = ptrtoint ptr %iter.01228 to i32
  call void @__asan_load4_noabort(i32 %47)
  %iter.0 = load ptr, ptr %iter.01228, align 8
  %tobool65.not = icmp eq ptr %iter.0, null
  br i1 %tobool65.not, label %if.end82.for.end_crit_edge, label %if.end82.for.body_crit_edge

if.end82.for.body_crit_edge:                      ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

if.end82.for.end_crit_edge:                       ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %if.end82.for.end_crit_edge, %if.end61.for.end_crit_edge
  %len.0.lcssa = phi i32 [ %16, %if.end61.for.end_crit_edge ], [ %sub, %if.end82.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %len.0.lcssa, i32 %37)
  %cmp85.not = icmp eq i32 %len.0.lcssa, %37
  br i1 %cmp85.not, label %for.end.if.end90_crit_edge, label %for.end.normal_crit_edge

for.end.normal_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %normal

for.end.if.end90_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end90

if.end90:                                         ; preds = %for.end.if.end90_crit_edge, %if.then52.if.end90_crit_edge
  %len.2 = phi i32 [ %16, %if.then52.if.end90_crit_edge ], [ %37, %for.end.if.end90_crit_edge ]
  %div = udiv i32 %len.2, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %div)
  %cmp91 = icmp ugt i32 %div, 1
  %48 = tail call i32 @llvm.umax.i32(i32 %div, i32 1)
  %spec.select862 = mul i32 %48, %conv
  %spec.select863 = select i1 %cmp91, i32 %div, i32 0
  br label %normal

normal:                                           ; preds = %if.end90, %for.end.normal_crit_edge, %land.lhs.true75.normal_crit_edge, %land.lhs.true69.normal_crit_edge, %lor.lhs.false.normal_crit_edge, %if.then55.normal_crit_edge, %land.lhs.true49.normal_crit_edge, %can_checksum_protocol.exit.normal_crit_edge, %if.end6.i.normal_crit_edge
  %retval.0.i1067 = phi i1 [ %retval.0.i, %land.lhs.true49.normal_crit_edge ], [ %retval.0.i, %can_checksum_protocol.exit.normal_crit_edge ], [ %retval.0.i, %if.end90 ], [ false, %if.end6.i.normal_crit_edge ], [ %retval.0.i, %lor.lhs.false.normal_crit_edge ], [ %retval.0.i, %if.then55.normal_crit_edge ], [ %retval.0.i, %for.end.normal_crit_edge ], [ %retval.0.i, %land.lhs.true69.normal_crit_edge ], [ %retval.0.i, %land.lhs.true75.normal_crit_edge ]
  %mss.0 = phi i32 [ 65535, %land.lhs.true49.normal_crit_edge ], [ %conv, %can_checksum_protocol.exit.normal_crit_edge ], [ %spec.select862, %if.end90 ], [ %conv, %if.end6.i.normal_crit_edge ], [ %conv, %lor.lhs.false.normal_crit_edge ], [ %conv, %if.then55.normal_crit_edge ], [ %conv, %for.end.normal_crit_edge ], [ %conv, %land.lhs.true69.normal_crit_edge ], [ %conv, %land.lhs.true75.normal_crit_edge ]
  %partial_segs.0 = phi i32 [ 0, %land.lhs.true49.normal_crit_edge ], [ 0, %can_checksum_protocol.exit.normal_crit_edge ], [ %spec.select863, %if.end90 ], [ 0, %if.end6.i.normal_crit_edge ], [ 0, %lor.lhs.false.normal_crit_edge ], [ 0, %if.then55.normal_crit_edge ], [ 0, %for.end.normal_crit_edge ], [ 0, %land.lhs.true69.normal_crit_edge ], [ 0, %land.lhs.true75.normal_crit_edge ]
  %49 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %data, align 4
  %51 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i884 = ptrtoint ptr %50 to i32
  %sub.ptr.rhs.cast.i885 = ptrtoint ptr %52 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i884, %sub.ptr.rhs.cast.i885
  %53 = ptrtoint ptr %len5 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %len5, align 4
  %data_len.i887 = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 7
  %55 = ptrtoint ptr %data_len.i887 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %data_len.i887, align 8
  %sub.i888 = sub i32 %54, %56
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %mss.0)
  %cmp98 = icmp eq i32 %mss.0, 65535
  %tobool33.not.not = xor i1 %tobool33.not, true
  %add213 = add i32 %sub.ptr.sub.i, %sub.ptr.sub
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 12
  %sub257 = sub i32 0, %sub.i
  %add259 = add i32 %sub.ptr.sub, %sub.i
  br label %do.body

do.body:                                          ; preds = %do.cond486.do.body_crit_edge, %normal
  %list_skb.0 = phi ptr [ %3, %normal ], [ %list_skb.6, %do.cond486.do.body_crit_edge ]
  %frag.0 = phi ptr [ %frags, %normal ], [ %frag.8, %do.cond486.do.body_crit_edge ]
  %frag_skb.0 = phi ptr [ %head_skb, %normal ], [ %frag_skb.6, %do.cond486.do.body_crit_edge ]
  %offset.0 = phi i32 [ %sub.ptr.sub, %normal ], [ %add487, %do.cond486.do.body_crit_edge ]
  %nfrags.0 = phi i32 [ %conv7, %normal ], [ %nfrags.6, %do.cond486.do.body_crit_edge ]
  %i.0 = phi i32 [ 0, %normal ], [ %i.8, %do.cond486.do.body_crit_edge ]
  %pos.0 = phi i32 [ %sub.i888, %normal ], [ %pos.5, %do.cond486.do.body_crit_edge ]
  %tail.0 = phi ptr [ null, %normal ], [ %nskb.0, %do.cond486.do.body_crit_edge ]
  %segs.0 = phi ptr [ null, %normal ], [ %segs.1, %do.cond486.do.body_crit_edge ]
  br i1 %cmp98, label %if.then106, label %if.else108, !prof !373

if.then106:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  %len107 = getelementptr inbounds %struct.sk_buff, ptr %list_skb.0, i32 0, i32 6
  %57 = ptrtoint ptr %len107 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %len107, align 4
  br label %if.end115

if.else108:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  %59 = ptrtoint ptr %len5 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %len5, align 4
  %sub110 = sub i32 %60, %offset.0
  %61 = tail call i32 @llvm.umin.i32(i32 %sub110, i32 %mss.0)
  br label %if.end115

if.end115:                                        ; preds = %if.else108, %if.then106
  %len.3 = phi i32 [ %58, %if.then106 ], [ %61, %if.else108 ]
  %62 = ptrtoint ptr %len5 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %len5, align 4
  %64 = ptrtoint ptr %data_len.i887 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %data_len.i887, align 8
  %66 = add i32 %offset.0, %65
  %sub117 = sub i32 %63, %66
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub117)
  %cmp118 = icmp sgt i32 %sub117, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0, i32 %nfrags.0)
  %cmp121.not = icmp slt i32 %i.0, %nfrags.0
  %or.cond859 = select i1 %cmp118, i1 true, i1 %cmp121.not
  br i1 %or.cond859, label %if.end115.if.else222_crit_edge, label %land.lhs.true123

if.end115.if.else222_crit_edge:                   ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else222

land.lhs.true123:                                 ; preds = %if.end115
  %len.i892 = getelementptr inbounds %struct.sk_buff, ptr %list_skb.0, i32 0, i32 6
  %67 = ptrtoint ptr %len.i892 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %len.i892, align 4
  %data_len.i893 = getelementptr inbounds %struct.sk_buff, ptr %list_skb.0, i32 0, i32 7
  %69 = ptrtoint ptr %data_len.i893 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %data_len.i893, align 8
  %sub.i894 = sub i32 %68, %70
  call void @__sanitizer_cov_trace_cmp4(i32 %68, i32 %70)
  %tobool125.not = icmp ne i32 %68, %70
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i894, i32 %len.3)
  %cmp128 = icmp eq i32 %sub.i894, %len.3
  %brmerge860 = select i1 %cmp128, i1 true, i1 %tobool33.not.not
  %or.cond1257 = select i1 %tobool125.not, i1 %brmerge860, i1 false
  br i1 %or.cond1257, label %do.body134, label %land.lhs.true123.if.else222_crit_edge

land.lhs.true123.if.else222_crit_edge:            ; preds = %land.lhs.true123
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else222

do.body134:                                       ; preds = %land.lhs.true123
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i894, i32 %len.3)
  %cmp136 = icmp ugt i32 %sub.i894, %len.3
  br i1 %cmp136, label %do.body145, label %do.end151, !prof !373

do.body145:                                       ; preds = %do.body134
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4066, 0\0A.popsection", ""() #20, !srcloc !437
  unreachable

do.end151:                                        ; preds = %do.body134
  %end.i901 = getelementptr inbounds %struct.sk_buff, ptr %list_skb.0, i32 0, i32 17
  %71 = ptrtoint ptr %end.i901 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %end.i901, align 4
  %nr_frags153 = getelementptr inbounds %struct.skb_shared_info, ptr %72, i32 0, i32 2
  %73 = ptrtoint ptr %nr_frags153 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %nr_frags153, align 2
  %conv154 = zext i8 %74 to i32
  %frags156 = getelementptr inbounds %struct.skb_shared_info, ptr %72, i32 0, i32 12
  %add = add i32 %sub.i894, %pos.0
  %add159 = add i32 %len.3, %offset.0
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %add159)
  %cmp1601229 = icmp ult i32 %add, %add159
  br i1 %cmp1601229, label %do.end151.do.body162_crit_edge, label %do.end151.while.end_crit_edge

do.end151.while.end_crit_edge:                    ; preds = %do.end151
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

do.end151.do.body162_crit_edge:                   ; preds = %do.end151
  br label %do.body162

do.body162:                                       ; preds = %if.end187.do.body162_crit_edge, %do.end151.do.body162_crit_edge
  %pos.11232 = phi i32 [ %add182, %if.end187.do.body162_crit_edge ], [ %add, %do.end151.do.body162_crit_edge ]
  %i.11231 = phi i32 [ %inc, %if.end187.do.body162_crit_edge ], [ 0, %do.end151.do.body162_crit_edge ]
  %frag.11230 = phi ptr [ %incdec.ptr, %if.end187.do.body162_crit_edge ], [ %frags156, %do.end151.do.body162_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.11231, i32 %conv154)
  %exitcond.not = icmp eq i32 %i.11231, %conv154
  br i1 %exitcond.not, label %do.body172, label %do.end180, !prof !373

do.body172:                                       ; preds = %do.body162
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4075, 0\0A.popsection", ""() #20, !srcloc !438
  unreachable

do.end180:                                        ; preds = %do.body162
  %bv_len.i = getelementptr inbounds %struct.bio_vec, ptr %frag.11230, i32 0, i32 1
  %75 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %bv_len.i, align 4
  %add182 = add i32 %76, %pos.11232
  call void @__sanitizer_cov_trace_cmp4(i32 %add182, i32 %add159)
  %cmp184 = icmp ugt i32 %add182, %add159
  br i1 %cmp184, label %do.end180.while.end_crit_edge, label %if.end187

do.end180.while.end_crit_edge:                    ; preds = %do.end180
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

if.end187:                                        ; preds = %do.end180
  %inc = add nuw nsw i32 %i.11231, 1
  %incdec.ptr = getelementptr %struct.bio_vec, ptr %frag.11230, i32 1
  %cmp160 = icmp ult i32 %add182, %add159
  br i1 %cmp160, label %if.end187.do.body162_crit_edge, label %if.end187.while.end_crit_edge

if.end187.while.end_crit_edge:                    ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

if.end187.do.body162_crit_edge:                   ; preds = %if.end187
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body162

while.end:                                        ; preds = %if.end187.while.end_crit_edge, %do.end180.while.end_crit_edge, %do.end151.while.end_crit_edge
  %frag.1.lcssa = phi ptr [ %frags156, %do.end151.while.end_crit_edge ], [ %frag.11230, %do.end180.while.end_crit_edge ], [ %incdec.ptr, %if.end187.while.end_crit_edge ]
  %i.1.lcssa = phi i32 [ 0, %do.end151.while.end_crit_edge ], [ %i.11231, %do.end180.while.end_crit_edge ], [ %inc, %if.end187.while.end_crit_edge ]
  %pos.1.lcssa = phi i32 [ %add, %do.end151.while.end_crit_edge ], [ %pos.11232, %do.end180.while.end_crit_edge ], [ %add182, %if.end187.while.end_crit_edge ]
  %call189 = tail call ptr @skb_clone(ptr noundef %list_skb.0, i32 noundef 2592)
  %77 = ptrtoint ptr %list_skb.0 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %list_skb.0, align 8
  %tobool191.not = icmp eq ptr %call189, null
  br i1 %tobool191.not, label %while.end.err572_crit_edge, label %if.end201, !prof !373

while.end.err572_crit_edge:                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %err572

if.end201:                                        ; preds = %while.end
  %len1.i906 = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 6
  %79 = ptrtoint ptr %len1.i906 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %len1.i906, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %80, i32 %len.3)
  %cmp.i907 = icmp ugt i32 %80, %len.3
  br i1 %cmp.i907, label %cond.true.i, label %if.end201.if.end211_crit_edge

if.end201.if.end211_crit_edge:                    ; preds = %if.end201
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end211

cond.true.i:                                      ; preds = %if.end201
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 7
  %81 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %82)
  %tobool.not.i.i = icmp eq i32 %82, 0
  br i1 %tobool.not.i.i, label %__skb_trim.exit.i.i, label %pskb_trim.exit

__skb_trim.exit.i.i:                              ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %83 = ptrtoint ptr %len1.i906 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %len.3, ptr %len1.i906, align 4
  %data.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 19
  %84 = ptrtoint ptr %data.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %data.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %85, i32 %len.3
  %tail.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 16
  %86 = ptrtoint ptr %tail.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %add.ptr.i.i.i.i.i, ptr %tail.i.i.i.i.i, align 8
  br label %if.end211

pskb_trim.exit:                                   ; preds = %cond.true.i
  %call.i.i = tail call i32 @___pskb_trim(ptr noundef nonnull %call189, i32 noundef %len.3) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool203.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool203.not, label %pskb_trim.exit.if.end211_crit_edge, label %if.then210, !prof !374

pskb_trim.exit.if.end211_crit_edge:               ; preds = %pskb_trim.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end211

if.then210:                                       ; preds = %pskb_trim.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %call189)
  br label %err572

if.end211:                                        ; preds = %pskb_trim.exit.if.end211_crit_edge, %__skb_trim.exit.i.i, %if.end201.if.end211_crit_edge
  %end.i908 = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 17
  %87 = ptrtoint ptr %end.i908 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %end.i908, align 4
  %head.i909 = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 18
  %89 = ptrtoint ptr %head.i909 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %head.i909, align 8
  %sub.ptr.lhs.cast.i910 = ptrtoint ptr %88 to i32
  %sub.ptr.rhs.cast.i911 = ptrtoint ptr %90 to i32
  %sub.ptr.sub.i912 = sub i32 %sub.ptr.lhs.cast.i910, %sub.ptr.rhs.cast.i911
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 12
  %91 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %91)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i913 = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i913, label %if.end211.skb_header_cloned.exit.i_crit_edge, label %if.end.i.i

if.end211.skb_header_cloned.exit.i_crit_edge:     ; preds = %if.end211
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_header_cloned.exit.i

if.end.i.i:                                       ; preds = %if.end211
  call void @__sanitizer_cov_trace_pc() #22
  %dataref1.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %88, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i, i32 noundef 4) #20
  %92 = ptrtoint ptr %dataref1.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %dataref1.i.i, align 4
  %and.i.i = and i32 %93, 65535
  %shr.i.i = ashr i32 %93, 16
  %sub.i.i = sub nsw i32 %and.i.i, %shr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i)
  %cmp.i.not.i = icmp eq i32 %sub.i.i, 1
  br label %skb_header_cloned.exit.i

skb_header_cloned.exit.i:                         ; preds = %if.end.i.i, %if.end211.skb_header_cloned.exit.i_crit_edge
  %retval.0.i.i = phi i1 [ %cmp.i.not.i, %if.end.i.i ], [ true, %if.end211.skb_header_cloned.exit.i_crit_edge ]
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 19
  %94 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %data.i.i.i, align 4
  %96 = ptrtoint ptr %head.i909 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %head.i909, align 8
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %95 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %97 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i.i.i, i32 %add213)
  %tobool.not.i3.i = icmp uge i32 %sub.ptr.sub.i.i.i, %add213
  %or.cond.i.i = and i1 %retval.0.i.i, %tobool.not.i3.i
  br i1 %or.cond.i.i, label %skb_header_cloned.exit.i.if.end217_crit_edge, label %skb_cow_head.exit

skb_header_cloned.exit.i.if.end217_crit_edge:     ; preds = %skb_header_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end217

skb_cow_head.exit:                                ; preds = %skb_header_cloned.exit.i
  %98 = tail call i32 @llvm.usub.sat.i32(i32 %add213, i32 %sub.ptr.sub.i.i.i) #20
  %add.i.i = add i32 %98, 127
  %and.i4.i = and i32 %add.i.i, -128
  %call4.i.i = tail call i32 @pskb_expand_head(ptr noundef nonnull %call189, i32 noundef %and.i4.i, i32 noundef 0, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool215.not = icmp eq i32 %call4.i.i, 0
  br i1 %tobool215.not, label %skb_cow_head.exit.if.end217_crit_edge, label %if.then216

skb_cow_head.exit.if.end217_crit_edge:            ; preds = %skb_cow_head.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end217

if.then216:                                       ; preds = %skb_cow_head.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %call189)
  br label %err572

if.end217:                                        ; preds = %skb_cow_head.exit.if.end217_crit_edge, %skb_header_cloned.exit.i.if.end217_crit_edge
  %99 = ptrtoint ptr %end.i908 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %end.i908, align 4
  %101 = ptrtoint ptr %head.i909 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %head.i909, align 8
  %sub.ptr.lhs.cast.i916 = ptrtoint ptr %100 to i32
  %sub.ptr.rhs.cast.i917 = ptrtoint ptr %102 to i32
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %call189, i32 0, i32 20
  %103 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %truesize, align 8
  %105 = add i32 %sub.ptr.sub.i912, %sub.ptr.rhs.cast.i917
  %sub219 = sub i32 %sub.ptr.lhs.cast.i916, %105
  %add220 = add i32 %sub219, %104
  store i32 %add220, ptr %truesize, align 8
  tail call void @skb_release_head_state(ptr noundef nonnull %call189)
  %106 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %data.i.i.i, align 4
  %add.ptr.i921 = getelementptr i8, ptr %107, i32 %idx.neg.i
  store ptr %add.ptr.i921, ptr %data.i.i.i, align 4
  br label %if.end249

if.else222:                                       ; preds = %land.lhs.true123.if.else222_crit_edge, %if.end115.if.else222_crit_edge
  %108 = tail call i32 @llvm.smax.i32(i32 %sub117, i32 0)
  call void @__sanitizer_cov_trace_cmp4(i32 %108, i32 %len.3)
  %cmp227 = icmp ugt i32 %108, %len.3
  %brmerge861 = select i1 %cmp227, i1 true, i1 %tobool33.not
  %hsize.0 = select i1 %brmerge861, i32 %len.3, i32 %108
  %add234 = add i32 %add213, %hsize.0
  %109 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %109)
  %bf.load.i.i924 = load i8, ptr %pfmemalloc.i.i, align 2
  %110 = and i8 %bf.load.i.i924, 2
  %111 = zext i8 %110 to i32
  %call236 = tail call ptr @__alloc_skb(i32 noundef %add234, i32 noundef 2592, i32 noundef %111, i32 noundef -1)
  %tobool237.not = icmp eq ptr %call236, null
  br i1 %tobool237.not, label %if.else222.err572_crit_edge, label %if.end247, !prof !373

if.else222.err572_crit_edge:                      ; preds = %if.else222
  call void @__sanitizer_cov_trace_pc() #22
  br label %err572

if.end247:                                        ; preds = %if.else222
  %data.i925 = getelementptr inbounds %struct.sk_buff, ptr %call236, i32 0, i32 19
  %112 = ptrtoint ptr %data.i925 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %data.i925, align 4
  %add.ptr.i926 = getelementptr i8, ptr %113, i32 %sub.ptr.sub.i
  store ptr %add.ptr.i926, ptr %data.i925, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call236, i32 0, i32 16
  %114 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %115, i32 %sub.ptr.sub.i
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  %data_len.i.i927 = getelementptr inbounds %struct.sk_buff, ptr %call236, i32 0, i32 7
  %116 = ptrtoint ptr %data_len.i.i927 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %data_len.i.i927, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %117)
  %tobool.i.not.i = icmp eq i32 %117, 0
  br i1 %tobool.i.not.i, label %__skb_put.exit, label %do.body3.i, !prof !374

do.body3.i:                                       ; preds = %if.end247
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2334, 0\0A.popsection", ""() #20, !srcloc !439
  unreachable

__skb_put.exit:                                   ; preds = %if.end247
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i928 = getelementptr i8, ptr %add.ptr1.i, i32 %sub.ptr.sub
  %118 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %add.ptr.i928, ptr %tail.i, align 8
  %len9.i = getelementptr inbounds %struct.sk_buff, ptr %call236, i32 0, i32 6
  br label %if.end249

if.end249:                                        ; preds = %__skb_put.exit, %if.end217
  %len9.i.sink1468 = phi ptr [ %len9.i, %__skb_put.exit ], [ %len1.i906, %if.end217 ]
  %list_skb.1 = phi ptr [ %list_skb.0, %__skb_put.exit ], [ %78, %if.end217 ]
  %frag.2 = phi ptr [ %frag.0, %__skb_put.exit ], [ %frag.1.lcssa, %if.end217 ]
  %frag_skb.1 = phi ptr [ %frag_skb.0, %__skb_put.exit ], [ %list_skb.0, %if.end217 ]
  %nfrags.1 = phi i32 [ %nfrags.0, %__skb_put.exit ], [ %conv154, %if.end217 ]
  %i.2 = phi i32 [ %i.0, %__skb_put.exit ], [ %i.1.lcssa, %if.end217 ]
  %pos.2 = phi i32 [ %pos.0, %__skb_put.exit ], [ %pos.1.lcssa, %if.end217 ]
  %nskb.0 = phi ptr [ %call236, %__skb_put.exit ], [ %call189, %if.end217 ]
  %hsize.1 = phi i32 [ %hsize.0, %__skb_put.exit ], [ %sub.ptr.sub.i912, %if.end217 ]
  %119 = ptrtoint ptr %len9.i.sink1468 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %len9.i.sink1468, align 4
  %add.i929 = add i32 %120, %sub.ptr.sub
  store i32 %add.i929, ptr %len9.i.sink1468, align 4
  %tobool250.not = icmp eq ptr %segs.0, null
  br i1 %tobool250.not, label %if.end249.if.end254_crit_edge, label %if.then251

if.end249.if.end254_crit_edge:                    ; preds = %if.end249
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end254

if.then251:                                       ; preds = %if.end249
  call void @__sanitizer_cov_trace_pc() #22
  %121 = ptrtoint ptr %tail.0 to i32
  call void @__asan_store4_noabort(i32 %121)
  store ptr %nskb.0, ptr %tail.0, align 8
  br label %if.end254

if.end254:                                        ; preds = %if.then251, %if.end249.if.end254_crit_edge
  %segs.1 = phi ptr [ %segs.0, %if.then251 ], [ %nskb.0, %if.end249.if.end254_crit_edge ]
  tail call fastcc void @__copy_skb_header(ptr noundef nonnull %nskb.0, ptr noundef %head_skb)
  %data.i930 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 19
  %122 = ptrtoint ptr %data.i930 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %data.i930, align 4
  %head.i931 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 18
  %124 = ptrtoint ptr %head.i931 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %head.i931, align 8
  %sub.ptr.lhs.cast.i932 = ptrtoint ptr %123 to i32
  %sub.ptr.rhs.cast.i933 = ptrtoint ptr %125 to i32
  %126 = add i32 %sub.ptr.sub.i, %sub.ptr.rhs.cast.i933
  %sub256 = sub i32 %sub.ptr.lhs.cast.i932, %126
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15
  %127 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %127)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %128 = and i16 %bf.load.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %128)
  %cmp.i935 = icmp eq i16 %128, 1536
  br i1 %cmp.i935, label %if.then.i936, label %entry.if.end_crit_edge.i

entry.if.end_crit_edge.i:                         ; preds = %if.end254
  call void @__sanitizer_cov_trace_pc() #22
  %.pre.i = trunc i32 %sub256 to i16
  br label %if.end.i939

if.then.i936:                                     ; preds = %if.end254
  call void @__sanitizer_cov_trace_pc() #22
  %129 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 5
  %130 = ptrtoint ptr %129 to i32
  call void @__asan_load2_noabort(i32 %130)
  %131 = load i16, ptr %129, align 8
  %132 = trunc i32 %sub256 to i16
  %conv3.i = add i16 %131, %132
  store i16 %conv3.i, ptr %129, align 8
  br label %if.end.i939

if.end.i939:                                      ; preds = %if.then.i936, %entry.if.end_crit_edge.i
  %.pre-phi.i = phi i16 [ %.pre.i, %entry.if.end_crit_edge.i ], [ %132, %if.then.i936 ]
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 19
  %133 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %133)
  %134 = load i16, ptr %transport_header.i, align 2
  %conv6.i = add i16 %134, %.pre-phi.i
  store i16 %conv6.i, ptr %transport_header.i, align 2
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 20
  %135 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %135)
  %136 = load i16, ptr %network_header.i, align 4
  %conv9.i = add i16 %136, %.pre-phi.i
  store i16 %conv9.i, ptr %network_header.i, align 4
  %mac_header.i.i937 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 21
  %137 = ptrtoint ptr %mac_header.i.i937 to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %mac_header.i.i937, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %138)
  %cmp.i.not.i938 = icmp eq i16 %138, -1
  br i1 %cmp.i.not.i938, label %if.end.i939.skb_headers_offset_update.exit_crit_edge, label %if.then10.i

if.end.i939.skb_headers_offset_update.exit_crit_edge: ; preds = %if.end.i939
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_headers_offset_update.exit

if.then10.i:                                      ; preds = %if.end.i939
  call void @__sanitizer_cov_trace_pc() #22
  %conv13.i = add i16 %138, %.pre-phi.i
  %139 = ptrtoint ptr %mac_header.i.i937 to i32
  call void @__asan_store2_noabort(i32 %139)
  store i16 %conv13.i, ptr %mac_header.i.i937, align 2
  br label %skb_headers_offset_update.exit

skb_headers_offset_update.exit:                   ; preds = %if.then10.i, %if.end.i939.skb_headers_offset_update.exit_crit_edge
  %inner_transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 15
  %140 = ptrtoint ptr %inner_transport_header.i to i32
  call void @__asan_load2_noabort(i32 %140)
  %141 = load i16, ptr %inner_transport_header.i, align 2
  %conv17.i = add i16 %141, %.pre-phi.i
  store i16 %conv17.i, ptr %inner_transport_header.i, align 2
  %inner_network_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 16
  %142 = ptrtoint ptr %inner_network_header.i to i32
  call void @__asan_load2_noabort(i32 %142)
  %143 = load i16, ptr %inner_network_header.i, align 4
  %conv20.i = add i16 %143, %.pre-phi.i
  store i16 %conv20.i, ptr %inner_network_header.i, align 4
  %inner_mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 17
  %144 = ptrtoint ptr %inner_mac_header.i to i32
  call void @__asan_load2_noabort(i32 %144)
  %145 = load i16, ptr %inner_mac_header.i, align 2
  %conv23.i = add i16 %145, %.pre-phi.i
  store i16 %conv23.i, ptr %inner_mac_header.i, align 2
  %146 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %146)
  %147 = load i16, ptr %network_header.i, align 4
  %148 = ptrtoint ptr %mac_header.i.i937 to i32
  call void @__asan_load2_noabort(i32 %148)
  %149 = load i16, ptr %mac_header.i.i937, align 2
  %sub.i942 = sub i16 %147, %149
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 8
  %150 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %150)
  store i16 %sub.i942, ptr %mac_len.i, align 4
  %151 = ptrtoint ptr %data.i930 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %data.i930, align 4
  %add.ptr = getelementptr i8, ptr %152, i32 %sub257
  %153 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %data, align 4
  %add.ptr.i944 = getelementptr i8, ptr %154, i32 %sub257
  %155 = call ptr @memcpy(ptr %add.ptr, ptr %add.ptr.i944, i32 %add259)
  %len260 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 6
  %156 = ptrtoint ptr %len260 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %len260, align 4
  %add261 = add i32 %len.3, %sub.ptr.sub
  call void @__sanitizer_cov_trace_cmp4(i32 %157, i32 %add261)
  %cmp262 = icmp eq i32 %157, %add261
  br i1 %cmp262, label %skb_headers_offset_update.exit.perform_csum_check_crit_edge, label %if.end265

skb_headers_offset_update.exit.perform_csum_check_crit_edge: ; preds = %skb_headers_offset_update.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %perform_csum_check

if.end265:                                        ; preds = %skb_headers_offset_update.exit
  br i1 %tobool33.not, label %if.then267, label %if.end293

if.then267:                                       ; preds = %if.end265
  br i1 %retval.0.i1067, label %if.else289, label %if.then269

if.then269:                                       ; preds = %if.then267
  %remcsum_offload = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 3
  %158 = ptrtoint ptr %remcsum_offload to i32
  call void @__asan_loadN_noabort(i32 %158, i32 4)
  %bf.load270 = load i32, ptr %remcsum_offload, align 2
  %159 = and i32 %bf.load270, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %159)
  %tobool273.not = icmp eq i32 %159, 0
  br i1 %tobool273.not, label %if.then274, label %if.then269.if.end277_crit_edge

if.then269.if.end277_crit_edge:                   ; preds = %if.then269
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end277

if.then274:                                       ; preds = %if.then269
  call void @__sanitizer_cov_trace_pc() #22
  %160 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %160)
  %bf.load275 = load i16, ptr %ip_summed.i, align 8
  %bf.clear276 = and i16 %bf.load275, -1537
  store i16 %bf.clear276, ptr %ip_summed.i, align 8
  br label %if.end277

if.end277:                                        ; preds = %if.then274, %if.then269.if.end277_crit_edge
  %tail.i.i945 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 16
  %161 = ptrtoint ptr %tail.i.i945 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %tail.i.i945, align 8
  %data_len.i.i946 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 7
  %163 = ptrtoint ptr %data_len.i.i946 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %data_len.i.i946, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %164)
  %tobool.i.not.i947 = icmp eq i32 %164, 0
  br i1 %tobool.i.not.i947, label %do.end8.i, label %do.body3.i948, !prof !374

do.body3.i948:                                    ; preds = %if.end277
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i:                                        ; preds = %if.end277
  %add.ptr.i949 = getelementptr i8, ptr %162, i32 %len.3
  %165 = ptrtoint ptr %tail.i.i945 to i32
  call void @__asan_store4_noabort(i32 %165)
  store ptr %add.ptr.i949, ptr %tail.i.i945, align 8
  %166 = ptrtoint ptr %len260 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %len260, align 4
  %add.i951 = add i32 %167, %len.3
  store i32 %add.i951, ptr %len260, align 4
  %end.i952 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 17
  %168 = ptrtoint ptr %end.i952 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %end.i952, align 4
  %cmp.i953 = icmp ugt ptr %add.ptr.i949, %169
  br i1 %cmp.i953, label %if.then17.i, label %skb_put.exit, !prof !373

if.then17.i:                                      ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %170 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef nonnull %nskb.0, i32 noundef %len.3, ptr noundef %170) #20
  unreachable

skb_put.exit:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %call279 = tail call i32 @skb_copy_and_csum_bits(ptr noundef %head_skb, i32 noundef %offset.0, ptr noundef %162, i32 noundef %len.3)
  %csum282 = getelementptr %struct.sk_buff, ptr %nskb.0, i32 0, i32 3, i32 40
  %171 = ptrtoint ptr %csum282 to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 %call279, ptr %csum282, align 4
  %172 = ptrtoint ptr %data.i930 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %data.i930, align 4
  %174 = ptrtoint ptr %head.i931 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %head.i931, align 8
  %sub.ptr.lhs.cast.i956 = ptrtoint ptr %173 to i32
  %sub.ptr.rhs.cast.i957 = ptrtoint ptr %175 to i32
  %sub.ptr.sub.i958 = add i32 %sub.ptr.sub, %sub.ptr.lhs.cast.i956
  %add284 = sub i32 %sub.ptr.sub.i958, %sub.ptr.rhs.cast.i957
  %conv285 = trunc i32 %add284 to i16
  %csum_start = getelementptr %struct.sk_buff, ptr %nskb.0, i32 0, i32 3, i32 44
  %176 = ptrtoint ptr %csum_start to i32
  call void @__asan_store2_noabort(i32 %176)
  store i16 %conv285, ptr %csum_start, align 4
  br label %do.cond486

if.else289:                                       ; preds = %if.then267
  %tail.i.i959 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 16
  %177 = ptrtoint ptr %tail.i.i959 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %tail.i.i959, align 8
  %data_len.i.i960 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 7
  %179 = ptrtoint ptr %data_len.i.i960 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %data_len.i.i960, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %180)
  %tobool.i.not.i961 = icmp eq i32 %180, 0
  br i1 %tobool.i.not.i961, label %do.end8.i968, label %do.body3.i962, !prof !374

do.body3.i962:                                    ; preds = %if.else289
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i968:                                     ; preds = %if.else289
  %add.ptr.i963 = getelementptr i8, ptr %178, i32 %len.3
  %181 = ptrtoint ptr %tail.i.i959 to i32
  call void @__asan_store4_noabort(i32 %181)
  store ptr %add.ptr.i963, ptr %tail.i.i959, align 8
  %add.i965 = add i32 %157, %len.3
  %182 = ptrtoint ptr %len260 to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 %add.i965, ptr %len260, align 4
  %end.i966 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 17
  %183 = ptrtoint ptr %end.i966 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %end.i966, align 4
  %cmp.i967 = icmp ugt ptr %add.ptr.i963, %184
  br i1 %cmp.i967, label %if.then17.i969, label %skb_put.exit970, !prof !373

if.then17.i969:                                   ; preds = %do.end8.i968
  call void @__sanitizer_cov_trace_pc() #22
  %185 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef nonnull %nskb.0, i32 noundef %len.3, ptr noundef %185) #20
  unreachable

skb_put.exit970:                                  ; preds = %do.end8.i968
  call void @__sanitizer_cov_trace_pc() #22
  %call291 = tail call i32 @skb_copy_bits(ptr noundef %head_skb, i32 noundef %offset.0, ptr noundef %178, i32 noundef %len.3)
  br label %do.cond486

if.end293:                                        ; preds = %if.end265
  %end.i971 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 17
  %186 = ptrtoint ptr %end.i971 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %end.i971, align 4
  %tail.i.i972 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 16
  %188 = ptrtoint ptr %tail.i.i972 to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %tail.i.i972, align 8
  %data_len.i.i973 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 7
  %190 = ptrtoint ptr %data_len.i.i973 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %data_len.i.i973, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %191)
  %tobool.i.not.i974 = icmp eq i32 %191, 0
  br i1 %tobool.i.not.i974, label %do.end8.i981, label %do.body3.i975, !prof !374

do.body3.i975:                                    ; preds = %if.end293
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i981:                                     ; preds = %if.end293
  %add.ptr.i976 = getelementptr i8, ptr %189, i32 %hsize.1
  %192 = ptrtoint ptr %tail.i.i972 to i32
  call void @__asan_store4_noabort(i32 %192)
  store ptr %add.ptr.i976, ptr %tail.i.i972, align 8
  %add.i978 = add i32 %157, %hsize.1
  %193 = ptrtoint ptr %len260 to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %add.i978, ptr %len260, align 4
  %cmp.i980 = icmp ugt ptr %add.ptr.i976, %187
  br i1 %cmp.i980, label %if.then17.i982, label %skb_put.exit983, !prof !373

if.then17.i982:                                   ; preds = %do.end8.i981
  call void @__sanitizer_cov_trace_pc() #22
  %194 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef nonnull %nskb.0, i32 noundef %hsize.1, ptr noundef %194) #20
  unreachable

skb_put.exit983:                                  ; preds = %do.end8.i981
  %195 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %data, align 4
  %add.ptr.i985 = getelementptr i8, ptr %196, i32 %offset.0
  %197 = call ptr @memcpy(ptr %189, ptr %add.ptr.i985, i32 %hsize.1)
  %198 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %end.i, align 4
  %200 = ptrtoint ptr %199 to i32
  call void @__asan_load1_noabort(i32 %200)
  %201 = load i8, ptr %199, align 8
  %202 = and i8 %201, 2
  %203 = ptrtoint ptr %end.i971 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %end.i971, align 4
  %205 = ptrtoint ptr %204 to i32
  call void @__asan_load1_noabort(i32 %205)
  %206 = load i8, ptr %204, align 8
  %or855 = or i8 %206, %202
  store i8 %or855, ptr %204, align 8
  %tobool.not.i.i988 = icmp eq ptr %frag_skb.1, null
  br i1 %tobool.not.i.i988, label %skb_put.exit983.lor.lhs.false307_crit_edge, label %land.rhs.i.i

skb_put.exit983.lor.lhs.false307_crit_edge:       ; preds = %skb_put.exit983
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false307

land.rhs.i.i:                                     ; preds = %skb_put.exit983
  %end.i.i.i989 = getelementptr inbounds %struct.sk_buff, ptr %frag_skb.1, i32 0, i32 17
  %207 = ptrtoint ptr %end.i.i.i989 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %end.i.i.i989, align 4
  %209 = ptrtoint ptr %208 to i32
  call void @__asan_load1_noabort(i32 %209)
  %210 = load i8, ptr %208, align 8
  %211 = and i8 %210, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %211)
  %tobool1.not.i.i = icmp eq i8 %211, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.lor.lhs.false307_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.lor.lhs.false307_crit_edge:          ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false307

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %208, i32 0, i32 11
  %212 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i = icmp eq ptr %213, null
  br i1 %tobool.not.i, label %skb_zcopy.exit.i.lor.lhs.false307_crit_edge, label %if.end.i992, !prof !374

skb_zcopy.exit.i.lor.lhs.false307_crit_edge:      ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false307

if.end.i992:                                      ; preds = %skb_zcopy.exit.i
  %214 = ptrtoint ptr %213 to i32
  %and.i.i990 = and i32 %214, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i990)
  %tobool.i.not.i991 = icmp eq i32 %and.i.i990, 0
  br i1 %tobool.i.not.i991, label %land.lhs.true.i, label %if.end.i992.skb_orphan_frags.exit_crit_edge

if.end.i992.skb_orphan_frags.exit_crit_edge:      ; preds = %if.end.i992
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i:                                  ; preds = %if.end.i992
  %215 = ptrtoint ptr %213 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %213, align 4
  %cmp.i993 = icmp eq ptr %216, @msg_zerocopy_callback
  br i1 %cmp.i993, label %land.lhs.true.i.lor.lhs.false307_crit_edge, label %land.lhs.true.i.skb_orphan_frags.exit_crit_edge

land.lhs.true.i.skb_orphan_frags.exit_crit_edge:  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i.lor.lhs.false307_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false307

skb_orphan_frags.exit:                            ; preds = %land.lhs.true.i.skb_orphan_frags.exit_crit_edge, %if.end.i992.skb_orphan_frags.exit_crit_edge
  %call8.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %frag_skb.1, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool306.not = icmp eq i32 %call8.i, 0
  br i1 %tobool306.not, label %skb_orphan_frags.exit.lor.lhs.false307_crit_edge, label %skb_orphan_frags.exit.while.body.i.preheader_crit_edge

skb_orphan_frags.exit.while.body.i.preheader_crit_edge: ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.preheader

skb_orphan_frags.exit.lor.lhs.false307_crit_edge: ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false307

lor.lhs.false307:                                 ; preds = %skb_orphan_frags.exit.lor.lhs.false307_crit_edge, %land.lhs.true.i.lor.lhs.false307_crit_edge, %skb_zcopy.exit.i.lor.lhs.false307_crit_edge, %land.rhs.i.i.lor.lhs.false307_crit_edge, %skb_put.exit983.lor.lhs.false307_crit_edge
  %call308 = tail call fastcc i32 @skb_zerocopy_clone(ptr noundef nonnull %nskb.0, ptr noundef %frag_skb.1, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call308)
  %tobool309.not = icmp eq i32 %call308, 0
  br i1 %tobool309.not, label %while.cond312.preheader, label %lor.lhs.false307.while.body.i.preheader_crit_edge

lor.lhs.false307.while.body.i.preheader_crit_edge: ; preds = %lor.lhs.false307
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.preheader

while.cond312.preheader:                          ; preds = %lor.lhs.false307
  %add313 = add i32 %len.3, %offset.0
  call void @__sanitizer_cov_trace_cmp4(i32 %pos.2, i32 %add313)
  %cmp3141239 = icmp ult i32 %pos.2, %add313
  br i1 %cmp3141239, label %while.body316.preheader, label %while.cond312.preheader.skip_fraglist_crit_edge

while.cond312.preheader.skip_fraglist_crit_edge:  ; preds = %while.cond312.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %skip_fraglist

while.body316.preheader:                          ; preds = %while.cond312.preheader
  %frags295 = getelementptr inbounds %struct.skb_shared_info, ptr %187, i32 0, i32 12
  br label %while.body316

while.body316:                                    ; preds = %if.then426.while.body316_crit_edge, %while.body316.preheader
  %nskb_frag.01247 = phi ptr [ %incdec.ptr435, %if.then426.while.body316_crit_edge ], [ %frags295, %while.body316.preheader ]
  %pos.31246 = phi i32 [ %add422, %if.then426.while.body316_crit_edge ], [ %pos.2, %while.body316.preheader ]
  %i.31245 = phi i32 [ %inc427, %if.then426.while.body316_crit_edge ], [ %i.2, %while.body316.preheader ]
  %nfrags.21244 = phi i32 [ %nfrags.3, %if.then426.while.body316_crit_edge ], [ %nfrags.1, %while.body316.preheader ]
  %frag_skb.21243 = phi ptr [ %frag_skb.3, %if.then426.while.body316_crit_edge ], [ %frag_skb.1, %while.body316.preheader ]
  %frag.31242 = phi ptr [ %incdec.ptr428, %if.then426.while.body316_crit_edge ], [ %frag.2, %while.body316.preheader ]
  %list_skb.21240 = phi ptr [ %list_skb.3, %if.then426.while.body316_crit_edge ], [ %list_skb.1, %while.body316.preheader ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.31245, i32 %nfrags.21244)
  %cmp317.not = icmp slt i32 %i.31245, %nfrags.21244
  br i1 %cmp317.not, label %while.body316.if.end384_crit_edge, label %if.then319

while.body316.if.end384_crit_edge:                ; preds = %while.body316
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end384

if.then319:                                       ; preds = %while.body316
  %end.i995 = getelementptr inbounds %struct.sk_buff, ptr %list_skb.21240, i32 0, i32 17
  %217 = ptrtoint ptr %end.i995 to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %end.i995, align 4
  %nr_frags321 = getelementptr inbounds %struct.skb_shared_info, ptr %218, i32 0, i32 2
  %219 = ptrtoint ptr %nr_frags321 to i32
  call void @__asan_load1_noabort(i32 %219)
  %220 = load i8, ptr %nr_frags321, align 2
  %conv322 = zext i8 %220 to i32
  %len.i997 = getelementptr inbounds %struct.sk_buff, ptr %list_skb.21240, i32 0, i32 6
  %221 = ptrtoint ptr %len.i997 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load i32, ptr %len.i997, align 4
  %data_len.i998 = getelementptr inbounds %struct.sk_buff, ptr %list_skb.21240, i32 0, i32 7
  %223 = ptrtoint ptr %data_len.i998 to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %data_len.i998, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %222, i32 %224)
  %tobool327.not = icmp eq i32 %222, %224
  br i1 %tobool327.not, label %do.body329, label %do.body350

do.body329:                                       ; preds = %if.then319
  %frags324 = getelementptr inbounds %struct.skb_shared_info, ptr %218, i32 0, i32 12
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %220)
  %tobool330.not = icmp eq i8 %220, 0
  br i1 %tobool330.not, label %do.body340, label %do.body329.if.end375_crit_edge, !prof !373

do.body329.if.end375_crit_edge:                   ; preds = %do.body329
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end375

do.body340:                                       ; preds = %do.body329
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4179, 0\0A.popsection", ""() #20, !srcloc !440
  unreachable

do.body350:                                       ; preds = %if.then319
  %head_frag351 = getelementptr inbounds %struct.sk_buff, ptr %list_skb.21240, i32 0, i32 12
  %225 = ptrtoint ptr %head_frag351 to i32
  call void @__asan_load1_noabort(i32 %225)
  %bf.load352 = load i8, ptr %head_frag351, align 2
  %226 = and i8 %bf.load352, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %226)
  %tobool355.not = icmp eq i8 %226, 0
  br i1 %tobool355.not, label %do.body365, label %do.end373, !prof !373

do.body365:                                       ; preds = %do.body350
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4181, 0\0A.popsection", ""() #20, !srcloc !441
  unreachable

do.end373:                                        ; preds = %do.body350
  call void @__sanitizer_cov_trace_pc() #22
  %incdec.ptr374 = getelementptr %struct.skb_shared_info, ptr %218, i32 0, i32 9
  br label %if.end375

if.end375:                                        ; preds = %do.end373, %do.body329.if.end375_crit_edge
  %frag.4 = phi ptr [ %incdec.ptr374, %do.end373 ], [ %frags324, %do.body329.if.end375_crit_edge ]
  %i.4 = phi i32 [ -1, %do.end373 ], [ 0, %do.body329.if.end375_crit_edge ]
  %tobool.not.i.i1000 = icmp eq ptr %list_skb.21240, null
  br i1 %tobool.not.i.i1000, label %if.end375.lor.lhs.false378_crit_edge, label %land.rhs.i.i1003

if.end375.lor.lhs.false378_crit_edge:             ; preds = %if.end375
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false378

land.rhs.i.i1003:                                 ; preds = %if.end375
  %227 = ptrtoint ptr %218 to i32
  call void @__asan_load1_noabort(i32 %227)
  %228 = load i8, ptr %218, align 8
  %229 = and i8 %228, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %229)
  %tobool1.not.i.i1002 = icmp eq i8 %229, 0
  br i1 %tobool1.not.i.i1002, label %land.rhs.i.i1003.lor.lhs.false378_crit_edge, label %skb_zcopy.exit.i1006

land.rhs.i.i1003.lor.lhs.false378_crit_edge:      ; preds = %land.rhs.i.i1003
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false378

skb_zcopy.exit.i1006:                             ; preds = %land.rhs.i.i1003
  %destructor_arg.i.i1004 = getelementptr inbounds %struct.skb_shared_info, ptr %218, i32 0, i32 11
  %230 = ptrtoint ptr %destructor_arg.i.i1004 to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %destructor_arg.i.i1004, align 4
  %tobool.not.i1005 = icmp eq ptr %231, null
  br i1 %tobool.not.i1005, label %skb_zcopy.exit.i1006.lor.lhs.false378_crit_edge, label %if.end.i1009, !prof !374

skb_zcopy.exit.i1006.lor.lhs.false378_crit_edge:  ; preds = %skb_zcopy.exit.i1006
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false378

if.end.i1009:                                     ; preds = %skb_zcopy.exit.i1006
  %232 = ptrtoint ptr %231 to i32
  %and.i.i1007 = and i32 %232, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i1007)
  %tobool.i.not.i1008 = icmp eq i32 %and.i.i1007, 0
  br i1 %tobool.i.not.i1008, label %land.lhs.true.i1011, label %if.end.i1009.skb_orphan_frags.exit1015_crit_edge

if.end.i1009.skb_orphan_frags.exit1015_crit_edge: ; preds = %if.end.i1009
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit1015

land.lhs.true.i1011:                              ; preds = %if.end.i1009
  %233 = ptrtoint ptr %231 to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %231, align 4
  %cmp.i1010 = icmp eq ptr %234, @msg_zerocopy_callback
  br i1 %cmp.i1010, label %land.lhs.true.i1011.lor.lhs.false378_crit_edge, label %land.lhs.true.i1011.skb_orphan_frags.exit1015_crit_edge

land.lhs.true.i1011.skb_orphan_frags.exit1015_crit_edge: ; preds = %land.lhs.true.i1011
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit1015

land.lhs.true.i1011.lor.lhs.false378_crit_edge:   ; preds = %land.lhs.true.i1011
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false378

skb_orphan_frags.exit1015:                        ; preds = %land.lhs.true.i1011.skb_orphan_frags.exit1015_crit_edge, %if.end.i1009.skb_orphan_frags.exit1015_crit_edge
  %call8.i1012 = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %list_skb.21240, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i1012)
  %tobool377.not = icmp eq i32 %call8.i1012, 0
  br i1 %tobool377.not, label %skb_orphan_frags.exit1015.lor.lhs.false378_crit_edge, label %skb_orphan_frags.exit1015.err572_crit_edge

skb_orphan_frags.exit1015.err572_crit_edge:       ; preds = %skb_orphan_frags.exit1015
  call void @__sanitizer_cov_trace_pc() #22
  br label %err572

skb_orphan_frags.exit1015.lor.lhs.false378_crit_edge: ; preds = %skb_orphan_frags.exit1015
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false378

lor.lhs.false378:                                 ; preds = %skb_orphan_frags.exit1015.lor.lhs.false378_crit_edge, %land.lhs.true.i1011.lor.lhs.false378_crit_edge, %skb_zcopy.exit.i1006.lor.lhs.false378_crit_edge, %land.rhs.i.i1003.lor.lhs.false378_crit_edge, %if.end375.lor.lhs.false378_crit_edge
  %call379 = tail call fastcc i32 @skb_zerocopy_clone(ptr noundef nonnull %nskb.0, ptr noundef %list_skb.21240, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call379)
  %tobool380.not = icmp eq i32 %call379, 0
  br i1 %tobool380.not, label %if.end382, label %lor.lhs.false378.err572_crit_edge

lor.lhs.false378.err572_crit_edge:                ; preds = %lor.lhs.false378
  call void @__sanitizer_cov_trace_pc() #22
  br label %err572

if.end382:                                        ; preds = %lor.lhs.false378
  call void @__sanitizer_cov_trace_pc() #22
  %235 = ptrtoint ptr %list_skb.21240 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load ptr, ptr %list_skb.21240, align 8
  br label %if.end384

if.end384:                                        ; preds = %if.end382, %while.body316.if.end384_crit_edge
  %list_skb.3 = phi ptr [ %236, %if.end382 ], [ %list_skb.21240, %while.body316.if.end384_crit_edge ]
  %frag.5 = phi ptr [ %frag.4, %if.end382 ], [ %frag.31242, %while.body316.if.end384_crit_edge ]
  %frag_skb.3 = phi ptr [ %list_skb.21240, %if.end382 ], [ %frag_skb.21243, %while.body316.if.end384_crit_edge ]
  %nfrags.3 = phi i32 [ %conv322, %if.end382 ], [ %nfrags.21244, %while.body316.if.end384_crit_edge ]
  %i.5 = phi i32 [ %i.4, %if.end382 ], [ %i.31245, %while.body316.if.end384_crit_edge ]
  %237 = ptrtoint ptr %end.i971 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %end.i971, align 4
  %nr_frags386 = getelementptr inbounds %struct.skb_shared_info, ptr %238, i32 0, i32 2
  %239 = ptrtoint ptr %nr_frags386 to i32
  call void @__asan_load1_noabort(i32 %239)
  %240 = load i8, ptr %nr_frags386, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 16, i8 %240)
  %cmp388 = icmp ugt i8 %240, 16
  br i1 %cmp388, label %do.body397, label %if.end408, !prof !373

do.body397:                                       ; preds = %if.end384
  %call398 = tail call i32 @net_ratelimit() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call398)
  %tobool399.not = icmp eq i32 %call398, 0
  br i1 %tobool399.not, label %do.body397.err572_crit_edge, label %do.end403

do.body397.err572_crit_edge:                      ; preds = %do.body397
  call void @__sanitizer_cov_trace_pc() #22
  br label %err572

do.end403:                                        ; preds = %do.body397
  call void @__sanitizer_cov_trace_pc() #22
  %call404 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17, i32 noundef %pos.31246, i32 noundef %mss.0) #23
  br label %err572

if.end408:                                        ; preds = %if.end384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.5)
  %cmp409 = icmp slt i32 %i.5, 0
  br i1 %cmp409, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end408
  %head.i1017 = getelementptr inbounds %struct.sk_buff, ptr %frag_skb.3, i32 0, i32 18
  %241 = ptrtoint ptr %head.i1017 to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %head.i1017, align 8, !noalias !442
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %243 = load ptr, ptr @mem_map, align 4, !noalias !442
  %244 = ptrtoint ptr %242 to i32
  %sub.i.i1018 = add i32 %244, 1073741824
  %shr.i.i1019 = lshr i32 %sub.i.i1018, 12
  %245 = getelementptr %struct.page, ptr %243, i32 %shr.i.i1019, i32 1
  %246 = ptrtoint ptr %245 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load volatile i32, ptr %245, align 4, !noalias !442
  %and.i.i.i = and i32 %247, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !374

if.then.i.i.i:                                    ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i = add i32 %247, -1
  br label %skb_head_frag_to_page_desc.exit

if.end.i.i.i:                                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i.i1020 = getelementptr %struct.page, ptr %243, i32 %shr.i.i1019
  %248 = ptrtoint ptr %add.ptr.i.i1020 to i32
  br label %skb_head_frag_to_page_desc.exit

skb_head_frag_to_page_desc.exit:                  ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %248, %if.end.i.i.i ]
  %249 = inttoptr i32 %retval.0.i.i.i to ptr
  %data.i1021 = getelementptr inbounds %struct.sk_buff, ptr %frag_skb.3, i32 0, i32 19
  %250 = ptrtoint ptr %data.i1021 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %data.i1021, align 4, !noalias !442
  %call1.i = tail call ptr @page_address(ptr noundef %249) #20, !noalias !442
  %sub.ptr.lhs.cast.i1022 = ptrtoint ptr %251 to i32
  %sub.ptr.rhs.cast.i1023 = ptrtoint ptr %call1.i to i32
  %sub.ptr.sub.i1024 = sub i32 %sub.ptr.lhs.cast.i1022, %sub.ptr.rhs.cast.i1023
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %frag_skb.3, i32 0, i32 6
  %252 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %len.i.i, align 4, !noalias !442
  %data_len.i.i1025 = getelementptr inbounds %struct.sk_buff, ptr %frag_skb.3, i32 0, i32 7
  %254 = ptrtoint ptr %data_len.i.i1025 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %data_len.i.i1025, align 8, !noalias !442
  %sub.i6.i = sub i32 %253, %255
  %256 = ptrtoint ptr %nskb_frag.01247 to i32
  call void @__asan_store4_noabort(i32 %256)
  store ptr %249, ptr %nskb_frag.01247, align 4
  %tmp411.sroa.4.0.nskb_frag.0.sroa_idx = getelementptr inbounds i8, ptr %nskb_frag.01247, i32 4
  %257 = ptrtoint ptr %tmp411.sroa.4.0.nskb_frag.0.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %257)
  store i32 %sub.i6.i, ptr %tmp411.sroa.4.0.nskb_frag.0.sroa_idx, align 4
  %tmp411.sroa.5.0.nskb_frag.0.sroa_idx = getelementptr inbounds i8, ptr %nskb_frag.01247, i32 8
  %258 = ptrtoint ptr %tmp411.sroa.5.0.nskb_frag.0.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %258)
  store i32 %sub.ptr.sub.i1024, ptr %tmp411.sroa.5.0.nskb_frag.0.sroa_idx, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end408
  call void @__sanitizer_cov_trace_pc() #22
  %259 = call ptr @memcpy(ptr %nskb_frag.01247, ptr %frag.5, i32 12)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %skb_head_frag_to_page_desc.exit
  %260 = ptrtoint ptr %nskb_frag.01247 to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %nskb_frag.01247, align 4
  %262 = getelementptr inbounds %struct.page, ptr %261, i32 0, i32 1
  %263 = ptrtoint ptr %262 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load volatile i32, ptr %262, align 4
  %and.i.i.i1026 = and i32 %264, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1026)
  %tobool.not.i.i.i1027 = icmp eq i32 %and.i.i.i1026, 0
  br i1 %tobool.not.i.i.i1027, label %if.end.i.i.i1030, label %if.then.i.i.i1029, !prof !374

if.then.i.i.i1029:                                ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i1028 = add i32 %264, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i1030:                                 ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #22
  %265 = ptrtoint ptr %261 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i1030, %if.then.i.i.i1029
  %retval.0.i.i.i1031 = phi i32 [ %sub.i.i.i1028, %if.then.i.i.i1029 ], [ %265, %if.end.i.i.i1030 ]
  %266 = inttoptr i32 %retval.0.i.i.i1031 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %266, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  %267 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  %add.i.i.i = add i32 %268, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i.i)
  %cmp.i.i.i = icmp ult i32 %add.i.i.i, 128
  br i1 %cmp.i.i.i, label %if.then.i1.i.i, label %do.end5.i.i.i, !prof !373

if.then.i1.i.i:                                   ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %269 = inttoptr i32 %retval.0.i.i.i1031 to ptr
  tail call void @dump_page(ptr noundef %269, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i.i:                                    ; preds = %_compound_head.exit.i.i
  %call.i.i.i.i9.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %270 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@skb_segment, %if.then.i.i.i.i.i)) #20
          to label %__skb_frag_ref.exit [label %if.then.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %266, i32 noundef 1) #20
  br label %__skb_frag_ref.exit

__skb_frag_ref.exit:                              ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i
  %bv_len.i1032 = getelementptr inbounds %struct.bio_vec, ptr %nskb_frag.01247, i32 0, i32 1
  %271 = ptrtoint ptr %bv_len.i1032 to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load i32, ptr %bv_len.i1032, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %offset.0, i32 %pos.31246)
  %cmp413 = icmp ugt i32 %offset.0, %pos.31246
  br i1 %cmp413, label %if.then415, label %__skb_frag_ref.exit.if.end418_crit_edge

__skb_frag_ref.exit.if.end418_crit_edge:          ; preds = %__skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end418

if.then415:                                       ; preds = %__skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  %sub416 = sub i32 %offset.0, %pos.31246
  %bv_offset.i = getelementptr inbounds %struct.bio_vec, ptr %nskb_frag.01247, i32 0, i32 2
  %273 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %bv_offset.i, align 4
  %add.i1033 = add i32 %274, %sub416
  store i32 %add.i1033, ptr %bv_offset.i, align 4
  %sub.i1035 = sub i32 %272, %sub416
  %275 = ptrtoint ptr %bv_len.i1032 to i32
  call void @__asan_store4_noabort(i32 %275)
  store i32 %sub.i1035, ptr %bv_len.i1032, align 4
  br label %if.end418

if.end418:                                        ; preds = %if.then415, %__skb_frag_ref.exit.if.end418_crit_edge
  %276 = ptrtoint ptr %end.i971 to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load ptr, ptr %end.i971, align 4
  %nr_frags420 = getelementptr inbounds %struct.skb_shared_info, ptr %277, i32 0, i32 2
  %278 = ptrtoint ptr %nr_frags420 to i32
  call void @__asan_load1_noabort(i32 %278)
  %279 = load i8, ptr %nr_frags420, align 2
  %inc421 = add i8 %279, 1
  store i8 %inc421, ptr %nr_frags420, align 2
  %add422 = add i32 %272, %pos.31246
  call void @__sanitizer_cov_trace_cmp4(i32 %add313, i32 %add422)
  %cmp424.not = icmp ult i32 %add313, %add422
  br i1 %cmp424.not, label %if.else430, label %if.then426

if.then426:                                       ; preds = %if.end418
  %inc427 = add nsw i32 %i.5, 1
  %incdec.ptr428 = getelementptr %struct.bio_vec, ptr %frag.5, i32 1
  %incdec.ptr435 = getelementptr %struct.bio_vec, ptr %nskb_frag.01247, i32 1
  %cmp314 = icmp ugt i32 %add313, %add422
  br i1 %cmp314, label %if.then426.while.body316_crit_edge, label %if.then426.skip_fraglist_crit_edge

if.then426.skip_fraglist_crit_edge:               ; preds = %if.then426
  call void @__sanitizer_cov_trace_pc() #22
  br label %skip_fraglist

if.then426.while.body316_crit_edge:               ; preds = %if.then426
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body316

if.else430:                                       ; preds = %if.end418
  call void @__sanitizer_cov_trace_pc() #22
  %sub433.neg = sub i32 %add313, %add422
  %280 = ptrtoint ptr %bv_len.i1032 to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %bv_len.i1032, align 4
  %sub.i1038 = add i32 %sub433.neg, %281
  store i32 %sub.i1038, ptr %bv_len.i1032, align 4
  br label %skip_fraglist

skip_fraglist:                                    ; preds = %if.else430, %if.then426.skip_fraglist_crit_edge, %while.cond312.preheader.skip_fraglist_crit_edge
  %pos.31114 = phi i32 [ %pos.31246, %if.else430 ], [ %pos.2, %while.cond312.preheader.skip_fraglist_crit_edge ], [ %add422, %if.then426.skip_fraglist_crit_edge ]
  %list_skb.4 = phi ptr [ %list_skb.3, %if.else430 ], [ %list_skb.1, %while.cond312.preheader.skip_fraglist_crit_edge ], [ %list_skb.3, %if.then426.skip_fraglist_crit_edge ]
  %frag.6 = phi ptr [ %frag.5, %if.else430 ], [ %frag.2, %while.cond312.preheader.skip_fraglist_crit_edge ], [ %incdec.ptr428, %if.then426.skip_fraglist_crit_edge ]
  %frag_skb.4 = phi ptr [ %frag_skb.3, %if.else430 ], [ %frag_skb.1, %while.cond312.preheader.skip_fraglist_crit_edge ], [ %frag_skb.3, %if.then426.skip_fraglist_crit_edge ]
  %nfrags.4 = phi i32 [ %nfrags.3, %if.else430 ], [ %nfrags.1, %while.cond312.preheader.skip_fraglist_crit_edge ], [ %nfrags.3, %if.then426.skip_fraglist_crit_edge ]
  %i.6 = phi i32 [ %i.5, %if.else430 ], [ %i.2, %while.cond312.preheader.skip_fraglist_crit_edge ], [ %inc427, %if.then426.skip_fraglist_crit_edge ]
  %sub437 = sub i32 %len.3, %hsize.1
  %282 = ptrtoint ptr %data_len.i.i973 to i32
  call void @__asan_store4_noabort(i32 %282)
  store i32 %sub437, ptr %data_len.i.i973, align 8
  %283 = ptrtoint ptr %len260 to i32
  call void @__asan_load4_noabort(i32 %283)
  %284 = load i32, ptr %len260, align 4
  %add440 = add i32 %284, %sub437
  store i32 %add440, ptr %len260, align 4
  %truesize442 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 20
  %285 = ptrtoint ptr %truesize442 to i32
  call void @__asan_load4_noabort(i32 %285)
  %286 = load i32, ptr %truesize442, align 8
  %add443 = add i32 %286, %sub437
  store i32 %add443, ptr %truesize442, align 8
  br label %perform_csum_check

perform_csum_check:                               ; preds = %skip_fraglist, %skb_headers_offset_update.exit.perform_csum_check_crit_edge
  %list_skb.5 = phi ptr [ %list_skb.1, %skb_headers_offset_update.exit.perform_csum_check_crit_edge ], [ %list_skb.4, %skip_fraglist ]
  %frag.7 = phi ptr [ %frag.2, %skb_headers_offset_update.exit.perform_csum_check_crit_edge ], [ %frag.6, %skip_fraglist ]
  %frag_skb.5 = phi ptr [ %frag_skb.1, %skb_headers_offset_update.exit.perform_csum_check_crit_edge ], [ %frag_skb.4, %skip_fraglist ]
  %nfrags.5 = phi i32 [ %nfrags.1, %skb_headers_offset_update.exit.perform_csum_check_crit_edge ], [ %nfrags.4, %skip_fraglist ]
  %i.7 = phi i32 [ %i.2, %skb_headers_offset_update.exit.perform_csum_check_crit_edge ], [ %i.6, %skip_fraglist ]
  %pos.4 = phi i32 [ %pos.2, %skb_headers_offset_update.exit.perform_csum_check_crit_edge ], [ %pos.31114, %skip_fraglist ]
  br i1 %retval.0.i1067, label %perform_csum_check.do.cond486_crit_edge, label %if.then445

perform_csum_check.do.cond486_crit_edge:          ; preds = %perform_csum_check
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.cond486

if.then445:                                       ; preds = %perform_csum_check
  %data_len.i.i1039 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 7
  %287 = ptrtoint ptr %data_len.i.i1039 to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load i32, ptr %data_len.i.i1039, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %288)
  %tobool.i.not.i1040 = icmp eq i32 %288, 0
  br i1 %tobool.i.not.i1040, label %if.then445.if.end452_crit_edge, label %skb_has_shared_frag.exit

if.then445.if.end452_crit_edge:                   ; preds = %if.then445
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end452

skb_has_shared_frag.exit:                         ; preds = %if.then445
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 17
  %289 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %289)
  %290 = load ptr, ptr %end.i.i, align 4
  %291 = ptrtoint ptr %290 to i32
  call void @__asan_load1_noabort(i32 %291)
  %292 = load i8, ptr %290, align 8
  %293 = and i8 %292, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %293)
  %tobool.i1041.not = icmp eq i8 %293, 0
  br i1 %tobool.i1041.not, label %skb_has_shared_frag.exit.if.end452_crit_edge, label %land.lhs.true448

skb_has_shared_frag.exit.if.end452_crit_edge:     ; preds = %skb_has_shared_frag.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end452

land.lhs.true448:                                 ; preds = %skb_has_shared_frag.exit
  %call.i = tail call ptr @__pskb_pull_tail(ptr noundef nonnull %nskb.0, i32 noundef %288) #20
  %tobool.not.i1043.not = icmp eq ptr %call.i, null
  br i1 %tobool.not.i1043.not, label %land.lhs.true448.err572_crit_edge, label %land.lhs.true448.if.end452_crit_edge

land.lhs.true448.if.end452_crit_edge:             ; preds = %land.lhs.true448
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end452

land.lhs.true448.err572_crit_edge:                ; preds = %land.lhs.true448
  call void @__sanitizer_cov_trace_pc() #22
  br label %err572

if.end452:                                        ; preds = %land.lhs.true448.if.end452_crit_edge, %skb_has_shared_frag.exit.if.end452_crit_edge, %if.then445.if.end452_crit_edge
  %remcsum_offload453 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 15, i32 0, i32 3
  %294 = ptrtoint ptr %remcsum_offload453 to i32
  call void @__asan_loadN_noabort(i32 %294, i32 4)
  %bf.load454 = load i32, ptr %remcsum_offload453, align 2
  %295 = and i32 %bf.load454, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %295)
  %tobool458.not = icmp eq i32 %295, 0
  br i1 %tobool458.not, label %if.then459, label %if.end452.if.end464_crit_edge

if.end452.if.end464_crit_edge:                    ; preds = %if.end452
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end464

if.then459:                                       ; preds = %if.end452
  call void @__sanitizer_cov_trace_pc() #22
  %296 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %296)
  %bf.load461 = load i16, ptr %ip_summed.i, align 8
  %bf.clear462 = and i16 %bf.load461, -1537
  store i16 %bf.clear462, ptr %ip_summed.i, align 8
  br label %if.end464

if.end464:                                        ; preds = %if.then459, %if.end452.if.end464_crit_edge
  %297 = ptrtoint ptr %len260 to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %len260, align 4
  %sub466 = sub i32 %298, %sub.ptr.sub
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ops.i) #20
  %299 = load i64, ptr @__const.skb_checksum.ops, align 8
  %300 = ptrtoint ptr %ops.i to i32
  call void @__asan_store8_noabort(i32 %300)
  store i64 %299, ptr %ops.i, align 8
  %call.i1045 = call i32 @__skb_checksum(ptr noundef nonnull %nskb.0, i32 noundef %sub.ptr.sub, i32 noundef %sub466, i32 noundef 0, ptr noundef nonnull %ops.i) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ops.i) #20
  %csum471 = getelementptr %struct.sk_buff, ptr %nskb.0, i32 0, i32 3, i32 40
  %301 = ptrtoint ptr %csum471 to i32
  call void @__asan_store4_noabort(i32 %301)
  store i32 %call.i1045, ptr %csum471, align 4
  %302 = ptrtoint ptr %data.i930 to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load ptr, ptr %data.i930, align 4
  %304 = ptrtoint ptr %head.i931 to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %head.i931, align 8
  %sub.ptr.lhs.cast.i1048 = ptrtoint ptr %303 to i32
  %sub.ptr.rhs.cast.i1049 = ptrtoint ptr %305 to i32
  %sub.ptr.sub.i1050 = add i32 %sub.ptr.sub, %sub.ptr.lhs.cast.i1048
  %add473 = sub i32 %sub.ptr.sub.i1050, %sub.ptr.rhs.cast.i1049
  %conv474 = trunc i32 %add473 to i16
  %csum_start478 = getelementptr %struct.sk_buff, ptr %nskb.0, i32 0, i32 3, i32 44
  %306 = ptrtoint ptr %csum_start478 to i32
  call void @__asan_store2_noabort(i32 %306)
  store i16 %conv474, ptr %csum_start478, align 4
  br label %do.cond486

do.cond486:                                       ; preds = %if.end464, %perform_csum_check.do.cond486_crit_edge, %skb_put.exit970, %skb_put.exit
  %list_skb.6 = phi ptr [ %list_skb.1, %skb_put.exit970 ], [ %list_skb.1, %skb_put.exit ], [ %list_skb.5, %if.end464 ], [ %list_skb.5, %perform_csum_check.do.cond486_crit_edge ]
  %frag.8 = phi ptr [ %frag.2, %skb_put.exit970 ], [ %frag.2, %skb_put.exit ], [ %frag.7, %if.end464 ], [ %frag.7, %perform_csum_check.do.cond486_crit_edge ]
  %frag_skb.6 = phi ptr [ %frag_skb.1, %skb_put.exit970 ], [ %frag_skb.1, %skb_put.exit ], [ %frag_skb.5, %if.end464 ], [ %frag_skb.5, %perform_csum_check.do.cond486_crit_edge ]
  %nfrags.6 = phi i32 [ %nfrags.1, %skb_put.exit970 ], [ %nfrags.1, %skb_put.exit ], [ %nfrags.5, %if.end464 ], [ %nfrags.5, %perform_csum_check.do.cond486_crit_edge ]
  %i.8 = phi i32 [ %i.2, %skb_put.exit970 ], [ %i.2, %skb_put.exit ], [ %i.7, %if.end464 ], [ %i.7, %perform_csum_check.do.cond486_crit_edge ]
  %pos.5 = phi i32 [ %pos.2, %skb_put.exit970 ], [ %pos.2, %skb_put.exit ], [ %pos.4, %if.end464 ], [ %pos.4, %perform_csum_check.do.cond486_crit_edge ]
  %add487 = add i32 %len.3, %offset.0
  %307 = ptrtoint ptr %len5 to i32
  call void @__asan_load4_noabort(i32 %307)
  %308 = load i32, ptr %len5, align 4
  %cmp489 = icmp ult i32 %add487, %308
  br i1 %cmp489, label %do.cond486.do.body_crit_edge, label %do.end491

do.cond486.do.body_crit_edge:                     ; preds = %do.cond486
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.end491:                                        ; preds = %do.cond486
  %prev = getelementptr inbounds %struct.anon.27, ptr %segs.1, i32 0, i32 1
  %309 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %309)
  store ptr %nskb.0, ptr %prev, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %partial_segs.0)
  %tobool492.not = icmp eq i32 %partial_segs.0, 0
  br i1 %tobool492.not, label %do.end491.if.end548_crit_edge, label %if.then493

do.end491.if.end548_crit_edge:                    ; preds = %do.end491
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end548

if.then493:                                       ; preds = %do.end491
  %310 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %end.i, align 4
  %gso_type496 = getelementptr inbounds %struct.skb_shared_info, ptr %311, i32 0, i32 8
  %312 = ptrtoint ptr %gso_type496 to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %gso_type496, align 8
  %gso_size499 = getelementptr inbounds %struct.skb_shared_info, ptr %311, i32 0, i32 4
  %314 = ptrtoint ptr %gso_size499 to i32
  call void @__asan_load2_noabort(i32 %314)
  %315 = load i16, ptr %gso_size499, align 4
  %316 = trunc i64 %features.addr.0 to i32
  %317 = lshr i32 %316, 16
  %318 = and i32 %317, 4096
  %.masked = and i32 %313, -3
  %and506 = or i32 %.masked, %318
  %conv512 = trunc i32 %partial_segs.0 to i16
  br label %for.body509

for.body509:                                      ; preds = %for.body509.for.body509_crit_edge, %if.then493
  %iter494.01256 = phi ptr [ %segs.1, %if.then493 ], [ %332, %for.body509.for.body509_crit_edge ]
  %end.i1053 = getelementptr inbounds %struct.sk_buff, ptr %iter494.01256, i32 0, i32 17
  %319 = ptrtoint ptr %end.i1053 to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %end.i1053, align 4
  %gso_size511 = getelementptr inbounds %struct.skb_shared_info, ptr %320, i32 0, i32 4
  %321 = ptrtoint ptr %gso_size511 to i32
  call void @__asan_store2_noabort(i32 %321)
  store i16 %315, ptr %gso_size511, align 4
  %322 = load ptr, ptr %end.i1053, align 4
  %gso_segs = getelementptr inbounds %struct.skb_shared_info, ptr %322, i32 0, i32 5
  %323 = ptrtoint ptr %gso_segs to i32
  call void @__asan_store2_noabort(i32 %323)
  store i16 %conv512, ptr %gso_segs, align 2
  %324 = load ptr, ptr %end.i1053, align 4
  %gso_type515 = getelementptr inbounds %struct.skb_shared_info, ptr %324, i32 0, i32 8
  %325 = ptrtoint ptr %gso_type515 to i32
  call void @__asan_store4_noabort(i32 %325)
  store i32 %and506, ptr %gso_type515, align 8
  %data.i1056 = getelementptr inbounds %struct.sk_buff, ptr %iter494.01256, i32 0, i32 19
  %326 = ptrtoint ptr %data.i1056 to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %data.i1056, align 4
  %head.i1057 = getelementptr inbounds %struct.sk_buff, ptr %iter494.01256, i32 0, i32 18
  %328 = ptrtoint ptr %head.i1057 to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %head.i1057, align 8
  %sub.ptr.lhs.cast.i1058 = ptrtoint ptr %327 to i32
  %sub.ptr.rhs.cast.i1059 = ptrtoint ptr %329 to i32
  %sub.ptr.sub.i1060 = add i32 %sub.ptr.sub, %sub.ptr.lhs.cast.i1058
  %add517 = sub i32 %sub.ptr.sub.i1060, %sub.ptr.rhs.cast.i1059
  %add.ptr520 = getelementptr %struct.sk_buff, ptr %iter494.01256, i32 0, i32 3, i32 32
  %330 = ptrtoint ptr %add.ptr520 to i32
  call void @__asan_store4_noabort(i32 %330)
  store i32 %add517, ptr %add.ptr520, align 4
  %331 = ptrtoint ptr %iter494.01256 to i32
  call void @__asan_load4_noabort(i32 %331)
  %332 = load ptr, ptr %iter494.01256, align 8
  %tobool508.not = icmp eq ptr %332, null
  br i1 %tobool508.not, label %for.end523, label %for.body509.for.body509_crit_edge

for.body509.for.body509_crit_edge:                ; preds = %for.body509
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body509

for.end523:                                       ; preds = %for.body509
  %333 = ptrtoint ptr %len260 to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load i32, ptr %len260, align 4
  %sub525 = sub i32 %334, %sub.ptr.sub
  %conv526 = zext i16 %315 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub525, i32 %conv526)
  %cmp527.not = icmp ugt i32 %sub525, %conv526
  br i1 %cmp527.not, label %if.else532, label %if.then529

if.then529:                                       ; preds = %for.end523
  call void @__sanitizer_cov_trace_pc() #22
  %end.i1061 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 17
  %335 = ptrtoint ptr %end.i1061 to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load ptr, ptr %end.i1061, align 4
  %gso_size531 = getelementptr inbounds %struct.skb_shared_info, ptr %336, i32 0, i32 4
  %337 = ptrtoint ptr %gso_size531 to i32
  call void @__asan_store2_noabort(i32 %337)
  store i16 0, ptr %gso_size531, align 4
  br label %if.end548

if.else532:                                       ; preds = %for.end523
  %cmp533.not = icmp eq ptr %nskb.0, %segs.1
  br i1 %cmp533.not, label %if.else532.if.end548_crit_edge, label %if.then535

if.else532.if.end548_crit_edge:                   ; preds = %if.else532
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end548

if.then535:                                       ; preds = %if.else532
  call void @__sanitizer_cov_trace_pc() #22
  %add539 = add nsw i32 %conv526, -1
  %sub540 = add i32 %add539, %sub525
  %div542 = udiv i32 %sub540, %conv526
  %conv543 = trunc i32 %div542 to i16
  %end.i1062 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 17
  %338 = ptrtoint ptr %end.i1062 to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load ptr, ptr %end.i1062, align 4
  %gso_segs545 = getelementptr inbounds %struct.skb_shared_info, ptr %339, i32 0, i32 5
  %340 = ptrtoint ptr %gso_segs545 to i32
  call void @__asan_store2_noabort(i32 %340)
  store i16 %conv543, ptr %gso_segs545, align 2
  br label %if.end548

if.end548:                                        ; preds = %if.then535, %if.else532.if.end548_crit_edge, %if.then529, %do.end491.if.end548_crit_edge
  %destructor = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 4, i32 0, i32 1
  %341 = ptrtoint ptr %destructor to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load ptr, ptr %destructor, align 4
  %cmp549 = icmp eq ptr %342, @sock_wfree
  br i1 %cmp549, label %do.body552, label %if.end548.cleanup574_crit_edge

if.end548.cleanup574_crit_edge:                   ; preds = %if.end548
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup574

do.body552:                                       ; preds = %if.end548
  call void @__sanitizer_cov_trace_pc() #22
  %truesize553 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 20
  %343 = ptrtoint ptr %truesize553 to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load i32, ptr %truesize553, align 8
  %truesize554 = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 20
  %345 = ptrtoint ptr %truesize554 to i32
  call void @__asan_load4_noabort(i32 %345)
  %346 = load i32, ptr %truesize554, align 8
  store i32 %346, ptr %truesize553, align 8
  store i32 %344, ptr %truesize554, align 8
  %destructor561 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 4, i32 0, i32 1
  %347 = ptrtoint ptr %destructor561 to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load ptr, ptr %destructor561, align 4
  %349 = ptrtoint ptr %destructor to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load ptr, ptr %destructor, align 4
  store ptr %350, ptr %destructor561, align 4
  store ptr %348, ptr %destructor, align 4
  %351 = getelementptr inbounds %struct.sk_buff, ptr %nskb.0, i32 0, i32 1
  %352 = ptrtoint ptr %351 to i32
  call void @__asan_load4_noabort(i32 %352)
  %353 = load ptr, ptr %351, align 4
  %354 = getelementptr inbounds %struct.sk_buff, ptr %head_skb, i32 0, i32 1
  %355 = ptrtoint ptr %354 to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load ptr, ptr %354, align 4
  store ptr %356, ptr %351, align 4
  store ptr %353, ptr %354, align 4
  br label %cleanup574

err572:                                           ; preds = %land.lhs.true448.err572_crit_edge, %do.end403, %do.body397.err572_crit_edge, %lor.lhs.false378.err572_crit_edge, %skb_orphan_frags.exit1015.err572_crit_edge, %if.else222.err572_crit_edge, %if.then216, %if.then210, %while.end.err572_crit_edge
  %err.1.ph = phi ptr [ inttoptr (i32 -22 to ptr), %do.body397.err572_crit_edge ], [ inttoptr (i32 -22 to ptr), %do.end403 ], [ inttoptr (i32 -12 to ptr), %if.then216 ], [ inttoptr (i32 -12 to ptr), %if.then210 ], [ inttoptr (i32 -12 to ptr), %skb_orphan_frags.exit1015.err572_crit_edge ], [ inttoptr (i32 -12 to ptr), %lor.lhs.false378.err572_crit_edge ], [ inttoptr (i32 -12 to ptr), %land.lhs.true448.err572_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.else222.err572_crit_edge ], [ inttoptr (i32 -12 to ptr), %while.end.err572_crit_edge ]
  %segs.2.ph = phi ptr [ %segs.1, %do.body397.err572_crit_edge ], [ %segs.1, %do.end403 ], [ %segs.0, %if.then216 ], [ %segs.0, %if.then210 ], [ %segs.1, %skb_orphan_frags.exit1015.err572_crit_edge ], [ %segs.1, %lor.lhs.false378.err572_crit_edge ], [ %segs.0, %while.end.err572_crit_edge ], [ %segs.0, %if.else222.err572_crit_edge ], [ %segs.1, %land.lhs.true448.err572_crit_edge ]
  %tobool.not4.i = icmp eq ptr %segs.2.ph, null
  br i1 %tobool.not4.i, label %err572.cleanup574_crit_edge, label %err572.while.body.i.preheader_crit_edge

err572.while.body.i.preheader_crit_edge:          ; preds = %err572
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i.preheader

err572.cleanup574_crit_edge:                      ; preds = %err572
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup574

while.body.i.preheader:                           ; preds = %err572.while.body.i.preheader_crit_edge, %lor.lhs.false307.while.body.i.preheader_crit_edge, %skb_orphan_frags.exit.while.body.i.preheader_crit_edge
  %segs.2.ph1356 = phi ptr [ %segs.2.ph, %err572.while.body.i.preheader_crit_edge ], [ %segs.1, %lor.lhs.false307.while.body.i.preheader_crit_edge ], [ %segs.1, %skb_orphan_frags.exit.while.body.i.preheader_crit_edge ]
  %err.1.ph1355 = phi ptr [ %err.1.ph, %err572.while.body.i.preheader_crit_edge ], [ inttoptr (i32 -12 to ptr), %lor.lhs.false307.while.body.i.preheader_crit_edge ], [ inttoptr (i32 -12 to ptr), %skb_orphan_frags.exit.while.body.i.preheader_crit_edge ]
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %while.body.i.preheader
  %segs.addr.05.i = phi ptr [ %358, %while.body.i.while.body.i_crit_edge ], [ %segs.2.ph1356, %while.body.i.preheader ]
  %357 = ptrtoint ptr %segs.addr.05.i to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load ptr, ptr %segs.addr.05.i, align 8
  tail call fastcc void @kfree_skb(ptr noundef nonnull %segs.addr.05.i) #20
  %tobool.not.i1063 = icmp eq ptr %358, null
  br i1 %tobool.not.i1063, label %while.body.i.cleanup574_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.body.i.cleanup574_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup574

cleanup574:                                       ; preds = %while.body.i.cleanup574_crit_edge, %err572.cleanup574_crit_edge, %do.body552, %if.end548.cleanup574_crit_edge, %if.end22.cleanup574_crit_edge
  %retval.0 = phi ptr [ %segs.1, %do.body552 ], [ %segs.1, %if.end548.cleanup574_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end22.cleanup574_crit_edge ], [ %err.1.ph, %err572.cleanup574_crit_edge ], [ %err.1.ph1355, %while.body.i.cleanup574_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @skb_network_protocol(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_ratelimit() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_wfree(ptr noundef) #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_init() local_unnamed_addr #16 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kmem_cache_create_usercopy(ptr noundef nonnull @.str.19, i32 noundef 200, i32 noundef 0, i32 noundef 270336, i32 noundef 24, i32 noundef 48, ptr noundef null) #20
  store ptr %call, ptr @skbuff_head_cache, align 4
  %call1 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.20, i32 noundef 408, i32 noundef 0, i32 noundef 270336, ptr noundef null) #20
  store ptr %call1, ptr @skbuff_fclone_cache, align 4
  %call4.i = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.42, i32 noundef 152, i32 noundef 0, i32 noundef 270336, ptr noundef null) #20
  store ptr %call4.i, ptr @skbuff_ext_cache, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create_usercopy(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_to_sgvec(ptr nocapture noundef readonly %skb, ptr nocapture noundef %sg, i32 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__skb_to_sgvec(ptr noundef %skb, ptr noundef %sg, i32 noundef %offset, i32 noundef %len, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp = icmp slt i32 %call, 1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %sub = add nsw i32 %call, -1
  %arrayidx = getelementptr %struct.scatterlist, ptr %sg, i32 %sub
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %or.i = and i32 %1, -4
  %and.i = or i32 %or.i, 2
  store i32 %and.i, ptr %arrayidx, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__skb_to_sgvec(ptr nocapture noundef readonly %skb, ptr nocapture noundef %sg, i32 noundef %offset, i32 noundef %len, i32 noundef %recursion_level) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %1, %3
  %sub = sub i32 %sub.i, %offset
  call void @__sanitizer_cov_trace_const_cmp4(i32 23, i32 %recursion_level)
  %cmp = icmp ugt i32 %recursion_level, 23
  br i1 %cmp, label %entry.cleanup195_crit_edge, label %if.end, !prof !373

entry.cleanup195_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup195

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp2 = icmp sgt i32 %sub, 0
  br i1 %cmp2, label %if.then3, label %if.end.if.end11_crit_edge

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11

if.then3:                                         ; preds = %if.end
  %4 = tail call i32 @llvm.smin.i32(i32 %sub, i32 %len)
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data, align 4
  %add.ptr = getelementptr i8, ptr %6, i32 %offset
  %7 = ptrtoint ptr %add.ptr to i32
  %cmp.i = icmp ugt ptr %add.ptr, inttoptr (i32 -1073741825 to ptr)
  br i1 %cmp.i, label %land.lhs.true.i, label %if.then3.do.body5.i_crit_edge, !prof !374

if.then3.do.body5.i_crit_edge:                    ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body5.i

land.lhs.true.i:                                  ; preds = %if.then3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %8 = load ptr, ptr @high_memory, align 4
  %cmp1.i = icmp ugt ptr %8, %add.ptr
  br i1 %cmp1.i, label %land.rhs.i, label %land.lhs.true.i.do.body5.i_crit_edge, !prof !374

land.lhs.true.i.do.body5.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body5.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %sub.i280 = add i32 %7, 1073741824
  %shr.i = lshr i32 %sub.i280, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %9 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %9, %shr.i
  %call.i = tail call i32 @pfn_valid(i32 noundef %add.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %land.rhs.i.do.body5.i_crit_edge, label %do.end8.i, !prof !373

land.rhs.i.do.body5.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body5.i

do.body5.i:                                       ; preds = %land.rhs.i.do.body5.i_crit_edge, %land.lhs.true.i.do.body5.i_crit_edge, %if.then3.do.body5.i_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 160, 0\0A.popsection", ""() #20, !srcloc !445
  unreachable

do.end8.i:                                        ; preds = %land.rhs.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %10 = load ptr, ptr @mem_map, align 4
  %add.ptr.i = getelementptr %struct.page, ptr %10, i32 %shr.i
  %11 = ptrtoint ptr %sg to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sg, align 4
  %13 = ptrtoint ptr %add.ptr.i to i32
  %and2.i.i.i = and i32 %13, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and2.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %do.body11.i.i.i, label %do.body5.i.i.i, !prof !374

do.body5.i.i.i:                                   ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 112, 0\0A.popsection", ""() #20, !srcloc !446
  unreachable

do.body11.i.i.i:                                  ; preds = %do.end8.i
  %and.i.i.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.i.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.i.not.i.i.i, label %sg_set_buf.exit, label %do.body19.i.i.i, !prof !374

do.body19.i.i.i:                                  ; preds = %do.body11.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 114, 0\0A.popsection", ""() #20, !srcloc !447
  unreachable

sg_set_buf.exit:                                  ; preds = %do.body11.i.i.i
  %and.i = and i32 %7, 4095
  %and.i.i.i = and i32 %12, 3
  %or.i.i.i = or i32 %and.i.i.i, %13
  %14 = ptrtoint ptr %sg to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %or.i.i.i, ptr %sg, align 4
  %offset1.i.i = getelementptr inbounds %struct.scatterlist, ptr %sg, i32 0, i32 1
  %15 = ptrtoint ptr %offset1.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %and.i, ptr %offset1.i.i, align 4
  %length.i.i = getelementptr inbounds %struct.scatterlist, ptr %sg, i32 0, i32 2
  %16 = ptrtoint ptr %length.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %4, ptr %length.i.i, align 4
  %sub7 = sub i32 %len, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub7)
  %cmp8 = icmp eq i32 %sub7, 0
  br i1 %cmp8, label %sg_set_buf.exit.cleanup195_crit_edge, label %if.end10

sg_set_buf.exit.cleanup195_crit_edge:             ; preds = %sg_set_buf.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup195

if.end10:                                         ; preds = %sg_set_buf.exit
  call void @__sanitizer_cov_trace_pc() #22
  %add = add i32 %4, %offset
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end.if.end11_crit_edge
  %len.addr.0 = phi i32 [ %sub7, %if.end10 ], [ %len, %if.end.if.end11_crit_edge ]
  %elt.0 = phi i32 [ 1, %if.end10 ], [ 0, %if.end.if.end11_crit_edge ]
  %offset.addr.0 = phi i32 [ %add, %if.end10 ], [ %offset, %if.end.if.end11_crit_edge ]
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %17 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %end.i, align 4
  %nr_frags330 = getelementptr inbounds %struct.skb_shared_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %nr_frags330 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %nr_frags330, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %cmp13332.not = icmp eq i8 %20, 0
  br i1 %cmp13332.not, label %if.end11.for.end_crit_edge, label %if.end11.for.body_crit_edge

if.end11.for.body_crit_edge:                      ; preds = %if.end11
  br label %for.body

if.end11.for.end_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end11.for.body_crit_edge
  %offset.addr.1338 = phi i32 [ %offset.addr.4.ph, %for.inc.for.body_crit_edge ], [ %offset.addr.0, %if.end11.for.body_crit_edge ]
  %elt.1337 = phi i32 [ %elt.4.ph, %for.inc.for.body_crit_edge ], [ %elt.0, %if.end11.for.body_crit_edge ]
  %i.0335 = phi i32 [ %inc85, %for.inc.for.body_crit_edge ], [ 0, %if.end11.for.body_crit_edge ]
  %start.0334 = phi i32 [ %add45, %for.inc.for.body_crit_edge ], [ %sub.i, %if.end11.for.body_crit_edge ]
  %len.addr.1333 = phi i32 [ %len.addr.4.ph, %for.inc.for.body_crit_edge ], [ %len.addr.0, %if.end11.for.body_crit_edge ]
  %add15 = add i32 %offset.addr.1338, %len.addr.1333
  call void @__sanitizer_cov_trace_cmp4(i32 %start.0334, i32 %add15)
  %cmp16 = icmp sgt i32 %start.0334, %add15
  br i1 %cmp16, label %do.end, label %for.body.if.end36_crit_edge, !prof !373

for.body.if.end36_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4396, i32 noundef 9, ptr noundef null) #20
  br label %if.end36

if.end36:                                         ; preds = %do.end, %for.body.if.end36_crit_edge
  %21 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %end.i, align 4
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %22, i32 0, i32 12, i32 %i.0335
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %22, i32 0, i32 12, i32 %i.0335, i32 1
  %23 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bv_len.i, align 4
  %add45 = add i32 %24, %start.0334
  %sub46 = sub i32 %add45, %offset.addr.1338
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub46)
  %cmp47 = icmp sgt i32 %sub46, 0
  br i1 %cmp47, label %if.then49, label %if.end36.for.inc_crit_edge

if.end36.for.inc_crit_edge:                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then49:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %elt.1337)
  %tobool53.not = icmp eq i32 %elt.1337, 0
  br i1 %tobool53.not, label %if.then49.if.end65_crit_edge, label %land.rhs

if.then49.if.end65_crit_edge:                     ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end65

land.rhs:                                         ; preds = %if.then49
  %sub54 = add i32 %elt.1337, -1
  %arrayidx55 = getelementptr %struct.scatterlist, ptr %sg, i32 %sub54
  %25 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx55, align 4
  %and.i283 = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i283)
  %tobool.i284.not = icmp eq i32 %and.i283, 0
  br i1 %tobool.i284.not, label %land.rhs.if.end65_crit_edge, label %land.rhs.cleanup195_crit_edge, !prof !374

land.rhs.cleanup195_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup195

land.rhs.if.end65_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end65

if.end65:                                         ; preds = %land.rhs.if.end65_crit_edge, %if.then49.if.end65_crit_edge
  %27 = tail call i32 @llvm.smin.i32(i32 %sub46, i32 %len.addr.1333)
  %arrayidx70 = getelementptr %struct.scatterlist, ptr %sg, i32 %elt.1337
  %28 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx, align 4
  %bv_offset.i = getelementptr %struct.skb_shared_info, ptr %22, i32 0, i32 12, i32 %i.0335, i32 2
  %30 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %bv_offset.i, align 4
  %add73 = sub i32 %offset.addr.1338, %start.0334
  %sub74 = add i32 %add73, %31
  %32 = ptrtoint ptr %arrayidx70 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx70, align 4
  %34 = ptrtoint ptr %29 to i32
  %and2.i.i = and i32 %34, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i)
  %tobool.not.i.i = icmp eq i32 %and2.i.i, 0
  br i1 %tobool.not.i.i, label %do.body11.i.i, label %do.body5.i.i, !prof !374

do.body5.i.i:                                     ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 112, 0\0A.popsection", ""() #20, !srcloc !446
  unreachable

do.body11.i.i:                                    ; preds = %if.end65
  %and.i.i.i285 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i285)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i285, 0
  br i1 %tobool.i.not.i.i, label %sg_set_page.exit, label %do.body19.i.i, !prof !374

do.body19.i.i:                                    ; preds = %do.body11.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 114, 0\0A.popsection", ""() #20, !srcloc !447
  unreachable

sg_set_page.exit:                                 ; preds = %do.body11.i.i
  %and.i.i = and i32 %33, 3
  %or.i.i = or i32 %and.i.i, %34
  %35 = ptrtoint ptr %arrayidx70 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %or.i.i, ptr %arrayidx70, align 4
  %offset1.i = getelementptr %struct.scatterlist, ptr %sg, i32 %elt.1337, i32 1
  %36 = ptrtoint ptr %offset1.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %sub74, ptr %offset1.i, align 4
  %length.i = getelementptr %struct.scatterlist, ptr %sg, i32 %elt.1337, i32 2
  %37 = ptrtoint ptr %length.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %27, ptr %length.i, align 4
  %inc75 = add i32 %elt.1337, 1
  %sub76 = sub i32 %len.addr.1333, %27
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub76)
  %tobool77.not = icmp eq i32 %sub76, 0
  br i1 %tobool77.not, label %sg_set_page.exit.cleanup195_crit_edge, label %cleanup

sg_set_page.exit.cleanup195_crit_edge:            ; preds = %sg_set_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup195

cleanup:                                          ; preds = %sg_set_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  %add80 = add i32 %27, %offset.addr.1338
  br label %for.inc

for.inc:                                          ; preds = %cleanup, %if.end36.for.inc_crit_edge
  %len.addr.4.ph = phi i32 [ %len.addr.1333, %if.end36.for.inc_crit_edge ], [ %sub76, %cleanup ]
  %elt.4.ph = phi i32 [ %elt.1337, %if.end36.for.inc_crit_edge ], [ %inc75, %cleanup ]
  %offset.addr.4.ph = phi i32 [ %offset.addr.1338, %if.end36.for.inc_crit_edge ], [ %add80, %cleanup ]
  %inc85 = add nuw nsw i32 %i.0335, 1
  %38 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %41 to i32
  %cmp13 = icmp ult i32 %inc85, %conv
  br i1 %cmp13, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end11.for.end_crit_edge
  %len.addr.1.lcssa = phi i32 [ %len.addr.0, %if.end11.for.end_crit_edge ], [ %len.addr.4.ph, %for.inc.for.end_crit_edge ]
  %start.0.lcssa = phi i32 [ %sub.i, %if.end11.for.end_crit_edge ], [ %add45, %for.inc.for.end_crit_edge ]
  %elt.1.lcssa = phi i32 [ %elt.0, %if.end11.for.end_crit_edge ], [ %elt.4.ph, %for.inc.for.end_crit_edge ]
  %offset.addr.1.lcssa = phi i32 [ %offset.addr.0, %if.end11.for.end_crit_edge ], [ %offset.addr.4.ph, %for.inc.for.end_crit_edge ]
  %.lcssa = phi ptr [ %18, %if.end11.for.end_crit_edge ], [ %39, %for.inc.for.end_crit_edge ]
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 6
  %42 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %42)
  %frag_iter.0343 = load ptr, ptr %frag_list, align 8
  %tobool88.not344 = icmp eq ptr %frag_iter.0343, null
  br i1 %tobool88.not344, label %for.end.do.body177_crit_edge, label %for.body89.lr.ph

for.end.do.body177_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body177

for.body89.lr.ph:                                 ; preds = %for.end
  %add151 = add i32 %recursion_level, 1
  br label %for.body89

for.body89:                                       ; preds = %cleanup171.for.body89_crit_edge, %for.body89.lr.ph
  %frag_iter.0350 = phi ptr [ %frag_iter.0343, %for.body89.lr.ph ], [ %frag_iter.0, %cleanup171.for.body89_crit_edge ]
  %offset.addr.5349 = phi i32 [ %offset.addr.1.lcssa, %for.body89.lr.ph ], [ %offset.addr.7, %cleanup171.for.body89_crit_edge ]
  %elt.5347 = phi i32 [ %elt.1.lcssa, %for.body89.lr.ph ], [ %elt.7, %cleanup171.for.body89_crit_edge ]
  %start.2346 = phi i32 [ %start.0.lcssa, %for.body89.lr.ph ], [ %add125, %cleanup171.for.body89_crit_edge ]
  %len.addr.5345 = phi i32 [ %len.addr.1.lcssa, %for.body89.lr.ph ], [ %len.addr.7, %cleanup171.for.body89_crit_edge ]
  %add92 = add i32 %offset.addr.5349, %len.addr.5345
  call void @__sanitizer_cov_trace_cmp4(i32 %start.2346, i32 %add92)
  %cmp93 = icmp sgt i32 %start.2346, %add92
  br i1 %cmp93, label %do.end110, label %for.body89.if.end116_crit_edge, !prof !373

for.body89.if.end116_crit_edge:                   ; preds = %for.body89
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end116

do.end110:                                        ; preds = %for.body89
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4419, i32 noundef 9, ptr noundef null) #20
  br label %if.end116

if.end116:                                        ; preds = %do.end110, %for.body89.if.end116_crit_edge
  %len124 = getelementptr inbounds %struct.sk_buff, ptr %frag_iter.0350, i32 0, i32 6
  %43 = ptrtoint ptr %len124 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %len124, align 4
  %add125 = add i32 %44, %start.2346
  %sub126 = sub i32 %add125, %offset.addr.5349
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub126)
  %cmp127 = icmp sgt i32 %sub126, 0
  br i1 %cmp127, label %if.then129, label %if.end116.cleanup171_crit_edge

if.end116.cleanup171_crit_edge:                   ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup171

if.then129:                                       ; preds = %if.end116
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %elt.5347)
  %tobool130.not = icmp eq i32 %elt.5347, 0
  br i1 %tobool130.not, label %if.then129.if.end144_crit_edge, label %land.rhs131

if.then129.if.end144_crit_edge:                   ; preds = %if.then129
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end144

land.rhs131:                                      ; preds = %if.then129
  %sub132 = add i32 %elt.5347, -1
  %arrayidx133 = getelementptr %struct.scatterlist, ptr %sg, i32 %sub132
  %45 = ptrtoint ptr %arrayidx133 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx133, align 4
  %and.i287 = and i32 %46, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i287)
  %tobool.i288.not = icmp eq i32 %and.i287, 0
  br i1 %tobool.i288.not, label %land.rhs131.if.end144_crit_edge, label %land.rhs131.cleanup195_crit_edge, !prof !374

land.rhs131.cleanup195_crit_edge:                 ; preds = %land.rhs131
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup195

land.rhs131.if.end144_crit_edge:                  ; preds = %land.rhs131
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end144

if.end144:                                        ; preds = %land.rhs131.if.end144_crit_edge, %if.then129.if.end144_crit_edge
  %47 = tail call i32 @llvm.smin.i32(i32 %sub126, i32 %len.addr.5345)
  %add.ptr149 = getelementptr %struct.scatterlist, ptr %sg, i32 %elt.5347
  %sub150 = sub i32 %offset.addr.5349, %start.2346
  %call152 = tail call fastcc i32 @__skb_to_sgvec(ptr noundef nonnull %frag_iter.0350, ptr noundef %add.ptr149, i32 noundef %sub150, i32 noundef %47, i32 noundef %add151)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call152)
  %cmp153 = icmp slt i32 %call152, 0
  br i1 %cmp153, label %if.end144.cleanup195_crit_edge, label %if.end162, !prof !373

if.end144.cleanup195_crit_edge:                   ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup195

if.end162:                                        ; preds = %if.end144
  %add163 = add i32 %call152, %elt.5347
  %sub164 = sub i32 %len.addr.5345, %47
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub164)
  %cmp165 = icmp eq i32 %sub164, 0
  br i1 %cmp165, label %if.end162.cleanup195_crit_edge, label %if.end168

if.end162.cleanup195_crit_edge:                   ; preds = %if.end162
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup195

if.end168:                                        ; preds = %if.end162
  call void @__sanitizer_cov_trace_pc() #22
  %add169 = add i32 %47, %offset.addr.5349
  br label %cleanup171

cleanup171:                                       ; preds = %if.end168, %if.end116.cleanup171_crit_edge
  %len.addr.7 = phi i32 [ %sub164, %if.end168 ], [ %len.addr.5345, %if.end116.cleanup171_crit_edge ]
  %elt.7 = phi i32 [ %add163, %if.end168 ], [ %elt.5347, %if.end116.cleanup171_crit_edge ]
  %offset.addr.7 = phi i32 [ %add169, %if.end168 ], [ %offset.addr.5349, %if.end116.cleanup171_crit_edge ]
  %48 = ptrtoint ptr %frag_iter.0350 to i32
  call void @__asan_load4_noabort(i32 %48)
  %frag_iter.0 = load ptr, ptr %frag_iter.0350, align 8
  %tobool88.not = icmp eq ptr %frag_iter.0, null
  br i1 %tobool88.not, label %cleanup171.do.body177_crit_edge, label %cleanup171.for.body89_crit_edge

cleanup171.for.body89_crit_edge:                  ; preds = %cleanup171
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body89

cleanup171.do.body177_crit_edge:                  ; preds = %cleanup171
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body177

do.body177:                                       ; preds = %cleanup171.do.body177_crit_edge, %for.end.do.body177_crit_edge
  %len.addr.5.lcssa = phi i32 [ %len.addr.1.lcssa, %for.end.do.body177_crit_edge ], [ %len.addr.7, %cleanup171.do.body177_crit_edge ]
  %elt.5.lcssa = phi i32 [ %elt.1.lcssa, %for.end.do.body177_crit_edge ], [ %elt.7, %cleanup171.do.body177_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.5.lcssa)
  %tobool178.not = icmp eq i32 %len.addr.5.lcssa, 0
  br i1 %tobool178.not, label %do.body177.cleanup195_crit_edge, label %do.body186, !prof !374

do.body177.cleanup195_crit_edge:                  ; preds = %do.body177
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup195

do.body186:                                       ; preds = %do.body177
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4439, 0\0A.popsection", ""() #20, !srcloc !448
  unreachable

cleanup195:                                       ; preds = %do.body177.cleanup195_crit_edge, %if.end162.cleanup195_crit_edge, %if.end144.cleanup195_crit_edge, %land.rhs131.cleanup195_crit_edge, %sg_set_page.exit.cleanup195_crit_edge, %land.rhs.cleanup195_crit_edge, %sg_set_buf.exit.cleanup195_crit_edge, %entry.cleanup195_crit_edge
  %retval.6 = phi i32 [ -90, %entry.cleanup195_crit_edge ], [ 1, %sg_set_buf.exit.cleanup195_crit_edge ], [ %elt.5.lcssa, %do.body177.cleanup195_crit_edge ], [ -90, %land.rhs131.cleanup195_crit_edge ], [ %call152, %if.end144.cleanup195_crit_edge ], [ %add163, %if.end162.cleanup195_crit_edge ], [ -90, %land.rhs.cleanup195_crit_edge ], [ %inc75, %sg_set_page.exit.cleanup195_crit_edge ]
  ret i32 %retval.6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_to_sgvec_nomark(ptr nocapture noundef readonly %skb, ptr nocapture noundef %sg, i32 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__skb_to_sgvec(ptr noundef %skb, ptr noundef %sg, i32 noundef %offset, i32 noundef %len, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_cow_data(ptr noundef %skb, i32 noundef %tailbits, ptr nocapture noundef writeonly %trailer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %0 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.lor.lhs.false_crit_edge, label %skb_cloned.exit

entry.lor.lhs.false_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

skb_cloned.exit:                                  ; preds = %entry
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %1 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %end.i.i, align 4
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %2, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %3 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %4, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i.not, label %skb_cloned.exit.lor.lhs.false_crit_edge, label %skb_cloned.exit.land.lhs.true_crit_edge

skb_cloned.exit.land.lhs.true_crit_edge:          ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

skb_cloned.exit.lor.lhs.false_crit_edge:          ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %skb_cloned.exit.lor.lhs.false_crit_edge, %entry.lor.lhs.false_crit_edge
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %5 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %nr_frags, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool2.not = icmp eq i8 %8, 0
  br i1 %tobool2.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.land.lhs.true_crit_edge

lor.lhs.false.land.lhs.true_crit_edge:            ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false.land.lhs.true_crit_edge, %skb_cloned.exit.land.lhs.true_crit_edge
  %end.i.i128 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %9 = ptrtoint ptr %end.i.i128 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %end.i.i128, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %nr_frags.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp10.not.i = icmp eq i8 %12, 0
  br i1 %cmp10.not.i, label %land.lhs.true.__skb_pagelen.exit_crit_edge, label %for.body.preheader.i

land.lhs.true.__skb_pagelen.exit_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_pagelen.exit

for.body.preheader.i:                             ; preds = %land.lhs.true
  %conv.i = zext i8 %12 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.012.in.i = phi i32 [ %i.012.i, %for.body.i.for.body.i_crit_edge ], [ %conv.i, %for.body.preheader.i ]
  %len.011.i = phi i32 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %i.012.i = add nsw i32 %i.012.in.i, -1
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %10, i32 0, i32 12, i32 %i.012.i, i32 1
  %13 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %bv_len.i.i, align 4
  %add.i = add i32 %14, %len.011.i
  %cmp.i129 = icmp ugt i32 %i.012.in.i, 1
  br i1 %cmp.i129, label %for.body.i.for.body.i_crit_edge, label %for.body.i.__skb_pagelen.exit_crit_edge

for.body.i.__skb_pagelen.exit_crit_edge:          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_pagelen.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

__skb_pagelen.exit:                               ; preds = %for.body.i.__skb_pagelen.exit_crit_edge, %land.lhs.true.__skb_pagelen.exit_crit_edge
  %len.0.lcssa.i = phi i32 [ 0, %land.lhs.true.__skb_pagelen.exit_crit_edge ], [ %add.i, %for.body.i.__skb_pagelen.exit_crit_edge ]
  %call4 = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %len.0.lcssa.i)
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %__skb_pagelen.exit.cleanup82_crit_edge, label %__skb_pagelen.exit.if.end_crit_edge

__skb_pagelen.exit.if.end_crit_edge:              ; preds = %__skb_pagelen.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

__skb_pagelen.exit.cleanup82_crit_edge:           ; preds = %__skb_pagelen.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup82

if.end:                                           ; preds = %__skb_pagelen.exit.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge
  %end.i.i130 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %15 = ptrtoint ptr %end.i.i130 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %end.i.i130, align 4
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %16, i32 0, i32 6
  %17 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %frag_list.i, align 8
  %cmp.i131.not = icmp eq ptr %18, null
  br i1 %cmp.i131.not, label %if.then7, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tailbits)
  %tobool27.not = icmp eq i32 %tailbits, 0
  %add41 = add i32 %tailbits, 128
  br label %while.body

if.then7:                                         ; preds = %if.end
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %19 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.i.not.i = icmp eq i32 %20, 0
  br i1 %tobool.i.not.i, label %skb_tailroom.exit, label %skb_tailroom.exit.thread

skb_tailroom.exit:                                ; preds = %if.then7
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %21 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %tail.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %16 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %22 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i, i32 %tailbits)
  %cmp = icmp slt i32 %sub.ptr.sub.i, %tailbits
  br i1 %cmp, label %cond.false.i140, label %skb_tailroom.exit.if.end15_crit_edge

skb_tailroom.exit.if.end15_crit_edge:             ; preds = %skb_tailroom.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

skb_tailroom.exit.thread:                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tailbits)
  %cmp180 = icmp sgt i32 %tailbits, 0
  br i1 %cmp180, label %skb_tailroom.exit.thread.skb_tailroom.exit142_crit_edge, label %skb_tailroom.exit.thread.if.end15_crit_edge

skb_tailroom.exit.thread.if.end15_crit_edge:      ; preds = %skb_tailroom.exit.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

skb_tailroom.exit.thread.skb_tailroom.exit142_crit_edge: ; preds = %skb_tailroom.exit.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_tailroom.exit142

cond.false.i140:                                  ; preds = %skb_tailroom.exit
  call void @__sanitizer_cov_trace_pc() #22
  %23 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %tail.i, align 8
  %sub.ptr.rhs.cast.i138 = ptrtoint ptr %24 to i32
  %sub.ptr.sub.i139.neg = sub i32 %sub.ptr.rhs.cast.i138, %sub.ptr.lhs.cast.i
  br label %skb_tailroom.exit142

skb_tailroom.exit142:                             ; preds = %cond.false.i140, %skb_tailroom.exit.thread.skb_tailroom.exit142_crit_edge
  %cond.i141.neg = phi i32 [ %sub.ptr.sub.i139.neg, %cond.false.i140 ], [ 0, %skb_tailroom.exit.thread.skb_tailroom.exit142_crit_edge ]
  %sub = add i32 %tailbits, 128
  %add = add i32 %sub, %cond.i141.neg
  %call12 = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef %add, i32 noundef 2592)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %skb_tailroom.exit142.if.end15_crit_edge, label %skb_tailroom.exit142.cleanup82_crit_edge

skb_tailroom.exit142.cleanup82_crit_edge:         ; preds = %skb_tailroom.exit142
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup82

skb_tailroom.exit142.if.end15_crit_edge:          ; preds = %skb_tailroom.exit142
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.end15:                                         ; preds = %skb_tailroom.exit142.if.end15_crit_edge, %skb_tailroom.exit.thread.if.end15_crit_edge, %skb_tailroom.exit.if.end15_crit_edge
  %25 = ptrtoint ptr %trailer to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %skb, ptr %trailer, align 4
  br label %cleanup82

while.condthread-pre-split:                       ; preds = %cleanup, %lor.lhs.false55.while.condthread-pre-split_crit_edge
  %skb1.1 = phi ptr [ %skb2.0, %cleanup ], [ %28, %lor.lhs.false55.while.condthread-pre-split_crit_edge ]
  %inc = add i32 %elt.0190, 1
  %26 = ptrtoint ptr %trailer to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %skb1.1, ptr %trailer, align 4
  %27 = ptrtoint ptr %skb1.1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pr = load ptr, ptr %skb1.1, align 4
  %cmp18.not = icmp eq ptr %.pr, null
  br i1 %cmp18.not, label %while.condthread-pre-split.cleanup82_crit_edge, label %while.condthread-pre-split.while.body_crit_edge

while.condthread-pre-split.while.body_crit_edge:  ; preds = %while.condthread-pre-split
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

while.condthread-pre-split.cleanup82_crit_edge:   ; preds = %while.condthread-pre-split
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup82

while.body:                                       ; preds = %while.condthread-pre-split.while.body_crit_edge, %while.body.lr.ph
  %skb_p.0191 = phi ptr [ %frag_list.i, %while.body.lr.ph ], [ %skb1.1, %while.condthread-pre-split.while.body_crit_edge ]
  %elt.0190 = phi i32 [ 1, %while.body.lr.ph ], [ %inc, %while.condthread-pre-split.while.body_crit_edge ]
  %copyflag.0189 = phi i32 [ 0, %while.body.lr.ph ], [ %spec.select, %while.condthread-pre-split.while.body_crit_edge ]
  %28 = phi ptr [ %18, %while.body.lr.ph ], [ %.pr, %while.condthread-pre-split.while.body_crit_edge ]
  %users.i = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i, i32 noundef 4) #20
  %29 = ptrtoint ptr %users.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %users.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp.i144.not = icmp eq i32 %30, 1
  %spec.select = select i1 %cmp.i144.not, i32 %copyflag.0189, i32 1
  %31 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %28, align 8
  %cmp24 = icmp ne ptr %32, null
  %or.cond = or i1 %tobool27.not, %cmp24
  br i1 %or.cond, label %while.body.if.end43_crit_edge, label %if.then28

while.body.if.end43_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

if.then28:                                        ; preds = %while.body
  %end.i146 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 17
  %33 = ptrtoint ptr %end.i146 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %end.i146, align 4
  %nr_frags30 = getelementptr inbounds %struct.skb_shared_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %nr_frags30 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %nr_frags30, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool32.not = icmp eq i8 %36, 0
  br i1 %tobool32.not, label %lor.lhs.false33, label %if.then28.if.then40_crit_edge

if.then28.if.then40_crit_edge:                    ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then40

lor.lhs.false33:                                  ; preds = %if.then28
  %frag_list.i148 = getelementptr inbounds %struct.skb_shared_info, ptr %34, i32 0, i32 6
  %37 = ptrtoint ptr %frag_list.i148 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %frag_list.i148, align 8
  %cmp.i149.not = icmp eq ptr %38, null
  br i1 %cmp.i149.not, label %lor.lhs.false36, label %lor.lhs.false33.if.then40_crit_edge

lor.lhs.false33.if.then40_crit_edge:              ; preds = %lor.lhs.false33
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then40

lor.lhs.false36:                                  ; preds = %lor.lhs.false33
  %data_len.i.i150 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 7
  %39 = ptrtoint ptr %data_len.i.i150 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %data_len.i.i150, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.i.not.i151 = icmp eq i32 %40, 0
  br i1 %tobool.i.not.i151, label %cond.false.i157, label %lor.lhs.false36.skb_tailroom.exit159_crit_edge

lor.lhs.false36.skb_tailroom.exit159_crit_edge:   ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_tailroom.exit159

cond.false.i157:                                  ; preds = %lor.lhs.false36
  call void @__sanitizer_cov_trace_pc() #22
  %tail.i153 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 16
  %41 = ptrtoint ptr %tail.i153 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tail.i153, align 8
  %sub.ptr.lhs.cast.i154 = ptrtoint ptr %34 to i32
  %sub.ptr.rhs.cast.i155 = ptrtoint ptr %42 to i32
  %sub.ptr.sub.i156 = sub i32 %sub.ptr.lhs.cast.i154, %sub.ptr.rhs.cast.i155
  br label %skb_tailroom.exit159

skb_tailroom.exit159:                             ; preds = %cond.false.i157, %lor.lhs.false36.skb_tailroom.exit159_crit_edge
  %cond.i158 = phi i32 [ %sub.ptr.sub.i156, %cond.false.i157 ], [ 0, %lor.lhs.false36.skb_tailroom.exit159_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cond.i158, i32 %tailbits)
  %cmp38 = icmp slt i32 %cond.i158, %tailbits
  br i1 %cmp38, label %skb_tailroom.exit159.if.then40_crit_edge, label %skb_tailroom.exit159.if.end43_crit_edge

skb_tailroom.exit159.if.end43_crit_edge:          ; preds = %skb_tailroom.exit159
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

skb_tailroom.exit159.if.then40_crit_edge:         ; preds = %skb_tailroom.exit159
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then40

if.then40:                                        ; preds = %skb_tailroom.exit159.if.then40_crit_edge, %lor.lhs.false33.if.then40_crit_edge, %if.then28.if.then40_crit_edge
  br label %if.end43

if.end43:                                         ; preds = %if.then40, %skb_tailroom.exit159.if.end43_crit_edge, %while.body.if.end43_crit_edge
  %ntail.0 = phi i32 [ %add41, %if.then40 ], [ 0, %skb_tailroom.exit159.if.end43_crit_edge ], [ 0, %while.body.if.end43_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select)
  %tobool44.not = icmp eq i32 %spec.select, 0
  br i1 %tobool44.not, label %lor.lhs.false45, label %if.end43.if.then58_crit_edge

if.end43.if.then58_crit_edge:                     ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then58

lor.lhs.false45:                                  ; preds = %if.end43
  %cloned.i160 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 12
  %43 = ptrtoint ptr %cloned.i160 to i32
  call void @__asan_load1_noabort(i32 %43)
  %bf.load.i161 = load i8, ptr %cloned.i160, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i161)
  %tobool.not.i162 = icmp sgt i8 %bf.load.i161, -1
  br i1 %tobool.not.i162, label %lor.lhs.false45.skb_cloned.exit170_crit_edge, label %land.rhs.i169

lor.lhs.false45.skb_cloned.exit170_crit_edge:     ; preds = %lor.lhs.false45
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_cloned.exit170

land.rhs.i169:                                    ; preds = %lor.lhs.false45
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i163 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 17
  %44 = ptrtoint ptr %end.i.i163 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %end.i.i163, align 4
  %dataref.i164 = getelementptr inbounds %struct.skb_shared_info, ptr %45, i32 0, i32 10
  %call.i.i.i165 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i164, i32 noundef 4) #20
  %46 = ptrtoint ptr %dataref.i164 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %dataref.i164, align 4
  %and.i166 = and i32 %47, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i166)
  %cmp.i167 = icmp ne i32 %and.i166, 1
  %phi.cast.i168 = zext i1 %cmp.i167 to i32
  br label %skb_cloned.exit170

skb_cloned.exit170:                               ; preds = %land.rhs.i169, %lor.lhs.false45.skb_cloned.exit170_crit_edge
  %48 = phi i32 [ 0, %lor.lhs.false45.skb_cloned.exit170_crit_edge ], [ %phi.cast.i168, %land.rhs.i169 ]
  %49 = or i32 %48, %ntail.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %lor.lhs.false50, label %skb_cloned.exit170.if.then58_crit_edge

skb_cloned.exit170.if.then58_crit_edge:           ; preds = %skb_cloned.exit170
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then58

lor.lhs.false50:                                  ; preds = %skb_cloned.exit170
  %end.i171 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 17
  %51 = ptrtoint ptr %end.i171 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %end.i171, align 4
  %nr_frags52 = getelementptr inbounds %struct.skb_shared_info, ptr %52, i32 0, i32 2
  %53 = ptrtoint ptr %nr_frags52 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %nr_frags52, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool54.not = icmp eq i8 %54, 0
  br i1 %tobool54.not, label %lor.lhs.false55, label %lor.lhs.false50.if.then61_crit_edge

lor.lhs.false50.if.then61_crit_edge:              ; preds = %lor.lhs.false50
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then61

lor.lhs.false55:                                  ; preds = %lor.lhs.false50
  %frag_list.i173 = getelementptr inbounds %struct.skb_shared_info, ptr %52, i32 0, i32 6
  %55 = ptrtoint ptr %frag_list.i173 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %frag_list.i173, align 8
  %cmp.i174.not = icmp eq ptr %56, null
  br i1 %cmp.i174.not, label %lor.lhs.false55.while.condthread-pre-split_crit_edge, label %lor.lhs.false55.if.then61_crit_edge

lor.lhs.false55.if.then61_crit_edge:              ; preds = %lor.lhs.false55
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then61

lor.lhs.false55.while.condthread-pre-split_crit_edge: ; preds = %lor.lhs.false55
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.condthread-pre-split

if.then58:                                        ; preds = %skb_cloned.exit170.if.then58_crit_edge, %if.end43.if.then58_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ntail.0)
  %cmp59 = icmp eq i32 %ntail.0, 0
  br i1 %cmp59, label %if.then58.if.then61_crit_edge, label %if.else

if.then58.if.then61_crit_edge:                    ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then61

if.then61:                                        ; preds = %if.then58.if.then61_crit_edge, %lor.lhs.false55.if.then61_crit_edge, %lor.lhs.false50.if.then61_crit_edge
  %call62 = tail call ptr @skb_copy(ptr noundef nonnull %28, i32 noundef 2592)
  br label %if.end65

if.else:                                          ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #22
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 19
  %57 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 18
  %59 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i175 = ptrtoint ptr %58 to i32
  %sub.ptr.rhs.cast.i176 = ptrtoint ptr %60 to i32
  %sub.ptr.sub.i177 = sub i32 %sub.ptr.lhs.cast.i175, %sub.ptr.rhs.cast.i176
  %call64 = tail call ptr @skb_copy_expand(ptr noundef nonnull %28, i32 noundef %sub.ptr.sub.i177, i32 noundef %ntail.0, i32 noundef 2592)
  br label %if.end65

if.end65:                                         ; preds = %if.else, %if.then61
  %skb2.0 = phi ptr [ %call62, %if.then61 ], [ %call64, %if.else ]
  %cmp66 = icmp eq ptr %skb2.0, null
  br i1 %cmp66, label %if.end65.cleanup82_crit_edge, label %if.end71, !prof !373

if.end65.cleanup82_crit_edge:                     ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup82

if.end71:                                         ; preds = %if.end65
  %61 = getelementptr inbounds %struct.sk_buff, ptr %28, i32 0, i32 1
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %61, align 4
  %tobool72.not = icmp eq ptr %63, null
  br i1 %tobool72.not, label %if.end71.cleanup_crit_edge, label %if.then73

if.end71.cleanup_crit_edge:                       ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then73:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @skb_set_owner_w(ptr noundef nonnull %skb2.0, ptr noundef nonnull %63) #20
  br label %cleanup

cleanup:                                          ; preds = %if.then73, %if.end71.cleanup_crit_edge
  %64 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %28, align 8
  %66 = ptrtoint ptr %skb2.0 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %65, ptr %skb2.0, align 8
  %67 = ptrtoint ptr %skb_p.0191 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %skb2.0, ptr %skb_p.0191, align 4
  tail call fastcc void @kfree_skb(ptr noundef nonnull %28)
  br label %while.condthread-pre-split

cleanup82:                                        ; preds = %if.end65.cleanup82_crit_edge, %while.condthread-pre-split.cleanup82_crit_edge, %if.end15, %skb_tailroom.exit142.cleanup82_crit_edge, %__skb_pagelen.exit.cleanup82_crit_edge
  %retval.4 = phi i32 [ 1, %if.end15 ], [ -12, %__skb_pagelen.exit.cleanup82_crit_edge ], [ -12, %skb_tailroom.exit142.cleanup82_crit_edge ], [ %inc, %while.condthread-pre-split.cleanup82_crit_edge ], [ -12, %if.end65.cleanup82_crit_edge ]
  ret i32 %retval.4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_queue_err_skb(ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #20
  %0 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %sk_backlog, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %2 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %truesize, align 8
  %add = add i32 %3, %1
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %4 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %sk_rcvbuf, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %5)
  %cmp.not = icmp ult i32 %add, %5
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %entry
  %destructor.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %6 = ptrtoint ptr %destructor.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %destructor.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %do.body.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void %7(ptr noundef %skb) #20
  br label %skb_orphan.exit

do.body.i:                                        ; preds = %if.end
  %8 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %tobool3.not.i = icmp eq ptr %10, null
  br i1 %tobool3.not.i, label %do.body.i.skb_orphan.exit_crit_edge, label %do.body7.i, !prof !374

do.body.i.skb_orphan.exit_crit_edge:              ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan.exit

do.body7.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #20, !srcloc !396
  unreachable

skb_orphan.exit:                                  ; preds = %do.body.i.skb_orphan.exit_crit_edge, %if.then.i
  %11 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %sk, ptr %11, align 4
  %13 = ptrtoint ptr %destructor.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @sock_rmem_free, ptr %destructor.i, align 4
  %14 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %truesize, align 8
  %call.i.i21 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %sk_backlog, i32 1, i32 3, i32 1) #20
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog, ptr %sk_backlog, i32 %15, ptr elementtype(i32) %sk_backlog) #20, !srcloc !403
  %pkt_type.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %17 = ptrtoint ptr %pkt_type.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %bf.load.i = load i16, ptr %pkt_type.i, align 8
  %bf.clear.i = and i16 %bf.load.i, 8191
  %bf.set.i = or i16 %bf.clear.i, -32768
  store i16 %bf.set.i, ptr %pkt_type.i, align 8
  %18 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 8
  %and.i.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %skb_orphan.exit.skb_dst_force.exit_crit_edge, label %land.lhs.true.i.i.i

skb_orphan.exit.skb_dst_force.exit_crit_edge:     ; preds = %skb_orphan.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_force.exit

land.lhs.true.i.i.i:                              ; preds = %skb_orphan.exit
  %call.i.i.i = tail call i32 @rcu_read_lock_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %land.rhs.i.i.i, label %land.lhs.true.i.i.i.skb_dst_is_noref.exit.i_crit_edge

land.lhs.true.i.i.i.skb_dst_is_noref.exit.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_is_noref.exit.i

land.rhs.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  %call2.i.i.i = tail call i32 @rcu_read_lock_bh_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i.i)
  %tobool3.not.i.i.i = icmp eq i32 %call2.i.i.i, 0
  br i1 %tobool3.not.i.i.i, label %do.end.i.i.i, label %land.rhs.i.i.i.skb_dst_is_noref.exit.i_crit_edge, !prof !373

land.rhs.i.i.i.skb_dst_is_noref.exit.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_is_noref.exit.i

do.end.i.i.i:                                     ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.31, i32 noundef 1013, i32 noundef 9, ptr noundef null) #20
  br label %skb_dst_is_noref.exit.i

skb_dst_is_noref.exit.i:                          ; preds = %do.end.i.i.i, %land.rhs.i.i.i.skb_dst_is_noref.exit.i_crit_edge, %land.lhs.true.i.i.i.skb_dst_is_noref.exit.i_crit_edge
  %21 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %18, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %22)
  %tobool1.i.i = icmp ugt i32 %22, 1
  br i1 %tobool1.i.i, label %if.then.i22, label %skb_dst_is_noref.exit.i.skb_dst_force.exit_crit_edge

skb_dst_is_noref.exit.i.skb_dst_force.exit_crit_edge: ; preds = %skb_dst_is_noref.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_force.exit

if.then.i22:                                      ; preds = %skb_dst_is_noref.exit.i
  %and.i2.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2.i)
  %tobool.not.i3.i = icmp eq i32 %and.i2.i, 0
  br i1 %tobool.not.i3.i, label %if.then.i22.skb_dst.exit.i_crit_edge, label %land.lhs.true.i.i

if.then.i22.skb_dst.exit.i_crit_edge:             ; preds = %if.then.i22
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst.exit.i

land.lhs.true.i.i:                                ; preds = %if.then.i22
  %call.i.i23 = tail call i32 @rcu_read_lock_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i23)
  %tobool1.not.i.i = icmp eq i32 %call.i.i23, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.skb_dst.exit.i_crit_edge

land.lhs.true.i.i.skb_dst.exit.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  %call2.i.i = tail call i32 @rcu_read_lock_bh_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.skb_dst.exit.i_crit_edge, !prof !373

land.rhs.i.i.skb_dst.exit.i_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.31, i32 noundef 1013, i32 noundef 9, ptr noundef null) #20
  br label %skb_dst.exit.i

skb_dst.exit.i:                                   ; preds = %do.end.i.i, %land.rhs.i.i.skb_dst.exit.i_crit_edge, %land.lhs.true.i.i.skb_dst.exit.i_crit_edge, %if.then.i22.skb_dst.exit.i_crit_edge
  %23 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %18, align 8
  %and25.i.i = and i32 %24, -2
  %25 = inttoptr i32 %and25.i.i to ptr
  %call2.i = tail call i32 @rcu_read_lock_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i24 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i24, label %do.end.i, label %skb_dst.exit.i.if.end.i_crit_edge, !prof !373

skb_dst.exit.i.if.end.i_crit_edge:                ; preds = %skb_dst.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

do.end.i:                                         ; preds = %skb_dst.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.30, i32 noundef 316, i32 noundef 9, ptr noundef null) #20
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %skb_dst.exit.i.if.end.i_crit_edge
  %__refcnt.i.i = getelementptr inbounds %struct.dst_entry, ptr %25, i32 0, i32 18
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %__refcnt.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !399
  tail call void @llvm.prefetch.p0(ptr %__refcnt.i.i, i32 1, i32 3, i32 1) #20
  %26 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %__refcnt.i.i, ptr %__refcnt.i.i, i32 0, i32 1, ptr elementtype(i32) %__refcnt.i.i) #20, !srcloc !400
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %26, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i, label %if.end.i.dst_hold_safe.exit.i_crit_edge, label %do.end11.i.i.i.i.i.i

if.end.i.dst_hold_safe.exit.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %dst_hold_safe.exit.i

do.end11.i.i.i.i.i.i:                             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !401
  br label %dst_hold_safe.exit.i

dst_hold_safe.exit.i:                             ; preds = %do.end11.i.i.i.i.i.i, %if.end.i.dst_hold_safe.exit.i_crit_edge
  %spec.select.i = phi ptr [ null, %if.end.i.dst_hold_safe.exit.i_crit_edge ], [ %25, %do.end11.i.i.i.i.i.i ]
  %27 = ptrtoint ptr %spec.select.i to i32
  %28 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %18, align 8
  %tobool27.not.i = icmp eq ptr %spec.select.i, null
  %slow_gro.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %29 = ptrtoint ptr %slow_gro.i to i32
  call void @__asan_loadN_noabort(i32 %29, i32 4)
  %bf.load.i25 = load i32, ptr %slow_gro.i, align 2
  %bf.load.mask.i = and i32 %bf.load.i25, 4096
  %bf.shl.i = select i1 %tobool27.not.i, i32 %bf.load.mask.i, i32 4096
  %bf.clear34.i = and i32 %bf.load.i25, -4097
  %bf.set.i26 = or i32 %bf.shl.i, %bf.clear34.i
  store i32 %bf.set.i26, ptr %slow_gro.i, align 2
  br label %skb_dst_force.exit

skb_dst_force.exit:                               ; preds = %dst_hold_safe.exit.i, %skb_dst_is_noref.exit.i.skb_dst_force.exit_crit_edge, %skb_orphan.exit.skb_dst_force.exit_crit_edge
  %sk_error_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7
  %lock.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 2
  %call2.i27 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #20
  %prev.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 0, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev.i.i.i, align 4
  %32 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %sk_error_queue, ptr %skb, align 8
  %prev10.i.i.i.i = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 1
  %33 = ptrtoint ptr %prev10.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %31, ptr %prev10.i.i.i.i, align 4
  store volatile ptr %skb, ptr %prev.i.i.i, align 4
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %skb, ptr %31, align 4
  %qlen.i.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 1
  %35 = ptrtoint ptr %qlen.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %qlen.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %36, 1
  store volatile i32 %add.i.i.i.i, ptr %qlen.i.i.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call2.i27) #20
  %37 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %37, align 4
  %and1.i.i = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.then6, label %skb_dst_force.exit.return_crit_edge

skb_dst_force.exit.return_crit_edge:              ; preds = %skb_dst_force.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then6:                                         ; preds = %skb_dst_force.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @sk_error_report(ptr noundef %sk) #20
  br label %return

return:                                           ; preds = %if.then6, %skb_dst_force.exit.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -12, %entry.return_crit_edge ], [ 0, %if.then6 ], [ 0, %skb_dst_force.exit.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sock_rmem_free(ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %3 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %truesize, align 8
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %sk_backlog, i32 1, i32 3, i32 1) #20
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog, ptr %sk_backlog, i32 %4, ptr elementtype(i32) %sk_backlog) #20, !srcloc !407
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_error_report(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sock_dequeue_err_skb(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_error_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7
  %lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 2
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #20
  %0 = ptrtoint ptr %sk_error_queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_error_queue, align 4
  %cmp.i.i = icmp eq ptr %1, %sk_error_queue
  %spec.store.select.i.i = select i1 %cmp.i.i, ptr null, ptr %1
  %tobool.not.i = icmp eq ptr %spec.store.select.i.i, null
  br i1 %tobool.not.i, label %if.end19.thread, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %qlen.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 1
  %2 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %qlen.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %qlen.i.i, align 4
  %4 = ptrtoint ptr %spec.store.select.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spec.store.select.i.i, align 8
  %prev9.i.i = getelementptr inbounds %struct.anon.27, ptr %spec.store.select.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %prev9.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev9.i.i, align 4
  store ptr null, ptr %prev9.i.i, align 4
  store ptr null, ptr %spec.store.select.i.i, align 8
  %prev17.i.i = getelementptr inbounds %struct.anon.27, ptr %5, i32 0, i32 1
  %8 = ptrtoint ptr %prev17.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %7, ptr %prev17.i.i, align 4
  %9 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %5, ptr %7, align 8
  %10 = ptrtoint ptr %sk_error_queue to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sk_error_queue, align 4
  %cmp.i = icmp eq ptr %11, %sk_error_queue
  %tobool7.not52 = icmp eq ptr %11, null
  %tobool7.not = or i1 %cmp.i, %tobool7.not52
  br i1 %tobool7.not, label %land.lhs.true.is_icmp_err_skb.exit38_crit_edge, label %is_icmp_err_skb.exit

land.lhs.true.is_icmp_err_skb.exit38_crit_edge:   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %is_icmp_err_skb.exit38

is_icmp_err_skb.exit:                             ; preds = %land.lhs.true
  %ee_origin.i = getelementptr inbounds %struct.sk_buff, ptr %11, i32 0, i32 3, i32 28
  %12 = ptrtoint ptr %ee_origin.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %ee_origin.i, align 4
  %14 = and i8 %13, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %14)
  %15 = icmp eq i8 %14, 2
  br i1 %15, label %if.then10, label %is_icmp_err_skb.exit.is_icmp_err_skb.exit38_crit_edge

is_icmp_err_skb.exit.is_icmp_err_skb.exit38_crit_edge: ; preds = %is_icmp_err_skb.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %is_icmp_err_skb.exit38

if.then10:                                        ; preds = %is_icmp_err_skb.exit
  call void @__sanitizer_cov_trace_pc() #22
  %ee = getelementptr inbounds %struct.sk_buff, ptr %11, i32 0, i32 3, i32 24
  %16 = ptrtoint ptr %ee to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ee, align 8
  %sk_err = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 51
  %18 = ptrtoint ptr %sk_err to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %sk_err, align 4
  br label %is_icmp_err_skb.exit38

if.end19.thread:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #20
  br label %if.end22

is_icmp_err_skb.exit38:                           ; preds = %if.then10, %is_icmp_err_skb.exit.is_icmp_err_skb.exit38_crit_edge, %land.lhs.true.is_icmp_err_skb.exit38_crit_edge
  %skb_next.0.ph = phi ptr [ null, %land.lhs.true.is_icmp_err_skb.exit38_crit_edge ], [ %11, %is_icmp_err_skb.exit.is_icmp_err_skb.exit38_crit_edge ], [ %11, %if.then10 ]
  %icmp_next.0.shrunk.ph = phi i1 [ false, %land.lhs.true.is_icmp_err_skb.exit38_crit_edge ], [ false, %is_icmp_err_skb.exit.is_icmp_err_skb.exit38_crit_edge ], [ true, %if.then10 ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call2) #20
  %ee_origin.i36 = getelementptr inbounds %struct.sk_buff, ptr %spec.store.select.i.i, i32 0, i32 3, i32 28
  %19 = ptrtoint ptr %ee_origin.i36 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %ee_origin.i36, align 4
  %21 = and i8 %20, -2
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %21)
  %22 = icmp ne i8 %21, 2
  %brmerge = or i1 %icmp_next.0.shrunk.ph, %22
  br i1 %brmerge, label %is_icmp_err_skb.exit38.if.end19_crit_edge, label %if.then17

is_icmp_err_skb.exit38.if.end19_crit_edge:        ; preds = %is_icmp_err_skb.exit38
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

if.then17:                                        ; preds = %is_icmp_err_skb.exit38
  call void @__sanitizer_cov_trace_pc() #22
  %sk_err18 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 51
  %23 = ptrtoint ptr %sk_err18 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %sk_err18, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %is_icmp_err_skb.exit38.if.end19_crit_edge
  %tobool20.not = icmp eq ptr %skb_next.0.ph, null
  br i1 %tobool20.not, label %if.end19.if.end22_crit_edge, label %if.then21

if.end19.if.end22_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end22

if.then21:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @sk_error_report(ptr noundef %sk) #20
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end19.if.end22_crit_edge, %if.end19.thread
  ret ptr %spec.store.select.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_clone_sk(ptr noundef %skb) #0 align 64 {
entry:
  %old.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %skc_refcnt = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i) #20
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %skc_refcnt, i32 noundef 4) #20
  %3 = ptrtoint ptr %skc_refcnt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %skc_refcnt, align 4
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, %lor.lhs.false
  %5 = phi i32 [ %4, %lor.lhs.false ], [ %asmresult3.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge ]
  %6 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %old.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i.i.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i.i.i, label %do.body.i.i.i.if.end4.i.i.i_crit_edge, label %do.cond.i.i.i

do.body.i.i.i.if.end4.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i.i.i

do.cond.i.i.i:                                    ; preds = %do.body.i.i.i
  %add.i.i.i = add i32 %5, 1
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt, i32 noundef 4) #20
  %call.i3.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i, i32 noundef 4) #20
  %7 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %old.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %skc_refcnt, i32 1, i32 3, i32 1) #20
  br label %do.body.i.i.i.i.i.i

do.body.i.i.i.i.i.i:                              ; preds = %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i
  %9 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt, ptr %skc_refcnt, i32 %8, i32 %add.i.i.i, ptr elementtype(i32) %skc_refcnt) #20, !srcloc !405
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 0
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i, label %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i:       ; preds = %do.body.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i = extractvalue { i32, i32 } %9, 1
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i, %8
  br i1 %cmp.not.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, !prof !374

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, %do.body.i.i.i.if.end4.i.i.i_crit_edge
  %10 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %old.i.i.i, align 4
  %add5.i.i.i = add i32 %11, 1
  %12 = or i32 %add5.i.i.i, %11
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %.not.i.i.i = icmp sgt i32 %12, -1
  br i1 %.not.i.i.i, label %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge, label %if.then10.i.i.i, !prof !374

if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge: ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refcount_inc_not_zero.exit

if.then10.i.i.i:                                  ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt, i32 noundef 0) #20
  %13 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pr = load i32, ptr %old.i.i.i, align 4
  br label %refcount_inc_not_zero.exit

refcount_inc_not_zero.exit:                       ; preds = %if.then10.i.i.i, %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge
  %14 = phi i32 [ %11, %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge ], [ %.pr, %if.then10.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool12.i.i.i.not = icmp eq i32 %14, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i) #20
  br i1 %tobool12.i.i.i.not, label %refcount_inc_not_zero.exit.cleanup_crit_edge, label %if.end

refcount_inc_not_zero.exit.cleanup_crit_edge:     ; preds = %refcount_inc_not_zero.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %refcount_inc_not_zero.exit
  %call1 = call ptr @skb_clone(ptr noundef %skb, i32 noundef 2592)
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  %call.i.i.i.i.i.i13 = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  call void @llvm.prefetch.p0(ptr %skc_refcnt, i32 1, i32 3, i32 1) #20
  %15 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt, ptr %skc_refcnt, i32 1, ptr elementtype(i32) %skc_refcnt) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %15, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i.i, !prof !374

if.end5.i.i.i.i.cleanup_crit_edge:                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt, i32 noundef 3) #20
  br label %cleanup

if.then.i:                                        ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  call void @sk_free(ptr noundef nonnull %2) #20
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %16 = getelementptr inbounds %struct.sk_buff, ptr %call1, i32 0, i32 1
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %2, ptr %16, align 4
  %destructor = getelementptr inbounds %struct.sk_buff, ptr %call1, i32 0, i32 4, i32 0, i32 1
  %18 = ptrtoint ptr %destructor to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @sock_efree, ptr %destructor, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.cleanup_crit_edge, %refcount_inc_not_zero.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call1, %if.end4 ], [ null, %refcount_inc_not_zero.exit.cleanup_crit_edge ], [ null, %entry.cleanup_crit_edge ], [ null, %if.end5.i.i.i.i.cleanup_crit_edge ], [ null, %if.then10.i.i.i.i ], [ null, %if.then.i ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_efree(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_complete_tx_timestamp(ptr noundef %skb, ptr nocapture noundef readonly %hwtstamps) #0 align 64 {
entry:
  %old.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sysctl_tstamp_allow_data to i32))
  %3 = load i32, ptr @sysctl_tstamp_allow_data, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i.not = icmp eq i32 %3, 0
  br i1 %tobool.not.i.not, label %if.end.i, label %entry.if.end_crit_edge, !prof !373

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end.i:                                         ; preds = %entry
  %sk_callback_lock.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 50
  tail call void @_raw_read_lock_bh(ptr noundef %sk_callback_lock.i) #20
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 71
  %4 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk_socket.i, align 8
  %tobool4.not.i = icmp eq ptr %5, null
  br i1 %tobool4.not.i, label %if.end.i.skb_may_tx_timestamp.exit.thread19_crit_edge, label %land.lhs.true.i

if.end.i.skb_may_tx_timestamp.exit.thread19_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_may_tx_timestamp.exit.thread19

land.lhs.true.i:                                  ; preds = %if.end.i
  %file.i = getelementptr inbounds %struct.socket, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %file.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %file.i, align 4
  %tobool6.not.i = icmp eq ptr %7, null
  br i1 %tobool6.not.i, label %land.lhs.true.i.skb_may_tx_timestamp.exit.thread19_crit_edge, label %skb_may_tx_timestamp.exit

land.lhs.true.i.skb_may_tx_timestamp.exit.thread19_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_may_tx_timestamp.exit.thread19

skb_may_tx_timestamp.exit.thread19:               ; preds = %land.lhs.true.i.skb_may_tx_timestamp.exit.thread19_crit_edge, %if.end.i.skb_may_tx_timestamp.exit.thread19_crit_edge
  tail call void @_raw_read_unlock_bh(ptr noundef %sk_callback_lock.i) #20
  br label %err

skb_may_tx_timestamp.exit:                        ; preds = %land.lhs.true.i
  %call.i = tail call zeroext i1 @file_ns_capable(ptr noundef nonnull %7, ptr noundef nonnull @init_user_ns, i32 noundef 13) #20
  tail call void @_raw_read_unlock_bh(ptr noundef %sk_callback_lock.i) #20
  br i1 %call.i, label %skb_may_tx_timestamp.exit.if.end_crit_edge, label %skb_may_tx_timestamp.exit.err_crit_edge

skb_may_tx_timestamp.exit.err_crit_edge:          ; preds = %skb_may_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %err

skb_may_tx_timestamp.exit.if.end_crit_edge:       ; preds = %skb_may_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %skb_may_tx_timestamp.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %skc_refcnt = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i) #20
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %skc_refcnt, i32 noundef 4) #20
  %8 = ptrtoint ptr %skc_refcnt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %skc_refcnt, align 4
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, %if.end
  %10 = phi i32 [ %9, %if.end ], [ %asmresult3.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge ]
  %11 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %old.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i.i.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i.i.i, label %do.body.i.i.i.if.end4.i.i.i_crit_edge, label %do.cond.i.i.i

do.body.i.i.i.if.end4.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i.i.i

do.cond.i.i.i:                                    ; preds = %do.body.i.i.i
  %add.i.i.i = add i32 %10, 1
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt, i32 noundef 4) #20
  %call.i3.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i, i32 noundef 4) #20
  %12 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %old.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %skc_refcnt, i32 1, i32 3, i32 1) #20
  br label %do.body.i.i.i.i.i.i

do.body.i.i.i.i.i.i:                              ; preds = %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i
  %14 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt, ptr %skc_refcnt, i32 %13, i32 %add.i.i.i, ptr elementtype(i32) %skc_refcnt) #20, !srcloc !405
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %14, 0
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i, label %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i:       ; preds = %do.body.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i = extractvalue { i32, i32 } %14, 1
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i, %13
  br i1 %cmp.not.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, !prof !374

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, %do.body.i.i.i.if.end4.i.i.i_crit_edge
  %15 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %old.i.i.i, align 4
  %add5.i.i.i = add i32 %16, 1
  %17 = or i32 %add5.i.i.i, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %.not.i.i.i = icmp sgt i32 %17, -1
  br i1 %.not.i.i.i, label %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge, label %if.then10.i.i.i, !prof !374

if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge: ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refcount_inc_not_zero.exit

if.then10.i.i.i:                                  ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt, i32 noundef 0) #20
  %18 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pr = load i32, ptr %old.i.i.i, align 4
  br label %refcount_inc_not_zero.exit

refcount_inc_not_zero.exit:                       ; preds = %if.then10.i.i.i, %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge
  %19 = phi i32 [ %16, %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge ], [ %.pr, %if.then10.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool12.i.i.i.not = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i) #20
  br i1 %tobool12.i.i.i.not, label %refcount_inc_not_zero.exit.err_crit_edge, label %if.then3, !prof !373

refcount_inc_not_zero.exit.err_crit_edge:         ; preds = %refcount_inc_not_zero.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %err

if.then3:                                         ; preds = %refcount_inc_not_zero.exit
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %20 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %end.i.i, align 4
  %hwtstamps.i = getelementptr inbounds %struct.skb_shared_info, ptr %21, i32 0, i32 7
  %22 = ptrtoint ptr %hwtstamps to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %hwtstamps, align 8
  %24 = ptrtoint ptr %hwtstamps.i to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %hwtstamps.i, align 8
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3
  %25 = call ptr @memset(ptr %cb.i, i32 0, i32 48)
  %ee.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 24
  %26 = ptrtoint ptr %ee.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 42, ptr %ee.i, align 4
  %ee_origin.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 28
  %27 = ptrtoint ptr %ee_origin.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 4, ptr %ee_origin.i, align 4
  %opt_stats3.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 44
  %28 = ptrtoint ptr %opt_stats3.i to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %opt_stats3.i, align 4
  %29 = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 2
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 8
  %tobool4.not.i12 = icmp eq ptr %31, null
  br i1 %tobool4.not.i12, label %if.then3.cond.end.i_crit_edge, label %cond.true.i

if.then3.cond.end.i_crit_edge:                    ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.end.i

cond.true.i:                                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #22
  %ifindex.i = getelementptr inbounds %struct.net_device, ptr %31, i32 0, i32 17
  %32 = ptrtoint ptr %ifindex.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %ifindex.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.then3.cond.end.i_crit_edge
  %cond.i = phi i32 [ %33, %cond.true.i ], [ 0, %if.then3.cond.end.i_crit_edge ]
  %34 = ptrtoint ptr %cb.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %cond.i, ptr %cb.i, align 4
  %sk_tsflags.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 65
  %35 = ptrtoint ptr %sk_tsflags.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %sk_tsflags.i, align 8
  %37 = and i16 %36, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %37)
  %tobool6.not.i13 = icmp eq i16 %37, 0
  br i1 %tobool6.not.i13, label %cond.end.i.if.end12.i_crit_edge, label %if.then.i

cond.end.i.if.end12.i_crit_edge:                  ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

if.then.i:                                        ; preds = %cond.end.i
  %38 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %end.i.i, align 4
  %tskey.i = getelementptr inbounds %struct.skb_shared_info, ptr %39, i32 0, i32 9
  %40 = ptrtoint ptr %tskey.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %tskey.i, align 4
  %42 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 36
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %41, ptr %42, align 4
  %sk_type.i.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 45
  %44 = ptrtoint ptr %sk_type.i.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %sk_type.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %45)
  %cmp.i.i = icmp eq i16 %45, 1
  br i1 %cmp.i.i, label %sk_is_tcp.exit.i, label %if.then.i.if.end12.i_crit_edge

if.then.i.if.end12.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

sk_is_tcp.exit.i:                                 ; preds = %if.then.i
  %sk_protocol.i.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 46
  %46 = ptrtoint ptr %sk_protocol.i.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %sk_protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %47)
  %cmp3.i.i = icmp eq i16 %47, 6
  br i1 %cmp3.i.i, label %if.then9.i, label %sk_is_tcp.exit.i.if.end12.i_crit_edge

sk_is_tcp.exit.i.if.end12.i_crit_edge:            ; preds = %sk_is_tcp.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

if.then9.i:                                       ; preds = %sk_is_tcp.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %sk_tskey.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 67
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_tskey.i, i32 noundef 4) #20
  %48 = ptrtoint ptr %sk_tskey.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %sk_tskey.i, align 4
  %50 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %42, align 4
  %sub.i = sub i32 %51, %49
  store i32 %sub.i, ptr %42, align 4
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then9.i, %sk_is_tcp.exit.i.if.end12.i_crit_edge, %if.then.i.if.end12.i_crit_edge, %cond.end.i.if.end12.i_crit_edge
  %call13.i = call i32 @sock_queue_err_skb(ptr noundef %2, ptr noundef %skb) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end12.i.__skb_complete_tx_timestamp.exit_crit_edge, label %if.then15.i

if.end12.i.__skb_complete_tx_timestamp.exit_crit_edge: ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %__skb_complete_tx_timestamp.exit

if.then15.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #22
  call fastcc void @kfree_skb(ptr noundef %skb) #20
  br label %__skb_complete_tx_timestamp.exit

__skb_complete_tx_timestamp.exit:                 ; preds = %if.then15.i, %if.end12.i.__skb_complete_tx_timestamp.exit_crit_edge
  %call.i.i.i.i.i.i15 = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  call void @llvm.prefetch.p0(ptr %skc_refcnt, i32 1, i32 3, i32 1) #20
  %52 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt, ptr %skc_refcnt, i32 1, ptr elementtype(i32) %skc_refcnt) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %52, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i16, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %__skb_complete_tx_timestamp.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i.i, !prof !374

if.end5.i.i.i.i.cleanup_crit_edge:                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt, i32 noundef 3) #20
  br label %cleanup

if.then.i16:                                      ; preds = %__skb_complete_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  call void @sk_free(ptr noundef %2) #20
  br label %cleanup

err:                                              ; preds = %refcount_inc_not_zero.exit.err_crit_edge, %skb_may_tx_timestamp.exit.err_crit_edge, %skb_may_tx_timestamp.exit.thread19
  call fastcc void @kfree_skb(ptr noundef %skb)
  br label %cleanup

cleanup:                                          ; preds = %err, %if.then.i16, %if.then10.i.i.i.i, %if.end5.i.i.i.i.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__skb_tstamp_tx(ptr noundef %orig_skb, ptr noundef %ack_skb, ptr noundef readonly %hwtstamps, ptr noundef %sk, i32 noundef %tstype) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %sk, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %hwtstamps, null
  br i1 %tobool1.not, label %land.lhs.true, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %sk_tsflags = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 65
  %0 = ptrtoint ptr %sk_tsflags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %sk_tsflags, align 8
  %2 = and i16 %1, 16384
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool2.not = icmp eq i16 %2, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %land.lhs.true.if.end8_crit_edge

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

land.lhs.true3:                                   ; preds = %land.lhs.true
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %orig_skb, i32 0, i32 17
  %3 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %end.i, align 4
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %tx_flags to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %tx_flags, align 1
  %7 = and i8 %6, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool6.not = icmp eq i8 %7, 0
  br i1 %tobool6.not, label %land.lhs.true3.if.end8_crit_edge, label %land.lhs.true3.cleanup_crit_edge

land.lhs.true3.cleanup_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

land.lhs.true3.if.end8_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.end8:                                          ; preds = %land.lhs.true3.if.end8_crit_edge, %land.lhs.true.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %sk_tsflags9 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 65
  %8 = ptrtoint ptr %sk_tsflags9 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %sk_tsflags9, align 8
  %10 = and i16 %9, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool12 = icmp ne i16 %10, 0
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sysctl_tstamp_allow_data to i32))
  %11 = load i32, ptr @sysctl_tstamp_allow_data, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i = icmp ne i32 %11, 0
  %spec.select.i = or i1 %tobool.not.i, %tobool12
  br i1 %spec.select.i, label %if.end8.if.end16_crit_edge, label %if.end.i, !prof !374

if.end8.if.end16_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

if.end.i:                                         ; preds = %if.end8
  %sk_callback_lock.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50
  tail call void @_raw_read_lock_bh(ptr noundef %sk_callback_lock.i) #20
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %12 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sk_socket.i, align 8
  %tobool4.not.i = icmp eq ptr %13, null
  br i1 %tobool4.not.i, label %if.end.i.skb_may_tx_timestamp.exit.thread92_crit_edge, label %land.lhs.true.i

if.end.i.skb_may_tx_timestamp.exit.thread92_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_may_tx_timestamp.exit.thread92

land.lhs.true.i:                                  ; preds = %if.end.i
  %file.i = getelementptr inbounds %struct.socket, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %file.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %file.i, align 4
  %tobool6.not.i = icmp eq ptr %15, null
  br i1 %tobool6.not.i, label %land.lhs.true.i.skb_may_tx_timestamp.exit.thread92_crit_edge, label %skb_may_tx_timestamp.exit

land.lhs.true.i.skb_may_tx_timestamp.exit.thread92_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_may_tx_timestamp.exit.thread92

skb_may_tx_timestamp.exit.thread92:               ; preds = %land.lhs.true.i.skb_may_tx_timestamp.exit.thread92_crit_edge, %if.end.i.skb_may_tx_timestamp.exit.thread92_crit_edge
  tail call void @_raw_read_unlock_bh(ptr noundef %sk_callback_lock.i) #20
  br label %cleanup

skb_may_tx_timestamp.exit:                        ; preds = %land.lhs.true.i
  %call.i = tail call zeroext i1 @file_ns_capable(ptr noundef nonnull %15, ptr noundef nonnull @init_user_ns, i32 noundef 13) #20
  tail call void @_raw_read_unlock_bh(ptr noundef %sk_callback_lock.i) #20
  br i1 %call.i, label %skb_may_tx_timestamp.exit.if.end16_crit_edge, label %skb_may_tx_timestamp.exit.cleanup_crit_edge

skb_may_tx_timestamp.exit.cleanup_crit_edge:      ; preds = %skb_may_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_may_tx_timestamp.exit.if.end16_crit_edge:     ; preds = %skb_may_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

if.end16:                                         ; preds = %skb_may_tx_timestamp.exit.if.end16_crit_edge, %if.end8.if.end16_crit_edge
  br i1 %tobool12, label %if.then18, label %if.end32.thread

if.then18:                                        ; preds = %if.end16
  %16 = ptrtoint ptr %sk_tsflags9 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %sk_tsflags9, align 8
  %18 = and i16 %17, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %tobool22.not = icmp eq i16 %18, 0
  br i1 %tobool22.not, label %if.then18.if.else_crit_edge, label %land.lhs.true23

if.then18.if.else_crit_edge:                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

land.lhs.true23:                                  ; preds = %if.then18
  %sk_type.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %19 = ptrtoint ptr %sk_type.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %sk_type.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %20)
  %cmp.i = icmp eq i16 %20, 1
  br i1 %cmp.i, label %sk_is_tcp.exit, label %land.lhs.true23.if.else_crit_edge

land.lhs.true23.if.else_crit_edge:                ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

sk_is_tcp.exit:                                   ; preds = %land.lhs.true23
  %sk_protocol.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %21 = ptrtoint ptr %sk_protocol.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %sk_protocol.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %22)
  %cmp3.i = icmp eq i16 %22, 6
  br i1 %cmp3.i, label %if.then26, label %sk_is_tcp.exit.if.else_crit_edge

sk_is_tcp.exit.if.else_crit_edge:                 ; preds = %sk_is_tcp.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.then26:                                        ; preds = %sk_is_tcp.exit
  call void @__sanitizer_cov_trace_pc() #22
  %call27 = tail call ptr @tcp_get_timestamping_opt_stats(ptr noundef nonnull %sk, ptr noundef %orig_skb, ptr noundef %ack_skb) #20
  br label %if.end32

if.else:                                          ; preds = %sk_is_tcp.exit.if.else_crit_edge, %land.lhs.true23.if.else_crit_edge, %if.then18.if.else_crit_edge
  %call.i82 = tail call ptr @__alloc_skb(i32 noundef 0, i32 noundef 2592, i32 noundef 0, i32 noundef -1) #20
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then26
  %skb.0 = phi ptr [ %call27, %if.then26 ], [ %call.i82, %if.else ]
  %opt_stats.0.off0 = phi i1 [ true, %if.then26 ], [ false, %if.else ]
  %tobool33.not = icmp eq ptr %skb.0, null
  br i1 %tobool33.not, label %if.end32.cleanup_crit_edge, label %if.then37

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end32.thread:                                  ; preds = %if.end16
  %call31 = tail call ptr @skb_clone(ptr noundef %orig_skb, i32 noundef 2592)
  %tobool33.not95 = icmp eq ptr %call31, null
  br i1 %tobool33.not95, label %if.end32.thread.cleanup_crit_edge, label %if.end32.thread.if.end49_crit_edge

if.end32.thread.if.end49_crit_edge:               ; preds = %if.end32.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end49

if.end32.thread.cleanup_crit_edge:                ; preds = %if.end32.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then37:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #22
  %end.i83 = getelementptr inbounds %struct.sk_buff, ptr %orig_skb, i32 0, i32 17
  %23 = ptrtoint ptr %end.i83 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %end.i83, align 4
  %tx_flags39 = getelementptr inbounds %struct.skb_shared_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %tx_flags39 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %tx_flags39, align 1
  %27 = and i8 %26, 67
  %end.i84 = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 17
  %28 = ptrtoint ptr %end.i84 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %end.i84, align 4
  %tx_flags43 = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 3
  %30 = ptrtoint ptr %tx_flags43 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %tx_flags43, align 1
  %or79 = or i8 %31, %27
  store i8 %or79, ptr %tx_flags43, align 1
  %32 = load ptr, ptr %end.i83, align 4
  %tskey = getelementptr inbounds %struct.skb_shared_info, ptr %32, i32 0, i32 9
  %33 = ptrtoint ptr %tskey to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %tskey, align 4
  %35 = load ptr, ptr %end.i84, align 4
  %tskey48 = getelementptr inbounds %struct.skb_shared_info, ptr %35, i32 0, i32 9
  %36 = ptrtoint ptr %tskey48 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %34, ptr %tskey48, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then37, %if.end32.thread.if.end49_crit_edge
  %skb.096103 = phi ptr [ %skb.0, %if.then37 ], [ %call31, %if.end32.thread.if.end49_crit_edge ]
  %opt_stats.0.off099102 = phi i1 [ %opt_stats.0.off0, %if.then37 ], [ false, %if.end32.thread.if.end49_crit_edge ]
  br i1 %tobool1.not, label %if.else53, label %if.then51

if.then51:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 17
  %37 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %end.i.i, align 4
  %hwtstamps.i = getelementptr inbounds %struct.skb_shared_info, ptr %38, i32 0, i32 7
  %39 = ptrtoint ptr %hwtstamps to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %hwtstamps, align 8
  %41 = ptrtoint ptr %hwtstamps.i to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %40, ptr %hwtstamps.i, align 8
  br label %if.end55

if.else53:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #22
  %call.i87 = tail call i64 @ktime_get_with_offset(i32 noundef 0) #20
  %42 = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 2
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %call.i87, ptr %42, align 8
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then51
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 3
  %44 = call ptr @memset(ptr %cb.i, i32 0, i32 48)
  %ee.i = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 3, i32 24
  %45 = ptrtoint ptr %ee.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 42, ptr %ee.i, align 4
  %ee_origin.i = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 3, i32 28
  %46 = ptrtoint ptr %ee_origin.i to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 4, ptr %ee_origin.i, align 4
  %ee_info.i = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 3, i32 32
  %47 = ptrtoint ptr %ee_info.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %tstype, ptr %ee_info.i, align 4
  %opt_stats3.i = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 3, i32 44
  %bf.shl.i = select i1 %opt_stats.0.off099102, i8 -128, i8 0
  %48 = ptrtoint ptr %opt_stats3.i to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %bf.shl.i, ptr %opt_stats3.i, align 4
  %49 = getelementptr inbounds %struct.anon.27, ptr %skb.096103, i32 0, i32 2
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 8
  %tobool4.not.i88 = icmp eq ptr %51, null
  br i1 %tobool4.not.i88, label %if.end55.cond.end.i_crit_edge, label %cond.true.i

if.end55.cond.end.i_crit_edge:                    ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #22
  br label %cond.end.i

cond.true.i:                                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #22
  %ifindex.i = getelementptr inbounds %struct.net_device, ptr %51, i32 0, i32 17
  %52 = ptrtoint ptr %ifindex.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %ifindex.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.true.i, %if.end55.cond.end.i_crit_edge
  %cond.i = phi i32 [ %53, %cond.true.i ], [ 0, %if.end55.cond.end.i_crit_edge ]
  %54 = ptrtoint ptr %cb.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %cond.i, ptr %cb.i, align 4
  %55 = ptrtoint ptr %sk_tsflags9 to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %sk_tsflags9, align 8
  %57 = and i16 %56, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %57)
  %tobool6.not.i89 = icmp eq i16 %57, 0
  br i1 %tobool6.not.i89, label %cond.end.i.if.end12.i_crit_edge, label %if.then.i

cond.end.i.if.end12.i_crit_edge:                  ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

if.then.i:                                        ; preds = %cond.end.i
  %end.i.i90 = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 17
  %58 = ptrtoint ptr %end.i.i90 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %end.i.i90, align 4
  %tskey.i = getelementptr inbounds %struct.skb_shared_info, ptr %59, i32 0, i32 9
  %60 = ptrtoint ptr %tskey.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %tskey.i, align 4
  %62 = getelementptr inbounds %struct.sk_buff, ptr %skb.096103, i32 0, i32 3, i32 36
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %61, ptr %62, align 4
  %sk_type.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %64 = ptrtoint ptr %sk_type.i.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %sk_type.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %65)
  %cmp.i.i = icmp eq i16 %65, 1
  br i1 %cmp.i.i, label %sk_is_tcp.exit.i, label %if.then.i.if.end12.i_crit_edge

if.then.i.if.end12.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

sk_is_tcp.exit.i:                                 ; preds = %if.then.i
  %sk_protocol.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %66 = ptrtoint ptr %sk_protocol.i.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %sk_protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %67)
  %cmp3.i.i = icmp eq i16 %67, 6
  br i1 %cmp3.i.i, label %if.then9.i, label %sk_is_tcp.exit.i.if.end12.i_crit_edge

sk_is_tcp.exit.i.if.end12.i_crit_edge:            ; preds = %sk_is_tcp.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12.i

if.then9.i:                                       ; preds = %sk_is_tcp.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %sk_tskey.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 67
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_tskey.i, i32 noundef 4) #20
  %68 = ptrtoint ptr %sk_tskey.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %sk_tskey.i, align 4
  %70 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %62, align 4
  %sub.i = sub i32 %71, %69
  store i32 %sub.i, ptr %62, align 4
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then9.i, %sk_is_tcp.exit.i.if.end12.i_crit_edge, %if.then.i.if.end12.i_crit_edge, %cond.end.i.if.end12.i_crit_edge
  %call13.i = tail call i32 @sock_queue_err_skb(ptr noundef nonnull %sk, ptr noundef nonnull %skb.096103) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end12.i.cleanup_crit_edge, label %if.then15.i

if.end12.i.cleanup_crit_edge:                     ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then15.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %skb.096103) #20
  br label %cleanup

cleanup:                                          ; preds = %if.then15.i, %if.end12.i.cleanup_crit_edge, %if.end32.thread.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %skb_may_tx_timestamp.exit.cleanup_crit_edge, %skb_may_tx_timestamp.exit.thread92, %land.lhs.true3.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @tcp_get_timestamping_opt_stats(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_tstamp_tx(ptr noundef %orig_skb, ptr noundef %hwtstamps) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %orig_skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  tail call void @__skb_tstamp_tx(ptr noundef %orig_skb, ptr noundef null, ptr noundef %hwtstamps, ptr noundef %2, i32 noundef 0)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_complete_wifi_ack(ptr noundef %skb, i1 noundef zeroext %acked) #0 align 64 {
entry:
  %old.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %wifi_acked_valid = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %3 = ptrtoint ptr %wifi_acked_valid to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load = load i16, ptr %wifi_acked_valid, align 8
  %bf.set = and i16 %bf.load, -49
  %bf.clear2 = select i1 %acked, i16 48, i16 32
  %bf.set3 = or i16 %bf.clear2, %bf.set
  store i16 %bf.set3, ptr %wifi_acked_valid, align 8
  %cb = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3
  %4 = call ptr @memset(ptr %cb, i32 0, i32 48)
  %ee = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 24
  %5 = ptrtoint ptr %ee to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 42, ptr %ee, align 4
  %ee_origin = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 28
  %6 = ptrtoint ptr %ee_origin to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 4, ptr %ee_origin, align 4
  %skc_refcnt = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i) #20
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %skc_refcnt, i32 noundef 4) #20
  %7 = ptrtoint ptr %skc_refcnt to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %skc_refcnt, align 4
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, %entry
  %9 = phi i32 [ %8, %entry ], [ %asmresult3.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge ]
  %10 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %old.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i.i.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i.i.i, label %do.body.i.i.i.if.end4.i.i.i_crit_edge, label %do.cond.i.i.i

do.body.i.i.i.if.end4.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i.i.i

do.cond.i.i.i:                                    ; preds = %do.body.i.i.i
  %add.i.i.i = add i32 %9, 1
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt, i32 noundef 4) #20
  %call.i3.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i, i32 noundef 4) #20
  %11 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %old.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %skc_refcnt, i32 1, i32 3, i32 1) #20
  br label %do.body.i.i.i.i.i.i

do.body.i.i.i.i.i.i:                              ; preds = %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i
  %13 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt, ptr %skc_refcnt, i32 %12, i32 %add.i.i.i, ptr elementtype(i32) %skc_refcnt) #20, !srcloc !405
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %13, 0
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i, label %do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.do.body.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i:       ; preds = %do.body.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i = extractvalue { i32, i32 } %13, 1
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i, %12
  br i1 %cmp.not.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge, !prof !374

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.do.body.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i.i.i

if.end4.i.i.i:                                    ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.if.end4.i.i.i_crit_edge, %do.body.i.i.i.if.end4.i.i.i_crit_edge
  %14 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %old.i.i.i, align 4
  %add5.i.i.i = add i32 %15, 1
  %16 = or i32 %add5.i.i.i, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %16)
  %.not.i.i.i = icmp sgt i32 %16, -1
  br i1 %.not.i.i.i, label %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge, label %if.then10.i.i.i, !prof !374

if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge: ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refcount_inc_not_zero.exit

if.then10.i.i.i:                                  ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt, i32 noundef 0) #20
  %17 = ptrtoint ptr %old.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pr = load i32, ptr %old.i.i.i, align 4
  br label %refcount_inc_not_zero.exit

refcount_inc_not_zero.exit:                       ; preds = %if.then10.i.i.i, %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge
  %18 = phi i32 [ %15, %if.end4.i.i.i.refcount_inc_not_zero.exit_crit_edge ], [ %.pr, %if.then10.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool12.i.i.i.not = icmp eq i32 %18, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i) #20
  br i1 %tobool12.i.i.i.not, label %refcount_inc_not_zero.exit.if.then9_crit_edge, label %if.then, !prof !373

refcount_inc_not_zero.exit.if.then9_crit_edge:    ; preds = %refcount_inc_not_zero.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then9

if.then:                                          ; preds = %refcount_inc_not_zero.exit
  %call7 = call i32 @sock_queue_err_skb(ptr noundef %2, ptr noundef %skb)
  %call.i.i.i.i.i.i20 = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  call void @llvm.prefetch.p0(ptr %skc_refcnt, i32 1, i32 3, i32 1) #20
  %19 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt, ptr %skc_refcnt, i32 1, ptr elementtype(i32) %skc_refcnt) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !374

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt, i32 noundef 3) #20
  br label %sock_put.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  call void @sk_free(ptr noundef %2) #20
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %phi.cmp = icmp eq i32 %call7, 0
  br i1 %phi.cmp, label %sock_put.exit.if.end10_crit_edge, label %sock_put.exit.if.then9_crit_edge

sock_put.exit.if.then9_crit_edge:                 ; preds = %sock_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then9

sock_put.exit.if.end10_crit_edge:                 ; preds = %sock_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10

if.then9:                                         ; preds = %sock_put.exit.if.then9_crit_edge, %refcount_inc_not_zero.exit.if.then9_crit_edge
  call fastcc void @kfree_skb(ptr noundef %skb)
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %sock_put.exit.if.end10_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @skb_partial_csum_set(ptr nocapture noundef %skb, i16 noundef zeroext %start, i16 noundef zeroext %off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = zext i16 %start to i32
  %conv1 = zext i16 %off to i32
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %add4 = add i32 %sub.ptr.sub.i, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %add4)
  %cmp = icmp ugt i32 %add4, 65535
  br i1 %cmp, label %entry.do.body_crit_edge, label %lor.end, !prof !373

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

lor.end:                                          ; preds = %entry
  %add = add nuw nsw i32 %conv, 2
  %add2 = add nuw nsw i32 %add, %conv1
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %4 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %6 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %5, %7
  call void @__sanitizer_cov_trace_cmp4(i32 %add2, i32 %sub.i)
  %cmp7 = icmp ugt i32 %add2, %sub.i
  br i1 %cmp7, label %lor.end.do.body_crit_edge, label %if.end21, !prof !373

lor.end.do.body_crit_edge:                        ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.body:                                          ; preds = %lor.end.do.body_crit_edge, %entry.do.body_crit_edge
  %call10 = tail call i32 @net_ratelimit() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %do.body.cleanup_crit_edge, label %do.end

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  %8 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %data.i, align 4
  %10 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i41 = ptrtoint ptr %9 to i32
  %sub.ptr.rhs.cast.i42 = ptrtoint ptr %11 to i32
  %sub.ptr.sub.i43 = sub i32 %sub.ptr.lhs.cast.i41, %sub.ptr.rhs.cast.i42
  %len.i44 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %12 = ptrtoint ptr %len.i44 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %len.i44, align 4
  %data_len.i45 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %14 = ptrtoint ptr %data_len.i45 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %data_len.i45, align 8
  %sub.i46 = sub i32 %13, %15
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.21, i32 noundef %conv, i32 noundef %conv1, i32 noundef %sub.ptr.sub.i43, i32 noundef %sub.i46) #23
  br label %cleanup

if.end21:                                         ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #22
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %16 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %16)
  %bf.load = load i16, ptr %ip_summed, align 8
  %bf.set = or i16 %bf.load, 1536
  store i16 %bf.set, ptr %ip_summed, align 8
  %conv22 = trunc i32 %add4 to i16
  %17 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %conv22, ptr %17, align 8
  %csum_offset = getelementptr inbounds %struct.anon.36, ptr %17, i32 0, i32 1
  %19 = ptrtoint ptr %csum_offset to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %off, ptr %csum_offset, align 2
  %conv.i.i = trunc i32 %sub.ptr.sub.i to i16
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %conv1.i = add i16 %conv.i.i, %start
  %20 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %conv1.i, ptr %transport_header.i.i, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %do.end, %do.body.cleanup_crit_edge
  %21 = phi i1 [ false, %do.body.cleanup_crit_edge ], [ false, %do.end ], [ true, %if.end21 ]
  ret i1 %21
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_checksum_setup(ptr noundef %skb, i1 noundef zeroext %recalculate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %0 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %protocol, align 8
  %2 = zext i16 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.57)
  switch i16 %1, label %entry.sw.epilog_crit_edge [
    i16 2048, label %sw.bb
    i16 -31011, label %sw.bb1
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %3 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len.i.i.i, align 4
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %5 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %data_len.i.i.i, align 8
  %sub.i.i.i = sub i32 %4, %6
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %sub.i.i.i)
  %cmp.not.i.i = icmp ult i32 %sub.i.i.i, 20
  br i1 %cmp.not.i.i, label %if.end.i.i, label %sw.bb.if.end.i_crit_edge

sw.bb.if.end.i_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.end.i.i:                                       ; preds = %sw.bb
  %7 = tail call i32 @llvm.umin.i32(i32 %4, i32 128) #20
  %sub.i.i = sub nsw i32 %7, %sub.i.i.i
  %call7.i.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i.i) #20
  %cmp8.i.i = icmp eq ptr %call7.i.i, null
  br i1 %cmp8.i.i, label %if.end.i.i.sw.epilog_crit_edge, label %if.end10.i.i

if.end.i.i.sw.epilog_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end10.i.i:                                     ; preds = %if.end.i.i
  %8 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len.i.i.i, align 4
  %10 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %data_len.i.i.i, align 8
  %sub.i27.i.i = sub i32 %9, %11
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %sub.i27.i.i)
  %cmp12.i.i = icmp ult i32 %sub.i27.i.i, 20
  br i1 %cmp12.i.i, label %if.end10.i.i.sw.epilog_crit_edge, label %if.end10.i.i.if.end.i_crit_edge

if.end10.i.i.if.end.i_crit_edge:                  ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i

if.end10.i.i.sw.epilog_crit_edge:                 ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end.i:                                         ; preds = %if.end10.i.i.if.end.i_crit_edge, %sw.bb.if.end.i_crit_edge
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %12 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %head.i.i.i, align 8
  %network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %14 = ptrtoint ptr %network_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %network_header.i.i.i, align 4
  %conv.i.i.i = zext i16 %15 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %13, i32 %conv.i.i.i
  %frag_off.i.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i.i, i32 0, i32 4
  %16 = ptrtoint ptr %frag_off.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %frag_off.i.i, align 2
  %18 = and i16 %17, 16383
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %cmp.i.not.i = icmp eq i16 %18, 0
  %19 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load.i.i = load i8, ptr %add.ptr.i.i.i, align 4
  %bf.clear.i.i = shl i8 %bf.load.i.i, 2
  %20 = and i8 %bf.clear.i.i, 60
  %mul.i.i = zext i8 %20 to i32
  br i1 %cmp.i.not.i, label %if.end7.i, label %if.end.i.sw.epilog_crit_edge

if.end.i.sw.epilog_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end7.i:                                        ; preds = %if.end.i
  %protocol.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i.i, i32 0, i32 6
  %21 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %protocol.i, align 1
  %conv.i = zext i8 %22 to i32
  %call9.i = tail call fastcc ptr @skb_checksum_setup_ip(ptr noundef %skb, i32 noundef %conv.i, i32 noundef %mul.i.i) #20
  %cmp.i43.i = icmp ugt ptr %call9.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i43.i, label %if.then11.i, label %if.end13.i

if.then11.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  %23 = ptrtoint ptr %call9.i to i32
  br label %sw.epilog

if.end13.i:                                       ; preds = %if.end7.i
  br i1 %recalculate, label %if.then15.i, label %if.end13.i.sw.epilog_crit_edge

if.end13.i.sw.epilog_crit_edge:                   ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.then15.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #22
  %24 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %head.i.i.i, align 8
  %26 = ptrtoint ptr %network_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %network_header.i.i.i, align 4
  %conv.i.i46.i = zext i16 %27 to i32
  %add.ptr.i.i47.i = getelementptr i8, ptr %25, i32 %conv.i.i46.i
  %saddr.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i47.i, i32 0, i32 8
  %28 = ptrtoint ptr %saddr.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %saddr.i, align 4
  %daddr.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i47.i, i32 0, i32 9
  %30 = ptrtoint ptr %daddr.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %daddr.i, align 4
  %32 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %len.i.i.i, align 4
  %sub.i = sub i32 %33, %mul.i.i
  %protocol19.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i47.i, i32 0, i32 6
  %34 = ptrtoint ptr %protocol19.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %protocol19.i, align 1
  %conv.i.i56.i = zext i8 %35 to i32
  %add.i.i.i = add i32 %sub.i, %conv.i.i56.i
  %36 = tail call i32 asm "adds\09$0, $1, $2\09@ csum_tcpudp_nofold0\09\0A\09adcs\09$0, $0, $3\09\09\09\09\0A\09adc\09$0, $0, #0", "=&r,r,r,r,~{cc}"(i32 %31, i32 %29, i32 %add.i.i.i) #24, !srcloc !449
  %37 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %36) #24, !srcloc !431
  %neg.i.i.i = xor i32 %37, -1
  %shr.i.i.i = lshr i32 %neg.i.i.i, 16
  %conv.i1.i.i = trunc i32 %shr.i.i.i to i16
  %neg.i = xor i16 %conv.i1.i.i, -1
  %38 = ptrtoint ptr %call9.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %neg.i, ptr %call9.i, align 2
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %len.i.i.i7 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %39 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %len.i.i.i7, align 4
  %data_len.i.i.i8 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %41 = ptrtoint ptr %data_len.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %data_len.i.i.i8, align 8
  %sub.i.i.i9 = sub i32 %40, %42
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %sub.i.i.i9)
  %cmp.not.i.i10 = icmp ult i32 %sub.i.i.i9, 40
  br i1 %cmp.not.i.i10, label %if.end.i.i14, label %sw.bb1.if.end.i23_crit_edge

sw.bb1.if.end.i23_crit_edge:                      ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i23

if.end.i.i14:                                     ; preds = %sw.bb1
  %43 = tail call i32 @llvm.umin.i32(i32 %40, i32 256) #20
  %sub.i.i11 = sub nsw i32 %43, %sub.i.i.i9
  %call7.i.i12 = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i.i11) #20
  %cmp8.i.i13 = icmp eq ptr %call7.i.i12, null
  br i1 %cmp8.i.i13, label %if.end.i.i14.sw.epilog_crit_edge, label %if.end10.i.i17

if.end.i.i14.sw.epilog_crit_edge:                 ; preds = %if.end.i.i14
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end10.i.i17:                                   ; preds = %if.end.i.i14
  %44 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %len.i.i.i7, align 4
  %46 = ptrtoint ptr %data_len.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %data_len.i.i.i8, align 8
  %sub.i27.i.i15 = sub i32 %45, %47
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %sub.i27.i.i15)
  %cmp12.i.i16 = icmp ult i32 %sub.i27.i.i15, 40
  br i1 %cmp12.i.i16, label %if.end10.i.i17.sw.epilog_crit_edge, label %if.end10.i.i17.if.end.i23_crit_edge

if.end10.i.i17.if.end.i23_crit_edge:              ; preds = %if.end10.i.i17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i23

if.end10.i.i17.sw.epilog_crit_edge:               ; preds = %if.end10.i.i17
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end.i23:                                       ; preds = %if.end10.i.i17.if.end.i23_crit_edge, %sw.bb1.if.end.i23_crit_edge
  %head.i.i.i18 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %48 = ptrtoint ptr %head.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %head.i.i.i18, align 8
  %network_header.i.i.i19 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %50 = ptrtoint ptr %network_header.i.i.i19 to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %network_header.i.i.i19, align 4
  %conv.i.i.i20 = zext i16 %51 to i32
  %add.ptr.i.i.i21 = getelementptr i8, ptr %49, i32 %conv.i.i.i20
  %nexthdr2.i = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i.i21, i32 0, i32 3
  %payload_len.i = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i.i21, i32 0, i32 2
  %52 = ptrtoint ptr %payload_len.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %payload_len.i, align 4
  %conv.i22 = zext i16 %53 to i32
  %add.i = add nuw nsw i32 %conv.i22, 40
  br label %while.body.i

while.body.i:                                     ; preds = %sw.epilog.i.while.body.i_crit_edge, %if.end.i23
  %fragment.0.off0232.i = phi i1 [ false, %if.end.i23 ], [ %fragment.3.off0.i, %sw.epilog.i.while.body.i_crit_edge ]
  %off.0231.i = phi i32 [ 40, %if.end.i23 ], [ %off.4.i, %sw.epilog.i.while.body.i_crit_edge ]
  %nexthdr.0230.in.i = phi ptr [ %nexthdr2.i, %if.end.i23 ], [ %nexthdr.4.in.i, %sw.epilog.i.while.body.i_crit_edge ]
  %54 = ptrtoint ptr %nexthdr.0230.in.i to i32
  call void @__asan_load1_noabort(i32 %54)
  %nexthdr.0230.i = load i8, ptr %nexthdr.0230.in.i, align 1
  %55 = zext i8 %nexthdr.0230.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %55, ptr @__sancov_gen_cov_switch_values.58)
  switch i8 %nexthdr.0230.i, label %while.end.i [
    i8 60, label %while.body.i.sw.bb.i_crit_edge
    i8 0, label %while.body.i.sw.bb.i_crit_edge49
    i8 43, label %while.body.i.sw.bb.i_crit_edge50
    i8 51, label %sw.bb18.i
    i8 44, label %sw.bb36.i
  ]

while.body.i.sw.bb.i_crit_edge50:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb.i

while.body.i.sw.bb.i_crit_edge49:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb.i

while.body.i.sw.bb.i_crit_edge:                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.bb.i

sw.bb.i:                                          ; preds = %while.body.i.sw.bb.i_crit_edge, %while.body.i.sw.bb.i_crit_edge49, %while.body.i.sw.bb.i_crit_edge50
  %add7.i = add i32 %off.0231.i, 2
  %56 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %len.i.i.i7, align 4
  %58 = ptrtoint ptr %data_len.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %data_len.i.i.i8, align 8
  %sub.i.i138.i = sub i32 %57, %59
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i138.i, i32 %add7.i)
  %cmp.not.i139.i = icmp ult i32 %sub.i.i138.i, %add7.i
  br i1 %cmp.not.i139.i, label %if.end.i143.i, label %sw.bb.i.cleanup.thread.i_crit_edge

sw.bb.i.cleanup.thread.i_crit_edge:               ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread.i

if.end.i143.i:                                    ; preds = %sw.bb.i
  %60 = tail call i32 @llvm.umin.i32(i32 %57, i32 256) #20
  %sub.i140.i = sub i32 %60, %sub.i.i138.i
  %call7.i141.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i140.i) #20
  %cmp8.i142.i = icmp eq ptr %call7.i141.i, null
  br i1 %cmp8.i142.i, label %if.end.i143.i.sw.epilog_crit_edge, label %if.end10.i147.i

if.end.i143.i.sw.epilog_crit_edge:                ; preds = %if.end.i143.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end10.i147.i:                                  ; preds = %if.end.i143.i
  %61 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %len.i.i.i7, align 4
  %63 = ptrtoint ptr %data_len.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %data_len.i.i.i8, align 8
  %sub.i27.i144.i = sub i32 %62, %64
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i27.i144.i, i32 %add7.i)
  %cmp12.i145.i = icmp ult i32 %sub.i27.i144.i, %add7.i
  br i1 %cmp12.i145.i, label %if.end10.i147.i.sw.epilog_crit_edge, label %if.end10.i147.i.cleanup.thread.i_crit_edge

if.end10.i147.i.cleanup.thread.i_crit_edge:       ; preds = %if.end10.i147.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread.i

if.end10.i147.i.sw.epilog_crit_edge:              ; preds = %if.end10.i147.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

cleanup.thread.i:                                 ; preds = %if.end10.i147.i.cleanup.thread.i_crit_edge, %sw.bb.i.cleanup.thread.i_crit_edge
  %65 = ptrtoint ptr %head.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %head.i.i.i18, align 8
  %67 = ptrtoint ptr %network_header.i.i.i19 to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %network_header.i.i.i19, align 4
  %conv.i.i = zext i16 %68 to i32
  %add.ptr.i.i = getelementptr i8, ptr %66, i32 %conv.i.i
  %add.ptr.i = getelementptr i8, ptr %add.ptr.i.i, i32 %off.0231.i
  %hdrlen.i = getelementptr inbounds %struct.ipv6_opt_hdr, ptr %add.ptr.i, i32 0, i32 1
  %69 = ptrtoint ptr %hdrlen.i to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %hdrlen.i, align 1
  %conv15.i = zext i8 %70 to i32
  %add16.i = shl nuw nsw i32 %conv15.i, 3
  %shl.i = add i32 %off.0231.i, 8
  %add17.i = add i32 %shl.i, %add16.i
  br label %sw.epilog.i

sw.bb18.i:                                        ; preds = %while.body.i
  %add20.i = add i32 %off.0231.i, 12
  %71 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %len.i.i.i7, align 4
  %73 = ptrtoint ptr %data_len.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %data_len.i.i.i8, align 8
  %sub.i.i152.i = sub i32 %72, %74
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i152.i, i32 %add20.i)
  %cmp.not.i153.i = icmp ult i32 %sub.i.i152.i, %add20.i
  br i1 %cmp.not.i153.i, label %if.end.i157.i, label %sw.bb18.i.cleanup34.thread.i_crit_edge

sw.bb18.i.cleanup34.thread.i_crit_edge:           ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup34.thread.i

if.end.i157.i:                                    ; preds = %sw.bb18.i
  %75 = tail call i32 @llvm.umin.i32(i32 %72, i32 256) #20
  %sub.i154.i = sub i32 %75, %sub.i.i152.i
  %call7.i155.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i154.i) #20
  %cmp8.i156.i = icmp eq ptr %call7.i155.i, null
  br i1 %cmp8.i156.i, label %if.end.i157.i.sw.epilog_crit_edge, label %if.end10.i161.i

if.end.i157.i.sw.epilog_crit_edge:                ; preds = %if.end.i157.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end10.i161.i:                                  ; preds = %if.end.i157.i
  %76 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %len.i.i.i7, align 4
  %78 = ptrtoint ptr %data_len.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %data_len.i.i.i8, align 8
  %sub.i27.i158.i = sub i32 %77, %79
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i27.i158.i, i32 %add20.i)
  %cmp12.i159.i = icmp ult i32 %sub.i27.i158.i, %add20.i
  br i1 %cmp12.i159.i, label %if.end10.i161.i.sw.epilog_crit_edge, label %if.end10.i161.i.cleanup34.thread.i_crit_edge

if.end10.i161.i.cleanup34.thread.i_crit_edge:     ; preds = %if.end10.i161.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup34.thread.i

if.end10.i161.i.sw.epilog_crit_edge:              ; preds = %if.end10.i161.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

cleanup34.thread.i:                               ; preds = %if.end10.i161.i.cleanup34.thread.i_crit_edge, %sw.bb18.i.cleanup34.thread.i_crit_edge
  %80 = ptrtoint ptr %head.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %head.i.i.i18, align 8
  %82 = ptrtoint ptr %network_header.i.i.i19 to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %network_header.i.i.i19, align 4
  %conv.i166.i = zext i16 %83 to i32
  %add.ptr.i167.i = getelementptr i8, ptr %81, i32 %conv.i166.i
  %add.ptr27.i = getelementptr i8, ptr %add.ptr.i167.i, i32 %off.0231.i
  %hdrlen29.i = getelementptr inbounds %struct.ip_auth_hdr, ptr %add.ptr27.i, i32 0, i32 1
  %84 = ptrtoint ptr %hdrlen29.i to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %hdrlen29.i, align 1
  %conv30.i = zext i8 %85 to i32
  %add31.i = shl nuw nsw i32 %conv30.i, 2
  %shl32.i = add i32 %off.0231.i, 8
  %add33.i = add i32 %shl32.i, %add31.i
  br label %sw.epilog.i

sw.bb36.i:                                        ; preds = %while.body.i
  %add38.i = add i32 %off.0231.i, 8
  %86 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %len.i.i.i7, align 4
  %88 = ptrtoint ptr %data_len.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %data_len.i.i.i8, align 8
  %sub.i.i170.i = sub i32 %87, %89
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i170.i, i32 %add38.i)
  %cmp.not.i171.i = icmp ult i32 %sub.i.i170.i, %add38.i
  br i1 %cmp.not.i171.i, label %if.end.i175.i, label %sw.bb36.i.cleanup52.thread.i_crit_edge

sw.bb36.i.cleanup52.thread.i_crit_edge:           ; preds = %sw.bb36.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup52.thread.i

if.end.i175.i:                                    ; preds = %sw.bb36.i
  %90 = tail call i32 @llvm.umin.i32(i32 %87, i32 256) #20
  %sub.i172.i = sub i32 %90, %sub.i.i170.i
  %call7.i173.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i172.i) #20
  %cmp8.i174.i = icmp eq ptr %call7.i173.i, null
  br i1 %cmp8.i174.i, label %if.end.i175.i.sw.epilog_crit_edge, label %if.end10.i179.i

if.end.i175.i.sw.epilog_crit_edge:                ; preds = %if.end.i175.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end10.i179.i:                                  ; preds = %if.end.i175.i
  %91 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %len.i.i.i7, align 4
  %93 = ptrtoint ptr %data_len.i.i.i8 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %data_len.i.i.i8, align 8
  %sub.i27.i176.i = sub i32 %92, %94
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i27.i176.i, i32 %add38.i)
  %cmp12.i177.i = icmp ult i32 %sub.i27.i176.i, %add38.i
  br i1 %cmp12.i177.i, label %if.end10.i179.i.sw.epilog_crit_edge, label %if.end10.i179.i.cleanup52.thread.i_crit_edge

if.end10.i179.i.cleanup52.thread.i_crit_edge:     ; preds = %if.end10.i179.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup52.thread.i

if.end10.i179.i.sw.epilog_crit_edge:              ; preds = %if.end10.i179.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

cleanup52.thread.i:                               ; preds = %if.end10.i179.i.cleanup52.thread.i_crit_edge, %sw.bb36.i.cleanup52.thread.i_crit_edge
  %95 = ptrtoint ptr %head.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %head.i.i.i18, align 8
  %97 = ptrtoint ptr %network_header.i.i.i19 to i32
  call void @__asan_load2_noabort(i32 %97)
  %98 = load i16, ptr %network_header.i.i.i19, align 4
  %conv.i184.i = zext i16 %98 to i32
  %add.ptr.i185.i = getelementptr i8, ptr %96, i32 %conv.i184.i
  %add.ptr45.i = getelementptr i8, ptr %add.ptr.i185.i, i32 %off.0231.i
  %frag_off.i = getelementptr inbounds %struct.frag_hdr, ptr %add.ptr45.i, i32 0, i32 2
  %99 = ptrtoint ptr %frag_off.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %frag_off.i, align 2
  %101 = and i16 %100, -7
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %101)
  %tobool47.not.i = icmp ne i16 %101, 0
  %spec.select.i = select i1 %tobool47.not.i, i1 true, i1 %fragment.0.off0232.i
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %cleanup52.thread.i, %cleanup34.thread.i, %cleanup.thread.i
  %nexthdr.4.in.i = phi ptr [ %add.ptr.i, %cleanup.thread.i ], [ %add.ptr27.i, %cleanup34.thread.i ], [ %add.ptr45.i, %cleanup52.thread.i ]
  %off.4.i = phi i32 [ %add17.i, %cleanup.thread.i ], [ %add33.i, %cleanup34.thread.i ], [ %add38.i, %cleanup52.thread.i ]
  %fragment.3.off0.i = phi i1 [ %fragment.0.off0232.i, %cleanup.thread.i ], [ %fragment.0.off0232.i, %cleanup34.thread.i ], [ %spec.select.i, %cleanup52.thread.i ]
  %cmp4.not.i = icmp ugt i32 %off.4.i, %add.i
  br i1 %cmp4.not.i, label %sw.epilog.i.sw.epilog_crit_edge, label %sw.epilog.i.while.body.i_crit_edge

sw.epilog.i.while.body.i_crit_edge:               ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

sw.epilog.i.sw.epilog_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

while.end.i:                                      ; preds = %while.body.i
  br i1 %fragment.0.off0232.i, label %while.end.i.sw.epilog_crit_edge, label %if.end58.i

while.end.i.sw.epilog_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.end58.i:                                       ; preds = %while.end.i
  %conv59.i = zext i8 %nexthdr.0230.i to i32
  %call60.i = tail call fastcc ptr @skb_checksum_setup_ip(ptr noundef %skb, i32 noundef %conv59.i, i32 noundef %off.0231.i) #20
  %cmp.i.i = icmp ugt ptr %call60.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then62.i, label %if.end64.i

if.then62.i:                                      ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #22
  %102 = ptrtoint ptr %call60.i to i32
  br label %sw.epilog

if.end64.i:                                       ; preds = %if.end58.i
  br i1 %recalculate, label %if.then66.i, label %if.end64.i.sw.epilog_crit_edge

if.end64.i.sw.epilog_crit_edge:                   ; preds = %if.end64.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

if.then66.i:                                      ; preds = %if.end64.i
  call void @__sanitizer_cov_trace_pc() #22
  %103 = ptrtoint ptr %head.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %head.i.i.i18, align 8
  %105 = ptrtoint ptr %network_header.i.i.i19 to i32
  call void @__asan_load2_noabort(i32 %105)
  %106 = load i16, ptr %network_header.i.i.i19, align 4
  %conv.i.i188.i = zext i16 %106 to i32
  %add.ptr.i.i189.i = getelementptr i8, ptr %104, i32 %conv.i.i188.i
  %saddr.i24 = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i189.i, i32 0, i32 5
  %daddr.i25 = getelementptr inbounds %struct.ipv6hdr, ptr %add.ptr.i.i189.i, i32 0, i32 6
  %107 = ptrtoint ptr %len.i.i.i7 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %len.i.i.i7, align 4
  %sub.i26 = sub i32 %108, %off.0231.i
  %call.i.i = tail call i32 @__csum_ipv6_magic(ptr noundef %saddr.i24, ptr noundef %daddr.i25, i32 noundef %sub.i26, i32 noundef %conv59.i, i32 noundef 0) #20
  %109 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %call.i.i) #24, !srcloc !431
  %neg.i.i.i27 = xor i32 %109, -1
  %shr.i.i.i28 = lshr i32 %neg.i.i.i27, 16
  %conv.i.i195.i = trunc i32 %shr.i.i.i28 to i16
  %neg.i29 = xor i16 %conv.i.i195.i, -1
  %110 = ptrtoint ptr %call60.i to i32
  call void @__asan_store2_noabort(i32 %110)
  store i16 %neg.i29, ptr %call60.i, align 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then66.i, %if.end64.i.sw.epilog_crit_edge, %if.then62.i, %while.end.i.sw.epilog_crit_edge, %sw.epilog.i.sw.epilog_crit_edge, %if.end10.i179.i.sw.epilog_crit_edge, %if.end.i175.i.sw.epilog_crit_edge, %if.end10.i161.i.sw.epilog_crit_edge, %if.end.i157.i.sw.epilog_crit_edge, %if.end10.i147.i.sw.epilog_crit_edge, %if.end.i143.i.sw.epilog_crit_edge, %if.end10.i.i17.sw.epilog_crit_edge, %if.end.i.i14.sw.epilog_crit_edge, %if.then15.i, %if.end13.i.sw.epilog_crit_edge, %if.then11.i, %if.end.i.sw.epilog_crit_edge, %if.end10.i.i.sw.epilog_crit_edge, %if.end.i.i.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  %err.0 = phi i32 [ -71, %entry.sw.epilog_crit_edge ], [ %23, %if.then11.i ], [ -71, %if.end.i.sw.epilog_crit_edge ], [ 0, %if.then15.i ], [ 0, %if.end13.i.sw.epilog_crit_edge ], [ -12, %if.end.i.i.sw.epilog_crit_edge ], [ -71, %if.end10.i.i.sw.epilog_crit_edge ], [ %102, %if.then62.i ], [ -71, %while.end.i.sw.epilog_crit_edge ], [ 0, %if.then66.i ], [ 0, %if.end64.i.sw.epilog_crit_edge ], [ -12, %if.end.i.i14.sw.epilog_crit_edge ], [ -71, %if.end10.i.i17.sw.epilog_crit_edge ], [ -12, %if.end.i143.i.sw.epilog_crit_edge ], [ -12, %if.end.i157.i.sw.epilog_crit_edge ], [ -12, %if.end.i175.i.sw.epilog_crit_edge ], [ -71, %if.end10.i147.i.sw.epilog_crit_edge ], [ -71, %if.end10.i161.i.sw.epilog_crit_edge ], [ -71, %if.end10.i179.i.sw.epilog_crit_edge ], [ -71, %sw.epilog.i.sw.epilog_crit_edge ]
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_checksum_trimmed(ptr noundef %skb, i32 noundef %transport_len, ptr nocapture noundef readonly %skb_chkf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %0 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head.i.i, align 8
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %2 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %transport_header.i.i, align 2
  %conv.i.i = zext i16 %3 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %conv.i.i
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %4 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %5 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %add.i = add i32 %sub.ptr.sub.i, %transport_len
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %6 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %add.i)
  %cmp.i = icmp ult i32 %7, %add.i
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.else.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %add.i)
  %cmp3.i = icmp eq i32 %7, %add.i
  br i1 %cmp3.i, label %skb_checksum_maybe_trim.exit, label %if.end5.i

if.end5.i:                                        ; preds = %if.else.i
  %call6.i = tail call ptr @skb_clone(ptr noundef %skb, i32 noundef 2592) #20
  %tobool.not.i = icmp eq ptr %call6.i, null
  br i1 %tobool.not.i, label %if.end5.i.cleanup_crit_edge, label %if.end8.i

if.end5.i.cleanup_crit_edge:                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i:                                        ; preds = %if.end5.i
  %len1.i.i = getelementptr inbounds %struct.sk_buff, ptr %call6.i, i32 0, i32 6
  %8 = ptrtoint ptr %len1.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len1.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %add.i)
  %cmp.not.i.i = icmp ugt i32 %9, %add.i
  br i1 %cmp.not.i.i, label %pskb_trim_rcsum.exit.i, label %if.end8.i.if.end_crit_edge, !prof !373

if.end8.i.if.end_crit_edge:                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

pskb_trim_rcsum.exit.i:                           ; preds = %if.end8.i
  %call.i.i = tail call i32 @pskb_trim_rcsum_slow(ptr noundef nonnull %call6.i, i32 noundef %add.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool10.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool10.not.i, label %pskb_trim_rcsum.exit.i.if.end_crit_edge, label %if.then11.i

pskb_trim_rcsum.exit.i.if.end_crit_edge:          ; preds = %pskb_trim_rcsum.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then11.i:                                      ; preds = %pskb_trim_rcsum.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %call6.i) #20
  br label %cleanup

skb_checksum_maybe_trim.exit:                     ; preds = %if.else.i
  %tobool.not = icmp eq ptr %skb, null
  br i1 %tobool.not, label %skb_checksum_maybe_trim.exit.cleanup_crit_edge, label %skb_checksum_maybe_trim.exit.if.end_crit_edge

skb_checksum_maybe_trim.exit.if.end_crit_edge:    ; preds = %skb_checksum_maybe_trim.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_checksum_maybe_trim.exit.cleanup_crit_edge:   ; preds = %skb_checksum_maybe_trim.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %skb_checksum_maybe_trim.exit.if.end_crit_edge, %pskb_trim_rcsum.exit.i.if.end_crit_edge, %if.end8.i.if.end_crit_edge
  %retval.0.i48 = phi ptr [ %skb, %skb_checksum_maybe_trim.exit.if.end_crit_edge ], [ %call6.i, %pskb_trim_rcsum.exit.i.if.end_crit_edge ], [ %call6.i, %if.end8.i.if.end_crit_edge ]
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 6
  %10 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 7
  %12 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %11, %13
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i, i32 %sub.i.i)
  %cmp.not.i = icmp ugt i32 %sub.ptr.sub.i, %sub.i.i
  br i1 %cmp.not.i, label %if.end.i, label %if.end.if.end4_crit_edge, !prof !373

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %sub.ptr.sub.i)
  %cmp3.i29 = icmp ult i32 %11, %sub.ptr.sub.i
  br i1 %cmp3.i29, label %if.end.i.land.lhs.true_crit_edge, label %pskb_may_pull.exit, !prof !373

if.end.i.land.lhs.true_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

pskb_may_pull.exit:                               ; preds = %if.end.i
  %sub.i = sub i32 %sub.ptr.sub.i, %sub.i.i
  %call13.i = tail call ptr @__pskb_pull_tail(ptr noundef nonnull %retval.0.i48, i32 noundef %sub.i) #20
  %cmp14.i.not = icmp eq ptr %call13.i, null
  br i1 %cmp14.i.not, label %pskb_may_pull.exit.land.lhs.true_crit_edge, label %pskb_may_pull.exit.if.end4_crit_edge

pskb_may_pull.exit.if.end4_crit_edge:             ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4

pskb_may_pull.exit.land.lhs.true_crit_edge:       ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

if.end4:                                          ; preds = %pskb_may_pull.exit.if.end4_crit_edge, %if.end.if.end4_crit_edge
  %14 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %len.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %sub.ptr.sub.i)
  %cmp.i31 = icmp ult i32 %15, %sub.ptr.sub.i
  br i1 %cmp.i31, label %do.body4.i, label %do.end9.i, !prof !373

do.body4.i:                                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3838, 0\0A.popsection", ""() #20, !srcloc !436
  unreachable

do.end9.i:                                        ; preds = %if.end4
  %data1.i = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 19
  %16 = ptrtoint ptr %data1.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data1.i, align 4
  %sub.i.i32 = sub i32 %15, %sub.ptr.sub.i
  %18 = ptrtoint ptr %len.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %sub.i.i32, ptr %len.i.i, align 4
  %19 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i32, i32 %20)
  %cmp.i.i = icmp ult i32 %sub.i.i32, %20
  br i1 %cmp.i.i, label %do.body4.i.i, label %__skb_pull.exit.i, !prof !373

do.body4.i.i:                                     ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #20, !srcloc !422
  unreachable

__skb_pull.exit.i:                                ; preds = %do.end9.i
  %add.ptr.i.i34 = getelementptr i8, ptr %17, i32 %sub.ptr.sub.i
  %21 = ptrtoint ptr %data1.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %add.ptr.i.i34, ptr %data1.i, align 4
  %ip_summed.i.i = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 15
  %22 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %bf.load.i.i = load i16, ptr %ip_summed.i.i, align 8
  %bf.lshr.i.i = lshr i16 %bf.load.i.i, 9
  %trunc.i.i = trunc i16 %bf.lshr.i.i to i2
  %23 = zext i2 %trunc.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.59)
  switch i2 %trunc.i.i, label %__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge [
    i2 -2, label %if.then.i.i
    i2 -1, label %land.lhs.true.i.i
  ]

__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge:  ; preds = %__skb_pull.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_pull_rcsum.exit

if.then.i.i:                                      ; preds = %__skb_pull.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %24 = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 15, i32 0, i32 5
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 8
  %sub.i.i.i = sub i32 0, %26
  %call2.i.i = tail call i32 @csum_partial(ptr noundef %17, i32 noundef %sub.ptr.sub.i, i32 noundef %sub.i.i.i) #20
  %sub.i25.i.i = sub i32 0, %call2.i.i
  %27 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sub.i25.i.i, ptr %24, align 8
  br label %skb_pull_rcsum.exit

land.lhs.true.i.i:                                ; preds = %__skb_pull.exit.i
  %28 = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 15, i32 0, i32 5
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %28, align 8
  %conv.i.i.i35 = zext i16 %30 to i32
  %head.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 18
  %31 = ptrtoint ptr %head.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %head.i.i.i.i, align 8
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %add.ptr.i.i34 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %32 to i32
  %sub.ptr.sub.i.neg.i.i.i = sub i32 %conv.i.i.i35, %sub.ptr.lhs.cast.i.i.i.i
  %sub.i26.i.i = add i32 %sub.ptr.sub.i.neg.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i26.i.i)
  %cmp13.i.i = icmp slt i32 %sub.i26.i.i, 0
  br i1 %cmp13.i.i, label %if.then15.i.i, label %land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge

land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge:  ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_pull_rcsum.exit

if.then15.i.i:                                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear18.i.i = and i16 %bf.load.i.i, -1537
  %33 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %bf.clear18.i.i, ptr %ip_summed.i.i, align 8
  br label %skb_pull_rcsum.exit

skb_pull_rcsum.exit:                              ; preds = %if.then15.i.i, %land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge, %if.then.i.i, %__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge
  %call6 = tail call zeroext i16 %skb_chkf(ptr noundef nonnull %retval.0.i48) #20
  %34 = ptrtoint ptr %data1.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %data1.i, align 4
  %idx.neg.i.i = sub i32 0, %sub.ptr.sub.i
  %add.ptr.i.i37 = getelementptr i8, ptr %35, i32 %idx.neg.i.i
  store ptr %add.ptr.i.i37, ptr %data1.i, align 4
  %36 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %len.i.i, align 4
  %add.i.i = add i32 %37, %sub.ptr.sub.i
  store i32 %add.i.i, ptr %len.i.i, align 4
  %head.i.i39 = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 18
  %38 = ptrtoint ptr %head.i.i39 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %head.i.i39, align 8
  %cmp.i.i40 = icmp ult ptr %add.ptr.i.i37, %39
  br i1 %cmp.i.i40, label %if.then.i.i41, label %skb_push.exit.i, !prof !373

if.then.i.i41:                                    ; preds = %skb_pull_rcsum.exit
  call void @__sanitizer_cov_trace_pc() #22
  %40 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_under_panic(ptr noundef nonnull %retval.0.i48, i32 noundef %sub.ptr.sub.i, ptr noundef %40) #20
  unreachable

skb_push.exit.i:                                  ; preds = %skb_pull_rcsum.exit
  %41 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %bf.load.i.i.i = load i16, ptr %ip_summed.i.i, align 8
  %42 = and i16 %bf.load.i.i.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %42)
  %cmp.i.i.i = icmp eq i16 %42, 1024
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %skb_push.exit.i.skb_push_rcsum.exit_crit_edge

skb_push.exit.i.skb_push_rcsum.exit_crit_edge:    ; preds = %skb_push.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_push_rcsum.exit

if.then.i.i.i:                                    ; preds = %skb_push.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %43 = getelementptr inbounds %struct.sk_buff, ptr %retval.0.i48, i32 0, i32 15, i32 0, i32 5
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %43, align 8
  %call.i.i.i = tail call i32 @csum_partial(ptr noundef %add.ptr.i.i37, i32 noundef %sub.ptr.sub.i, i32 noundef 0) #20
  %add.i.i.i.i.i = add i32 %call.i.i.i, %45
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i.i, i32 %call.i.i.i)
  %cmp.i.i.i.i.i = icmp ult i32 %add.i.i.i.i.i, %call.i.i.i
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i to i32
  %add1.i.i.i.i.i = add i32 %add.i.i.i.i.i, %conv.i.i.i.i.i
  %46 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %add1.i.i.i.i.i, ptr %43, align 8
  br label %skb_push_rcsum.exit

skb_push_rcsum.exit:                              ; preds = %if.then.i.i.i, %skb_push.exit.i.skb_push_rcsum.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %call6)
  %tobool8.not = icmp eq i16 %call6, 0
  br i1 %tobool8.not, label %skb_push_rcsum.exit.cleanup_crit_edge, label %skb_push_rcsum.exit.land.lhs.true_crit_edge

skb_push_rcsum.exit.land.lhs.true_crit_edge:      ; preds = %skb_push_rcsum.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

skb_push_rcsum.exit.cleanup_crit_edge:            ; preds = %skb_push_rcsum.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

land.lhs.true:                                    ; preds = %skb_push_rcsum.exit.land.lhs.true_crit_edge, %pskb_may_pull.exit.land.lhs.true_crit_edge, %if.end.i.land.lhs.true_crit_edge
  %cmp.not = icmp eq ptr %retval.0.i48, %skb
  br i1 %cmp.not, label %land.lhs.true.cleanup_crit_edge, label %if.then12

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then12:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %retval.0.i48)
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %land.lhs.true.cleanup_crit_edge, %skb_push_rcsum.exit.cleanup_crit_edge, %skb_checksum_maybe_trim.exit.cleanup_crit_edge, %if.then11.i, %if.end5.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %retval.0.i48, %skb_push_rcsum.exit.cleanup_crit_edge ], [ null, %skb_checksum_maybe_trim.exit.cleanup_crit_edge ], [ null, %if.then12 ], [ null, %land.lhs.true.cleanup_crit_edge ], [ null, %if.then11.i ], [ null, %entry.cleanup_crit_edge ], [ null, %if.end5.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__skb_warn_lro_forwarding(ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @net_ratelimit() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %0 = getelementptr inbounds %struct.anon.27, ptr %skb, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, ptr noundef %2) #23
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @kfree_skb_partial(ptr noundef %skb, i1 noundef zeroext %head_stolen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %head_stolen, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @skb_release_head_state(ptr noundef %skb)
  %0 = load ptr, ptr @skbuff_head_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %0, ptr noundef %skb) #20
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @skb_release_head_state(ptr noundef %skb) #20
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %1 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %head.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %2, null
  br i1 %tobool.not.i.i, label %if.else.__kfree_skb.exit_crit_edge, label %if.then.i.i, !prof !373

if.else.__kfree_skb.exit_crit_edge:               ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %__kfree_skb.exit

if.then.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @skb_release_data(ptr noundef %skb) #20
  br label %__kfree_skb.exit

__kfree_skb.exit:                                 ; preds = %if.then.i.i, %if.else.__kfree_skb.exit_crit_edge
  tail call fastcc void @kfree_skbmem(ptr noundef %skb) #20
  br label %if.end

if.end:                                           ; preds = %__kfree_skb.exit, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @skb_try_coalesce(ptr noundef %to, ptr noundef readonly %from, ptr nocapture noundef writeonly %fragstolen, ptr nocapture noundef writeonly %delta_truesize) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 6
  %0 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len1, align 4
  %2 = ptrtoint ptr %fragstolen to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %fragstolen, align 1
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 12
  %3 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %skb_cloned.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

skb_cloned.exit:                                  ; preds = %entry
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 17
  %4 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i.i, align 4
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %6 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %7, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i.not, label %skb_cloned.exit.if.end_crit_edge, label %skb_cloned.exit.cleanup156_crit_edge

skb_cloned.exit.cleanup156_crit_edge:             ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

skb_cloned.exit.if.end_crit_edge:                 ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end:                                           ; preds = %skb_cloned.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %8 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load = load i8, ptr %cloned.i, align 2
  %pp_recycle2 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 12
  %9 = ptrtoint ptr %pp_recycle2 to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load3 = load i8, ptr %pp_recycle2, align 2
  %10 = xor i8 %bf.load3, %bf.load
  %11 = and i8 %10, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %cmp.not = icmp eq i8 %11, 0
  br i1 %cmp.not, label %if.end8, label %if.end.cleanup156_crit_edge

if.end.cleanup156_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

if.end8:                                          ; preds = %if.end
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 7
  %12 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.i.not.i = icmp eq i32 %13, 0
  br i1 %tobool.i.not.i, label %cond.false.i, label %if.end8.skb_tailroom.exit_crit_edge

if.end8.skb_tailroom.exit_crit_edge:              ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_tailroom.exit

cond.false.i:                                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 17
  %14 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %end.i, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 16
  %16 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %tail.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %15 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %17 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  br label %skb_tailroom.exit

skb_tailroom.exit:                                ; preds = %cond.false.i, %if.end8.skb_tailroom.exit_crit_edge
  %cond.i = phi i32 [ %sub.ptr.sub.i, %cond.false.i ], [ 0, %if.end8.skb_tailroom.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %cond.i)
  %cmp10.not = icmp sgt i32 %1, %cond.i
  br i1 %cmp10.not, label %if.end29, label %if.then12

if.then12:                                        ; preds = %skb_tailroom.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool13.not = icmp eq i32 %1, 0
  br i1 %tobool13.not, label %if.then12.cleanup156.sink.split_crit_edge, label %do.body

if.then12.cleanup156.sink.split_crit_edge:        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156.sink.split

do.body:                                          ; preds = %if.then12
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 16
  %18 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tail.i.i, align 8
  br i1 %tobool.i.not.i, label %do.end8.i, label %do.body3.i, !prof !374

do.body3.i:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1984, 0\0A.popsection", ""() #20, !srcloc !412
  unreachable

do.end8.i:                                        ; preds = %do.body
  %add.ptr.i = getelementptr i8, ptr %19, i32 %1
  %20 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %add.ptr.i, ptr %tail.i.i, align 8
  %len9.i = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 6
  %21 = ptrtoint ptr %len9.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %len9.i, align 4
  %add.i = add i32 %22, %1
  store i32 %add.i, ptr %len9.i, align 4
  %end.i215 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 17
  %23 = ptrtoint ptr %end.i215 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %end.i215, align 4
  %cmp.i216 = icmp ugt ptr %add.ptr.i, %24
  br i1 %cmp.i216, label %if.then17.i, label %skb_put.exit, !prof !373

if.then17.i:                                      ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  %25 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_over_panic(ptr noundef %to, i32 noundef %1, ptr noundef %25) #20
  unreachable

skb_put.exit:                                     ; preds = %do.end8.i
  %call16 = tail call i32 @skb_copy_bits(ptr noundef %from, i32 noundef 0, ptr noundef %19, i32 noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %skb_put.exit.cleanup156.sink.split_crit_edge, label %do.body21, !prof !374

skb_put.exit.cleanup156.sink.split_crit_edge:     ; preds = %skb_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156.sink.split

do.body21:                                        ; preds = %skb_put.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5256, 0\0A.popsection", ""() #20, !srcloc !450
  unreachable

if.end29:                                         ; preds = %skb_tailroom.exit
  %end.i217 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 17
  %26 = ptrtoint ptr %end.i217 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %end.i217, align 4
  %end.i218 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 17
  %28 = ptrtoint ptr %end.i218 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %end.i218, align 4
  %frag_list = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 6
  %30 = ptrtoint ptr %frag_list to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %frag_list, align 8
  %tobool32.not = icmp eq ptr %31, null
  br i1 %tobool32.not, label %lor.lhs.false, label %if.end29.cleanup156_crit_edge

if.end29.cleanup156_crit_edge:                    ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

lor.lhs.false:                                    ; preds = %if.end29
  %frag_list33 = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 6
  %32 = ptrtoint ptr %frag_list33 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %frag_list33, align 8
  %tobool34.not = icmp eq ptr %33, null
  br i1 %tobool34.not, label %if.end36, label %lor.lhs.false.cleanup156_crit_edge

lor.lhs.false.cleanup156_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

if.end36:                                         ; preds = %lor.lhs.false
  %tobool.not.i219 = icmp eq ptr %to, null
  br i1 %tobool.not.i219, label %if.end36.lor.lhs.false39_crit_edge, label %land.rhs.i221

if.end36.lor.lhs.false39_crit_edge:               ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false39

land.rhs.i221:                                    ; preds = %if.end36
  %34 = ptrtoint ptr %27 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %27, align 8
  %36 = and i8 %35, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool1.not.i = icmp eq i8 %36, 0
  br i1 %tobool1.not.i, label %land.rhs.i221.lor.lhs.false39_crit_edge, label %skb_zcopy.exit

land.rhs.i221.lor.lhs.false39_crit_edge:          ; preds = %land.rhs.i221
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false39

skb_zcopy.exit:                                   ; preds = %land.rhs.i221
  %destructor_arg.i = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 11
  %37 = ptrtoint ptr %destructor_arg.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %destructor_arg.i, align 4
  %tobool38.not = icmp eq ptr %38, null
  br i1 %tobool38.not, label %skb_zcopy.exit.lor.lhs.false39_crit_edge, label %skb_zcopy.exit.cleanup156_crit_edge

skb_zcopy.exit.cleanup156_crit_edge:              ; preds = %skb_zcopy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

skb_zcopy.exit.lor.lhs.false39_crit_edge:         ; preds = %skb_zcopy.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %skb_zcopy.exit.lor.lhs.false39_crit_edge, %land.rhs.i221.lor.lhs.false39_crit_edge, %if.end36.lor.lhs.false39_crit_edge
  %tobool.not.i223 = icmp eq ptr %from, null
  br i1 %tobool.not.i223, label %lor.lhs.false39.if.end43_crit_edge, label %land.rhs.i226

lor.lhs.false39.if.end43_crit_edge:               ; preds = %lor.lhs.false39
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

land.rhs.i226:                                    ; preds = %lor.lhs.false39
  %39 = ptrtoint ptr %29 to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %29, align 8
  %41 = and i8 %40, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %41)
  %tobool1.not.i225 = icmp eq i8 %41, 0
  br i1 %tobool1.not.i225, label %land.rhs.i226.if.end43_crit_edge, label %skb_zcopy.exit230

land.rhs.i226.if.end43_crit_edge:                 ; preds = %land.rhs.i226
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

skb_zcopy.exit230:                                ; preds = %land.rhs.i226
  %destructor_arg.i227 = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 11
  %42 = ptrtoint ptr %destructor_arg.i227 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %destructor_arg.i227, align 4
  %tobool41.not = icmp eq ptr %43, null
  br i1 %tobool41.not, label %skb_zcopy.exit230.if.end43_crit_edge, label %skb_zcopy.exit230.cleanup156_crit_edge

skb_zcopy.exit230.cleanup156_crit_edge:           ; preds = %skb_zcopy.exit230
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

skb_zcopy.exit230.if.end43_crit_edge:             ; preds = %skb_zcopy.exit230
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43

if.end43:                                         ; preds = %skb_zcopy.exit230.if.end43_crit_edge, %land.rhs.i226.if.end43_crit_edge, %lor.lhs.false39.if.end43_crit_edge
  %44 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %len1, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 7
  %46 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %45, i32 %47)
  %cmp45.not = icmp eq i32 %45, %47
  %nr_frags64 = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 2
  %48 = ptrtoint ptr %nr_frags64 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %nr_frags64, align 2
  %conv65 = zext i8 %49 to i32
  %nr_frags66 = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 2
  %50 = ptrtoint ptr %nr_frags66 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %nr_frags66, align 2
  %conv67 = zext i8 %51 to i32
  %add68 = add nuw nsw i32 %conv67, %conv65
  br i1 %cmp45.not, label %if.else, label %if.then47

if.then47:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %add68)
  %cmp51 = icmp ugt i32 %add68, 16
  br i1 %cmp51, label %if.then47.cleanup156_crit_edge, label %if.end54

if.then47.cleanup156_crit_edge:                   ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

if.end54:                                         ; preds = %if.then47
  %call55 = tail call fastcc zeroext i1 @skb_head_is_locked(ptr noundef %from)
  br i1 %call55, label %if.end54.cleanup156_crit_edge, label %if.end57

if.end54.cleanup156_crit_edge:                    ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

if.end57:                                         ; preds = %if.end54
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 20
  %52 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %truesize, align 8
  %sub = add i32 %53, -256
  %head = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 18
  %54 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %head, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %56 = load ptr, ptr @mem_map, align 4
  %57 = ptrtoint ptr %55 to i32
  %sub.i231 = add i32 %57, 1073741824
  %shr.i = lshr i32 %sub.i231, 12
  %58 = getelementptr %struct.page, ptr %56, i32 %shr.i, i32 1
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %58, align 4
  %and.i.i = and i32 %60, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !374

if.then.i.i:                                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %60, -1
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i232 = getelementptr %struct.page, ptr %56, i32 %shr.i
  %61 = ptrtoint ptr %add.ptr.i232 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %61, %if.end.i.i ]
  %62 = inttoptr i32 %retval.0.i.i to ptr
  %data = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 19
  %63 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %data, align 4
  %call59 = tail call ptr @page_address(ptr noundef %62) #20
  %sub.ptr.lhs.cast = ptrtoint ptr %64 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %call59 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %65 = ptrtoint ptr %nr_frags64 to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %nr_frags64, align 2
  %conv61 = zext i8 %66 to i32
  %67 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %len1, align 4
  %69 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %data_len.i, align 8
  %sub.i235 = sub i32 %68, %70
  tail call fastcc void @skb_fill_page_desc(ptr noundef %to, i32 noundef %conv61, ptr noundef %62, i32 noundef %sub.ptr.sub, i32 noundef %sub.i235)
  %71 = ptrtoint ptr %fragstolen to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 1, ptr %fragstolen, align 1
  br label %if.end78

if.else:                                          ; preds = %if.end43
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %add68)
  %cmp69 = icmp ugt i32 %add68, 17
  br i1 %cmp69, label %if.else.cleanup156_crit_edge, label %if.end72

if.else.cleanup156_crit_edge:                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup156

if.end72:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %truesize73 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 20
  %72 = ptrtoint ptr %truesize73 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %truesize73, align 8
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 18
  %74 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i237 = ptrtoint ptr %29 to i32
  %sub.ptr.rhs.cast.i238 = ptrtoint ptr %75 to i32
  %sub.ptr.sub.i239.neg = sub i32 -512, %sub.ptr.lhs.cast.i237
  %add76.neg = add i32 %sub.ptr.sub.i239.neg, %73
  %sub77 = add i32 %add76.neg, %sub.ptr.rhs.cast.i238
  br label %if.end78

if.end78:                                         ; preds = %if.end72, %cleanup
  %delta.1 = phi i32 [ %sub, %cleanup ], [ %sub77, %if.end72 ]
  call void @__sanitizer_cov_trace_cmp4(i32 %delta.1, i32 %1)
  %cmp79 = icmp slt i32 %delta.1, %1
  br i1 %cmp79, label %land.rhs, label %if.end78.if.end121_crit_edge

if.end78.if.end121_crit_edge:                     ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end121

land.rhs:                                         ; preds = %if.end78
  %.b212 = load i1, ptr @skb_try_coalesce.__already_done, align 1
  br i1 %.b212, label %land.rhs.if.end121_crit_edge, label %if.then96, !prof !374

land.rhs.if.end121_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end121

if.then96:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @skb_try_coalesce.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5295, i32 noundef 9, ptr noundef null) #20
  br label %if.end121

if.end121:                                        ; preds = %if.then96, %land.rhs.if.end121_crit_edge, %if.end78.if.end121_crit_edge
  %frags = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 12
  %nr_frags129 = getelementptr inbounds %struct.skb_shared_info, ptr %27, i32 0, i32 2
  %76 = ptrtoint ptr %nr_frags129 to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %nr_frags129, align 2
  %conv130 = zext i8 %77 to i32
  %add.ptr = getelementptr %struct.bio_vec, ptr %frags, i32 %conv130
  %frags131 = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 12
  %nr_frags133 = getelementptr inbounds %struct.skb_shared_info, ptr %29, i32 0, i32 2
  %78 = ptrtoint ptr %nr_frags133 to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %nr_frags133, align 2
  %conv134 = zext i8 %79 to i32
  %mul = mul nuw nsw i32 %conv134, 12
  %80 = call ptr @memcpy(ptr %add.ptr, ptr %frags131, i32 %mul)
  %81 = load i8, ptr %nr_frags133, align 2
  %82 = load i8, ptr %nr_frags129, align 2
  %add139 = add i8 %82, %81
  store i8 %add139, ptr %nr_frags129, align 2
  %call141 = tail call fastcc i32 @skb_cloned(ptr noundef %from)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call141)
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %if.end145.thread, label %if.end145

if.end145.thread:                                 ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #22
  %83 = ptrtoint ptr %nr_frags133 to i32
  call void @__asan_store1_noabort(i32 %83)
  store i8 0, ptr %nr_frags133, align 2
  br label %for.end

if.end145:                                        ; preds = %if.end121
  %84 = ptrtoint ptr %nr_frags133 to i32
  call void @__asan_load1_noabort(i32 %84)
  %.pr = load i8, ptr %nr_frags133, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %cmp148248.not = icmp eq i8 %.pr, 0
  br i1 %cmp148248.not, label %if.end145.for.end_crit_edge, label %if.end145.for.body_crit_edge

if.end145.for.body_crit_edge:                     ; preds = %if.end145
  br label %for.body

if.end145.for.end_crit_edge:                      ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %__skb_frag_ref.exit.for.body_crit_edge, %if.end145.for.body_crit_edge
  %i.0249 = phi i32 [ %inc, %__skb_frag_ref.exit.for.body_crit_edge ], [ 0, %if.end145.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.skb_shared_info, ptr %29, i32 0, i32 12, i32 %i.0249
  %85 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx, align 4
  %87 = getelementptr inbounds %struct.page, ptr %86, i32 0, i32 1
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %87, align 4
  %and.i.i.i = and i32 %89, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !374

if.then.i.i.i:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i = add i32 %89, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %90 = ptrtoint ptr %86 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %90, %if.end.i.i.i ]
  %91 = inttoptr i32 %retval.0.i.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %91, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  %92 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  %add.i.i.i = add i32 %93, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i.i)
  %cmp.i.i.i = icmp ult i32 %add.i.i.i, 128
  br i1 %cmp.i.i.i, label %if.then.i1.i.i, label %do.end5.i.i.i, !prof !373

if.then.i1.i.i:                                   ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %94 = inttoptr i32 %retval.0.i.i.i to ptr
  tail call void @dump_page(ptr noundef %94, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i.i:                                    ; preds = %_compound_head.exit.i.i
  %call.i.i.i.i9.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %95 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@skb_try_coalesce, %if.then.i.i.i.i.i)) #20
          to label %__skb_frag_ref.exit [label %if.then.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %91, i32 noundef 1) #20
  br label %__skb_frag_ref.exit

__skb_frag_ref.exit:                              ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i
  %inc = add nuw nsw i32 %i.0249, 1
  %96 = ptrtoint ptr %nr_frags133 to i32
  call void @__asan_load1_noabort(i32 %96)
  %97 = load i8, ptr %nr_frags133, align 2
  %conv147 = zext i8 %97 to i32
  %cmp148 = icmp ult i32 %inc, %conv147
  br i1 %cmp148, label %__skb_frag_ref.exit.for.body_crit_edge, label %__skb_frag_ref.exit.for.end_crit_edge

__skb_frag_ref.exit.for.end_crit_edge:            ; preds = %__skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

__skb_frag_ref.exit.for.body_crit_edge:           ; preds = %__skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %__skb_frag_ref.exit.for.end_crit_edge, %if.end145.for.end_crit_edge, %if.end145.thread
  %truesize151 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 20
  %98 = ptrtoint ptr %truesize151 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %truesize151, align 8
  %add152 = add i32 %99, %delta.1
  store i32 %add152, ptr %truesize151, align 8
  %len153 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 6
  %100 = ptrtoint ptr %len153 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %len153, align 4
  %add154 = add i32 %101, %1
  store i32 %add154, ptr %len153, align 4
  %102 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %data_len.i.i, align 8
  %add155 = add i32 %103, %1
  store i32 %add155, ptr %data_len.i.i, align 8
  br label %cleanup156.sink.split

cleanup156.sink.split:                            ; preds = %for.end, %skb_put.exit.cleanup156.sink.split_crit_edge, %if.then12.cleanup156.sink.split_crit_edge
  %delta.1.sink = phi i32 [ %delta.1, %for.end ], [ 0, %skb_put.exit.cleanup156.sink.split_crit_edge ], [ 0, %if.then12.cleanup156.sink.split_crit_edge ]
  %104 = ptrtoint ptr %delta_truesize to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %delta.1.sink, ptr %delta_truesize, align 4
  br label %cleanup156

cleanup156:                                       ; preds = %cleanup156.sink.split, %if.else.cleanup156_crit_edge, %if.end54.cleanup156_crit_edge, %if.then47.cleanup156_crit_edge, %skb_zcopy.exit230.cleanup156_crit_edge, %skb_zcopy.exit.cleanup156_crit_edge, %lor.lhs.false.cleanup156_crit_edge, %if.end29.cleanup156_crit_edge, %if.end.cleanup156_crit_edge, %skb_cloned.exit.cleanup156_crit_edge
  %retval.1 = phi i1 [ false, %skb_cloned.exit.cleanup156_crit_edge ], [ false, %if.end.cleanup156_crit_edge ], [ false, %lor.lhs.false.cleanup156_crit_edge ], [ false, %if.end29.cleanup156_crit_edge ], [ false, %skb_zcopy.exit230.cleanup156_crit_edge ], [ false, %skb_zcopy.exit.cleanup156_crit_edge ], [ false, %if.else.cleanup156_crit_edge ], [ false, %if.then47.cleanup156_crit_edge ], [ false, %if.end54.cleanup156_crit_edge ], [ true, %cleanup156.sink.split ]
  ret i1 %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @skb_head_is_locked(ptr nocapture noundef readonly %skb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %head_frag = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %0 = ptrtoint ptr %head_frag to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %head_frag, align 2
  %1 = and i8 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.lor.end_crit_edge, label %lor.rhs

entry.lor.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.end

lor.rhs:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not.i = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not.i, label %lor.rhs.lor.end_crit_edge, label %land.rhs.i

lor.rhs.lor.end_crit_edge:                        ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.end

land.rhs.i:                                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %2 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %end.i.i, align 4
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %3, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %4 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %5, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i = icmp ne i32 %and.i, 1
  br label %lor.end

lor.end:                                          ; preds = %land.rhs.i, %lor.rhs.lor.end_crit_edge, %entry.lor.end_crit_edge
  %6 = phi i1 [ true, %entry.lor.end_crit_edge ], [ false, %lor.rhs.lor.end_crit_edge ], [ %cmp.i, %land.rhs.i ]
  ret i1 %6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_scrub_packet(ptr nocapture noundef %skb, i1 noundef zeroext %xnet) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %pkt_type = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %0 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %pkt_type, align 8
  %skb_iif = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 7
  %1 = ptrtoint ptr %skb_iif to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %skb_iif, align 8
  %bf.clear2 = and i16 %bf.load, 4095
  store i16 %bf.clear2, ptr %pkt_type, align 8
  %2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %2, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %entry.skb_dst_drop.exit_crit_edge, label %if.then.i

entry.skb_dst_drop.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_dst_drop.exit

if.then.i:                                        ; preds = %entry
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.i.refdst_drop.exit.i_crit_edge

if.then.i.refdst_drop.exit.i_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refdst_drop.exit.i

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %and1.i.i = and i32 %4, -2
  %5 = inttoptr i32 %and1.i.i to ptr
  tail call void @dst_release(ptr noundef %5) #20
  br label %refdst_drop.exit.i

refdst_drop.exit.i:                               ; preds = %if.then.i.i, %if.then.i.refdst_drop.exit.i_crit_edge
  %6 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %2, align 8
  br label %skb_dst_drop.exit

skb_dst_drop.exit:                                ; preds = %refdst_drop.exit.i, %entry.skb_dst_drop.exit_crit_edge
  %active_extensions.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 13
  %7 = ptrtoint ptr %active_extensions.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %active_extensions.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i21 = icmp eq i8 %8, 0
  br i1 %tobool.not.i21, label %skb_dst_drop.exit.skb_ext_reset.exit_crit_edge, label %if.then.i22, !prof !374

skb_dst_drop.exit.skb_ext_reset.exit_crit_edge:   ; preds = %skb_dst_drop.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_ext_reset.exit

if.then.i22:                                      ; preds = %skb_dst_drop.exit
  call void @__sanitizer_cov_trace_pc() #22
  %extensions.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %9 = ptrtoint ptr %extensions.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %extensions.i, align 8
  tail call void @__skb_ext_put(ptr noundef %10) #20
  %11 = ptrtoint ptr %active_extensions.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %active_extensions.i, align 1
  br label %skb_ext_reset.exit

skb_ext_reset.exit:                               ; preds = %if.then.i22, %skb_dst_drop.exit.skb_ext_reset.exit_crit_edge
  %_nfct.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 5
  %12 = ptrtoint ptr %_nfct.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %_nfct.i.i, align 8
  %and.i.i23 = and i32 %13, -8
  %14 = inttoptr i32 %and.i.i23 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i23)
  %tobool.not.i.i24 = icmp eq i32 %and.i.i23, 0
  br i1 %tobool.not.i.i24, label %skb_ext_reset.exit.nf_reset_ct.exit_crit_edge, label %land.lhs.true.i.i

skb_ext_reset.exit.nf_reset_ct.exit_crit_edge:    ; preds = %skb_ext_reset.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %nf_reset_ct.exit

land.lhs.true.i.i:                                ; preds = %skb_ext_reset.exit
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %14, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr nonnull %14, i32 1, i32 3, i32 1) #20
  %15 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %14, ptr nonnull %14, i32 1, ptr nonnull elementtype(i32) %14) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %15, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i25, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.nf_reset_ct.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !374

if.end5.i.i.i.i.i.nf_reset_ct.exit_crit_edge:     ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %nf_reset_ct.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef nonnull %14, i32 noundef 3) #20
  br label %nf_reset_ct.exit

if.then.i.i25:                                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  tail call void @nf_conntrack_destroy(ptr noundef nonnull %14) #20
  br label %nf_reset_ct.exit

nf_reset_ct.exit:                                 ; preds = %if.then.i.i25, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.nf_reset_ct.exit_crit_edge, %skb_ext_reset.exit.nf_reset_ct.exit_crit_edge
  %16 = ptrtoint ptr %_nfct.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %_nfct.i.i, align 8
  %17 = ptrtoint ptr %pkt_type to i32
  call void @__asan_load2_noabort(i32 %17)
  %bf.load.i = load i16, ptr %pkt_type, align 8
  %bf.clear.i = and i16 %bf.load.i, -2049
  store i16 %bf.clear.i, ptr %pkt_type, align 8
  %offload_fwd_mark = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %18 = ptrtoint ptr %offload_fwd_mark to i32
  call void @__asan_loadN_noabort(i32 %18, i32 4)
  %bf.load4 = load i32, ptr %offload_fwd_mark, align 2
  %bf.clear8 = and i32 %bf.load4, -1572865
  store i32 %bf.clear8, ptr %offload_fwd_mark, align 2
  br i1 %xnet, label %if.end, label %nf_reset_ct.exit.return_crit_edge

nf_reset_ct.exit.return_crit_edge:                ; preds = %nf_reset_ct.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %nf_reset_ct.exit
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear.i27 = and i32 %bf.load4, -9961473
  %19 = ptrtoint ptr %offload_fwd_mark to i32
  call void @__asan_storeN_noabort(i32 %19, i32 4)
  store i32 %bf.clear.i27, ptr %offload_fwd_mark, align 2
  %20 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 13
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %20, align 4
  %22 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 2
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 0, ptr %22, align 8
  br label %return

return:                                           ; preds = %if.end, %nf_reset_ct.exit.return_crit_edge
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @skb_gso_validate_network_len(ptr nocapture noundef readonly %skb, i32 noundef %mtu) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %0 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head.i.i, align 8
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %2 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %transport_header.i.i, align 2
  %conv.i.i = zext i16 %3 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %conv.i.i
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %4 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %network_header.i.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %6 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %end.i.i.i, align 4
  %encapsulation.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %8 = ptrtoint ptr %encapsulation.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load.i.i = load i16, ptr %encapsulation.i.i, align 8
  %9 = and i16 %bf.load.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not.i.i = icmp eq i16 %9, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  %inner_transport_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 15
  %10 = ptrtoint ptr %inner_transport_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %inner_transport_header.i.i.i, align 2
  %conv.i.i.i = zext i16 %11 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %1, i32 %conv.i.i.i
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.lhs.cast.i
  %gso_type.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 8
  %12 = ptrtoint ptr %gso_type.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gso_type.i.i, align 8
  %and.i.i = and i32 %13, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool3.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool3.not.i.i, label %if.then.i.i.skb_gso_network_seglen.exit_crit_edge, label %if.then6.i.i, !prof !373

if.then.i.i.skb_gso_network_seglen.exit_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_gso_network_seglen.exit

if.then6.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %doff.i.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i.i, i32 0, i32 4
  %14 = ptrtoint ptr %doff.i.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %bf.load.i.i.i = load i16, ptr %doff.i.i.i, align 4
  %15 = lshr i16 %bf.load.i.i.i, 10
  %16 = and i16 %15, 60
  %mul.i.i.i = zext i16 %16 to i32
  %add.i.i = add i32 %sub.ptr.sub.i.i, %mul.i.i.i
  br label %skb_gso_network_seglen.exit

if.else.i.i:                                      ; preds = %entry
  %gso_type8.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 8
  %17 = ptrtoint ptr %gso_type8.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %gso_type8.i.i, align 8
  %and9.i.i = and i32 %18, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i.i)
  %tobool10.not.i.i = icmp eq i32 %and9.i.i, 0
  br i1 %tobool10.not.i.i, label %if.else19.i.i, label %if.then17.i.i, !prof !373

if.then17.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %doff.i.i.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i, i32 0, i32 4
  %19 = ptrtoint ptr %doff.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %bf.load.i.i.i.i = load i16, ptr %doff.i.i.i.i, align 4
  %20 = lshr i16 %bf.load.i.i.i.i, 10
  %21 = and i16 %20, 60
  %mul.i.i.i.i = zext i16 %21 to i32
  br label %skb_gso_network_seglen.exit

if.else19.i.i:                                    ; preds = %if.else.i.i
  %and.i.i.i = and i32 %18, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.else28.i.i, label %if.else19.i.i.skb_gso_network_seglen.exit_crit_edge, !prof !374

if.else19.i.i.skb_gso_network_seglen.exit_crit_edge: ; preds = %if.else19.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_gso_network_seglen.exit

if.else28.i.i:                                    ; preds = %if.else19.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %and30.i.i = lshr i32 %18, 14
  %22 = and i32 %and30.i.i, 8
  br label %skb_gso_network_seglen.exit

skb_gso_network_seglen.exit:                      ; preds = %if.else28.i.i, %if.else19.i.i.skb_gso_network_seglen.exit_crit_edge, %if.then17.i.i, %if.then6.i.i, %if.then.i.i.skb_gso_network_seglen.exit_crit_edge
  %thlen.0.i.i = phi i32 [ %add.i.i, %if.then6.i.i ], [ %sub.ptr.sub.i.i, %if.then.i.i.skb_gso_network_seglen.exit_crit_edge ], [ %mul.i.i.i.i, %if.then17.i.i ], [ 12, %if.else19.i.i.skb_gso_network_seglen.exit_crit_edge ], [ %22, %if.else28.i.i ]
  %conv.i6.i = zext i16 %5 to i32
  %add.ptr.i7.i = getelementptr i8, ptr %1, i32 %conv.i6.i
  %sub.ptr.rhs.cast.i = ptrtoint ptr %add.ptr.i7.i to i32
  %gso_size.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 4
  %23 = ptrtoint ptr %gso_size.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %gso_size.i.i, align 4
  %conv.i8.i = zext i16 %24 to i32
  %add37.i.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.sub.i = add i32 %add37.i.i, %thlen.0.i.i
  %add.i = add i32 %sub.ptr.sub.i, %conv.i8.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %24)
  %cmp.not.i = icmp eq i16 %24, -1
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %skb_gso_network_seglen.exit
  call void @__sanitizer_cov_trace_pc() #22
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %mtu)
  %cmp2.i = icmp ule i32 %add.i, %mtu
  br label %skb_gso_size_check.exit

if.end.i:                                         ; preds = %skb_gso_network_seglen.exit
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 6
  %sub.i.i = add i32 %add.i, -65535
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end.i
  %iter.0.in.i = phi ptr [ %frag_list.i, %if.end.i ], [ %iter.0.i, %for.body.i.for.cond.i_crit_edge ]
  %25 = ptrtoint ptr %iter.0.in.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %iter.0.i = load ptr, ptr %iter.0.in.i, align 8
  %tobool.not.i = icmp eq ptr %iter.0.i, null
  br i1 %tobool.not.i, label %for.cond.i.skb_gso_size_check.exit_crit_edge, label %for.body.i

for.cond.i.skb_gso_size_check.exit_crit_edge:     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_gso_size_check.exit

for.body.i:                                       ; preds = %for.cond.i
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %iter.0.i, i32 0, i32 6
  %26 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %iter.0.i, i32 0, i32 7
  %28 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %data_len.i.i, align 8
  %sub.i = add i32 %sub.i.i, %27
  %add.i3 = sub i32 %sub.i, %29
  %cmp6.i = icmp ugt i32 %add.i3, %mtu
  br i1 %cmp6.i, label %for.body.i.skb_gso_size_check.exit_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i

for.body.i.skb_gso_size_check.exit_crit_edge:     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_gso_size_check.exit

skb_gso_size_check.exit:                          ; preds = %for.body.i.skb_gso_size_check.exit_crit_edge, %for.cond.i.skb_gso_size_check.exit_crit_edge, %if.then.i
  %retval.0.i = phi i1 [ %cmp2.i, %if.then.i ], [ %tobool.not.i, %for.body.i.skb_gso_size_check.exit_crit_edge ], [ %tobool.not.i, %for.cond.i.skb_gso_size_check.exit_crit_edge ]
  ret i1 %retval.0.i
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @skb_gso_validate_mac_len(ptr nocapture noundef readonly %skb, i32 noundef %len) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %0 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head.i.i, align 8
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %2 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %transport_header.i.i, align 2
  %conv.i.i = zext i16 %3 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %conv.i.i
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %4 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %mac_header.i.i, align 2
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %6 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %end.i.i.i, align 4
  %encapsulation.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %8 = ptrtoint ptr %encapsulation.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load.i.i = load i16, ptr %encapsulation.i.i, align 8
  %9 = and i16 %bf.load.i.i, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not.i.i = icmp eq i16 %9, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  %inner_transport_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 15
  %10 = ptrtoint ptr %inner_transport_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %inner_transport_header.i.i.i, align 2
  %conv.i.i.i = zext i16 %11 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %1, i32 %conv.i.i.i
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %add.ptr.i.i.i to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.lhs.cast.i
  %gso_type.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 8
  %12 = ptrtoint ptr %gso_type.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gso_type.i.i, align 8
  %and.i.i = and i32 %13, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool3.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool3.not.i.i, label %if.then.i.i.skb_gso_mac_seglen.exit_crit_edge, label %if.then6.i.i, !prof !373

if.then.i.i.skb_gso_mac_seglen.exit_crit_edge:    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_gso_mac_seglen.exit

if.then6.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %doff.i.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i.i, i32 0, i32 4
  %14 = ptrtoint ptr %doff.i.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %bf.load.i.i.i = load i16, ptr %doff.i.i.i, align 4
  %15 = lshr i16 %bf.load.i.i.i, 10
  %16 = and i16 %15, 60
  %mul.i.i.i = zext i16 %16 to i32
  %add.i.i = add i32 %sub.ptr.sub.i.i, %mul.i.i.i
  br label %skb_gso_mac_seglen.exit

if.else.i.i:                                      ; preds = %entry
  %gso_type8.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 8
  %17 = ptrtoint ptr %gso_type8.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %gso_type8.i.i, align 8
  %and9.i.i = and i32 %18, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i.i)
  %tobool10.not.i.i = icmp eq i32 %and9.i.i, 0
  br i1 %tobool10.not.i.i, label %if.else19.i.i, label %if.then17.i.i, !prof !373

if.then17.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %doff.i.i.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i, i32 0, i32 4
  %19 = ptrtoint ptr %doff.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %bf.load.i.i.i.i = load i16, ptr %doff.i.i.i.i, align 4
  %20 = lshr i16 %bf.load.i.i.i.i, 10
  %21 = and i16 %20, 60
  %mul.i.i.i.i = zext i16 %21 to i32
  br label %skb_gso_mac_seglen.exit

if.else19.i.i:                                    ; preds = %if.else.i.i
  %and.i.i.i = and i32 %18, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.else28.i.i, label %if.else19.i.i.skb_gso_mac_seglen.exit_crit_edge, !prof !374

if.else19.i.i.skb_gso_mac_seglen.exit_crit_edge:  ; preds = %if.else19.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_gso_mac_seglen.exit

if.else28.i.i:                                    ; preds = %if.else19.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %and30.i.i = lshr i32 %18, 14
  %22 = and i32 %and30.i.i, 8
  br label %skb_gso_mac_seglen.exit

skb_gso_mac_seglen.exit:                          ; preds = %if.else28.i.i, %if.else19.i.i.skb_gso_mac_seglen.exit_crit_edge, %if.then17.i.i, %if.then6.i.i, %if.then.i.i.skb_gso_mac_seglen.exit_crit_edge
  %thlen.0.i.i = phi i32 [ %add.i.i, %if.then6.i.i ], [ %sub.ptr.sub.i.i, %if.then.i.i.skb_gso_mac_seglen.exit_crit_edge ], [ %mul.i.i.i.i, %if.then17.i.i ], [ 12, %if.else19.i.i.skb_gso_mac_seglen.exit_crit_edge ], [ %22, %if.else28.i.i ]
  %conv.i6.i = zext i16 %5 to i32
  %add.ptr.i7.i = getelementptr i8, ptr %1, i32 %conv.i6.i
  %sub.ptr.rhs.cast.i = ptrtoint ptr %add.ptr.i7.i to i32
  %gso_size.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 4
  %23 = ptrtoint ptr %gso_size.i.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %gso_size.i.i, align 4
  %conv.i8.i = zext i16 %24 to i32
  %add37.i.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.sub.i = add i32 %add37.i.i, %thlen.0.i.i
  %add.i = add i32 %sub.ptr.sub.i, %conv.i8.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %24)
  %cmp.not.i = icmp eq i16 %24, -1
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %skb_gso_mac_seglen.exit
  call void @__sanitizer_cov_trace_pc() #22
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %len)
  %cmp2.i = icmp ule i32 %add.i, %len
  br label %skb_gso_size_check.exit

if.end.i:                                         ; preds = %skb_gso_mac_seglen.exit
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %7, i32 0, i32 6
  %sub.i.i = add i32 %add.i, -65535
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end.i
  %iter.0.in.i = phi ptr [ %frag_list.i, %if.end.i ], [ %iter.0.i, %for.body.i.for.cond.i_crit_edge ]
  %25 = ptrtoint ptr %iter.0.in.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %iter.0.i = load ptr, ptr %iter.0.in.i, align 8
  %tobool.not.i = icmp eq ptr %iter.0.i, null
  br i1 %tobool.not.i, label %for.cond.i.skb_gso_size_check.exit_crit_edge, label %for.body.i

for.cond.i.skb_gso_size_check.exit_crit_edge:     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_gso_size_check.exit

for.body.i:                                       ; preds = %for.cond.i
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %iter.0.i, i32 0, i32 6
  %26 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %iter.0.i, i32 0, i32 7
  %28 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %data_len.i.i, align 8
  %sub.i = add i32 %sub.i.i, %27
  %add.i3 = sub i32 %sub.i, %29
  %cmp6.i = icmp ugt i32 %add.i3, %len
  br i1 %cmp6.i, label %for.body.i.skb_gso_size_check.exit_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i

for.body.i.skb_gso_size_check.exit_crit_edge:     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_gso_size_check.exit

skb_gso_size_check.exit:                          ; preds = %for.body.i.skb_gso_size_check.exit_crit_edge, %for.cond.i.skb_gso_size_check.exit_crit_edge, %if.then.i
  %retval.0.i = phi i1 [ %cmp2.i, %if.then.i ], [ %tobool.not.i, %for.body.i.skb_gso_size_check.exit_crit_edge ], [ %tobool.not.i, %for.cond.i.skb_gso_size_check.exit_crit_edge ]
  ret i1 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_vlan_untag(ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %0 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load)
  %tobool.not = icmp sgt i32 %bf.load, -1
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge, !prof !374

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %users.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 21
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i.i, i32 noundef 4) #20
  %1 = ptrtoint ptr %users.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %users.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %cmp.i.not.i = icmp eq i32 %2, 1
  br i1 %cmp.i.not.i, label %skb_share_check.exit, label %if.then6.i

if.then6.i:                                       ; preds = %if.end
  %call7.i = tail call ptr @skb_clone(ptr noundef %skb, i32 noundef 2592) #20
  %tobool8.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool8.not.i, label %skb_share_check.exit.thread, label %skb_share_check.exit.thread96, !prof !373

skb_share_check.exit.thread96:                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @consume_skb(ptr noundef %skb) #20
  br label %if.end13

skb_share_check.exit.thread:                      ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef %skb) #20
  br label %err_free

skb_share_check.exit:                             ; preds = %if.end
  %tobool3.not = icmp eq ptr %skb, null
  br i1 %tobool3.not, label %skb_share_check.exit.err_free_crit_edge, label %skb_share_check.exit.if.end13_crit_edge, !prof !373

skb_share_check.exit.if.end13_crit_edge:          ; preds = %skb_share_check.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

skb_share_check.exit.err_free_crit_edge:          ; preds = %skb_share_check.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_free

if.end13:                                         ; preds = %skb_share_check.exit.if.end13_crit_edge, %skb_share_check.exit.thread96
  %skb.addr.0.i99 = phi ptr [ %call7.i, %skb_share_check.exit.thread96 ], [ %skb, %skb_share_check.exit.if.end13_crit_edge ]
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 6
  %3 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 7
  %5 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %4, %6
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %sub.i.i)
  %cmp.not.i = icmp ult i32 %sub.i.i, 6
  br i1 %cmp.not.i, label %if.end.i, label %if.end13.if.end24_crit_edge, !prof !373

if.end13.if.end24_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end.i:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %4)
  %cmp3.i = icmp ult i32 %4, 6
  br i1 %cmp3.i, label %if.end.i.err_free_crit_edge, label %pskb_may_pull.exit, !prof !373

if.end.i.err_free_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_free

pskb_may_pull.exit:                               ; preds = %if.end.i
  %sub.i = sub nuw nsw i32 6, %sub.i.i
  %call13.i = tail call ptr @__pskb_pull_tail(ptr noundef nonnull %skb.addr.0.i99, i32 noundef %sub.i) #20
  %cmp14.i.not = icmp eq ptr %call13.i, null
  br i1 %cmp14.i.not, label %pskb_may_pull.exit.err_free_crit_edge, label %pskb_may_pull.exit.if.end24_crit_edge, !prof !373

pskb_may_pull.exit.if.end24_crit_edge:            ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

pskb_may_pull.exit.err_free_crit_edge:            ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_free

if.end24:                                         ; preds = %pskb_may_pull.exit.if.end24_crit_edge, %if.end13.if.end24_crit_edge
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 19
  %7 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %data, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %8, align 2
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 18
  %11 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %protocol, align 8
  %vlan_proto1.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 9
  %13 = ptrtoint ptr %vlan_proto1.i to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %12, ptr %vlan_proto1.i, align 8
  %vlan_tci2.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 10
  %14 = ptrtoint ptr %vlan_tci2.i to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %10, ptr %vlan_tci2.i, align 2
  %vlan_present.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 3
  %15 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 4)
  %bf.load.i = load i32, ptr %vlan_present.i, align 2
  %bf.set.i = or i32 %bf.load.i, -2147483648
  store i32 %bf.set.i, ptr %vlan_present.i, align 2
  %16 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %len.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %17)
  %cmp.i = icmp ult i32 %17, 4
  br i1 %cmp.i, label %do.body4.i, label %do.end9.i, !prof !373

do.body4.i:                                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3838, 0\0A.popsection", ""() #20, !srcloc !436
  unreachable

do.end9.i:                                        ; preds = %if.end24
  %sub.i.i60 = add i32 %17, -4
  %18 = ptrtoint ptr %len.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %sub.i.i60, ptr %len.i.i, align 4
  %19 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i60, i32 %20)
  %cmp.i.i = icmp ult i32 %sub.i.i60, %20
  br i1 %cmp.i.i, label %do.body4.i.i, label %__skb_pull.exit.i, !prof !373

do.body4.i.i:                                     ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #20, !srcloc !422
  unreachable

__skb_pull.exit.i:                                ; preds = %do.end9.i
  %add.ptr.i.i = getelementptr i8, ptr %8, i32 4
  %21 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %add.ptr.i.i, ptr %data, align 4
  %ip_summed.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15
  %22 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %bf.load.i.i = load i16, ptr %ip_summed.i.i, align 8
  %bf.lshr.i.i = lshr i16 %bf.load.i.i, 9
  %trunc.i.i = trunc i16 %bf.lshr.i.i to i2
  %23 = zext i2 %trunc.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.60)
  switch i2 %trunc.i.i, label %__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge [
    i2 -2, label %if.then.i.i
    i2 -1, label %land.lhs.true.i.i
  ]

__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge:  ; preds = %__skb_pull.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_pull_rcsum.exit

if.then.i.i:                                      ; preds = %__skb_pull.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %24 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 5
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 8
  %sub.i.i.i = sub i32 0, %26
  %call2.i.i = tail call i32 @csum_partial(ptr noundef %8, i32 noundef 4, i32 noundef %sub.i.i.i) #20
  %sub.i25.i.i = sub i32 0, %call2.i.i
  %27 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sub.i25.i.i, ptr %24, align 8
  br label %skb_pull_rcsum.exit

land.lhs.true.i.i:                                ; preds = %__skb_pull.exit.i
  %28 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 5
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %28, align 8
  %conv.i.i.i = zext i16 %30 to i32
  %head.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 18
  %31 = ptrtoint ptr %head.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %head.i.i.i.i, align 8
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %32 to i32
  %sub.ptr.sub.i.neg.i.i.i = sub i32 %conv.i.i.i, %sub.ptr.lhs.cast.i.i.i.i
  %sub.i26.i.i = add i32 %sub.ptr.sub.i.neg.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i26.i.i)
  %cmp13.i.i = icmp slt i32 %sub.i26.i.i, 0
  br i1 %cmp13.i.i, label %if.then15.i.i, label %land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge

land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge:  ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_pull_rcsum.exit

if.then15.i.i:                                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear18.i.i = and i16 %bf.load.i.i, -1537
  %33 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %bf.clear18.i.i, ptr %ip_summed.i.i, align 8
  br label %skb_pull_rcsum.exit

skb_pull_rcsum.exit:                              ; preds = %if.then15.i.i, %land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge, %if.then.i.i, %__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge
  %h_vlan_encapsulated_proto.i = getelementptr inbounds %struct.vlan_hdr, ptr %8, i32 0, i32 1
  %34 = ptrtoint ptr %h_vlan_encapsulated_proto.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %h_vlan_encapsulated_proto.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1535, i16 %35)
  %cmp.i.i62 = icmp ugt i16 %35, 1535
  br i1 %cmp.i.i62, label %skb_pull_rcsum.exit.vlan_set_encap_proto.exit_crit_edge, label %if.end.i64

skb_pull_rcsum.exit.vlan_set_encap_proto.exit_crit_edge: ; preds = %skb_pull_rcsum.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %vlan_set_encap_proto.exit

if.end.i64:                                       ; preds = %skb_pull_rcsum.exit
  call void @__sanitizer_cov_trace_pc() #22
  %36 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %add.ptr.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %37)
  %cmp.i63 = icmp eq i16 %37, -1
  %. = select i1 %cmp.i63, i16 1, i16 4
  br label %vlan_set_encap_proto.exit

vlan_set_encap_proto.exit:                        ; preds = %if.end.i64, %skb_pull_rcsum.exit.vlan_set_encap_proto.exit_crit_edge
  %.sink = phi i16 [ %35, %skb_pull_rcsum.exit.vlan_set_encap_proto.exit_crit_edge ], [ %., %if.end.i64 ]
  %38 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %.sink, ptr %protocol, align 8
  %39 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %data, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 18
  %41 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %40 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %42 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %cloned.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 12
  %43 = ptrtoint ptr %cloned.i.i.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %bf.load.i.i.i = load i8, ptr %cloned.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i.i)
  %tobool.not.i.i.i = icmp sgt i8 %bf.load.i.i.i, -1
  br i1 %tobool.not.i.i.i, label %vlan_set_encap_proto.exit.skb_cloned.exit.i.i_crit_edge, label %land.rhs.i.i.i

vlan_set_encap_proto.exit.skb_cloned.exit.i.i_crit_edge: ; preds = %vlan_set_encap_proto.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_cloned.exit.i.i

land.rhs.i.i.i:                                   ; preds = %vlan_set_encap_proto.exit
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 17
  %44 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %end.i.i.i.i, align 4
  %dataref.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %45, i32 0, i32 10
  %call.i.i.i.i.i66 = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i.i, i32 noundef 4) #20
  %46 = ptrtoint ptr %dataref.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %dataref.i.i.i, align 4
  %and.i.i.i = and i32 %47, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i.i)
  %cmp.i.not.i.i = icmp eq i32 %and.i.i.i, 1
  br label %skb_cloned.exit.i.i

skb_cloned.exit.i.i:                              ; preds = %land.rhs.i.i.i, %vlan_set_encap_proto.exit.skb_cloned.exit.i.i_crit_edge
  %48 = phi i1 [ true, %vlan_set_encap_proto.exit.skb_cloned.exit.i.i_crit_edge ], [ %cmp.i.not.i.i, %land.rhs.i.i.i ]
  %49 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %data, align 4
  %51 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i.i.i67 = ptrtoint ptr %50 to i32
  %sub.ptr.rhs.cast.i.i.i.i68 = ptrtoint ptr %52 to i32
  %sub.ptr.sub.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i67, %sub.ptr.rhs.cast.i.i.i.i68
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i.i.i.i, i32 %sub.ptr.sub.i.i)
  %tobool.not.i3.i.i = icmp uge i32 %sub.ptr.sub.i.i.i.i, %sub.ptr.sub.i.i
  %or.cond.i.i.i = and i1 %48, %tobool.not.i3.i.i
  br i1 %or.cond.i.i.i, label %skb_cloned.exit.i.i.if.end.i73_crit_edge, label %skb_cow.exit.i

skb_cloned.exit.i.i.if.end.i73_crit_edge:         ; preds = %skb_cloned.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i73

skb_cow.exit.i:                                   ; preds = %skb_cloned.exit.i.i
  %53 = tail call i32 @llvm.usub.sat.i32(i32 %sub.ptr.sub.i.i, i32 %sub.ptr.sub.i.i.i.i) #20
  %add.i.i.i = add i32 %53, 127
  %and.i4.i.i = and i32 %add.i.i.i, -128
  %call4.i.i.i = tail call i32 @pskb_expand_head(ptr noundef nonnull %skb.addr.0.i99, i32 noundef %and.i4.i.i, i32 noundef 0, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %cmp.i69 = icmp slt i32 %call4.i.i.i, 0
  br i1 %cmp.i69, label %skb_reorder_vlan_header.exit.thread, label %skb_cow.exit.i.if.end.i73_crit_edge

skb_cow.exit.i.if.end.i73_crit_edge:              ; preds = %skb_cow.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i73

skb_reorder_vlan_header.exit.thread:              ; preds = %skb_cow.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %skb.addr.0.i99) #20
  br label %err_free

if.end.i73:                                       ; preds = %skb_cow.exit.i.if.end.i73_crit_edge, %skb_cloned.exit.i.i.if.end.i73_crit_edge
  %54 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %data, align 4
  %56 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %head.i.i, align 8
  %mac_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 21
  %58 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %mac_header.i.i, align 2
  %conv.i.i = zext i16 %59 to i32
  %add.ptr.i.i71 = getelementptr i8, ptr %57, i32 %conv.i.i
  %sub.ptr.lhs.cast.i = ptrtoint ptr %55 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %add.ptr.i.i71 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %sub.ptr.sub.i)
  %cmp3.i72 = icmp sgt i32 %sub.ptr.sub.i, 6
  br i1 %cmp3.i72, label %if.then5.i, label %if.end.i73.if.end9.i_crit_edge, !prof !374

if.end.i73.if.end9.i_crit_edge:                   ; preds = %if.end.i73
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9.i

if.then5.i:                                       ; preds = %if.end.i73
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i74 = getelementptr i8, ptr %add.ptr.i.i71, i32 4
  %sub8.i = add nsw i32 %sub.ptr.sub.i, -6
  %60 = call ptr @memmove(ptr %add.ptr.i74, ptr %add.ptr.i.i71, i32 %sub8.i)
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then5.i, %if.end.i73.if.end9.i_crit_edge
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 17
  %61 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %end.i.i.i, align 4
  %meta_len.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %meta_len.i.i to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %meta_len.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %64)
  %tobool11.not.i = icmp eq i8 %64, 0
  br i1 %tobool11.not.i, label %if.end9.i.if.end37_crit_edge, label %if.then12.i

if.end9.i.if.end37_crit_edge:                     ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end37

if.then12.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i = zext i8 %64 to i32
  %65 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %head.i.i, align 8
  %67 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %mac_header.i.i, align 2
  %conv.i.i.i75 = zext i16 %68 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %66, i32 %conv.i.i.i75
  %idx.neg.i = sub nsw i32 0, %conv.i
  %add.ptr14.i = getelementptr i8, ptr %add.ptr.i.i.i, i32 %idx.neg.i
  %add.ptr15.i = getelementptr i8, ptr %add.ptr14.i, i32 4
  %69 = call ptr @memmove(ptr %add.ptr15.i, ptr %add.ptr14.i, i32 %conv.i)
  br label %if.end37

if.end37:                                         ; preds = %if.then12.i, %if.end9.i.if.end37_crit_edge
  %70 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %mac_header.i.i, align 2
  %add.i = add i16 %71, 4
  store i16 %add.i, ptr %mac_header.i.i, align 2
  %72 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %data, align 4
  %74 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i77 = ptrtoint ptr %73 to i32
  %sub.ptr.rhs.cast.i78 = ptrtoint ptr %75 to i32
  %sub.ptr.sub.i79 = sub i32 %sub.ptr.lhs.cast.i77, %sub.ptr.rhs.cast.i78
  %conv.i80 = trunc i32 %sub.ptr.sub.i79 to i16
  %network_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 20
  %76 = ptrtoint ptr %network_header.i to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 %conv.i80, ptr %network_header.i, align 4
  %transport_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 15, i32 0, i32 19
  %77 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %transport_header.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %78)
  %cmp.i81.not = icmp eq i16 %78, -1
  br i1 %cmp.i81.not, label %if.then39, label %if.end37.if.end40_crit_edge

if.end37.if.end40_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end40

if.then39:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #22
  %79 = ptrtoint ptr %transport_header.i to i32
  call void @__asan_store2_noabort(i32 %79)
  store i16 %conv.i80, ptr %transport_header.i, align 2
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.end37.if.end40_crit_edge
  %80 = ptrtoint ptr %network_header.i to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %network_header.i, align 4
  %82 = ptrtoint ptr %mac_header.i.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %mac_header.i.i, align 2
  %sub.i90 = sub i16 %81, %83
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.0.i99, i32 0, i32 8
  %84 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %84)
  store i16 %sub.i90, ptr %mac_len.i, align 4
  br label %cleanup

err_free:                                         ; preds = %skb_reorder_vlan_header.exit.thread, %pskb_may_pull.exit.err_free_crit_edge, %if.end.i.err_free_crit_edge, %skb_share_check.exit.err_free_crit_edge, %skb_share_check.exit.thread
  %skb.addr.0 = phi ptr [ null, %skb_share_check.exit.err_free_crit_edge ], [ %skb.addr.0.i99, %pskb_may_pull.exit.err_free_crit_edge ], [ null, %skb_share_check.exit.thread ], [ null, %skb_reorder_vlan_header.exit.thread ], [ %skb.addr.0.i99, %if.end.i.err_free_crit_edge ]
  tail call fastcc void @kfree_skb(ptr noundef %skb.addr.0)
  br label %cleanup

cleanup:                                          ; preds = %err_free, %if.end40, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %err_free ], [ %skb.addr.0.i99, %if.end40 ], [ %skb, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_ensure_writable(ptr noundef %skb, i32 noundef %write_len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %1, %3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %write_len)
  %cmp.not.i = icmp ult i32 %sub.i.i, %write_len
  br i1 %cmp.not.i, label %if.end.i, label %entry.if.end_crit_edge, !prof !373

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %write_len)
  %cmp3.i = icmp ult i32 %1, %write_len
  br i1 %cmp3.i, label %if.end.i.return_crit_edge, label %pskb_may_pull.exit, !prof !373

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

pskb_may_pull.exit:                               ; preds = %if.end.i
  %sub.i = sub i32 %write_len, %sub.i.i
  %call13.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i) #20
  %cmp14.i.not = icmp eq ptr %call13.i, null
  br i1 %cmp14.i.not, label %pskb_may_pull.exit.return_crit_edge, label %pskb_may_pull.exit.if.end_crit_edge

pskb_may_pull.exit.if.end_crit_edge:              ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

pskb_may_pull.exit.return_crit_edge:              ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %pskb_may_pull.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %cloned.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %4 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %if.end.return_crit_edge, label %skb_cloned.exit

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

skb_cloned.exit:                                  ; preds = %if.end
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %5 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %end.i.i, align 4
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %7 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %8, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i.not, label %skb_cloned.exit.return_crit_edge, label %lor.lhs.false

skb_cloned.exit.return_crit_edge:                 ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

lor.lhs.false:                                    ; preds = %skb_cloned.exit
  %9 = ptrtoint ptr %cloned.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load.i.i = load i8, ptr %cloned.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %lor.lhs.false.skb_clone_writable.exit_crit_edge, label %skb_header_cloned.exit.i

lor.lhs.false.skb_clone_writable.exit_crit_edge:  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_clone_writable.exit

skb_header_cloned.exit.i:                         ; preds = %lor.lhs.false
  %10 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %end.i.i, align 4
  %dataref1.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %11, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i, i32 noundef 4) #20
  %12 = ptrtoint ptr %dataref1.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %dataref1.i.i, align 4
  %and.i.i = and i32 %13, 65535
  %shr.i.i = ashr i32 %13, 16
  %sub.i.i11 = sub nsw i32 %and.i.i, %shr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i11)
  %cmp.i.not.i = icmp eq i32 %sub.i.i11, 1
  br i1 %cmp.i.not.i, label %skb_header_cloned.exit.i.skb_clone_writable.exit_crit_edge, label %skb_header_cloned.exit.i.if.end5_crit_edge

skb_header_cloned.exit.i.if.end5_crit_edge:       ; preds = %skb_header_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

skb_header_cloned.exit.i.skb_clone_writable.exit_crit_edge: ; preds = %skb_header_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_clone_writable.exit

skb_clone_writable.exit:                          ; preds = %skb_header_cloned.exit.i.skb_clone_writable.exit_crit_edge, %lor.lhs.false.skb_clone_writable.exit_crit_edge
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %14 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %16 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %15 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %17 to i32
  %sub.ptr.sub.i.i = add i32 %sub.ptr.lhs.cast.i.i, %write_len
  %add.i = sub i32 %sub.ptr.sub.i.i, %sub.ptr.rhs.cast.i.i
  %hdr_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 9
  %18 = ptrtoint ptr %hdr_len.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %hdr_len.i, align 2
  %conv.i = zext i16 %19 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv.i)
  %cmp.i12.not = icmp ugt i32 %add.i, %conv.i
  br i1 %cmp.i12.not, label %skb_clone_writable.exit.if.end5_crit_edge, label %skb_clone_writable.exit.return_crit_edge

skb_clone_writable.exit.return_crit_edge:         ; preds = %skb_clone_writable.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

skb_clone_writable.exit.if.end5_crit_edge:        ; preds = %skb_clone_writable.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

if.end5:                                          ; preds = %skb_clone_writable.exit.if.end5_crit_edge, %skb_header_cloned.exit.i.if.end5_crit_edge
  %call6 = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef 0, i32 noundef 2592)
  br label %return

return:                                           ; preds = %if.end5, %skb_clone_writable.exit.return_crit_edge, %skb_cloned.exit.return_crit_edge, %if.end.return_crit_edge, %pskb_may_pull.exit.return_crit_edge, %if.end.i.return_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end5 ], [ -12, %pskb_may_pull.exit.return_crit_edge ], [ 0, %skb_clone_writable.exit.return_crit_edge ], [ 0, %skb_cloned.exit.return_crit_edge ], [ -12, %if.end.i.return_crit_edge ], [ 0, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__skb_vlan_pop(ptr noundef %skb, ptr nocapture noundef writeonly %vlan_tci) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %0 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %4 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %mac_header.i, align 2
  %conv.i = zext i16 %5 to i32
  %add.ptr.i = getelementptr i8, ptr %3, i32 %conv.i
  %sub.ptr.lhs.cast = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %tobool.not = icmp eq ptr %1, %add.ptr.i
  br i1 %tobool.not, label %if.end38, label %land.rhs

land.rhs:                                         ; preds = %entry
  %.b82 = load i1, ptr @__skb_vlan_pop.__already_done, align 1
  br i1 %.b82, label %land.rhs.cleanup_crit_edge, label %if.then, !prof !374

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @__skb_vlan_pop.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5588, i32 noundef 9, ptr noundef nonnull @.str.25, i32 noundef %sub.ptr.sub) #20
  br label %cleanup

if.end38:                                         ; preds = %entry
  %call39 = tail call i32 @skb_ensure_writable(ptr noundef %skb, i32 noundef 18)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %if.end48, label %if.end38.cleanup_crit_edge, !prof !374

if.end38.cleanup_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end48:                                         ; preds = %if.end38
  %6 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %data, align 4
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %8 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.lshr.i = lshr i16 %bf.load.i, 9
  %trunc.i = trunc i16 %bf.lshr.i to i2
  %9 = zext i2 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.61)
  switch i2 %trunc.i, label %if.end48.skb_postpull_rcsum.exit_crit_edge [
    i2 -2, label %if.then.i
    i2 -1, label %land.lhs.true.i
  ]

if.end48.skb_postpull_rcsum.exit_crit_edge:       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_postpull_rcsum.exit

if.then.i:                                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr = getelementptr i8, ptr %7, i32 12
  %10 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 8
  %sub.i.i = sub i32 0, %12
  %call2.i = tail call i32 @csum_partial(ptr noundef %add.ptr, i32 noundef 4, i32 noundef %sub.i.i) #20
  %sub.i25.i = sub i32 0, %call2.i
  %13 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub.i25.i, ptr %10, align 8
  br label %skb_postpull_rcsum.exit

land.lhs.true.i:                                  ; preds = %if.end48
  %14 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %14, align 8
  %conv.i.i = zext i16 %16 to i32
  %17 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %7 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %18 to i32
  %sub.ptr.sub.i.neg.i.i = sub i32 %conv.i.i, %sub.ptr.lhs.cast.i.i.i
  %sub.i26.i = add i32 %sub.ptr.sub.i.neg.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i26.i)
  %cmp13.i = icmp slt i32 %sub.i26.i, 0
  br i1 %cmp13.i, label %if.then15.i, label %land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge

land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_postpull_rcsum.exit

if.then15.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear18.i = and i16 %bf.load.i, -1537
  %19 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %bf.clear18.i, ptr %ip_summed.i, align 8
  br label %skb_postpull_rcsum.exit

skb_postpull_rcsum.exit:                          ; preds = %if.then15.i, %land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge, %if.then.i, %if.end48.skb_postpull_rcsum.exit_crit_edge
  %20 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data, align 4
  %add.ptr51 = getelementptr i8, ptr %21, i32 14
  %22 = ptrtoint ptr %add.ptr51 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %add.ptr51, align 2
  %24 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %23, ptr %vlan_tci, align 2
  %25 = load ptr, ptr %data, align 4
  %add.ptr53 = getelementptr i8, ptr %25, i32 4
  %26 = call ptr @memmove(ptr %add.ptr53, ptr %25, i32 12)
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %27 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %len1.i, align 4
  %sub.i = add i32 %28, -4
  store i32 %sub.i, ptr %len1.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %29 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %30)
  %cmp.i = icmp ult i32 %sub.i, %30
  br i1 %cmp.i, label %do.body4.i, label %__skb_pull.exit, !prof !373

do.body4.i:                                       ; preds = %skb_postpull_rcsum.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #20, !srcloc !422
  unreachable

__skb_pull.exit:                                  ; preds = %skb_postpull_rcsum.exit
  %31 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %data, align 4
  %add.ptr.i84 = getelementptr i8, ptr %32, i32 4
  store ptr %add.ptr.i84, ptr %data, align 4
  %h_vlan_encapsulated_proto.i = getelementptr i8, ptr %21, i32 16
  %33 = ptrtoint ptr %h_vlan_encapsulated_proto.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %h_vlan_encapsulated_proto.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1535, i16 %34)
  %cmp.i.i = icmp ugt i16 %34, 1535
  br i1 %cmp.i.i, label %if.then.i85, label %if.end.i

if.then.i85:                                      ; preds = %__skb_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %35 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %protocol.i, align 8
  br label %vlan_set_encap_proto.exit

if.end.i:                                         ; preds = %__skb_pull.exit
  %add.ptr.i86 = getelementptr i8, ptr %21, i32 18
  %36 = ptrtoint ptr %add.ptr.i86 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %add.ptr.i86, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %37)
  %cmp.i87 = icmp eq i16 %37, -1
  %protocol3.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  br i1 %cmp.i87, label %if.then2.i, label %if.else.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %38 = ptrtoint ptr %protocol3.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 1, ptr %protocol3.i, align 8
  br label %vlan_set_encap_proto.exit

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %39 = ptrtoint ptr %protocol3.i to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 4, ptr %protocol3.i, align 8
  br label %vlan_set_encap_proto.exit

vlan_set_encap_proto.exit:                        ; preds = %if.else.i, %if.then2.i, %if.then.i85
  %40 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %mac_header.i, align 2
  %add = add i16 %41, 4
  store i16 %add, ptr %mac_header.i, align 2
  %42 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %head.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %44 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i88 = zext i16 %45 to i32
  %add.ptr.i.i = getelementptr i8, ptr %43, i32 %conv.i.i88
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %add.ptr.i84 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %sub.ptr.sub.i)
  %cmp = icmp slt i32 %sub.ptr.sub.i, 14
  br i1 %cmp, label %if.then59, label %vlan_set_encap_proto.exit.if.end60_crit_edge

vlan_set_encap_proto.exit.if.end60_crit_edge:     ; preds = %vlan_set_encap_proto.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end60

if.then59:                                        ; preds = %vlan_set_encap_proto.exit
  call void @__sanitizer_cov_trace_pc() #22
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %43 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.rhs.cast.i, %sub.ptr.rhs.cast.i.i
  %conv.i.i91 = trunc i32 %sub.ptr.sub.i.i to i16
  %conv1.i = add i16 %conv.i.i91, 14
  %46 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_store2_noabort(i32 %46)
  store i16 %conv1.i, ptr %network_header.i.i, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.then59, %vlan_set_encap_proto.exit.if.end60_crit_edge
  %47 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %network_header.i.i, align 4
  %sub.i94 = sub i16 %48, %add
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %49 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %sub.i94, ptr %mac_len.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end60, %if.end38.cleanup_crit_edge, %if.then, %land.rhs.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end60 ], [ -22, %if.then ], [ %call39, %if.end38.cleanup_crit_edge ], [ -22, %land.rhs.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_vlan_pop(ptr noundef %skb) #0 align 64 {
entry:
  %vlan_tci = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %vlan_tci) #20
  %0 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %vlan_tci, align 2, !annotation !451
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %1 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %1, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load)
  %tobool.not = icmp sgt i32 %bf.load, -1
  br i1 %tobool.not, label %if.else, label %if.then, !prof !373

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear.i = and i32 %bf.load, 2147483647
  %2 = ptrtoint ptr %vlan_present to i32
  call void @__asan_storeN_noabort(i32 %2, i32 4)
  store i32 %bf.clear.i, ptr %vlan_present, align 2
  br label %if.end16

if.else:                                          ; preds = %entry
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %3 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %protocol, align 8
  %5 = zext i16 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.62)
  switch i16 %4, label %if.else.cleanup_crit_edge [
    i16 -30552, label %if.else.if.end_crit_edge
    i16 -32512, label %if.else.if.end_crit_edge57
  ]

if.else.if.end_crit_edge57:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %if.else.if.end_crit_edge, %if.else.if.end_crit_edge57
  %call12 = call i32 @__skb_vlan_pop(ptr noundef %skb, ptr noundef nonnull %vlan_tci)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end.if.end16_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

if.end16:                                         ; preds = %if.end.if.end16_crit_edge, %if.then
  %protocol17 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %6 = ptrtoint ptr %protocol17 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %protocol17, align 8
  %8 = zext i16 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.63)
  switch i16 %7, label %if.end16.cleanup_crit_edge [
    i16 -30552, label %if.end16.if.end28_crit_edge
    i16 -32512, label %if.end16.if.end28_crit_edge58
  ]

if.end16.if.end28_crit_edge58:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.end16.if.end28_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end28:                                         ; preds = %if.end16.if.end28_crit_edge, %if.end16.if.end28_crit_edge58
  %call30 = call i32 @__skb_vlan_pop(ptr noundef %skb, ptr noundef nonnull %vlan_tci)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end39, label %if.end28.cleanup_crit_edge, !prof !374

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end39:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  %9 = ptrtoint ptr %vlan_tci to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vlan_tci, align 2
  %vlan_proto1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 9
  %11 = ptrtoint ptr %vlan_proto1.i to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %7, ptr %vlan_proto1.i, align 8
  %vlan_tci2.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %12 = ptrtoint ptr %vlan_tci2.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %10, ptr %vlan_tci2.i, align 2
  %13 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %bf.load.i56 = load i32, ptr %vlan_present, align 2
  %bf.set.i = or i32 %bf.load.i56, -2147483648
  store i32 %bf.set.i, ptr %vlan_present, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %if.end28.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.else.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end39 ], [ 0, %if.else.cleanup_crit_edge ], [ %call12, %if.end.cleanup_crit_edge ], [ 0, %if.end16.cleanup_crit_edge ], [ %call30, %if.end28.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %vlan_tci) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_vlan_push(ptr noundef %skb, i16 noundef zeroext %vlan_proto, i16 noundef zeroext %vlan_tci) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %0 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %0, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load)
  %tobool.not = icmp sgt i32 %bf.load, -1
  br i1 %tobool.not, label %entry.if.end51_crit_edge, label %if.then

entry.if.end51_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end51

if.then:                                          ; preds = %entry
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %1 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %data, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %3 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %head.i, align 8
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %5 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %mac_header.i, align 2
  %conv.i = zext i16 %6 to i32
  %add.ptr.i = getelementptr i8, ptr %4, i32 %conv.i
  %sub.ptr.lhs.cast = ptrtoint ptr %2 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %tobool1.not = icmp eq ptr %2, %add.ptr.i
  br i1 %tobool1.not, label %if.end40, label %land.rhs

land.rhs:                                         ; preds = %if.then
  %.b67 = load i1, ptr @skb_vlan_push.__already_done, align 1
  br i1 %.b67, label %land.rhs.return_crit_edge, label %if.then9, !prof !374

land.rhs.return_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then9:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @skb_vlan_push.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5660, i32 noundef 9, ptr noundef nonnull @.str.26, i32 noundef %sub.ptr.sub) #20
  br label %return

if.end40:                                         ; preds = %if.then
  %vlan_proto41 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 9
  %7 = ptrtoint ptr %vlan_proto41 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %vlan_proto41, align 8
  %vlan_tci42 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %9 = ptrtoint ptr %vlan_tci42 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vlan_tci42, align 2
  %cloned.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %11 = ptrtoint ptr %cloned.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load.i.i.i.i = load i8, ptr %cloned.i.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i.i.i)
  %tobool.not.i.i.i.i = icmp sgt i8 %bf.load.i.i.i.i, -1
  br i1 %tobool.not.i.i.i.i, label %if.end40.skb_header_cloned.exit.i.i.i_crit_edge, label %if.end.i.i.i.i

if.end40.skb_header_cloned.exit.i.i.i_crit_edge:  ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_header_cloned.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %12 = ptrtoint ptr %end.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %end.i.i.i.i.i, align 4
  %dataref1.i.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %13, i32 0, i32 10
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i.i.i, i32 noundef 4) #20
  %14 = ptrtoint ptr %dataref1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %dataref1.i.i.i.i, align 4
  %and.i.i.i.i = and i32 %15, 65535
  %shr.i.i.i.i = ashr i32 %15, 16
  %sub.i.i.i.i = sub nsw i32 %and.i.i.i.i, %shr.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i.i.i)
  %cmp.i.not.i.i.i = icmp eq i32 %sub.i.i.i.i, 1
  br label %skb_header_cloned.exit.i.i.i

skb_header_cloned.exit.i.i.i:                     ; preds = %if.end.i.i.i.i, %if.end40.skb_header_cloned.exit.i.i.i_crit_edge
  %retval.0.i.i.i.i = phi i1 [ %cmp.i.not.i.i.i, %if.end.i.i.i.i ], [ true, %if.end40.skb_header_cloned.exit.i.i.i_crit_edge ]
  %16 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data, align 4
  %18 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i.i.i.i.i = ptrtoint ptr %17 to i32
  %sub.ptr.rhs.cast.i.i.i.i.i = ptrtoint ptr %19 to i32
  %sub.ptr.sub.i.i.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i.i.i.i)
  %tobool.not.i3.i.i.i = icmp ugt i32 %sub.ptr.sub.i.i.i.i.i, 3
  %or.cond.i.i.i.i = and i1 %retval.0.i.i.i.i, %tobool.not.i3.i.i.i
  br i1 %or.cond.i.i.i.i, label %skb_header_cloned.exit.i.i.i.if.end.i.i_crit_edge, label %skb_cow_head.exit.i.i

skb_header_cloned.exit.i.i.i.if.end.i.i_crit_edge: ; preds = %skb_header_cloned.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

skb_cow_head.exit.i.i:                            ; preds = %skb_header_cloned.exit.i.i.i
  %20 = tail call i32 @llvm.usub.sat.i32(i32 4, i32 %sub.ptr.sub.i.i.i.i.i) #20
  %add.i.i.i.i = add nuw nsw i32 %20, 127
  %and.i4.i.i.i = and i32 %add.i.i.i.i, 128
  %call4.i.i.i.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef %and.i4.i.i.i, i32 noundef 0, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i.i)
  %cmp.i.i = icmp slt i32 %call4.i.i.i.i, 0
  br i1 %cmp.i.i, label %skb_cow_head.exit.i.i.return_crit_edge, label %skb_cow_head.exit.i.i.if.end.i.i_crit_edge

skb_cow_head.exit.i.i.if.end.i.i_crit_edge:       ; preds = %skb_cow_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

skb_cow_head.exit.i.i.return_crit_edge:           ; preds = %skb_cow_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end.i.i:                                       ; preds = %skb_cow_head.exit.i.i.if.end.i.i_crit_edge, %skb_header_cloned.exit.i.i.i.if.end.i.i_crit_edge
  %21 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %data, align 4
  %add.ptr.i.i.i = getelementptr i8, ptr %22, i32 -4
  store ptr %add.ptr.i.i.i, ptr %data, align 4
  %len1.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %23 = ptrtoint ptr %len1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %len1.i.i.i, align 4
  %add.i.i.i = add i32 %24, 4
  store i32 %add.i.i.i, ptr %len1.i.i.i, align 4
  %25 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %head.i, align 8
  %cmp.i.i.i = icmp ult ptr %add.ptr.i.i.i, %26
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end46, !prof !373

if.then.i.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %27 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_under_panic(ptr noundef %skb, i32 noundef 4, ptr noundef %27) #20
  unreachable

if.end46:                                         ; preds = %if.end.i.i
  %28 = call ptr @memmove(ptr %add.ptr.i.i.i, ptr %22, i32 12)
  %29 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %mac_header.i, align 2
  %sub7.i.i = add i16 %30, -4
  store i16 %sub7.i.i, ptr %mac_header.i, align 2
  %31 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %data, align 4
  %h_vlan_proto.i.i = getelementptr inbounds %struct.vlan_ethhdr, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %h_vlan_proto.i.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %8, ptr %h_vlan_proto.i.i, align 2
  %h_vlan_TCI.i.i = getelementptr inbounds %struct.vlan_ethhdr, ptr %32, i32 0, i32 2
  %34 = ptrtoint ptr %h_vlan_TCI.i.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %10, ptr %h_vlan_TCI.i.i, align 2
  %35 = ptrtoint ptr %vlan_proto41 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %vlan_proto41, align 8
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %37 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %36, ptr %protocol, align 8
  %mac_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %38 = ptrtoint ptr %mac_len to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %mac_len, align 4
  %add = add i16 %39, 4
  store i16 %add, ptr %mac_len, align 4
  %ip_summed.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %40 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %bf.load.i.i = load i16, ptr %ip_summed.i.i, align 8
  %41 = and i16 %bf.load.i.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %41)
  %cmp.i.i69 = icmp eq i16 %41, 1024
  br i1 %cmp.i.i69, label %if.then.i.i, label %if.end46.if.end51_crit_edge

if.end46.if.end51_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end51

if.then.i.i:                                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #22
  %42 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %data, align 4
  %add.ptr = getelementptr i8, ptr %43, i32 12
  %44 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 8
  %call.i.i = tail call i32 @csum_partial(ptr noundef %add.ptr, i32 noundef 4, i32 noundef 0) #20
  %add.i.i.i.i70 = add i32 %call.i.i, %46
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i70, i32 %call.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i70, %call.i.i
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i to i32
  %add1.i.i.i.i = add i32 %add.i.i.i.i70, %conv.i.i.i.i
  %47 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %add1.i.i.i.i, ptr %44, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.then.i.i, %if.end46.if.end51_crit_edge, %entry.if.end51_crit_edge
  %vlan_proto1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 9
  %48 = ptrtoint ptr %vlan_proto1.i to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %vlan_proto, ptr %vlan_proto1.i, align 8
  %vlan_tci2.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 10
  %49 = ptrtoint ptr %vlan_tci2.i to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %vlan_tci, ptr %vlan_tci2.i, align 2
  %50 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %50, i32 4)
  %bf.load.i = load i32, ptr %vlan_present, align 2
  %bf.set.i = or i32 %bf.load.i, -2147483648
  store i32 %bf.set.i, ptr %vlan_present, align 2
  br label %return

return:                                           ; preds = %if.end51, %skb_cow_head.exit.i.i.return_crit_edge, %if.then9, %land.rhs.return_crit_edge
  %retval.1 = phi i32 [ 0, %if.end51 ], [ -12, %skb_cow_head.exit.i.i.return_crit_edge ], [ -22, %land.rhs.return_crit_edge ], [ -22, %if.then9 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_eth_pop(ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %1, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %sub.i.i)
  %cmp.not.i = icmp ult i32 %sub.i.i, 14
  br i1 %cmp.not.i, label %if.end.i, label %entry.lor.lhs.false_crit_edge, !prof !373

entry.lor.lhs.false_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %1)
  %cmp3.i = icmp ult i32 %1, 14
  br i1 %cmp3.i, label %if.end.i.return_crit_edge, label %pskb_may_pull.exit, !prof !373

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

pskb_may_pull.exit:                               ; preds = %if.end.i
  %sub.i = sub nuw nsw i32 14, %sub.i.i
  %call13.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i) #20
  %cmp14.i.not = icmp eq ptr %call13.i, null
  br i1 %cmp14.i.not, label %pskb_may_pull.exit.return_crit_edge, label %pskb_may_pull.exit.lor.lhs.false_crit_edge

pskb_may_pull.exit.lor.lhs.false_crit_edge:       ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

pskb_may_pull.exit.return_crit_edge:              ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

lor.lhs.false:                                    ; preds = %pskb_may_pull.exit.lor.lhs.false_crit_edge, %entry.lor.lhs.false_crit_edge
  %vlan_present.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %4 = ptrtoint ptr %vlan_present.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 4)
  %bf.load.i = load i32, ptr %vlan_present.i, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load.i)
  %tobool.not.i = icmp sgt i32 %bf.load.i, -1
  br i1 %tobool.not.i, label %skb_vlan_tagged.exit, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

skb_vlan_tagged.exit:                             ; preds = %lor.lhs.false
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %5 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %protocol.i, align 8
  %7 = zext i16 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.64)
  switch i16 %6, label %lor.lhs.false2 [
    i16 -30552, label %skb_vlan_tagged.exit.return_crit_edge
    i16 -32512, label %skb_vlan_tagged.exit.return_crit_edge24
  ]

skb_vlan_tagged.exit.return_crit_edge24:          ; preds = %skb_vlan_tagged.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

skb_vlan_tagged.exit.return_crit_edge:            ; preds = %skb_vlan_tagged.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

lor.lhs.false2:                                   ; preds = %skb_vlan_tagged.exit
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %8 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %10 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %11 to i32
  %add.ptr.i.i = getelementptr i8, ptr %9, i32 %conv.i.i
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %12 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %13 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %sub.ptr.sub.i)
  %cmp = icmp slt i32 %sub.ptr.sub.i, 14
  br i1 %cmp, label %lor.lhs.false2.return_crit_edge, label %if.end

lor.lhs.false2.return_crit_edge:                  ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  %14 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %len.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %15)
  %cmp.i = icmp ult i32 %15, 14
  br i1 %cmp.i, label %do.body4.i, label %do.end9.i, !prof !373

do.body4.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/skbuff.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3838, 0\0A.popsection", ""() #20, !srcloc !436
  unreachable

do.end9.i:                                        ; preds = %if.end
  %sub.i.i11 = add i32 %15, -14
  %16 = ptrtoint ptr %len.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %sub.i.i11, ptr %len.i.i, align 4
  %17 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i11, i32 %18)
  %cmp.i.i = icmp ult i32 %sub.i.i11, %18
  br i1 %cmp.i.i, label %do.body4.i.i, label %__skb_pull.exit.i, !prof !373

do.body4.i.i:                                     ; preds = %do.end9.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #20, !srcloc !422
  unreachable

__skb_pull.exit.i:                                ; preds = %do.end9.i
  %add.ptr.i.i13 = getelementptr i8, ptr %13, i32 14
  %19 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %add.ptr.i.i13, ptr %data.i, align 4
  %ip_summed.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %20 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load.i.i = load i16, ptr %ip_summed.i.i, align 8
  %bf.lshr.i.i = lshr i16 %bf.load.i.i, 9
  %trunc.i.i = trunc i16 %bf.lshr.i.i to i2
  %21 = zext i2 %trunc.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.65)
  switch i2 %trunc.i.i, label %__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge [
    i2 -2, label %if.then.i.i
    i2 -1, label %land.lhs.true.i.i
  ]

__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge:  ; preds = %__skb_pull.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_pull_rcsum.exit

if.then.i.i:                                      ; preds = %__skb_pull.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %22 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 8
  %sub.i.i.i = sub i32 0, %24
  %call2.i.i = tail call i32 @csum_partial(ptr noundef %13, i32 noundef 14, i32 noundef %sub.i.i.i) #20
  %sub.i25.i.i = sub i32 0, %call2.i.i
  %25 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %sub.i25.i.i, ptr %22, align 8
  br label %skb_pull_rcsum.exit

land.lhs.true.i.i:                                ; preds = %__skb_pull.exit.i
  %26 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %26, align 8
  %conv.i.i.i = zext i16 %28 to i32
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %add.ptr.i.i13 to i32
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %9 to i32
  %sub.ptr.sub.i.neg.i.i.i = sub i32 %sub.ptr.rhs.cast.i.i.i.i, %sub.ptr.lhs.cast.i.i.i.i
  %sub.i26.i.i = add i32 %sub.ptr.sub.i.neg.i.i.i, %conv.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i26.i.i)
  %cmp13.i.i = icmp slt i32 %sub.i26.i.i, 0
  br i1 %cmp13.i.i, label %if.then15.i.i, label %land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge

land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge:  ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_pull_rcsum.exit

if.then15.i.i:                                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear18.i.i = and i16 %bf.load.i.i, -1537
  %29 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %bf.clear18.i.i, ptr %ip_summed.i.i, align 8
  br label %skb_pull_rcsum.exit

skb_pull_rcsum.exit:                              ; preds = %if.then15.i.i, %land.lhs.true.i.i.skb_pull_rcsum.exit_crit_edge, %if.then.i.i, %__skb_pull.exit.i.skb_pull_rcsum.exit_crit_edge
  %30 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %data.i, align 4
  %32 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i15 = ptrtoint ptr %31 to i32
  %sub.ptr.rhs.cast.i16 = ptrtoint ptr %33 to i32
  %sub.ptr.sub.i17 = sub i32 %sub.ptr.lhs.cast.i15, %sub.ptr.rhs.cast.i16
  %conv.i = trunc i32 %sub.ptr.sub.i17 to i16
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %34 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %conv.i, ptr %mac_header.i, align 2
  %35 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %network_header.i.i, align 4
  %sub.i19 = sub i16 %36, %conv.i
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %37 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %sub.i19, ptr %mac_len.i, align 4
  br label %return

return:                                           ; preds = %skb_pull_rcsum.exit, %lor.lhs.false2.return_crit_edge, %skb_vlan_tagged.exit.return_crit_edge, %skb_vlan_tagged.exit.return_crit_edge24, %lor.lhs.false.return_crit_edge, %pskb_may_pull.exit.return_crit_edge, %if.end.i.return_crit_edge
  %retval.0 = phi i32 [ 0, %skb_pull_rcsum.exit ], [ -71, %lor.lhs.false2.return_crit_edge ], [ -71, %skb_vlan_tagged.exit.return_crit_edge ], [ -71, %pskb_may_pull.exit.return_crit_edge ], [ -71, %if.end.i.return_crit_edge ], [ -71, %lor.lhs.false.return_crit_edge ], [ -71, %skb_vlan_tagged.exit.return_crit_edge24 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_eth_push(ptr noundef %skb, ptr nocapture noundef readonly %dst, ptr nocapture noundef readonly %src) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %0 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %2 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %3 to i32
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 %conv.i.i
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %4 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data.i, align 4
  %tobool.not = icmp eq ptr %add.ptr.i.i, %5
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %vlan_present = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %6 = ptrtoint ptr %vlan_present to i32
  call void @__asan_loadN_noabort(i32 %6, i32 4)
  %bf.load = load i32, ptr %vlan_present, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load)
  %tobool1.not = icmp sgt i32 %bf.load, -1
  br i1 %tobool1.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %7 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %if.end.skb_header_cloned.exit.i_crit_edge, label %if.end.i.i

if.end.skb_header_cloned.exit.i_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_header_cloned.exit.i

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %8 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i.i.i, align 4
  %dataref1.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %9, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i, i32 noundef 4) #20
  %10 = ptrtoint ptr %dataref1.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %dataref1.i.i, align 4
  %and.i.i = and i32 %11, 65535
  %shr.i.i = ashr i32 %11, 16
  %sub.i.i = sub nsw i32 %and.i.i, %shr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i)
  %cmp.i.not.i = icmp eq i32 %sub.i.i, 1
  br label %skb_header_cloned.exit.i

skb_header_cloned.exit.i:                         ; preds = %if.end.i.i, %if.end.skb_header_cloned.exit.i_crit_edge
  %retval.0.i.i = phi i1 [ %cmp.i.not.i, %if.end.i.i ], [ true, %if.end.skb_header_cloned.exit.i_crit_edge ]
  %12 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data.i, align 4
  %14 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %13 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %15 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %sub.ptr.sub.i.i.i)
  %tobool.not.i3.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 13
  %or.cond.i.i = and i1 %retval.0.i.i, %tobool.not.i3.i
  br i1 %or.cond.i.i, label %skb_header_cloned.exit.i.if.end5_crit_edge, label %skb_cow_head.exit

skb_header_cloned.exit.i.if.end5_crit_edge:       ; preds = %skb_header_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

skb_cow_head.exit:                                ; preds = %skb_header_cloned.exit.i
  %16 = tail call i32 @llvm.usub.sat.i32(i32 14, i32 %sub.ptr.sub.i.i.i) #20
  %add.i.i = add nuw nsw i32 %16, 127
  %and.i4.i = and i32 %add.i.i, 128
  %call4.i.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef %and.i4.i, i32 noundef 0, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp = icmp slt i32 %call4.i.i, 0
  br i1 %cmp, label %skb_cow_head.exit.cleanup_crit_edge, label %skb_cow_head.exit.if.end5_crit_edge

skb_cow_head.exit.if.end5_crit_edge:              ; preds = %skb_cow_head.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

skb_cow_head.exit.cleanup_crit_edge:              ; preds = %skb_cow_head.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end5:                                          ; preds = %skb_cow_head.exit.if.end5_crit_edge, %skb_header_cloned.exit.i.if.end5_crit_edge
  %17 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %18, i32 -14
  store ptr %add.ptr.i, ptr %data.i, align 4
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %19 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %len1.i, align 4
  %add.i = add i32 %20, 14
  store i32 %add.i, ptr %len1.i, align 4
  %21 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %head.i.i, align 8
  %cmp.i = icmp ult ptr %add.ptr.i, %22
  br i1 %cmp.i, label %if.then.i, label %skb_push.exit, !prof !373

if.then.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  %23 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_under_panic(ptr noundef %skb, i32 noundef 14, ptr noundef %23) #20
  unreachable

skb_push.exit:                                    ; preds = %if.end5
  %sub.ptr.lhs.cast.i25 = ptrtoint ptr %add.ptr.i to i32
  %sub.ptr.rhs.cast.i26 = ptrtoint ptr %22 to i32
  %sub.ptr.sub.i27 = sub i32 %sub.ptr.lhs.cast.i25, %sub.ptr.rhs.cast.i26
  %conv.i = trunc i32 %sub.ptr.sub.i27 to i16
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %24 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv.i, ptr %mac_header.i, align 2
  %25 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %network_header.i.i, align 4
  %sub.i = sub i16 %26, %conv.i
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %27 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %sub.i, ptr %mac_len.i, align 4
  %conv.i.i30 = and i32 %sub.ptr.sub.i27, 65535
  %add.ptr.i.i31 = getelementptr i8, ptr %22, i32 %conv.i.i30
  %28 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %dst, align 4
  %30 = ptrtoint ptr %add.ptr.i.i31 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %add.ptr.i.i31, align 4
  %add.ptr.i32 = getelementptr i8, ptr %dst, i32 4
  %31 = ptrtoint ptr %add.ptr.i32 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %add.ptr.i32, align 2
  %add.ptr1.i = getelementptr i8, ptr %add.ptr.i.i31, i32 4
  %33 = ptrtoint ptr %add.ptr1.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %32, ptr %add.ptr1.i, align 2
  %h_source = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i31, i32 0, i32 1
  %34 = ptrtoint ptr %src to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %src, align 4
  %36 = ptrtoint ptr %h_source to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %h_source, align 4
  %add.ptr.i33 = getelementptr i8, ptr %src, i32 4
  %37 = ptrtoint ptr %add.ptr.i33 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %add.ptr.i33, align 2
  %add.ptr1.i34 = getelementptr i8, ptr %h_source, i32 4
  %39 = ptrtoint ptr %add.ptr1.i34 to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %38, ptr %add.ptr1.i34, align 2
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %40 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %protocol, align 8
  %h_proto = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i31, i32 0, i32 2
  %42 = ptrtoint ptr %h_proto to i32
  call void @__asan_storeN_noabort(i32 %42, i32 2)
  store i16 %41, ptr %h_proto, align 1
  %ip_summed.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %43 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %43)
  %bf.load.i.i35 = load i16, ptr %ip_summed.i.i, align 8
  %44 = and i16 %bf.load.i.i35, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %44)
  %cmp.i.i = icmp eq i16 %44, 1024
  br i1 %cmp.i.i, label %if.then.i.i, label %skb_push.exit.cleanup_crit_edge

skb_push.exit.cleanup_crit_edge:                  ; preds = %skb_push.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then.i.i:                                      ; preds = %skb_push.exit
  call void @__sanitizer_cov_trace_pc() #22
  %45 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %45, align 8
  %call.i.i = tail call i32 @csum_partial(ptr noundef %add.ptr.i.i31, i32 noundef 14, i32 noundef 0) #20
  %add.i.i.i.i = add i32 %call.i.i, %47
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i, i32 %call.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, %call.i.i
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i to i32
  %add1.i.i.i.i = add i32 %add.i.i.i.i, %conv.i.i.i.i
  %48 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %add1.i.i.i.i, ptr %45, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i, %skb_push.exit.cleanup_crit_edge, %skb_cow_head.exit.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -71, %lor.lhs.false.cleanup_crit_edge ], [ -71, %entry.cleanup_crit_edge ], [ %call4.i.i, %skb_cow_head.exit.cleanup_crit_edge ], [ 0, %skb_push.exit.cleanup_crit_edge ], [ 0, %if.then.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_mpls_push(ptr noundef %skb, i32 noundef %mpls_lse, i16 noundef zeroext %mpls_proto, i32 noundef %mac_len, i1 noundef zeroext %ethernet) #0 align 64 {
entry:
  %diff.i = alloca [2 x i16], align 2
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = add i16 %mpls_proto, 30649
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %0)
  %1 = icmp ult i16 %0, 2
  br i1 %1, label %if.end, label %entry.cleanup_crit_edge, !prof !374

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %encapsulation = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %2 = ptrtoint ptr %encapsulation to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load = load i16, ptr %encapsulation, align 8
  %3 = and i16 %bf.load, 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool3.not = icmp eq i16 %3, 0
  br i1 %tobool3.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %4 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %if.end5.skb_header_cloned.exit.i_crit_edge, label %if.end.i.i

if.end5.skb_header_cloned.exit.i_crit_edge:       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_header_cloned.exit.i

if.end.i.i:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %5 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %end.i.i.i, align 4
  %dataref1.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i, i32 noundef 4) #20
  %7 = ptrtoint ptr %dataref1.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %dataref1.i.i, align 4
  %and.i.i = and i32 %8, 65535
  %shr.i.i = ashr i32 %8, 16
  %sub.i.i = sub nsw i32 %and.i.i, %shr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i)
  %cmp.i.not.i = icmp eq i32 %sub.i.i, 1
  br label %skb_header_cloned.exit.i

skb_header_cloned.exit.i:                         ; preds = %if.end.i.i, %if.end5.skb_header_cloned.exit.i_crit_edge
  %retval.0.i.i = phi i1 [ %cmp.i.not.i, %if.end.i.i ], [ true, %if.end5.skb_header_cloned.exit.i_crit_edge ]
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %9 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %data.i.i.i, align 4
  %head.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %11 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %head.i.i.i, align 8
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %10 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %12 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %sub.ptr.sub.i.i.i)
  %tobool.not.i3.i = icmp ugt i32 %sub.ptr.sub.i.i.i, 3
  %or.cond.i.i = and i1 %retval.0.i.i, %tobool.not.i3.i
  br i1 %or.cond.i.i, label %skb_header_cloned.exit.i.if.end15_crit_edge, label %skb_cow_head.exit

skb_header_cloned.exit.i.if.end15_crit_edge:      ; preds = %skb_header_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

skb_cow_head.exit:                                ; preds = %skb_header_cloned.exit.i
  %13 = tail call i32 @llvm.usub.sat.i32(i32 4, i32 %sub.ptr.sub.i.i.i) #20
  %add.i.i = add nuw nsw i32 %13, 127
  %and.i4.i = and i32 %add.i.i, 128
  %call4.i.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef %and.i4.i, i32 noundef 0, i32 noundef 2592) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool7.not = icmp eq i32 %call4.i.i, 0
  br i1 %tobool7.not, label %skb_cow_head.exit.if.end15_crit_edge, label %skb_cow_head.exit.cleanup_crit_edge, !prof !374

skb_cow_head.exit.cleanup_crit_edge:              ; preds = %skb_cow_head.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

skb_cow_head.exit.if.end15_crit_edge:             ; preds = %skb_cow_head.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.end15:                                         ; preds = %skb_cow_head.exit.if.end15_crit_edge, %skb_header_cloned.exit.i.if.end15_crit_edge
  %14 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 14
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %14, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %tobool16.not = icmp eq i16 %16, 0
  br i1 %tobool16.not, label %if.then17, label %if.end15.if.end19_crit_edge

if.end15.if.end19_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

if.then17:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  %17 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %head.i.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %19 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %20 to i32
  %add.ptr.i.i = getelementptr i8, ptr %18, i32 %conv.i.i
  %21 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %data.i.i.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %22 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %18 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.rhs.cast.i, %sub.ptr.rhs.cast.i.i
  %conv.i.i54 = trunc i32 %sub.ptr.sub.i.i to i16
  %inner_network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 16
  %23 = trunc i32 %sub.ptr.sub.i to i16
  %conv1.i = add i16 %23, %conv.i.i54
  %24 = ptrtoint ptr %inner_network_header.i.i to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv1.i, ptr %inner_network_header.i.i, align 4
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %25 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %protocol, align 8
  %27 = ptrtoint ptr %14 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %26, ptr %14, align 8
  %inner_protocol_type.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %28 = ptrtoint ptr %inner_protocol_type.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 4)
  %bf.load.i = load i32, ptr %inner_protocol_type.i, align 2
  %bf.clear.i = and i32 %bf.load.i, -4194305
  store i32 %bf.clear.i, ptr %inner_protocol_type.i, align 2
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.end15.if.end19_crit_edge
  %29 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %data.i.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %30, i32 -4
  store ptr %add.ptr.i, ptr %data.i.i.i, align 4
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %31 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %len1.i, align 4
  %add.i = add i32 %32, 4
  store i32 %add.i, ptr %len1.i, align 4
  %33 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %head.i.i.i, align 8
  %cmp.i = icmp ult ptr %add.ptr.i, %34
  br i1 %cmp.i, label %if.then.i, label %skb_push.exit, !prof !373

if.then.i:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  %35 = tail call ptr @llvm.returnaddress(i32 0) #20
  call void @__asan_handle_no_return()
  tail call fastcc void @skb_under_panic(ptr noundef %skb, i32 noundef 4, ptr noundef %35) #20
  unreachable

skb_push.exit:                                    ; preds = %if.end19
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %36 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %mac_header.i, align 2
  %conv.i = zext i16 %37 to i32
  %add.ptr.i57 = getelementptr i8, ptr %34, i32 %conv.i
  %add.ptr = getelementptr i8, ptr %add.ptr.i57, i32 -4
  %38 = call ptr @memmove(ptr %add.ptr, ptr %add.ptr.i57, i32 %mac_len)
  %39 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %data.i.i.i, align 4
  %41 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %head.i.i.i, align 8
  %sub.ptr.lhs.cast.i64 = ptrtoint ptr %40 to i32
  %sub.ptr.rhs.cast.i65 = ptrtoint ptr %42 to i32
  %sub.ptr.sub.i66 = sub i32 %sub.ptr.lhs.cast.i64, %sub.ptr.rhs.cast.i65
  %conv.i67 = trunc i32 %sub.ptr.sub.i66 to i16
  store i16 %conv.i67, ptr %mac_header.i, align 2
  %network_header.i.i75 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %43 = trunc i32 %mac_len to i16
  %conv1.i76 = add i16 %conv.i67, %43
  %44 = ptrtoint ptr %network_header.i.i75 to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %conv1.i76, ptr %network_header.i.i75, align 4
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %45 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %43, ptr %mac_len.i, align 4
  %conv.i.i80 = zext i16 %conv1.i76 to i32
  %add.ptr.i.i81 = getelementptr i8, ptr %42, i32 %conv.i.i80
  %46 = ptrtoint ptr %add.ptr.i.i81 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %mpls_lse, ptr %add.ptr.i.i81, align 4
  %47 = ptrtoint ptr %encapsulation to i32
  call void @__asan_load2_noabort(i32 %47)
  %bf.load.i.i82 = load i16, ptr %encapsulation, align 8
  %48 = and i16 %bf.load.i.i82, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %48)
  %cmp.i.i = icmp eq i16 %48, 1024
  br i1 %cmp.i.i, label %if.then.i.i, label %skb_push.exit.skb_postpush_rcsum.exit_crit_edge

skb_push.exit.skb_postpush_rcsum.exit_crit_edge:  ; preds = %skb_push.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_postpush_rcsum.exit

if.then.i.i:                                      ; preds = %skb_push.exit
  call void @__sanitizer_cov_trace_pc() #22
  %49 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 8
  %call.i.i = tail call i32 @csum_partial(ptr noundef %add.ptr.i.i81, i32 noundef 4, i32 noundef 0) #20
  %add.i.i.i.i = add i32 %call.i.i, %51
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i.i, i32 %call.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, %call.i.i
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i to i32
  %add1.i.i.i.i = add i32 %add.i.i.i.i, %conv.i.i.i.i
  %52 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %add1.i.i.i.i, ptr %49, align 8
  br label %skb_postpush_rcsum.exit

skb_postpush_rcsum.exit:                          ; preds = %if.then.i.i, %skb_push.exit.skb_postpush_rcsum.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %mac_len)
  %cmp = icmp sgt i32 %mac_len, 13
  %or.cond = and i1 %cmp, %ethernet
  br i1 %or.cond, label %if.then25, label %skb_postpush_rcsum.exit.if.end27_crit_edge

skb_postpush_rcsum.exit.if.end27_crit_edge:       ; preds = %skb_postpush_rcsum.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end27

if.then25:                                        ; preds = %skb_postpush_rcsum.exit
  %53 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %head.i.i.i, align 8
  %55 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %mac_header.i, align 2
  %conv.i.i84 = zext i16 %56 to i32
  %add.ptr.i.i85 = getelementptr i8, ptr %54, i32 %conv.i.i84
  %57 = ptrtoint ptr %encapsulation to i32
  call void @__asan_load2_noabort(i32 %57)
  %bf.load.i86 = load i16, ptr %encapsulation, align 8
  %58 = and i16 %bf.load.i86, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %58)
  %cmp.i87 = icmp eq i16 %58, 1024
  br i1 %cmp.i87, label %if.then.i88, label %if.then25.skb_mod_eth_type.exit_crit_edge

if.then25.skb_mod_eth_type.exit_crit_edge:        ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_mod_eth_type.exit

if.then.i88:                                      ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %diff.i) #20
  %59 = getelementptr inbounds [2 x i16], ptr %diff.i, i32 0, i32 1
  %h_proto.i = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i85, i32 0, i32 2
  %60 = ptrtoint ptr %h_proto.i to i32
  call void @__asan_loadN_noabort(i32 %60, i32 2)
  %61 = load i16, ptr %h_proto.i, align 1
  %neg.i = xor i16 %61, -1
  %62 = ptrtoint ptr %diff.i to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %neg.i, ptr %diff.i, align 2
  %63 = ptrtoint ptr %59 to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 %mpls_proto, ptr %59, align 2
  %64 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %64, align 8
  %call.i = call i32 @csum_partial(ptr noundef nonnull %diff.i, i32 noundef 4, i32 noundef %66) #20
  %67 = ptrtoint ptr %64 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %call.i, ptr %64, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %diff.i) #20
  br label %skb_mod_eth_type.exit

skb_mod_eth_type.exit:                            ; preds = %if.then.i88, %if.then25.skb_mod_eth_type.exit_crit_edge
  %h_proto4.i = getelementptr inbounds %struct.ethhdr, ptr %add.ptr.i.i85, i32 0, i32 2
  %68 = ptrtoint ptr %h_proto4.i to i32
  call void @__asan_storeN_noabort(i32 %68, i32 2)
  store i16 %mpls_proto, ptr %h_proto4.i, align 1
  br label %if.end27

if.end27:                                         ; preds = %skb_mod_eth_type.exit, %skb_postpush_rcsum.exit.if.end27_crit_edge
  %protocol28 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %69 = ptrtoint ptr %protocol28 to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 %mpls_proto, ptr %protocol28, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %skb_cow_head.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end27 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %call4.i.i, %skb_cow_head.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_mpls_pop(ptr noundef %skb, i16 noundef zeroext %next_proto, i32 noundef %mac_len, i1 noundef zeroext %ethernet) #0 align 64 {
entry:
  %diff.i = alloca [2 x i16], align 2
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %0 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %protocol, align 8
  %2 = add i16 %1, 30649
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %2)
  %3 = icmp ult i16 %2, 2
  br i1 %3, label %if.end, label %entry.cleanup_crit_edge, !prof !374

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %mac_len, 4
  %call3 = tail call i32 @skb_ensure_writable(ptr noundef %skb, i32 noundef %add)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end12, label %if.end.cleanup_crit_edge, !prof !374

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end12:                                         ; preds = %if.end
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %4 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %6 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.lshr.i = lshr i16 %bf.load.i, 9
  %trunc.i = trunc i16 %bf.lshr.i to i2
  %7 = zext i2 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.66)
  switch i2 %trunc.i, label %if.end12.skb_postpull_rcsum.exit_crit_edge [
    i2 -2, label %if.then.i
    i2 -1, label %land.lhs.true.i
  ]

if.end12.skb_postpull_rcsum.exit_crit_edge:       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_postpull_rcsum.exit

if.then.i:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  %8 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %9 to i32
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 %conv.i.i
  %10 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 8
  %sub.i.i = sub i32 0, %12
  %call2.i = tail call i32 @csum_partial(ptr noundef %add.ptr.i.i, i32 noundef 4, i32 noundef %sub.i.i) #20
  %sub.i25.i = sub i32 0, %call2.i
  %13 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub.i25.i, ptr %10, align 8
  br label %skb_postpull_rcsum.exit

land.lhs.true.i:                                  ; preds = %if.end12
  %14 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %14, align 8
  %conv.i.i39 = zext i16 %16 to i32
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %17 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i.i.i, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %18 to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %5 to i32
  %sub.ptr.sub.i.neg.i.i = add i32 %conv.i.i39, %sub.ptr.rhs.cast.i.i.i
  %sub.i26.i = sub i32 %sub.ptr.sub.i.neg.i.i, %sub.ptr.lhs.cast.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i26.i)
  %cmp13.i = icmp slt i32 %sub.i26.i, 0
  br i1 %cmp13.i, label %if.then15.i, label %land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge

land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_postpull_rcsum.exit

if.then15.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %bf.clear18.i = and i16 %bf.load.i, -1537
  %19 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %bf.clear18.i, ptr %ip_summed.i, align 8
  br label %skb_postpull_rcsum.exit

skb_postpull_rcsum.exit:                          ; preds = %if.then15.i, %land.lhs.true.i.skb_postpull_rcsum.exit_crit_edge, %if.then.i, %if.end12.skb_postpull_rcsum.exit_crit_edge
  %20 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %head.i.i, align 8
  %mac_header.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 21
  %22 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %mac_header.i, align 2
  %conv.i = zext i16 %23 to i32
  %add.ptr.i = getelementptr i8, ptr %21, i32 %conv.i
  %add.ptr = getelementptr i8, ptr %add.ptr.i, i32 4
  %24 = call ptr @memmove(ptr %add.ptr, ptr %add.ptr.i, i32 %mac_len)
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %25 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %len1.i, align 4
  %sub.i = add i32 %26, -4
  store i32 %sub.i, ptr %len1.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %27 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %28)
  %cmp.i = icmp ult i32 %sub.i, %28
  br i1 %cmp.i, label %do.body4.i, label %__skb_pull.exit, !prof !373

do.body4.i:                                       ; preds = %skb_postpull_rcsum.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #20, !srcloc !422
  unreachable

__skb_pull.exit:                                  ; preds = %skb_postpull_rcsum.exit
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %29 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %data.i, align 4
  %add.ptr.i44 = getelementptr i8, ptr %30, i32 4
  store ptr %add.ptr.i44, ptr %data.i, align 4
  %31 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i44 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %32 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i47 = trunc i32 %sub.ptr.sub.i to i16
  %33 = ptrtoint ptr %mac_header.i to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %conv.i47, ptr %mac_header.i, align 2
  %34 = trunc i32 %mac_len to i16
  %conv1.i = add i16 %conv.i47, %34
  %35 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %conv1.i, ptr %network_header.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %mac_len)
  %cmp = icmp sgt i32 %mac_len, 13
  %or.cond = and i1 %cmp, %ethernet
  br i1 %or.cond, label %if.then18, label %__skb_pull.exit.if.end21_crit_edge

__skb_pull.exit.if.end21_crit_edge:               ; preds = %__skb_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end21

if.then18:                                        ; preds = %__skb_pull.exit
  %conv.i.i54 = zext i16 %conv1.i to i32
  %add.ptr.i.i55 = getelementptr i8, ptr %32, i32 %conv.i.i54
  %add.ptr20 = getelementptr i8, ptr %add.ptr.i.i55, i32 -14
  %36 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %bf.load.i57 = load i16, ptr %ip_summed.i, align 8
  %37 = and i16 %bf.load.i57, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %37)
  %cmp.i58 = icmp eq i16 %37, 1024
  br i1 %cmp.i58, label %if.then.i59, label %if.then18.skb_mod_eth_type.exit_crit_edge

if.then18.skb_mod_eth_type.exit_crit_edge:        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_mod_eth_type.exit

if.then.i59:                                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %diff.i) #20
  %38 = getelementptr inbounds [2 x i16], ptr %diff.i, i32 0, i32 1
  %h_proto.i = getelementptr inbounds %struct.ethhdr, ptr %add.ptr20, i32 0, i32 2
  %39 = ptrtoint ptr %h_proto.i to i32
  call void @__asan_loadN_noabort(i32 %39, i32 2)
  %40 = load i16, ptr %h_proto.i, align 1
  %neg.i = xor i16 %40, -1
  %41 = ptrtoint ptr %diff.i to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %neg.i, ptr %diff.i, align 2
  %42 = ptrtoint ptr %38 to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %next_proto, ptr %38, align 2
  %43 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %43, align 8
  %call.i = call i32 @csum_partial(ptr noundef nonnull %diff.i, i32 noundef 4, i32 noundef %45) #20
  %46 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %call.i, ptr %43, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %diff.i) #20
  br label %skb_mod_eth_type.exit

skb_mod_eth_type.exit:                            ; preds = %if.then.i59, %if.then18.skb_mod_eth_type.exit_crit_edge
  %h_proto4.i = getelementptr inbounds %struct.ethhdr, ptr %add.ptr20, i32 0, i32 2
  %47 = ptrtoint ptr %h_proto4.i to i32
  call void @__asan_storeN_noabort(i32 %47, i32 2)
  store i16 %next_proto, ptr %h_proto4.i, align 1
  br label %if.end21

if.end21:                                         ; preds = %skb_mod_eth_type.exit, %__skb_pull.exit.if.end21_crit_edge
  %48 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %next_proto, ptr %protocol, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end21 ], [ 0, %entry.cleanup_crit_edge ], [ %call3, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_mpls_update_lse(ptr noundef %skb, i32 noundef %mpls_lse) #0 align 64 {
entry:
  %diff = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %0 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %protocol, align 8
  %2 = add i16 %1, 30649
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %2)
  %3 = icmp ult i16 %2, 2
  br i1 %3, label %if.end, label %entry.cleanup_crit_edge, !prof !374

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %mac_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %4 = ptrtoint ptr %mac_len to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %mac_len, align 4
  %conv = zext i16 %5 to i32
  %add = add nuw nsw i32 %conv, 4
  %call3 = tail call i32 @skb_ensure_writable(ptr noundef %skb, i32 noundef %add)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end12, label %if.end.cleanup_crit_edge, !prof !374

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end12:                                         ; preds = %if.end
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %6 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %6)
  %bf.load = load i16, ptr %ip_summed, align 8
  %7 = and i16 %bf.load, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %7)
  %cmp = icmp eq i16 %7, 1024
  br i1 %cmp, label %if.then15, label %if.end12.if.end18_crit_edge

if.end12.if.end18_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %diff) #20
  %8 = getelementptr inbounds [2 x i32], ptr %diff, i32 0, i32 1
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %9 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %11 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %12 to i32
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %conv.i.i
  %13 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %add.ptr.i.i, align 4
  %neg = xor i32 %14, -1
  %15 = ptrtoint ptr %diff to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %neg, ptr %diff, align 4
  %16 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %mpls_lse, ptr %8, align 4
  %17 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 8
  %call17 = call i32 @csum_partial(ptr noundef nonnull %diff, i32 noundef 8, i32 noundef %19) #20
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call17, ptr %17, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %diff) #20
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.end12.if.end18_crit_edge
  %head.i.i30 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %21 = ptrtoint ptr %head.i.i30 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %head.i.i30, align 8
  %network_header.i.i31 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %23 = ptrtoint ptr %network_header.i.i31 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %network_header.i.i31, align 4
  %conv.i.i32 = zext i16 %24 to i32
  %add.ptr.i.i33 = getelementptr i8, ptr %22, i32 %conv.i.i32
  %25 = ptrtoint ptr %add.ptr.i.i33 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %mpls_lse, ptr %add.ptr.i.i33, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end18 ], [ -22, %entry.cleanup_crit_edge ], [ %call3, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @csum_partial(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @skb_mpls_dec_ttl(ptr noundef %skb) #0 align 64 {
entry:
  %diff.i = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 18
  %0 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %protocol, align 8
  %2 = add i16 %1, 30649
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %2)
  %3 = icmp ult i16 %2, 2
  br i1 %3, label %if.end, label %entry.cleanup_crit_edge, !prof !374

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %4 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %6 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %7 to i32
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 %conv.i.i
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %8 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %9 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %add = add i32 %sub.ptr.sub.i, 4
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %10 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %12 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %11, %13
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %sub.i.i)
  %cmp.not.i = icmp ugt i32 %add, %sub.i.i
  br i1 %cmp.not.i, label %if.end.i, label %if.end.if.end6_crit_edge, !prof !373

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %add)
  %cmp3.i = icmp ult i32 %11, %add
  br i1 %cmp3.i, label %if.end.i.cleanup_crit_edge, label %pskb_may_pull.exit, !prof !373

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

pskb_may_pull.exit:                               ; preds = %if.end.i
  %sub.i = sub i32 %add, %sub.i.i
  %call13.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i) #20
  %cmp14.i.not = icmp eq ptr %call13.i, null
  br i1 %cmp14.i.not, label %pskb_may_pull.exit.cleanup_crit_edge, label %pskb_may_pull.exit.if.end6_crit_edge

pskb_may_pull.exit.if.end6_crit_edge:             ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

pskb_may_pull.exit.cleanup_crit_edge:             ; preds = %pskb_may_pull.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6:                                          ; preds = %pskb_may_pull.exit.if.end6_crit_edge, %if.end.if.end6_crit_edge
  %14 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %head.i.i, align 8
  %16 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i25 = zext i16 %17 to i32
  %add.ptr.i.i26 = getelementptr i8, ptr %15, i32 %conv.i.i25
  %18 = ptrtoint ptr %add.ptr.i.i26 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %add.ptr.i.i26, align 4
  %conv = trunc i32 %19 to i8
  %dec = add i8 %conv, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %dec)
  %tobool8.not = icmp eq i8 %dec, 0
  br i1 %tobool8.not, label %if.end6.cleanup_crit_edge, label %if.end10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  %and11 = and i32 %19, -256
  %conv12 = zext i8 %dec to i32
  %or = or i32 %and11, %conv12
  %20 = ptrtoint ptr %protocol to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %protocol, align 8
  %22 = add i16 %21, 30649
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %22)
  %23 = icmp ult i16 %22, 2
  br i1 %23, label %if.end.i27, label %if.end10.cleanup_crit_edge, !prof !374

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i27:                                       ; preds = %if.end10
  %mac_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 8
  %24 = ptrtoint ptr %mac_len.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %mac_len.i, align 4
  %conv.i = zext i16 %25 to i32
  %add.i = add nuw nsw i32 %conv.i, 4
  %call3.i = tail call i32 @skb_ensure_writable(ptr noundef %skb, i32 noundef %add.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end12.i, label %if.end.i27.cleanup_crit_edge, !prof !374

if.end.i27.cleanup_crit_edge:                     ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end12.i:                                       ; preds = %if.end.i27
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %26 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %27 = and i16 %bf.load.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1024, i16 %27)
  %cmp.i = icmp eq i16 %27, 1024
  br i1 %cmp.i, label %if.then15.i, label %if.end12.i.if.end18.i_crit_edge

if.end12.i.if.end18.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end18.i

if.then15.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %diff.i) #20
  %28 = getelementptr inbounds [2 x i32], ptr %diff.i, i32 0, i32 1
  %29 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %head.i.i, align 8
  %31 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i.i = zext i16 %32 to i32
  %add.ptr.i.i.i = getelementptr i8, ptr %30, i32 %conv.i.i.i
  %33 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %add.ptr.i.i.i, align 4
  %neg.i = xor i32 %34, -1
  %35 = ptrtoint ptr %diff.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %neg.i, ptr %diff.i, align 4
  %36 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %or, ptr %28, align 4
  %37 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %37, align 8
  %call17.i = call i32 @csum_partial(ptr noundef nonnull %diff.i, i32 noundef 8, i32 noundef %39) #20
  %40 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %call17.i, ptr %37, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %diff.i) #20
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then15.i, %if.end12.i.if.end18.i_crit_edge
  %41 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %head.i.i, align 8
  %43 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i32.i = zext i16 %44 to i32
  %add.ptr.i.i33.i = getelementptr i8, ptr %42, i32 %conv.i.i32.i
  %45 = ptrtoint ptr %add.ptr.i.i33.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %or, ptr %add.ptr.i.i33.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end18.i, %if.end.i27.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %pskb_may_pull.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -12, %pskb_may_pull.exit.cleanup_crit_edge ], [ -22, %if.end6.cleanup_crit_edge ], [ 0, %if.end18.i ], [ -22, %if.end10.cleanup_crit_edge ], [ %call3.i, %if.end.i27.cleanup_crit_edge ], [ -12, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_skb_with_frags(i32 noundef %header_len, i32 noundef %data_len, i32 noundef %max_page_order, ptr nocapture noundef writeonly %errcode, i32 noundef %gfp_mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %data_len, 4095
  %shr = lshr i32 %add, 12
  %0 = ptrtoint ptr %errcode to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -90, ptr %errcode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 73727, i32 %add)
  %cmp = icmp ugt i32 %add, 73727
  br i1 %cmp, label %entry.cleanup23_crit_edge, label %if.end

entry.cleanup23_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup23

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %errcode to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -105, ptr %errcode, align 4
  %call.i = tail call ptr @__alloc_skb(i32 noundef %header_len, i32 noundef %gfp_mask, i32 noundef 0, i32 noundef -1) #20
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %if.end.cleanup23_crit_edge, label %if.end2

if.end.cleanup23_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup23

if.end2:                                          ; preds = %if.end
  %shl = and i32 %add, -4096
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 20
  %2 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %truesize, align 8
  %add3 = add i32 %3, %shl
  store i32 %add3, ptr %truesize, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add)
  %cmp468.not = icmp ult i32 %add, 4096
  br i1 %cmp468.not, label %if.end2.cleanup23_crit_edge, label %while.cond.preheader.lr.ph

if.end2.cleanup23_crit_edge:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup23

while.cond.preheader.lr.ph:                       ; preds = %if.end2
  %and = and i32 %gfp_mask, -271361
  %or9 = or i32 %and, 270336
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 17
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 12
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %for.inc.while.cond.preheader_crit_edge, %while.cond.preheader.lr.ph
  %i.072 = phi i32 [ 0, %while.cond.preheader.lr.ph ], [ %inc, %for.inc.while.cond.preheader_crit_edge ]
  %npages.071 = phi i32 [ %shr, %while.cond.preheader.lr.ph ], [ %sub22, %for.inc.while.cond.preheader_crit_edge ]
  %data_len.addr.070 = phi i32 [ %data_len, %while.cond.preheader.lr.ph ], [ %sub, %for.inc.while.cond.preheader_crit_edge ]
  %max_page_order.addr.069 = phi i32 [ %max_page_order, %while.cond.preheader.lr.ph ], [ %max_page_order.addr.163, %for.inc.while.cond.preheader_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_page_order.addr.069)
  %tobool5.not64 = icmp eq i32 %max_page_order.addr.069, 0
  br i1 %tobool5.not64, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body:                                       ; preds = %if.end14.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %order.066 = phi i32 [ %dec, %if.end14.while.body_crit_edge ], [ %max_page_order.addr.069, %while.cond.preheader.while.body_crit_edge ]
  %shl6 = shl nuw i32 1, %order.066
  call void @__sanitizer_cov_trace_cmp4(i32 %npages.071, i32 %shl6)
  %cmp7.not = icmp slt i32 %npages.071, %shl6
  br i1 %cmp7.not, label %if.end14, label %if.then8

if.then8:                                         ; preds = %while.body
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef %or9, i32 noundef %order.066, i32 noundef 0, ptr noundef null) #20
  %tobool11.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool11.not, label %if.then8.while.end_crit_edge, label %if.then8.fill_page_crit_edge

if.then8.fill_page_crit_edge:                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  br label %fill_page

if.then8.while.end_crit_edge:                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

if.end14:                                         ; preds = %while.body
  %dec = add i32 %order.066, -1
  %tobool5.not = icmp eq i32 %dec, 0
  br i1 %tobool5.not, label %if.end14.while.end_crit_edge, label %if.end14.while.body_crit_edge

if.end14.while.body_crit_edge:                    ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

if.end14.while.end_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %if.end14.while.end_crit_edge, %if.then8.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %max_page_order.addr.1.lcssa = phi i32 [ 0, %while.cond.preheader.while.end_crit_edge ], [ 0, %if.then8.while.end_crit_edge ], [ %max_page_order.addr.069, %if.end14.while.end_crit_edge ]
  %call38.i.i.i53 = tail call ptr @__alloc_pages(i32 noundef %gfp_mask, i32 noundef 0, i32 noundef 0, ptr noundef null) #20
  %tobool16.not = icmp eq ptr %call38.i.i.i53, null
  br i1 %tobool16.not, label %failure, label %while.end.fill_page_crit_edge

while.end.fill_page_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %fill_page

fill_page:                                        ; preds = %while.end.fill_page_crit_edge, %if.then8.fill_page_crit_edge
  %max_page_order.addr.163 = phi i32 [ %max_page_order.addr.1.lcssa, %while.end.fill_page_crit_edge ], [ %max_page_order.addr.069, %if.then8.fill_page_crit_edge ]
  %order.061 = phi i32 [ 0, %while.end.fill_page_crit_edge ], [ %order.066, %if.then8.fill_page_crit_edge ]
  %page.0 = phi ptr [ %call38.i.i.i53, %while.end.fill_page_crit_edge ], [ %call38.i.i.i, %if.then8.fill_page_crit_edge ]
  %shl19 = shl i32 4096, %order.061
  %4 = tail call i32 @llvm.umin.i32(i32 %data_len.addr.070, i32 %shl19)
  %5 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %end.i.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.skb_shared_info, ptr %6, i32 0, i32 12, i32 %i.072
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %page.0, ptr %arrayidx.i.i, align 4
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %6, i32 0, i32 12, i32 %i.072, i32 2
  %8 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %bv_offset.i.i, align 4
  %bv_len.i.i.i = getelementptr %struct.skb_shared_info, ptr %6, i32 0, i32 12, i32 %i.072, i32 1
  %9 = ptrtoint ptr %bv_len.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %4, ptr %bv_len.i.i.i, align 4
  %10 = getelementptr inbounds %struct.page, ptr %page.0, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !374

if.then.i.i.i:                                    ; preds = %fill_page
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i = add i32 %12, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %fill_page
  call void @__sanitizer_cov_trace_pc() #22
  %13 = ptrtoint ptr %page.0 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %13, %if.end.i.i.i ]
  %14 = inttoptr i32 %retval.0.i.i.i to ptr
  %15 = getelementptr inbounds %struct.page, ptr %14, i32 0, i32 1
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %18 = ptrtoint ptr %17 to i32
  %and.i8.i.i = and i32 %18, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i8.i.i, 0
  br i1 %tobool.i.not.i.i, label %_compound_head.exit.i.i.for.inc_crit_edge, label %if.then.i.i

_compound_head.exit.i.i.for.inc_crit_edge:        ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then.i.i:                                      ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %19 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %bf.set.i.i = or i8 %bf.load.i.i, 2
  store i8 %bf.set.i.i, ptr %pfmemalloc.i.i, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.then.i.i, %_compound_head.exit.i.i.for.inc_crit_edge
  %20 = trunc i32 %i.072 to i8
  %conv.i = add i8 %20, 1
  %21 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %end.i.i.i, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %conv.i, ptr %nr_frags.i, align 2
  %sub = sub i32 %data_len.addr.070, %4
  %shl21.neg = shl nsw i32 -1, %order.061
  %sub22 = add i32 %shl21.neg, %npages.071
  %inc = add i32 %i.072, 1
  %cmp4 = icmp sgt i32 %sub22, 0
  br i1 %cmp4, label %for.inc.while.cond.preheader_crit_edge, label %for.inc.cleanup23_crit_edge

for.inc.cleanup23_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup23

for.inc.while.cond.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond.preheader

failure:                                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef nonnull %call.i)
  br label %cleanup23

cleanup23:                                        ; preds = %failure, %for.inc.cleanup23_crit_edge, %if.end2.cleanup23_crit_edge, %if.end.cleanup23_crit_edge, %entry.cleanup23_crit_edge
  %retval.0 = phi ptr [ null, %failure ], [ null, %entry.cleanup23_crit_edge ], [ null, %if.end.cleanup23_crit_edge ], [ %call.i, %if.end2.cleanup23_crit_edge ], [ %call.i, %for.inc.cleanup23_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pskb_extract(ptr noundef %skb, i32 noundef %off, i32 noundef %to_copy, i32 noundef %gfp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @skb_clone(ptr noundef %skb, i32 noundef %gfp)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @pskb_carve(ptr noundef nonnull %call, i32 noundef %off, i32 noundef %gfp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.end.if.then4_crit_edge, label %lor.lhs.false

if.end.if.then4_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then4

lor.lhs.false:                                    ; preds = %if.end
  %len1.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 6
  %0 = ptrtoint ptr %len1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %to_copy)
  %cmp.i = icmp ugt i32 %1, %to_copy
  br i1 %cmp.i, label %cond.true.i, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

cond.true.i:                                      ; preds = %lor.lhs.false
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i.i, label %__skb_trim.exit.i.i, label %pskb_trim.exit

__skb_trim.exit.i.i:                              ; preds = %cond.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %4 = ptrtoint ptr %len1.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %to_copy, ptr %len1.i, align 4
  %data.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 19
  %5 = ptrtoint ptr %data.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data.i.i.i.i.i, align 4
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %6, i32 %to_copy
  %tail.i.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 16
  %7 = ptrtoint ptr %tail.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr.i.i.i.i.i, ptr %tail.i.i.i.i.i, align 8
  br label %cleanup

pskb_trim.exit:                                   ; preds = %cond.true.i
  %call.i.i = tail call i32 @___pskb_trim(ptr noundef nonnull %call, i32 noundef %to_copy) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool3.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool3.not, label %pskb_trim.exit.cleanup_crit_edge, label %pskb_trim.exit.if.then4_crit_edge

pskb_trim.exit.if.then4_crit_edge:                ; preds = %pskb_trim.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then4

pskb_trim.exit.cleanup_crit_edge:                 ; preds = %pskb_trim.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then4:                                         ; preds = %pskb_trim.exit.if.then4_crit_edge, %if.end.if.then4_crit_edge
  tail call fastcc void @kfree_skb(ptr noundef nonnull %call)
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %pskb_trim.exit.cleanup_crit_edge, %__skb_trim.exit.i.i, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then4 ], [ null, %entry.cleanup_crit_edge ], [ %call, %pskb_trim.exit.cleanup_crit_edge ], [ %call, %lor.lhs.false.cleanup_crit_edge ], [ %call, %__skb_trim.exit.i.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pskb_carve(ptr noundef %skb, i32 noundef %len, i32 noundef %gfp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %2 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %1, %3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %len)
  %cmp = icmp ugt i32 %sub.i, %len
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call1 = tail call fastcc i32 @pskb_carve_inside_header(ptr noundef %skb, i32 noundef %len, i32 noundef %sub.i, i32 noundef %gfp)
  br label %cleanup

if.else:                                          ; preds = %entry
  %end.i59 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %4 = ptrtoint ptr %end.i59 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %end.i59, align 4
  %head.i60 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %6 = ptrtoint ptr %head.i60 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %head.i60, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %5 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %7 to i32
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %5, i32 0, i32 2
  %8 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %nr_frags.i, align 2
  %conv.i = zext i8 %9 to i32
  %pfmemalloc.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %10 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load.i57 = load i8, ptr %pfmemalloc.i, align 2
  %11 = and i8 %bf.load.i57, 2
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 16
  %14 = or i32 %13, %gfp
  %sub.ptr.sub.i = add i32 %sub.ptr.lhs.cast.i, 383
  %15 = sub i32 %sub.ptr.sub.i, %sub.ptr.rhs.cast.i
  %add3.i = and i32 %15, -128
  %or1.i = or i32 %14, 532480
  %16 = tail call ptr @llvm.returnaddress(i32 0) #20
  %17 = ptrtoint ptr %16 to i32
  %call.i52 = tail call ptr @__kmalloc_track_caller(i32 noundef %add3.i, i32 noundef %or1.i, i32 noundef %17) #20
  %tobool.not.i53 = icmp eq ptr %call.i52, null
  br i1 %tobool.not.i53, label %lor.lhs.false.i, label %if.else.if.end6.i_crit_edge

if.else.if.end6.i_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6.i

lor.lhs.false.i:                                  ; preds = %if.else
  %call2.i54 = tail call zeroext i1 @gfp_pfmemalloc_allowed(i32 noundef %14) #20
  br i1 %call2.i54, label %kmalloc_reserve.exit, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

kmalloc_reserve.exit:                             ; preds = %lor.lhs.false.i
  %call3.i = tail call ptr @__kmalloc_track_caller(i32 noundef %add3.i, i32 noundef %14, i32 noundef %17) #20
  %tobool.not.i = icmp eq ptr %call3.i, null
  br i1 %tobool.not.i, label %kmalloc_reserve.exit.cleanup_crit_edge, label %kmalloc_reserve.exit.if.end6.i_crit_edge

kmalloc_reserve.exit.if.end6.i_crit_edge:         ; preds = %kmalloc_reserve.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6.i

kmalloc_reserve.exit.cleanup_crit_edge:           ; preds = %kmalloc_reserve.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6.i:                                        ; preds = %kmalloc_reserve.exit.if.end6.i_crit_edge, %if.else.if.end6.i_crit_edge
  %obj.0.i67 = phi ptr [ %call3.i, %kmalloc_reserve.exit.if.end6.i_crit_edge ], [ %call.i52, %if.else.if.end6.i_crit_edge ]
  %call7.i = tail call i32 @ksize(ptr noundef nonnull %obj.0.i67) #20
  %sub.i10 = add i32 %call7.i, -256
  %add.ptr.i = getelementptr i8, ptr %obj.0.i67, i32 %sub.i10
  %18 = ptrtoint ptr %end.i59 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %end.i59, align 4
  %20 = call ptr @memcpy(ptr %add.ptr.i, ptr %19, i32 40)
  %tobool.not.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i, label %if.end6.i.for.cond.i.preheader_crit_edge, label %land.rhs.i.i

if.end6.i.for.cond.i.preheader_crit_edge:         ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i.preheader

land.rhs.i.i:                                     ; preds = %if.end6.i
  %21 = ptrtoint ptr %end.i59 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %end.i59, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %22, align 8
  %25 = and i8 %24, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool1.not.i.i = icmp eq i8 %25, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.for.cond.i.preheader_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.for.cond.i.preheader_crit_edge:      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i.preheader

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %22, i32 0, i32 11
  %26 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i45 = icmp eq ptr %27, null
  br i1 %tobool.not.i45, label %skb_zcopy.exit.i.for.cond.i.preheader_crit_edge, label %if.end.i46, !prof !374

skb_zcopy.exit.i.for.cond.i.preheader_crit_edge:  ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i.preheader

if.end.i46:                                       ; preds = %skb_zcopy.exit.i
  %28 = ptrtoint ptr %27 to i32
  %and.i.i = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %land.lhs.true.i48, label %if.end.i46.skb_orphan_frags.exit_crit_edge

if.end.i46.skb_orphan_frags.exit_crit_edge:       ; preds = %if.end.i46
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i48:                                ; preds = %if.end.i46
  %29 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %27, align 4
  %cmp.i47 = icmp eq ptr %30, @msg_zerocopy_callback
  br i1 %cmp.i47, label %land.lhs.true.i48.for.cond.i.preheader_crit_edge, label %land.lhs.true.i48.skb_orphan_frags.exit_crit_edge

land.lhs.true.i48.skb_orphan_frags.exit_crit_edge: ; preds = %land.lhs.true.i48
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_orphan_frags.exit

land.lhs.true.i48.for.cond.i.preheader_crit_edge: ; preds = %land.lhs.true.i48
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i.preheader

skb_orphan_frags.exit:                            ; preds = %land.lhs.true.i48.skb_orphan_frags.exit_crit_edge, %if.end.i46.skb_orphan_frags.exit_crit_edge
  %call8.i49 = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb, i32 noundef %14) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i49)
  %tobool10.not.i = icmp eq i32 %call8.i49, 0
  br i1 %tobool10.not.i, label %skb_orphan_frags.exit.for.cond.i.preheader_crit_edge, label %if.then11.i

skb_orphan_frags.exit.for.cond.i.preheader_crit_edge: ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i.preheader

for.cond.i.preheader:                             ; preds = %skb_orphan_frags.exit.for.cond.i.preheader_crit_edge, %land.lhs.true.i48.for.cond.i.preheader_crit_edge, %skb_zcopy.exit.i.for.cond.i.preheader_crit_edge, %land.rhs.i.i.for.cond.i.preheader_crit_edge, %if.end6.i.for.cond.i.preheader_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %cmp.i78.not = icmp eq i8 %9, 0
  br i1 %cmp.i78.not, label %for.cond.i.preheader.for.end.i_crit_edge, label %for.body.i.lr.ph

for.cond.i.preheader.for.end.i_crit_edge:         ; preds = %for.cond.i.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.body.i.lr.ph:                                 ; preds = %for.cond.i.preheader
  %frags21.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr.i, i32 0, i32 12
  %bv_offset.i = getelementptr inbounds %struct.bio_vec, ptr %frags21.i, i32 0, i32 2
  %bv_len.i = getelementptr inbounds %struct.bio_vec, ptr %frags21.i, i32 0, i32 1
  br label %for.body.i

if.then11.i:                                      ; preds = %skb_orphan_frags.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef nonnull %obj.0.i67) #20
  br label %cleanup

for.body.i:                                       ; preds = %if.end36.i.for.body.i_crit_edge, %for.body.i.lr.ph
  %k.0.i82 = phi i32 [ 0, %for.body.i.lr.ph ], [ %k.1.i, %if.end36.i.for.body.i_crit_edge ]
  %i.0.i80 = phi i32 [ 0, %for.body.i.lr.ph ], [ %inc38.i, %if.end36.i.for.body.i_crit_edge ]
  %pos.addr.0.i79 = phi i32 [ %sub.i, %for.body.i.lr.ph ], [ %add17.i, %if.end36.i.for.body.i_crit_edge ]
  %31 = ptrtoint ptr %end.i59 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %end.i59, align 4
  %bv_len.i43 = getelementptr %struct.skb_shared_info, ptr %32, i32 0, i32 12, i32 %i.0.i80, i32 1
  %33 = ptrtoint ptr %bv_len.i43 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %bv_len.i43, align 4
  %add17.i = add i32 %34, %pos.addr.0.i79
  call void @__sanitizer_cov_trace_cmp4(i32 %add17.i, i32 %len)
  %cmp18.i = icmp ugt i32 %add17.i, %len
  br i1 %cmp18.i, label %if.then20.i, label %for.body.i.if.end36.i_crit_edge

for.body.i.if.end36.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end36.i

if.then20.i:                                      ; preds = %for.body.i
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %32, i32 0, i32 12, i32 %i.0.i80
  %arrayidx22.i = getelementptr [17 x %struct.bio_vec], ptr %frags21.i, i32 0, i32 %k.0.i82
  %35 = call ptr @memcpy(ptr %arrayidx22.i, ptr %arrayidx.i, i32 12)
  call void @__sanitizer_cov_trace_cmp4(i32 %pos.addr.0.i79, i32 %len)
  %cmp26.i = icmp ult i32 %pos.addr.0.i79, %len
  br i1 %cmp26.i, label %if.then28.i, label %if.then20.i.if.end35.i_crit_edge

if.then20.i.if.end35.i_crit_edge:                 ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end35.i

if.then28.i:                                      ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub31.i = sub i32 %len, %pos.addr.0.i79
  %36 = ptrtoint ptr %bv_offset.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %bv_offset.i, align 4
  %add.i = add i32 %37, %sub31.i
  store i32 %add.i, ptr %bv_offset.i, align 4
  %38 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %bv_len.i, align 4
  %sub.i41 = sub i32 %39, %sub31.i
  store i32 %sub.i41, ptr %bv_len.i, align 4
  br label %if.end35.i

if.end35.i:                                       ; preds = %if.then28.i, %if.then20.i.if.end35.i_crit_edge
  %40 = ptrtoint ptr %end.i59 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %end.i59, align 4
  %arrayidx.i40 = getelementptr %struct.skb_shared_info, ptr %41, i32 0, i32 12, i32 %i.0.i80
  %42 = ptrtoint ptr %arrayidx.i40 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx.i40, align 4
  %44 = getelementptr inbounds %struct.page, ptr %43, i32 0, i32 1
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %44, align 4
  %and.i.i.i.i = and i32 %46, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i, !prof !374

if.then.i.i.i.i:                                  ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i.i = add i32 %46, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #22
  %47 = ptrtoint ptr %43 to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i ], [ %47, %if.end.i.i.i.i ]
  %48 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %48, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  %49 = ptrtoint ptr %_refcount.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %_refcount.i.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %50, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, 128
  br i1 %cmp.i.i.i.i, label %if.then.i1.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i1.i.i.i:                                 ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %51 = inttoptr i32 %retval.0.i.i.i.i to ptr
  tail call void @dump_page(ptr noundef %51, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i.i.i
  %call.i.i.i.i9.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %52 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i.i, ptr %_refcount.i.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@pskb_carve, %if.then.i.i.i.i.i.i)) #20
          to label %skb_frag_ref.exit [label %if.then.i.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i.i:                              ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %48, i32 noundef 1) #20
  br label %skb_frag_ref.exit

skb_frag_ref.exit:                                ; preds = %if.then.i.i.i.i.i.i, %do.end5.i.i.i.i
  %inc.i = add i32 %k.0.i82, 1
  br label %if.end36.i

if.end36.i:                                       ; preds = %skb_frag_ref.exit, %for.body.i.if.end36.i_crit_edge
  %k.1.i = phi i32 [ %inc.i, %skb_frag_ref.exit ], [ %k.0.i82, %for.body.i.if.end36.i_crit_edge ]
  %inc38.i = add nuw nsw i32 %i.0.i80, 1
  %exitcond.not = icmp eq i32 %inc38.i, %conv.i
  br i1 %exitcond.not, label %if.end36.i.for.end.i_crit_edge, label %if.end36.i.for.body.i_crit_edge

if.end36.i.for.body.i_crit_edge:                  ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

if.end36.i.for.end.i_crit_edge:                   ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.end.i:                                        ; preds = %if.end36.i.for.end.i_crit_edge, %for.cond.i.preheader.for.end.i_crit_edge
  %pos.addr.0.i.lcssa = phi i32 [ %sub.i, %for.cond.i.preheader.for.end.i_crit_edge ], [ %add17.i, %if.end36.i.for.end.i_crit_edge ]
  %k.0.i.lcssa = phi i32 [ 0, %for.cond.i.preheader.for.end.i_crit_edge ], [ %k.1.i, %if.end36.i.for.end.i_crit_edge ]
  %conv39.i = trunc i32 %k.0.i.lcssa to i8
  %nr_frags40.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr.i, i32 0, i32 2
  %53 = ptrtoint ptr %nr_frags40.i to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %conv39.i, ptr %nr_frags40.i, align 2
  %54 = ptrtoint ptr %end.i59 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %end.i59, align 4
  %frag_list.i37 = getelementptr inbounds %struct.skb_shared_info, ptr %55, i32 0, i32 6
  %56 = ptrtoint ptr %frag_list.i37 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %frag_list.i37, align 8
  %cmp.i38.not = icmp eq ptr %57, null
  br i1 %cmp.i38.not, label %for.end.i.if.end43.i_crit_edge, label %for.end.i.for.body.i32_crit_edge

for.end.i.for.body.i32_crit_edge:                 ; preds = %for.end.i
  br label %for.body.i32

for.end.i.if.end43.i_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43.i

for.body.i32:                                     ; preds = %skb_get.exit.i.for.body.i32_crit_edge, %for.end.i.for.body.i32_crit_edge
  %list.06.i = phi ptr [ %list.0.i33, %skb_get.exit.i.for.body.i32_crit_edge ], [ %57, %for.end.i.for.body.i32_crit_edge ]
  %users.i.i31 = getelementptr inbounds %struct.sk_buff, ptr %list.06.i, i32 0, i32 21
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i.i31, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %users.i.i31, i32 1, i32 3, i32 1) #20
  %58 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i.i31, ptr %users.i.i31, i32 1, ptr elementtype(i32) %users.i.i31) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %58, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %for.body.i32.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !373

for.body.i32.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %for.body.i32
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %for.body.i32
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %59 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %59)
  %.not.i.i.i.i.i = icmp sgt i32 %59, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.skb_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.skb_get.exit.i_crit_edge:       ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_get.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %for.body.i32.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %for.body.i32.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %users.i.i31, i32 noundef %.sink.i.i.i.i.i) #20
  br label %skb_get.exit.i

skb_get.exit.i:                                   ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.skb_get.exit.i_crit_edge
  %60 = ptrtoint ptr %list.06.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %list.0.i33 = load ptr, ptr %list.06.i, align 8
  %tobool.not.i34 = icmp eq ptr %list.0.i33, null
  br i1 %tobool.not.i34, label %skb_get.exit.i.if.end43.i_crit_edge, label %skb_get.exit.i.for.body.i32_crit_edge

skb_get.exit.i.for.body.i32_crit_edge:            ; preds = %skb_get.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i32

skb_get.exit.i.if.end43.i_crit_edge:              ; preds = %skb_get.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end43.i

if.end43.i:                                       ; preds = %skb_get.exit.i.if.end43.i_crit_edge, %for.end.i.if.end43.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %k.0.i.lcssa)
  %cmp44.i = icmp eq i32 %k.0.i.lcssa, 0
  br i1 %cmp44.i, label %land.lhs.true.i, label %if.end43.i.if.end54.i_crit_edge

if.end43.i.if.end54.i_crit_edge:                  ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54.i

land.lhs.true.i:                                  ; preds = %if.end43.i
  %sub46.i = sub i32 %len, %pos.addr.0.i.lcssa
  %frag_list.i20 = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr.i, i32 0, i32 6
  %61 = ptrtoint ptr %frag_list.i20 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %frag_list.i20, align 8
  br label %do.body.i

do.body.i:                                        ; preds = %if.then2.i.do.body.i_crit_edge, %land.lhs.true.i
  %eat.addr.0.i = phi i32 [ %sub46.i, %land.lhs.true.i ], [ %sub.i25, %if.then2.i.do.body.i_crit_edge ]
  %list.0.i = phi ptr [ %62, %land.lhs.true.i ], [ %66, %if.then2.i.do.body.i_crit_edge ]
  %tobool.not.i21 = icmp eq ptr %list.0.i, null
  br i1 %tobool.not.i21, label %do.end.i, label %if.end.i24

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.43, i32 noundef %eat.addr.0.i) #23
  br label %if.then49.i

if.end.i24:                                       ; preds = %do.body.i
  %len.i23 = getelementptr inbounds %struct.sk_buff, ptr %list.0.i, i32 0, i32 6
  %63 = ptrtoint ptr %len.i23 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %len.i23, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %eat.addr.0.i, i32 %64)
  %cmp.not.i = icmp ult i32 %eat.addr.0.i, %64
  br i1 %cmp.not.i, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i24
  %sub.i25 = sub i32 %eat.addr.0.i, %64
  %65 = ptrtoint ptr %list.0.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %list.0.i, align 8
  %tobool20.not.i = icmp eq i32 %sub.i25, 0
  br i1 %tobool20.not.i, label %if.then2.i.do.end21.i_crit_edge, label %if.then2.i.do.body.i_crit_edge

if.then2.i.do.body.i_crit_edge:                   ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

if.then2.i.do.end21.i_crit_edge:                  ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end21.i

if.else.i:                                        ; preds = %if.end.i24
  %users.i.i = getelementptr inbounds %struct.sk_buff, ptr %list.0.i, i32 0, i32 21
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %users.i.i, i32 noundef 4) #20
  %67 = ptrtoint ptr %users.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %users.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %68)
  %cmp.i.i.not = icmp eq i32 %68, 1
  br i1 %cmp.i.i.not, label %if.else.i.if.end13.i_crit_edge, label %if.then6.i

if.else.i.if.end13.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13.i

if.then6.i:                                       ; preds = %if.else.i
  %call7.i26 = tail call ptr @skb_clone(ptr noundef nonnull %list.0.i, i32 noundef %14) #20
  %tobool8.not.i = icmp eq ptr %call7.i26, null
  br i1 %tobool8.not.i, label %if.then6.i.if.then49.i_crit_edge, label %if.end10.i

if.then6.i.if.then49.i_crit_edge:                 ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then49.i

if.end10.i:                                       ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #22
  %69 = ptrtoint ptr %list.0.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %list.0.i, align 8
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.end10.i, %if.else.i.if.end13.i_crit_edge
  %list.1.i = phi ptr [ %call7.i26, %if.end10.i ], [ %list.0.i, %if.else.i.if.end13.i_crit_edge ]
  %clone.0.i = phi ptr [ %call7.i26, %if.end10.i ], [ null, %if.else.i.if.end13.i_crit_edge ]
  %insp.0.i = phi ptr [ %70, %if.end10.i ], [ %list.0.i, %if.else.i.if.end13.i_crit_edge ]
  %call14.i = tail call fastcc i32 @pskb_carve(ptr noundef nonnull %list.1.i, i32 noundef %eat.addr.0.i, i32 noundef %14) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %cmp15.i = icmp slt i32 %call14.i, 0
  br i1 %cmp15.i, label %if.then16.i, label %if.end13.i.do.end21.i_crit_edge

if.end13.i.do.end21.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end21.i

if.then16.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @kfree_skb(ptr noundef %clone.0.i) #20
  br label %if.then49.i

do.end21.i:                                       ; preds = %if.end13.i.do.end21.i_crit_edge, %if.then2.i.do.end21.i_crit_edge
  %clone.1.i = phi ptr [ %clone.0.i, %if.end13.i.do.end21.i_crit_edge ], [ null, %if.then2.i.do.end21.i_crit_edge ]
  %insp.1.i = phi ptr [ %insp.0.i, %if.end13.i.do.end21.i_crit_edge ], [ %66, %if.then2.i.do.end21.i_crit_edge ]
  %71 = ptrtoint ptr %frag_list.i20 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %frag_list.i20, align 8
  %cmp23.not.i84 = icmp eq ptr %72, %insp.1.i
  br i1 %cmp23.not.i84, label %do.end21.i.while.end.i_crit_edge, label %do.end21.i.while.body.i27_crit_edge

do.end21.i.while.body.i27_crit_edge:              ; preds = %do.end21.i
  br label %while.body.i27

do.end21.i.while.end.i_crit_edge:                 ; preds = %do.end21.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.body.i27:                                   ; preds = %while.body.i27.while.body.i27_crit_edge, %do.end21.i.while.body.i27_crit_edge
  %73 = phi ptr [ %78, %while.body.i27.while.body.i27_crit_edge ], [ %72, %do.end21.i.while.body.i27_crit_edge ]
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %73, align 8
  %76 = ptrtoint ptr %frag_list.i20 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %75, ptr %frag_list.i20, align 8
  tail call void @consume_skb(ptr noundef %73) #20
  %77 = ptrtoint ptr %frag_list.i20 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %frag_list.i20, align 8
  %cmp23.not.i = icmp eq ptr %78, %insp.1.i
  br i1 %cmp23.not.i, label %while.body.i27.while.end.i_crit_edge, label %while.body.i27.while.body.i27_crit_edge

while.body.i27.while.body.i27_crit_edge:          ; preds = %while.body.i27
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i27

while.body.i27.while.end.i_crit_edge:             ; preds = %while.body.i27
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.end.i:                                      ; preds = %while.body.i27.while.end.i_crit_edge, %do.end21.i.while.end.i_crit_edge
  %tobool26.not.i = icmp eq ptr %clone.1.i, null
  br i1 %tobool26.not.i, label %while.end.i.if.end54.i_crit_edge, label %if.then27.i

while.end.i.if.end54.i_crit_edge:                 ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end54.i

if.then27.i:                                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %79 = ptrtoint ptr %clone.1.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %insp.1.i, ptr %clone.1.i, align 8
  %80 = ptrtoint ptr %frag_list.i20 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %clone.1.i, ptr %frag_list.i20, align 8
  br label %if.end54.i

if.then49.i:                                      ; preds = %if.then16.i, %if.then6.i.if.then49.i_crit_edge, %do.end.i
  %81 = ptrtoint ptr %end.i59 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %end.i59, align 4
  %frag_list.i18 = getelementptr inbounds %struct.skb_shared_info, ptr %82, i32 0, i32 6
  %83 = ptrtoint ptr %frag_list.i18 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %frag_list.i18, align 8
  %cmp.i19.not = icmp eq ptr %84, null
  br i1 %cmp.i19.not, label %if.then49.i.if.end53.i_crit_edge, label %if.then49.i.while.body.i_crit_edge

if.then49.i.while.body.i_crit_edge:               ; preds = %if.then49.i
  br label %while.body.i

if.then49.i.if.end53.i_crit_edge:                 ; preds = %if.then49.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end53.i

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.then49.i.while.body.i_crit_edge
  %segs.addr.05.i = phi ptr [ %86, %while.body.i.while.body.i_crit_edge ], [ %84, %if.then49.i.while.body.i_crit_edge ]
  %85 = ptrtoint ptr %segs.addr.05.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %segs.addr.05.i, align 8
  tail call fastcc void @kfree_skb(ptr noundef nonnull %segs.addr.05.i) #20
  %tobool.not.i16 = icmp eq ptr %86, null
  br i1 %tobool.not.i16, label %while.body.i.if.end53.i_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body.i

while.body.i.if.end53.i_crit_edge:                ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end53.i

if.end53.i:                                       ; preds = %while.body.i.if.end53.i_crit_edge, %if.then49.i.if.end53.i_crit_edge
  tail call void @kfree(ptr noundef nonnull %obj.0.i67) #20
  br label %cleanup

if.end54.i:                                       ; preds = %if.then27.i, %while.end.i.if.end54.i_crit_edge, %if.end43.i.if.end54.i_crit_edge
  tail call fastcc void @skb_release_data(ptr noundef %skb) #20
  %87 = ptrtoint ptr %head.i60 to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %obj.0.i67, ptr %head.i60, align 8
  %88 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %88)
  %bf.load.i = load i8, ptr %pfmemalloc.i, align 2
  %data55.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %89 = ptrtoint ptr %data55.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %obj.0.i67, ptr %data55.i, align 4
  %90 = ptrtoint ptr %end.i59 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %add.ptr.i, ptr %end.i59, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %91 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %obj.0.i67, ptr %tail.i, align 8
  %hdr_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 9
  %92 = ptrtoint ptr %hdr_len.i to i32
  call void @__asan_store2_noabort(i32 %92)
  store i16 0, ptr %hdr_len.i, align 2
  %bf.clear62.i = and i8 %bf.load.i, 59
  store i8 %bf.clear62.i, ptr %pfmemalloc.i, align 2
  %93 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %len.i, align 4
  %sub64.i = sub i32 %94, %len
  store i32 %sub64.i, ptr %len.i, align 4
  %95 = ptrtoint ptr %data_len.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %sub64.i, ptr %data_len.i, align 8
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr.i, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref.i, i32 noundef 4) #20
  %96 = ptrtoint ptr %dataref.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store volatile i32 1, ptr %dataref.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end54.i, %if.end53.i, %if.then11.i, %kmalloc_reserve.exit.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %call1, %if.then ], [ -12, %if.then11.i ], [ -12, %if.end53.i ], [ 0, %if.end54.i ], [ -12, %kmalloc_reserve.exit.cleanup_crit_edge ], [ -12, %lor.lhs.false.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__skb_ext_alloc(i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @skbuff_ext_cache, align 4
  %call = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef %flags) #20
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %offset = getelementptr inbounds %struct.skb_ext, ptr %call, i32 0, i32 1
  %1 = ptrtoint ptr %offset to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %offset, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call, i32 noundef 4) #20
  %2 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 1, ptr %call, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__skb_ext_set(ptr nocapture noundef %skb, i32 noundef %id, ptr noundef %ext) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %active_extensions.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 13
  %0 = ptrtoint ptr %active_extensions.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %active_extensions.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %entry.skb_ext_put.exit_crit_edge, label %if.then.i

entry.skb_ext_put.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_ext_put.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %extensions.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %2 = ptrtoint ptr %extensions.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %extensions.i, align 8
  tail call void @__skb_ext_put(ptr noundef %3) #20
  br label %skb_ext_put.exit

skb_ext_put.exit:                                 ; preds = %if.then.i, %entry.skb_ext_put.exit_crit_edge
  %arrayidx = getelementptr [4 x i8], ptr @skb_ext_type_len, i32 0, i32 %id
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx, align 1
  %add = add i8 %5, 2
  %chunks = getelementptr inbounds %struct.skb_ext, ptr %ext, i32 0, i32 2
  %6 = ptrtoint ptr %chunks to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %add, ptr %chunks, align 8
  %arrayidx3 = getelementptr %struct.skb_ext, ptr %ext, i32 0, i32 1, i32 %id
  %7 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 2, ptr %arrayidx3, align 1
  %extensions = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %8 = ptrtoint ptr %extensions to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %ext, ptr %extensions, align 8
  %shl = shl nuw i32 1, %id
  %conv4 = trunc i32 %shl to i8
  %9 = ptrtoint ptr %active_extensions.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %conv4, ptr %active_extensions.i, align 1
  %10 = load i8, ptr %arrayidx3, align 1
  %conv.i = zext i8 %10 to i32
  %mul.i = shl nuw nsw i32 %conv.i, 3
  %add.ptr.i = getelementptr i8, ptr %ext, i32 %mul.i
  ret ptr %add.ptr.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @skb_ext_add(ptr nocapture noundef %skb, i32 noundef %id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %active_extensions = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 13
  %0 = ptrtoint ptr %active_extensions to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %active_extensions, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %extensions = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %2 = ptrtoint ptr %extensions to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %extensions, align 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %3, i32 noundef 4) #20
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp eq i32 %5, 1
  br i1 %cmp.i, label %if.then.skb_ext_maybe_cow.exit_crit_edge, label %if.end.i

if.then.skb_ext_maybe_cow.exit_crit_edge:         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_ext_maybe_cow.exit

if.end.i:                                         ; preds = %if.then
  %6 = load ptr, ptr @skbuff_ext_cache, align 4
  %call1.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %6, i32 noundef 2592) #20
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %if.end.i.cleanup_crit_edge, label %if.end3.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  %chunks.i = getelementptr inbounds %struct.skb_ext, ptr %3, i32 0, i32 2
  %7 = ptrtoint ptr %chunks.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %chunks.i, align 8
  %conv.i = zext i8 %8 to i32
  %mul.i = shl nuw nsw i32 %conv.i, 3
  %9 = call ptr @memcpy(ptr %call1.i, ptr %3, i32 %mul.i)
  %call.i.i.i22.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call1.i, i32 noundef 4) #20
  %10 = ptrtoint ptr %call1.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile i32 1, ptr %call1.i, align 8
  %11 = and i8 %1, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool5.not.i = icmp eq i8 %11, 0
  br i1 %tobool5.not.i, label %if.end3.i.if.end10.i_crit_edge, label %if.then6.i

if.end3.i.if.end10.i_crit_edge:                   ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10.i

if.then6.i:                                       ; preds = %if.end3.i
  %arrayidx.i.i = getelementptr %struct.skb_ext, ptr %3, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.i.i, align 1
  %conv.i.i = zext i8 %13 to i32
  %mul.i.i = shl nuw nsw i32 %conv.i.i, 3
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 %mul.i.i
  %14 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %add.ptr.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp823.not.i = icmp eq i32 %15, 0
  br i1 %cmp823.not.i, label %if.then6.i.if.end10.i_crit_edge, label %if.then6.i.for.body.i_crit_edge

if.then6.i.for.body.i_crit_edge:                  ; preds = %if.then6.i
  br label %for.body.i

if.then6.i.if.end10.i_crit_edge:                  ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10.i

for.body.i:                                       ; preds = %xfrm_state_hold.exit.i.for.body.i_crit_edge, %if.then6.i.for.body.i_crit_edge
  %i.024.i = phi i32 [ %inc.i, %xfrm_state_hold.exit.i.for.body.i_crit_edge ], [ 0, %if.then6.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.sec_path, ptr %add.ptr.i.i, i32 0, i32 2, i32 %i.024.i
  %16 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %arrayidx.i, align 4
  %refcnt.i.i = getelementptr inbounds %struct.xfrm_state, ptr %17, i32 0, i32 5
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #20
  %18 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !373

for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %for.body.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %19 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %.not.i.i.i.i.i = icmp sgt i32 %19, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.xfrm_state_hold.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.xfrm_state_hold.exit.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %xfrm_state_hold.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #20
  br label %xfrm_state_hold.exit.i

xfrm_state_hold.exit.i:                           ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.xfrm_state_hold.exit.i_crit_edge
  %inc.i = add nuw i32 %i.024.i, 1
  %20 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %add.ptr.i.i, align 4
  %cmp8.i = icmp ult i32 %inc.i, %21
  br i1 %cmp8.i, label %xfrm_state_hold.exit.i.for.body.i_crit_edge, label %xfrm_state_hold.exit.i.if.end10.i_crit_edge

xfrm_state_hold.exit.i.if.end10.i_crit_edge:      ; preds = %xfrm_state_hold.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end10.i

xfrm_state_hold.exit.i.for.body.i_crit_edge:      ; preds = %xfrm_state_hold.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

if.end10.i:                                       ; preds = %xfrm_state_hold.exit.i.if.end10.i_crit_edge, %if.then6.i.if.end10.i_crit_edge, %if.end3.i.if.end10.i_crit_edge
  tail call void @__skb_ext_put(ptr noundef %3) #20
  br label %skb_ext_maybe_cow.exit

skb_ext_maybe_cow.exit:                           ; preds = %if.end10.i, %if.then.skb_ext_maybe_cow.exit_crit_edge
  %retval.0.i = phi ptr [ %call1.i, %if.end10.i ], [ %3, %if.then.skb_ext_maybe_cow.exit_crit_edge ]
  %tobool2.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool2.not, label %skb_ext_maybe_cow.exit.cleanup_crit_edge, label %if.end

skb_ext_maybe_cow.exit.cleanup_crit_edge:         ; preds = %skb_ext_maybe_cow.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %skb_ext_maybe_cow.exit
  %arrayidx.i43 = getelementptr %struct.skb_ext, ptr %retval.0.i, i32 0, i32 1, i32 %id
  %22 = ptrtoint ptr %arrayidx.i43 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx.i43, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.i.not = icmp eq i8 %23, 0
  br i1 %tobool.i.not, label %if.end6, label %if.end.set_active_crit_edge

if.end.set_active_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %set_active

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %chunks = getelementptr inbounds %struct.skb_ext, ptr %retval.0.i, i32 0, i32 2
  %24 = ptrtoint ptr %chunks to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %chunks, align 8
  br label %if.end12

if.else:                                          ; preds = %entry
  %26 = load ptr, ptr @skbuff_ext_cache, align 4
  %call.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %26, i32 noundef 2592) #20
  %tobool.not.i44 = icmp eq ptr %call.i, null
  br i1 %tobool.not.i44, label %if.else.cleanup_crit_edge, label %__skb_ext_alloc.exit

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

__skb_ext_alloc.exit:                             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %offset.i = getelementptr inbounds %struct.skb_ext, ptr %call.i, i32 0, i32 1
  %27 = ptrtoint ptr %offset.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %offset.i, align 4
  %call.i.i.i.i45 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i, i32 noundef 4) #20
  %28 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile i32 1, ptr %call.i, align 8
  br label %if.end12

if.end12:                                         ; preds = %__skb_ext_alloc.exit, %if.end6
  %new.0 = phi ptr [ %retval.0.i, %if.end6 ], [ %call.i, %__skb_ext_alloc.exit ]
  %newoff.0 = phi i8 [ %25, %if.end6 ], [ 2, %__skb_ext_alloc.exit ]
  %arrayidx = getelementptr [4 x i8], ptr @skb_ext_type_len, i32 0, i32 %id
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx, align 1
  %conv14 = add i8 %30, %newoff.0
  %chunks15 = getelementptr inbounds %struct.skb_ext, ptr %new.0, i32 0, i32 2
  %31 = ptrtoint ptr %chunks15 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %conv14, ptr %chunks15, align 8
  %arrayidx17 = getelementptr %struct.skb_ext, ptr %new.0, i32 0, i32 1, i32 %id
  %32 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %newoff.0, ptr %arrayidx17, align 1
  br label %set_active

set_active:                                       ; preds = %if.end12, %if.end.set_active_crit_edge
  %new.1 = phi ptr [ %retval.0.i, %if.end.set_active_crit_edge ], [ %new.0, %if.end12 ]
  %slow_gro = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %33 = ptrtoint ptr %slow_gro to i32
  call void @__asan_loadN_noabort(i32 %33, i32 4)
  %bf.load = load i32, ptr %slow_gro, align 2
  %bf.set = or i32 %bf.load, 4096
  store i32 %bf.set, ptr %slow_gro, align 2
  %extensions18 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %34 = ptrtoint ptr %extensions18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %new.1, ptr %extensions18, align 8
  %shl = shl nuw i32 1, %id
  %35 = ptrtoint ptr %active_extensions to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %active_extensions, align 1
  %37 = trunc i32 %shl to i8
  %conv21 = or i8 %36, %37
  store i8 %conv21, ptr %active_extensions, align 1
  %arrayidx.i47 = getelementptr %struct.skb_ext, ptr %new.1, i32 0, i32 1, i32 %id
  %38 = ptrtoint ptr %arrayidx.i47 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %arrayidx.i47, align 1
  %conv.i48 = zext i8 %39 to i32
  %mul.i49 = shl nuw nsw i32 %conv.i48, 3
  %add.ptr.i = getelementptr i8, ptr %new.1, i32 %mul.i49
  br label %cleanup

cleanup:                                          ; preds = %set_active, %if.else.cleanup_crit_edge, %skb_ext_maybe_cow.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  %retval.0 = phi ptr [ %add.ptr.i, %set_active ], [ null, %skb_ext_maybe_cow.exit.cleanup_crit_edge ], [ null, %if.end.i.cleanup_crit_edge ], [ null, %if.else.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__skb_ext_del(ptr nocapture noundef %skb, i32 noundef %id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %extensions = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %0 = ptrtoint ptr %extensions to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %extensions, align 8
  %shl = shl nuw i32 1, %id
  %active_extensions = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 13
  %2 = ptrtoint ptr %active_extensions to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %active_extensions, align 1
  %4 = trunc i32 %shl to i8
  %5 = xor i8 %4, -1
  %conv1 = and i8 %3, %5
  store i8 %conv1, ptr %active_extensions, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %conv1)
  %cmp = icmp eq i8 %conv1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %6 = ptrtoint ptr %extensions to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %extensions, align 8
  tail call void @__skb_ext_put(ptr noundef %1)
  br label %if.end12

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %id)
  %cmp6 = icmp eq i32 %id, 1
  br i1 %cmp6, label %land.lhs.true, label %if.else.if.end12_crit_edge

if.else.if.end12_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

land.lhs.true:                                    ; preds = %if.else
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %1, i32 noundef 4) #20
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp8 = icmp eq i32 %8, 1
  br i1 %cmp8, label %if.then10, label %land.lhs.true.if.end12_crit_edge

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.then10:                                        ; preds = %land.lhs.true
  %arrayidx.i = getelementptr %struct.skb_ext, ptr %1, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %10 to i32
  %mul.i = shl nuw nsw i32 %conv.i, 3
  %add.ptr.i = getelementptr i8, ptr %1, i32 %mul.i
  %11 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp4.not.i = icmp eq i32 %12, 0
  br i1 %cmp4.not.i, label %if.then10.skb_ext_put_sp.exit_crit_edge, label %if.then10.for.body.i_crit_edge

if.then10.for.body.i_crit_edge:                   ; preds = %if.then10
  br label %for.body.i

if.then10.skb_ext_put_sp.exit_crit_edge:          ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_ext_put_sp.exit

for.body.i:                                       ; preds = %xfrm_state_put.exit.i.for.body.i_crit_edge, %if.then10.for.body.i_crit_edge
  %i.05.i = phi i32 [ %inc.i, %xfrm_state_put.exit.i.for.body.i_crit_edge ], [ 0, %if.then10.for.body.i_crit_edge ]
  %arrayidx.i20 = getelementptr %struct.sec_path, ptr %add.ptr.i, i32 0, i32 2, i32 %i.05.i
  %13 = ptrtoint ptr %arrayidx.i20 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx.i20, align 4
  %refcnt.i.i = getelementptr inbounds %struct.xfrm_state, ptr %14, i32 0, i32 5
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #20
  %15 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %15, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.xfrm_state_put.exit.i_crit_edge, label %if.then10.i.i.i.i.i, !prof !374

if.end5.i.i.i.i.i.xfrm_state_put.exit.i_crit_edge: ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %xfrm_state_put.exit.i

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef 3) #20
  br label %xfrm_state_put.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  tail call void @__xfrm_state_destroy(ptr noundef %14, i1 noundef zeroext false) #20
  br label %xfrm_state_put.exit.i

xfrm_state_put.exit.i:                            ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.xfrm_state_put.exit.i_crit_edge
  %inc.i = add nuw i32 %i.05.i, 1
  %16 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %add.ptr.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %17
  br i1 %cmp.i, label %xfrm_state_put.exit.i.for.body.i_crit_edge, label %xfrm_state_put.exit.i.skb_ext_put_sp.exit_crit_edge

xfrm_state_put.exit.i.skb_ext_put_sp.exit_crit_edge: ; preds = %xfrm_state_put.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_ext_put_sp.exit

xfrm_state_put.exit.i.for.body.i_crit_edge:       ; preds = %xfrm_state_put.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

skb_ext_put_sp.exit:                              ; preds = %xfrm_state_put.exit.i.skb_ext_put_sp.exit_crit_edge, %if.then10.skb_ext_put_sp.exit_crit_edge
  %18 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %add.ptr.i, align 4
  br label %if.end12

if.end12:                                         ; preds = %skb_ext_put_sp.exit, %land.lhs.true.if.end12_crit_edge, %if.else.if.end12_crit_edge, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__skb_ext_put(ptr noundef %ext) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %ext, i32 noundef 4) #20
  %0 = ptrtoint ptr %ext to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %ext, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %entry.free_now_crit_edge, label %if.end

entry.free_now_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_now

if.end:                                           ; preds = %entry
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ext, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %ext, i32 1, i32 3, i32 1) #20
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ext, ptr %ext, i32 1, ptr elementtype(i32) %ext) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %refcount_dec_and_test.exit, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.return_crit_edge, label %if.then10.i.i.i, !prof !374

if.end5.i.i.i.return_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %ext, i32 noundef 3) #20
  br label %return

refcount_dec_and_test.exit:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  br label %free_now

free_now:                                         ; preds = %refcount_dec_and_test.exit, %entry.free_now_crit_edge
  %arrayidx.i = getelementptr %struct.skb_ext, ptr %ext, i32 0, i32 1, i32 1
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.i.not = icmp eq i8 %4, 0
  br i1 %tobool.i.not, label %free_now.if.end8_crit_edge, label %if.then6

free_now.if.end8_crit_edge:                       ; preds = %free_now
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then6:                                         ; preds = %free_now
  %conv.i = zext i8 %4 to i32
  %mul.i = shl nuw nsw i32 %conv.i, 3
  %add.ptr.i = getelementptr i8, ptr %ext, i32 %mul.i
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %add.ptr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp4.not.i = icmp eq i32 %6, 0
  br i1 %cmp4.not.i, label %if.then6.if.end8_crit_edge, label %if.then6.for.body.i_crit_edge

if.then6.for.body.i_crit_edge:                    ; preds = %if.then6
  br label %for.body.i

if.then6.if.end8_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

for.body.i:                                       ; preds = %xfrm_state_put.exit.i.for.body.i_crit_edge, %if.then6.for.body.i_crit_edge
  %i.05.i = phi i32 [ %inc.i, %xfrm_state_put.exit.i.for.body.i_crit_edge ], [ 0, %if.then6.for.body.i_crit_edge ]
  %arrayidx.i14 = getelementptr %struct.sec_path, ptr %add.ptr.i, i32 0, i32 2, i32 %i.05.i
  %7 = ptrtoint ptr %arrayidx.i14 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i14, align 4
  %refcnt.i.i = getelementptr inbounds %struct.xfrm_state, ptr %8, i32 0, i32 5
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !379
  tail call void @llvm.prefetch.p0(ptr %refcnt.i.i, i32 1, i32 3, i32 1) #20
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcnt.i.i, ptr %refcnt.i.i, i32 1, ptr elementtype(i32) %refcnt.i.i) #20, !srcloc !380
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.xfrm_state_put.exit.i_crit_edge, label %if.then10.i.i.i.i.i, !prof !374

if.end5.i.i.i.i.i.xfrm_state_put.exit.i_crit_edge: ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %xfrm_state_put.exit.i

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @refcount_warn_saturate(ptr noundef %refcnt.i.i, i32 noundef 3) #20
  br label %xfrm_state_put.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !381
  tail call void @__xfrm_state_destroy(ptr noundef %8, i1 noundef zeroext false) #20
  br label %xfrm_state_put.exit.i

xfrm_state_put.exit.i:                            ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.xfrm_state_put.exit.i_crit_edge
  %inc.i = add nuw i32 %i.05.i, 1
  %10 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %add.ptr.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %11
  br i1 %cmp.i, label %xfrm_state_put.exit.i.for.body.i_crit_edge, label %xfrm_state_put.exit.i.if.end8_crit_edge

xfrm_state_put.exit.i.if.end8_crit_edge:          ; preds = %xfrm_state_put.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

xfrm_state_put.exit.i.for.body.i_crit_edge:       ; preds = %xfrm_state_put.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

if.end8:                                          ; preds = %xfrm_state_put.exit.i.if.end8_crit_edge, %if.then6.if.end8_crit_edge, %free_now.if.end8_crit_edge
  %12 = load ptr, ptr @skbuff_ext_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %12, ptr noundef %ext) #20
  br label %return

return:                                           ; preds = %if.end8, %if.then10.i.i.i, %if.end5.i.i.i.return_crit_edge
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #18

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_disable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__local_bh_enable_ip(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @kcov_common_handle() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kmem_cache_alloc_bulk(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kasan_unpoison_object_data(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmalloc_track_caller(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @gfp_pfmemalloc_allowed(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_frag_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dst_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @nf_conntrack_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_kfree_skb(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_local_page_prot(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_local_indexed(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_consume_skb(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free_bulk(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kasan_poison_object_data(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_any(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_bh_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @page_pool_return_skb_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__sock_wfree(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_wfree(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @spd_fill_page(ptr nocapture noundef %spd, ptr noundef %page, ptr nocapture noundef %len, i32 noundef %offset, i1 noundef zeroext %linear, ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %nr_pages = getelementptr inbounds %struct.splice_pipe_desc, ptr %spd, i32 0, i32 2
  %0 = ptrtoint ptr %nr_pages to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 17, i32 %1)
  %cmp = icmp eq i32 %1, 17
  br i1 %cmp, label %entry.return_crit_edge, label %if.end, !prof !373

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %entry
  br i1 %linear, label %if.then3, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

if.then3:                                         ; preds = %if.end
  %sk_allocation.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 41
  %2 = ptrtoint ptr %sk_allocation.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sk_allocation.i.i, align 8
  %and.i.i = and i32 %3, 132224
  call void @__sanitizer_cov_trace_const_cmp4(i32 1152, i32 %and.i.i)
  %cmp.i.i = icmp eq i32 %and.i.i, 1152
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #22
  %4 = tail call i32 @llvm.read_register.i32(metadata !362) #20
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i.i, align 8
  %task_frag.i.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 180
  br label %sk_page_frag.exit.i

if.end.i.i:                                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #22
  %sk_frag.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 37
  br label %sk_page_frag.exit.i

sk_page_frag.exit.i:                              ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %task_frag.i.i, %if.then.i.i ], [ %sk_frag.i.i, %if.end.i.i ]
  %call1.i = tail call zeroext i1 @sk_page_frag_refill(ptr noundef %sk, ptr noundef %retval.0.i.i) #20
  br i1 %call1.i, label %linear_to_page.exit, label %sk_page_frag.exit.i.return_crit_edge

sk_page_frag.exit.i.return_crit_edge:             ; preds = %sk_page_frag.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

linear_to_page.exit:                              ; preds = %sk_page_frag.exit.i
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  %size.i = getelementptr inbounds %struct.page_frag, ptr %retval.0.i.i, i32 0, i32 2
  %10 = ptrtoint ptr %size.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %size.i, align 2
  %conv.i = zext i16 %11 to i32
  %offset2.i = getelementptr inbounds %struct.page_frag, ptr %retval.0.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %offset2.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %offset2.i, align 4
  %conv3.i = zext i16 %13 to i32
  %sub.i = sub nsw i32 %conv.i, %conv3.i
  %14 = tail call i32 @llvm.umin.i32(i32 %9, i32 %sub.i) #20
  %15 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %len, align 4
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 4
  %call6.i = tail call ptr @page_address(ptr noundef %17) #20
  %18 = ptrtoint ptr %offset2.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %offset2.i, align 4
  %conv8.i = zext i16 %19 to i32
  %add.ptr.i = getelementptr i8, ptr %call6.i, i32 %conv8.i
  %call9.i = tail call ptr @page_address(ptr noundef %page) #20
  %add.ptr10.i = getelementptr i8, ptr %call9.i, i32 %offset
  %20 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %len, align 4
  %22 = call ptr @memcpy(ptr %add.ptr.i, ptr %add.ptr10.i, i32 %21)
  %23 = ptrtoint ptr %offset2.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %offset2.i, align 4
  %25 = load i32, ptr %len, align 4
  %26 = trunc i32 %25 to i16
  %conv15.i = add i16 %24, %26
  store i16 %conv15.i, ptr %offset2.i, align 4
  %27 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %retval.0.i.i, align 4
  %tobool4.not = icmp eq ptr %28, null
  br i1 %tobool4.not, label %linear_to_page.exit.return_crit_edge, label %if.end7thread-pre-split

linear_to_page.exit.return_crit_edge:             ; preds = %linear_to_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end7thread-pre-split:                          ; preds = %linear_to_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  %conv12.i = zext i16 %24 to i32
  %29 = ptrtoint ptr %nr_pages to i32
  call void @__asan_load4_noabort(i32 %29)
  %.pr = load i32, ptr %nr_pages, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.end7thread-pre-split, %if.end.if.end7_crit_edge
  %30 = phi i32 [ %.pr, %if.end7thread-pre-split ], [ %1, %if.end.if.end7_crit_edge ]
  %offset.addr.1 = phi i32 [ %conv12.i, %if.end7thread-pre-split ], [ %offset, %if.end.if.end7_crit_edge ]
  %page.addr.0 = phi ptr [ %28, %if.end7thread-pre-split ], [ %page, %if.end.if.end7_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not.i = icmp eq i32 %30, 0
  br i1 %tobool.not.i, label %if.end7.if.end12_crit_edge, label %land.lhs.true.i

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

land.lhs.true.i:                                  ; preds = %if.end7
  %31 = ptrtoint ptr %spd to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %spd, align 4
  %sub.i1 = add i32 %30, -1
  %arrayidx.i = getelementptr ptr, ptr %32, i32 %sub.i1
  %33 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx.i, align 4
  %cmp.i = icmp eq ptr %34, %page.addr.0
  br i1 %cmp.i, label %spd_can_coalesce.exit, label %land.lhs.true.i.if.end12_crit_edge

land.lhs.true.i.if.end12_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

spd_can_coalesce.exit:                            ; preds = %land.lhs.true.i
  %partial.i = getelementptr inbounds %struct.splice_pipe_desc, ptr %spd, i32 0, i32 1
  %35 = ptrtoint ptr %partial.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %partial.i, align 4
  %arrayidx4.i = getelementptr %struct.partial_page, ptr %36, i32 %sub.i1
  %37 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx4.i, align 4
  %len.i = getelementptr %struct.partial_page, ptr %36, i32 %sub.i1, i32 1
  %39 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %len.i, align 4
  %add.i = add i32 %40, %38
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %offset.addr.1)
  %cmp10.i = icmp eq i32 %add.i, %offset.addr.1
  br i1 %cmp10.i, label %if.then9, label %spd_can_coalesce.exit.if.end12_crit_edge

spd_can_coalesce.exit.if.end12_crit_edge:         ; preds = %spd_can_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.then9:                                         ; preds = %spd_can_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #22
  %41 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %len, align 4
  %43 = ptrtoint ptr %partial.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %partial.i, align 4
  %len11 = getelementptr %struct.partial_page, ptr %44, i32 %sub.i1, i32 1
  br label %return.sink.split

if.end12:                                         ; preds = %spd_can_coalesce.exit.if.end12_crit_edge, %land.lhs.true.i.if.end12_crit_edge, %if.end7.if.end12_crit_edge
  %45 = getelementptr inbounds %struct.page, ptr %page.addr.0, i32 0, i32 1
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  %and.i.i2 = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i2)
  %tobool.not.i.i = icmp eq i32 %and.i.i2, 0
  br i1 %tobool.not.i.i, label %if.end.i.i4, label %if.then.i.i3, !prof !374

if.then.i.i3:                                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %47, -1
  br label %_compound_head.exit.i

if.end.i.i4:                                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  %48 = ptrtoint ptr %page.addr.0 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i4, %if.then.i.i3
  %retval.0.i.i5 = phi i32 [ %sub.i.i, %if.then.i.i3 ], [ %48, %if.end.i.i4 ]
  %49 = inttoptr i32 %retval.0.i.i5 to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %49, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  %50 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %51, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i6 = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i6, label %if.then.i1.i, label %do.end5.i.i, !prof !373

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @dump_page(ptr noundef %49, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #20
  %52 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@spd_fill_page, %if.then.i.i.i.i)) #20
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !376

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %49, i32 noundef 1) #20
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %53 = ptrtoint ptr %spd to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %spd, align 4
  %55 = ptrtoint ptr %nr_pages to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %nr_pages, align 4
  %arrayidx14 = getelementptr ptr, ptr %54, i32 %56
  %57 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %page.addr.0, ptr %arrayidx14, align 4
  %58 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %len, align 4
  %partial15 = getelementptr inbounds %struct.splice_pipe_desc, ptr %spd, i32 0, i32 1
  %60 = ptrtoint ptr %partial15 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %partial15, align 4
  %62 = load i32, ptr %nr_pages, align 4
  %len18 = getelementptr %struct.partial_page, ptr %61, i32 %62, i32 1
  %63 = ptrtoint ptr %len18 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %59, ptr %len18, align 4
  %64 = load ptr, ptr %partial15, align 4
  %65 = load i32, ptr %nr_pages, align 4
  %arrayidx21 = getelementptr %struct.partial_page, ptr %64, i32 %65
  %66 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %offset.addr.1, ptr %arrayidx21, align 4
  br label %return.sink.split

return.sink.split:                                ; preds = %get_page.exit, %if.then9
  %nr_pages.sink13 = phi ptr [ %nr_pages, %get_page.exit ], [ %len11, %if.then9 ]
  %.sink12 = phi i32 [ 1, %get_page.exit ], [ %42, %if.then9 ]
  %67 = ptrtoint ptr %nr_pages.sink13 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %nr_pages.sink13, align 4
  %inc = add i32 %68, %.sink12
  store i32 %inc, ptr %nr_pages.sink13, align 4
  br label %return

return:                                           ; preds = %return.sink.split, %linear_to_page.exit.return_crit_edge, %sk_page_frag.exit.i.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ true, %entry.return_crit_edge ], [ true, %linear_to_page.exit.return_crit_edge ], [ true, %sk_page_frag.exit.i.return_crit_edge ], [ false, %return.sink.split ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sk_page_frag_refill(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_sendmsg(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_sendpage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @warn_crc32c_csum_update(ptr nocapture noundef readnone %buff, i32 noundef %len, i32 noundef %sum) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @net_ratelimit() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.39) #23
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @warn_crc32c_csum_combine(i32 noundef %csum, i32 noundef %csum2, i32 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @net_ratelimit() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.40) #23
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pfn_valid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @file_ns_capable(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_with_offset(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @skb_checksum_setup_ip(ptr noundef %skb, i32 noundef %proto, i32 noundef %off) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %proto to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.67)
  switch i32 %proto, label %entry.cleanup_crit_edge [
    i32 6, label %sw.bb
    i32 17, label %sw.bb6
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %add = add i32 %off, 20
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %1 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %len.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %3 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i = sub i32 %2, %4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %add)
  %cmp.not.i = icmp ult i32 %sub.i.i, %add
  br i1 %cmp.not.i, label %if.end.i, label %sw.bb.land.lhs.true_crit_edge

sw.bb.land.lhs.true_crit_edge:                    ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

if.end.i:                                         ; preds = %sw.bb
  %add1 = add i32 %off, 60
  %5 = tail call i32 @llvm.umin.i32(i32 %2, i32 %add1) #20
  %sub.i = sub i32 %5, %sub.i.i
  %call7.i = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i) #20
  %cmp8.i = icmp eq ptr %call7.i, null
  br i1 %cmp8.i, label %if.end.i.cleanup_crit_edge, label %if.end10.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end10.i:                                       ; preds = %if.end.i
  %6 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len.i.i, align 4
  %8 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %data_len.i.i, align 8
  %sub.i27.i = sub i32 %7, %9
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i27.i, i32 %add)
  %cmp12.i = icmp ult i32 %sub.i27.i, %add
  br i1 %cmp12.i, label %if.end10.i.cleanup_crit_edge, label %if.end10.i.land.lhs.true_crit_edge

if.end10.i.land.lhs.true_crit_edge:               ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

if.end10.i.cleanup_crit_edge:                     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end10.i.land.lhs.true_crit_edge, %sw.bb.land.lhs.true_crit_edge
  %conv = trunc i32 %off to i16
  %conv.i = and i32 %off, 65535
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %10 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i.i, align 4
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %12 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %11 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %13 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %add4.i = add i32 %sub.ptr.sub.i.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %add4.i)
  %cmp.i = icmp ugt i32 %add4.i, 65535
  br i1 %cmp.i, label %land.lhs.true.do.body.i_crit_edge, label %lor.end.i, !prof !373

land.lhs.true.do.body.i_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

lor.end.i:                                        ; preds = %land.lhs.true
  %add2.i = add nuw nsw i32 %conv.i, 18
  %14 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %len.i.i, align 4
  %16 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %data_len.i.i, align 8
  %sub.i.i43 = sub i32 %15, %17
  call void @__sanitizer_cov_trace_cmp4(i32 %add2.i, i32 %sub.i.i43)
  %cmp7.i = icmp ugt i32 %add2.i, %sub.i.i43
  br i1 %cmp7.i, label %lor.end.i.do.body.i_crit_edge, label %cond.false, !prof !373

lor.end.i.do.body.i_crit_edge:                    ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

do.body.i:                                        ; preds = %lor.end.i.do.body.i_crit_edge, %land.lhs.true.do.body.i_crit_edge
  %call10.i = tail call i32 @net_ratelimit() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %do.body.i.cleanup_crit_edge, label %do.end.i

do.body.i.cleanup_crit_edge:                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %18 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %data.i.i, align 4
  %20 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %head.i.i, align 8
  %sub.ptr.lhs.cast.i41.i = ptrtoint ptr %19 to i32
  %sub.ptr.rhs.cast.i42.i = ptrtoint ptr %21 to i32
  %sub.ptr.sub.i43.i = sub i32 %sub.ptr.lhs.cast.i41.i, %sub.ptr.rhs.cast.i42.i
  %22 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %len.i.i, align 4
  %24 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %data_len.i.i, align 8
  %sub.i46.i = sub i32 %23, %25
  %call18.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.21, i32 noundef %conv.i, i32 noundef 16, i32 noundef %sub.ptr.sub.i43.i, i32 noundef %sub.i46.i) #23
  br label %cleanup

cond.false:                                       ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %26 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %bf.set.i = or i16 %bf.load.i, 1536
  store i16 %bf.set.i, ptr %ip_summed.i, align 8
  %conv22.i = trunc i32 %add4.i to i16
  %27 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %conv22.i, ptr %27, align 8
  %csum_offset.i = getelementptr inbounds %struct.anon.36, ptr %27, i32 0, i32 1
  %29 = ptrtoint ptr %csum_offset.i to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 16, ptr %csum_offset.i, align 2
  %conv.i.i.i = trunc i32 %sub.ptr.sub.i.i to i16
  %transport_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %conv1.i.i = add i16 %conv.i.i.i, %conv
  %30 = ptrtoint ptr %transport_header.i.i.i to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %conv1.i.i, ptr %transport_header.i.i.i, align 2
  %31 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %head.i.i, align 8
  %conv.i.i = zext i16 %conv1.i.i to i32
  %add.ptr.i.i = getelementptr i8, ptr %32, i32 %conv.i.i
  %check = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i, i32 0, i32 6
  br label %cleanup

sw.bb6:                                           ; preds = %entry
  %add7 = add i32 %off, 8
  %len.i.i45 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %33 = ptrtoint ptr %len.i.i45 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %len.i.i45, align 4
  %data_len.i.i46 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %35 = ptrtoint ptr %data_len.i.i46 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %data_len.i.i46, align 8
  %sub.i.i47 = sub i32 %34, %36
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i47, i32 %add7)
  %cmp.not.i48 = icmp ult i32 %sub.i.i47, %add7
  br i1 %cmp.not.i48, label %if.end.i52, label %sw.bb6.land.lhs.true11_crit_edge

sw.bb6.land.lhs.true11_crit_edge:                 ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true11

if.end.i52:                                       ; preds = %sw.bb6
  %37 = tail call i32 @llvm.umin.i32(i32 %34, i32 %add7) #20
  %sub.i49 = sub i32 %37, %sub.i.i47
  %call7.i50 = tail call ptr @__pskb_pull_tail(ptr noundef %skb, i32 noundef %sub.i49) #20
  %cmp8.i51 = icmp eq ptr %call7.i50, null
  br i1 %cmp8.i51, label %if.end.i52.cleanup_crit_edge, label %if.end10.i56

if.end.i52.cleanup_crit_edge:                     ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end10.i56:                                     ; preds = %if.end.i52
  %38 = ptrtoint ptr %len.i.i45 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %len.i.i45, align 4
  %40 = ptrtoint ptr %data_len.i.i46 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %data_len.i.i46, align 8
  %sub.i27.i53 = sub i32 %39, %41
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i27.i53, i32 %add7)
  %cmp12.i54 = icmp ult i32 %sub.i27.i53, %add7
  br i1 %cmp12.i54, label %if.end10.i56.cleanup_crit_edge, label %if.end10.i56.land.lhs.true11_crit_edge

if.end10.i56.land.lhs.true11_crit_edge:           ; preds = %if.end10.i56
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true11

if.end10.i56.cleanup_crit_edge:                   ; preds = %if.end10.i56
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

land.lhs.true11:                                  ; preds = %if.end10.i56.land.lhs.true11_crit_edge, %sw.bb6.land.lhs.true11_crit_edge
  %conv12 = trunc i32 %off to i16
  %conv.i59 = and i32 %off, 65535
  %data.i.i60 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %42 = ptrtoint ptr %data.i.i60 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %data.i.i60, align 4
  %head.i.i61 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %44 = ptrtoint ptr %head.i.i61 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %head.i.i61, align 8
  %sub.ptr.lhs.cast.i.i62 = ptrtoint ptr %43 to i32
  %sub.ptr.rhs.cast.i.i63 = ptrtoint ptr %45 to i32
  %sub.ptr.sub.i.i64 = sub i32 %sub.ptr.lhs.cast.i.i62, %sub.ptr.rhs.cast.i.i63
  %add4.i65 = add i32 %sub.ptr.sub.i.i64, %conv.i59
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %add4.i65)
  %cmp.i66 = icmp ugt i32 %add4.i65, 65535
  br i1 %cmp.i66, label %land.lhs.true11.do.body.i76_crit_edge, label %lor.end.i73, !prof !373

land.lhs.true11.do.body.i76_crit_edge:            ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i76

lor.end.i73:                                      ; preds = %land.lhs.true11
  %add2.i68 = add nuw nsw i32 %conv.i59, 8
  %46 = ptrtoint ptr %len.i.i45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %len.i.i45, align 4
  %48 = ptrtoint ptr %data_len.i.i46 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %data_len.i.i46, align 8
  %sub.i.i71 = sub i32 %47, %49
  call void @__sanitizer_cov_trace_cmp4(i32 %add2.i68, i32 %sub.i.i71)
  %cmp7.i72 = icmp ugt i32 %add2.i68, %sub.i.i71
  br i1 %cmp7.i72, label %lor.end.i73.do.body.i76_crit_edge, label %cond.false19, !prof !373

lor.end.i73.do.body.i76_crit_edge:                ; preds = %lor.end.i73
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i76

do.body.i76:                                      ; preds = %lor.end.i73.do.body.i76_crit_edge, %land.lhs.true11.do.body.i76_crit_edge
  %call10.i74 = tail call i32 @net_ratelimit() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i74)
  %tobool11.not.i75 = icmp eq i32 %call10.i74, 0
  br i1 %tobool11.not.i75, label %do.body.i76.cleanup_crit_edge, label %do.end.i84

do.body.i76.cleanup_crit_edge:                    ; preds = %do.body.i76
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.end.i84:                                       ; preds = %do.body.i76
  call void @__sanitizer_cov_trace_pc() #22
  %50 = ptrtoint ptr %data.i.i60 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %data.i.i60, align 4
  %52 = ptrtoint ptr %head.i.i61 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %head.i.i61, align 8
  %sub.ptr.lhs.cast.i41.i77 = ptrtoint ptr %51 to i32
  %sub.ptr.rhs.cast.i42.i78 = ptrtoint ptr %53 to i32
  %sub.ptr.sub.i43.i79 = sub i32 %sub.ptr.lhs.cast.i41.i77, %sub.ptr.rhs.cast.i42.i78
  %54 = ptrtoint ptr %len.i.i45 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %len.i.i45, align 4
  %56 = ptrtoint ptr %data_len.i.i46 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %data_len.i.i46, align 8
  %sub.i46.i82 = sub i32 %55, %57
  %call18.i83 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.21, i32 noundef %conv.i59, i32 noundef 6, i32 noundef %sub.ptr.sub.i43.i79, i32 noundef %sub.i46.i82) #23
  br label %cleanup

cond.false19:                                     ; preds = %lor.end.i73
  call void @__sanitizer_cov_trace_pc() #22
  %ip_summed.i85 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %58 = ptrtoint ptr %ip_summed.i85 to i32
  call void @__asan_load2_noabort(i32 %58)
  %bf.load.i86 = load i16, ptr %ip_summed.i85, align 8
  %bf.set.i87 = or i16 %bf.load.i86, 1536
  store i16 %bf.set.i87, ptr %ip_summed.i85, align 8
  %conv22.i88 = trunc i32 %add4.i65 to i16
  %59 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 %conv22.i88, ptr %59, align 8
  %csum_offset.i89 = getelementptr inbounds %struct.anon.36, ptr %59, i32 0, i32 1
  %61 = ptrtoint ptr %csum_offset.i89 to i32
  call void @__asan_store2_noabort(i32 %61)
  store i16 6, ptr %csum_offset.i89, align 2
  %conv.i.i.i90 = trunc i32 %sub.ptr.sub.i.i64 to i16
  %transport_header.i.i.i91 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %conv1.i.i92 = add i16 %conv.i.i.i90, %conv12
  %62 = ptrtoint ptr %transport_header.i.i.i91 to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %conv1.i.i92, ptr %transport_header.i.i.i91, align 2
  %63 = ptrtoint ptr %head.i.i61 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %head.i.i61, align 8
  %conv.i.i97 = zext i16 %conv1.i.i92 to i32
  %add.ptr.i.i98 = getelementptr i8, ptr %64, i32 %conv.i.i97
  %check21 = getelementptr inbounds %struct.udphdr, ptr %add.ptr.i.i98, i32 0, i32 3
  br label %cleanup

cleanup:                                          ; preds = %cond.false19, %do.end.i84, %do.body.i76.cleanup_crit_edge, %if.end10.i56.cleanup_crit_edge, %if.end.i52.cleanup_crit_edge, %cond.false, %do.end.i, %do.body.i.cleanup_crit_edge, %if.end10.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %check, %cond.false ], [ %check21, %cond.false19 ], [ inttoptr (i32 -71 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.i.cleanup_crit_edge ], [ inttoptr (i32 -71 to ptr), %if.end10.i.cleanup_crit_edge ], [ inttoptr (i32 -71 to ptr), %do.body.i.cleanup_crit_edge ], [ inttoptr (i32 -71 to ptr), %do.end.i ], [ inttoptr (i32 -12 to ptr), %if.end.i52.cleanup_crit_edge ], [ inttoptr (i32 -71 to ptr), %if.end10.i56.cleanup_crit_edge ], [ inttoptr (i32 -71 to ptr), %do.body.i76.cleanup_crit_edge ], [ inttoptr (i32 -71 to ptr), %do.end.i84 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__csum_ipv6_magic(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pskb_carve_inside_header(ptr noundef %skb, i32 noundef %off, i32 noundef %headlen, i32 noundef %gfp_mask) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i, align 4
  %head.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i, align 8
  %sub.ptr.lhs.cast.i = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %3 to i32
  %sub = sub i32 %headlen, %off
  %pfmemalloc.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %4 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i = load i8, ptr %pfmemalloc.i, align 2
  %5 = and i8 %bf.load.i, 2
  %6 = zext i8 %5 to i32
  %7 = shl nuw nsw i32 %6, 16
  %8 = or i32 %7, %gfp_mask
  %sub.ptr.sub.i = add i32 %sub.ptr.lhs.cast.i, 383
  %9 = sub i32 %sub.ptr.sub.i, %sub.ptr.rhs.cast.i
  %add2 = and i32 %9, -128
  %or1.i = or i32 %8, 532480
  %10 = tail call ptr @llvm.returnaddress(i32 0) #20
  %11 = ptrtoint ptr %10 to i32
  %call.i = tail call ptr @__kmalloc_track_caller(i32 noundef %add2, i32 noundef %or1.i, i32 noundef %11) #20
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %entry.if.end5_crit_edge

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

lor.lhs.false.i:                                  ; preds = %entry
  %call2.i = tail call zeroext i1 @gfp_pfmemalloc_allowed(i32 noundef %8) #20
  br i1 %call2.i, label %kmalloc_reserve.exit, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

kmalloc_reserve.exit:                             ; preds = %lor.lhs.false.i
  %call3.i = tail call ptr @__kmalloc_track_caller(i32 noundef %add2, i32 noundef %8, i32 noundef %11) #20
  %tobool.not = icmp eq ptr %call3.i, null
  br i1 %tobool.not, label %kmalloc_reserve.exit.cleanup_crit_edge, label %kmalloc_reserve.exit.if.end5_crit_edge

kmalloc_reserve.exit.if.end5_crit_edge:           ; preds = %kmalloc_reserve.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

kmalloc_reserve.exit.cleanup_crit_edge:           ; preds = %kmalloc_reserve.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end5:                                          ; preds = %kmalloc_reserve.exit.if.end5_crit_edge, %entry.if.end5_crit_edge
  %obj.0.i111 = phi ptr [ %call3.i, %kmalloc_reserve.exit.if.end5_crit_edge ], [ %call.i, %entry.if.end5_crit_edge ]
  %call6 = tail call i32 @ksize(ptr noundef nonnull %obj.0.i111) #20
  %sub7 = add i32 %call6, -256
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %12 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %13, i32 %off
  %14 = call ptr @memcpy(ptr %obj.0.i111, ptr %add.ptr.i, i32 %sub)
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %15 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %len, align 4
  %sub8 = sub i32 %16, %off
  store i32 %sub8, ptr %len, align 4
  %add.ptr = getelementptr i8, ptr %obj.0.i111, i32 %sub7
  %17 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %nr_frags, align 2
  %conv = zext i8 %20 to i32
  %21 = mul nuw nsw i32 %conv, 12
  %22 = add nuw nsw i32 %21, 40
  %23 = call ptr @memcpy(ptr %add.ptr, ptr %18, i32 %22)
  %24 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %bf.load.i82 = load i8, ptr %pfmemalloc.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i82)
  %tobool.not.i83 = icmp sgt i8 %bf.load.i82, -1
  br i1 %tobool.not.i83, label %if.end5.if.else_crit_edge, label %skb_cloned.exit

if.end5.if.else_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

skb_cloned.exit:                                  ; preds = %if.end5
  %25 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %end.i, align 4
  %dataref.i = getelementptr inbounds %struct.skb_shared_info, ptr %26, i32 0, i32 10
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i, i32 noundef 4) #20
  %27 = ptrtoint ptr %dataref.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %dataref.i, align 4
  %and.i = and i32 %28, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp.i.not = icmp eq i32 %and.i, 1
  br i1 %cmp.i.not, label %skb_cloned.exit.if.else_crit_edge, label %if.then13

skb_cloned.exit.if.else_crit_edge:                ; preds = %skb_cloned.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.then13:                                        ; preds = %skb_cloned.exit
  %tobool.not.i.i = icmp eq ptr %skb, null
  br i1 %tobool.not.i.i, label %if.then13.for.cond.preheader_crit_edge, label %land.rhs.i.i

if.then13.for.cond.preheader_crit_edge:           ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end7.i.for.cond.preheader_crit_edge, %land.lhs.true.i.for.cond.preheader_crit_edge, %skb_zcopy.exit.i.for.cond.preheader_crit_edge, %land.rhs.i.i.for.cond.preheader_crit_edge, %if.then13.for.cond.preheader_crit_edge
  %29 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %end.i, align 4
  %nr_frags19118 = getelementptr inbounds %struct.skb_shared_info, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %nr_frags19118 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %nr_frags19118, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %cmp120.not = icmp eq i8 %32, 0
  br i1 %cmp120.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

land.rhs.i.i:                                     ; preds = %if.then13
  %33 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %end.i, align 4
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %34, align 8
  %37 = and i8 %36, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool1.not.i.i = icmp eq i8 %37, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.for.cond.preheader_crit_edge, label %skb_zcopy.exit.i

land.rhs.i.i.for.cond.preheader_crit_edge:        ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.preheader

skb_zcopy.exit.i:                                 ; preds = %land.rhs.i.i
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %34, i32 0, i32 11
  %38 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %destructor_arg.i.i, align 4
  %tobool.not.i84 = icmp eq ptr %39, null
  br i1 %tobool.not.i84, label %skb_zcopy.exit.i.for.cond.preheader_crit_edge, label %if.end.i85, !prof !374

skb_zcopy.exit.i.for.cond.preheader_crit_edge:    ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.preheader

if.end.i85:                                       ; preds = %skb_zcopy.exit.i
  %40 = ptrtoint ptr %39 to i32
  %and.i.i = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %land.lhs.true.i, label %if.end.i85.if.end7.i_crit_edge

if.end.i85.if.end7.i_crit_edge:                   ; preds = %if.end.i85
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

land.lhs.true.i:                                  ; preds = %if.end.i85
  %41 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %39, align 4
  %cmp.i86 = icmp eq ptr %42, @msg_zerocopy_callback
  br i1 %cmp.i86, label %land.lhs.true.i.for.cond.preheader_crit_edge, label %land.lhs.true.i.if.end7.i_crit_edge

land.lhs.true.i.if.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7.i

land.lhs.true.i.for.cond.preheader_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.preheader

if.end7.i:                                        ; preds = %land.lhs.true.i.if.end7.i_crit_edge, %if.end.i85.if.end7.i_crit_edge
  %call8.i = tail call i32 @skb_copy_ubufs(ptr noundef nonnull %skb, i32 noundef %8) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %phi.cmp = icmp eq i32 %call8.i, 0
  br i1 %phi.cmp, label %if.end7.i.for.cond.preheader_crit_edge, label %if.then16

if.end7.i.for.cond.preheader_crit_edge:           ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.preheader

if.then16:                                        ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef nonnull %obj.0.i111) #20
  br label %cleanup

for.body:                                         ; preds = %skb_frag_ref.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %43 = phi ptr [ %56, %skb_frag_ref.exit.for.body_crit_edge ], [ %30, %for.cond.preheader.for.body_crit_edge ]
  %i.0121 = phi i32 [ %inc, %skb_frag_ref.exit.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %arrayidx.i = getelementptr %struct.skb_shared_info, ptr %43, i32 0, i32 12, i32 %i.0121
  %44 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx.i, align 4
  %46 = getelementptr inbounds %struct.page, ptr %45, i32 0, i32 1
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %46, align 4
  %and.i.i.i.i = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i, !prof !374

if.then.i.i.i.i:                                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i.i = add i32 %48, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %49 = ptrtoint ptr %45 to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i ], [ %49, %if.end.i.i.i.i ]
  %50 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %_refcount.i.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %50, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  %51 = ptrtoint ptr %_refcount.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %_refcount.i.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %52, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i.i.i)
  %cmp.i.i.i.i = icmp ult i32 %add.i.i.i.i, 128
  br i1 %cmp.i.i.i.i, label %if.then.i1.i.i.i, label %do.end5.i.i.i.i, !prof !373

if.then.i1.i.i.i:                                 ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %53 = inttoptr i32 %retval.0.i.i.i.i to ptr
  tail call void @dump_page(ptr noundef %53, ptr noundef nonnull @.str.41) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #20, !srcloc !416
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i.i.i
  %call.i.i.i.i9.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %54 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i.i, ptr %_refcount.i.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i.i) #20, !srcloc !403
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@pskb_carve_inside_header, %if.then.i.i.i.i.i.i)) #20
          to label %skb_frag_ref.exit [label %if.then.i.i.i.i.i.i], !srcloc !376

if.then.i.i.i.i.i.i:                              ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__page_ref_mod(ptr noundef %50, i32 noundef 1) #20
  br label %skb_frag_ref.exit

skb_frag_ref.exit:                                ; preds = %if.then.i.i.i.i.i.i, %do.end5.i.i.i.i
  %inc = add nuw nsw i32 %i.0121, 1
  %55 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %end.i, align 4
  %nr_frags19 = getelementptr inbounds %struct.skb_shared_info, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %nr_frags19 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %nr_frags19, align 2
  %conv20 = zext i8 %58 to i32
  %cmp = icmp ult i32 %inc, %conv20
  br i1 %cmp, label %skb_frag_ref.exit.for.body_crit_edge, label %skb_frag_ref.exit.for.end_crit_edge

skb_frag_ref.exit.for.end_crit_edge:              ; preds = %skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

skb_frag_ref.exit.for.body_crit_edge:             ; preds = %skb_frag_ref.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %skb_frag_ref.exit.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %.lcssa = phi ptr [ %30, %for.cond.preheader.for.end_crit_edge ], [ %56, %skb_frag_ref.exit.for.end_crit_edge ]
  %frag_list.i = getelementptr inbounds %struct.skb_shared_info, ptr %.lcssa, i32 0, i32 6
  %59 = ptrtoint ptr %frag_list.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %frag_list.i, align 8
  %cmp.i90.not = icmp eq ptr %60, null
  br i1 %cmp.i90.not, label %for.end.if.end24_crit_edge, label %for.end.for.body.i_crit_edge

for.end.for.body.i_crit_edge:                     ; preds = %for.end
  br label %for.body.i

for.end.if.end24_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

for.body.i:                                       ; preds = %skb_get.exit.i.for.body.i_crit_edge, %for.end.for.body.i_crit_edge
  %list.06.i = phi ptr [ %list.0.i, %skb_get.exit.i.for.body.i_crit_edge ], [ %60, %for.end.for.body.i_crit_edge ]
  %users.i.i = getelementptr inbounds %struct.sk_buff, ptr %list.06.i, i32 0, i32 21
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %users.i.i, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %users.i.i, i32 1, i32 3, i32 1) #20
  %61 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %users.i.i, ptr %users.i.i, i32 1, ptr elementtype(i32) %users.i.i) #20, !srcloc !402
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %61, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !373

for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %for.body.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %62 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %62)
  %.not.i.i.i.i.i = icmp sgt i32 %62, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.skb_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !374

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.skb_get.exit.i_crit_edge:       ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %skb_get.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %for.body.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %users.i.i, i32 noundef %.sink.i.i.i.i.i) #20
  br label %skb_get.exit.i

skb_get.exit.i:                                   ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.skb_get.exit.i_crit_edge
  %63 = ptrtoint ptr %list.06.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %list.0.i = load ptr, ptr %list.06.i, align 8
  %tobool.not.i93 = icmp eq ptr %list.0.i, null
  br i1 %tobool.not.i93, label %skb_get.exit.i.if.end24_crit_edge, label %skb_get.exit.i.for.body.i_crit_edge

skb_get.exit.i.for.body.i_crit_edge:              ; preds = %skb_get.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

skb_get.exit.i.if.end24_crit_edge:                ; preds = %skb_get.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end24:                                         ; preds = %skb_get.exit.i.if.end24_crit_edge, %for.end.if.end24_crit_edge
  tail call fastcc void @skb_release_data(ptr noundef %skb)
  br label %if.end25

if.else:                                          ; preds = %skb_cloned.exit.if.else_crit_edge, %if.end5.if.else_crit_edge
  %64 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %head.i, align 8
  %66 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %bf.load.i94 = load i8, ptr %pfmemalloc.i, align 2
  %67 = and i8 %bf.load.i94, 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %tobool.not.i95 = icmp eq i8 %67, 0
  br i1 %tobool.not.i95, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.else
  %bf.clear.i.i = and i8 %bf.load.i94, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear.i.i)
  %tobool.not.i.i96 = icmp eq i8 %bf.clear.i.i, 0
  br i1 %tobool.not.i.i96, label %if.then.i.if.end.i98_crit_edge, label %skb_pp_recycle.exit.i

if.then.i.if.end.i98_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i98

skb_pp_recycle.exit.i:                            ; preds = %if.then.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %68 = load ptr, ptr @mem_map, align 4
  %69 = ptrtoint ptr %65 to i32
  %sub.i.i = add i32 %69, 1073741824
  %shr.i.i = lshr i32 %sub.i.i, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %68, i32 %shr.i.i
  %call.i.i97 = tail call zeroext i1 @page_pool_return_skb_page(ptr noundef %add.ptr.i.i) #20
  br i1 %call.i.i97, label %skb_pp_recycle.exit.i.if.end25_crit_edge, label %skb_pp_recycle.exit.i.if.end.i98_crit_edge

skb_pp_recycle.exit.i.if.end.i98_crit_edge:       ; preds = %skb_pp_recycle.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i98

skb_pp_recycle.exit.i.if.end25_crit_edge:         ; preds = %skb_pp_recycle.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

if.end.i98:                                       ; preds = %skb_pp_recycle.exit.i.if.end.i98_crit_edge, %if.then.i.if.end.i98_crit_edge
  tail call void @page_frag_free(ptr noundef %65) #20
  br label %if.end25

if.else.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef %65) #20
  br label %if.end25

if.end25:                                         ; preds = %if.else.i, %if.end.i98, %skb_pp_recycle.exit.i.if.end25_crit_edge, %if.end24
  %70 = ptrtoint ptr %head.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %obj.0.i111, ptr %head.i, align 8
  %71 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %obj.0.i111, ptr %data.i, align 4
  %72 = ptrtoint ptr %pfmemalloc.i to i32
  call void @__asan_load1_noabort(i32 %72)
  %bf.load = load i8, ptr %pfmemalloc.i, align 2
  %73 = ptrtoint ptr %end.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %add.ptr, ptr %end.i, align 4
  %74 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %len, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %76 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %75, %77
  %add.ptr.i100 = getelementptr i8, ptr %obj.0.i111, i32 %sub.i
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %78 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %add.ptr.i100, ptr %tail.i, align 8
  %hdr_len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 9
  %79 = ptrtoint ptr %hdr_len to i32
  call void @__asan_store2_noabort(i32 %79)
  store i16 0, ptr %hdr_len, align 2
  %bf.clear34 = and i8 %bf.load, 59
  store i8 %bf.clear34, ptr %pfmemalloc.i, align 2
  %dataref = getelementptr inbounds %struct.skb_shared_info, ptr %add.ptr, i32 0, i32 10
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dataref, i32 noundef 4) #20
  %80 = ptrtoint ptr %dataref to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile i32 1, ptr %dataref, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %if.then16, %kmalloc_reserve.exit.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then16 ], [ 0, %if.end25 ], [ -12, %kmalloc_reserve.exit.cleanup_crit_edge ], [ -12, %lor.lhs.false.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__xfrm_state_destroy(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #19

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #20

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #21 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 50)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #21 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 50)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { inlinehint mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #9 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { noreturn nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { alwaysinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { alwaysinline mustprogress nofree nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { nounwind readonly }
attributes #19 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #20 = { nounwind }
attributes #21 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #22 = { nomerge }
attributes #23 = { cold nounwind }
attributes #24 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !35, !36, !37, !39, !40, !41, !43, !44, !45, !47, !49, !51, !53, !55, !56, !57, !59, !61, !63, !65, !67, !69, !71, !73, !75, !77, !79, !81, !83, !85, !87, !89, !91, !93, !95, !97, !99, !101, !103, !105, !107, !109, !111, !112, !113, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !198, !199, !200, !202, !204, !206, !208, !210, !212, !214, !216, !218, !220, !222, !224, !226, !228, !229, !230, !231, !233, !235, !237, !239, !240, !241, !242, !244, !246, !248, !250, !252, !254, !256, !258, !260, !262, !263, !265, !267, !269, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !292, !294, !296, !298, !300, !302, !303, !305, !306, !308, !309, !310, !311, !313, !314, !316, !317, !319, !321, !323, !324, !326, !328, !330, !332, !334, !335, !336, !337, !338, !340, !342, !344, !345, !346, !347, !349, !350, !351, !353, !355, !357, !358, !359, !360}
!llvm.named.register.sp = !{!362}
!llvm.module.flags = !{!363, !364, !365, !366, !367, !368, !369, !370}
!llvm.ident = !{!371}

!0 = !{ptr @sysctl_max_skb_frags, !1, !"sysctl_max_skb_frags", i1 false, i1 false}
!1 = !{!"../net/core/skbuff.c", i32 91, i32 5}
!2 = !{ptr @__ksymtab_sysctl_max_skb_frags, !3, !"__ksymtab_sysctl_max_skb_frags", i1 false, i1 false}
!3 = !{!"../net/core/skbuff.c", i32 92, i32 1}
!4 = !{ptr @__ksymtab___napi_alloc_frag_align, !5, !"__ksymtab___napi_alloc_frag_align", i1 false, i1 false}
!5 = !{!"../net/core/skbuff.c", i32 147, i32 1}
!6 = !{ptr @__ksymtab___netdev_alloc_frag_align, !7, !"__ksymtab___netdev_alloc_frag_align", i1 false, i1 false}
!7 = !{!"../net/core/skbuff.c", i32 168, i32 1}
!8 = !{ptr @__ksymtab_build_skb, !9, !"__ksymtab_build_skb", i1 false, i1 false}
!9 = !{!"../net/core/skbuff.c", i32 265, i32 1}
!10 = !{ptr @__ksymtab_build_skb_around, !11, !"__ksymtab_build_skb_around", i1 false, i1 false}
!11 = !{!"../net/core/skbuff.c", i32 288, i32 1}
!12 = !{ptr @__ksymtab_napi_build_skb, !13, !"__ksymtab_napi_build_skb", i1 false, i1 false}
!13 = !{!"../net/core/skbuff.c", i32 335, i32 1}
!14 = !{ptr @__ksymtab___alloc_skb, !15, !"__ksymtab___alloc_skb", i1 false, i1 false}
!15 = !{!"../net/core/skbuff.c", i32 463, i32 1}
!16 = !{ptr @__ksymtab___netdev_alloc_skb, !17, !"__ksymtab___netdev_alloc_skb", i1 false, i1 false}
!17 = !{!"../net/core/skbuff.c", i32 538, i32 1}
!18 = !{ptr @__ksymtab___napi_alloc_skb, !19, !"__ksymtab___napi_alloc_skb", i1 false, i1 false}
!19 = !{!"../net/core/skbuff.c", i32 603, i32 1}
!20 = !{ptr @__ksymtab_skb_add_rx_frag, !21, !"__ksymtab_skb_add_rx_frag", i1 false, i1 false}
!21 = !{!"../net/core/skbuff.c", i32 613, i32 1}
!22 = !{ptr @__ksymtab_skb_coalesce_rx_frag, !23, !"__ksymtab_skb_coalesce_rx_frag", i1 false, i1 false}
!23 = !{!"../net/core/skbuff.c", i32 625, i32 1}
!24 = !{ptr @.str, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../net/core/skbuff.c", i32 728, i32 3}
!26 = !{ptr @__ksymtab___kfree_skb, !27, !"__ksymtab___kfree_skb", i1 false, i1 false}
!27 = !{!"../net/core/skbuff.c", i32 759, i32 1}
!28 = !{ptr @__ksymtab_kfree_skb_reason, !29, !"__ksymtab_kfree_skb_reason", i1 false, i1 false}
!29 = !{!"../net/core/skbuff.c", i32 778, i32 1}
!30 = !{ptr @__ksymtab_kfree_skb_list, !31, !"__ksymtab_kfree_skb_list", i1 false, i1 false}
!31 = !{!"../net/core/skbuff.c", i32 789, i32 1}
!32 = !{ptr @.str.1, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../net/core/skbuff.c", i32 818, i32 2}
!34 = !{ptr @.str.2, !33, !"<string literal>", i1 false, i1 false}
!35 = !{ptr @skb_dump._entry, !33, !"_entry", i1 false, i1 false}
!36 = !{ptr @skb_dump._entry_ptr, !33, !"_entry_ptr", i1 false, i1 false}
!37 = !{ptr @.str.4, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../net/core/skbuff.c", i32 837, i32 3}
!39 = !{ptr @skb_dump._entry.3, !38, !"_entry", i1 false, i1 false}
!40 = !{ptr @skb_dump._entry_ptr.5, !38, !"_entry_ptr", i1 false, i1 false}
!41 = !{ptr @.str.7, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../net/core/skbuff.c", i32 840, i32 3}
!43 = !{ptr @skb_dump._entry.6, !42, !"_entry", i1 false, i1 false}
!44 = !{ptr @skb_dump._entry_ptr.8, !42, !"_entry_ptr", i1 false, i1 false}
!45 = !{ptr @.str.9, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../net/core/skbuff.c", i32 844, i32 25}
!47 = !{ptr @.str.10, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../net/core/skbuff.c", i32 849, i32 25}
!49 = !{ptr @.str.11, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../net/core/skbuff.c", i32 854, i32 25}
!51 = !{ptr @.str.12, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../net/core/skbuff.c", i32 868, i32 26}
!53 = !{ptr @.str.14, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../net/core/skbuff.c", i32 879, i32 3}
!55 = !{ptr @skb_dump._entry.13, !54, !"_entry", i1 false, i1 false}
!56 = !{ptr @skb_dump._entry_ptr.15, !54, !"_entry_ptr", i1 false, i1 false}
!57 = !{ptr @__ksymtab_skb_dump, !58, !"__ksymtab_skb_dump", i1 false, i1 false}
!58 = !{!"../net/core/skbuff.c", i32 884, i32 1}
!59 = !{ptr @__ksymtab_skb_tx_error, !60, !"__ksymtab_skb_tx_error", i1 false, i1 false}
!60 = !{!"../net/core/skbuff.c", i32 897, i32 1}
!61 = !{ptr @__ksymtab_consume_skb, !62, !"__ksymtab_consume_skb", i1 false, i1 false}
!62 = !{!"../net/core/skbuff.c", i32 916, i32 1}
!63 = distinct !{null, !64, !"__already_done", i1 false, i1 false}
!64 = !{!"../net/core/skbuff.c", i32 978, i32 2}
!65 = !{ptr @__ksymtab_napi_consume_skb, !66, !"__ksymtab_napi_consume_skb", i1 false, i1 false}
!66 = !{!"../net/core/skbuff.c", i32 995, i32 1}
!67 = !{ptr @__ksymtab_alloc_skb_for_msg, !68, !"__ksymtab_alloc_skb_for_msg", i1 false, i1 false}
!68 = !{!"../net/core/skbuff.c", i32 1108, i32 1}
!69 = !{ptr @__ksymtab_skb_morph, !70, !"__ksymtab_skb_morph", i1 false, i1 false}
!70 = !{!"../net/core/skbuff.c", i32 1125, i32 1}
!71 = distinct !{null, !72, !"__warned", i1 false, i1 false}
!72 = !{!"../net/core/skbuff.c", i32 1137, i32 23}
!73 = !{ptr @__ksymtab_mm_account_pinned_pages, !74, !"__ksymtab_mm_account_pinned_pages", i1 false, i1 false}
!74 = !{!"../net/core/skbuff.c", i32 1156, i32 1}
!75 = !{ptr @__ksymtab_mm_unaccount_pinned_pages, !76, !"__ksymtab_mm_unaccount_pinned_pages", i1 false, i1 false}
!76 = !{!"../net/core/skbuff.c", i32 1165, i32 1}
!77 = distinct !{null, !78, !"__already_done", i1 false, i1 false}
!78 = !{!"../net/core/skbuff.c", i32 1172, i32 2}
!79 = !{ptr @__ksymtab_msg_zerocopy_alloc, !80, !"__ksymtab_msg_zerocopy_alloc", i1 false, i1 false}
!80 = !{!"../net/core/skbuff.c", i32 1198, i32 1}
!81 = distinct !{null, !82, !"__already_done", i1 false, i1 false}
!82 = !{!"../net/core/skbuff.c", i32 1216, i32 4}
!83 = !{ptr @__ksymtab_msg_zerocopy_realloc, !84, !"__ksymtab_msg_zerocopy_realloc", i1 false, i1 false}
!84 = !{!"../net/core/skbuff.c", i32 1247, i32 1}
!85 = !{ptr @__ksymtab_msg_zerocopy_callback, !86, !"__ksymtab_msg_zerocopy_callback", i1 false, i1 false}
!86 = !{!"../net/core/skbuff.c", i32 1327, i32 1}
!87 = !{ptr @__ksymtab_msg_zerocopy_put_abort, !88, !"__ksymtab_msg_zerocopy_put_abort", i1 false, i1 false}
!88 = !{!"../net/core/skbuff.c", i32 1339, i32 1}
!89 = !{ptr @__ksymtab_skb_zerocopy_iter_dgram, !90, !"__ksymtab_skb_zerocopy_iter_dgram", i1 false, i1 false}
!90 = !{!"../net/core/skbuff.c", i32 1345, i32 1}
!91 = !{ptr @__ksymtab_skb_zerocopy_iter_stream, !92, !"__ksymtab_skb_zerocopy_iter_stream", i1 false, i1 false}
!92 = !{!"../net/core/skbuff.c", i32 1376, i32 1}
!93 = !{ptr @__ksymtab_skb_copy_ubufs, !94, !"__ksymtab_skb_copy_ubufs", i1 false, i1 false}
!94 = !{!"../net/core/skbuff.c", i32 1485, i32 1}
!95 = !{ptr @__ksymtab_skb_clone, !96, !"__ksymtab_skb_clone", i1 false, i1 false}
!96 = !{!"../net/core/skbuff.c", i32 1528, i32 1}
!97 = !{ptr @__ksymtab_skb_headers_offset_update, !98, !"__ksymtab_skb_headers_offset_update", i1 false, i1 false}
!98 = !{!"../net/core/skbuff.c", i32 1544, i32 1}
!99 = !{ptr @__ksymtab_skb_copy_header, !100, !"__ksymtab_skb_copy_header", i1 false, i1 false}
!100 = !{!"../net/core/skbuff.c", i32 1554, i32 1}
!101 = !{ptr @__ksymtab_skb_copy, !102, !"__ksymtab_skb_copy", i1 false, i1 false}
!102 = !{!"../net/core/skbuff.c", i32 1600, i32 1}
!103 = !{ptr @__ksymtab___pskb_copy_fclone, !104, !"__ksymtab___pskb_copy_fclone", i1 false, i1 false}
!104 = !{!"../net/core/skbuff.c", i32 1665, i32 1}
!105 = !{ptr @__ksymtab_pskb_expand_head, !106, !"__ksymtab_pskb_expand_head", i1 false, i1 false}
!106 = !{!"../net/core/skbuff.c", i32 1768, i32 1}
!107 = !{ptr @__ksymtab_skb_realloc_headroom, !108, !"__ksymtab_skb_realloc_headroom", i1 false, i1 false}
!108 = !{!"../net/core/skbuff.c", i32 1789, i32 1}
!109 = distinct !{null, !110, !"__already_done", i1 false, i1 false}
!110 = !{!"../net/core/skbuff.c", i32 1809, i32 6}
!111 = !{ptr @.str.16, !110, !"<string literal>", i1 false, i1 false}
!112 = !{ptr @__func__.skb_expand_head, !110, !"<string literal>", i1 false, i1 false}
!113 = !{ptr @__ksymtab_skb_expand_head, !114, !"__ksymtab_skb_expand_head", i1 false, i1 false}
!114 = !{!"../net/core/skbuff.c", i32 1840, i32 1}
!115 = !{ptr @__ksymtab_skb_copy_expand, !116, !"__ksymtab_skb_copy_expand", i1 false, i1 false}
!116 = !{!"../net/core/skbuff.c", i32 1898, i32 1}
!117 = !{ptr @__ksymtab___skb_pad, !118, !"__ksymtab___skb_pad", i1 false, i1 false}
!118 = !{!"../net/core/skbuff.c", i32 1947, i32 1}
!119 = !{ptr @__ksymtab_pskb_put, !120, !"__ksymtab_pskb_put", i1 false, i1 false}
!120 = !{!"../net/core/skbuff.c", i32 1970, i32 1}
!121 = !{ptr @__ksymtab_skb_put, !122, !"__ksymtab_skb_put", i1 false, i1 false}
!122 = !{!"../net/core/skbuff.c", i32 1991, i32 1}
!123 = !{ptr @__ksymtab_skb_push, !124, !"__ksymtab_skb_push", i1 false, i1 false}
!124 = !{!"../net/core/skbuff.c", i32 2010, i32 1}
!125 = !{ptr @__ksymtab_skb_pull, !126, !"__ksymtab_skb_pull", i1 false, i1 false}
!126 = !{!"../net/core/skbuff.c", i32 2026, i32 1}
!127 = !{ptr @__ksymtab_skb_pull_data, !128, !"__ksymtab_skb_pull_data", i1 false, i1 false}
!128 = !{!"../net/core/skbuff.c", i32 2050, i32 1}
!129 = !{ptr @__ksymtab_skb_trim, !130, !"__ksymtab_skb_trim", i1 false, i1 false}
!130 = !{!"../net/core/skbuff.c", i32 2066, i32 1}
!131 = !{ptr @__ksymtab____pskb_trim, !132, !"__ksymtab____pskb_trim", i1 false, i1 false}
!132 = !{!"../net/core/skbuff.c", i32 2154, i32 1}
!133 = !{ptr @__ksymtab_pskb_trim_rcsum_slow, !134, !"__ksymtab_pskb_trim_rcsum_slow", i1 false, i1 false}
!134 = !{!"../net/core/skbuff.c", i32 2175, i32 1}
!135 = !{ptr @__ksymtab___pskb_pull_tail, !136, !"__ksymtab___pskb_pull_tail", i1 false, i1 false}
!136 = !{!"../net/core/skbuff.c", i32 2323, i32 1}
!137 = !{ptr @__ksymtab_skb_copy_bits, !138, !"__ksymtab_skb_copy_bits", i1 false, i1 false}
!138 = !{!"../net/core/skbuff.c", i32 2416, i32 1}
!139 = !{ptr @__ksymtab_skb_splice_bits, !140, !"__ksymtab_skb_splice_bits", i1 false, i1 false}
!140 = !{!"../net/core/skbuff.c", i32 2599, i32 1}
!141 = !{ptr @__ksymtab_skb_send_sock_locked, !142, !"__ksymtab_skb_send_sock_locked", i1 false, i1 false}
!142 = !{!"../net/core/skbuff.c", i32 2722, i32 1}
!143 = !{ptr @__ksymtab_skb_store_bits, !144, !"__ksymtab_skb_store_bits", i1 false, i1 false}
!144 = !{!"../net/core/skbuff.c", i32 2818, i32 1}
!145 = !{ptr @__ksymtab___skb_checksum, !146, !"__ksymtab___skb_checksum", i1 false, i1 false}
!146 = !{!"../net/core/skbuff.c", i32 2903, i32 1}
!147 = !{ptr @__ksymtab_skb_checksum, !148, !"__ksymtab_skb_checksum", i1 false, i1 false}
!148 = !{!"../net/core/skbuff.c", i32 2915, i32 1}
!149 = !{ptr @__ksymtab_skb_copy_and_csum_bits, !150, !"__ksymtab_skb_copy_and_csum_bits", i1 false, i1 false}
!150 = !{!"../net/core/skbuff.c", i32 3002, i32 1}
!151 = !{ptr @__ksymtab___skb_checksum_complete_head, !152, !"__ksymtab___skb_checksum_complete_head", i1 false, i1 false}
!152 = !{!"../net/core/skbuff.c", i32 3019, i32 1}
!153 = !{ptr @__ksymtab___skb_checksum_complete, !154, !"__ksymtab___skb_checksum_complete", i1 false, i1 false}
!154 = !{!"../net/core/skbuff.c", i32 3061, i32 1}
!155 = !{ptr @crc32c_csum_stub, !156, !"crc32c_csum_stub", i1 false, i1 false}
!156 = !{!"../net/core/skbuff.c", i32 3085, i32 32}
!157 = !{ptr @__ksymtab_crc32c_csum_stub, !158, !"__ksymtab_crc32c_csum_stub", i1 false, i1 false}
!158 = !{!"../net/core/skbuff.c", i32 3087, i32 1}
!159 = !{ptr @__ksymtab_skb_zerocopy_headlen, !160, !"__ksymtab_skb_zerocopy_headlen", i1 false, i1 false}
!160 = !{!"../net/core/skbuff.c", i32 3114, i32 1}
!161 = !{ptr @__ksymtab_skb_zerocopy, !162, !"__ksymtab_skb_zerocopy", i1 false, i1 false}
!162 = !{!"../net/core/skbuff.c", i32 3193, i32 1}
!163 = !{ptr @__ksymtab_skb_copy_and_csum_dev, !164, !"__ksymtab_skb_copy_and_csum_dev", i1 false, i1 false}
!164 = !{!"../net/core/skbuff.c", i32 3220, i32 1}
!165 = !{ptr @__ksymtab_skb_dequeue, !166, !"__ksymtab_skb_dequeue", i1 false, i1 false}
!166 = !{!"../net/core/skbuff.c", i32 3241, i32 1}
!167 = !{ptr @__ksymtab_skb_dequeue_tail, !168, !"__ksymtab_skb_dequeue_tail", i1 false, i1 false}
!168 = !{!"../net/core/skbuff.c", i32 3261, i32 1}
!169 = !{ptr @__ksymtab_skb_queue_purge, !170, !"__ksymtab_skb_queue_purge", i1 false, i1 false}
!170 = !{!"../net/core/skbuff.c", i32 3277, i32 1}
!171 = !{ptr @__ksymtab_skb_queue_head, !172, !"__ksymtab_skb_queue_head", i1 false, i1 false}
!172 = !{!"../net/core/skbuff.c", i32 3324, i32 1}
!173 = !{ptr @__ksymtab_skb_queue_tail, !174, !"__ksymtab_skb_queue_tail", i1 false, i1 false}
!174 = !{!"../net/core/skbuff.c", i32 3345, i32 1}
!175 = !{ptr @__ksymtab_skb_unlink, !176, !"__ksymtab_skb_unlink", i1 false, i1 false}
!176 = !{!"../net/core/skbuff.c", i32 3365, i32 1}
!177 = !{ptr @__ksymtab_skb_append, !178, !"__ksymtab_skb_append", i1 false, i1 false}
!178 = !{!"../net/core/skbuff.c", i32 3385, i32 1}
!179 = !{ptr @__ksymtab_skb_split, !180, !"__ksymtab_skb_split", i1 false, i1 false}
!180 = !{!"../net/core/skbuff.c", i32 3467, i32 1}
!181 = !{ptr @__ksymtab_skb_prepare_seq_read, !182, !"__ksymtab_skb_prepare_seq_read", i1 false, i1 false}
!182 = !{!"../net/core/skbuff.c", i32 3636, i32 1}
!183 = !{ptr @__ksymtab_skb_seq_read, !184, !"__ksymtab_skb_seq_read", i1 false, i1 false}
!184 = !{!"../net/core/skbuff.c", i32 3745, i32 1}
!185 = !{ptr @__ksymtab_skb_abort_seq_read, !186, !"__ksymtab_skb_abort_seq_read", i1 false, i1 false}
!186 = !{!"../net/core/skbuff.c", i32 3759, i32 1}
!187 = !{ptr @__ksymtab_skb_find_text, !188, !"__ksymtab_skb_find_text", i1 false, i1 false}
!188 = !{!"../net/core/skbuff.c", i32 3803, i32 1}
!189 = !{ptr @__ksymtab_skb_append_pagefrags, !190, !"__ksymtab_skb_append_pagefrags", i1 false, i1 false}
!190 = !{!"../net/core/skbuff.c", i32 3821, i32 1}
!191 = !{ptr @__ksymtab_skb_pull_rcsum, !192, !"__ksymtab_skb_pull_rcsum", i1 false, i1 false}
!192 = !{!"../net/core/skbuff.c", i32 3843, i32 1}
!193 = !{ptr @__ksymtab_skb_segment_list, !194, !"__ksymtab_skb_segment_list", i1 false, i1 false}
!194 = !{!"../net/core/skbuff.c", i32 3942, i32 1}
!195 = !{ptr @.str.17, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../net/core/skbuff.c", i32 4197, i32 5}
!197 = !{ptr @.str.18, !196, !"<string literal>", i1 false, i1 false}
!198 = !{ptr @skb_segment._entry, !196, !"_entry", i1 false, i1 false}
!199 = !{ptr @skb_segment._entry_ptr, !196, !"_entry_ptr", i1 false, i1 false}
!200 = !{ptr @__ksymtab_skb_segment, !201, !"__ksymtab_skb_segment", i1 false, i1 false}
!201 = !{!"../net/core/skbuff.c", i32 4294, i32 1}
!202 = !{ptr @.str.19, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../net/core/skbuff.c", i32 4356, i32 49}
!204 = !{ptr @.str.20, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../net/core/skbuff.c", i32 4363, i32 42}
!206 = !{ptr @__ksymtab_skb_to_sgvec, !207, !"__ksymtab_skb_to_sgvec", i1 false, i1 false}
!207 = !{!"../net/core/skbuff.c", i32 4466, i32 1}
!208 = !{ptr @__ksymtab_skb_to_sgvec_nomark, !209, !"__ksymtab_skb_to_sgvec_nomark", i1 false, i1 false}
!209 = !{!"../net/core/skbuff.c", i32 4492, i32 1}
!210 = !{ptr @__ksymtab_skb_cow_data, !211, !"__ksymtab_skb_cow_data", i1 false, i1 false}
!211 = !{!"../net/core/skbuff.c", i32 4604, i32 1}
!212 = !{ptr @__ksymtab_sock_queue_err_skb, !213, !"__ksymtab_sock_queue_err_skb", i1 false, i1 false}
!213 = !{!"../net/core/skbuff.c", i32 4645, i32 1}
!214 = !{ptr @__ksymtab_sock_dequeue_err_skb, !215, !"__ksymtab_sock_dequeue_err_skb", i1 false, i1 false}
!215 = !{!"../net/core/skbuff.c", i32 4677, i32 1}
!216 = !{ptr @__ksymtab_skb_clone_sk, !217, !"__ksymtab_skb_clone_sk", i1 false, i1 false}
!217 = !{!"../net/core/skbuff.c", i32 4711, i32 1}
!218 = !{ptr @__ksymtab_skb_complete_tx_timestamp, !219, !"__ksymtab_skb_complete_tx_timestamp", i1 false, i1 false}
!219 = !{!"../net/core/skbuff.c", i32 4777, i32 1}
!220 = !{ptr @__ksymtab___skb_tstamp_tx, !221, !"__ksymtab___skb_tstamp_tx", i1 false, i1 false}
!221 = !{!"../net/core/skbuff.c", i32 4827, i32 1}
!222 = !{ptr @__ksymtab_skb_tstamp_tx, !223, !"__ksymtab_skb_tstamp_tx", i1 false, i1 false}
!223 = !{!"../net/core/skbuff.c", i32 4835, i32 1}
!224 = !{ptr @__ksymtab_skb_complete_wifi_ack, !225, !"__ksymtab_skb_complete_wifi_ack", i1 false, i1 false}
!225 = !{!"../net/core/skbuff.c", i32 4861, i32 1}
!226 = !{ptr @.str.21, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../net/core/skbuff.c", i32 4881, i32 3}
!228 = !{ptr @.str.22, !227, !"<string literal>", i1 false, i1 false}
!229 = !{ptr @skb_partial_csum_set._entry, !227, !"_entry", i1 false, i1 false}
!230 = !{ptr @skb_partial_csum_set._entry_ptr, !227, !"_entry_ptr", i1 false, i1 false}
!231 = !{ptr @__ksymtab_skb_partial_csum_set, !232, !"__ksymtab_skb_partial_csum_set", i1 false, i1 false}
!232 = !{!"../net/core/skbuff.c", i32 4891, i32 1}
!233 = !{ptr @__ksymtab_skb_checksum_setup, !234, !"__ksymtab_skb_checksum_setup", i1 false, i1 false}
!234 = !{!"../net/core/skbuff.c", i32 5123, i32 1}
!235 = !{ptr @__ksymtab_skb_checksum_trimmed, !236, !"__ksymtab_skb_checksum_trimmed", i1 false, i1 false}
!236 = !{!"../net/core/skbuff.c", i32 5209, i32 1}
!237 = !{ptr @.str.23, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../net/core/skbuff.c", i32 5213, i32 2}
!239 = !{ptr @.str.24, !238, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @__skb_warn_lro_forwarding._entry, !238, !"_entry", i1 false, i1 false}
!241 = !{ptr @__skb_warn_lro_forwarding._entry_ptr, !238, !"_entry_ptr", i1 false, i1 false}
!242 = !{ptr @__ksymtab___skb_warn_lro_forwarding, !243, !"__ksymtab___skb_warn_lro_forwarding", i1 false, i1 false}
!243 = !{!"../net/core/skbuff.c", i32 5216, i32 1}
!244 = !{ptr @__ksymtab_kfree_skb_partial, !245, !"__ksymtab_kfree_skb_partial", i1 false, i1 false}
!245 = !{!"../net/core/skbuff.c", i32 5227, i32 1}
!246 = distinct !{null, !247, !"__already_done", i1 false, i1 false}
!247 = !{!"../net/core/skbuff.c", i32 5295, i32 2}
!248 = !{ptr @__ksymtab_skb_try_coalesce, !249, !"__ksymtab_skb_try_coalesce", i1 false, i1 false}
!249 = !{!"../net/core/skbuff.c", i32 5318, i32 1}
!250 = !{ptr @__ksymtab_skb_scrub_packet, !251, !"__ksymtab_skb_scrub_packet", i1 false, i1 false}
!251 = !{!"../net/core/skbuff.c", i32 5355, i32 1}
!252 = !{ptr @__ksymtab_skb_gso_validate_network_len, !253, !"__ksymtab_skb_gso_validate_network_len", i1 false, i1 false}
!253 = !{!"../net/core/skbuff.c", i32 5481, i32 1}
!254 = !{ptr @__ksymtab_skb_gso_validate_mac_len, !255, !"__ksymtab_skb_gso_validate_mac_len", i1 false, i1 false}
!255 = !{!"../net/core/skbuff.c", i32 5496, i32 1}
!256 = !{ptr @__ksymtab_skb_vlan_untag, !257, !"__ksymtab_skb_vlan_untag", i1 false, i1 false}
!257 = !{!"../net/core/skbuff.c", i32 5563, i32 1}
!258 = !{ptr @__ksymtab_skb_ensure_writable, !259, !"__ksymtab_skb_ensure_writable", i1 false, i1 false}
!259 = !{!"../net/core/skbuff.c", i32 5575, i32 1}
!260 = distinct !{null, !261, !"__already_done", i1 false, i1 false}
!261 = !{!"../net/core/skbuff.c", i32 5586, i32 6}
!262 = !{ptr @.str.25, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @__ksymtab___skb_vlan_pop, !264, !"__ksymtab___skb_vlan_pop", i1 false, i1 false}
!264 = !{!"../net/core/skbuff.c", i32 5614, i32 1}
!265 = !{ptr @__ksymtab_skb_vlan_pop, !266, !"__ksymtab_skb_vlan_pop", i1 false, i1 false}
!266 = !{!"../net/core/skbuff.c", i32 5647, i32 1}
!267 = distinct !{null, !268, !"__already_done", i1 false, i1 false}
!268 = !{!"../net/core/skbuff.c", i32 5658, i32 7}
!269 = !{ptr @.str.26, !268, !"<string literal>", i1 false, i1 false}
!270 = !{ptr @__ksymtab_skb_vlan_push, !271, !"__ksymtab_skb_vlan_push", i1 false, i1 false}
!271 = !{!"../net/core/skbuff.c", i32 5677, i32 1}
!272 = !{ptr @__ksymtab_skb_eth_pop, !273, !"__ksymtab_skb_eth_pop", i1 false, i1 false}
!273 = !{!"../net/core/skbuff.c", i32 5703, i32 1}
!274 = !{ptr @__ksymtab_skb_eth_push, !275, !"__ksymtab_skb_eth_push", i1 false, i1 false}
!275 = !{!"../net/core/skbuff.c", i32 5744, i32 1}
!276 = !{ptr @__ksymtab_skb_mpls_push, !277, !"__ksymtab_skb_mpls_push", i1 false, i1 false}
!277 = !{!"../net/core/skbuff.c", i32 5813, i32 1}
!278 = !{ptr @__ksymtab_skb_mpls_pop, !279, !"__ksymtab_skb_mpls_pop", i1 false, i1 false}
!279 = !{!"../net/core/skbuff.c", i32 5858, i32 1}
!280 = !{ptr @__ksymtab_skb_mpls_update_lse, !281, !"__ksymtab_skb_mpls_update_lse", i1 false, i1 false}
!281 = !{!"../net/core/skbuff.c", i32 5891, i32 1}
!282 = !{ptr @__ksymtab_skb_mpls_dec_ttl, !283, !"__ksymtab_skb_mpls_dec_ttl", i1 false, i1 false}
!283 = !{!"../net/core/skbuff.c", i32 5923, i32 1}
!284 = !{ptr @__ksymtab_alloc_skb_with_frags, !285, !"__ksymtab_alloc_skb_with_frags", i1 false, i1 false}
!285 = !{!"../net/core/skbuff.c", i32 5995, i32 1}
!286 = !{ptr @__ksymtab_pskb_extract, !287, !"__ksymtab_pskb_extract", i1 false, i1 false}
!287 = !{!"../net/core/skbuff.c", i32 6234, i32 1}
!288 = !{ptr @__ksymtab_skb_ext_add, !289, !"__ksymtab_skb_ext_add", i1 false, i1 false}
!289 = !{!"../net/core/skbuff.c", i32 6394, i32 1}
!290 = !{ptr @__ksymtab___skb_ext_del, !291, !"__ksymtab___skb_ext_del", i1 false, i1 false}
!291 = !{!"../net/core/skbuff.c", i32 6432, i32 1}
!292 = !{ptr @__ksymtab___skb_ext_put, !293, !"__ksymtab___skb_ext_put", i1 false, i1 false}
!293 = !{!"../net/core/skbuff.c", i32 6456, i32 1}
!294 = !{ptr @skbuff_head_cache, !295, !"skbuff_head_cache", i1 false, i1 false}
!295 = !{!"../net/core/skbuff.c", i32 86, i32 20}
!296 = !{ptr @skbuff_fclone_cache, !297, !"skbuff_fclone_cache", i1 false, i1 false}
!297 = !{!"../net/core/skbuff.c", i32 87, i32 27}
!298 = !{ptr @skbuff_ext_cache, !299, !"skbuff_ext_cache", i1 false, i1 false}
!299 = !{!"../net/core/skbuff.c", i32 89, i32 27}
!300 = !{ptr @__pcpu_unique_netdev_alloc_cache, !301, !"__pcpu_unique_netdev_alloc_cache", i1 false, i1 false}
!301 = !{!"../net/core/skbuff.c", i32 136, i32 8}
!302 = !{ptr @netdev_alloc_cache, !301, !"netdev_alloc_cache", i1 false, i1 false}
!303 = !{ptr @__pcpu_unique_napi_alloc_cache, !304, !"__pcpu_unique_napi_alloc_cache", i1 false, i1 false}
!304 = !{!"../net/core/skbuff.c", i32 137, i32 8}
!305 = !{ptr @napi_alloc_cache, !304, !"napi_alloc_cache", i1 false, i1 false}
!306 = distinct !{null, !307, !"__already_done", i1 false, i1 false}
!307 = !{!"../include/trace/events/skb.h", i32 37, i32 1}
!308 = !{ptr @.str.27, !307, !"<string literal>", i1 false, i1 false}
!309 = distinct !{null, !307, !"__warned", i1 false, i1 false}
!310 = !{ptr @.str.28, !307, !"<string literal>", i1 false, i1 false}
!311 = distinct !{null, !312, !"__already_done", i1 false, i1 false}
!312 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!313 = !{ptr @.str.29, !312, !"<string literal>", i1 false, i1 false}
!314 = distinct !{null, !315, !"__already_done", i1 false, i1 false}
!315 = !{!"../include/trace/events/skb.h", i32 64, i32 1}
!316 = distinct !{null, !315, !"__warned", i1 false, i1 false}
!317 = !{ptr @.str.30, !318, !"<string literal>", i1 false, i1 false}
!318 = !{!"../include/net/dst.h", i32 231, i32 2}
!319 = !{ptr @.str.31, !320, !"<string literal>", i1 false, i1 false}
!320 = !{!"../include/linux/skbuff.h", i32 1011, i32 2}
!321 = distinct !{null, !322, !"__already_done", i1 false, i1 false}
!322 = !{!"../include/net/sock.h", i32 1750, i32 2}
!323 = !{ptr @.str.32, !322, !"<string literal>", i1 false, i1 false}
!324 = distinct !{null, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!326 = !{ptr @.str.34, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../include/linux/mm.h", i32 717, i32 2}
!328 = distinct !{null, !329, !"__already_done", i1 false, i1 false}
!329 = !{!"../net/core/skbuff.c", i32 1385, i32 5}
!330 = !{ptr @__func__.skb_over_panic, !331, !"<string literal>", i1 false, i1 false}
!331 = !{!"../net/core/skbuff.c", i32 118, i32 27}
!332 = !{ptr @.str.35, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../net/core/skbuff.c", i32 109, i32 2}
!334 = !{ptr @.str.36, !333, !"<string literal>", i1 false, i1 false}
!335 = !{ptr @skb_panic._entry, !333, !"_entry", i1 false, i1 false}
!336 = !{ptr @skb_panic._entry_ptr, !333, !"_entry_ptr", i1 false, i1 false}
!337 = !{ptr @.str.37, !333, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @__func__.skb_under_panic, !339, !"<string literal>", i1 false, i1 false}
!339 = !{!"../net/core/skbuff.c", i32 123, i32 27}
!340 = !{ptr @default_crc32c_ops, !341, !"default_crc32c_ops", i1 false, i1 false}
!341 = !{!"../net/core/skbuff.c", i32 3080, i32 38}
!342 = !{ptr @.str.38, !343, !"<string literal>", i1 false, i1 false}
!343 = !{!"../net/core/skbuff.c", i32 3065, i32 2}
!344 = !{ptr @.str.39, !343, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @warn_crc32c_csum_update._entry, !343, !"_entry", i1 false, i1 false}
!346 = !{ptr @warn_crc32c_csum_update._entry_ptr, !343, !"_entry_ptr", i1 false, i1 false}
!347 = !{ptr @.str.40, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../net/core/skbuff.c", i32 3074, i32 2}
!349 = !{ptr @warn_crc32c_csum_combine._entry, !348, !"_entry", i1 false, i1 false}
!350 = !{ptr @warn_crc32c_csum_combine._entry_ptr, !348, !"_entry_ptr", i1 false, i1 false}
!351 = !{ptr @.str.41, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../include/linux/mm.h", i32 1160, i32 2}
!353 = !{ptr @.str.42, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../net/core/skbuff.c", i32 4344, i32 39}
!355 = !{ptr @.str.43, !356, !"<string literal>", i1 false, i1 false}
!356 = !{!"../net/core/skbuff.c", i32 6077, i32 4}
!357 = !{ptr @.str.44, !356, !"<string literal>", i1 false, i1 false}
!358 = !{ptr @pskb_carve_frag_list._entry, !356, !"_entry", i1 false, i1 false}
!359 = !{ptr @pskb_carve_frag_list._entry_ptr, !356, !"_entry_ptr", i1 false, i1 false}
!360 = !{ptr @skb_ext_type_len, !361, !"skb_ext_type_len", i1 false, i1 false}
!361 = !{!"../net/core/skbuff.c", i32 4300, i32 17}
!362 = !{!"sp"}
!363 = !{i32 1, !"wchar_size", i32 2}
!364 = !{i32 1, !"min_enum_size", i32 4}
!365 = !{i32 8, !"branch-target-enforcement", i32 0}
!366 = !{i32 8, !"sign-return-address", i32 0}
!367 = !{i32 8, !"sign-return-address-all", i32 0}
!368 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!369 = !{i32 7, !"uwtable", i32 1}
!370 = !{i32 7, !"frame-pointer", i32 2}
!371 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!372 = !{i64 908215}
!373 = !{!"branch_weights", i32 1, i32 2000}
!374 = !{!"branch_weights", i32 2000, i32 1}
!375 = !{!"branch_weights", i32 2002, i32 2000}
!376 = !{i64 2149115160, i64 2149115165, i64 2149115178, i64 2149115222, i64 2149115256, i64 2149115277}
!377 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!378 = !{i8 0, i8 2}
!379 = !{i64 2148591338}
!380 = !{i64 2148505778, i64 2148505810, i64 2148505839, i64 2148505873, i64 2148505904, i64 2148505927}
!381 = !{i64 2149467452}
!382 = !{i64 2154972994}
!383 = !{i64 2158449343}
!384 = !{i64 2158449566}
!385 = !{i64 2149526501}
!386 = !{i64 2149527537}
!387 = !{i64 2154485774}
!388 = !{i64 2153127546}
!389 = !{i64 2153127753}
!390 = !{i64 2154488545}
!391 = !{i64 2158465085}
!392 = !{i64 2158465276}
!393 = !{i64 2148590259}
!394 = !{i64 2148504968, i64 2148505000, i64 2148505029, i64 2148505063, i64 2148505094, i64 2148505117}
!395 = !{i64 2148590488}
!396 = !{i64 2155054508, i64 2155054996, i64 2155054545, i64 2155054601, i64 2155054635, i64 2155054659, i64 2155054700, i64 2155054721, i64 2155054749, i64 2155054783}
!397 = !{i64 2159476885}
!398 = !{i64 2159481819}
!399 = !{i64 2148501202}
!400 = !{i64 986822, i64 986847, i64 986869, i64 986885, i64 986897, i64 986917, i64 986941, i64 986957, i64 986969}
!401 = !{i64 2148501390}
!402 = !{i64 2148503313, i64 2148503345, i64 2148503374, i64 2148503408, i64 2148503439, i64 2148503462}
!403 = !{i64 2148501783, i64 2148501809, i64 2148501838, i64 2148501872, i64 2148501903, i64 2148501926}
!404 = !{i64 2148603630}
!405 = !{i64 986316, i64 986340, i64 986361, i64 986378, i64 986395}
!406 = !{i64 2148603856}
!407 = !{i64 2148504248, i64 2148504274, i64 2148504303, i64 2148504337, i64 2148504368, i64 2148504391}
!408 = !{i64 2148587218}
!409 = !{i64 2148502503, i64 2148502535, i64 2148502564, i64 2148502598, i64 2148502629, i64 2148502652}
!410 = !{i64 2148587447}
!411 = !{i64 2153478763, i64 2153479246, i64 2153478800, i64 2153478856, i64 2153478890, i64 2153478914, i64 2153478955, i64 2153478976, i64 2153479004, i64 2153479038}
!412 = !{i64 2159614554, i64 2159615037, i64 2159614591, i64 2159614647, i64 2159614681, i64 2159614705, i64 2159614746, i64 2159614767, i64 2159614795, i64 2159614829}
!413 = !{i64 2159587364, i64 2159587847, i64 2159587401, i64 2159587457, i64 2159587491, i64 2159587515, i64 2159587556, i64 2159587577, i64 2159587605, i64 2159587639}
!414 = distinct !{!414, !415}
!415 = !{!"llvm.loop.peeled.count", i32 1}
!416 = !{i64 2153498675, i64 2153499159, i64 2153498712, i64 2153498768, i64 2153498802, i64 2153498826, i64 2153498867, i64 2153498888, i64 2153498916, i64 2153498950}
!417 = !{i64 2159592070, i64 2159592553, i64 2159592107, i64 2159592163, i64 2159592197, i64 2159592221, i64 2159592262, i64 2159592283, i64 2159592311, i64 2159592345}
!418 = !{i64 2159593653, i64 2159594136, i64 2159593690, i64 2159593746, i64 2159593780, i64 2159593804, i64 2159593845, i64 2159593866, i64 2159593894, i64 2159593928}
!419 = !{i64 2159608683, i64 2159609166, i64 2159608720, i64 2159608776, i64 2159608810, i64 2159608834, i64 2159608875, i64 2159608896, i64 2159608924, i64 2159608958}
!420 = !{!"branch_weights", i32 4001, i32 1}
!421 = !{i64 2159269652, i64 2159270134, i64 2159269689, i64 2159269745, i64 2159269779, i64 2159269803, i64 2159269844, i64 2159269865, i64 2159269893, i64 2159269927}
!422 = !{i64 2155039458, i64 2155039946, i64 2155039495, i64 2155039551, i64 2155039585, i64 2155039609, i64 2155039650, i64 2155039671, i64 2155039699, i64 2155039733}
!423 = !{i64 2159626602, i64 2159627085, i64 2159626639, i64 2159626695, i64 2159626729, i64 2159626753, i64 2159626794, i64 2159626815, i64 2159626843, i64 2159626877}
!424 = distinct !{ptr @kernel_sendmsg_locked, null}
!425 = distinct !{ptr @kernel_sendpage_locked, null}
!426 = distinct !{!426, !415}
!427 = distinct !{!427, !415}
!428 = !{i64 2159671465, i64 2159671948, i64 2159671502, i64 2159671558, i64 2159671592, i64 2159671616, i64 2159671657, i64 2159671678, i64 2159671706, i64 2159671740}
!429 = distinct !{!429, !415}
!430 = !{i64 2159683201, i64 2159683684, i64 2159683238, i64 2159683294, i64 2159683328, i64 2159683352, i64 2159683393, i64 2159683414, i64 2159683442, i64 2159683476}
!431 = !{i64 7110666}
!432 = !{i64 2159701573, i64 2159702056, i64 2159701610, i64 2159701666, i64 2159701700, i64 2159701724, i64 2159701765, i64 2159701786, i64 2159701814, i64 2159701848}
!433 = !{i64 2159709635, i64 2159710118, i64 2159709672, i64 2159709728, i64 2159709762, i64 2159709786, i64 2159709827, i64 2159709848, i64 2159709876, i64 2159709910}
!434 = !{i64 2159732528, i64 2159733011, i64 2159732565, i64 2159732621, i64 2159732655, i64 2159732679, i64 2159732720, i64 2159732741, i64 2159732769, i64 2159732803}
!435 = !{i64 2159735279, i64 2159735762, i64 2159735316, i64 2159735372, i64 2159735406, i64 2159735430, i64 2159735471, i64 2159735492, i64 2159735520, i64 2159735554}
!436 = !{i64 2159756018, i64 2159756501, i64 2159756055, i64 2159756111, i64 2159756145, i64 2159756169, i64 2159756210, i64 2159756231, i64 2159756259, i64 2159756293}
!437 = !{i64 2159762232, i64 2159762715, i64 2159762269, i64 2159762325, i64 2159762359, i64 2159762383, i64 2159762424, i64 2159762445, i64 2159762473, i64 2159762507}
!438 = !{i64 2159763927, i64 2159764410, i64 2159763964, i64 2159764020, i64 2159764054, i64 2159764078, i64 2159764119, i64 2159764140, i64 2159764168, i64 2159764202}
!439 = !{i64 2155036490, i64 2155036978, i64 2155036527, i64 2155036583, i64 2155036617, i64 2155036641, i64 2155036682, i64 2155036703, i64 2155036731, i64 2155036765}
!440 = !{i64 2159766697, i64 2159767180, i64 2159766734, i64 2159766790, i64 2159766824, i64 2159766848, i64 2159766889, i64 2159766910, i64 2159766938, i64 2159766972}
!441 = !{i64 2159772351, i64 2159772834, i64 2159772388, i64 2159772444, i64 2159772478, i64 2159772502, i64 2159772543, i64 2159772564, i64 2159772592, i64 2159772626}
!442 = !{!443}
!443 = distinct !{!443, !444, !"skb_head_frag_to_page_desc: %agg.result"}
!444 = distinct !{!444, !"skb_head_frag_to_page_desc"}
!445 = !{i64 2154855504, i64 2154855996, i64 2154855541, i64 2154855597, i64 2154855631, i64 2154855655, i64 2154855696, i64 2154855717, i64 2154855745, i64 2154855779}
!446 = !{i64 2154849185, i64 2154849677, i64 2154849222, i64 2154849278, i64 2154849312, i64 2154849336, i64 2154849377, i64 2154849398, i64 2154849426, i64 2154849460}
!447 = !{i64 2154850795, i64 2154851287, i64 2154850832, i64 2154850888, i64 2154850922, i64 2154850946, i64 2154850987, i64 2154851008, i64 2154851036, i64 2154851070}
!448 = !{i64 2159790962, i64 2159791445, i64 2159790999, i64 2159791055, i64 2159791089, i64 2159791113, i64 2159791154, i64 2159791175, i64 2159791203, i64 2159791237}
!449 = !{i64 7111768, i64 7111809, i64 7111854}
!450 = !{i64 2159833419, i64 2159833902, i64 2159833456, i64 2159833512, i64 2159833546, i64 2159833570, i64 2159833611, i64 2159833632, i64 2159833660, i64 2159833694}
!451 = !{!"auto-init"}
