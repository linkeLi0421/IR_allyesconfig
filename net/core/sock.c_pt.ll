; ModuleID = '/llk/IR_all_yes/net/core/sock.c_pt.bc'
source_filename = "../net/core/sock.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+sk_ns_capable\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_ns_capable\09\09\09\09"
module asm "\09.long\09__crc_sk_ns_capable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_ns_capable:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_ns_capable\22\09\09\09\09\09"
module asm "__kstrtabns_sk_ns_capable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_capable\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_capable\09\09\09\09"
module asm "\09.long\09__crc_sk_capable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_capable:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_capable\22\09\09\09\09\09"
module asm "__kstrtabns_sk_capable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_net_capable\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_net_capable\09\09\09\09"
module asm "\09.long\09__crc_sk_net_capable\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_net_capable:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_net_capable\22\09\09\09\09\09"
module asm "__kstrtabns_sk_net_capable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sysctl_wmem_max\22, \22a\22\09"
module asm "\09.weak\09__crc_sysctl_wmem_max\09\09\09\09"
module asm "\09.long\09__crc_sysctl_wmem_max\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sysctl_wmem_max:\09\09\09\09\09"
module asm "\09.asciz \09\22sysctl_wmem_max\22\09\09\09\09\09"
module asm "__kstrtabns_sysctl_wmem_max:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sysctl_rmem_max\22, \22a\22\09"
module asm "\09.weak\09__crc_sysctl_rmem_max\09\09\09\09"
module asm "\09.long\09__crc_sysctl_rmem_max\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sysctl_rmem_max:\09\09\09\09\09"
module asm "\09.asciz \09\22sysctl_rmem_max\22\09\09\09\09\09"
module asm "__kstrtabns_sysctl_rmem_max:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sysctl_optmem_max\22, \22a\22\09"
module asm "\09.weak\09__crc_sysctl_optmem_max\09\09\09\09"
module asm "\09.long\09__crc_sysctl_optmem_max\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sysctl_optmem_max:\09\09\09\09\09"
module asm "\09.asciz \09\22sysctl_optmem_max\22\09\09\09\09\09"
module asm "__kstrtabns_sysctl_optmem_max:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+memalloc_socks_key\22, \22a\22\09"
module asm "\09.weak\09__crc_memalloc_socks_key\09\09\09\09"
module asm "\09.long\09__crc_memalloc_socks_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_memalloc_socks_key:\09\09\09\09\09"
module asm "\09.asciz \09\22memalloc_socks_key\22\09\09\09\09\09"
module asm "__kstrtabns_memalloc_socks_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+sk_set_memalloc\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_set_memalloc\09\09\09\09"
module asm "\09.long\09__crc_sk_set_memalloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_set_memalloc:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_set_memalloc\22\09\09\09\09\09"
module asm "__kstrtabns_sk_set_memalloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+sk_clear_memalloc\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_clear_memalloc\09\09\09\09"
module asm "\09.long\09__crc_sk_clear_memalloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_clear_memalloc:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_clear_memalloc\22\09\09\09\09\09"
module asm "__kstrtabns_sk_clear_memalloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sk_backlog_rcv\22, \22a\22\09"
module asm "\09.weak\09__crc___sk_backlog_rcv\09\09\09\09"
module asm "\09.long\09__crc___sk_backlog_rcv\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sk_backlog_rcv:\09\09\09\09\09"
module asm "\09.asciz \09\22__sk_backlog_rcv\22\09\09\09\09\09"
module asm "__kstrtabns___sk_backlog_rcv:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_error_report\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_error_report\09\09\09\09"
module asm "\09.long\09__crc_sk_error_report\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_error_report:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_error_report\22\09\09\09\09\09"
module asm "__kstrtabns_sk_error_report:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_get_timeout\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_get_timeout\09\09\09\09"
module asm "\09.long\09__crc_sock_get_timeout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_get_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_get_timeout\22\09\09\09\09\09"
module asm "__kstrtabns_sock_get_timeout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_copy_user_timeval\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_copy_user_timeval\09\09\09\09"
module asm "\09.long\09__crc_sock_copy_user_timeval\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_copy_user_timeval:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_copy_user_timeval\22\09\09\09\09\09"
module asm "__kstrtabns_sock_copy_user_timeval:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sock_queue_rcv_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___sock_queue_rcv_skb\09\09\09\09"
module asm "\09.long\09__crc___sock_queue_rcv_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sock_queue_rcv_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__sock_queue_rcv_skb\22\09\09\09\09\09"
module asm "__kstrtabns___sock_queue_rcv_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_queue_rcv_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_queue_rcv_skb\09\09\09\09"
module asm "\09.long\09__crc_sock_queue_rcv_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_queue_rcv_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_queue_rcv_skb\22\09\09\09\09\09"
module asm "__kstrtabns_sock_queue_rcv_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sk_receive_skb\22, \22a\22\09"
module asm "\09.weak\09__crc___sk_receive_skb\09\09\09\09"
module asm "\09.long\09__crc___sk_receive_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sk_receive_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22__sk_receive_skb\22\09\09\09\09\09"
module asm "__kstrtabns___sk_receive_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sk_dst_check\22, \22a\22\09"
module asm "\09.weak\09__crc___sk_dst_check\09\09\09\09"
module asm "\09.long\09__crc___sk_dst_check\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sk_dst_check:\09\09\09\09\09"
module asm "\09.asciz \09\22__sk_dst_check\22\09\09\09\09\09"
module asm "__kstrtabns___sk_dst_check:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_dst_check\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_dst_check\09\09\09\09"
module asm "\09.long\09__crc_sk_dst_check\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_dst_check:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_dst_check\22\09\09\09\09\09"
module asm "__kstrtabns_sk_dst_check:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_bindtoindex\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_bindtoindex\09\09\09\09"
module asm "\09.long\09__crc_sock_bindtoindex\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_bindtoindex:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_bindtoindex\22\09\09\09\09\09"
module asm "__kstrtabns_sock_bindtoindex:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_mc_loop\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_mc_loop\09\09\09\09"
module asm "\09.long\09__crc_sk_mc_loop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_mc_loop:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_mc_loop\22\09\09\09\09\09"
module asm "__kstrtabns_sk_mc_loop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_set_reuseaddr\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_set_reuseaddr\09\09\09\09"
module asm "\09.long\09__crc_sock_set_reuseaddr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_set_reuseaddr:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_set_reuseaddr\22\09\09\09\09\09"
module asm "__kstrtabns_sock_set_reuseaddr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_set_reuseport\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_set_reuseport\09\09\09\09"
module asm "\09.long\09__crc_sock_set_reuseport\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_set_reuseport:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_set_reuseport\22\09\09\09\09\09"
module asm "__kstrtabns_sock_set_reuseport:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_linger\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_linger\09\09\09\09"
module asm "\09.long\09__crc_sock_no_linger\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_linger:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_linger\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_linger:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_set_priority\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_set_priority\09\09\09\09"
module asm "\09.long\09__crc_sock_set_priority\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_set_priority:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_set_priority\22\09\09\09\09\09"
module asm "__kstrtabns_sock_set_priority:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_set_sndtimeo\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_set_sndtimeo\09\09\09\09"
module asm "\09.long\09__crc_sock_set_sndtimeo\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_set_sndtimeo:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_set_sndtimeo\22\09\09\09\09\09"
module asm "__kstrtabns_sock_set_sndtimeo:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_enable_timestamps\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_enable_timestamps\09\09\09\09"
module asm "\09.long\09__crc_sock_enable_timestamps\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_enable_timestamps:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_enable_timestamps\22\09\09\09\09\09"
module asm "__kstrtabns_sock_enable_timestamps:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_set_keepalive\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_set_keepalive\09\09\09\09"
module asm "\09.long\09__crc_sock_set_keepalive\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_set_keepalive:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_set_keepalive\22\09\09\09\09\09"
module asm "__kstrtabns_sock_set_keepalive:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_set_rcvbuf\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_set_rcvbuf\09\09\09\09"
module asm "\09.long\09__crc_sock_set_rcvbuf\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_set_rcvbuf:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_set_rcvbuf\22\09\09\09\09\09"
module asm "__kstrtabns_sock_set_rcvbuf:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_set_mark\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_set_mark\09\09\09\09"
module asm "\09.long\09__crc_sock_set_mark\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_set_mark:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_set_mark\22\09\09\09\09\09"
module asm "__kstrtabns_sock_set_mark:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_setsockopt\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_setsockopt\09\09\09\09"
module asm "\09.long\09__crc_sock_setsockopt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_setsockopt:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_setsockopt\22\09\09\09\09\09"
module asm "__kstrtabns_sock_setsockopt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_alloc\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_alloc\09\09\09\09"
module asm "\09.long\09__crc_sk_alloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_alloc\22\09\09\09\09\09"
module asm "__kstrtabns_sk_alloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_free\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_free\09\09\09\09"
module asm "\09.long\09__crc_sk_free\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_free:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_free\22\09\09\09\09\09"
module asm "__kstrtabns_sk_free:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+sk_clone_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_clone_lock\09\09\09\09"
module asm "\09.long\09__crc_sk_clone_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_clone_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_clone_lock\22\09\09\09\09\09"
module asm "__kstrtabns_sk_clone_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+sk_free_unlock_clone\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_free_unlock_clone\09\09\09\09"
module asm "\09.long\09__crc_sk_free_unlock_clone\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_free_unlock_clone:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_free_unlock_clone\22\09\09\09\09\09"
module asm "__kstrtabns_sk_free_unlock_clone:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+sk_setup_caps\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_setup_caps\09\09\09\09"
module asm "\09.long\09__crc_sk_setup_caps\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_setup_caps:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_setup_caps\22\09\09\09\09\09"
module asm "__kstrtabns_sk_setup_caps:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_wfree\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_wfree\09\09\09\09"
module asm "\09.long\09__crc_sock_wfree\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_wfree:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_wfree\22\09\09\09\09\09"
module asm "__kstrtabns_sock_wfree:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_set_owner_w\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_set_owner_w\09\09\09\09"
module asm "\09.long\09__crc_skb_set_owner_w\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_set_owner_w:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_set_owner_w\22\09\09\09\09\09"
module asm "__kstrtabns_skb_set_owner_w:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_orphan_partial\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_orphan_partial\09\09\09\09"
module asm "\09.long\09__crc_skb_orphan_partial\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_orphan_partial:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_orphan_partial\22\09\09\09\09\09"
module asm "__kstrtabns_skb_orphan_partial:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_rfree\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_rfree\09\09\09\09"
module asm "\09.long\09__crc_sock_rfree\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_rfree:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_rfree\22\09\09\09\09\09"
module asm "__kstrtabns_sock_rfree:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_efree\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_efree\09\09\09\09"
module asm "\09.long\09__crc_sock_efree\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_efree:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_efree\22\09\09\09\09\09"
module asm "__kstrtabns_sock_efree:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_pfree\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_pfree\09\09\09\09"
module asm "\09.long\09__crc_sock_pfree\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_pfree:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_pfree\22\09\09\09\09\09"
module asm "__kstrtabns_sock_pfree:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_i_uid\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_i_uid\09\09\09\09"
module asm "\09.long\09__crc_sock_i_uid\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_i_uid:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_i_uid\22\09\09\09\09\09"
module asm "__kstrtabns_sock_i_uid:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_i_ino\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_i_ino\09\09\09\09"
module asm "\09.long\09__crc_sock_i_ino\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_i_ino:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_i_ino\22\09\09\09\09\09"
module asm "__kstrtabns_sock_i_ino:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_wmalloc\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_wmalloc\09\09\09\09"
module asm "\09.long\09__crc_sock_wmalloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_wmalloc:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_wmalloc\22\09\09\09\09\09"
module asm "__kstrtabns_sock_wmalloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_kmalloc\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_kmalloc\09\09\09\09"
module asm "\09.long\09__crc_sock_kmalloc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_kmalloc:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_kmalloc\22\09\09\09\09\09"
module asm "__kstrtabns_sock_kmalloc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_kfree_s\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_kfree_s\09\09\09\09"
module asm "\09.long\09__crc_sock_kfree_s\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_kfree_s:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_kfree_s\22\09\09\09\09\09"
module asm "__kstrtabns_sock_kfree_s:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_kzfree_s\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_kzfree_s\09\09\09\09"
module asm "\09.long\09__crc_sock_kzfree_s\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_kzfree_s:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_kzfree_s\22\09\09\09\09\09"
module asm "__kstrtabns_sock_kzfree_s:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_alloc_send_pskb\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_alloc_send_pskb\09\09\09\09"
module asm "\09.long\09__crc_sock_alloc_send_pskb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_alloc_send_pskb:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_alloc_send_pskb\22\09\09\09\09\09"
module asm "__kstrtabns_sock_alloc_send_pskb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_alloc_send_skb\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_alloc_send_skb\09\09\09\09"
module asm "\09.long\09__crc_sock_alloc_send_skb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_alloc_send_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_alloc_send_skb\22\09\09\09\09\09"
module asm "__kstrtabns_sock_alloc_send_skb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sock_cmsg_send\22, \22a\22\09"
module asm "\09.weak\09__crc___sock_cmsg_send\09\09\09\09"
module asm "\09.long\09__crc___sock_cmsg_send\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sock_cmsg_send:\09\09\09\09\09"
module asm "\09.asciz \09\22__sock_cmsg_send\22\09\09\09\09\09"
module asm "__kstrtabns___sock_cmsg_send:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_cmsg_send\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_cmsg_send\09\09\09\09"
module asm "\09.long\09__crc_sock_cmsg_send\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_cmsg_send:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_cmsg_send\22\09\09\09\09\09"
module asm "__kstrtabns_sock_cmsg_send:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+skb_page_frag_refill\22, \22a\22\09"
module asm "\09.weak\09__crc_skb_page_frag_refill\09\09\09\09"
module asm "\09.long\09__crc_skb_page_frag_refill\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_skb_page_frag_refill:\09\09\09\09\09"
module asm "\09.asciz \09\22skb_page_frag_refill\22\09\09\09\09\09"
module asm "__kstrtabns_skb_page_frag_refill:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_page_frag_refill\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_page_frag_refill\09\09\09\09"
module asm "\09.long\09__crc_sk_page_frag_refill\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_page_frag_refill:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_page_frag_refill\22\09\09\09\09\09"
module asm "__kstrtabns_sk_page_frag_refill:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_wait_data\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_wait_data\09\09\09\09"
module asm "\09.long\09__crc_sk_wait_data\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_wait_data:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_wait_data\22\09\09\09\09\09"
module asm "__kstrtabns_sk_wait_data:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sk_mem_raise_allocated\22, \22a\22\09"
module asm "\09.weak\09__crc___sk_mem_raise_allocated\09\09\09\09"
module asm "\09.long\09__crc___sk_mem_raise_allocated\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sk_mem_raise_allocated:\09\09\09\09\09"
module asm "\09.asciz \09\22__sk_mem_raise_allocated\22\09\09\09\09\09"
module asm "__kstrtabns___sk_mem_raise_allocated:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sk_mem_schedule\22, \22a\22\09"
module asm "\09.weak\09__crc___sk_mem_schedule\09\09\09\09"
module asm "\09.long\09__crc___sk_mem_schedule\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sk_mem_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22__sk_mem_schedule\22\09\09\09\09\09"
module asm "__kstrtabns___sk_mem_schedule:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sk_mem_reduce_allocated\22, \22a\22\09"
module asm "\09.weak\09__crc___sk_mem_reduce_allocated\09\09\09\09"
module asm "\09.long\09__crc___sk_mem_reduce_allocated\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sk_mem_reduce_allocated:\09\09\09\09\09"
module asm "\09.asciz \09\22__sk_mem_reduce_allocated\22\09\09\09\09\09"
module asm "__kstrtabns___sk_mem_reduce_allocated:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__sk_mem_reclaim\22, \22a\22\09"
module asm "\09.weak\09__crc___sk_mem_reclaim\09\09\09\09"
module asm "\09.long\09__crc___sk_mem_reclaim\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___sk_mem_reclaim:\09\09\09\09\09"
module asm "\09.asciz \09\22__sk_mem_reclaim\22\09\09\09\09\09"
module asm "__kstrtabns___sk_mem_reclaim:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+sk_set_peek_off\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_set_peek_off\09\09\09\09"
module asm "\09.long\09__crc_sk_set_peek_off\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_set_peek_off:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_set_peek_off\22\09\09\09\09\09"
module asm "__kstrtabns_sk_set_peek_off:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_bind\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_bind\09\09\09\09"
module asm "\09.long\09__crc_sock_no_bind\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_bind:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_bind\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_bind:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_connect\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_connect\09\09\09\09"
module asm "\09.long\09__crc_sock_no_connect\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_connect:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_connect\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_connect:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_socketpair\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_socketpair\09\09\09\09"
module asm "\09.long\09__crc_sock_no_socketpair\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_socketpair:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_socketpair\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_socketpair:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_accept\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_accept\09\09\09\09"
module asm "\09.long\09__crc_sock_no_accept\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_accept:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_accept\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_accept:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_getname\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_getname\09\09\09\09"
module asm "\09.long\09__crc_sock_no_getname\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_getname:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_getname\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_getname:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_ioctl\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_ioctl\09\09\09\09"
module asm "\09.long\09__crc_sock_no_ioctl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_ioctl:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_ioctl\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_ioctl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_listen\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_listen\09\09\09\09"
module asm "\09.long\09__crc_sock_no_listen\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_listen:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_listen\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_listen:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_shutdown\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_shutdown\09\09\09\09"
module asm "\09.long\09__crc_sock_no_shutdown\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_shutdown:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_shutdown\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_shutdown:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_sendmsg\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_sendmsg\09\09\09\09"
module asm "\09.long\09__crc_sock_no_sendmsg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_sendmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_sendmsg\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_sendmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_sendmsg_locked\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_sendmsg_locked\09\09\09\09"
module asm "\09.long\09__crc_sock_no_sendmsg_locked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_sendmsg_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_sendmsg_locked\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_sendmsg_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_recvmsg\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_recvmsg\09\09\09\09"
module asm "\09.long\09__crc_sock_no_recvmsg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_recvmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_recvmsg\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_recvmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_mmap\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_mmap\09\09\09\09"
module asm "\09.long\09__crc_sock_no_mmap\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_mmap:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_mmap\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_mmap:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_sendpage\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_sendpage\09\09\09\09"
module asm "\09.long\09__crc_sock_no_sendpage\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_sendpage:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_sendpage\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_sendpage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_no_sendpage_locked\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_no_sendpage_locked\09\09\09\09"
module asm "\09.long\09__crc_sock_no_sendpage_locked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_no_sendpage_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_no_sendpage_locked\22\09\09\09\09\09"
module asm "__kstrtabns_sock_no_sendpage_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_send_sigurg\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_send_sigurg\09\09\09\09"
module asm "\09.long\09__crc_sk_send_sigurg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_send_sigurg:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_send_sigurg\22\09\09\09\09\09"
module asm "__kstrtabns_sk_send_sigurg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_reset_timer\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_reset_timer\09\09\09\09"
module asm "\09.long\09__crc_sk_reset_timer\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_reset_timer:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_reset_timer\22\09\09\09\09\09"
module asm "__kstrtabns_sk_reset_timer:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_stop_timer\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_stop_timer\09\09\09\09"
module asm "\09.long\09__crc_sk_stop_timer\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_stop_timer:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_stop_timer\22\09\09\09\09\09"
module asm "__kstrtabns_sk_stop_timer:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_stop_timer_sync\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_stop_timer_sync\09\09\09\09"
module asm "\09.long\09__crc_sk_stop_timer_sync\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_stop_timer_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_stop_timer_sync\22\09\09\09\09\09"
module asm "__kstrtabns_sk_stop_timer_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_init_data\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_init_data\09\09\09\09"
module asm "\09.long\09__crc_sock_init_data\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_init_data:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_init_data\22\09\09\09\09\09"
module asm "__kstrtabns_sock_init_data:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+lock_sock_nested\22, \22a\22\09"
module asm "\09.weak\09__crc_lock_sock_nested\09\09\09\09"
module asm "\09.long\09__crc_lock_sock_nested\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_lock_sock_nested:\09\09\09\09\09"
module asm "\09.asciz \09\22lock_sock_nested\22\09\09\09\09\09"
module asm "__kstrtabns_lock_sock_nested:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+release_sock\22, \22a\22\09"
module asm "\09.weak\09__crc_release_sock\09\09\09\09"
module asm "\09.long\09__crc_release_sock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_release_sock:\09\09\09\09\09"
module asm "\09.asciz \09\22release_sock\22\09\09\09\09\09"
module asm "__kstrtabns_release_sock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__lock_sock_fast\22, \22a\22\09"
module asm "\09.weak\09__crc___lock_sock_fast\09\09\09\09"
module asm "\09.long\09__crc___lock_sock_fast\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___lock_sock_fast:\09\09\09\09\09"
module asm "\09.asciz \09\22__lock_sock_fast\22\09\09\09\09\09"
module asm "__kstrtabns___lock_sock_fast:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_gettstamp\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_gettstamp\09\09\09\09"
module asm "\09.long\09__crc_sock_gettstamp\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_gettstamp:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_gettstamp\22\09\09\09\09\09"
module asm "__kstrtabns_sock_gettstamp:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_recv_errqueue\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_recv_errqueue\09\09\09\09"
module asm "\09.long\09__crc_sock_recv_errqueue\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_recv_errqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_recv_errqueue\22\09\09\09\09\09"
module asm "__kstrtabns_sock_recv_errqueue:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_common_getsockopt\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_common_getsockopt\09\09\09\09"
module asm "\09.long\09__crc_sock_common_getsockopt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_common_getsockopt:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_common_getsockopt\22\09\09\09\09\09"
module asm "__kstrtabns_sock_common_getsockopt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_common_recvmsg\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_common_recvmsg\09\09\09\09"
module asm "\09.long\09__crc_sock_common_recvmsg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_common_recvmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_common_recvmsg\22\09\09\09\09\09"
module asm "__kstrtabns_sock_common_recvmsg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_common_setsockopt\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_common_setsockopt\09\09\09\09"
module asm "\09.long\09__crc_sock_common_setsockopt\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_common_setsockopt:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_common_setsockopt\22\09\09\09\09\09"
module asm "__kstrtabns_sock_common_setsockopt:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_common_release\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_common_release\09\09\09\09"
module asm "\09.long\09__crc_sk_common_release\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_common_release:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_common_release\22\09\09\09\09\09"
module asm "__kstrtabns_sk_common_release:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+sock_prot_inuse_get\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_prot_inuse_get\09\09\09\09"
module asm "\09.long\09__crc_sock_prot_inuse_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_prot_inuse_get:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_prot_inuse_get\22\09\09\09\09\09"
module asm "__kstrtabns_sock_prot_inuse_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+sock_inuse_get\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_inuse_get\09\09\09\09"
module asm "\09.long\09__crc_sock_inuse_get\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_inuse_get:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_inuse_get\22\09\09\09\09\09"
module asm "__kstrtabns_sock_inuse_get:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+proto_register\22, \22a\22\09"
module asm "\09.weak\09__crc_proto_register\09\09\09\09"
module asm "\09.long\09__crc_proto_register\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_proto_register:\09\09\09\09\09"
module asm "\09.asciz \09\22proto_register\22\09\09\09\09\09"
module asm "__kstrtabns_proto_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+proto_unregister\22, \22a\22\09"
module asm "\09.weak\09__crc_proto_unregister\09\09\09\09"
module asm "\09.long\09__crc_proto_unregister\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_proto_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22proto_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_proto_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_load_diag_module\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_load_diag_module\09\09\09\09"
module asm "\09.long\09__crc_sock_load_diag_module\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_load_diag_module:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_load_diag_module\22\09\09\09\09\09"
module asm "__kstrtabns_sock_load_diag_module:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sk_busy_loop_end\22, \22a\22\09"
module asm "\09.weak\09__crc_sk_busy_loop_end\09\09\09\09"
module asm "\09.long\09__crc_sk_busy_loop_end\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sk_busy_loop_end:\09\09\09\09\09"
module asm "\09.asciz \09\22sk_busy_loop_end\22\09\09\09\09\09"
module asm "__kstrtabns_sk_busy_loop_end:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+sock_bind_add\22, \22a\22\09"
module asm "\09.weak\09__crc_sock_bind_add\09\09\09\09"
module asm "\09.long\09__crc_sock_bind_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_sock_bind_add:\09\09\09\09\09"
module asm "\09.asciz \09\22sock_bind_add\22\09\09\09\09\09"
module asm "__kstrtabns_sock_bind_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.24 }
%union.anon.24 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.atomic_t = type { i32 }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.8 }
%union.anon.8 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.34, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.34 = type { %struct.anon.35 }
%struct.anon.35 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon.141 }
%union.anon.141 = type { i32 }
%struct.lock_class_key = type { %union.anon.9 }
%union.anon.9 = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.softnet_data = type { %struct.list_head, %struct.sk_buff_head, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.sk_buff_head, %struct.anon.214, [100 x i8], i32, [124 x i8], %struct.__call_single_data, ptr, i32, i32, i32, %struct.sk_buff_head, %struct.napi_struct, [72 x i8] }
%struct.anon.214 = type { i16, i8 }
%struct.__call_single_data = type { %struct.__call_single_node, ptr, ptr }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.17 }
%struct.llist_node = type { ptr }
%union.anon.17 = type { i32 }
%struct.sk_buff_head = type { %union.anon.70, i32, %struct.spinlock }
%union.anon.70 = type { %struct.anon.71 }
%struct.anon.71 = type { ptr, ptr }
%struct.spinlock = type { %union.anon.7 }
%union.anon.7 = type { %struct.raw_spinlock }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.static_key_true = type { %struct.static_key }
%struct.pernet_operations = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.seq_operations = type { ptr, ptr, ptr, ptr }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.165, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.166, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.167, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, ptr }
%struct.sock_common = type { %union.anon, %union.anon.0, %union.anon.1, i16, i8, i8, i32, %union.anon.3, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.161, [0 x i32], %union.anon.162, i16, i16, %union.anon.163, %struct.refcount_struct, [0 x i32], %union.anon.164 }
%union.anon = type { i64 }
%union.anon.0 = type { i32 }
%union.anon.1 = type { i32 }
%union.anon.3 = type { %struct.hlist_node }
%struct.possible_net_t = type { ptr }
%struct.in6_addr = type { %union.anon.44 }
%union.anon.44 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.161 = type { i32 }
%union.anon.162 = type { %struct.hlist_node }
%union.anon.163 = type { i32 }
%union.anon.164 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head, %struct.lockdep_map }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.anon.165 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.166 = type { ptr }
%union.anon.167 = type { ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.page_frag = type { ptr, i16, i16 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.sock_cgroup_data = type { ptr, i32, i16 }
%struct.callback_head = type { ptr, ptr }
%struct.socket = type { i32, i16, i32, ptr, ptr, ptr, [104 x i8], %struct.socket_wq }
%struct.socket_wq = type { %struct.wait_queue_head, ptr, i32, %struct.callback_head, [60 x i8] }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.75, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.anon.75 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.proto = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i8, ptr, i32, i32, i32, i32, ptr, ptr, ptr, %union.anon.160, ptr, [32 x i8], %struct.list_head, ptr }
%union.anon.160 = type { ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.131, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.19 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.131 = type { %struct.callback_head }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.__kernel_old_timeval = type { i32, i32 }
%struct.__kernel_sock_timeval = type { i64, i64 }
%struct.sk_buff = type { %union.anon.45, %union.anon.48, %union.anon.49, [48 x i8], %union.anon.50, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.52, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { ptr, ptr, %union.anon.47 }
%union.anon.47 = type { ptr }
%union.anon.48 = type { ptr }
%union.anon.49 = type { i64 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i32, ptr }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.54, i32, i32, i32, i16, i16, %union.anon.56, i32, %union.anon.57, %union.anon.58, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.54 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i32 }
%union.anon.58 = type { i16 }
%struct.dst_entry = type { ptr, ptr, i32, i32, ptr, ptr, ptr, i16, i16, i16, i16, i32, i32, ptr, %struct.callback_head, i16, i16, i32, %struct.atomic_t, ptr }
%struct.inet_sock = type { %struct.sock, ptr, i32, i16, i16, ptr, i16, i16, i8, i8, i8, i8, i16, i8, i8, i32, i32, i32, ptr, %struct.inet_cork_full }
%struct.inet_cork_full = type { %struct.inet_cork, %struct.flowi }
%struct.inet_cork = type { i32, i32, ptr, i32, i32, ptr, i8, i8, i16, i8, i16, i64, i32 }
%struct.flowi = type { %union.anon.39 }
%union.anon.39 = type { %struct.flowi6 }
%struct.flowi6 = type { %struct.flowi_common, %struct.in6_addr, %struct.in6_addr, i32, %union.flowi_uli, i32 }
%struct.flowi_common = type { i32, i32, i32, i8, i8, i8, i8, i32, %struct.kuid_t, %struct.flowi_tunnel, i32 }
%struct.flowi_tunnel = type { i64 }
%union.flowi_uli = type { i32 }
%struct.ipv6_pinfo = type { %struct.in6_addr, %struct.in6_pktinfo, ptr, ptr, i32, i32, i32, i32, i32, %union.anon.199, i16, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.inet6_cork }
%struct.in6_pktinfo = type { %struct.in6_addr, i32 }
%union.anon.199 = type { %struct.anon.200 }
%struct.anon.200 = type { i16 }
%struct.inet6_cork = type { ptr, i8, i8 }
%struct.tcp_sock = type { %struct.inet_connection_sock, i16, i16, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, %struct.tcp_rack, i16, i8, i8, i32, [3 x i32], i16, i8, i8, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, %struct.minmax, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.tcp_options_received, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrtimer, %struct.hrtimer, ptr, ptr, %struct.rb_root, ptr, [1 x %struct.tcp_sack_block], [4 x %struct.tcp_sack_block], [4 x %struct.tcp_sack_block], ptr, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8, i16, i32, i32, %struct.anon.204, %struct.anon.205, %struct.anon.206, i32, i8, i8, ptr, ptr, ptr, ptr, ptr }
%struct.inet_connection_sock = type { %struct.inet_sock, %struct.request_sock_queue, ptr, i32, %struct.timer_list, %struct.timer_list, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.hlist_node, ptr, i8, i8, i8, i8, i8, i8, i16, %struct.anon.202, %struct.anon.203, i32, i32, [13 x i64] }
%struct.request_sock_queue = type { %struct.spinlock, i8, i32, %struct.atomic_t, %struct.atomic_t, ptr, ptr, %struct.fastopen_queue }
%struct.fastopen_queue = type { ptr, ptr, %struct.spinlock, i32, i32, ptr }
%struct.anon.202 = type { i8, i8, i8, i8, i32, i32, i32, i16, i16 }
%struct.anon.203 = type { i32, i32, i32, i32 }
%struct.tcp_rack = type { i64, i32, i32, i32, i8, i8 }
%struct.minmax = type { [3 x %struct.minmax_sample] }
%struct.minmax_sample = type { i32, i32 }
%struct.tcp_options_received = type { i32, i32, i32, i32, [3 x i8], i8, i16, i16 }
%struct.tcp_sack_block = type { i32, i32 }
%struct.anon.204 = type { i32, i32, i64 }
%struct.anon.205 = type { i32, i32, i64 }
%struct.anon.206 = type { i32, i32 }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.171, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.192, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.171 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%union.anon.192 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.so_timestamping = type { i32, i32 }
%struct.sock_txtime = type { i32, i32 }
%struct.linger = type { i32, i32 }
%struct.sock_fprog = type { i16, ptr }
%struct.proto_ops = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%union.anon.210 = type { %struct.__kernel_sock_timeval }
%struct.ucred = type { i32, i32, i32 }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.36 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.36 = type { %struct.callback_head }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%struct.cgroup_cls_state = type { %struct.cgroup_subsys_state, i32 }
%struct.cgroup_subsys_state = type { ptr, ptr, %struct.percpu_ref, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i64, %struct.atomic_t, %struct.work_struct, %struct.rcu_work, ptr }
%struct.percpu_ref = type { i32, ptr }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.page = type { i32, %union.anon.5, %union.anon.156, %struct.atomic_t, i32 }
%union.anon.5 = type { %struct.anon.6 }
%struct.anon.6 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.156 = type { %struct.atomic_t }
%struct.xfrm_state = type { %struct.possible_net_t, %union.anon.68, %struct.hlist_node, %struct.hlist_node, %struct.hlist_node, %struct.refcount_struct, %struct.spinlock, %struct.xfrm_id, %struct.xfrm_selector, %struct.xfrm_mark, i32, i32, i32, %struct.xfrm_state_walk, %struct.anon.69, %struct.xfrm_lifetime_cfg, ptr, ptr, ptr, ptr, ptr, i16, i32, i32, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.xfrm_replay_state, ptr, %struct.xfrm_replay_state, ptr, i32, i32, i32, i32, %struct.timer_list, %struct.xfrm_stats, %struct.xfrm_lifetime_cur, %struct.hrtimer, %struct.xfrm_state_offload, i32, i64, %struct.page_frag, ptr, %struct.xfrm_mode, %struct.xfrm_mode, %struct.xfrm_mode, ptr, ptr, ptr }
%union.anon.68 = type { %struct.hlist_node }
%struct.xfrm_id = type { %union.xfrm_address_t, i32, i8 }
%union.xfrm_address_t = type { [4 x i32] }
%struct.xfrm_selector = type { %union.xfrm_address_t, %union.xfrm_address_t, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32 }
%struct.xfrm_mark = type { i32, i32 }
%struct.xfrm_state_walk = type { %struct.list_head, i8, i8, i8, i32, ptr }
%struct.anon.69 = type { i32, i8, i8, i8, i8, i8, i8, i16, %union.xfrm_address_t, i32, i32, i32, %struct.xfrm_mark }
%struct.xfrm_lifetime_cfg = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.xfrm_replay_state = type { i32, i32, i32 }
%struct.xfrm_stats = type { i32, i32, i32 }
%struct.xfrm_lifetime_cur = type { i64, i64, i64, i64 }
%struct.xfrm_state_offload = type { ptr, ptr, ptr, i32, i32, i8 }
%struct.xfrm_mode = type { i8, i8, i8 }
%struct.xfrm_dst = type { %union.anon.216, ptr, ptr, ptr, [2 x ptr], i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.216 = type { %struct.rt6_info }
%struct.rt6_info = type { %struct.dst_entry, ptr, i32, %struct.rt6key, %struct.rt6key, %struct.in6_addr, ptr, i32, %struct.list_head, ptr, i16 }
%struct.rt6key = type { %struct.in6_addr, i32 }
%struct.socket_alloc = type { %struct.socket, %struct.inode, [112 x i8] }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.193, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.194, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.195, ptr, %struct.address_space, %struct.list_head, %union.anon.196, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.193 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.194 = type { %struct.callback_head }
%union.anon.195 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%union.anon.196 = type { ptr }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.cmsghdr = type { i32, i32, i32 }
%struct.sockcm_cookie = type { i64, i32, i16 }
%struct.msghdr = type { ptr, i32, %struct.iov_iter, %union.anon.159, i8, i32, i32, ptr }
%struct.iov_iter = type { i8, i8, i8, i32, i32, %union.anon.4, %union.anon.157 }
%union.anon.4 = type { ptr }
%union.anon.157 = type { i64 }
%union.anon.159 = type { ptr }
%struct.mem_cgroup = type { %struct.cgroup_subsys_state, %struct.mem_cgroup_id, %struct.page_counter, %union.anon.169, %struct.page_counter, %struct.page_counter, %struct.work_struct, i32, %struct.vmpressure, i8, i8, i32, i32, i32, %struct.cgroup_file, %struct.cgroup_file, %struct.cgroup_file, %struct.mutex, %struct.mem_cgroup_thresholds, %struct.mem_cgroup_thresholds, %struct.list_head, i32, %struct.spinlock, i32, [20 x i8], %struct.memcg_padding, %struct.memcg_vmstats, [9 x %struct.atomic_t], [9 x %struct.atomic_t], i32, i8, i32, i32, ptr, %struct.list_head, [92 x i8], %struct.memcg_padding, %struct.atomic_t, ptr, ptr, %struct.list_head, %struct.wb_domain, [4 x %struct.memcg_cgwb_frn], %struct.list_head, %struct.spinlock, [0 x ptr], [84 x i8] }
%struct.mem_cgroup_id = type { i32, %struct.refcount_struct }
%union.anon.169 = type { %struct.page_counter }
%struct.page_counter = type { %struct.atomic_t, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t, i32, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr }
%struct.vmpressure = type { i32, i32, i32, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.work_struct }
%struct.cgroup_file = type { ptr, i32, %struct.timer_list }
%struct.mem_cgroup_thresholds = type { ptr, ptr }
%struct.memcg_vmstats = type { [44 x i32], [76 x i32], [44 x i32], [76 x i32] }
%struct.memcg_padding = type { [0 x i8] }
%struct.wb_domain = type { %struct.spinlock, %struct.fprop_global, %struct.timer_list, i32, i32, i32 }
%struct.fprop_global = type { %struct.percpu_counter, i32, %struct.seqcount }
%struct.memcg_cgwb_frn = type { i64, i32, i64, %struct.wb_completion }
%struct.wb_completion = type { %struct.atomic_t, ptr }
%struct.kvec = type { ptr, i32 }
%struct.file = type { %union.anon.11, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.11 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.prot_inuse = type { i32, [64 x i32] }
%struct.request_sock_ops = type { i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.timewait_sock_ops = type { ptr, ptr, i32, ptr, ptr }
%struct.seq_file = type { ptr, i32, i32, i32, i32, i64, i64, %struct.mutex, ptr, i32, ptr, ptr }
%struct.module = type { i32, %struct.list_head, [60 x i8], [20 x i8], %struct.module_kobject, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, i32, ptr, ptr, i8, i8, i8, i32, ptr, ptr, [112 x i8], %struct.module_layout, %struct.module_layout, %struct.mod_arch_specific, i32, i32, %struct.list_head, ptr, ptr, %struct.mod_kallsyms, ptr, ptr, ptr, ptr, i32, ptr, i32, i32, ptr, i32, ptr, i32, ptr, ptr, i32, i32, ptr, ptr, i32, ptr, i32, i32, ptr, ptr, i32, ptr, i32, i32, ptr, %struct.list_head, %struct.list_head, ptr, %struct.atomic_t, ptr, i32, [48 x i8] }
%struct.module_kobject = type { %struct.kobject, ptr, ptr, ptr, ptr }
%struct.module_layout = type { ptr, i32, i32, i32, i32, %struct.mod_tree_node }
%struct.mod_tree_node = type { ptr, %struct.latch_tree_node }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.mod_arch_specific = type { [7 x ptr], %struct.mod_plt_sec, %struct.mod_plt_sec }
%struct.mod_plt_sec = type { ptr, ptr, i32 }
%struct.mod_kallsyms = type { ptr, i32, ptr, ptr }

@__kstrtab_sk_ns_capable = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_ns_capable = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_ns_capable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_ns_capable to i32), ptr @__kstrtab_sk_ns_capable, ptr @__kstrtabns_sk_ns_capable }, section "___ksymtab+sk_ns_capable", align 4
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@__kstrtab_sk_capable = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_capable = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_capable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_capable to i32), ptr @__kstrtab_sk_capable, ptr @__kstrtabns_sk_capable }, section "___ksymtab+sk_capable", align 4
@__kstrtab_sk_net_capable = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_net_capable = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_net_capable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_net_capable to i32), ptr @__kstrtab_sk_net_capable, ptr @__kstrtabns_sk_net_capable }, section "___ksymtab+sk_net_capable", align 4
@sysctl_wmem_max = dso_local global i32 196608, section ".data..read_mostly", align 4
@__kstrtab_sysctl_wmem_max = external dso_local constant [0 x i8], align 1
@__kstrtabns_sysctl_wmem_max = external dso_local constant [0 x i8], align 1
@__ksymtab_sysctl_wmem_max = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sysctl_wmem_max to i32), ptr @__kstrtab_sysctl_wmem_max, ptr @__kstrtabns_sysctl_wmem_max }, section "___ksymtab+sysctl_wmem_max", align 4
@sysctl_rmem_max = dso_local global i32 196608, section ".data..read_mostly", align 4
@__kstrtab_sysctl_rmem_max = external dso_local constant [0 x i8], align 1
@__kstrtabns_sysctl_rmem_max = external dso_local constant [0 x i8], align 1
@__ksymtab_sysctl_rmem_max = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sysctl_rmem_max to i32), ptr @__kstrtab_sysctl_rmem_max, ptr @__kstrtabns_sysctl_rmem_max }, section "___ksymtab+sysctl_rmem_max", align 4
@sysctl_wmem_default = dso_local local_unnamed_addr global i32 196608, section ".data..read_mostly", align 4
@sysctl_rmem_default = dso_local local_unnamed_addr global i32 196608, section ".data..read_mostly", align 4
@sysctl_optmem_max = dso_local global i32 10240, section ".data..read_mostly", align 4
@__kstrtab_sysctl_optmem_max = external dso_local constant [0 x i8], align 1
@__kstrtabns_sysctl_optmem_max = external dso_local constant [0 x i8], align 1
@__ksymtab_sysctl_optmem_max = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sysctl_optmem_max to i32), ptr @__kstrtab_sysctl_optmem_max, ptr @__kstrtabns_sysctl_optmem_max }, section "___ksymtab+sysctl_optmem_max", align 4
@sysctl_tstamp_allow_data = dso_local local_unnamed_addr global i32 1, section ".data..read_mostly", align 4
@memalloc_socks_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } zeroinitializer, align 32
@__kstrtab_memalloc_socks_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_memalloc_socks_key = external dso_local constant [0 x i8], align 1
@__ksymtab_memalloc_socks_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @memalloc_socks_key to i32), ptr @__kstrtab_memalloc_socks_key, ptr @__kstrtabns_memalloc_socks_key }, section "___ksymtab_gpl+memalloc_socks_key", align 4
@__kstrtab_sk_set_memalloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_set_memalloc = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_set_memalloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_set_memalloc to i32), ptr @__kstrtab_sk_set_memalloc, ptr @__kstrtabns_sk_set_memalloc }, section "___ksymtab_gpl+sk_set_memalloc", align 4
@__kstrtab_sk_clear_memalloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_clear_memalloc = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_clear_memalloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_clear_memalloc to i32), ptr @__kstrtab_sk_clear_memalloc, ptr @__kstrtabns_sk_clear_memalloc }, section "___ksymtab_gpl+sk_clear_memalloc", align 4
@__kstrtab___sk_backlog_rcv = external dso_local constant [0 x i8], align 1
@__kstrtabns___sk_backlog_rcv = external dso_local constant [0 x i8], align 1
@__ksymtab___sk_backlog_rcv = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sk_backlog_rcv to i32), ptr @__kstrtab___sk_backlog_rcv, ptr @__kstrtabns___sk_backlog_rcv }, section "___ksymtab+__sk_backlog_rcv", align 4
@__kstrtab_sk_error_report = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_error_report = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_error_report = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_error_report to i32), ptr @__kstrtab_sk_error_report, ptr @__kstrtabns_sk_error_report }, section "___ksymtab+sk_error_report", align 4
@__kstrtab_sock_get_timeout = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_get_timeout = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_get_timeout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_get_timeout to i32), ptr @__kstrtab_sock_get_timeout, ptr @__kstrtabns_sock_get_timeout }, section "___ksymtab+sock_get_timeout", align 4
@__kstrtab_sock_copy_user_timeval = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_copy_user_timeval = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_copy_user_timeval = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_copy_user_timeval to i32), ptr @__kstrtab_sock_copy_user_timeval, ptr @__kstrtabns_sock_copy_user_timeval }, section "___ksymtab+sock_copy_user_timeval", align 4
@__kstrtab___sock_queue_rcv_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___sock_queue_rcv_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___sock_queue_rcv_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sock_queue_rcv_skb to i32), ptr @__kstrtab___sock_queue_rcv_skb, ptr @__kstrtabns___sock_queue_rcv_skb }, section "___ksymtab+__sock_queue_rcv_skb", align 4
@__kstrtab_sock_queue_rcv_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_queue_rcv_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_queue_rcv_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_queue_rcv_skb to i32), ptr @__kstrtab_sock_queue_rcv_skb, ptr @__kstrtabns_sock_queue_rcv_skb }, section "___ksymtab+sock_queue_rcv_skb", align 4
@__kstrtab___sk_receive_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns___sk_receive_skb = external dso_local constant [0 x i8], align 1
@__ksymtab___sk_receive_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sk_receive_skb to i32), ptr @__kstrtab___sk_receive_skb, ptr @__kstrtabns___sk_receive_skb }, section "___ksymtab+__sk_receive_skb", align 4
@__kstrtab___sk_dst_check = external dso_local constant [0 x i8], align 1
@__kstrtabns___sk_dst_check = external dso_local constant [0 x i8], align 1
@__ksymtab___sk_dst_check = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sk_dst_check to i32), ptr @__kstrtab___sk_dst_check, ptr @__kstrtabns___sk_dst_check }, section "___ksymtab+__sk_dst_check", align 4
@__kstrtab_sk_dst_check = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_dst_check = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_dst_check = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_dst_check to i32), ptr @__kstrtab_sk_dst_check, ptr @__kstrtabns_sk_dst_check }, section "___ksymtab+sk_dst_check", align 4
@__kstrtab_sock_bindtoindex = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_bindtoindex = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_bindtoindex = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_bindtoindex to i32), ptr @__kstrtab_sock_bindtoindex, ptr @__kstrtabns_sock_bindtoindex }, section "___ksymtab+sock_bindtoindex", align 4
@sk_mc_loop.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"net/core/sock.c\00", [16 x i8] zeroinitializer }, align 32
@__kstrtab_sk_mc_loop = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_mc_loop = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_mc_loop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_mc_loop to i32), ptr @__kstrtab_sk_mc_loop, ptr @__kstrtabns_sk_mc_loop }, section "___ksymtab+sk_mc_loop", align 4
@__kstrtab_sock_set_reuseaddr = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_set_reuseaddr = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_set_reuseaddr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_set_reuseaddr to i32), ptr @__kstrtab_sock_set_reuseaddr, ptr @__kstrtabns_sock_set_reuseaddr }, section "___ksymtab+sock_set_reuseaddr", align 4
@__kstrtab_sock_set_reuseport = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_set_reuseport = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_set_reuseport = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_set_reuseport to i32), ptr @__kstrtab_sock_set_reuseport, ptr @__kstrtabns_sock_set_reuseport }, section "___ksymtab+sock_set_reuseport", align 4
@__kstrtab_sock_no_linger = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_linger = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_linger = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_linger to i32), ptr @__kstrtab_sock_no_linger, ptr @__kstrtabns_sock_no_linger }, section "___ksymtab+sock_no_linger", align 4
@__kstrtab_sock_set_priority = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_set_priority = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_set_priority = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_set_priority to i32), ptr @__kstrtab_sock_set_priority, ptr @__kstrtabns_sock_set_priority }, section "___ksymtab+sock_set_priority", align 4
@__kstrtab_sock_set_sndtimeo = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_set_sndtimeo = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_set_sndtimeo = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_set_sndtimeo to i32), ptr @__kstrtab_sock_set_sndtimeo, ptr @__kstrtabns_sock_set_sndtimeo }, section "___ksymtab+sock_set_sndtimeo", align 4
@__kstrtab_sock_enable_timestamps = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_enable_timestamps = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_enable_timestamps = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_enable_timestamps to i32), ptr @__kstrtab_sock_enable_timestamps, ptr @__kstrtabns_sock_enable_timestamps }, section "___ksymtab+sock_enable_timestamps", align 4
@__kstrtab_sock_set_keepalive = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_set_keepalive = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_set_keepalive = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_set_keepalive to i32), ptr @__kstrtab_sock_set_keepalive, ptr @__kstrtabns_sock_set_keepalive }, section "___ksymtab+sock_set_keepalive", align 4
@__kstrtab_sock_set_rcvbuf = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_set_rcvbuf = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_set_rcvbuf = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_set_rcvbuf to i32), ptr @__kstrtab_sock_set_rcvbuf, ptr @__kstrtabns_sock_set_rcvbuf }, section "___ksymtab+sock_set_rcvbuf", align 4
@__kstrtab_sock_set_mark = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_set_mark = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_set_mark = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_set_mark to i32), ptr @__kstrtab_sock_set_mark, ptr @__kstrtabns_sock_set_mark }, section "___ksymtab+sock_set_mark", align 4
@__kstrtab_sock_setsockopt = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_setsockopt = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_setsockopt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_setsockopt to i32), ptr @__kstrtab_sock_setsockopt, ptr @__kstrtabns_sock_setsockopt }, section "___ksymtab+sock_setsockopt", align 4
@__kstrtab_sk_alloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_alloc = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_alloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_alloc to i32), ptr @__kstrtab_sk_alloc, ptr @__kstrtabns_sk_alloc }, section "___ksymtab+sk_alloc", align 4
@sk_destruct.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_sk_free = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_free = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_free = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_free to i32), ptr @__kstrtab_sk_free, ptr @__kstrtabns_sk_free }, section "___ksymtab+sk_free", align 4
@sk_clone_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.2 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__kstrtab_sk_clone_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_clone_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_clone_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_clone_lock to i32), ptr @__kstrtab_sk_clone_lock, ptr @__kstrtabns_sk_clone_lock }, section "___ksymtab_gpl+sk_clone_lock", align 4
@__kstrtab_sk_free_unlock_clone = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_free_unlock_clone = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_free_unlock_clone = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_free_unlock_clone to i32), ptr @__kstrtab_sk_free_unlock_clone, ptr @__kstrtabns_sk_free_unlock_clone }, section "___ksymtab_gpl+sk_free_unlock_clone", align 4
@__kstrtab_sk_setup_caps = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_setup_caps = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_setup_caps = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_setup_caps to i32), ptr @__kstrtab_sk_setup_caps, ptr @__kstrtabns_sk_setup_caps }, section "___ksymtab_gpl+sk_setup_caps", align 4
@__kstrtab_sock_wfree = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_wfree = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_wfree = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_wfree to i32), ptr @__kstrtab_sock_wfree, ptr @__kstrtabns_sock_wfree }, section "___ksymtab+sock_wfree", align 4
@__kstrtab_skb_set_owner_w = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_set_owner_w = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_set_owner_w = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_set_owner_w to i32), ptr @__kstrtab_skb_set_owner_w, ptr @__kstrtabns_skb_set_owner_w }, section "___ksymtab+skb_set_owner_w", align 4
@__kstrtab_skb_orphan_partial = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_orphan_partial = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_orphan_partial = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_orphan_partial to i32), ptr @__kstrtab_skb_orphan_partial, ptr @__kstrtabns_skb_orphan_partial }, section "___ksymtab+skb_orphan_partial", align 4
@__kstrtab_sock_rfree = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_rfree = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_rfree = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_rfree to i32), ptr @__kstrtab_sock_rfree, ptr @__kstrtabns_sock_rfree }, section "___ksymtab+sock_rfree", align 4
@__kstrtab_sock_efree = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_efree = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_efree = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_efree to i32), ptr @__kstrtab_sock_efree, ptr @__kstrtabns_sock_efree }, section "___ksymtab+sock_efree", align 4
@__kstrtab_sock_pfree = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_pfree = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_pfree = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_pfree to i32), ptr @__kstrtab_sock_pfree, ptr @__kstrtabns_sock_pfree }, section "___ksymtab+sock_pfree", align 4
@__kstrtab_sock_i_uid = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_i_uid = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_i_uid = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_i_uid to i32), ptr @__kstrtab_sock_i_uid, ptr @__kstrtabns_sock_i_uid }, section "___ksymtab+sock_i_uid", align 4
@__kstrtab_sock_i_ino = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_i_ino = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_i_ino = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_i_ino to i32), ptr @__kstrtab_sock_i_ino, ptr @__kstrtabns_sock_i_ino }, section "___ksymtab+sock_i_ino", align 4
@__kstrtab_sock_wmalloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_wmalloc = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_wmalloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_wmalloc to i32), ptr @__kstrtab_sock_wmalloc, ptr @__kstrtabns_sock_wmalloc }, section "___ksymtab+sock_wmalloc", align 4
@__kstrtab_sock_kmalloc = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_kmalloc = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_kmalloc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_kmalloc to i32), ptr @__kstrtab_sock_kmalloc, ptr @__kstrtabns_sock_kmalloc }, section "___ksymtab+sock_kmalloc", align 4
@__kstrtab_sock_kfree_s = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_kfree_s = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_kfree_s = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_kfree_s to i32), ptr @__kstrtab_sock_kfree_s, ptr @__kstrtabns_sock_kfree_s }, section "___ksymtab+sock_kfree_s", align 4
@__kstrtab_sock_kzfree_s = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_kzfree_s = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_kzfree_s = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_kzfree_s to i32), ptr @__kstrtab_sock_kzfree_s, ptr @__kstrtabns_sock_kzfree_s }, section "___ksymtab+sock_kzfree_s", align 4
@__kstrtab_sock_alloc_send_pskb = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_alloc_send_pskb = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_alloc_send_pskb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_alloc_send_pskb to i32), ptr @__kstrtab_sock_alloc_send_pskb, ptr @__kstrtabns_sock_alloc_send_pskb }, section "___ksymtab+sock_alloc_send_pskb", align 4
@__kstrtab_sock_alloc_send_skb = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_alloc_send_skb = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_alloc_send_skb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_alloc_send_skb to i32), ptr @__kstrtab_sock_alloc_send_skb, ptr @__kstrtabns_sock_alloc_send_skb }, section "___ksymtab+sock_alloc_send_skb", align 4
@__kstrtab___sock_cmsg_send = external dso_local constant [0 x i8], align 1
@__kstrtabns___sock_cmsg_send = external dso_local constant [0 x i8], align 1
@__ksymtab___sock_cmsg_send = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sock_cmsg_send to i32), ptr @__kstrtab___sock_cmsg_send, ptr @__kstrtabns___sock_cmsg_send }, section "___ksymtab+__sock_cmsg_send", align 4
@__kstrtab_sock_cmsg_send = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_cmsg_send = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_cmsg_send = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_cmsg_send to i32), ptr @__kstrtab_sock_cmsg_send, ptr @__kstrtabns_sock_cmsg_send }, section "___ksymtab+sock_cmsg_send", align 4
@net_high_order_alloc_disable_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } zeroinitializer, align 32
@__kstrtab_skb_page_frag_refill = external dso_local constant [0 x i8], align 1
@__kstrtabns_skb_page_frag_refill = external dso_local constant [0 x i8], align 1
@__ksymtab_skb_page_frag_refill = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @skb_page_frag_refill to i32), ptr @__kstrtab_skb_page_frag_refill, ptr @__kstrtabns_skb_page_frag_refill }, section "___ksymtab+skb_page_frag_refill", align 4
@__kstrtab_sk_page_frag_refill = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_page_frag_refill = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_page_frag_refill = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_page_frag_refill to i32), ptr @__kstrtab_sk_page_frag_refill, ptr @__kstrtabns_sk_page_frag_refill }, section "___ksymtab+sk_page_frag_refill", align 4
@__release_sock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_sk_wait_data = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_wait_data = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_wait_data = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_wait_data to i32), ptr @__kstrtab_sk_wait_data, ptr @__kstrtabns_sk_wait_data }, section "___ksymtab+sk_wait_data", align 4
@memcg_sockets_enabled_key = external dso_local global %struct.static_key_false, align 4
@__kstrtab___sk_mem_raise_allocated = external dso_local constant [0 x i8], align 1
@__kstrtabns___sk_mem_raise_allocated = external dso_local constant [0 x i8], align 1
@__ksymtab___sk_mem_raise_allocated = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sk_mem_raise_allocated to i32), ptr @__kstrtab___sk_mem_raise_allocated, ptr @__kstrtabns___sk_mem_raise_allocated }, section "___ksymtab+__sk_mem_raise_allocated", align 4
@__kstrtab___sk_mem_schedule = external dso_local constant [0 x i8], align 1
@__kstrtabns___sk_mem_schedule = external dso_local constant [0 x i8], align 1
@__ksymtab___sk_mem_schedule = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sk_mem_schedule to i32), ptr @__kstrtab___sk_mem_schedule, ptr @__kstrtabns___sk_mem_schedule }, section "___ksymtab+__sk_mem_schedule", align 4
@__kstrtab___sk_mem_reduce_allocated = external dso_local constant [0 x i8], align 1
@__kstrtabns___sk_mem_reduce_allocated = external dso_local constant [0 x i8], align 1
@__ksymtab___sk_mem_reduce_allocated = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sk_mem_reduce_allocated to i32), ptr @__kstrtab___sk_mem_reduce_allocated, ptr @__kstrtabns___sk_mem_reduce_allocated }, section "___ksymtab+__sk_mem_reduce_allocated", align 4
@__kstrtab___sk_mem_reclaim = external dso_local constant [0 x i8], align 1
@__kstrtabns___sk_mem_reclaim = external dso_local constant [0 x i8], align 1
@__ksymtab___sk_mem_reclaim = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__sk_mem_reclaim to i32), ptr @__kstrtab___sk_mem_reclaim, ptr @__kstrtabns___sk_mem_reclaim }, section "___ksymtab+__sk_mem_reclaim", align 4
@__kstrtab_sk_set_peek_off = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_set_peek_off = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_set_peek_off = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_set_peek_off to i32), ptr @__kstrtab_sk_set_peek_off, ptr @__kstrtabns_sk_set_peek_off }, section "___ksymtab_gpl+sk_set_peek_off", align 4
@__kstrtab_sock_no_bind = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_bind = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_bind = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_bind to i32), ptr @__kstrtab_sock_no_bind, ptr @__kstrtabns_sock_no_bind }, section "___ksymtab+sock_no_bind", align 4
@__kstrtab_sock_no_connect = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_connect = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_connect = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_connect to i32), ptr @__kstrtab_sock_no_connect, ptr @__kstrtabns_sock_no_connect }, section "___ksymtab+sock_no_connect", align 4
@__kstrtab_sock_no_socketpair = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_socketpair = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_socketpair = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_socketpair to i32), ptr @__kstrtab_sock_no_socketpair, ptr @__kstrtabns_sock_no_socketpair }, section "___ksymtab+sock_no_socketpair", align 4
@__kstrtab_sock_no_accept = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_accept = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_accept = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_accept to i32), ptr @__kstrtab_sock_no_accept, ptr @__kstrtabns_sock_no_accept }, section "___ksymtab+sock_no_accept", align 4
@__kstrtab_sock_no_getname = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_getname = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_getname = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_getname to i32), ptr @__kstrtab_sock_no_getname, ptr @__kstrtabns_sock_no_getname }, section "___ksymtab+sock_no_getname", align 4
@__kstrtab_sock_no_ioctl = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_ioctl = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_ioctl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_ioctl to i32), ptr @__kstrtab_sock_no_ioctl, ptr @__kstrtabns_sock_no_ioctl }, section "___ksymtab+sock_no_ioctl", align 4
@__kstrtab_sock_no_listen = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_listen = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_listen = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_listen to i32), ptr @__kstrtab_sock_no_listen, ptr @__kstrtabns_sock_no_listen }, section "___ksymtab+sock_no_listen", align 4
@__kstrtab_sock_no_shutdown = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_shutdown = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_shutdown = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_shutdown to i32), ptr @__kstrtab_sock_no_shutdown, ptr @__kstrtabns_sock_no_shutdown }, section "___ksymtab+sock_no_shutdown", align 4
@__kstrtab_sock_no_sendmsg = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_sendmsg = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_sendmsg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_sendmsg to i32), ptr @__kstrtab_sock_no_sendmsg, ptr @__kstrtabns_sock_no_sendmsg }, section "___ksymtab+sock_no_sendmsg", align 4
@__kstrtab_sock_no_sendmsg_locked = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_sendmsg_locked = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_sendmsg_locked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_sendmsg_locked to i32), ptr @__kstrtab_sock_no_sendmsg_locked, ptr @__kstrtabns_sock_no_sendmsg_locked }, section "___ksymtab+sock_no_sendmsg_locked", align 4
@__kstrtab_sock_no_recvmsg = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_recvmsg = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_recvmsg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_recvmsg to i32), ptr @__kstrtab_sock_no_recvmsg, ptr @__kstrtabns_sock_no_recvmsg }, section "___ksymtab+sock_no_recvmsg", align 4
@__kstrtab_sock_no_mmap = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_mmap = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_mmap = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_mmap to i32), ptr @__kstrtab_sock_no_mmap, ptr @__kstrtabns_sock_no_mmap }, section "___ksymtab+sock_no_mmap", align 4
@__kstrtab_sock_no_sendpage = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_sendpage = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_sendpage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_sendpage to i32), ptr @__kstrtab_sock_no_sendpage, ptr @__kstrtabns_sock_no_sendpage }, section "___ksymtab+sock_no_sendpage", align 4
@__kstrtab_sock_no_sendpage_locked = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_no_sendpage_locked = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_no_sendpage_locked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_no_sendpage_locked to i32), ptr @__kstrtab_sock_no_sendpage_locked, ptr @__kstrtabns_sock_no_sendpage_locked }, section "___ksymtab+sock_no_sendpage_locked", align 4
@sock_def_readable.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_sk_send_sigurg = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_send_sigurg = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_send_sigurg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_send_sigurg to i32), ptr @__kstrtab_sk_send_sigurg, ptr @__kstrtabns_sk_send_sigurg }, section "___ksymtab+sk_send_sigurg", align 4
@__kstrtab_sk_reset_timer = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_reset_timer = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_reset_timer = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_reset_timer to i32), ptr @__kstrtab_sk_reset_timer, ptr @__kstrtabns_sk_reset_timer }, section "___ksymtab+sk_reset_timer", align 4
@__kstrtab_sk_stop_timer = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_stop_timer = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_stop_timer = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_stop_timer to i32), ptr @__kstrtab_sk_stop_timer, ptr @__kstrtabns_sk_stop_timer }, section "___ksymtab+sk_stop_timer", align 4
@__kstrtab_sk_stop_timer_sync = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_stop_timer_sync = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_stop_timer_sync = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_stop_timer_sync to i32), ptr @__kstrtab_sk_stop_timer_sync, ptr @__kstrtabns_sk_stop_timer_sync }, section "___ksymtab+sk_stop_timer_sync", align 4
@sock_init_data.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.3 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"(&sk->sk_timer)\00", [16 x i8] zeroinitializer }, align 32
@sock_init_data.__key.4 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.5 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&sk->sk_callback_lock\00", [42 x i8] zeroinitializer }, align 32
@af_family_kern_clock_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.375, ptr @.str.376, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381, ptr @.str.382, ptr @.str.383, ptr @.str.384, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.389, ptr @.str.390, ptr @.str.391, ptr @.str.392, ptr @.str.393, ptr @.str.394, ptr @.str.395, ptr @.str.396, ptr @.str.397, ptr @.str.398, ptr @.str.399, ptr @.str.400, ptr @.str.401, ptr @.str.402, ptr @.str.403, ptr @.str.404, ptr @.str.405, ptr @.str.406, ptr @.str.407, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.413, ptr @.str.414, ptr @.str.415, ptr @.str.416, ptr @.str.417, ptr @.str.418, ptr @.str.419, ptr @.str.420, ptr @.str.421], [36 x i8] zeroinitializer }, align 32
@af_kern_callback_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@af_family_clock_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.422, ptr @.str.423, ptr @.str.424, ptr @.str.425, ptr @.str.426, ptr @.str.427, ptr @.str.428, ptr @.str.429, ptr @.str.430, ptr @.str.431, ptr @.str.432, ptr @.str.433, ptr @.str.434, ptr @.str.435, ptr @.str.436, ptr @.str.437, ptr @.str.438, ptr @.str.439, ptr @.str.440, ptr @.str.441, ptr @.str.442, ptr @.str.443, ptr @.str.444, ptr @.str.445, ptr @.str.446, ptr @.str.447, ptr @.str.448, ptr @.str.449, ptr @.str.450, ptr @.str.451, ptr @.str.452, ptr @.str.453, ptr @.str.454, ptr @.str.455, ptr @.str.456, ptr @.str.457, ptr @.str.458, ptr @.str.459, ptr @.str.460, ptr @.str.461, ptr @.str.462, ptr @.str.463, ptr @.str.464, ptr @.str.465, ptr @.str.466, ptr @.str.467, ptr @.str.468], [36 x i8] zeroinitializer }, align 32
@af_callback_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@sock_init_data.__key.6 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.7 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&sk->sk_peer_lock\00", [46 x i8] zeroinitializer }, align 32
@sock_init_data.__key.8 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.9 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"&(&sk->sk_stamp_seq)->lock\00", [37 x i8] zeroinitializer }, align 32
@sock_init_data.__key.10 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.11 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"&____s->seqcount\00", [47 x i8] zeroinitializer }, align 32
@sysctl_net_busy_read = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@__kstrtab_sock_init_data = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_init_data = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_init_data = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_init_data to i32), ptr @__kstrtab_sock_init_data, ptr @__kstrtabns_sock_init_data }, section "___ksymtab+sock_init_data", align 4
@__kstrtab_lock_sock_nested = external dso_local constant [0 x i8], align 1
@__kstrtabns_lock_sock_nested = external dso_local constant [0 x i8], align 1
@__ksymtab_lock_sock_nested = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @lock_sock_nested to i32), ptr @__kstrtab_lock_sock_nested, ptr @__kstrtabns_lock_sock_nested }, section "___ksymtab+lock_sock_nested", align 4
@__kstrtab_release_sock = external dso_local constant [0 x i8], align 1
@__kstrtabns_release_sock = external dso_local constant [0 x i8], align 1
@__ksymtab_release_sock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @release_sock to i32), ptr @__kstrtab_release_sock, ptr @__kstrtabns_release_sock }, section "___ksymtab+release_sock", align 4
@__kstrtab___lock_sock_fast = external dso_local constant [0 x i8], align 1
@__kstrtabns___lock_sock_fast = external dso_local constant [0 x i8], align 1
@__ksymtab___lock_sock_fast = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__lock_sock_fast to i32), ptr @__kstrtab___lock_sock_fast, ptr @__kstrtabns___lock_sock_fast }, section "___ksymtab+__lock_sock_fast", align 4
@__kstrtab_sock_gettstamp = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_gettstamp = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_gettstamp = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_gettstamp to i32), ptr @__kstrtab_sock_gettstamp, ptr @__kstrtabns_sock_gettstamp }, section "___ksymtab+sock_gettstamp", align 4
@__kstrtab_sock_recv_errqueue = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_recv_errqueue = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_recv_errqueue = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_recv_errqueue to i32), ptr @__kstrtab_sock_recv_errqueue, ptr @__kstrtabns_sock_recv_errqueue }, section "___ksymtab+sock_recv_errqueue", align 4
@__kstrtab_sock_common_getsockopt = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_common_getsockopt = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_common_getsockopt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_common_getsockopt to i32), ptr @__kstrtab_sock_common_getsockopt, ptr @__kstrtabns_sock_common_getsockopt }, section "___ksymtab+sock_common_getsockopt", align 4
@__kstrtab_sock_common_recvmsg = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_common_recvmsg = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_common_recvmsg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_common_recvmsg to i32), ptr @__kstrtab_sock_common_recvmsg, ptr @__kstrtabns_sock_common_recvmsg }, section "___ksymtab+sock_common_recvmsg", align 4
@__kstrtab_sock_common_setsockopt = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_common_setsockopt = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_common_setsockopt = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_common_setsockopt to i32), ptr @__kstrtab_sock_common_setsockopt, ptr @__kstrtabns_sock_common_setsockopt }, section "___ksymtab+sock_common_setsockopt", align 4
@__kstrtab_sk_common_release = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_common_release = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_common_release = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_common_release to i32), ptr @__kstrtab_sk_common_release, ptr @__kstrtabns_sk_common_release }, section "___ksymtab+sk_common_release", align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__kstrtab_sock_prot_inuse_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_prot_inuse_get = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_prot_inuse_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_prot_inuse_get to i32), ptr @__kstrtab_sock_prot_inuse_get, ptr @__kstrtabns_sock_prot_inuse_get }, section "___ksymtab_gpl+sock_prot_inuse_get", align 4
@__kstrtab_sock_inuse_get = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_inuse_get = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_inuse_get = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_inuse_get to i32), ptr @__kstrtab_sock_inuse_get, ptr @__kstrtabns_sock_inuse_get }, section "___ksymtab_gpl+sock_inuse_get", align 4
@__initcall__kmod_sock__702_3598_net_inuse_init1 = internal global ptr @net_inuse_init, section ".initcall1.init", align 4
@proto_register._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.12, ptr @.str.13, ptr @.str, i32 3715, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\012sock: %s: Can't create sock SLAB cache!\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"proto_register\00", [17 x i8] zeroinitializer }, align 32
@proto_register._entry_ptr = internal global ptr @proto_register._entry, section ".printk_index", align 4
@proto_list_mutex = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.477, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @proto_list_mutex, i64 52), ptr getelementptr (i8, ptr @proto_list_mutex, i64 52) }, ptr @proto_list_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.478, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@proto_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @proto_list, ptr @proto_list }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_proto_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_proto_register = external dso_local constant [0 x i8], align 1
@__ksymtab_proto_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @proto_register to i32), ptr @__kstrtab_proto_register, ptr @__kstrtabns_proto_register }, section "___ksymtab+proto_register", align 4
@__kstrtab_proto_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_proto_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_proto_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @proto_unregister to i32), ptr @__kstrtab_proto_unregister, ptr @__kstrtabns_proto_unregister }, section "___ksymtab+proto_unregister", align 4
@.str.14 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"net-pf-%d-proto-%d-type-%d\00", [37 x i8] zeroinitializer }, align 32
@inet_protos = external dso_local global [256 x ptr], align 4
@.str.15 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"net-pf-%d-proto-%d-type-%d-%d\00", [34 x i8] zeroinitializer }, align 32
@__kstrtab_sock_load_diag_module = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_load_diag_module = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_load_diag_module = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_load_diag_module to i32), ptr @__kstrtab_sock_load_diag_module, ptr @__kstrtabns_sock_load_diag_module }, section "___ksymtab+sock_load_diag_module", align 4
@__initcall__kmod_sock__705_3907_proto_init4 = internal global ptr @proto_init, section ".initcall4.init", align 4
@__kstrtab_sk_busy_loop_end = external dso_local constant [0 x i8], align 1
@__kstrtabns_sk_busy_loop_end = external dso_local constant [0 x i8], align 1
@__ksymtab_sk_busy_loop_end = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sk_busy_loop_end to i32), ptr @__kstrtab_sk_busy_loop_end, ptr @__kstrtabns_sk_busy_loop_end }, section "___ksymtab+sk_busy_loop_end", align 4
@__kstrtab_sock_bind_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_sock_bind_add = external dso_local constant [0 x i8], align 1
@__ksymtab_sock_bind_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @sock_bind_add to i32), ptr @__kstrtab_sock_bind_add, ptr @__kstrtabns_sock_bind_add }, section "___ksymtab+sock_bind_add", align 4
@__tracepoint_inet_sk_error_report = external dso_local global %struct.tracepoint, align 4
@.str.16 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/trace/events/sock.h\00", [36 x i8] zeroinitializer }, align 32
@trace_inet_sk_error_report.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.17 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@check_copy_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.18 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/thread_info.h\00", [36 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@__tracepoint_sock_rcvqueue_full = external dso_local global %struct.tracepoint, align 4
@trace_sock_rcvqueue_full.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.21 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"include/net/dst.h\00", [46 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/skbuff.h\00", [41 x i8] zeroinitializer }, align 32
@sock_owned_by_me.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.23 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"include/net/sock.h\00", [45 x i8] zeroinitializer }, align 32
@__sk_dst_get.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@sk_dst_get.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@softnet_data = external dso_local global %struct.softnet_data, section ".data..percpu..shared_aligned", align 128
@sock_timestamping_bind_phc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.25, ptr @.str, i32 842, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013sock: %s: sock not bind to device\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"sock_timestamping_bind_phc\00", [37 x i8] zeroinitializer }, align 32
@sock_timestamping_bind_phc._entry_ptr = internal global ptr @sock_timestamping_bind_phc._entry, section ".printk_index", align 4
@sock_set_timeout.warned = internal unnamed_addr global i32 0, section ".data..read_mostly", align 4
@sock_set_timeout._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.27, ptr @.str, i32 437, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\016sock: %s: `%s' (pid %d) tries to set negative timeout\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sock_set_timeout\00", [47 x i8] zeroinitializer }, align 32
@sock_set_timeout._entry_ptr = internal global ptr @sock_set_timeout._entry, section ".printk_index", align 4
@.str.28 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"include/linux/cred.h\00", [43 x i8] zeroinitializer }, align 32
@init_on_alloc = external dso_local global %struct.static_key_true, align 4
@sock_lock_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.29 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&sk->sk_lock.wq\00", [16 x i8] zeroinitializer }, align 32
@sock_lock_init.__key.30 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.31 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&(sk)->sk_lock.slock\00", [43 x i8] zeroinitializer }, align 32
@af_family_kern_slock_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80], [36 x i8] zeroinitializer }, align 32
@af_family_kern_slock_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@af_family_kern_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127], [36 x i8] zeroinitializer }, align 32
@af_family_kern_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@sock_lock_init.__key.32 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@sock_lock_init.__key.33 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@af_family_slock_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174], [36 x i8] zeroinitializer }, align 32
@af_family_slock_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@af_family_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221], [36 x i8] zeroinitializer }, align 32
@af_family_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@.str.34 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_UNSPEC\00", [46 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_UNIX\00", [16 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_INET\00", [16 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_AX25\00", [16 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_IPX\00", [17 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"k-slock-AF_APPLETALK\00", [43 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_NETROM\00", [46 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_BRIDGE\00", [46 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_ATMPVC\00", [46 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_X25\00", [17 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-slock-AF_INET6\00", [47 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_ROSE\00", [16 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_DECnet\00", [46 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-slock-AF_NETBEUI\00", [45 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-slock-AF_SECURITY\00", [44 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_KEY\00", [17 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-slock-AF_NETLINK\00", [45 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_PACKET\00", [46 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_ASH\00", [17 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_ECONET\00", [46 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_ATMSVC\00", [46 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_RDS\00", [17 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_SNA\00", [17 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_IRDA\00", [16 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-slock-AF_PPPOX\00", [47 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-slock-AF_WANPIPE\00", [45 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_LLC\00", [17 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"k-slock-27\00", [21 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"k-slock-28\00", [21 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_CAN\00", [17 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_TIPC\00", [16 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"k-slock-AF_BLUETOOTH\00", [43 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"k-slock-IUCV\00", [19 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-slock-AF_RXRPC\00", [47 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_ISDN\00", [16 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-slock-AF_PHONET\00", [46 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"k-slock-AF_IEEE802154\00", [42 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_CAIF\00", [16 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_ALG\00", [17 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_NFC\00", [17 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-slock-AF_VSOCK\00", [47 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_KCM\00", [17 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-slock-AF_QIPCRTR\00", [45 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_SMC\00", [17 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_XDP\00", [17 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-slock-AF_MCTP\00", [16 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-slock-AF_MAX\00", [17 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_UNSPEC\00", [44 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_UNIX\00", [46 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_INET\00", [46 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_AX25\00", [46 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_IPX\00", [47 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"k-sk_lock-AF_APPLETALK\00", [41 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_NETROM\00", [44 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_BRIDGE\00", [44 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_ATMPVC\00", [44 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_X25\00", [47 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-sk_lock-AF_INET6\00", [45 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_ROSE\00", [46 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_DECnet\00", [44 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"k-sk_lock-AF_NETBEUI\00", [43 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"k-sk_lock-AF_SECURITY\00", [42 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_KEY\00", [47 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"k-sk_lock-AF_NETLINK\00", [43 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_PACKET\00", [44 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_ASH\00", [47 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_ECONET\00", [44 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_ATMSVC\00", [44 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_RDS\00", [47 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_SNA\00", [47 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_IRDA\00", [46 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-sk_lock-AF_PPPOX\00", [45 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"k-sk_lock-AF_WANPIPE\00", [43 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_LLC\00", [47 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"k-sk_lock-27\00", [19 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"k-sk_lock-28\00", [19 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_CAN\00", [47 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_TIPC\00", [46 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"k-sk_lock-AF_BLUETOOTH\00", [41 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-sk_lock-IUCV\00", [17 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-sk_lock-AF_RXRPC\00", [45 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_ISDN\00", [46 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-sk_lock-AF_PHONET\00", [44 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"k-sk_lock-AF_IEEE802154\00", [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_CAIF\00", [46 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_ALG\00", [47 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_NFC\00", [47 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-sk_lock-AF_VSOCK\00", [45 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_KCM\00", [47 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"k-sk_lock-AF_QIPCRTR\00", [43 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_SMC\00", [47 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_XDP\00", [47 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-sk_lock-AF_MCTP\00", [46 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-sk_lock-AF_MAX\00", [47 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_UNSPEC\00", [16 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_UNIX\00", [18 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_INET\00", [18 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_AX25\00", [18 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_IPX\00", [19 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"slock-AF_APPLETALK\00", [45 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_NETROM\00", [16 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_BRIDGE\00", [16 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_ATMPVC\00", [16 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_X25\00", [19 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"slock-AF_INET6\00", [17 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_ROSE\00", [18 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_DECnet\00", [16 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"slock-AF_NETBEUI\00", [47 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"slock-AF_SECURITY\00", [46 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_KEY\00", [19 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"slock-AF_NETLINK\00", [47 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_PACKET\00", [16 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_ASH\00", [19 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_ECONET\00", [16 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_ATMSVC\00", [16 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_RDS\00", [19 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_SNA\00", [19 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_IRDA\00", [18 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"slock-AF_PPPOX\00", [17 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"slock-AF_WANPIPE\00", [47 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_LLC\00", [19 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"slock-27\00", [23 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"slock-28\00", [23 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_CAN\00", [19 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_TIPC\00", [18 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"slock-AF_BLUETOOTH\00", [45 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"slock-IUCV\00", [21 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"slock-AF_RXRPC\00", [17 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_ISDN\00", [18 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"slock-AF_PHONET\00", [16 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"slock-AF_IEEE802154\00", [44 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_CAIF\00", [18 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_ALG\00", [19 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_NFC\00", [19 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"slock-AF_VSOCK\00", [17 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_KCM\00", [19 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"slock-AF_QIPCRTR\00", [47 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_SMC\00", [19 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_XDP\00", [19 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"slock-AF_MCTP\00", [18 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"slock-AF_MAX\00", [19 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_UNSPEC\00", [46 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_UNIX\00", [16 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_INET\00", [16 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_AX25\00", [16 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_IPX\00", [17 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sk_lock-AF_APPLETALK\00", [43 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_NETROM\00", [46 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_BRIDGE\00", [46 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_ATMPVC\00", [46 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_X25\00", [17 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sk_lock-AF_INET6\00", [47 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_ROSE\00", [16 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_DECnet\00", [46 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sk_lock-AF_NETBEUI\00", [45 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"sk_lock-AF_SECURITY\00", [44 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_KEY\00", [17 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sk_lock-AF_NETLINK\00", [45 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_PACKET\00", [46 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_ASH\00", [17 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_ECONET\00", [46 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_ATMSVC\00", [46 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_RDS\00", [17 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_SNA\00", [17 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_IRDA\00", [16 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sk_lock-AF_PPPOX\00", [47 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sk_lock-AF_WANPIPE\00", [45 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_LLC\00", [17 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sk_lock-27\00", [21 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sk_lock-28\00", [21 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_CAN\00", [17 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_TIPC\00", [16 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"sk_lock-AF_BLUETOOTH\00", [43 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"sk_lock-IUCV\00", [19 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sk_lock-AF_RXRPC\00", [47 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_ISDN\00", [16 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"sk_lock-AF_PHONET\00", [46 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"sk_lock-AF_IEEE802154\00", [42 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_CAIF\00", [16 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_ALG\00", [17 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_NFC\00", [17 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sk_lock-AF_VSOCK\00", [47 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_KCM\00", [17 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sk_lock-AF_QIPCRTR\00", [45 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_SMC\00", [17 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_XDP\00", [17 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"sk_lock-AF_MCTP\00", [16 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"sk_lock-AF_MAX\00", [17 x i8] zeroinitializer }, align 32
@task_css.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@cgroup_mutex = external dso_local global %struct.mutex, align 4
@css_set_lock = external dso_local global %struct.spinlock, align 4
@.str.222 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/cgroup.h\00", [41 x i8] zeroinitializer }, align 32
@__sk_destruct.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__sk_destruct.__UNIQUE_ID_ddebug667 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.223, ptr @.str.224, ptr @.str, ptr @.str.225, i8 1, i8 -4, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.223 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"sock\00", [27 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"__sk_destruct\00", [18 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s: optmem leakage (%d bytes) detected\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"sock: %s: optmem leakage (%d bytes) detected\0A\00", [50 x i8] zeroinitializer }, align 32
@sk_init_common.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@af_family_rlock_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274], [36 x i8] zeroinitializer }, align 32
@af_rlock_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@af_family_wlock_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @.str.313, ptr @.str.314, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321], [36 x i8] zeroinitializer }, align 32
@af_wlock_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@af_family_elock_key_strings = internal constant { [47 x ptr], [36 x i8] } { [47 x ptr] [ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @.str.366, ptr @.str.367, ptr @.str.368], [36 x i8] zeroinitializer }, align 32
@af_elock_keys = internal global { [46 x %struct.lock_class_key], [80 x i8] } zeroinitializer, align 32
@skb_queue_head_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.227 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&list->lock\00", [20 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_UNSPEC\00", [16 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_UNIX\00", [18 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_INET\00", [18 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_AX25\00", [18 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_IPX\00", [19 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rlock-AF_APPLETALK\00", [45 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_NETROM\00", [16 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_BRIDGE\00", [16 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_ATMPVC\00", [16 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_X25\00", [19 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rlock-AF_INET6\00", [17 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_ROSE\00", [18 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_DECnet\00", [16 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rlock-AF_NETBEUI\00", [47 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rlock-AF_SECURITY\00", [46 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_KEY\00", [19 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rlock-AF_NETLINK\00", [47 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_PACKET\00", [16 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_ASH\00", [19 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_ECONET\00", [16 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_ATMSVC\00", [16 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_RDS\00", [19 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_SNA\00", [19 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_IRDA\00", [18 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rlock-AF_PPPOX\00", [17 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rlock-AF_WANPIPE\00", [47 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_LLC\00", [19 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"rlock-27\00", [23 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"rlock-28\00", [23 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_CAN\00", [19 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_TIPC\00", [18 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"rlock-AF_BLUETOOTH\00", [45 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rlock-IUCV\00", [21 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rlock-AF_RXRPC\00", [17 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_ISDN\00", [18 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"rlock-AF_PHONET\00", [16 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"rlock-AF_IEEE802154\00", [44 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_CAIF\00", [18 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_ALG\00", [19 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_NFC\00", [19 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"rlock-AF_VSOCK\00", [17 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_KCM\00", [19 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"rlock-AF_QIPCRTR\00", [47 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_SMC\00", [19 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_XDP\00", [19 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"rlock-AF_MCTP\00", [18 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"rlock-AF_MAX\00", [19 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_UNSPEC\00", [16 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_UNIX\00", [18 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_INET\00", [18 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_AX25\00", [18 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_IPX\00", [19 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"wlock-AF_APPLETALK\00", [45 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_NETROM\00", [16 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_BRIDGE\00", [16 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_ATMPVC\00", [16 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_X25\00", [19 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"wlock-AF_INET6\00", [17 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_ROSE\00", [18 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_DECnet\00", [16 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"wlock-AF_NETBEUI\00", [47 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"wlock-AF_SECURITY\00", [46 x i8] zeroinitializer }, align 32
@.str.290 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_KEY\00", [19 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"wlock-AF_NETLINK\00", [47 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_PACKET\00", [16 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_ASH\00", [19 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_ECONET\00", [16 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_ATMSVC\00", [16 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_RDS\00", [19 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_SNA\00", [19 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_IRDA\00", [18 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"wlock-AF_PPPOX\00", [17 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"wlock-AF_WANPIPE\00", [47 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_LLC\00", [19 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"wlock-27\00", [23 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"wlock-28\00", [23 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_CAN\00", [19 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_TIPC\00", [18 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"wlock-AF_BLUETOOTH\00", [45 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"wlock-IUCV\00", [21 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"wlock-AF_RXRPC\00", [17 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_ISDN\00", [18 x i8] zeroinitializer }, align 32
@.str.310 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"wlock-AF_PHONET\00", [16 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"wlock-AF_IEEE802154\00", [44 x i8] zeroinitializer }, align 32
@.str.312 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_CAIF\00", [18 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_ALG\00", [19 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_NFC\00", [19 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"wlock-AF_VSOCK\00", [17 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_KCM\00", [19 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"wlock-AF_QIPCRTR\00", [47 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_SMC\00", [19 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_XDP\00", [19 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"wlock-AF_MCTP\00", [18 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"wlock-AF_MAX\00", [19 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_UNSPEC\00", [16 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_UNIX\00", [18 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_INET\00", [18 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_AX25\00", [18 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_IPX\00", [19 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"elock-AF_APPLETALK\00", [45 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_NETROM\00", [16 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_BRIDGE\00", [16 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_ATMPVC\00", [16 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_X25\00", [19 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"elock-AF_INET6\00", [17 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_ROSE\00", [18 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_DECnet\00", [16 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"elock-AF_NETBEUI\00", [47 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"elock-AF_SECURITY\00", [46 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_KEY\00", [19 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"elock-AF_NETLINK\00", [47 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_PACKET\00", [16 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_ASH\00", [19 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_ECONET\00", [16 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_ATMSVC\00", [16 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_RDS\00", [19 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_SNA\00", [19 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_IRDA\00", [18 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"elock-AF_PPPOX\00", [17 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"elock-AF_WANPIPE\00", [47 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_LLC\00", [19 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"elock-27\00", [23 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"elock-28\00", [23 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_CAN\00", [19 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_TIPC\00", [18 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"elock-AF_BLUETOOTH\00", [45 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"elock-IUCV\00", [21 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"elock-AF_RXRPC\00", [17 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_ISDN\00", [18 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"elock-AF_PHONET\00", [16 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"elock-AF_IEEE802154\00", [44 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_CAIF\00", [18 x i8] zeroinitializer }, align 32
@.str.360 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_ALG\00", [19 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_NFC\00", [19 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"elock-AF_VSOCK\00", [17 x i8] zeroinitializer }, align 32
@.str.363 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_KCM\00", [19 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"elock-AF_QIPCRTR\00", [47 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_SMC\00", [19 x i8] zeroinitializer }, align 32
@.str.366 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_XDP\00", [19 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"elock-AF_MCTP\00", [18 x i8] zeroinitializer }, align 32
@.str.368 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"elock-AF_MAX\00", [19 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.369 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.371 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@__sock_kfree_s.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.372 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@memory_cgrp_subsys_on_dfl_key = external dso_local global %struct.static_key_true, align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@__tracepoint_sock_exceed_buf_limit = external dso_local global %struct.tracepoint, align 4
@trace_sock_exceed_buf_limit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.374 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"./../include/linux/highmem-internal.h\00", [58 x i8] zeroinitializer }, align 32
@movable_zone = external dso_local local_unnamed_addr global i32, align 4
@sk_wake_async.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.375 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_UNSPEC\00", [46 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_UNIX\00", [16 x i8] zeroinitializer }, align 32
@.str.377 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_INET\00", [16 x i8] zeroinitializer }, align 32
@.str.378 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_AX25\00", [16 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_IPX\00", [17 x i8] zeroinitializer }, align 32
@.str.380 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"k-clock-AF_APPLETALK\00", [43 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_NETROM\00", [46 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_BRIDGE\00", [46 x i8] zeroinitializer }, align 32
@.str.383 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_ATMPVC\00", [46 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_X25\00", [17 x i8] zeroinitializer }, align 32
@.str.385 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-clock-AF_INET6\00", [47 x i8] zeroinitializer }, align 32
@.str.386 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_ROSE\00", [16 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_DECnet\00", [46 x i8] zeroinitializer }, align 32
@.str.388 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-clock-AF_NETBEUI\00", [45 x i8] zeroinitializer }, align 32
@.str.389 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"k-clock-AF_SECURITY\00", [44 x i8] zeroinitializer }, align 32
@.str.390 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_KEY\00", [17 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-clock-AF_NETLINK\00", [45 x i8] zeroinitializer }, align 32
@.str.392 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_PACKET\00", [46 x i8] zeroinitializer }, align 32
@.str.393 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_ASH\00", [17 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_ECONET\00", [46 x i8] zeroinitializer }, align 32
@.str.395 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_ATMSVC\00", [46 x i8] zeroinitializer }, align 32
@.str.396 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_RDS\00", [17 x i8] zeroinitializer }, align 32
@.str.397 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_SNA\00", [17 x i8] zeroinitializer }, align 32
@.str.398 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_IRDA\00", [16 x i8] zeroinitializer }, align 32
@.str.399 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-clock-AF_PPPOX\00", [47 x i8] zeroinitializer }, align 32
@.str.400 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-clock-AF_WANPIPE\00", [45 x i8] zeroinitializer }, align 32
@.str.401 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_LLC\00", [17 x i8] zeroinitializer }, align 32
@.str.402 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"k-clock-27\00", [21 x i8] zeroinitializer }, align 32
@.str.403 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"k-clock-28\00", [21 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_CAN\00", [17 x i8] zeroinitializer }, align 32
@.str.405 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_TIPC\00", [16 x i8] zeroinitializer }, align 32
@.str.406 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"k-clock-AF_BLUETOOTH\00", [43 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"k-clock-IUCV\00", [19 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-clock-AF_RXRPC\00", [47 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_ISDN\00", [16 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"k-clock-AF_PHONET\00", [46 x i8] zeroinitializer }, align 32
@.str.411 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"k-clock-AF_IEEE802154\00", [42 x i8] zeroinitializer }, align 32
@.str.412 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_CAIF\00", [16 x i8] zeroinitializer }, align 32
@.str.413 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_ALG\00", [17 x i8] zeroinitializer }, align 32
@.str.414 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_NFC\00", [17 x i8] zeroinitializer }, align 32
@.str.415 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"k-clock-AF_VSOCK\00", [47 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_KCM\00", [17 x i8] zeroinitializer }, align 32
@.str.417 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"k-clock-AF_QIPCRTR\00", [45 x i8] zeroinitializer }, align 32
@.str.418 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_SMC\00", [17 x i8] zeroinitializer }, align 32
@.str.419 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_XDP\00", [17 x i8] zeroinitializer }, align 32
@.str.420 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"k-clock-AF_MCTP\00", [16 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"k-clock-AF_MAX\00", [17 x i8] zeroinitializer }, align 32
@.str.422 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_UNSPEC\00", [16 x i8] zeroinitializer }, align 32
@.str.423 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_UNIX\00", [18 x i8] zeroinitializer }, align 32
@.str.424 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_INET\00", [18 x i8] zeroinitializer }, align 32
@.str.425 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_AX25\00", [18 x i8] zeroinitializer }, align 32
@.str.426 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_IPX\00", [19 x i8] zeroinitializer }, align 32
@.str.427 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"clock-AF_APPLETALK\00", [45 x i8] zeroinitializer }, align 32
@.str.428 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_NETROM\00", [16 x i8] zeroinitializer }, align 32
@.str.429 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_BRIDGE\00", [16 x i8] zeroinitializer }, align 32
@.str.430 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_ATMPVC\00", [16 x i8] zeroinitializer }, align 32
@.str.431 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_X25\00", [19 x i8] zeroinitializer }, align 32
@.str.432 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"clock-AF_INET6\00", [17 x i8] zeroinitializer }, align 32
@.str.433 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_ROSE\00", [18 x i8] zeroinitializer }, align 32
@.str.434 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_DECnet\00", [16 x i8] zeroinitializer }, align 32
@.str.435 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"clock-AF_NETBEUI\00", [47 x i8] zeroinitializer }, align 32
@.str.436 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"clock-AF_SECURITY\00", [46 x i8] zeroinitializer }, align 32
@.str.437 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_KEY\00", [19 x i8] zeroinitializer }, align 32
@.str.438 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"clock-AF_NETLINK\00", [47 x i8] zeroinitializer }, align 32
@.str.439 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_PACKET\00", [16 x i8] zeroinitializer }, align 32
@.str.440 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_ASH\00", [19 x i8] zeroinitializer }, align 32
@.str.441 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_ECONET\00", [16 x i8] zeroinitializer }, align 32
@.str.442 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_ATMSVC\00", [16 x i8] zeroinitializer }, align 32
@.str.443 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_RDS\00", [19 x i8] zeroinitializer }, align 32
@.str.444 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_SNA\00", [19 x i8] zeroinitializer }, align 32
@.str.445 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_IRDA\00", [18 x i8] zeroinitializer }, align 32
@.str.446 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"clock-AF_PPPOX\00", [17 x i8] zeroinitializer }, align 32
@.str.447 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"clock-AF_WANPIPE\00", [47 x i8] zeroinitializer }, align 32
@.str.448 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_LLC\00", [19 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"clock-27\00", [23 x i8] zeroinitializer }, align 32
@.str.450 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"clock-28\00", [23 x i8] zeroinitializer }, align 32
@.str.451 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_CAN\00", [19 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_TIPC\00", [18 x i8] zeroinitializer }, align 32
@.str.453 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"clock-AF_BLUETOOTH\00", [45 x i8] zeroinitializer }, align 32
@.str.454 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"clock-IUCV\00", [21 x i8] zeroinitializer }, align 32
@.str.455 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"clock-AF_RXRPC\00", [17 x i8] zeroinitializer }, align 32
@.str.456 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_ISDN\00", [18 x i8] zeroinitializer }, align 32
@.str.457 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"clock-AF_PHONET\00", [16 x i8] zeroinitializer }, align 32
@.str.458 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"clock-AF_IEEE802154\00", [44 x i8] zeroinitializer }, align 32
@.str.459 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_CAIF\00", [18 x i8] zeroinitializer }, align 32
@.str.460 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_ALG\00", [19 x i8] zeroinitializer }, align 32
@.str.461 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_NFC\00", [19 x i8] zeroinitializer }, align 32
@.str.462 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"clock-AF_VSOCK\00", [17 x i8] zeroinitializer }, align 32
@.str.463 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_KCM\00", [19 x i8] zeroinitializer }, align 32
@.str.464 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"clock-AF_QIPCRTR\00", [47 x i8] zeroinitializer }, align 32
@.str.465 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_SMC\00", [19 x i8] zeroinitializer }, align 32
@.str.466 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_XDP\00", [19 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"clock-AF_MCTP\00", [18 x i8] zeroinitializer }, align 32
@.str.468 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"clock-AF_MAX\00", [19 x i8] zeroinitializer }, align 32
@sock_def_wakeup.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@sock_def_write_space.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@sock_def_error_report.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@net_inuse_ops = internal global { %struct.pernet_operations, [32 x i8] } { %struct.pernet_operations { %struct.list_head zeroinitializer, ptr @sock_inuse_init_net, ptr null, ptr @sock_inuse_exit_net, ptr null, ptr null, i32 0 }, [32 x i8] zeroinitializer }, align 32
@.str.470 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Cannot initialize net inuse counters\00", [59 x i8] zeroinitializer }, align 32
@.str.471 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"request_sock_%s\00", [16 x i8] zeroinitializer }, align 32
@req_prot_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.472, ptr @.str.473, ptr @.str, i32 3695, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\012sock: %s: Can't create request sock SLAB cache!\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.473 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"req_prot_init\00", [18 x i8] zeroinitializer }, align 32
@req_prot_init._entry_ptr = internal global ptr @req_prot_init._entry, section ".printk_index", align 4
@.str.474 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"tw_sock_%s\00", [21 x i8] zeroinitializer }, align 32
@tw_prot_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.475, ptr @.str.476, ptr @.str, i32 3659, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.475 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\012sock: %s: Can't create timewait sock SLAB cache!\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.476 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"tw_prot_init\00", [19 x i8] zeroinitializer }, align 32
@tw_prot_init._entry_ptr = internal global ptr @tw_prot_init._entry, section ".printk_index", align 4
@.str.477 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"proto_list_mutex.wait_lock\00", [37 x i8] zeroinitializer }, align 32
@.str.478 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"proto_list_mutex\00", [47 x i8] zeroinitializer }, align 32
@proto_inuse_idx = internal global { [2 x i32], [24 x i8] } zeroinitializer, align 32
@assign_proto_idx._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.479, ptr @.str.480, ptr @.str, i32 3605, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.479 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013sock: PROTO_INUSE_NR exhausted\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.480 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"assign_proto_idx\00", [47 x i8] zeroinitializer }, align 32
@assign_proto_idx._entry_ptr = internal global ptr @assign_proto_idx._entry, section ".printk_index", align 4
@proto_net_ops = internal global { %struct.pernet_operations, [32 x i8] } { %struct.pernet_operations { %struct.list_head zeroinitializer, ptr @proto_init_net, ptr null, ptr @proto_exit_net, ptr null, ptr null, i32 0 }, [32 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"protocols\00", [22 x i8] zeroinitializer }, align 32
@proto_seq_ops = internal constant { %struct.seq_operations, [16 x i8] } { %struct.seq_operations { ptr @proto_seq_start, ptr @proto_seq_stop, ptr @proto_seq_next, ptr @proto_seq_show }, [16 x i8] zeroinitializer }, align 32
@.str.482 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%-9s %-4s %-8s %-6s %-5s %-7s %-4s %-10s %s\00", [52 x i8] zeroinitializer }, align 32
@.str.483 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"protocol\00", [23 x i8] zeroinitializer }, align 32
@.str.484 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"size\00", [27 x i8] zeroinitializer }, align 32
@.str.485 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"sockets\00", [24 x i8] zeroinitializer }, align 32
@.str.486 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"memory\00", [25 x i8] zeroinitializer }, align 32
@.str.487 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"press\00", [26 x i8] zeroinitializer }, align 32
@.str.488 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"maxhdr\00", [25 x i8] zeroinitializer }, align 32
@.str.489 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"slab\00", [27 x i8] zeroinitializer }, align 32
@.str.490 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"module\00", [25 x i8] zeroinitializer }, align 32
@.str.491 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"cl co di ac io in de sh ss gs se re sp bi br ha uh gp em\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.492 = internal constant { [121 x i8], [39 x i8] } { [121 x i8] c"%-9s %4u %6d  %6ld   %-3s %6u   %-3s  %-10s %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c %2c\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.493 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"no\00", [29 x i8] zeroinitializer }, align 32
@.str.494 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"yes\00", [28 x i8] zeroinitializer }, align 32
@.str.495 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"kernel\00", [25 x i8] zeroinitializer }, align 32
@.str.496 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"NI\00", [29 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.497 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.498 = internal global [6 x i64] [i64 4, i64 32, i64 29, i64 35, i64 63, i64 64]
@__sancov_gen_cov_switch_values.499 = internal global [58 x i64] [i64 56, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 18, i64 20, i64 21, i64 26, i64 27, i64 29, i64 32, i64 33, i64 34, i64 35, i64 36, i64 37, i64 38, i64 39, i64 40, i64 41, i64 42, i64 43, i64 44, i64 45, i64 46, i64 47, i64 49, i64 50, i64 51, i64 52, i64 53, i64 60, i64 61, i64 62, i64 63, i64 64, i64 65, i64 66, i64 67, i64 68, i64 69, i64 70, i64 72, i64 73]
@__sancov_gen_cov_switch_values.500 = internal global [5 x i64] [i64 3, i64 16, i64 2, i64 10, i64 21]
@__sancov_gen_cov_switch_values.501 = internal global [4 x i64] [i64 2, i64 16, i64 1, i64 2]
@__sancov_gen_cov_switch_values.502 = internal global [60 x i64] [i64 58, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 25, i64 26, i64 28, i64 29, i64 30, i64 31, i64 34, i64 35, i64 36, i64 37, i64 38, i64 39, i64 40, i64 41, i64 42, i64 43, i64 44, i64 45, i64 46, i64 47, i64 48, i64 49, i64 55, i64 56, i64 57, i64 59, i64 60, i64 61, i64 62, i64 63, i64 64, i64 66, i64 67, i64 69, i64 71, i64 72, i64 73]
@__sancov_gen_cov_switch_values.503 = internal global [4 x i64] [i64 2, i64 16, i64 2, i64 10]
@__sancov_gen_cov_switch_values.504 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 2, i64 36, i64 37, i64 61]
@__sancov_gen_cov_switch_values.505 = internal global [7 x i64] [i64 5, i64 32, i64 1, i64 2, i64 36, i64 37, i64 61]
@__sancov_gen_cov_switch_values.506 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.507 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.508 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.509 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.510 = internal global [4 x i64] [i64 2, i64 64, i64 0, i64 -1]
@___asan_gen_.511 = private unnamed_addr constant [19 x i8] c"memalloc_socks_key\00", align 1
@___asan_gen_.513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 283, i32 1 }
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 742, i32 2 }
@___asan_gen_.519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 2169, i32 11 }
@___asan_gen_.520 = private unnamed_addr constant [33 x i8] c"net_high_order_alloc_disable_key\00", align 1
@___asan_gen_.522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 2688, i32 1 }
@___asan_gen_.528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3215, i32 2 }
@___asan_gen_.534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3235, i32 2 }
@___asan_gen_.535 = private unnamed_addr constant [33 x i8] c"af_family_kern_clock_key_strings\00", align 1
@___asan_gen_.537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 246, i32 26 }
@___asan_gen_.538 = private unnamed_addr constant [22 x i8] c"af_kern_callback_keys\00", align 1
@___asan_gen_.540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 267, i32 30 }
@___asan_gen_.541 = private unnamed_addr constant [28 x i8] c"af_family_clock_key_strings\00", align 1
@___asan_gen_.543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 236, i32 26 }
@___asan_gen_.544 = private unnamed_addr constant [17 x i8] c"af_callback_keys\00", align 1
@___asan_gen_.546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 263, i32 30 }
@___asan_gen_.552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3259, i32 2 }
@___asan_gen_.564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3268, i32 2 }
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3714, i32 4 }
@___asan_gen_.574 = private unnamed_addr constant [17 x i8] c"proto_list_mutex\00", align 1
@___asan_gen_.577 = private unnamed_addr constant [11 x i8] c"proto_list\00", align 1
@___asan_gen_.579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 145, i32 8 }
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3772, i32 10 }
@___asan_gen_.585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3784, i32 9 }
@___asan_gen_.587 = private unnamed_addr constant [31 x i8] c"../include/trace/events/sock.h\00", align 1
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.587, i32 204, i32 1 }
@___asan_gen_.590 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.590, i32 108, i32 2 }
@___asan_gen_.594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.596, i32 230, i32 6 }
@___asan_gen_.596 = private unnamed_addr constant [31 x i8] c"../include/linux/thread_info.h\00", align 1
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.596, i32 214, i32 2 }
@___asan_gen_.599 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.599, i32 156, i32 2 }
@___asan_gen_.602 = private unnamed_addr constant [21 x i8] c"../include/net/dst.h\00", align 1
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.602, i32 316, i32 3 }
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1277, i32 1011, i32 2 }
@___asan_gen_.608 = private unnamed_addr constant [22 x i8] c"../include/net/sock.h\00", align 1
@___asan_gen_.609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.608, i32 1750, i32 2 }
@___asan_gen_.618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 842, i32 3 }
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 436, i32 4 }
@___asan_gen_.629 = private unnamed_addr constant [24 x i8] c"../include/linux/cred.h\00", align 1
@___asan_gen_.630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.629, i32 253, i32 2 }
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 1862, i32 3 }
@___asan_gen_.643 = private unnamed_addr constant [33 x i8] c"af_family_kern_slock_key_strings\00", align 1
@___asan_gen_.645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 243, i32 26 }
@___asan_gen_.646 = private unnamed_addr constant [26 x i8] c"af_family_kern_slock_keys\00", align 1
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 203, i32 30 }
@___asan_gen_.649 = private unnamed_addr constant [27 x i8] c"af_family_kern_key_strings\00", align 1
@___asan_gen_.651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 240, i32 26 }
@___asan_gen_.652 = private unnamed_addr constant [20 x i8] c"af_family_kern_keys\00", align 1
@___asan_gen_.654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 201, i32 30 }
@___asan_gen_.660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 1869, i32 3 }
@___asan_gen_.661 = private unnamed_addr constant [28 x i8] c"af_family_slock_key_strings\00", align 1
@___asan_gen_.663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 233, i32 26 }
@___asan_gen_.664 = private unnamed_addr constant [21 x i8] c"af_family_slock_keys\00", align 1
@___asan_gen_.666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 202, i32 30 }
@___asan_gen_.667 = private unnamed_addr constant [22 x i8] c"af_family_key_strings\00", align 1
@___asan_gen_.669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 230, i32 26 }
@___asan_gen_.670 = private unnamed_addr constant [15 x i8] c"af_family_keys\00", align 1
@___asan_gen_.672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 200, i32 30 }
@___asan_gen_.813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 244, i32 2 }
@___asan_gen_.954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 241, i32 2 }
@___asan_gen_.1095 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 234, i32 2 }
@___asan_gen_.1236 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 231, i32 2 }
@___asan_gen_.1238 = private unnamed_addr constant [26 x i8] c"../include/linux/cgroup.h\00", align 1
@___asan_gen_.1239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1238, i32 494, i32 9 }
@___asan_gen_.1251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 2031, i32 3 }
@___asan_gen_.1254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 2095, i32 2 }
@___asan_gen_.1255 = private unnamed_addr constant [28 x i8] c"af_family_rlock_key_strings\00", align 1
@___asan_gen_.1257 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 249, i32 26 }
@___asan_gen_.1258 = private unnamed_addr constant [14 x i8] c"af_rlock_keys\00", align 1
@___asan_gen_.1260 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 264, i32 30 }
@___asan_gen_.1261 = private unnamed_addr constant [28 x i8] c"af_family_wlock_key_strings\00", align 1
@___asan_gen_.1263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 252, i32 26 }
@___asan_gen_.1264 = private unnamed_addr constant [14 x i8] c"af_wlock_keys\00", align 1
@___asan_gen_.1266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 265, i32 30 }
@___asan_gen_.1267 = private unnamed_addr constant [28 x i8] c"af_family_elock_key_strings\00", align 1
@___asan_gen_.1269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 255, i32 26 }
@___asan_gen_.1270 = private unnamed_addr constant [14 x i8] c"af_elock_keys\00", align 1
@___asan_gen_.1272 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 266, i32 30 }
@___asan_gen_.1273 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1277 = private unnamed_addr constant [26 x i8] c"../include/linux/skbuff.h\00", align 1
@___asan_gen_.1278 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1277, i32 1984, i32 2 }
@___asan_gen_.1419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 250, i32 2 }
@___asan_gen_.1560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 253, i32 2 }
@___asan_gen_.1701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 256, i32 2 }
@___asan_gen_.1707 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1709, i32 695, i32 2 }
@___asan_gen_.1709 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.1710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1709, i32 723, i32 2 }
@___asan_gen_.1712 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.1713 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1712, i32 717, i32 2 }
@___asan_gen_.1715 = private unnamed_addr constant [38 x i8] c"./../include/linux/highmem-internal.h\00", align 1
@___asan_gen_.1716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1715, i32 44, i32 2 }
@___asan_gen_.1857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 247, i32 2 }
@___asan_gen_.1998 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 237, i32 2 }
@___asan_gen_.1999 = private unnamed_addr constant [14 x i8] c"net_inuse_ops\00", align 1
@___asan_gen_.2001 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3585, i32 33 }
@___asan_gen_.2004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3593, i32 9 }
@___asan_gen_.2007 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3683, i32 46 }
@___asan_gen_.2016 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3694, i32 3 }
@___asan_gen_.2019 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3647, i32 52 }
@___asan_gen_.2028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3658, i32 3 }
@___asan_gen_.2034 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 144, i32 8 }
@___asan_gen_.2035 = private unnamed_addr constant [16 x i8] c"proto_inuse_idx\00", align 1
@___asan_gen_.2037 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3546, i32 8 }
@___asan_gen_.2038 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.2046 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3605, i32 3 }
@___asan_gen_.2047 = private unnamed_addr constant [14 x i8] c"proto_net_ops\00", align 1
@___asan_gen_.2049 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3897, i32 48 }
@___asan_gen_.2052 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3884, i32 7 }
@___asan_gen_.2053 = private unnamed_addr constant [14 x i8] c"proto_seq_ops\00", align 1
@___asan_gen_.2055 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3875, i32 36 }
@___asan_gen_.2058 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3860, i32 19 }
@___asan_gen_.2061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3861, i32 7 }
@___asan_gen_.2064 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3862, i32 7 }
@___asan_gen_.2067 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3863, i32 7 }
@___asan_gen_.2070 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3864, i32 7 }
@___asan_gen_.2073 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3865, i32 7 }
@___asan_gen_.2076 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3866, i32 7 }
@___asan_gen_.2079 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3867, i32 7 }
@___asan_gen_.2082 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3868, i32 7 }
@___asan_gen_.2085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3869, i32 7 }
@___asan_gen_.2088 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3826, i32 18 }
@___asan_gen_.2091 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3834, i32 28 }
@___asan_gen_.2094 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3834, i32 35 }
@___asan_gen_.2097 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3835, i32 6 }
@___asan_gen_.2098 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.2099 = private constant [19 x i8] c"../net/core/sock.c\00", align 1
@___asan_gen_.2100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2099, i32 3820, i32 48 }
@llvm.compiler.used = appending global [632 x ptr] [ptr @__initcall__kmod_sock__702_3598_net_inuse_init1, ptr @__initcall__kmod_sock__705_3907_proto_init4, ptr @__ksymtab___lock_sock_fast, ptr @__ksymtab___sk_backlog_rcv, ptr @__ksymtab___sk_dst_check, ptr @__ksymtab___sk_mem_raise_allocated, ptr @__ksymtab___sk_mem_reclaim, ptr @__ksymtab___sk_mem_reduce_allocated, ptr @__ksymtab___sk_mem_schedule, ptr @__ksymtab___sk_receive_skb, ptr @__ksymtab___sock_cmsg_send, ptr @__ksymtab___sock_queue_rcv_skb, ptr @__ksymtab_lock_sock_nested, ptr @__ksymtab_memalloc_socks_key, ptr @__ksymtab_proto_register, ptr @__ksymtab_proto_unregister, ptr @__ksymtab_release_sock, ptr @__ksymtab_sk_alloc, ptr @__ksymtab_sk_busy_loop_end, ptr @__ksymtab_sk_capable, ptr @__ksymtab_sk_clear_memalloc, ptr @__ksymtab_sk_clone_lock, ptr @__ksymtab_sk_common_release, ptr @__ksymtab_sk_dst_check, ptr @__ksymtab_sk_error_report, ptr @__ksymtab_sk_free, ptr @__ksymtab_sk_free_unlock_clone, ptr @__ksymtab_sk_mc_loop, ptr @__ksymtab_sk_net_capable, ptr @__ksymtab_sk_ns_capable, ptr @__ksymtab_sk_page_frag_refill, ptr @__ksymtab_sk_reset_timer, ptr @__ksymtab_sk_send_sigurg, ptr @__ksymtab_sk_set_memalloc, ptr @__ksymtab_sk_set_peek_off, ptr @__ksymtab_sk_setup_caps, ptr @__ksymtab_sk_stop_timer, ptr @__ksymtab_sk_stop_timer_sync, ptr @__ksymtab_sk_wait_data, ptr @__ksymtab_skb_orphan_partial, ptr @__ksymtab_skb_page_frag_refill, ptr @__ksymtab_skb_set_owner_w, ptr @__ksymtab_sock_alloc_send_pskb, ptr @__ksymtab_sock_alloc_send_skb, ptr @__ksymtab_sock_bind_add, ptr @__ksymtab_sock_bindtoindex, ptr @__ksymtab_sock_cmsg_send, ptr @__ksymtab_sock_common_getsockopt, ptr @__ksymtab_sock_common_recvmsg, ptr @__ksymtab_sock_common_setsockopt, ptr @__ksymtab_sock_copy_user_timeval, ptr @__ksymtab_sock_efree, ptr @__ksymtab_sock_enable_timestamps, ptr @__ksymtab_sock_get_timeout, ptr @__ksymtab_sock_gettstamp, ptr @__ksymtab_sock_i_ino, ptr @__ksymtab_sock_i_uid, ptr @__ksymtab_sock_init_data, ptr @__ksymtab_sock_inuse_get, ptr @__ksymtab_sock_kfree_s, ptr @__ksymtab_sock_kmalloc, ptr @__ksymtab_sock_kzfree_s, ptr @__ksymtab_sock_load_diag_module, ptr @__ksymtab_sock_no_accept, ptr @__ksymtab_sock_no_bind, ptr @__ksymtab_sock_no_connect, ptr @__ksymtab_sock_no_getname, ptr @__ksymtab_sock_no_ioctl, ptr @__ksymtab_sock_no_linger, ptr @__ksymtab_sock_no_listen, ptr @__ksymtab_sock_no_mmap, ptr @__ksymtab_sock_no_recvmsg, ptr @__ksymtab_sock_no_sendmsg, ptr @__ksymtab_sock_no_sendmsg_locked, ptr @__ksymtab_sock_no_sendpage, ptr @__ksymtab_sock_no_sendpage_locked, ptr @__ksymtab_sock_no_shutdown, ptr @__ksymtab_sock_no_socketpair, ptr @__ksymtab_sock_pfree, ptr @__ksymtab_sock_prot_inuse_get, ptr @__ksymtab_sock_queue_rcv_skb, ptr @__ksymtab_sock_recv_errqueue, ptr @__ksymtab_sock_rfree, ptr @__ksymtab_sock_set_keepalive, ptr @__ksymtab_sock_set_mark, ptr @__ksymtab_sock_set_priority, ptr @__ksymtab_sock_set_rcvbuf, ptr @__ksymtab_sock_set_reuseaddr, ptr @__ksymtab_sock_set_reuseport, ptr @__ksymtab_sock_set_sndtimeo, ptr @__ksymtab_sock_setsockopt, ptr @__ksymtab_sock_wfree, ptr @__ksymtab_sock_wmalloc, ptr @__ksymtab_sysctl_optmem_max, ptr @__ksymtab_sysctl_rmem_max, ptr @__ksymtab_sysctl_wmem_max, ptr @assign_proto_idx._entry, ptr @assign_proto_idx._entry_ptr, ptr @proto_register._entry, ptr @proto_register._entry_ptr, ptr @req_prot_init._entry, ptr @req_prot_init._entry_ptr, ptr @sock_set_timeout._entry, ptr @sock_set_timeout._entry_ptr, ptr @sock_timestamping_bind_phc._entry, ptr @sock_timestamping_bind_phc._entry_ptr, ptr @tw_prot_init._entry, ptr @tw_prot_init._entry_ptr, ptr @memalloc_socks_key, ptr @.str, ptr @.str.2, ptr @net_high_order_alloc_disable_key, ptr @sock_init_data.__key, ptr @.str.3, ptr @sock_init_data.__key.4, ptr @.str.5, ptr @af_family_kern_clock_key_strings, ptr @af_kern_callback_keys, ptr @af_family_clock_key_strings, ptr @af_callback_keys, ptr @sock_init_data.__key.6, ptr @.str.7, ptr @sock_init_data.__key.8, ptr @.str.9, ptr @sock_init_data.__key.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @proto_list_mutex, ptr @proto_list, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @sock_lock_init.__key, ptr @.str.29, ptr @sock_lock_init.__key.30, ptr @.str.31, ptr @af_family_kern_slock_key_strings, ptr @af_family_kern_slock_keys, ptr @af_family_kern_key_strings, ptr @af_family_kern_keys, ptr @sock_lock_init.__key.32, ptr @sock_lock_init.__key.33, ptr @af_family_slock_key_strings, ptr @af_family_slock_keys, ptr @af_family_key_strings, ptr @af_family_keys, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @sk_init_common.__key, ptr @af_family_rlock_key_strings, ptr @af_rlock_keys, ptr @af_family_wlock_key_strings, ptr @af_wlock_keys, ptr @af_family_elock_key_strings, ptr @af_elock_keys, ptr @skb_queue_head_init.__key, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @.str.313, ptr @.str.314, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @.str.366, ptr @.str.367, ptr @.str.368, ptr @.str.369, ptr @.str.370, ptr @.str.371, ptr @.str.372, ptr @.str.374, ptr @.str.375, ptr @.str.376, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @.str.381, ptr @.str.382, ptr @.str.383, ptr @.str.384, ptr @.str.385, ptr @.str.386, ptr @.str.387, ptr @.str.388, ptr @.str.389, ptr @.str.390, ptr @.str.391, ptr @.str.392, ptr @.str.393, ptr @.str.394, ptr @.str.395, ptr @.str.396, ptr @.str.397, ptr @.str.398, ptr @.str.399, ptr @.str.400, ptr @.str.401, ptr @.str.402, ptr @.str.403, ptr @.str.404, ptr @.str.405, ptr @.str.406, ptr @.str.407, ptr @.str.408, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.413, ptr @.str.414, ptr @.str.415, ptr @.str.416, ptr @.str.417, ptr @.str.418, ptr @.str.419, ptr @.str.420, ptr @.str.421, ptr @.str.422, ptr @.str.423, ptr @.str.424, ptr @.str.425, ptr @.str.426, ptr @.str.427, ptr @.str.428, ptr @.str.429, ptr @.str.430, ptr @.str.431, ptr @.str.432, ptr @.str.433, ptr @.str.434, ptr @.str.435, ptr @.str.436, ptr @.str.437, ptr @.str.438, ptr @.str.439, ptr @.str.440, ptr @.str.441, ptr @.str.442, ptr @.str.443, ptr @.str.444, ptr @.str.445, ptr @.str.446, ptr @.str.447, ptr @.str.448, ptr @.str.449, ptr @.str.450, ptr @.str.451, ptr @.str.452, ptr @.str.453, ptr @.str.454, ptr @.str.455, ptr @.str.456, ptr @.str.457, ptr @.str.458, ptr @.str.459, ptr @.str.460, ptr @.str.461, ptr @.str.462, ptr @.str.463, ptr @.str.464, ptr @.str.465, ptr @.str.466, ptr @.str.467, ptr @.str.468, ptr @net_inuse_ops, ptr @.str.470, ptr @.str.471, ptr @.str.472, ptr @.str.473, ptr @.str.474, ptr @.str.475, ptr @.str.476, ptr @.str.477, ptr @.str.478, ptr @proto_inuse_idx, ptr @.str.479, ptr @.str.480, ptr @proto_net_ops, ptr @.str.481, ptr @proto_seq_ops, ptr @.str.482, ptr @.str.483, ptr @.str.484, ptr @.str.485, ptr @.str.486, ptr @.str.487, ptr @.str.488, ptr @.str.489, ptr @.str.490, ptr @.str.491, ptr @.str.492, ptr @.str.493, ptr @.str.494, ptr @.str.495, ptr @.str.496], section "llvm.metadata"
@0 = internal global [530 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @memalloc_socks_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_high_order_alloc_disable_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_init_data.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_init_data.__key.4 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_kern_clock_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_kern_callback_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_clock_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_callback_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_init_data.__key.6 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_init_data.__key.8 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_init_data.__key.10 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @proto_register._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @proto_list_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @proto_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_timestamping_bind_phc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_set_timeout._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_lock_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_lock_init.__key.30 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_kern_slock_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_kern_slock_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_kern_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_kern_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_lock_init.__key.32 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sock_lock_init.__key.33 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_slock_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_slock_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1095 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1236 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sk_init_common.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_rlock_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1257 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_rlock_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.1258 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1260 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_wlock_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.1261 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_wlock_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_family_elock_key_strings to i32), i32 188, i32 224, i32 ptrtoint (ptr @___asan_gen_.1267 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @af_elock_keys to i32), i32 368, i32 448, i32 ptrtoint (ptr @___asan_gen_.1270 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1272 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @skb_queue_head_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1278 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.360 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.363 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.366 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.368 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.375 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.383 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.385 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.388 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.389 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.390 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.392 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.393 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.395 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.396 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.398 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.399 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.400 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.401 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.402 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.403 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.405 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.411 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.412 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.413 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.414 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.415 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.417 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.418 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.420 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.423 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.424 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.425 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.426 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.427 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.428 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.430 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.431 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.432 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.433 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.435 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.436 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.437 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.438 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.439 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.440 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.441 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.442 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.443 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.444 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.445 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.446 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.447 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.448 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.450 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.451 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.453 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.454 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.455 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.456 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.457 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.458 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.459 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.460 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.461 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.462 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.463 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.464 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.465 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.466 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.468 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_inuse_ops to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1999 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.470 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.471 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @req_prot_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.473 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.474 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tw_prot_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.476 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.477 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.478 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @proto_inuse_idx to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2035 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assign_proto_idx._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.479 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.480 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @proto_net_ops to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2047 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2052 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @proto_seq_ops to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2053 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.482 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2058 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.483 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.484 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2067 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2070 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.487 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.488 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.489 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2079 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.490 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2082 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.491 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.492 to i32), i32 121, i32 160, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2088 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.493 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.494 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.495 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.496 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2098 to i32), i32 ptrtoint (ptr @___asan_gen_.2099 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2100 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @sk_ns_capable(ptr nocapture noundef readonly %sk, ptr noundef %user_ns, i32 noundef %cap) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_socket = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %0 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_socket, align 8
  %file = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %file, align 4
  %call = tail call zeroext i1 @file_ns_capable(ptr noundef %3, ptr noundef %user_ns, i32 noundef %cap) #17
  br i1 %call, label %land.rhs, label %entry.land.end_crit_edge

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end

land.rhs:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call1 = tail call zeroext i1 @ns_capable(ptr noundef %user_ns, i32 noundef %cap) #17
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry.land.end_crit_edge
  %4 = phi i1 [ false, %entry.land.end_crit_edge ], [ %call1, %land.rhs ]
  ret i1 %4
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @file_ns_capable(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @ns_capable(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @sk_capable(ptr nocapture noundef readonly %sk, i32 noundef %cap) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %0 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_socket.i, align 8
  %file.i = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %file.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %file.i, align 4
  %call.i = tail call zeroext i1 @file_ns_capable(ptr noundef %3, ptr noundef nonnull @init_user_ns, i32 noundef %cap) #17
  br i1 %call.i, label %land.rhs.i, label %entry.sk_ns_capable.exit_crit_edge

entry.sk_ns_capable.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_ns_capable.exit

land.rhs.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call1.i = tail call zeroext i1 @ns_capable(ptr noundef nonnull @init_user_ns, i32 noundef %cap) #17
  br label %sk_ns_capable.exit

sk_ns_capable.exit:                               ; preds = %land.rhs.i, %entry.sk_ns_capable.exit_crit_edge
  %4 = phi i1 [ false, %entry.sk_ns_capable.exit_crit_edge ], [ %call1.i, %land.rhs.i ]
  ret i1 %4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @sk_net_capable(ptr nocapture noundef readonly %sk, i32 noundef %cap) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %0 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_net.i, align 4
  %user_ns = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %user_ns, align 4
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %4 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk_socket.i, align 8
  %file.i = getelementptr inbounds %struct.socket, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %file.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %file.i, align 4
  %call.i = tail call zeroext i1 @file_ns_capable(ptr noundef %7, ptr noundef %3, i32 noundef %cap) #17
  br i1 %call.i, label %land.rhs.i, label %entry.sk_ns_capable.exit_crit_edge

entry.sk_ns_capable.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_ns_capable.exit

land.rhs.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call1.i = tail call zeroext i1 @ns_capable(ptr noundef %3, i32 noundef %cap) #17
  br label %sk_ns_capable.exit

sk_ns_capable.exit:                               ; preds = %land.rhs.i, %entry.sk_ns_capable.exit_crit_edge
  %8 = phi i1 [ false, %entry.sk_ns_capable.exit_crit_edge ], [ %call1.i, %land.rhs.i ]
  ret i1 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_set_memalloc(ptr nocapture noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %0, align 4
  %or.i.i = or i32 %2, 16384
  store i32 %or.i.i, ptr %0, align 4
  %sk_allocation = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 41
  %3 = ptrtoint ptr %sk_allocation to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sk_allocation, align 8
  %or = or i32 %4, 131072
  store i32 %or, ptr %sk_allocation, align 8
  tail call void @static_key_slow_inc(ptr noundef nonnull @memalloc_socks_key) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_slow_inc(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_clear_memalloc(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %0, align 4
  %and.i.i = and i32 %2, -16385
  store i32 %and.i.i, ptr %0, align 4
  %sk_allocation = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 41
  %3 = ptrtoint ptr %sk_allocation to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sk_allocation, align 8
  %and = and i32 %4, -131073
  store i32 %and, ptr %sk_allocation, align 8
  tail call void @static_key_slow_dec(ptr noundef nonnull @memalloc_socks_key) #17
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %5 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i = getelementptr inbounds %struct.proto, ptr %6, i32 0, i32 32
  %7 = ptrtoint ptr %memory_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %memory_allocated.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %8, null
  br i1 %tobool.i.not.i, label %entry.sk_mem_reclaim.exit_crit_edge, label %if.end.i

entry.sk_mem_reclaim.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_reclaim.exit

if.end.i:                                         ; preds = %entry
  %sk_forward_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %9 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sk_forward_alloc.i, align 8
  %sk_reserved_mem.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %11 = ptrtoint ptr %sk_reserved_mem.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sk_reserved_mem.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i.i, label %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge, label %if.end.i.i, !prof !888

if.end.i.sk_unused_reserved_mem.exit.i_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i

if.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %13 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %sk_backlog.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i, i32 noundef 4) #17
  %15 = ptrtoint ptr %sk_backlog.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %sk_backlog.i.i, align 4
  %17 = add i32 %14, %16
  %sub5.i.i = sub i32 %12, %17
  %18 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i

sk_unused_reserved_mem.exit.i:                    ; preds = %if.end.i.i, %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %18, %if.end.i.i ], [ 0, %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge ]
  %sub.i = sub i32 %10, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %sub.i)
  %cmp.i = icmp sgt i32 %sub.i, 4095
  br i1 %cmp.i, label %if.then2.i, label %sk_unused_reserved_mem.exit.i.sk_mem_reclaim.exit_crit_edge

sk_unused_reserved_mem.exit.i.sk_mem_reclaim.exit_crit_edge: ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_reclaim.exit

if.then2.i:                                       ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %shr.i8.i = lshr i32 %sub.i, 12
  %shl.i.i = and i32 %sub.i, -4096
  %19 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sk_forward_alloc.i, align 8
  %sub.i.i = sub i32 %20, %shl.i.i
  store i32 %sub.i.i, ptr %sk_forward_alloc.i, align 8
  tail call void @__sk_mem_reduce_allocated(ptr noundef %sk, i32 noundef %shr.i8.i) #17
  br label %sk_mem_reclaim.exit

sk_mem_reclaim.exit:                              ; preds = %if.then2.i, %sk_unused_reserved_mem.exit.i.sk_mem_reclaim.exit_crit_edge, %entry.sk_mem_reclaim.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_slow_dec(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__sk_backlog_rcv(ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %3 = and i32 %2, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %do.body3, label %do.end8, !prof !889

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/sock.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 325, 0\0A.popsection", ""() #17, !srcloc !890
  unreachable

do.end8:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %4 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i, align 8
  %flags1.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags1.i, align 4
  %and.i = and i32 %9, 2048
  %or.i = or i32 %9, 2048
  store i32 %or.i, ptr %flags1.i, align 4
  %sk_backlog_rcv = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 80
  %10 = ptrtoint ptr %sk_backlog_rcv to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sk_backlog_rcv, align 4
  %call10 = tail call i32 %11(ptr noundef %sk, ptr noundef %skb) #17
  %12 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i13 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i13 to ptr
  %task.i14 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i14 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i14, align 8
  %flags1.i15 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %flags1.i15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags1.i15, align 4
  %and.i16 = and i32 %17, -2049
  %or.i17 = or i32 %and.i16, %and.i
  store i32 %or.i17, ptr %flags1.i15, align 4
  ret i32 %call10
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_error_report(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_error_report = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 79
  %0 = ptrtoint ptr %sk_error_report to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_error_report, align 8
  tail call void %1(ptr noundef %sk) #17
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %2 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %skc_family, align 8
  %4 = zext i16 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values)
  switch i16 %3, label %entry.sw.epilog_crit_edge [
    i16 2, label %entry.sw.bb1_crit_edge
    i16 10, label %entry.sw.bb1_crit_edge5
  ]

entry.sw.bb1_crit_edge5:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge5
  tail call fastcc void @trace_inet_sk_error_report(ptr noundef %sk)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb1, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_inet_sk_error_report(ptr noundef %sk) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_inet_sk_error_report, i32 0, i32 1), ptr blockaddress(@trace_inet_sk_error_report, %do.body)) #17
          to label %if.end48 [label %do.body], !srcloc !891

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !888

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  %9 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !892
  %call42 = tail call i32 @__traceiter_inet_sk_error_report(ptr noundef null, ptr noundef %sk) #17
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !893
  %13 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !888

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !894
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_inet_sk_error_report, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_inet_sk_error_report, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_inet_sk_error_report.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @trace_inet_sk_error_report.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 262, ptr noundef nonnull @.str.2) #17
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !895
  %31 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local i32 @sock_get_timeout(i32 noundef %timeo, ptr nocapture noundef writeonly %optval, i1 noundef zeroext %old_timeval) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %timeo)
  %cmp = icmp eq i32 %timeo, 2147483647
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.else

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %div = sdiv i32 %timeo, 100
  %conv = sext i32 %div to i64
  %0 = mul i32 %div, 100
  %rem.decomposed = sub i32 %timeo, %0
  %div2 = mul nsw i32 %rem.decomposed, 10000
  %conv3 = sext i32 %div2 to i64
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %tv.sroa.0.0 = phi i64 [ %conv, %if.else ], [ 0, %entry.if.end_crit_edge ]
  %tv.sroa.8.0 = phi i64 [ %conv3, %if.else ], [ 0, %entry.if.end_crit_edge ]
  br i1 %old_timeval, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %conv18 = trunc i64 %tv.sroa.0.0 to i32
  %conv21 = trunc i64 %tv.sroa.8.0 to i32
  %1 = ptrtoint ptr %optval to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %conv18, ptr %optval, align 4
  %old_tv.sroa.5.0..sroa_idx = getelementptr inbounds i8, ptr %optval, i32 4
  %2 = ptrtoint ptr %old_tv.sroa.5.0..sroa_idx to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %conv21, ptr %old_tv.sroa.5.0..sroa_idx, align 4
  br label %cleanup

if.end23:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %3 = ptrtoint ptr %optval to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %tv.sroa.0.0, ptr %optval, align 8
  %tv.sroa.8.0..sroa_idx = getelementptr inbounds i8, ptr %optval, i32 8
  %4 = ptrtoint ptr %tv.sroa.8.0..sroa_idx to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %tv.sroa.8.0, ptr %tv.sroa.8.0..sroa_idx, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %land.lhs.true
  %retval.0 = phi i32 [ 8, %land.lhs.true ], [ 16, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_copy_user_timeval(ptr noundef %tv, [2 x i32] %optval.coerce, i32 noundef %optlen, i1 noundef zeroext %old_timeval) #0 align 64 {
entry:
  %old_tv = alloca %struct.__kernel_old_timeval, align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %old_timeval, label %land.lhs.true, label %if.else28

land.lhs.true:                                    ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %old_tv) #17
  %0 = ptrtoint ptr %old_tv to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %old_tv, align 8, !annotation !896
  %1 = getelementptr inbounds %struct.__kernel_old_timeval, ptr %old_tv, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !896
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %optlen)
  %cmp11 = icmp ult i32 %optlen, 8
  br i1 %cmp11, label %land.lhs.true.cleanup25.thread_crit_edge, label %if.end14

land.lhs.true.cleanup25.thread_crit_edge:         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup25.thread

if.end14:                                         ; preds = %land.lhs.true
  %src.coerce.fca.0.extract.i.i = extractvalue [2 x i32] %optval.coerce, 0
  %3 = inttoptr i32 %src.coerce.fca.0.extract.i.i to ptr
  %sockptr.coerce.fca.1.extract.i.i.i = extractvalue [2 x i32] %optval.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sockptr.coerce.fca.1.extract.i.i.i)
  %bf.cast.i.i.i = icmp slt i32 %sockptr.coerce.fca.1.extract.i.i.i, 0
  br i1 %bf.cast.i.i.i, label %if.end.i.i, label %if.end8.i.i.i.i

if.end8.i.i.i.i:                                  ; preds = %if.end14
  tail call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 156) #17
  %call.i.i.i.i = tail call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i.i.i, label %if.end8.i.i.i.i.if.then11.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.end8.i.i.i.i.if.then11.i.i.i.i_crit_edge:      ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end8.i.i.i.i
  %4 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %3, i32 8, i32 -1226833920) #20, !srcloc !897
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.i6.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.end.i.i.i.i, label %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge, !prof !888

land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old_tv, i32 noundef 8) #17
  %5 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 4
  %7 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i.i) #13, !srcloc !898
  %and.i.i.i.i.i.i = and i32 %7, -13
  %or.i.i.i.i.i.i = or i32 %and.i.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i.i) #17, !srcloc !899
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %call1.i.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %old_tv, ptr noundef %3, i32 noundef 8) #17
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %7) #17, !srcloc !899
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i.i)
  %tobool4.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i, label %if.end.i.i.i.i.cleanup25_crit_edge, label %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge, !prof !888

if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge:       ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i

if.end.i.i.i.i.cleanup25_crit_edge:               ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup25

if.then11.i.i.i.i:                                ; preds = %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge, %if.end8.i.i.i.i.if.then11.i.i.i.i_crit_edge
  %res.0.i.i.i.i93 = phi i32 [ %call1.i.i.i.i.i, %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge ], [ 8, %if.end8.i.i.i.i.if.then11.i.i.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge ]
  %sub.i.i.i.i = sub i32 8, %res.0.i.i.i.i93
  %add.ptr.i.i.i.i = getelementptr i8, ptr %old_tv, i32 %sub.i.i.i.i
  %8 = call ptr @memset(ptr %add.ptr.i.i.i.i, i32 0, i32 %res.0.i.i.i.i93)
  br label %cleanup25.thread

if.end.i.i:                                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %3, align 1
  %11 = ptrtoint ptr %old_tv to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %old_tv, align 8
  br label %cleanup25

cleanup25.thread:                                 ; preds = %if.then11.i.i.i.i, %land.lhs.true.cleanup25.thread_crit_edge
  %retval.1.ph = phi i32 [ -14, %if.then11.i.i.i.i ], [ -22, %land.lhs.true.cleanup25.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old_tv) #17
  br label %return

cleanup25:                                        ; preds = %if.end.i.i, %if.end.i.i.i.i.cleanup25_crit_edge
  %12 = ptrtoint ptr %old_tv to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %old_tv, align 8
  %conv20 = sext i32 %13 to i64
  %14 = ptrtoint ptr %tv to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %conv20, ptr %tv, align 8
  %15 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %1, align 4
  %conv23 = sext i32 %16 to i64
  %tv_usec24 = getelementptr inbounds %struct.__kernel_sock_timeval, ptr %tv, i32 0, i32 1
  %17 = ptrtoint ptr %tv_usec24 to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %conv23, ptr %tv_usec24, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old_tv) #17
  br label %return

if.else28:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %optlen)
  %cmp29 = icmp ult i32 %optlen, 16
  br i1 %cmp29, label %if.else28.return_crit_edge, label %if.end32

if.else28.return_crit_edge:                       ; preds = %if.else28
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end32:                                         ; preds = %if.else28
  %src.coerce.fca.0.extract.i.i63 = extractvalue [2 x i32] %optval.coerce, 0
  %18 = inttoptr i32 %src.coerce.fca.0.extract.i.i63 to ptr
  %sockptr.coerce.fca.1.extract.i.i.i64 = extractvalue [2 x i32] %optval.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sockptr.coerce.fca.1.extract.i.i.i64)
  %bf.cast.i.i.i65 = icmp slt i32 %sockptr.coerce.fca.1.extract.i.i.i64, 0
  br i1 %bf.cast.i.i.i65, label %if.end.i.i88, label %if.end8.i.i.i.i70

if.end8.i.i.i.i70:                                ; preds = %if.end32
  tail call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 156) #17
  %call.i.i.i.i71 = tail call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i.i.i71, label %if.end8.i.i.i.i70.if.then11.i.i.i.i87_crit_edge, label %land.lhs.true.i.i.i.i74

if.end8.i.i.i.i70.if.then11.i.i.i.i87_crit_edge:  ; preds = %if.end8.i.i.i.i70
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i87

land.lhs.true.i.i.i.i74:                          ; preds = %if.end8.i.i.i.i70
  %19 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %18, i32 16, i32 -1226833920) #20, !srcloc !897
  %asmresult.i.i.i.i72 = extractvalue { i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i72)
  %cmp.i6.i.i.i73 = icmp eq i32 %asmresult.i.i.i.i72, 0
  br i1 %cmp.i6.i.i.i73, label %if.end.i.i.i.i84, label %land.lhs.true.i.i.i.i74.if.then11.i.i.i.i87_crit_edge, !prof !888

land.lhs.true.i.i.i.i74.if.then11.i.i.i.i87_crit_edge: ; preds = %land.lhs.true.i.i.i.i74
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i87

if.end.i.i.i.i84:                                 ; preds = %land.lhs.true.i.i.i.i74
  %call.i.i.i.i.i75 = tail call zeroext i1 @__kasan_check_write(ptr noundef %tv, i32 noundef 16) #17
  %20 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i.i.i.i76 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i.i.i.i76 to ptr
  %cpu_domain.i.i.i.i.i.i.i77 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 4
  %22 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i.i77) #13, !srcloc !898
  %and.i.i.i.i.i.i78 = and i32 %22, -13
  %or.i.i.i.i.i.i79 = or i32 %and.i.i.i.i.i.i78, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i.i79) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %call1.i.i.i.i.i80 = tail call i32 @arm_copy_from_user(ptr noundef %tv, ptr noundef %18, i32 noundef 16) #17
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %22) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i.i80)
  %tobool4.not.i.i.i.i83 = icmp eq i32 %call1.i.i.i.i.i80, 0
  br i1 %tobool4.not.i.i.i.i83, label %if.end.i.i.i.i84.return_crit_edge, label %if.end.i.i.i.i84.if.then11.i.i.i.i87_crit_edge, !prof !888

if.end.i.i.i.i84.if.then11.i.i.i.i87_crit_edge:   ; preds = %if.end.i.i.i.i84
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i87

if.end.i.i.i.i84.return_crit_edge:                ; preds = %if.end.i.i.i.i84
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.then11.i.i.i.i87:                              ; preds = %if.end.i.i.i.i84.if.then11.i.i.i.i87_crit_edge, %land.lhs.true.i.i.i.i74.if.then11.i.i.i.i87_crit_edge, %if.end8.i.i.i.i70.if.then11.i.i.i.i87_crit_edge
  %res.0.i.i.i.i82101 = phi i32 [ %call1.i.i.i.i.i80, %if.end.i.i.i.i84.if.then11.i.i.i.i87_crit_edge ], [ 16, %if.end8.i.i.i.i70.if.then11.i.i.i.i87_crit_edge ], [ 16, %land.lhs.true.i.i.i.i74.if.then11.i.i.i.i87_crit_edge ]
  %sub.i.i.i.i85 = sub i32 16, %res.0.i.i.i.i82101
  %add.ptr.i.i.i.i86 = getelementptr i8, ptr %tv, i32 %sub.i.i.i.i85
  %23 = call ptr @memset(ptr %add.ptr.i.i.i.i86, i32 0, i32 %res.0.i.i.i.i82101)
  br label %return

if.end.i.i88:                                     ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #19
  %24 = call ptr @memcpy(ptr %tv, ptr %18, i32 16)
  br label %return

return:                                           ; preds = %if.end.i.i88, %if.then11.i.i.i.i87, %if.end.i.i.i.i84.return_crit_edge, %if.else28.return_crit_edge, %cleanup25, %cleanup25.thread
  %retval.2 = phi i32 [ -22, %if.else28.return_crit_edge ], [ %retval.1.ph, %cleanup25.thread ], [ -14, %if.then11.i.i.i.i87 ], [ 0, %cleanup25 ], [ 0, %if.end.i.i88 ], [ 0, %if.end.i.i.i.i84.return_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_from_sockptr(ptr noundef %dst, [2 x i32] %src.coerce, i32 noundef %size) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %src.coerce.fca.0.extract.i = extractvalue [2 x i32] %src.coerce, 0
  %0 = inttoptr i32 %src.coerce.fca.0.extract.i to ptr
  %sockptr.coerce.fca.1.extract.i.i = extractvalue [2 x i32] %src.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sockptr.coerce.fca.1.extract.i.i)
  %bf.cast.i.i = icmp slt i32 %sockptr.coerce.fca.1.extract.i.i, 0
  br i1 %bf.cast.i.i, label %if.end.i, label %if.end8.i.i.i

if.end8.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp9.i.i.i = icmp slt i32 %size, 0
  br i1 %cmp9.i.i.i, label %land.rhs16.i.i.i, label %if.then.i.i.i.i

land.rhs16.i.i.i:                                 ; preds = %if.end8.i.i.i
  %.b71.i.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i.i, label %land.rhs16.i.i.i.copy_from_sockptr_offset.exit_crit_edge, label %if.then27.i.i.i, !prof !888

land.rhs16.i.i.i.copy_from_sockptr_offset.exit_crit_edge: ; preds = %land.rhs16.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_from_sockptr_offset.exit

if.then27.i.i.i:                                  ; preds = %land.rhs16.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.18, i32 noundef 230, i32 noundef 9, ptr noundef null) #17
  br label %copy_from_sockptr_offset.exit

if.then.i.i.i.i:                                  ; preds = %if.end8.i.i.i
  tail call void @__check_object_size(ptr noundef %dst, i32 noundef %size, i1 noundef zeroext false) #17
  tail call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 156) #17
  %call.i.i.i = tail call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i.i, label %if.then.i.i.i.i.if.end.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.then.i.i.i.i.if.end.i.i.i_crit_edge:           ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then.i.i.i.i
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 %size, i32 -1226833920) #20, !srcloc !897
  %asmresult.i.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.then.i7.i.i, label %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, !prof !888

land.lhs.true.i.i.i.if.end.i.i.i_crit_edge:       ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i.i.i

if.then.i7.i.i:                                   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dst, i32 noundef %size) #17
  %2 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #13, !srcloc !898
  %and.i.i.i.i.i = and i32 %4, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %call1.i.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef %dst, ptr noundef %0, i32 noundef %size) #17
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i7.i.i, %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, %if.then.i.i.i.i.if.end.i.i.i_crit_edge
  %res.0.i.i.i = phi i32 [ %size, %if.then.i.i.i.i.if.end.i.i.i_crit_edge ], [ %call1.i.i.i.i, %if.then.i7.i.i ], [ %size, %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %res.0.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end.i.i.i.copy_from_sockptr_offset.exit_crit_edge, label %if.then11.i.i.i, !prof !888

if.end.i.i.i.copy_from_sockptr_offset.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_from_sockptr_offset.exit

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i.i = sub i32 %size, %res.0.i.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %dst, i32 %sub.i.i.i
  %5 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i.i)
  br label %copy_from_sockptr_offset.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %6 = call ptr @memcpy(ptr %dst, ptr %0, i32 %size)
  br label %copy_from_sockptr_offset.exit

copy_from_sockptr_offset.exit:                    ; preds = %if.end.i, %if.then11.i.i.i, %if.end.i.i.i.copy_from_sockptr_offset.exit_crit_edge, %if.then27.i.i.i, %land.rhs16.i.i.i.copy_from_sockptr_offset.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 0, %if.end.i.i.i.copy_from_sockptr_offset.exit_crit_edge ], [ %res.0.i.i.i, %if.then11.i.i.i ], [ %size, %if.then27.i.i.i ], [ %size, %land.rhs16.i.i.i.copy_from_sockptr_offset.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__sock_queue_rcv_skb(ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #17
  %0 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %sk_backlog, align 4
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %2 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sk_rcvbuf, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp slt i32 %1, %3
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %sk_drops = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 5
  %call.i.i37 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_drops, i32 1, i32 3, i32 1) #17
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_drops, ptr %sk_drops, i32 1, ptr elementtype(i32) %sk_drops) #17, !srcloc !901
  tail call fastcc void @trace_sock_rcvqueue_full(ptr noundef %sk, ptr noundef %skb)
  br label %cleanup

if.end:                                           ; preds = %entry
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %5 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %truesize, align 8
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %7 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i = getelementptr inbounds %struct.proto, ptr %8, i32 0, i32 32
  %9 = ptrtoint ptr %memory_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %memory_allocated.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %10, null
  br i1 %tobool.i.not.i, label %if.end.if.end4_crit_edge, label %if.end.i

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

if.end.i:                                         ; preds = %if.end
  %sk_forward_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %11 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %sk_forward_alloc.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %6)
  %cmp.not.i = icmp slt i32 %12, %6
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.end.i.if.end4_crit_edge

if.end.i.if.end4_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

lor.lhs.false.i:                                  ; preds = %if.end.i
  %sub.i.i.i = add i32 %6, 4095
  %shr.i.i.i = ashr i32 %sub.i.i.i, 12
  %shl.i.i = and i32 %sub.i.i.i, -4096
  %add.i.i = add i32 %12, %shl.i.i
  %13 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %add.i.i, ptr %sk_forward_alloc.i, align 8
  %call1.i.i = tail call i32 @__sk_mem_raise_allocated(ptr noundef %sk, i32 noundef %6, i32 noundef %shr.i.i.i, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %sk_rmem_schedule.exit, label %lor.lhs.false.i.if.end4_crit_edge

lor.lhs.false.i.if.end4_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

sk_rmem_schedule.exit:                            ; preds = %lor.lhs.false.i
  %14 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sk_forward_alloc.i, align 8
  %sub.i.i = sub i32 %15, %shl.i.i
  store i32 %sub.i.i, ptr %sk_forward_alloc.i, align 8
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %16 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %17 = and i8 %bf.load.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.i6.i.not = icmp eq i8 %17, 0
  br i1 %tobool.i6.i.not, label %if.then2, label %sk_rmem_schedule.exit.if.end4_crit_edge

sk_rmem_schedule.exit.if.end4_crit_edge:          ; preds = %sk_rmem_schedule.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

if.then2:                                         ; preds = %sk_rmem_schedule.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sk_drops3 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 5
  %call.i.i38 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops3, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_drops3, i32 1, i32 3, i32 1) #17
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_drops3, ptr %sk_drops3, i32 1, ptr elementtype(i32) %sk_drops3) #17, !srcloc !901
  br label %cleanup

if.end4:                                          ; preds = %sk_rmem_schedule.exit.if.end4_crit_edge, %lor.lhs.false.i.if.end4_crit_edge, %if.end.i.if.end4_crit_edge, %if.end.if.end4_crit_edge
  %19 = getelementptr inbounds %struct.anon.46, ptr %skb, i32 0, i32 2
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %19, align 8
  %destructor.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %21 = ptrtoint ptr %destructor.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %destructor.i.i, align 4
  %tobool.not.i.i39 = icmp eq ptr %22, null
  br i1 %tobool.not.i.i39, label %do.body.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %22(ptr noundef %skb) #17
  br label %skb_orphan.exit.i

do.body.i.i:                                      ; preds = %if.end4
  %23 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %23, align 4
  %tobool3.not.i.i = icmp eq ptr %25, null
  br i1 %tobool3.not.i.i, label %do.body.i.i.skb_orphan.exit.i_crit_edge, label %do.body7.i.i, !prof !888

do.body.i.i.skb_orphan.exit.i_crit_edge:          ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_orphan.exit.i

do.body7.i.i:                                     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #17, !srcloc !902
  unreachable

skb_orphan.exit.i:                                ; preds = %do.body.i.i.skb_orphan.exit.i_crit_edge, %if.then.i.i
  %26 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %sk, ptr %26, align 4
  %28 = ptrtoint ptr %destructor.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @sock_rfree, ptr %destructor.i.i, align 4
  %29 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %truesize, align 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_backlog, i32 1, i32 3, i32 1) #17
  %31 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog, ptr %sk_backlog, i32 %30, ptr elementtype(i32) %sk_backlog) #17, !srcloc !901
  %32 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i.i = getelementptr inbounds %struct.proto, ptr %33, i32 0, i32 32
  %34 = ptrtoint ptr %memory_allocated.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %memory_allocated.i.i.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %35, null
  br i1 %tobool.i.not.i.i, label %skb_orphan.exit.i.skb_set_owner_r.exit_crit_edge, label %if.end.i.i

skb_orphan.exit.i.skb_set_owner_r.exit_crit_edge: ; preds = %skb_orphan.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_set_owner_r.exit

if.end.i.i:                                       ; preds = %skb_orphan.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %36 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %truesize, align 8
  %sk_forward_alloc.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %38 = ptrtoint ptr %sk_forward_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %sk_forward_alloc.i.i, align 8
  %sub.i.i40 = sub i32 %39, %37
  store i32 %sub.i.i40, ptr %sk_forward_alloc.i.i, align 8
  br label %skb_set_owner_r.exit

skb_set_owner_r.exit:                             ; preds = %if.end.i.i, %skb_orphan.exit.i.skb_set_owner_r.exit_crit_edge
  tail call fastcc void @skb_dst_force(ptr noundef %skb)
  %lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 2
  %call9 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #17
  %40 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  %43 = and i32 %42, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.i.not.i41 = icmp eq i32 %43, 0
  br i1 %tobool.i.not.i41, label %skb_set_owner_r.exit.sock_skb_set_dropcount.exit_crit_edge, label %cond.true.i

skb_set_owner_r.exit.sock_skb_set_dropcount.exit_crit_edge: ; preds = %skb_set_owner_r.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_skb_set_dropcount.exit

cond.true.i:                                      ; preds = %skb_set_owner_r.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sk_drops.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 5
  %call.i.i.i42 = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_drops.i, i32 noundef 4) #17
  %44 = ptrtoint ptr %sk_drops.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %sk_drops.i, align 4
  br label %sock_skb_set_dropcount.exit

sock_skb_set_dropcount.exit:                      ; preds = %cond.true.i, %skb_set_owner_r.exit.sock_skb_set_dropcount.exit_crit_edge
  %cond.i = phi i32 [ %45, %cond.true.i ], [ 0, %skb_set_owner_r.exit.sock_skb_set_dropcount.exit_crit_edge ]
  %add.ptr.i = getelementptr %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 44
  %46 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %cond.i, ptr %add.ptr.i, align 4
  %prev.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 0, i32 0, i32 1
  %47 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %prev.i.i, align 4
  %49 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %sk_receive_queue, ptr %skb, align 8
  %prev10.i.i.i = getelementptr inbounds %struct.anon.46, ptr %skb, i32 0, i32 1
  %50 = ptrtoint ptr %prev10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %48, ptr %prev10.i.i.i, align 4
  store volatile ptr %skb, ptr %prev.i.i, align 4
  %51 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %skb, ptr %48, align 4
  %qlen.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 1
  %52 = ptrtoint ptr %qlen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %qlen.i.i.i, align 4
  %add.i.i.i = add i32 %53, 1
  store volatile i32 %add.i.i.i, ptr %qlen.i.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call9) #17
  %54 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %40, align 4
  %56 = and i32 %55, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.i.not = icmp eq i32 %56, 0
  br i1 %tobool.i.not, label %if.then14, label %sock_skb_set_dropcount.exit.cleanup_crit_edge

sock_skb_set_dropcount.exit.cleanup_crit_edge:    ; preds = %sock_skb_set_dropcount.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then14:                                        ; preds = %sock_skb_set_dropcount.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sk_data_ready = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 77
  %57 = ptrtoint ptr %sk_data_ready to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sk_data_ready, align 8
  tail call void %58(ptr noundef %sk) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then14, %sock_skb_set_dropcount.exit.cleanup_crit_edge, %if.then2, %if.then
  %retval.0 = phi i32 [ -12, %if.then ], [ -105, %if.then2 ], [ 0, %if.then14 ], [ 0, %sock_skb_set_dropcount.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_sock_rcvqueue_full(ptr noundef %sk, ptr noundef %skb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_sock_rcvqueue_full, i32 0, i32 1), ptr blockaddress(@trace_sock_rcvqueue_full, %do.body)) #17
          to label %if.end48 [label %do.body], !srcloc !891

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !888

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  %9 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !903
  %call42 = tail call i32 @__traceiter_sock_rcvqueue_full(ptr noundef null, ptr noundef %sk, ptr noundef %skb) #17
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !904
  %13 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !888

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !894
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_sock_rcvqueue_full, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_sock_rcvqueue_full, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_sock_rcvqueue_full.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @trace_sock_rcvqueue_full.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 91, ptr noundef nonnull @.str.2) #17
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !895
  %31 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @skb_dst_force(ptr nocapture noundef %skb) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %0, align 8
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end35_crit_edge, label %land.lhs.true.i.i

entry.if.end35_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end35

land.lhs.true.i.i:                                ; preds = %entry
  %call.i.i = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge

land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_dst_is_noref.exit

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  %call2.i.i = tail call i32 @rcu_read_lock_bh_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.skb_dst_is_noref.exit_crit_edge, !prof !889

land.rhs.i.i.skb_dst_is_noref.exit_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_dst_is_noref.exit

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 1013, i32 noundef 9, ptr noundef null) #17
  br label %skb_dst_is_noref.exit

skb_dst_is_noref.exit:                            ; preds = %do.end.i.i, %land.rhs.i.i.skb_dst_is_noref.exit_crit_edge, %land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %0, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %tobool1.i = icmp ugt i32 %4, 1
  br i1 %tobool1.i, label %if.then, label %skb_dst_is_noref.exit.if.end35_crit_edge

skb_dst_is_noref.exit.if.end35_crit_edge:         ; preds = %skb_dst_is_noref.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end35

if.then:                                          ; preds = %skb_dst_is_noref.exit
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %0, align 8
  %and.i2 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i2)
  %tobool.not.i3 = icmp eq i32 %and.i2, 0
  br i1 %tobool.not.i3, label %if.then.skb_dst.exit_crit_edge, label %land.lhs.true.i

if.then.skb_dst.exit_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_dst.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call.i = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %land.rhs.i, label %land.lhs.true.i.skb_dst.exit_crit_edge

land.lhs.true.i.skb_dst.exit_crit_edge:           ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_dst.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %call2.i = tail call i32 @rcu_read_lock_bh_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.skb_dst.exit_crit_edge, !prof !889

land.rhs.i.skb_dst.exit_crit_edge:                ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_dst.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 1013, i32 noundef 9, ptr noundef null) #17
  br label %skb_dst.exit

skb_dst.exit:                                     ; preds = %do.end.i, %land.rhs.i.skb_dst.exit_crit_edge, %land.lhs.true.i.skb_dst.exit_crit_edge, %if.then.skb_dst.exit_crit_edge
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %0, align 8
  %and25.i = and i32 %8, -2
  %9 = inttoptr i32 %and25.i to ptr
  %call2 = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %do.end, label %skb_dst.exit.if.end_crit_edge, !prof !889

skb_dst.exit.if.end_crit_edge:                    ; preds = %skb_dst.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.end:                                           ; preds = %skb_dst.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.21, i32 noundef 316, i32 noundef 9, ptr noundef null) #17
  br label %if.end

if.end:                                           ; preds = %do.end, %skb_dst.exit.if.end_crit_edge
  %__refcnt.i = getelementptr inbounds %struct.dst_entry, ptr %9, i32 0, i32 18
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %__refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !905
  tail call void @llvm.prefetch.p0(ptr %__refcnt.i, i32 1, i32 3, i32 1) #17
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %__refcnt.i, ptr %__refcnt.i, i32 0, i32 1, ptr elementtype(i32) %__refcnt.i) #17, !srcloc !906
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.end.dst_hold_safe.exit_crit_edge, label %do.end11.i.i.i.i.i

if.end.dst_hold_safe.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %dst_hold_safe.exit

do.end11.i.i.i.i.i:                               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !907
  br label %dst_hold_safe.exit

dst_hold_safe.exit:                               ; preds = %do.end11.i.i.i.i.i, %if.end.dst_hold_safe.exit_crit_edge
  %spec.select = phi ptr [ null, %if.end.dst_hold_safe.exit_crit_edge ], [ %9, %do.end11.i.i.i.i.i ]
  %11 = ptrtoint ptr %spec.select to i32
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %0, align 8
  %tobool27.not = icmp eq ptr %spec.select, null
  %slow_gro = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %13 = ptrtoint ptr %slow_gro to i32
  call void @__asan_loadN_noabort(i32 %13, i32 4)
  %bf.load = load i32, ptr %slow_gro, align 2
  %bf.load.mask = and i32 %bf.load, 4096
  %bf.shl = select i1 %tobool27.not, i32 %bf.load.mask, i32 4096
  %bf.clear34 = and i32 %bf.load, -4097
  %bf.set = or i32 %bf.shl, %bf.clear34
  store i32 %bf.set, ptr %slow_gro, align 2
  br label %if.end35

if.end35:                                         ; preds = %dst_hold_safe.exit, %skb_dst_is_noref.exit.if.end35_crit_edge, %entry.if.end35_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_queue_rcv_skb(ptr noundef %sk, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @sk_filter_trim_cap(ptr noundef %sk, ptr noundef %skb, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call1 = tail call i32 @__sock_queue_rcv_skb(ptr noundef %sk, ptr noundef %skb)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call.i, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__sk_receive_skb(ptr noundef %sk, ptr noundef %skb, i32 noundef %nested, i32 noundef %trim_cap, i1 noundef zeroext %refcounted) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @sk_filter_trim_cap(ptr noundef %sk, ptr noundef %skb, i32 noundef %trim_cap) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.discard_and_relse_crit_edge

entry.discard_and_relse_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %discard_and_relse

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %struct.anon.46, ptr %skb, i32 0, i32 2
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %0, align 8
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %2 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sk_rcvbuf, align 8
  %sk_backlog.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %len.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9, i32 1
  %4 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i, i32 noundef 4) #17
  %6 = ptrtoint ptr %sk_backlog.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %sk_backlog.i, align 4
  %add.i = add i32 %7, %5
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %3)
  %cmp.i = icmp ugt i32 %add.i, %3
  br i1 %cmp.i, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %sk_drops = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_drops, i32 1, i32 3, i32 1) #17
  %8 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_drops, ptr %sk_drops, i32 1, ptr elementtype(i32) %sk_drops) #17, !srcloc !901
  br label %discard_and_relse

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nested)
  %tobool4.not = icmp eq i32 %nested, 0
  %sk_lock7 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  br i1 %tobool4.not, label %if.else, label %do.body

do.body:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @_raw_spin_lock_nested(ptr noundef %sk_lock7, i32 noundef 1) #17
  br label %if.end9

if.else:                                          ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @_raw_spin_lock(ptr noundef %sk_lock7) #17
  br label %if.end9

if.end9:                                          ; preds = %if.else, %do.body
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %if.end9.sock_owned_by_user.exit_crit_edge

if.end9.sock_owned_by_user.exit_crit_edge:        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %if.end9
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %9 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !888

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %if.end9.sock_owned_by_user.exit_crit_edge
  %owned.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %10 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.i.not = icmp eq i32 %11, 0
  br i1 %tobool.i.not, label %if.then11, label %if.else16

if.then11:                                        ; preds = %sock_owned_by_user.exit
  %12 = tail call ptr @llvm.returnaddress(i32 0)
  %13 = ptrtoint ptr %12 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i, i32 noundef 0, i32 noundef 1, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %13) #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memalloc_socks_key, ptr blockaddress(@__sk_receive_skb, %land.lhs.true.i)) #17
          to label %if.end.i [label %land.lhs.true.i], !srcloc !891

land.lhs.true.i:                                  ; preds = %if.then11
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %14 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %15 = and i8 %bf.load.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.i.not.i = icmp eq i8 %15, 0
  br i1 %tobool.i.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %16 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  %19 = and i32 %18, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.i.not.i.i = icmp eq i32 %19, 0
  br i1 %tobool.i.not.i.i, label %do.body3.i.i, label %__sk_backlog_rcv.exit.i, !prof !889

do.body3.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/sock.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 325, 0\0A.popsection", ""() #17, !srcloc !890
  unreachable

__sk_backlog_rcv.exit.i:                          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %20 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %task.i.i.i, align 8
  %flags1.i.i.i = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags1.i.i.i, align 4
  %and.i.i.i = and i32 %25, 2048
  %or.i.i.i = or i32 %25, 2048
  store i32 %or.i.i.i, ptr %flags1.i.i.i, align 4
  %sk_backlog_rcv.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 80
  %26 = ptrtoint ptr %sk_backlog_rcv.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %sk_backlog_rcv.i.i, align 4
  %call10.i.i = tail call i32 %27(ptr noundef %sk, ptr noundef %skb) #17
  %28 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i13.i.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i13.i.i to ptr
  %task.i14.i.i = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %task.i14.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %task.i14.i.i, align 8
  %flags1.i15.i.i = getelementptr inbounds %struct.task_struct, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %flags1.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags1.i15.i.i, align 4
  %and.i16.i.i = and i32 %33, -2049
  %or.i17.i.i = or i32 %and.i16.i.i, %and.i.i.i
  store i32 %or.i17.i.i, ptr %flags1.i15.i.i, align 4
  br label %sk_backlog_rcv.exit

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.then11
  call void @__sanitizer_cov_trace_pc() #19
  %sk_backlog_rcv.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 80
  %34 = ptrtoint ptr %sk_backlog_rcv.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sk_backlog_rcv.i, align 4
  %call3.i = tail call i32 %35(ptr noundef %sk, ptr noundef %skb) #17
  br label %sk_backlog_rcv.exit

sk_backlog_rcv.exit:                              ; preds = %if.end.i, %__sk_backlog_rcv.exit.i
  %retval.0.i = phi i32 [ %call10.i.i, %__sk_backlog_rcv.exit.i ], [ %call3.i, %if.end.i ]
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %13) #17
  br label %if.end28

if.else16:                                        ; preds = %sock_owned_by_user.exit
  %36 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %sk_rcvbuf, align 8
  %38 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %len.i, align 4
  %call.i.i.i.i54 = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i, i32 noundef 4) #17
  %40 = ptrtoint ptr %sk_backlog.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %sk_backlog.i, align 4
  %add.i.i = add i32 %41, %39
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %37)
  %cmp.i.i = icmp ugt i32 %add.i.i, %37
  br i1 %cmp.i.i, label %if.else16.if.then23_crit_edge, label %if.end.i58

if.else16.if.then23_crit_edge:                    ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then23

if.end.i58:                                       ; preds = %if.else16
  %pfmemalloc.i.i55 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %42 = ptrtoint ptr %pfmemalloc.i.i55 to i32
  call void @__asan_load1_noabort(i32 %42)
  %bf.load.i.i56 = load i8, ptr %pfmemalloc.i.i55, align 2
  %43 = and i8 %bf.load.i.i56, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %43)
  %tobool.i.not.i57 = icmp eq i8 %43, 0
  br i1 %tobool.i.not.i57, label %if.end.i58.if.end4.i_crit_edge, label %land.lhs.true.i59

if.end.i58.if.end4.i_crit_edge:                   ; preds = %if.end.i58
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

land.lhs.true.i59:                                ; preds = %if.end.i58
  %44 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %44, align 4
  %47 = and i32 %46, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.i10.not.i = icmp eq i32 %47, 0
  br i1 %tobool.i10.not.i, label %land.lhs.true.i59.if.then23_crit_edge, label %land.lhs.true.i59.if.end4.i_crit_edge

land.lhs.true.i59.if.end4.i_crit_edge:            ; preds = %land.lhs.true.i59
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

land.lhs.true.i59.if.then23_crit_edge:            ; preds = %land.lhs.true.i59
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then23

if.end4.i:                                        ; preds = %land.lhs.true.i59.if.end4.i_crit_edge, %if.end.i58.if.end4.i_crit_edge
  tail call fastcc void @skb_dst_force(ptr noundef %skb) #17
  %tail.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9, i32 3
  %48 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %tail.i.i, align 4
  %tobool.not.i.i60 = icmp eq ptr %49, null
  br i1 %tobool.not.i.i60, label %do.body2.i.i, label %if.else.i.i

do.body2.i.i:                                     ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #19
  %head.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9, i32 2
  %50 = ptrtoint ptr %head.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %skb, ptr %head.i.i, align 4
  br label %sk_add_backlog.exit

if.else.i.i:                                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #19
  %51 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %skb, ptr %49, align 8
  br label %sk_add_backlog.exit

sk_add_backlog.exit:                              ; preds = %if.else.i.i, %do.body2.i.i
  %52 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr %skb, ptr %tail.i.i, align 4
  %53 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %skb, align 8
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %54 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %truesize.i, align 8
  %56 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %len.i, align 4
  %add.i61 = add i32 %57, %55
  store i32 %add.i61, ptr %len.i, align 4
  br label %if.end28

if.then23:                                        ; preds = %land.lhs.true.i59.if.then23_crit_edge, %if.else16.if.then23_crit_edge
  %sk_lock24 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_unlock(ptr noundef %sk_lock24) #17
  %sk_drops26 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 5
  %call.i.i53 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops26, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_drops26, i32 1, i32 3, i32 1) #17
  %58 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_drops26, ptr %sk_drops26, i32 1, ptr elementtype(i32) %sk_drops26) #17, !srcloc !901
  br label %discard_and_relse

if.end28:                                         ; preds = %sk_add_backlog.exit, %sk_backlog_rcv.exit
  %rc.0 = phi i32 [ 0, %sk_add_backlog.exit ], [ %retval.0.i, %sk_backlog_rcv.exit ]
  %sk_lock29 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_unlock(ptr noundef %sk_lock29) #17
  br label %out

out:                                              ; preds = %discard_and_relse, %if.end28
  %rc.1 = phi i32 [ 0, %discard_and_relse ], [ %rc.0, %if.end28 ]
  br i1 %refcounted, label %if.then32, label %out.if.end33_crit_edge

out.if.end33_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.then32:                                        ; preds = %out
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %59 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %59, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i63, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.if.end33_crit_edge, label %if.then10.i.i.i.i, !prof !888

if.end5.i.i.i.i.if.end33_crit_edge:               ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %if.end33

if.then.i63:                                      ; preds = %if.then32
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  %sk_wmem_alloc.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc.i.i, i32 1, i32 3, i32 1) #17
  %60 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc.i.i, ptr %sk_wmem_alloc.i.i, i32 1, ptr elementtype(i32) %sk_wmem_alloc.i.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %60, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i64, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i63
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.if.end33_crit_edge, label %if.then10.i.i.i.i.i, !prof !888

if.end5.i.i.i.i.i.if.end33_crit_edge:             ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc.i.i, i32 noundef 3) #17
  br label %if.end33

if.then.i.i64:                                    ; preds = %if.then.i63
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call fastcc void @__sk_free(ptr noundef %sk) #17
  br label %if.end33

if.end33:                                         ; preds = %if.then.i.i64, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.if.end33_crit_edge, %if.then10.i.i.i.i, %if.end5.i.i.i.i.if.end33_crit_edge, %out.if.end33_crit_edge
  ret i32 %rc.1

discard_and_relse:                                ; preds = %if.then23, %if.then2, %entry.discard_and_relse_crit_edge
  tail call void @kfree_skb_reason(ptr noundef %skb, i32 noundef 0) #17
  br label %out
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_filter_trim_cap(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__sk_dst_check(ptr noundef %sk, i32 noundef %cookie) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_dst_cache.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %0 = ptrtoint ptr %sk_dst_cache.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %sk_dst_cache.i, align 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lockdep_sock_is_held.exit.i, label %entry.__sk_dst_get.exit_crit_edge

entry.__sk_dst_get.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit

lockdep_sock_is_held.exit.i:                      ; preds = %entry
  %dep_map2.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i)
  %tobool4.i.not.i = icmp eq i32 %call.i6.i.i, 0
  br i1 %tobool4.i.not.i, label %lor.lhs.false.i, label %lockdep_sock_is_held.exit.i.__sk_dst_get.exit_crit_edge

lockdep_sock_is_held.exit.i.__sk_dst_get.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit

lor.lhs.false.i:                                  ; preds = %lockdep_sock_is_held.exit.i
  %call2.i = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.__sk_dst_get.exit_crit_edge

lor.lhs.false.i.__sk_dst_get.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call3.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i.__sk_dst_get.exit_crit_edge, label %land.lhs.true5.i

land.lhs.true.i.__sk_dst_get.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i
  %.b11.i = load i1, ptr @__sk_dst_get.__warned, align 1
  br i1 %.b11.i, label %land.lhs.true5.i.__sk_dst_get.exit_crit_edge, label %if.then.i

land.lhs.true5.i.__sk_dst_get.exit_crit_edge:     ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit

if.then.i:                                        ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__sk_dst_get.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.23, i32 noundef 2068, ptr noundef nonnull @.str.2) #17
  br label %__sk_dst_get.exit

__sk_dst_get.exit:                                ; preds = %if.then.i, %land.lhs.true5.i.__sk_dst_get.exit_crit_edge, %land.lhs.true.i.__sk_dst_get.exit_crit_edge, %lor.lhs.false.i.__sk_dst_get.exit_crit_edge, %lockdep_sock_is_held.exit.i.__sk_dst_get.exit_crit_edge, %entry.__sk_dst_get.exit_crit_edge
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %__sk_dst_get.exit.cleanup_crit_edge, label %land.lhs.true

__sk_dst_get.exit.cleanup_crit_edge:              ; preds = %__sk_dst_get.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true:                                    ; preds = %__sk_dst_get.exit
  %obsolete = getelementptr inbounds %struct.dst_entry, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %obsolete to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %obsolete, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool1.not = icmp eq i16 %3, 0
  br i1 %tobool1.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true2

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true2:                                   ; preds = %land.lhs.true
  %ops = getelementptr inbounds %struct.dst_entry, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %check = getelementptr inbounds %struct.dst_ops, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %check to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %check, align 4
  %call3 = tail call ptr %7(ptr noundef nonnull %1, i32 noundef %cookie) #17
  %cmp = icmp eq ptr %call3, null
  br i1 %cmp, label %if.then, label %land.lhs.true2.cleanup_crit_edge

land.lhs.true2.cleanup_crit_edge:                 ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #19
  %skc_tx_queue_mapping.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %8 = ptrtoint ptr %skc_tx_queue_mapping.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %skc_tx_queue_mapping.i, align 4
  %sk_dst_pending_confirm = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %9 = ptrtoint ptr %sk_dst_pending_confirm to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %sk_dst_pending_confirm, align 8
  %10 = ptrtoint ptr %sk_dst_cache.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr null, ptr %sk_dst_cache.i, align 4
  tail call void @dst_release(ptr noundef nonnull %1) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then, %land.lhs.true2.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %__sk_dst_get.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then ], [ %1, %land.lhs.true2.cleanup_crit_edge ], [ %1, %land.lhs.true.cleanup_crit_edge ], [ null, %__sk_dst_get.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dst_release(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sk_dst_check(ptr noundef %sk, i32 noundef %cookie) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i.i, label %entry.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

entry.rcu_read_lock.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %entry.rcu_read_lock.exit.i_crit_edge
  %sk_dst_cache.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %4 = ptrtoint ptr %sk_dst_cache.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %sk_dst_cache.i, align 4
  %call.i = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %rcu_read_lock.exit.i.do.end7.i_crit_edge

rcu_read_lock.exit.i.do.end7.i_crit_edge:         ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7.i

land.lhs.true.i:                                  ; preds = %rcu_read_lock.exit.i
  %call2.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.do.end7.i_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.do.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7.i

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %.b16.i = load i1, ptr @sk_dst_get.__warned, align 1
  br i1 %.b16.i, label %land.lhs.true4.i.do.end7.i_crit_edge, label %if.then.i

land.lhs.true4.i.do.end7.i_crit_edge:             ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7.i

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sk_dst_get.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.23, i32 noundef 2077, ptr noundef nonnull @.str.2) #17
  br label %do.end7.i

do.end7.i:                                        ; preds = %if.then.i, %land.lhs.true4.i.do.end7.i_crit_edge, %land.lhs.true.i.do.end7.i_crit_edge, %rcu_read_lock.exit.i.do.end7.i_crit_edge
  %tobool9.not.i = icmp eq ptr %5, null
  br i1 %tobool9.not.i, label %do.end7.i.if.end13.i_crit_edge, label %land.lhs.true10.i

do.end7.i.if.end13.i_crit_edge:                   ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13.i

land.lhs.true10.i:                                ; preds = %do.end7.i
  %__refcnt.i = getelementptr inbounds %struct.dst_entry, ptr %5, i32 0, i32 18
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %__refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !905
  tail call void @llvm.prefetch.p0(ptr %__refcnt.i, i32 1, i32 3, i32 1) #17
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %__refcnt.i, ptr %__refcnt.i, i32 0, i32 1, ptr elementtype(i32) %__refcnt.i) #17, !srcloc !906
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %land.lhs.true10.i.if.end13.i_crit_edge, label %do.end11.i.i.i.i.i

land.lhs.true10.i.if.end13.i_crit_edge:           ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13.i

do.end11.i.i.i.i.i:                               ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !907
  br label %if.end13.i

if.end13.i:                                       ; preds = %do.end11.i.i.i.i.i, %land.lhs.true10.i.if.end13.i_crit_edge, %do.end7.i.if.end13.i_crit_edge
  %dst.0.i = phi ptr [ null, %do.end7.i.if.end13.i_crit_edge ], [ null, %land.lhs.true10.i.if.end13.i_crit_edge ], [ %5, %do.end11.i.i.i.i.i ]
  %call.i17.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i17.i, label %if.end13.i.sk_dst_get.exit_crit_edge, label %land.lhs.true.i20.i

if.end13.i.sk_dst_get.exit_crit_edge:             ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_dst_get.exit

land.lhs.true.i20.i:                              ; preds = %if.end13.i
  %call1.i18.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i18.i)
  %tobool.not.i19.i = icmp eq i32 %call1.i18.i, 0
  br i1 %tobool.not.i19.i, label %land.lhs.true.i20.i.sk_dst_get.exit_crit_edge, label %land.lhs.true2.i22.i

land.lhs.true.i20.i.sk_dst_get.exit_crit_edge:    ; preds = %land.lhs.true.i20.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_dst_get.exit

land.lhs.true2.i22.i:                             ; preds = %land.lhs.true.i20.i
  %.b4.i21.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i21.i, label %land.lhs.true2.i22.i.sk_dst_get.exit_crit_edge, label %if.then.i23.i

land.lhs.true2.i22.i.sk_dst_get.exit_crit_edge:   ; preds = %land.lhs.true2.i22.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_dst_get.exit

if.then.i23.i:                                    ; preds = %land.lhs.true2.i22.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %sk_dst_get.exit

sk_dst_get.exit:                                  ; preds = %if.then.i23.i, %land.lhs.true2.i22.i.sk_dst_get.exit_crit_edge, %land.lhs.true.i20.i.sk_dst_get.exit_crit_edge, %if.end13.i.sk_dst_get.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %7 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i24.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i24.i to ptr
  %preempt_count.i.i.i.i25.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i25.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i25.i, align 4
  %sub.i.i.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i25.i, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  %tobool.not = icmp eq ptr %dst.0.i, null
  br i1 %tobool.not, label %sk_dst_get.exit.cleanup_crit_edge, label %land.lhs.true

sk_dst_get.exit.cleanup_crit_edge:                ; preds = %sk_dst_get.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true:                                    ; preds = %sk_dst_get.exit
  %obsolete = getelementptr inbounds %struct.dst_entry, ptr %dst.0.i, i32 0, i32 8
  %11 = ptrtoint ptr %obsolete to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %obsolete, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool1.not = icmp eq i16 %12, 0
  br i1 %tobool1.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true2

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true2:                                   ; preds = %land.lhs.true
  %ops = getelementptr inbounds %struct.dst_entry, ptr %dst.0.i, i32 0, i32 1
  %13 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops, align 4
  %check = getelementptr inbounds %struct.dst_ops, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %check to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %check, align 4
  %call3 = tail call ptr %16(ptr noundef nonnull %dst.0.i, i32 noundef %cookie) #17
  %cmp = icmp eq ptr %call3, null
  br i1 %cmp, label %if.then, label %land.lhs.true2.cleanup_crit_edge

land.lhs.true2.cleanup_crit_edge:                 ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #19
  %skc_tx_queue_mapping.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %17 = ptrtoint ptr %skc_tx_queue_mapping.i.i.i to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 -1, ptr %skc_tx_queue_mapping.i.i.i, align 4
  %sk_dst_pending_confirm.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %18 = ptrtoint ptr %sk_dst_pending_confirm.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %sk_dst_pending_confirm.i.i, align 8
  %call.i.i.i11 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_dst_cache.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !913
  tail call void @llvm.prefetch.p0(ptr %sk_dst_cache.i, i32 1, i32 3, i32 1) #17
  %19 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_dst_cache.i) #17, !srcloc !914
  %asmresult.i.i.i = extractvalue { i32, i32 } %19, 0
  %20 = inttoptr i32 %asmresult.i.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !915
  tail call void @dst_release(ptr noundef %20) #17
  tail call void @dst_release(ptr noundef nonnull %dst.0.i) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then, %land.lhs.true2.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %sk_dst_get.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then ], [ %dst.0.i, %land.lhs.true2.cleanup_crit_edge ], [ %dst.0.i, %land.lhs.true.cleanup_crit_edge ], [ null, %sk_dst_get.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sk_dst_reset(ptr noundef %sk) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %skc_tx_queue_mapping.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %0 = ptrtoint ptr %skc_tx_queue_mapping.i.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %skc_tx_queue_mapping.i.i, align 4
  %sk_dst_pending_confirm.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %1 = ptrtoint ptr %sk_dst_pending_confirm.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %sk_dst_pending_confirm.i, align 8
  %sk_dst_cache.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_dst_cache.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !913
  tail call void @llvm.prefetch.p0(ptr %sk_dst_cache.i, i32 1, i32 3, i32 1) #17
  %2 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_dst_cache.i) #17, !srcloc !914
  %asmresult.i.i = extractvalue { i32, i32 } %2, 0
  %3 = inttoptr i32 %asmresult.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !915
  tail call void @dst_release(ptr noundef %3) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_bindtoindex(ptr noundef %sk, i32 noundef %ifindex, i1 noundef zeroext %lock_sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %lock_sk, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %if.then.lock_sock.exit_crit_edge, label %if.then.i.i

if.then.lock_sock.exit_crit_edge:                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %if.then.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  br label %if.end

if.end:                                           ; preds = %lock_sock.exit, %entry.if.end_crit_edge
  %skc_bound_dev_if.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 6
  %5 = ptrtoint ptr %skc_bound_dev_if.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %skc_bound_dev_if.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.end.if.end.i_crit_edge, label %land.lhs.true.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %7 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %skc_net.i.i, align 4
  %user_ns.i = getelementptr inbounds %struct.net, ptr %8, i32 0, i32 11
  %9 = ptrtoint ptr %user_ns.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %user_ns.i, align 4
  %call1.i = tail call zeroext i1 @ns_capable(ptr noundef %10, i32 noundef 13) #17
  br i1 %call1.i, label %land.lhs.true.i.if.end.i_crit_edge, label %land.lhs.true.i.sock_bindtoindex_locked.exit_crit_edge

land.lhs.true.i.sock_bindtoindex_locked.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_bindtoindex_locked.exit

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end.if.end.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ifindex)
  %cmp.i = icmp slt i32 %ifindex, 0
  br i1 %cmp.i, label %if.end.i.sock_bindtoindex_locked.exit_crit_edge, label %if.end3.i

if.end.i.sock_bindtoindex_locked.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_bindtoindex_locked.exit

if.end3.i:                                        ; preds = %if.end.i
  %11 = ptrtoint ptr %skc_bound_dev_if.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %ifindex, ptr %skc_bound_dev_if.i, align 4
  %skc_prot.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %12 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %skc_prot.i, align 8
  %rehash.i = getelementptr inbounds %struct.proto, ptr %13, i32 0, i32 22
  %14 = ptrtoint ptr %rehash.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rehash.i, align 4
  %tobool7.not.i = icmp eq ptr %15, null
  br i1 %tobool7.not.i, label %if.end3.i.if.end12.i_crit_edge, label %if.then8.i

if.end3.i.if.end12.i_crit_edge:                   ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12.i

if.then8.i:                                       ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %15(ptr noundef %sk) #17
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then8.i, %if.end3.i.if.end12.i_crit_edge
  %skc_tx_queue_mapping.i.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %16 = ptrtoint ptr %skc_tx_queue_mapping.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 -1, ptr %skc_tx_queue_mapping.i.i.i.i, align 4
  %sk_dst_pending_confirm.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %17 = ptrtoint ptr %sk_dst_pending_confirm.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %sk_dst_pending_confirm.i.i.i, align 8
  %sk_dst_cache.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_dst_cache.i.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !913
  tail call void @llvm.prefetch.p0(ptr %sk_dst_cache.i.i.i, i32 1, i32 3, i32 1) #17
  %18 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_dst_cache.i.i.i) #17, !srcloc !914
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %18, 0
  %19 = inttoptr i32 %asmresult.i.i.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !915
  tail call void @dst_release(ptr noundef %19) #17
  br label %sock_bindtoindex_locked.exit

sock_bindtoindex_locked.exit:                     ; preds = %if.end12.i, %if.end.i.sock_bindtoindex_locked.exit_crit_edge, %land.lhs.true.i.sock_bindtoindex_locked.exit_crit_edge
  %ret.0.i = phi i32 [ -22, %if.end.i.sock_bindtoindex_locked.exit_crit_edge ], [ 0, %if.end12.i ], [ -1, %land.lhs.true.i.sock_bindtoindex_locked.exit_crit_edge ]
  br i1 %lock_sk, label %if.then2, label %sock_bindtoindex_locked.exit.if.end3_crit_edge

sock_bindtoindex_locked.exit.if.end3_crit_edge:   ; preds = %sock_bindtoindex_locked.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end3

if.then2:                                         ; preds = %sock_bindtoindex_locked.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @release_sock(ptr noundef %sk)
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %sock_bindtoindex_locked.exit.if.end3_crit_edge
  ret i32 %ret.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sock_bindtoindex_locked(ptr noundef %sk, i32 noundef %ifindex) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_bound_dev_if = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 6
  %0 = ptrtoint ptr %skc_bound_dev_if to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %skc_bound_dev_if, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %2 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skc_net.i, align 4
  %user_ns = getelementptr inbounds %struct.net, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %user_ns, align 4
  %call1 = tail call zeroext i1 @ns_capable(ptr noundef %5, i32 noundef 13) #17
  br i1 %call1, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.out_crit_edge

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ifindex)
  %cmp = icmp slt i32 %ifindex, 0
  br i1 %cmp, label %if.end.out_crit_edge, label %if.end3

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end3:                                          ; preds = %if.end
  %6 = ptrtoint ptr %skc_bound_dev_if to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %ifindex, ptr %skc_bound_dev_if, align 4
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %7 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %skc_prot, align 8
  %rehash = getelementptr inbounds %struct.proto, ptr %8, i32 0, i32 22
  %9 = ptrtoint ptr %rehash to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rehash, align 4
  %tobool7.not = icmp eq ptr %10, null
  br i1 %tobool7.not, label %if.end3.if.end12_crit_edge, label %if.then8

if.end3.if.end12_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then8:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %10(ptr noundef %sk) #17
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %if.end3.if.end12_crit_edge
  %skc_tx_queue_mapping.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %11 = ptrtoint ptr %skc_tx_queue_mapping.i.i.i to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 -1, ptr %skc_tx_queue_mapping.i.i.i, align 4
  %sk_dst_pending_confirm.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %12 = ptrtoint ptr %sk_dst_pending_confirm.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %sk_dst_pending_confirm.i.i, align 8
  %sk_dst_cache.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_dst_cache.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !913
  tail call void @llvm.prefetch.p0(ptr %sk_dst_cache.i.i, i32 1, i32 3, i32 1) #17
  %13 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_dst_cache.i.i) #17, !srcloc !914
  %asmresult.i.i.i = extractvalue { i32, i32 } %13, 0
  %14 = inttoptr i32 %asmresult.i.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !915
  tail call void @dst_release(ptr noundef %14) #17
  br label %out

out:                                              ; preds = %if.end12, %if.end.out_crit_edge, %land.lhs.true.out_crit_edge
  %ret.0 = phi i32 [ -22, %if.end.out_crit_edge ], [ 0, %if.end12 ], [ -1, %land.lhs.true.out_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @release_sock(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %tail = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9, i32 3
  %0 = ptrtoint ptr %tail to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tail, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__release_sock(ptr noundef %sk)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %2 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skc_prot, align 8
  %release_cb = getelementptr inbounds %struct.proto, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %release_cb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %release_cb, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %if.end.if.end6_crit_edge, label %if.then2

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %5(ptr noundef %sk) #17
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.end.if.end6_crit_edge
  %owned.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %6 = ptrtoint ptr %owned.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %owned.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i.not.i = icmp eq i32 %7, 0
  br i1 %tobool.i.not.i, label %if.end6.sock_release_ownership.exit_crit_edge, label %if.then.i

if.end6.sock_release_ownership.exit_crit_edge:    ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_release_ownership.exit

if.then.i:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %owned.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %owned.i.i, align 4
  %dep_map.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %9 = tail call ptr @llvm.returnaddress(i32 0) #17
  %10 = ptrtoint ptr %9 to i32
  tail call void @lock_release(ptr noundef %dep_map.i, i32 noundef %10) #17
  br label %sock_release_ownership.exit

sock_release_ownership.exit:                      ; preds = %if.then.i, %if.end6.sock_release_ownership.exit_crit_edge
  %head.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 2, i32 1
  %11 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.i.not = icmp eq ptr %12, %head.i
  br i1 %cmp.i.i.not, label %sock_release_ownership.exit.if.end12_crit_edge, label %if.then9

sock_release_ownership.exit.if.end12_crit_edge:   ; preds = %sock_release_ownership.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then9:                                         ; preds = %sock_release_ownership.exit
  call void @__sanitizer_cov_trace_pc() #19
  %wq = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 2
  tail call void @__wake_up(ptr noundef %wq, i32 noundef 3, i32 noundef 1, ptr noundef null) #17
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %sock_release_ownership.exit.if.end12_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @sk_mc_loop(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %3, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !916
  %4 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %9, ptrtoint (ptr getelementptr inbounds (%struct.softnet_data, ptr @softnet_data, i32 0, i32 11) to i32)
  %10 = inttoptr i32 %add.i to ptr
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load volatile i16, ptr %10, align 2
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !917
  %13 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i19.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i19.i to ptr
  %preempt_count.i.i20.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i20.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i20.i, align 4
  %sub.i.i = add i32 %16, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i20.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool.not = icmp eq i16 %12, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %sk, null
  br i1 %tobool1.not, label %if.end.return_crit_edge, label %if.end3

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end3:                                          ; preds = %if.end
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %17 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %skc_family, align 8
  %19 = zext i16 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.497)
  switch i16 %18, label %land.end [
    i16 2, label %sw.bb
    i16 10, label %sw.bb6
  ]

sw.bb:                                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  %mc_loop = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 12
  %20 = ptrtoint ptr %mc_loop to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load = load i16, ptr %mc_loop, align 8
  %21 = and i16 %bf.load, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool5 = icmp ne i16 %21, 0
  br label %return

sw.bb6:                                           ; preds = %if.end3
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %22 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %23 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i57 = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i57)
  %tobool.i.not.i = icmp eq i32 %and.i.i57, 0
  br i1 %tobool.i.not.i, label %sw.bb6.inet6_sk.exit_crit_edge, label %cond.true.i

sw.bb6.inet6_sk.exit_crit_edge:                   ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit

cond.true.i:                                      ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i = getelementptr inbounds %struct.inet_sock, ptr %sk, i32 0, i32 1
  %24 = ptrtoint ptr %pinet6.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pinet6.i, align 8
  br label %inet6_sk.exit

inet6_sk.exit:                                    ; preds = %cond.true.i, %sw.bb6.inet6_sk.exit_crit_edge
  %cond.i = phi ptr [ %25, %cond.true.i ], [ null, %sw.bb6.inet6_sk.exit_crit_edge ]
  %mc_loop8 = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i, i32 0, i32 6
  %26 = ptrtoint ptr %mc_loop8 to i32
  call void @__asan_load4_noabort(i32 %26)
  %bf.load9 = load i32, ptr %mc_loop8, align 4
  %bf.cast1154 = and i32 %bf.load9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bf.cast1154)
  %tobool12 = icmp ne i32 %bf.cast1154, 0
  br label %return

land.end:                                         ; preds = %if.end3
  %.b56 = load i1, ptr @sk_mc_loop.__already_done, align 1
  br i1 %.b56, label %land.end.return_crit_edge, label %if.then19, !prof !888

land.end.return_crit_edge:                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.then19:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sk_mc_loop.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 742, i32 noundef 9, ptr noundef null) #17
  br label %return

return:                                           ; preds = %if.then19, %land.end.return_crit_edge, %inet6_sk.exit, %sw.bb, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ %tobool12, %inet6_sk.exit ], [ %tobool5, %sw.bb ], [ false, %entry.return_crit_edge ], [ true, %if.end.return_crit_edge ], [ true, %if.then19 ], [ true, %land.end.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_set_reuseaddr(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %skc_reuse = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 5
  %5 = ptrtoint ptr %skc_reuse to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %skc_reuse, align 1
  %bf.clear = and i8 %bf.load, 15
  %bf.set = or i8 %bf.clear, 16
  store i8 %bf.set, ptr %skc_reuse, align 1
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_set_reuseport(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %skc_reuseport = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 5
  %5 = ptrtoint ptr %skc_reuseport to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %skc_reuseport, align 1
  %bf.set = or i8 %bf.load, 8
  store i8 %bf.set, ptr %skc_reuseport, align 1
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_no_linger(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %sk_lingertime = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 48
  %5 = ptrtoint ptr %sk_lingertime to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %sk_lingertime, align 8
  %6 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 4
  %or.i.i = or i32 %8, 16
  store i32 %or.i.i, ptr %6, align 4
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_set_priority(ptr noundef %sk, i32 noundef %priority) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %sk_priority = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 33
  %5 = ptrtoint ptr %sk_priority to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %priority, ptr %sk_priority, align 4
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_set_sndtimeo(ptr noundef %sk, i64 noundef %secs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %secs)
  %tobool.not = icmp ne i64 %secs, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 21474835, i64 %secs)
  %cmp = icmp slt i64 %secs, 21474835
  %or.cond = and i1 %tobool.not, %cmp
  %5 = trunc i64 %secs to i32
  %conv = mul i32 %5, 100
  %.sink = select i1 %or.cond, i32 %conv, i32 2147483647
  %6 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 31
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %.sink, ptr %6, align 8
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_enable_timestamps(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %5 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %5, align 4
  %and.i.i.i.i = and i32 %7, -67115009
  %or.i.i.i = or i32 %and.i.i.i.i, 6144
  store i32 %or.i.i.i, ptr %5, align 4
  %8 = load volatile i32, ptr %5, align 4
  %9 = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.i.not.i.i3 = icmp eq i32 %9, 0
  br i1 %tobool.i.not.i.i3, label %if.then.i19.i, label %lock_sock.exit.__sock_set_timestamps.exit_crit_edge

lock_sock.exit.__sock_set_timestamps.exit_crit_edge: ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sock_set_timestamps.exit

if.then.i19.i:                                    ; preds = %lock_sock.exit
  %or.i.i.i17.i = or i32 %8, 128
  %10 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or.i.i.i17.i, ptr %5, align 4
  %skc_family.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %11 = ptrtoint ptr %skc_family.i.i.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %skc_family.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %12)
  %switch.i.i.i = icmp ugt i16 %12, 1
  %and.i.i = and i32 %8, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i18.i = icmp eq i32 %and.i.i, 0
  %or.cond.i.i = select i1 %switch.i.i.i, i1 %tobool.not.i18.i, i1 false
  br i1 %or.cond.i.i, label %if.then2.i.i, label %if.then.i19.i.__sock_set_timestamps.exit_crit_edge

if.then.i19.i.__sock_set_timestamps.exit_crit_edge: ; preds = %if.then.i19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sock_set_timestamps.exit

if.then2.i.i:                                     ; preds = %if.then.i19.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_enable_timestamp() #17
  br label %__sock_set_timestamps.exit

__sock_set_timestamps.exit:                       ; preds = %if.then2.i.i, %if.then.i19.i.__sock_set_timestamps.exit_crit_edge, %lock_sock.exit.__sock_set_timestamps.exit_crit_edge
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_set_timestamp(ptr noundef %sk, i32 noundef %optname, i1 noundef zeroext %valbool) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %optname to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.498)
  switch i32 %optname, label %entry.sw.epilog_crit_edge [
    i32 29, label %sw.bb
    i32 63, label %sw.bb1
    i32 35, label %sw.bb3
    i32 64, label %sw.bb5
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %1 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  br i1 %valbool, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %sw.bb
  %and.i.i.i.i = and i32 %3, -67115009
  %or.i.i.i = or i32 %and.i.i.i.i, 2048
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or.i.i.i, ptr %1, align 4
  %5 = load volatile i32, ptr %1, align 4
  %6 = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not.i.i = icmp eq i32 %6, 0
  br i1 %tobool.i.not.i.i, label %if.then.i19.i, label %if.then.i.sw.epilog_crit_edge

if.then.i.sw.epilog_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then.i19.i:                                    ; preds = %if.then.i
  %or.i.i.i17.i = or i32 %5, 128
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i.i.i17.i, ptr %1, align 4
  %skc_family.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %8 = ptrtoint ptr %skc_family.i.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %skc_family.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %9)
  %switch.i.i.i = icmp ugt i16 %9, 1
  %and.i.i = and i32 %5, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i18.i = icmp eq i32 %and.i.i, 0
  %or.cond.i.i = select i1 %switch.i.i.i, i1 %tobool.not.i18.i, i1 false
  br i1 %or.cond.i.i, label %if.then2.i.i, label %if.then.i19.i.sw.epilog_crit_edge

if.then.i19.i.sw.epilog_crit_edge:                ; preds = %if.then.i19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then2.i.i:                                     ; preds = %if.then.i19.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_enable_timestamp() #17
  br label %sw.epilog

if.else.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i20.i = and i32 %3, -6145
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %and.i.i20.i, ptr %1, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %11 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  br i1 %valbool, label %if.then.i16, label %if.else.i26

if.then.i16:                                      ; preds = %sw.bb1
  %and.i.i.i.i13 = and i32 %13, -67115009
  %or.i.i.i14 = or i32 %and.i.i.i.i13, 67110912
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %or.i.i.i14, ptr %11, align 4
  %15 = load volatile i32, ptr %11, align 4
  %16 = and i32 %15, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not.i.i15 = icmp eq i32 %16, 0
  br i1 %tobool.i.not.i.i15, label %if.then.i19.i23, label %if.then.i16.sw.epilog_crit_edge

if.then.i16.sw.epilog_crit_edge:                  ; preds = %if.then.i16
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then.i19.i23:                                  ; preds = %if.then.i16
  %or.i.i.i17.i17 = or i32 %15, 128
  %17 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %or.i.i.i17.i17, ptr %11, align 4
  %skc_family.i.i.i18 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %18 = ptrtoint ptr %skc_family.i.i.i18 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %skc_family.i.i.i18, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %19)
  %switch.i.i.i19 = icmp ugt i16 %19, 1
  %and.i.i20 = and i32 %15, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i20)
  %tobool.not.i18.i21 = icmp eq i32 %and.i.i20, 0
  %or.cond.i.i22 = select i1 %switch.i.i.i19, i1 %tobool.not.i18.i21, i1 false
  br i1 %or.cond.i.i22, label %if.then2.i.i24, label %if.then.i19.i23.sw.epilog_crit_edge

if.then.i19.i23.sw.epilog_crit_edge:              ; preds = %if.then.i19.i23
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then2.i.i24:                                   ; preds = %if.then.i19.i23
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_enable_timestamp() #17
  br label %sw.epilog

if.else.i26:                                      ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i20.i25 = and i32 %13, -6145
  %20 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %and.i.i20.i25, ptr %11, align 4
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %21 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  br i1 %valbool, label %if.then.i31, label %if.else.i41

if.then.i31:                                      ; preds = %sw.bb3
  %and.i.i.i.i28 = and i32 %23, -67115009
  %or.i.i.i29 = or i32 %and.i.i.i.i28, 6144
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %or.i.i.i29, ptr %21, align 4
  %25 = load volatile i32, ptr %21, align 4
  %26 = and i32 %25, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.i.not.i.i30 = icmp eq i32 %26, 0
  br i1 %tobool.i.not.i.i30, label %if.then.i19.i38, label %if.then.i31.sw.epilog_crit_edge

if.then.i31.sw.epilog_crit_edge:                  ; preds = %if.then.i31
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then.i19.i38:                                  ; preds = %if.then.i31
  %or.i.i.i17.i32 = or i32 %25, 128
  %27 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i.i.i17.i32, ptr %21, align 4
  %skc_family.i.i.i33 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %28 = ptrtoint ptr %skc_family.i.i.i33 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %skc_family.i.i.i33, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %29)
  %switch.i.i.i34 = icmp ugt i16 %29, 1
  %and.i.i35 = and i32 %25, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i35)
  %tobool.not.i18.i36 = icmp eq i32 %and.i.i35, 0
  %or.cond.i.i37 = select i1 %switch.i.i.i34, i1 %tobool.not.i18.i36, i1 false
  br i1 %or.cond.i.i37, label %if.then2.i.i39, label %if.then.i19.i38.sw.epilog_crit_edge

if.then.i19.i38.sw.epilog_crit_edge:              ; preds = %if.then.i19.i38
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then2.i.i39:                                   ; preds = %if.then.i19.i38
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_enable_timestamp() #17
  br label %sw.epilog

if.else.i41:                                      ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i20.i40 = and i32 %23, -6145
  %30 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %and.i.i20.i40, ptr %21, align 4
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %31 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  br i1 %valbool, label %if.then.i48, label %if.else.i58

if.then.i48:                                      ; preds = %sw.bb5
  %or.i.i.i46 = or i32 %33, 67115008
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %or.i.i.i46, ptr %31, align 4
  %35 = load volatile i32, ptr %31, align 4
  %36 = and i32 %35, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.i.not.i.i47 = icmp eq i32 %36, 0
  br i1 %tobool.i.not.i.i47, label %if.then.i19.i55, label %if.then.i48.sw.epilog_crit_edge

if.then.i48.sw.epilog_crit_edge:                  ; preds = %if.then.i48
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then.i19.i55:                                  ; preds = %if.then.i48
  %or.i.i.i17.i49 = or i32 %35, 128
  %37 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %or.i.i.i17.i49, ptr %31, align 4
  %skc_family.i.i.i50 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %38 = ptrtoint ptr %skc_family.i.i.i50 to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %skc_family.i.i.i50, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %39)
  %switch.i.i.i51 = icmp ugt i16 %39, 1
  %and.i.i52 = and i32 %35, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i52)
  %tobool.not.i18.i53 = icmp eq i32 %and.i.i52, 0
  %or.cond.i.i54 = select i1 %switch.i.i.i51, i1 %tobool.not.i18.i53, i1 false
  br i1 %or.cond.i.i54, label %if.then2.i.i56, label %if.then.i19.i55.sw.epilog_crit_edge

if.then.i19.i55.sw.epilog_crit_edge:              ; preds = %if.then.i19.i55
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then2.i.i56:                                   ; preds = %if.then.i19.i55
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_enable_timestamp() #17
  br label %sw.epilog

if.else.i58:                                      ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i20.i57 = and i32 %33, -6145
  %40 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %and.i.i20.i57, ptr %31, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.else.i58, %if.then2.i.i56, %if.then.i19.i55.sw.epilog_crit_edge, %if.then.i48.sw.epilog_crit_edge, %if.else.i41, %if.then2.i.i39, %if.then.i19.i38.sw.epilog_crit_edge, %if.then.i31.sw.epilog_crit_edge, %if.else.i26, %if.then2.i.i24, %if.then.i19.i23.sw.epilog_crit_edge, %if.then.i16.sw.epilog_crit_edge, %if.else.i, %if.then2.i.i, %if.then.i19.i.sw.epilog_crit_edge, %if.then.i.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_set_timestamping(ptr noundef %sk, i32 noundef %optname, [2 x i32] %timestamping.coerce) local_unnamed_addr #0 align 64 {
entry:
  %vclock_index.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %timestamping.coerce.fca.0.extract = extractvalue [2 x i32] %timestamping.coerce, 0
  %timestamping.coerce.fca.1.extract = extractvalue [2 x i32] %timestamping.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %timestamping.coerce.fca.0.extract)
  %tobool.not = icmp ult i32 %timestamping.coerce.fca.0.extract, 65536
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %and1 = and i32 %timestamping.coerce.fca.0.extract, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %if.end.if.end15_crit_edge, label %land.lhs.true

if.end.if.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15

land.lhs.true:                                    ; preds = %if.end
  %sk_tsflags = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 65
  %0 = ptrtoint ptr %sk_tsflags to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %sk_tsflags, align 8
  %2 = and i16 %1, 128
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %tobool4.not = icmp eq i16 %2, 0
  br i1 %tobool4.not, label %if.then5, label %land.lhs.true.if.end15_crit_edge

land.lhs.true.if.end15_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15

if.then5:                                         ; preds = %land.lhs.true
  %sk_type.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %3 = ptrtoint ptr %sk_type.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %sk_type.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %4)
  %cmp.i = icmp eq i16 %4, 1
  br i1 %cmp.i, label %sk_is_tcp.exit, label %if.then5.if.else_crit_edge

if.then5.if.else_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

sk_is_tcp.exit:                                   ; preds = %if.then5
  %sk_protocol.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %5 = ptrtoint ptr %sk_protocol.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %sk_protocol.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %6)
  %cmp3.i = icmp eq i16 %6, 6
  br i1 %cmp3.i, label %if.then6, label %sk_is_tcp.exit.if.else_crit_edge

sk_is_tcp.exit.if.else_crit_edge:                 ; preds = %sk_is_tcp.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then6:                                         ; preds = %sk_is_tcp.exit
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %7 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load volatile i8, ptr %skc_state, align 2
  %conv7 = zext i8 %8 to i32
  %shl = shl nuw i32 1, %conv7
  %and8 = and i32 %shl, 1152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end11, label %if.then6.cleanup_crit_edge

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end11:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  %sk_tskey = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 67
  %snd_una = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 16
  %9 = ptrtoint ptr %snd_una to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %snd_una, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_tskey, i32 noundef 4) #17
  %11 = ptrtoint ptr %sk_tskey to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 %10, ptr %sk_tskey, align 4
  br label %if.end15

if.else:                                          ; preds = %sk_is_tcp.exit.if.else_crit_edge, %if.then5.if.else_crit_edge
  %sk_tskey13 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 67
  %call.i.i57 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_tskey13, i32 noundef 4) #17
  %12 = ptrtoint ptr %sk_tskey13 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 0, ptr %sk_tskey13, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end11, %land.lhs.true.if.end15_crit_edge, %if.end.if.end15_crit_edge
  %13 = and i32 %timestamping.coerce.fca.0.extract, 6144
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %13)
  %14 = icmp eq i32 %13, 4096
  br i1 %14, label %if.end15.cleanup_crit_edge, label %if.end22

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end22:                                         ; preds = %if.end15
  %and23 = and i32 %timestamping.coerce.fca.0.extract, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %if.end22.if.end30_crit_edge, label %if.then25

if.end22.if.end30_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30

if.then25:                                        ; preds = %if.end22
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %15 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %skc_net.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %vclock_index.i) #17
  %17 = ptrtoint ptr %vclock_index.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 -1 to ptr), ptr %vclock_index.i, align 4, !annotation !896
  %skc_bound_dev_if.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 6
  %18 = ptrtoint ptr %skc_bound_dev_if.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %skc_bound_dev_if.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i, label %if.then25.do.end.i_crit_edge, label %if.end.i

if.then25.do.end.i_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i

if.end.i:                                         ; preds = %if.then25
  %call3.i = tail call ptr @dev_get_by_index(ptr noundef %16, i32 noundef %19) #17
  %tobool4.not.i = icmp eq ptr %call3.i, null
  br i1 %tobool4.not.i, label %if.end.i.do.end.i_crit_edge, label %do.body1.i.i

if.end.i.do.end.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i

do.end.i:                                         ; preds = %if.end.i.do.end.i_crit_edge, %if.then25.do.end.i_crit_edge
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.24, ptr noundef nonnull @.str.25) #21
  br label %sock_timestamping_bind_phc.exit.thread

do.body1.i.i:                                     ; preds = %if.end.i
  %call8.i = call i32 @ethtool_get_phc_vclocks(ptr noundef nonnull %call3.i, ptr noundef nonnull %vclock_index.i) #17
  %20 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !918
  %pcpu_refcnt.i.i = getelementptr inbounds %struct.net_device, ptr %call3.i, i32 0, i32 118
  %21 = ptrtoint ptr %pcpu_refcnt.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pcpu_refcnt.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  %24 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %29, %23
  %30 = inttoptr i32 %add.i.i to ptr
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %add13.i.i = add i32 %32, -1
  store i32 %add13.i.i, ptr %30, align 4
  %33 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !919
  %and.i.i.i.i = and i32 %33, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool24.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool24.not.i.i, label %if.then28.i.i, label %do.body1.i.i.dev_put.exit.i_crit_edge, !prof !889

do.body1.i.i.dev_put.exit.i_crit_edge:            ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dev_put.exit.i

if.then28.i.i:                                    ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @warn_bogus_irq_restore() #17
  br label %dev_put.exit.i

dev_put.exit.i:                                   ; preds = %if.then28.i.i, %do.body1.i.i.dev_put.exit.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %20) #17, !srcloc !920
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %cmp34.i = icmp sgt i32 %call8.i, 0
  br i1 %cmp34.i, label %for.body.lr.ph.i, label %dev_put.exit.i.sock_timestamping_bind_phc.exit.thread_crit_edge

dev_put.exit.i.sock_timestamping_bind_phc.exit.thread_crit_edge: ; preds = %dev_put.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_timestamping_bind_phc.exit.thread

for.body.lr.ph.i:                                 ; preds = %dev_put.exit.i
  %34 = ptrtoint ptr %vclock_index.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %vclock_index.i, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %timestamping.coerce.fca.1.extract)
  %cmp9.i73 = icmp eq i32 %37, %timestamping.coerce.fca.1.extract
  br i1 %cmp9.i73, label %sock_timestamping_bind_phc.exit.critedge, label %for.body.lr.ph.i.for.cond.i_crit_edge

for.body.lr.ph.i.for.cond.i_crit_edge:            ; preds = %for.body.lr.ph.i
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %for.body.lr.ph.i.for.cond.i_crit_edge
  %i.035.i74 = phi i32 [ %inc.i, %for.body.i.for.cond.i_crit_edge ], [ 0, %for.body.lr.ph.i.for.cond.i_crit_edge ]
  %inc.i = add nuw nsw i32 %i.035.i74, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %call8.i)
  %exitcond.not.i = icmp eq i32 %inc.i, %call8.i
  br i1 %exitcond.not.i, label %for.cond.i.if.then13.i_crit_edge, label %for.body.i

for.cond.i.if.then13.i_crit_edge:                 ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then13.i

for.body.i:                                       ; preds = %for.cond.i
  %add.ptr.i = getelementptr i32, ptr %35, i32 %inc.i
  %38 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %add.ptr.i, align 4
  %cmp9.i = icmp eq i32 %39, %timestamping.coerce.fca.1.extract
  br i1 %cmp9.i, label %for.body.i.if.then13.i_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i

for.body.i.if.then13.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then13.i

if.then13.i:                                      ; preds = %for.body.i.if.then13.i_crit_edge, %for.cond.i.if.then13.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %call8.i)
  %cmp.i58.le = icmp slt i32 %inc.i, %call8.i
  call void @kfree(ptr noundef %35) #17
  br i1 %cmp.i58.le, label %if.then13.i.sock_timestamping_bind_phc.exit_crit_edge, label %if.then13.i.sock_timestamping_bind_phc.exit.thread_crit_edge

if.then13.i.sock_timestamping_bind_phc.exit.thread_crit_edge: ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_timestamping_bind_phc.exit.thread

if.then13.i.sock_timestamping_bind_phc.exit_crit_edge: ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_timestamping_bind_phc.exit

sock_timestamping_bind_phc.exit.thread:           ; preds = %if.then13.i.sock_timestamping_bind_phc.exit.thread_crit_edge, %dev_put.exit.i.sock_timestamping_bind_phc.exit.thread_crit_edge, %do.end.i
  %retval.0.i.ph = phi i32 [ -22, %dev_put.exit.i.sock_timestamping_bind_phc.exit.thread_crit_edge ], [ -22, %if.then13.i.sock_timestamping_bind_phc.exit.thread_crit_edge ], [ -95, %do.end.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vclock_index.i) #17
  br label %cleanup

sock_timestamping_bind_phc.exit.critedge:         ; preds = %for.body.lr.ph.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @kfree(ptr noundef %35) #17
  br label %sock_timestamping_bind_phc.exit

sock_timestamping_bind_phc.exit:                  ; preds = %sock_timestamping_bind_phc.exit.critedge, %if.then13.i.sock_timestamping_bind_phc.exit_crit_edge
  %sk_bind_phc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 59
  %40 = ptrtoint ptr %sk_bind_phc.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %timestamping.coerce.fca.1.extract, ptr %sk_bind_phc.i, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %vclock_index.i) #17
  br label %if.end30

if.end30:                                         ; preds = %sock_timestamping_bind_phc.exit, %if.end22.if.end30_crit_edge
  %conv31 = trunc i32 %timestamping.coerce.fca.0.extract to i16
  %sk_tsflags32 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 65
  %41 = ptrtoint ptr %sk_tsflags32 to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %conv31, ptr %sk_tsflags32, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 65, i32 %optname)
  %cmp.not = icmp eq i32 %optname, 65
  %42 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %and.i.i.i60 = and i32 %44, -67108865
  %masksel = select i1 %cmp.not, i32 67108864, i32 0
  %storemerge = or i32 %and.i.i.i60, %masksel
  store i32 %storemerge, ptr %42, align 4
  %and34 = and i32 %timestamping.coerce.fca.0.extract, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.else37, label %if.then36

if.then36:                                        ; preds = %if.end30
  %45 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %42, align 4
  %47 = and i32 %46, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.i.not.i = icmp eq i32 %47, 0
  br i1 %tobool.i.not.i, label %if.then.i64, label %if.then36.cleanup_crit_edge

if.then36.cleanup_crit_edge:                      ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then.i64:                                      ; preds = %if.then36
  %or.i.i.i62 = or i32 %46, 32768
  %48 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %or.i.i.i62, ptr %42, align 4
  %skc_family.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %49 = ptrtoint ptr %skc_family.i.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %skc_family.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %50)
  %switch.i.i = icmp ugt i16 %50, 1
  %and.i = and i32 %46, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i63 = icmp eq i32 %and.i, 0
  %or.cond.i = select i1 %switch.i.i, i1 %tobool.not.i63, i1 false
  br i1 %or.cond.i, label %if.then2.i, label %if.then.i64.cleanup_crit_edge

if.then.i64.cleanup_crit_edge:                    ; preds = %if.then.i64
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then2.i:                                       ; preds = %if.then.i64
  call void @__sanitizer_cov_trace_pc() #19
  call void @net_enable_timestamp() #17
  br label %cleanup

if.else37:                                        ; preds = %if.end30
  %51 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %42, align 8
  %and.i65 = and i32 %52, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i65)
  %tobool.not.i66 = icmp eq i32 %and.i65, 0
  br i1 %tobool.not.i66, label %if.else37.cleanup_crit_edge, label %if.then.i70

if.else37.cleanup_crit_edge:                      ; preds = %if.else37
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then.i70:                                      ; preds = %if.else37
  %and2.i = and i32 %52, -32769
  %53 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %and2.i, ptr %42, align 8
  %skc_family.i.i67 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %54 = ptrtoint ptr %skc_family.i.i67 to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %skc_family.i.i67, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %55)
  %switch.i.i68 = icmp ugt i16 %55, 1
  %and4.i = and i32 %52, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  %or.cond.i69 = select i1 %switch.i.i68, i1 %tobool5.not.i, i1 false
  br i1 %or.cond.i69, label %if.then6.i, label %if.then.i70.cleanup_crit_edge

if.then.i70.cleanup_crit_edge:                    ; preds = %if.then.i70
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then6.i:                                       ; preds = %if.then.i70
  call void @__sanitizer_cov_trace_pc() #19
  call void @net_disable_timestamp() #17
  br label %cleanup

cleanup:                                          ; preds = %if.then6.i, %if.then.i70.cleanup_crit_edge, %if.else37.cleanup_crit_edge, %if.then2.i, %if.then.i64.cleanup_crit_edge, %if.then36.cleanup_crit_edge, %sock_timestamping_bind_phc.exit.thread, %if.end15.cleanup_crit_edge, %if.then6.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -22, %if.then6.cleanup_crit_edge ], [ -22, %if.end15.cleanup_crit_edge ], [ %retval.0.i.ph, %sock_timestamping_bind_phc.exit.thread ], [ 0, %if.then36.cleanup_crit_edge ], [ 0, %if.then.i64.cleanup_crit_edge ], [ 0, %if.then2.i ], [ 0, %if.else37.cleanup_crit_edge ], [ 0, %if.then.i70.cleanup_crit_edge ], [ 0, %if.then6.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_enable_timestamp(ptr noundef %sk, i32 noundef %flag) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %div3.i.i = lshr i32 %flag, 5
  %arrayidx.i.i = getelementptr i32, ptr %0, i32 %div3.i.i
  %1 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %flag, 31
  %3 = shl nuw i32 1, %and.i.i
  %4 = and i32 %2, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not = icmp eq i32 %4, 0
  br i1 %tobool.i.not, label %if.then, label %entry.if.end3_crit_edge

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end3

if.then:                                          ; preds = %entry
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %0, align 8
  %or.i.i = or i32 %2, %3
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i.i, ptr %arrayidx.i.i, align 4
  %skc_family.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %8 = ptrtoint ptr %skc_family.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %skc_family.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %9)
  %switch.i = icmp ugt i16 %9, 1
  %and = and i32 %6, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %or.cond = select i1 %switch.i, i1 %tobool.not, i1 false
  br i1 %or.cond, label %if.then2, label %if.then.if.end3_crit_edge

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end3

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_enable_timestamp() #17
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.then.if.end3_crit_edge, %entry.if.end3_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_set_keepalive(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %5 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %skc_prot, align 8
  %keepalive = getelementptr inbounds %struct.proto, ptr %6, i32 0, i32 11
  %7 = ptrtoint ptr %keepalive to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %keepalive, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %lock_sock.exit.if.end_crit_edge, label %if.then

lock_sock.exit.if.end_crit_edge:                  ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %8(ptr noundef %sk, i32 noundef 1) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %lock_sock.exit.if.end_crit_edge
  %9 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %or.i.i.i = or i32 %11, 8
  store i32 %or.i.i.i, ptr %9, align 4
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_set_rcvbuf(ptr noundef %sk, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741823, i32 %val)
  %cmp.i = icmp slt i32 %val, 1073741823
  %phi.bo.i = shl i32 %val, 1
  %sk_userlocks.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %5 = ptrtoint ptr %sk_userlocks.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load.i = load i8, ptr %sk_userlocks.i, align 8
  %bf.set.i = or i8 %bf.load.i, 2
  store i8 %bf.set.i, ptr %sk_userlocks.i, align 8
  %6 = tail call i32 @llvm.smax.i32(i32 %phi.bo.i, i32 2304) #17
  %7 = select i1 %cmp.i, i32 %6, i32 2147483646
  %sk_rcvbuf.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %8 = ptrtoint ptr %sk_rcvbuf.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 %7, ptr %sk_rcvbuf.i, align 8
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_set_mark(ptr noundef %sk, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool.i.not.i.i, label %entry.lock_sock.exit_crit_edge, label %if.then.i.i

entry.lock_sock.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %entry.lock_sock.exit_crit_edge
  %4 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i.i.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %sk_mark.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 34
  %5 = ptrtoint ptr %sk_mark.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sk_mark.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %val)
  %cmp.not.i = icmp eq i32 %6, %val
  br i1 %cmp.not.i, label %lock_sock.exit.__sock_set_mark.exit_crit_edge, label %if.then.i

lock_sock.exit.__sock_set_mark.exit_crit_edge:    ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sock_set_mark.exit

if.then.i:                                        ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %7 = ptrtoint ptr %sk_mark.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %val, ptr %sk_mark.i, align 8
  %skc_tx_queue_mapping.i.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %8 = ptrtoint ptr %skc_tx_queue_mapping.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -1, ptr %skc_tx_queue_mapping.i.i.i.i, align 4
  %sk_dst_pending_confirm.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %9 = ptrtoint ptr %sk_dst_pending_confirm.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %sk_dst_pending_confirm.i.i.i, align 8
  %sk_dst_cache.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_dst_cache.i.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !913
  tail call void @llvm.prefetch.p0(ptr %sk_dst_cache.i.i.i, i32 1, i32 3, i32 1) #17
  %10 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_dst_cache.i.i.i) #17, !srcloc !914
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %10, 0
  %11 = inttoptr i32 %asmresult.i.i.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !915
  tail call void @dst_release(ptr noundef %11) #17
  br label %__sock_set_mark.exit

__sock_set_mark.exit:                             ; preds = %if.then.i, %lock_sock.exit.__sock_set_mark.exit_crit_edge
  tail call void @release_sock(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__sock_set_mark(ptr noundef %sk, i32 noundef %val) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_mark = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 34
  %0 = ptrtoint ptr %sk_mark to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_mark, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %val)
  %cmp.not = icmp eq i32 %1, %val
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %2 = ptrtoint ptr %sk_mark to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %val, ptr %sk_mark, align 8
  %skc_tx_queue_mapping.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %3 = ptrtoint ptr %skc_tx_queue_mapping.i.i.i to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 -1, ptr %skc_tx_queue_mapping.i.i.i, align 4
  %sk_dst_pending_confirm.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %4 = ptrtoint ptr %sk_dst_pending_confirm.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %sk_dst_pending_confirm.i.i, align 8
  %sk_dst_cache.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_dst_cache.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !913
  tail call void @llvm.prefetch.p0(ptr %sk_dst_cache.i.i, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_dst_cache.i.i) #17, !srcloc !914
  %asmresult.i.i.i = extractvalue { i32, i32 } %5, 0
  %6 = inttoptr i32 %asmresult.i.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !915
  tail call void @dst_release(ptr noundef %6) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_setsockopt(ptr noundef %sock, i32 %level, i32 noundef %optname, [2 x i32] %optval.coerce, i32 noundef %optlen) #0 align 64 {
entry:
  %devname.i = alloca [16 x i8], align 1
  %timestamping = alloca %struct.so_timestamping, align 8
  %sk_txtime = alloca %struct.sock_txtime, align 4
  %val = alloca i32, align 4
  %ling = alloca %struct.linger, align 4
  %fprog = alloca %struct.sock_fprog, align 8
  %ufd = alloca i32, align 4
  %fprog211 = alloca %struct.sock_fprog, align 8
  %ufd222 = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %timestamping) #17
  %0 = ptrtoint ptr %timestamping to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %timestamping, align 8, !annotation !896
  %1 = getelementptr inbounds %struct.so_timestamping, ptr %timestamping, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !896
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sk_txtime) #17
  %3 = ptrtoint ptr %sk_txtime to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %sk_txtime, align 4, !annotation !896
  %4 = getelementptr inbounds %struct.sock_txtime, ptr %sk_txtime, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %4, align 4, !annotation !896
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %6 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sk1, align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #17
  %8 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %val, align 4, !annotation !896
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ling) #17
  %9 = ptrtoint ptr %ling to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %ling, align 4, !annotation !896
  %10 = getelementptr inbounds %struct.linger, ptr %ling, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 -1, ptr %10, align 4, !annotation !896
  call void @__sanitizer_cov_trace_const_cmp4(i32 25, i32 %optname)
  %cmp = icmp eq i32 %optname, 25
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 9
  %12 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %skc_net.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %devname.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %optlen)
  %cmp.i = icmp slt i32 %optlen, 0
  br i1 %cmp.i, label %if.then.sock_setbindtodevice.exit_crit_edge, label %if.end.i

if.then.sock_setbindtodevice.exit_crit_edge:      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_setbindtodevice.exit

if.end.i:                                         ; preds = %if.then
  %14 = tail call i32 @llvm.smin.i32(i32 %optlen, i32 15) #17
  %15 = call ptr @memset(ptr %devname.i, i32 0, i32 16)
  %call5.i = call fastcc i32 @copy_from_sockptr(ptr noundef nonnull %devname.i, [2 x i32] %optval.coerce, i32 noundef %14) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool.not.i, label %if.end7.i, label %if.end.i.sock_setbindtodevice.exit_crit_edge

if.end.i.sock_setbindtodevice.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_setbindtodevice.exit

if.end7.i:                                        ; preds = %if.end.i
  %16 = ptrtoint ptr %devname.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %devname.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %cmp8.not.i = icmp eq i8 %17, 0
  br i1 %cmp8.not.i, label %if.end7.i.if.end19.i_crit_edge, label %if.then10.i

if.end7.i.if.end19.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19.i

if.then10.i:                                      ; preds = %if.end7.i
  %18 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %21, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i.i = call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i.i, label %if.then10.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.then10.i.rcu_read_lock.exit.i_crit_edge:       ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.then10.i
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.then10.i.rcu_read_lock.exit.i_crit_edge
  %call12.i = call ptr @dev_get_by_name_rcu(ptr noundef %13, ptr noundef nonnull %devname.i) #17
  %tobool13.not.i = icmp eq ptr %call12.i, null
  br i1 %tobool13.not.i, label %rcu_read_lock.exit.i.if.end15.i_crit_edge, label %if.then14.i

rcu_read_lock.exit.i.if.end15.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.i

if.then14.i:                                      ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %ifindex.i = getelementptr inbounds %struct.net_device, ptr %call12.i, i32 0, i32 17
  %22 = ptrtoint ptr %ifindex.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ifindex.i, align 4
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then14.i, %rcu_read_lock.exit.i.if.end15.i_crit_edge
  %index.0.i = phi i32 [ %23, %if.then14.i ], [ 0, %rcu_read_lock.exit.i.if.end15.i_crit_edge ]
  %call.i30.i = call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i30.i, label %if.end15.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i33.i

if.end15.i.rcu_read_unlock.exit.i_crit_edge:      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit.i

land.lhs.true.i33.i:                              ; preds = %if.end15.i
  %call1.i31.i = call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i31.i)
  %tobool.not.i32.i = icmp eq i32 %call1.i31.i, 0
  br i1 %tobool.not.i32.i, label %land.lhs.true.i33.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i35.i

land.lhs.true.i33.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i33.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i35.i:                             ; preds = %land.lhs.true.i33.i
  %.b4.i34.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i34.i, label %land.lhs.true2.i35.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i36.i

land.lhs.true2.i35.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i35.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit.i

if.then.i36.i:                                    ; preds = %land.lhs.true2.i35.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i36.i, %land.lhs.true2.i35.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i33.i.rcu_read_unlock.exit.i_crit_edge, %if.end15.i.rcu_read_unlock.exit.i_crit_edge
  call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %24 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i37.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i37.i to ptr
  %preempt_count.i.i.i.i38.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i38.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i38.i, align 4
  %sub.i.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i38.i, align 4
  call void @rcu_read_unlock_strict() #17
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  br i1 %tobool13.not.i, label %rcu_read_unlock.exit.i.sock_setbindtodevice.exit_crit_edge, label %rcu_read_unlock.exit.i.if.end19.i_crit_edge

rcu_read_unlock.exit.i.if.end19.i_crit_edge:      ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19.i

rcu_read_unlock.exit.i.sock_setbindtodevice.exit_crit_edge: ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_setbindtodevice.exit

if.end19.i:                                       ; preds = %rcu_read_unlock.exit.i.if.end19.i_crit_edge, %if.end7.i.if.end19.i_crit_edge
  %index.1.i = phi i32 [ %index.0.i, %rcu_read_unlock.exit.i.if.end19.i_crit_edge ], [ 0, %if.end7.i.if.end19.i_crit_edge ]
  %call20.i = call i32 @sock_bindtoindex(ptr noundef %7, i32 noundef %index.1.i, i1 noundef zeroext true) #17
  br label %sock_setbindtodevice.exit

sock_setbindtodevice.exit:                        ; preds = %if.end19.i, %rcu_read_unlock.exit.i.sock_setbindtodevice.exit_crit_edge, %if.end.i.sock_setbindtodevice.exit_crit_edge, %if.then.sock_setbindtodevice.exit_crit_edge
  %retval.0.i = phi i32 [ %call20.i, %if.end19.i ], [ -22, %if.then.sock_setbindtodevice.exit_crit_edge ], [ -14, %if.end.i.sock_setbindtodevice.exit_crit_edge ], [ -19, %rcu_read_unlock.exit.i.sock_setbindtodevice.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %devname.i) #17
  br label %cleanup525

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %optlen)
  %cmp2 = icmp ult i32 %optlen, 4
  br i1 %cmp2, label %if.end.cleanup525_crit_edge, label %if.end4

if.end.cleanup525_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup525

if.end4:                                          ; preds = %if.end
  %src.coerce.fca.0.extract.i.i = extractvalue [2 x i32] %optval.coerce, 0
  %28 = inttoptr i32 %src.coerce.fca.0.extract.i.i to ptr
  %sockptr.coerce.fca.1.extract.i.i.i = extractvalue [2 x i32] %optval.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sockptr.coerce.fca.1.extract.i.i.i)
  %bf.cast.i.i.i = icmp slt i32 %sockptr.coerce.fca.1.extract.i.i.i, 0
  br i1 %bf.cast.i.i.i, label %if.end.i.i, label %if.end8.i.i.i.i

if.end8.i.i.i.i:                                  ; preds = %if.end4
  tail call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 156) #17
  %call.i.i.i.i = tail call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i.i.i, label %if.end8.i.i.i.i.if.then11.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.end8.i.i.i.i.if.then11.i.i.i.i_crit_edge:      ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end8.i.i.i.i
  %29 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %28, i32 4, i32 -1226833920) #20, !srcloc !897
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %29, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.i6.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.end.i.i.i.i, label %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge, !prof !888

land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %land.lhs.true.i.i.i.i
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %val, i32 noundef 4) #17
  %30 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i.i.i.i = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 4
  %32 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i.i) #13, !srcloc !898
  %and.i.i.i.i.i.i782 = and i32 %32, -13
  %or.i.i.i.i.i.i = or i32 %and.i.i.i.i.i.i782, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i.i) #17, !srcloc !899
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %call1.i.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %val, ptr noundef %28, i32 noundef 4) #17
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %32) #17, !srcloc !899
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i.i)
  %tobool4.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i, label %if.end7thread-pre-split, label %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge, !prof !888

if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge:       ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then11.i.i.i.i

if.then11.i.i.i.i:                                ; preds = %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge, %if.end8.i.i.i.i.if.then11.i.i.i.i_crit_edge
  %res.0.i.i.i.i875 = phi i32 [ %call1.i.i.i.i.i, %if.end.i.i.i.i.if.then11.i.i.i.i_crit_edge ], [ 4, %if.end8.i.i.i.i.if.then11.i.i.i.i_crit_edge ], [ 4, %land.lhs.true.i.i.i.i.if.then11.i.i.i.i_crit_edge ]
  %sub.i.i.i.i783 = sub i32 4, %res.0.i.i.i.i875
  %add.ptr.i.i.i.i = getelementptr i8, ptr %val, i32 %sub.i.i.i.i783
  %33 = call ptr @memset(ptr %add.ptr.i.i.i.i, i32 0, i32 %res.0.i.i.i.i875)
  br label %cleanup525

if.end.i.i:                                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #19
  %34 = ptrtoint ptr %28 to i32
  call void @__asan_loadN_noabort(i32 %34, i32 4)
  %35 = load i32, ptr %28, align 1
  %36 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %val, align 4
  br label %if.end7

if.end7thread-pre-split:                          ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %37 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %37)
  %.pr881 = load i32, ptr %val, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.end7thread-pre-split, %if.end.i.i
  %38 = phi i32 [ %.pr881, %if.end7thread-pre-split ], [ %35, %if.end.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool8 = icmp ne i32 %38, 0
  %cond = zext i1 %tobool8 to i32
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 4, i32 3
  %39 = call ptr @llvm.returnaddress(i32 0) #17
  %40 = ptrtoint ptr %39 to i32
  call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %40) #17
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 4, i32 1
  %41 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.i.not.i.i = icmp eq i32 %42, 0
  br i1 %tobool.i.not.i.i, label %if.end7.lock_sock.exit_crit_edge, label %if.then.i.i784

if.end7.lock_sock.exit_crit_edge:                 ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i784:                                   ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  call void @__lock_sock(ptr noundef %7) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i784, %if.end7.lock_sock.exit_crit_edge
  %43 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 1, ptr %owned.i.i.i, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %44 = zext i32 %optname to i64
  call void @__sanitizer_cov_trace_switch(i64 %44, ptr @__sancov_gen_cov_switch_values.499)
  switch i32 %optname, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb13
    i32 15, label %sw.bb16
    i32 3, label %lock_sock.exit.sw.bb24_crit_edge
    i32 38, label %lock_sock.exit.sw.bb24_crit_edge883
    i32 39, label %lock_sock.exit.sw.bb24_crit_edge884
    i32 4, label %lock_sock.exit.sw.bb24_crit_edge885
    i32 5, label %sw.bb25
    i32 6, label %sw.bb26
    i32 7, label %sw.bb27
    i32 32, label %sw.bb59
    i32 8, label %sw.bb67
    i32 33, label %sw.bb75
    i32 9, label %sw.bb86
    i32 10, label %sw.bb94
    i32 11, label %sw.bb95
    i32 12, label %sw.bb102
    i32 13, label %sw.bb119
    i32 14, label %lock_sock.exit.sw.epilog_crit_edge
    i32 16, label %sw.bb140
    i32 29, label %lock_sock.exit.sw.bb146_crit_edge
    i32 63, label %lock_sock.exit.sw.bb146_crit_edge886
    i32 35, label %lock_sock.exit.sw.bb146_crit_edge887
    i32 64, label %lock_sock.exit.sw.bb146_crit_edge888
    i32 65, label %lock_sock.exit.sw.bb148_crit_edge
    i32 37, label %lock_sock.exit.sw.bb148_crit_edge889
    i32 18, label %sw.bb160
    i32 20, label %lock_sock.exit.sw.bb186_crit_edge
    i32 66, label %lock_sock.exit.sw.bb186_crit_edge890
    i32 21, label %lock_sock.exit.sw.bb190_crit_edge
    i32 67, label %lock_sock.exit.sw.bb190_crit_edge891
    i32 26, label %sw.bb194
    i32 50, label %sw.bb200
    i32 51, label %sw.bb210
    i32 52, label %sw.bb218
    i32 68, label %sw.bb232
    i32 27, label %sw.bb234
    i32 44, label %sw.bb236
    i32 34, label %sw.bb244
    i32 36, label %sw.bb251
    i32 40, label %sw.bb261
    i32 41, label %sw.bb262
    i32 42, label %sw.bb263
    i32 43, label %sw.bb272
    i32 45, label %sw.bb273
    i32 46, label %sw.bb274
    i32 69, label %sw.bb297
    i32 70, label %sw.bb314
    i32 47, label %sw.bb346
    i32 49, label %do.body390
    i32 53, label %sw.bb396
    i32 60, label %sw.bb401
    i32 61, label %sw.bb445
    i32 62, label %sw.bb493
    i32 72, label %sw.bb495
    i32 73, label %sw.bb512
  ]

lock_sock.exit.sw.bb190_crit_edge891:             ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb190

lock_sock.exit.sw.bb190_crit_edge:                ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb190

lock_sock.exit.sw.bb186_crit_edge890:             ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb186

lock_sock.exit.sw.bb186_crit_edge:                ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb186

lock_sock.exit.sw.bb148_crit_edge889:             ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb148

lock_sock.exit.sw.bb148_crit_edge:                ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb148

lock_sock.exit.sw.bb146_crit_edge888:             ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb146

lock_sock.exit.sw.bb146_crit_edge887:             ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb146

lock_sock.exit.sw.bb146_crit_edge886:             ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb146

lock_sock.exit.sw.bb146_crit_edge:                ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb146

lock_sock.exit.sw.epilog_crit_edge:               ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

lock_sock.exit.sw.bb24_crit_edge885:              ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb24

lock_sock.exit.sw.bb24_crit_edge884:              ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb24

lock_sock.exit.sw.bb24_crit_edge883:              ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb24

lock_sock.exit.sw.bb24_crit_edge:                 ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb24

sw.bb:                                            ; preds = %lock_sock.exit
  %45 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool9.not = icmp eq i32 %46, 0
  br i1 %tobool9.not, label %sw.bb.if.else_crit_edge, label %land.lhs.true

sw.bb.if.else_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true:                                    ; preds = %sw.bb
  %call10 = call zeroext i1 @capable(i32 noundef 12) #17
  br i1 %call10, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true.sw.epilog_crit_edge

land.lhs.true.sw.epilog_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %sw.bb.if.else_crit_edge
  %47 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %47, align 4
  br i1 %tobool8, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i = or i32 %49, 1024
  %50 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %or.i.i.i, ptr %47, align 4
  br label %sw.epilog

if.else.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i = and i32 %49, -1025
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %and.i.i.i, ptr %47, align 4
  br label %sw.epilog

sw.bb13:                                          ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %skc_reuse = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 5
  %52 = ptrtoint ptr %skc_reuse to i32
  call void @__asan_load1_noabort(i32 %52)
  %bf.load = load i8, ptr %skc_reuse, align 1
  %bf.shl = select i1 %tobool8, i8 16, i8 0
  %bf.clear = and i8 %bf.load, 15
  %bf.set = or i8 %bf.clear, %bf.shl
  store i8 %bf.set, ptr %skc_reuse, align 1
  br label %sw.epilog

sw.bb16:                                          ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %skc_reuseport = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 5
  %53 = ptrtoint ptr %skc_reuseport to i32
  call void @__asan_load1_noabort(i32 %53)
  %bf.load19 = load i8, ptr %skc_reuseport, align 1
  %bf.shl21 = select i1 %tobool8, i8 8, i8 0
  %bf.clear22 = and i8 %bf.load19, -9
  %bf.set23 = or i8 %bf.clear22, %bf.shl21
  store i8 %bf.set23, ptr %skc_reuseport, align 1
  br label %sw.epilog

sw.bb24:                                          ; preds = %lock_sock.exit.sw.bb24_crit_edge, %lock_sock.exit.sw.bb24_crit_edge883, %lock_sock.exit.sw.bb24_crit_edge884, %lock_sock.exit.sw.bb24_crit_edge885
  br label %sw.epilog

sw.bb25:                                          ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %54 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %and.i.i.i790 = and i32 %56, -8193
  %masksel = select i1 %tobool8, i32 8192, i32 0
  %storemerge = or i32 %and.i.i.i790, %masksel
  store i32 %storemerge, ptr %54, align 4
  call fastcc void @sk_dst_reset(ptr noundef %7)
  br label %sw.epilog

sw.bb26:                                          ; preds = %lock_sock.exit
  %57 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %57, align 4
  br i1 %tobool8, label %if.then.i796, label %if.else.i798

if.then.i796:                                     ; preds = %sw.bb26
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i795 = or i32 %59, 64
  %60 = ptrtoint ptr %57 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %or.i.i.i795, ptr %57, align 4
  br label %sw.epilog

if.else.i798:                                     ; preds = %sw.bb26
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i797 = and i32 %59, -65
  %61 = ptrtoint ptr %57 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %and.i.i.i797, ptr %57, align 4
  br label %sw.epilog

sw.bb27:                                          ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %62 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %val, align 4
  %64 = load i32, ptr @sysctl_wmem_max, align 4
  %65 = call i32 @llvm.umin.i32(i32 %63, i32 %64)
  %66 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %65, ptr %val, align 4
  br label %set_sndbuf

set_sndbuf:                                       ; preds = %if.then65, %if.end62.set_sndbuf_crit_edge, %sw.bb27
  %67 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %val, align 4
  %69 = call i32 @llvm.smin.i32(i32 %68, i32 1073741823)
  %70 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %69, ptr %val, align 4
  %sk_userlocks = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 43
  %71 = ptrtoint ptr %sk_userlocks to i32
  call void @__asan_load1_noabort(i32 %71)
  %bf.load38 = load i8, ptr %sk_userlocks, align 8
  %bf.set45 = or i8 %bf.load38, 1
  store i8 %bf.set45, ptr %sk_userlocks, align 8
  %mul = shl i32 %69, 1
  %72 = call i32 @llvm.smax.i32(i32 %mul, i32 4608)
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 21
  %73 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_store4_noabort(i32 %73)
  store volatile i32 %72, ptr %sk_sndbuf, align 4
  %sk_write_space = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 78
  %74 = ptrtoint ptr %sk_write_space to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %sk_write_space, align 4
  call void %75(ptr noundef %7) #17
  br label %sw.epilog

sw.bb59:                                          ; preds = %lock_sock.exit
  %call60 = call zeroext i1 @capable(i32 noundef 12) #17
  br i1 %call60, label %if.end62, label %sw.bb59.sw.epilog_crit_edge

sw.bb59.sw.epilog_crit_edge:                      ; preds = %sw.bb59
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end62:                                         ; preds = %sw.bb59
  %76 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %cmp63 = icmp slt i32 %77, 0
  br i1 %cmp63, label %if.then65, label %if.end62.set_sndbuf_crit_edge

if.end62.set_sndbuf_crit_edge:                    ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #19
  br label %set_sndbuf

if.then65:                                        ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #19
  %78 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 0, ptr %val, align 4
  br label %set_sndbuf

sw.bb67:                                          ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %79 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %val, align 4
  %81 = load i32, ptr @sysctl_rmem_max, align 4
  %82 = call i32 @llvm.umin.i32(i32 %80, i32 %81)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741823, i32 %82)
  %cmp.i801 = icmp slt i32 %82, 1073741823
  %phi.bo.i = shl i32 %82, 1
  %sk_userlocks.i = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 43
  %83 = ptrtoint ptr %sk_userlocks.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %bf.load.i = load i8, ptr %sk_userlocks.i, align 8
  %bf.set.i = or i8 %bf.load.i, 2
  store i8 %bf.set.i, ptr %sk_userlocks.i, align 8
  %84 = call i32 @llvm.smax.i32(i32 %phi.bo.i, i32 2304) #17
  %85 = select i1 %cmp.i801, i32 %84, i32 2147483646
  %sk_rcvbuf.i = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 15
  %86 = ptrtoint ptr %sk_rcvbuf.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store volatile i32 %85, ptr %sk_rcvbuf.i, align 8
  br label %sw.epilog

sw.bb75:                                          ; preds = %lock_sock.exit
  %call76 = call zeroext i1 @capable(i32 noundef 12) #17
  br i1 %call76, label %if.end78, label %sw.bb75.sw.epilog_crit_edge

sw.bb75.sw.epilog_crit_edge:                      ; preds = %sw.bb75
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end78:                                         ; preds = %sw.bb75
  call void @__sanitizer_cov_trace_pc() #19
  %87 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %val, align 4
  %89 = call i32 @llvm.smax.i32(i32 %88, i32 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741823, i32 %89)
  %cmp.i802 = icmp ult i32 %89, 1073741823
  %phi.bo.i803 = shl nuw i32 %89, 1
  %sk_userlocks.i804 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 43
  %90 = ptrtoint ptr %sk_userlocks.i804 to i32
  call void @__asan_load1_noabort(i32 %90)
  %bf.load.i805 = load i8, ptr %sk_userlocks.i804, align 8
  %bf.set.i806 = or i8 %bf.load.i805, 2
  store i8 %bf.set.i806, ptr %sk_userlocks.i804, align 8
  %91 = call i32 @llvm.smax.i32(i32 %phi.bo.i803, i32 2304) #17
  %92 = select i1 %cmp.i802, i32 %91, i32 2147483646
  %sk_rcvbuf.i807 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 15
  %93 = ptrtoint ptr %sk_rcvbuf.i807 to i32
  call void @__asan_store4_noabort(i32 %93)
  store volatile i32 %92, ptr %sk_rcvbuf.i807, align 8
  br label %sw.epilog

sw.bb86:                                          ; preds = %lock_sock.exit
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 8
  %94 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %skc_prot, align 8
  %keepalive = getelementptr inbounds %struct.proto, ptr %95, i32 0, i32 11
  %96 = ptrtoint ptr %keepalive to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %keepalive, align 4
  %tobool88.not = icmp eq ptr %97, null
  br i1 %tobool88.not, label %sw.bb86.if.end93_crit_edge, label %if.then89

sw.bb86.if.end93_crit_edge:                       ; preds = %sw.bb86
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end93

if.then89:                                        ; preds = %sw.bb86
  call void @__sanitizer_cov_trace_pc() #19
  call void %97(ptr noundef %7, i32 noundef %cond) #17
  br label %if.end93

if.end93:                                         ; preds = %if.then89, %sw.bb86.if.end93_crit_edge
  %98 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %98, align 4
  br i1 %tobool8, label %if.then.i810, label %if.else.i812

if.then.i810:                                     ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i809 = or i32 %100, 8
  %101 = ptrtoint ptr %98 to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %or.i.i.i809, ptr %98, align 4
  br label %sw.epilog

if.else.i812:                                     ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i811 = and i32 %100, -9
  %102 = ptrtoint ptr %98 to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %and.i.i.i811, ptr %98, align 4
  br label %sw.epilog

sw.bb94:                                          ; preds = %lock_sock.exit
  %103 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %104 = ptrtoint ptr %103 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %103, align 4
  br i1 %tobool8, label %if.then.i817, label %if.else.i819

if.then.i817:                                     ; preds = %sw.bb94
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i816 = or i32 %105, 4
  %106 = ptrtoint ptr %103 to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %or.i.i.i816, ptr %103, align 4
  br label %sw.epilog

if.else.i819:                                     ; preds = %sw.bb94
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i818 = and i32 %105, -5
  %107 = ptrtoint ptr %103 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %and.i.i.i818, ptr %103, align 4
  br label %sw.epilog

sw.bb95:                                          ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sk_no_check_tx = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 43
  %108 = ptrtoint ptr %sk_no_check_tx to i32
  call void @__asan_load1_noabort(i32 %108)
  %bf.load97 = load i8, ptr %sk_no_check_tx, align 8
  %bf.shl99 = select i1 %tobool8, i8 32, i8 0
  %bf.clear100 = and i8 %bf.load97, -33
  %bf.set101 = or i8 %bf.clear100, %bf.shl99
  store i8 %bf.set101, ptr %sk_no_check_tx, align 8
  br label %sw.epilog

sw.bb102:                                         ; preds = %lock_sock.exit
  %109 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %110)
  %111 = icmp ult i32 %110, 7
  br i1 %111, label %sw.bb102.if.then116_crit_edge, label %lor.lhs.false

sw.bb102.if.then116_crit_edge:                    ; preds = %sw.bb102
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then116

lor.lhs.false:                                    ; preds = %sw.bb102
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 9
  %112 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %skc_net.i, align 4
  %user_ns = getelementptr inbounds %struct.net, ptr %113, i32 0, i32 11
  %114 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %user_ns, align 4
  %call109 = call zeroext i1 @ns_capable(ptr noundef %115, i32 noundef 13) #17
  br i1 %call109, label %lor.lhs.false.if.then116_crit_edge, label %lor.lhs.false111

lor.lhs.false.if.then116_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then116

lor.lhs.false111:                                 ; preds = %lor.lhs.false
  %116 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %skc_net.i, align 4
  %user_ns113 = getelementptr inbounds %struct.net, ptr %117, i32 0, i32 11
  %118 = ptrtoint ptr %user_ns113 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %user_ns113, align 4
  %call114 = call zeroext i1 @ns_capable(ptr noundef %119, i32 noundef 12) #17
  br i1 %call114, label %lor.lhs.false111.if.then116_crit_edge, label %lor.lhs.false111.sw.epilog_crit_edge

lor.lhs.false111.sw.epilog_crit_edge:             ; preds = %lor.lhs.false111
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

lor.lhs.false111.if.then116_crit_edge:            ; preds = %lor.lhs.false111
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then116

if.then116:                                       ; preds = %lor.lhs.false111.if.then116_crit_edge, %lor.lhs.false.if.then116_crit_edge, %sw.bb102.if.then116_crit_edge
  %120 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %val, align 4
  %sk_priority = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 33
  %122 = ptrtoint ptr %sk_priority to i32
  call void @__asan_store4_noabort(i32 %122)
  store i32 %121, ptr %sk_priority, align 4
  br label %sw.epilog

sw.bb119:                                         ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %optlen)
  %cmp120 = icmp ult i32 %optlen, 8
  br i1 %cmp120, label %sw.bb119.sw.epilog_crit_edge, label %if.end123

sw.bb119.sw.epilog_crit_edge:                     ; preds = %sw.bb119
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end123:                                        ; preds = %sw.bb119
  %call124 = call fastcc i32 @copy_from_sockptr(ptr noundef nonnull %ling, [2 x i32] %optval.coerce, i32 noundef 8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call124)
  %tobool125.not = icmp eq i32 %call124, 0
  br i1 %tobool125.not, label %if.end127, label %if.end123.sw.epilog_crit_edge

if.end123.sw.epilog_crit_edge:                    ; preds = %if.end123
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end127:                                        ; preds = %if.end123
  %123 = ptrtoint ptr %ling to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %ling, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %124)
  %tobool128.not = icmp eq i32 %124, 0
  br i1 %tobool128.not, label %if.then129, label %if.else130

if.then129:                                       ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #19
  %125 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %126 = ptrtoint ptr %125 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %125, align 4
  %and.i.i = and i32 %127, -17
  store i32 %and.i.i, ptr %125, align 4
  br label %sw.epilog

if.else130:                                       ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #19
  %128 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 21474835, i32 %129)
  %cmp131 = icmp ugt i32 %129, 21474835
  %mul136 = mul nuw nsw i32 %129, 100
  %spec.select = select i1 %cmp131, i32 2147483647, i32 %mul136
  %130 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 48
  %131 = ptrtoint ptr %130 to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 %spec.select, ptr %130, align 8
  %132 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %132, align 4
  %or.i.i = or i32 %134, 16
  store i32 %or.i.i, ptr %132, align 4
  br label %sw.epilog

sw.bb140:                                         ; preds = %lock_sock.exit
  %flags = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 2
  br i1 %tobool8, label %if.then142, label %if.else143

if.then142:                                       ; preds = %sw.bb140
  call void @__sanitizer_cov_trace_pc() #19
  call void @_set_bit(i32 noundef 3, ptr noundef %flags) #17
  br label %sw.epilog

if.else143:                                       ; preds = %sw.bb140
  call void @__sanitizer_cov_trace_pc() #19
  call void @_clear_bit(i32 noundef 3, ptr noundef %flags) #17
  br label %sw.epilog

sw.bb146:                                         ; preds = %lock_sock.exit.sw.bb146_crit_edge, %lock_sock.exit.sw.bb146_crit_edge886, %lock_sock.exit.sw.bb146_crit_edge887, %lock_sock.exit.sw.bb146_crit_edge888
  call void @sock_set_timestamp(ptr noundef %7, i32 noundef %optname, i1 noundef zeroext %tobool8)
  br label %sw.epilog

sw.bb148:                                         ; preds = %lock_sock.exit.sw.bb148_crit_edge, %lock_sock.exit.sw.bb148_crit_edge889
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %optlen)
  %cmp149 = icmp eq i32 %optlen, 8
  br i1 %cmp149, label %if.then151, label %if.else156

if.then151:                                       ; preds = %sw.bb148
  %call152 = call fastcc i32 @copy_from_sockptr(ptr noundef nonnull %timestamping, [2 x i32] %optval.coerce, i32 noundef 8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call152)
  %tobool153.not = icmp eq i32 %call152, 0
  br i1 %tobool153.not, label %if.then151.if.end158_crit_edge, label %if.then151.sw.epilog_crit_edge

if.then151.sw.epilog_crit_edge:                   ; preds = %if.then151
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then151.if.end158_crit_edge:                   ; preds = %if.then151
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end158

if.else156:                                       ; preds = %sw.bb148
  call void @__sanitizer_cov_trace_pc() #19
  %135 = ptrtoint ptr %timestamping to i32
  call void @__asan_store8_noabort(i32 %135)
  store i64 0, ptr %timestamping, align 8
  %136 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %val, align 4
  store i32 %137, ptr %timestamping, align 8
  br label %if.end158

if.end158:                                        ; preds = %if.else156, %if.then151.if.end158_crit_edge
  %138 = ptrtoint ptr %timestamping to i32
  call void @__asan_load4_noabort(i32 %138)
  %.fca.0.load = load i32, ptr %timestamping, align 8
  %.fca.0.insert = insertvalue [2 x i32] poison, i32 %.fca.0.load, 0
  %139 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %139)
  %.fca.1.load = load i32, ptr %1, align 4
  %.fca.1.insert = insertvalue [2 x i32] %.fca.0.insert, i32 %.fca.1.load, 1
  %call159 = call i32 @sock_set_timestamping(ptr noundef %7, i32 noundef %optname, [2 x i32] %.fca.1.insert)
  br label %sw.epilog

sw.bb160:                                         ; preds = %lock_sock.exit
  %140 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %141)
  %cmp161 = icmp slt i32 %141, 0
  br i1 %cmp161, label %if.then163, label %sw.bb160.if.end164_crit_edge

sw.bb160.if.end164_crit_edge:                     ; preds = %sw.bb160
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end164

if.then163:                                       ; preds = %sw.bb160
  call void @__sanitizer_cov_trace_pc() #19
  %142 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 2147483647, ptr %val, align 4
  br label %if.end164

if.end164:                                        ; preds = %if.then163, %sw.bb160.if.end164_crit_edge
  %ops = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 5
  %143 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %ops, align 4
  %set_rcvlowat = getelementptr inbounds %struct.proto_ops, ptr %144, i32 0, i32 26
  %145 = ptrtoint ptr %set_rcvlowat to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %set_rcvlowat, align 4
  %tobool165.not = icmp eq ptr %146, null
  %147 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %val, align 4
  br i1 %tobool165.not, label %do.body175, label %if.then166

if.then166:                                       ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #19
  %call169 = call i32 %146(ptr noundef %7, i32 noundef %148) #17
  br label %sw.epilog

do.body175:                                       ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %148)
  %tobool176.not = icmp eq i32 %148, 0
  %. = select i1 %tobool176.not, i32 1, i32 %148
  %sk_rcvlowat = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 6
  %149 = ptrtoint ptr %sk_rcvlowat to i32
  call void @__asan_store4_noabort(i32 %149)
  store volatile i32 %., ptr %sk_rcvlowat, align 8
  br label %sw.epilog

sw.bb186:                                         ; preds = %lock_sock.exit.sw.bb186_crit_edge, %lock_sock.exit.sw.bb186_crit_edge890
  %sk_rcvtimeo = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 62
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %optname)
  %cmp187 = icmp eq i32 %optname, 20
  %call189 = call fastcc i32 @sock_set_timeout(ptr noundef %sk_rcvtimeo, [2 x i32] %optval.coerce, i32 noundef %optlen, i1 noundef zeroext %cmp187)
  br label %sw.epilog

sw.bb190:                                         ; preds = %lock_sock.exit.sw.bb190_crit_edge, %lock_sock.exit.sw.bb190_crit_edge891
  %sk_sndtimeo = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %optname)
  %cmp191 = icmp eq i32 %optname, 21
  %call193 = call fastcc i32 @sock_set_timeout(ptr noundef %sk_sndtimeo, [2 x i32] %optval.coerce, i32 noundef %optlen, i1 noundef zeroext %cmp191)
  br label %sw.epilog

sw.bb194:                                         ; preds = %lock_sock.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %fprog) #17
  %150 = ptrtoint ptr %fprog to i32
  call void @__asan_store8_noabort(i32 %150)
  store i64 -1, ptr %fprog, align 8, !annotation !896
  %call195 = call i32 @copy_bpf_fprog_from_user(ptr noundef nonnull %fprog, [2 x i32] %optval.coerce, i32 noundef %optlen) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call195)
  %tobool196.not = icmp eq i32 %call195, 0
  br i1 %tobool196.not, label %if.then197, label %sw.bb194.if.end199_crit_edge

sw.bb194.if.end199_crit_edge:                     ; preds = %sw.bb194
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end199

if.then197:                                       ; preds = %sw.bb194
  call void @__sanitizer_cov_trace_pc() #19
  %call198 = call i32 @sk_attach_filter(ptr noundef nonnull %fprog, ptr noundef %7) #17
  br label %if.end199

if.end199:                                        ; preds = %if.then197, %sw.bb194.if.end199_crit_edge
  %ret.0 = phi i32 [ %call195, %sw.bb194.if.end199_crit_edge ], [ %call198, %if.then197 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %fprog) #17
  br label %sw.epilog

sw.bb200:                                         ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %optlen)
  %cmp201 = icmp eq i32 %optlen, 4
  br i1 %cmp201, label %if.then203, label %sw.bb200.sw.epilog_crit_edge

sw.bb200.sw.epilog_crit_edge:                     ; preds = %sw.bb200
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then203:                                       ; preds = %sw.bb200
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ufd) #17
  %151 = ptrtoint ptr %ufd to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 -1, ptr %ufd, align 4, !annotation !896
  %call204 = call fastcc i32 @copy_from_sockptr(ptr noundef nonnull %ufd, [2 x i32] %optval.coerce, i32 noundef 4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call204)
  %tobool205.not = icmp eq i32 %call204, 0
  br i1 %tobool205.not, label %if.end207, label %if.then203.cleanup_crit_edge

if.then203.cleanup_crit_edge:                     ; preds = %if.then203
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end207:                                        ; preds = %if.then203
  call void @__sanitizer_cov_trace_pc() #19
  %152 = ptrtoint ptr %ufd to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %ufd, align 4
  %call208 = call i32 @sk_attach_bpf(i32 noundef %153, ptr noundef %7) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end207, %if.then203.cleanup_crit_edge
  %ret.1 = phi i32 [ %call208, %if.end207 ], [ -14, %if.then203.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ufd) #17
  br label %sw.epilog

sw.bb210:                                         ; preds = %lock_sock.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %fprog211) #17
  %154 = ptrtoint ptr %fprog211 to i32
  call void @__asan_store8_noabort(i32 %154)
  store i64 -1, ptr %fprog211, align 8, !annotation !896
  %call212 = call i32 @copy_bpf_fprog_from_user(ptr noundef nonnull %fprog211, [2 x i32] %optval.coerce, i32 noundef %optlen) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call212)
  %tobool213.not = icmp eq i32 %call212, 0
  br i1 %tobool213.not, label %if.then214, label %sw.bb210.if.end216_crit_edge

sw.bb210.if.end216_crit_edge:                     ; preds = %sw.bb210
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end216

if.then214:                                       ; preds = %sw.bb210
  call void @__sanitizer_cov_trace_pc() #19
  %call215 = call i32 @sk_reuseport_attach_filter(ptr noundef nonnull %fprog211, ptr noundef %7) #17
  br label %if.end216

if.end216:                                        ; preds = %if.then214, %sw.bb210.if.end216_crit_edge
  %ret.2 = phi i32 [ %call212, %sw.bb210.if.end216_crit_edge ], [ %call215, %if.then214 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %fprog211) #17
  br label %sw.epilog

sw.bb218:                                         ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %optlen)
  %cmp219 = icmp eq i32 %optlen, 4
  br i1 %cmp219, label %if.then221, label %sw.bb218.sw.epilog_crit_edge

sw.bb218.sw.epilog_crit_edge:                     ; preds = %sw.bb218
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then221:                                       ; preds = %sw.bb218
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ufd222) #17
  %155 = ptrtoint ptr %ufd222 to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 -1, ptr %ufd222, align 4, !annotation !896
  %call223 = call fastcc i32 @copy_from_sockptr(ptr noundef nonnull %ufd222, [2 x i32] %optval.coerce, i32 noundef 4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call223)
  %tobool224.not = icmp eq i32 %call223, 0
  br i1 %tobool224.not, label %if.end226, label %if.then221.cleanup228_crit_edge

if.then221.cleanup228_crit_edge:                  ; preds = %if.then221
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup228

if.end226:                                        ; preds = %if.then221
  call void @__sanitizer_cov_trace_pc() #19
  %156 = ptrtoint ptr %ufd222 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %ufd222, align 4
  %call227 = call i32 @sk_reuseport_attach_bpf(i32 noundef %157, ptr noundef %7) #17
  br label %cleanup228

cleanup228:                                       ; preds = %if.end226, %if.then221.cleanup228_crit_edge
  %ret.3 = phi i32 [ %call227, %if.end226 ], [ -14, %if.then221.cleanup228_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ufd222) #17
  br label %sw.epilog

sw.bb232:                                         ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call233 = call i32 @reuseport_detach_prog(ptr noundef %7) #17
  br label %sw.epilog

sw.bb234:                                         ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call235 = call i32 @sk_detach_filter(ptr noundef %7) #17
  br label %sw.epilog

sw.bb236:                                         ; preds = %lock_sock.exit
  %158 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %159 = ptrtoint ptr %158 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load volatile i32, ptr %158, align 4
  %161 = and i32 %160, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %161)
  %tobool.i.not = icmp eq i32 %161, 0
  %brmerge = select i1 %tobool.i.not, i1 true, i1 %tobool8
  br i1 %brmerge, label %if.else242, label %sw.bb236.sw.epilog_crit_edge

sw.bb236.sw.epilog_crit_edge:                     ; preds = %sw.bb236
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.else242:                                       ; preds = %sw.bb236
  br i1 %tobool8, label %if.then.i825, label %if.else.i827

if.then.i825:                                     ; preds = %if.else242
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i824 = or i32 %160, 2097152
  %162 = ptrtoint ptr %158 to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 %or.i.i.i824, ptr %158, align 4
  br label %sw.epilog

if.else.i827:                                     ; preds = %if.else242
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i826 = and i32 %160, -2097153
  %163 = ptrtoint ptr %158 to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 %and.i.i.i826, ptr %158, align 4
  br label %sw.epilog

sw.bb244:                                         ; preds = %lock_sock.exit
  %flags247 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 2
  br i1 %tobool8, label %if.then246, label %if.else248

if.then246:                                       ; preds = %sw.bb244
  call void @__sanitizer_cov_trace_pc() #19
  call void @_set_bit(i32 noundef 4, ptr noundef %flags247) #17
  br label %sw.epilog

if.else248:                                       ; preds = %sw.bb244
  call void @__sanitizer_cov_trace_pc() #19
  call void @_clear_bit(i32 noundef 4, ptr noundef %flags247) #17
  br label %sw.epilog

sw.bb251:                                         ; preds = %lock_sock.exit
  %skc_net.i830 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 9
  %164 = ptrtoint ptr %skc_net.i830 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %skc_net.i830, align 4
  %user_ns253 = getelementptr inbounds %struct.net, ptr %165, i32 0, i32 11
  %166 = ptrtoint ptr %user_ns253 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %user_ns253, align 4
  %call254 = call zeroext i1 @ns_capable(ptr noundef %167, i32 noundef 13) #17
  br i1 %call254, label %sw.bb251.if.end260_crit_edge, label %land.lhs.true255

sw.bb251.if.end260_crit_edge:                     ; preds = %sw.bb251
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end260

land.lhs.true255:                                 ; preds = %sw.bb251
  %168 = ptrtoint ptr %skc_net.i830 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %skc_net.i830, align 4
  %user_ns257 = getelementptr inbounds %struct.net, ptr %169, i32 0, i32 11
  %170 = ptrtoint ptr %user_ns257 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %user_ns257, align 4
  %call258 = call zeroext i1 @ns_capable(ptr noundef %171, i32 noundef 12) #17
  br i1 %call258, label %land.lhs.true255.if.end260_crit_edge, label %land.lhs.true255.sw.epilog_crit_edge

land.lhs.true255.sw.epilog_crit_edge:             ; preds = %land.lhs.true255
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

land.lhs.true255.if.end260_crit_edge:             ; preds = %land.lhs.true255
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end260

if.end260:                                        ; preds = %land.lhs.true255.if.end260_crit_edge, %sw.bb251.if.end260_crit_edge
  %172 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %val, align 4
  call fastcc void @__sock_set_mark(ptr noundef %7, i32 noundef %173)
  br label %sw.epilog

sw.bb261:                                         ; preds = %lock_sock.exit
  %174 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %175 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %174, align 4
  br i1 %tobool8, label %if.then.i834, label %if.else.i836

if.then.i834:                                     ; preds = %sw.bb261
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i833 = or i32 %176, 131072
  %177 = ptrtoint ptr %174 to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 %or.i.i.i833, ptr %174, align 4
  br label %sw.epilog

if.else.i836:                                     ; preds = %sw.bb261
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i835 = and i32 %176, -131073
  %178 = ptrtoint ptr %174 to i32
  call void @__asan_store4_noabort(i32 %178)
  store i32 %and.i.i.i835, ptr %174, align 4
  br label %sw.epilog

sw.bb262:                                         ; preds = %lock_sock.exit
  %179 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %180 = ptrtoint ptr %179 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %179, align 4
  br i1 %tobool8, label %if.then.i841, label %if.else.i843

if.then.i841:                                     ; preds = %sw.bb262
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i840 = or i32 %181, 524288
  %182 = ptrtoint ptr %179 to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 %or.i.i.i840, ptr %179, align 4
  br label %sw.epilog

if.else.i843:                                     ; preds = %sw.bb262
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i842 = and i32 %181, -524289
  %183 = ptrtoint ptr %179 to i32
  call void @__asan_store4_noabort(i32 %183)
  store i32 %and.i.i.i842, ptr %179, align 4
  br label %sw.epilog

sw.bb263:                                         ; preds = %lock_sock.exit
  %ops264 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 5
  %184 = ptrtoint ptr %ops264 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %ops264, align 4
  %set_peek_off = getelementptr inbounds %struct.proto_ops, ptr %185, i32 0, i32 21
  %186 = ptrtoint ptr %set_peek_off to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %set_peek_off, align 4
  %tobool265.not = icmp eq ptr %187, null
  br i1 %tobool265.not, label %sw.bb263.sw.epilog_crit_edge, label %if.then266

sw.bb263.sw.epilog_crit_edge:                     ; preds = %sw.bb263
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then266:                                       ; preds = %sw.bb263
  call void @__sanitizer_cov_trace_pc() #19
  %188 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %val, align 4
  %call269 = call i32 %187(ptr noundef %7, i32 noundef %189) #17
  br label %sw.epilog

sw.bb272:                                         ; preds = %lock_sock.exit
  %190 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %191 = ptrtoint ptr %190 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load i32, ptr %190, align 4
  br i1 %tobool8, label %if.then.i848, label %if.else.i850

if.then.i848:                                     ; preds = %sw.bb272
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i847 = or i32 %192, 1048576
  %193 = ptrtoint ptr %190 to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %or.i.i.i847, ptr %190, align 4
  br label %sw.epilog

if.else.i850:                                     ; preds = %sw.bb272
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i849 = and i32 %192, -1048577
  %194 = ptrtoint ptr %190 to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 %and.i.i.i849, ptr %190, align 4
  br label %sw.epilog

sw.bb273:                                         ; preds = %lock_sock.exit
  %195 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %196 = ptrtoint ptr %195 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load i32, ptr %195, align 4
  br i1 %tobool8, label %if.then.i855, label %if.else.i857

if.then.i855:                                     ; preds = %sw.bb273
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i854 = or i32 %197, 4194304
  %198 = ptrtoint ptr %195 to i32
  call void @__asan_store4_noabort(i32 %198)
  store i32 %or.i.i.i854, ptr %195, align 4
  br label %sw.epilog

if.else.i857:                                     ; preds = %sw.bb273
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i856 = and i32 %197, -4194305
  %199 = ptrtoint ptr %195 to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 %and.i.i.i856, ptr %195, align 4
  br label %sw.epilog

sw.bb274:                                         ; preds = %lock_sock.exit
  %200 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %val, align 4
  %sk_ll_usec = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 13
  %202 = ptrtoint ptr %sk_ll_usec to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %sk_ll_usec, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %201, i32 %203)
  %cmp275 = icmp ugt i32 %201, %203
  br i1 %cmp275, label %land.lhs.true277, label %sw.bb274.if.else280_crit_edge

sw.bb274.if.else280_crit_edge:                    ; preds = %sw.bb274
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else280

land.lhs.true277:                                 ; preds = %sw.bb274
  %call278 = call zeroext i1 @capable(i32 noundef 12) #17
  br i1 %call278, label %if.else280thread-pre-split, label %land.lhs.true277.sw.epilog_crit_edge

land.lhs.true277.sw.epilog_crit_edge:             ; preds = %land.lhs.true277
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.else280thread-pre-split:                       ; preds = %land.lhs.true277
  call void @__sanitizer_cov_trace_pc() #19
  %204 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %204)
  %.pr = load i32, ptr %val, align 4
  br label %if.else280

if.else280:                                       ; preds = %if.else280thread-pre-split, %sw.bb274.if.else280_crit_edge
  %205 = phi i32 [ %.pr, %if.else280thread-pre-split ], [ %201, %sw.bb274.if.else280_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %205)
  %cmp281 = icmp slt i32 %205, 0
  br i1 %cmp281, label %if.else280.sw.epilog_crit_edge, label %do.body289

if.else280.sw.epilog_crit_edge:                   ; preds = %if.else280
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

do.body289:                                       ; preds = %if.else280
  call void @__sanitizer_cov_trace_pc() #19
  %206 = ptrtoint ptr %sk_ll_usec to i32
  call void @__asan_store4_noabort(i32 %206)
  store volatile i32 %205, ptr %sk_ll_usec, align 8
  br label %sw.epilog

sw.bb297:                                         ; preds = %lock_sock.exit
  br i1 %tobool8, label %land.lhs.true299, label %sw.bb297.do.body307_crit_edge

sw.bb297.do.body307_crit_edge:                    ; preds = %sw.bb297
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body307

land.lhs.true299:                                 ; preds = %sw.bb297
  %call300 = call zeroext i1 @capable(i32 noundef 12) #17
  br i1 %call300, label %land.lhs.true299.do.body307_crit_edge, label %land.lhs.true299.sw.epilog_crit_edge

land.lhs.true299.sw.epilog_crit_edge:             ; preds = %land.lhs.true299
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

land.lhs.true299.do.body307_crit_edge:            ; preds = %land.lhs.true299
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body307

do.body307:                                       ; preds = %land.lhs.true299.do.body307_crit_edge, %sw.bb297.do.body307_crit_edge
  %conv308 = zext i1 %tobool8 to i8
  %sk_prefer_busy_poll = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 56
  %207 = ptrtoint ptr %sk_prefer_busy_poll to i32
  call void @__asan_store1_noabort(i32 %207)
  store volatile i8 %conv308, ptr %sk_prefer_busy_poll, align 8
  br label %sw.epilog

sw.bb314:                                         ; preds = %lock_sock.exit
  %208 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %val, align 4
  %sk_busy_poll_budget = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 57
  %210 = ptrtoint ptr %sk_busy_poll_budget to i32
  call void @__asan_load2_noabort(i32 %210)
  %211 = load volatile i16, ptr %sk_busy_poll_budget, align 2
  %conv319 = zext i16 %211 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %209, i32 %conv319)
  %cmp320 = icmp sgt i32 %209, %conv319
  br i1 %cmp320, label %land.lhs.true322, label %sw.bb314.if.else325_crit_edge

sw.bb314.if.else325_crit_edge:                    ; preds = %sw.bb314
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else325

land.lhs.true322:                                 ; preds = %sw.bb314
  %call323 = call zeroext i1 @capable(i32 noundef 12) #17
  br i1 %call323, label %if.else325thread-pre-split, label %land.lhs.true322.sw.epilog_crit_edge

land.lhs.true322.sw.epilog_crit_edge:             ; preds = %land.lhs.true322
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.else325thread-pre-split:                       ; preds = %land.lhs.true322
  call void @__sanitizer_cov_trace_pc() #19
  %212 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %212)
  %.pr882 = load i32, ptr %val, align 4
  br label %if.else325

if.else325:                                       ; preds = %if.else325thread-pre-split, %sw.bb314.if.else325_crit_edge
  %213 = phi i32 [ %.pr882, %if.else325thread-pre-split ], [ %209, %sw.bb314.if.else325_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %213)
  %214 = icmp ugt i32 %213, 65535
  br i1 %214, label %if.else325.sw.epilog_crit_edge, label %do.body337

if.else325.sw.epilog_crit_edge:                   ; preds = %if.else325
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

do.body337:                                       ; preds = %if.else325
  call void @__sanitizer_cov_trace_pc() #19
  %conv338 = trunc i32 %213 to i16
  %215 = ptrtoint ptr %sk_busy_poll_budget to i32
  call void @__asan_store2_noabort(i32 %215)
  store volatile i16 %conv338, ptr %sk_busy_poll_budget, align 2
  br label %sw.epilog

sw.bb346:                                         ; preds = %lock_sock.exit
  %216 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %217)
  %cmp347 = icmp eq i32 %217, -1
  br i1 %cmp347, label %sw.bb346.if.end375_crit_edge, label %if.then355

sw.bb346.if.end375_crit_edge:                     ; preds = %sw.bb346
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end375

if.then355:                                       ; preds = %sw.bb346
  %sk_pacing_status = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 30
  %call.i = call zeroext i1 @__kasan_check_write(ptr noundef %sk_pacing_status, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !921
  call void @llvm.prefetch.p0(ptr %sk_pacing_status, i32 1, i32 3, i32 1) #17
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.then355
  %218 = call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %sk_pacing_status, i32 0, i32 1) #17, !srcloc !922
  %asmresult.i = extractvalue { i32, i32 } %218, 0
  %tobool.not.i860 = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i860, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !923
  br label %if.end375

if.end375:                                        ; preds = %__cmpxchg.exit, %sw.bb346.if.end375_crit_edge
  %sk_max_pacing_rate = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 36
  %219 = ptrtoint ptr %sk_max_pacing_rate to i32
  call void @__asan_store4_noabort(i32 %219)
  store i32 %217, ptr %sk_max_pacing_rate, align 8
  %sk_pacing_rate = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 35
  %220 = ptrtoint ptr %sk_pacing_rate to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load i32, ptr %sk_pacing_rate, align 4
  %222 = call i32 @llvm.umin.i32(i32 %221, i32 %217)
  %223 = ptrtoint ptr %sk_pacing_rate to i32
  call void @__asan_store4_noabort(i32 %223)
  store i32 %222, ptr %sk_pacing_rate, align 4
  br label %sw.epilog

do.body390:                                       ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %224 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %val, align 4
  %226 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 18
  %227 = ptrtoint ptr %226 to i32
  call void @__asan_store4_noabort(i32 %227)
  store volatile i32 %225, ptr %226, align 8
  br label %sw.epilog

sw.bb396:                                         ; preds = %lock_sock.exit
  %228 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %229)
  %cmp397 = icmp eq i32 %229, 1
  br i1 %cmp397, label %if.then399, label %sw.bb396.sw.epilog_crit_edge

sw.bb396.sw.epilog_crit_edge:                     ; preds = %sw.bb396
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then399:                                       ; preds = %sw.bb396
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @dst_negative_advice(ptr noundef %7)
  br label %sw.epilog

sw.bb401:                                         ; preds = %lock_sock.exit
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 3
  %230 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %230)
  %231 = load i16, ptr %skc_family, align 8
  %232 = zext i16 %231 to i64
  call void @__sanitizer_cov_trace_switch(i64 %232, ptr @__sancov_gen_cov_switch_values.500)
  switch i16 %231, label %sw.bb401.sw.epilog_crit_edge [
    i16 2, label %sw.bb401.if.then412_crit_edge
    i16 10, label %sw.bb401.if.then412_crit_edge892
    i16 21, label %sw.bb401.if.then435_crit_edge
  ]

sw.bb401.if.then435_crit_edge:                    ; preds = %sw.bb401
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then435

sw.bb401.if.then412_crit_edge892:                 ; preds = %sw.bb401
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then412

sw.bb401.if.then412_crit_edge:                    ; preds = %sw.bb401
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then412

sw.bb401.sw.epilog_crit_edge:                     ; preds = %sw.bb401
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then412:                                       ; preds = %sw.bb401.if.then412_crit_edge, %sw.bb401.if.then412_crit_edge892
  %sk_type.i = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 45
  %233 = ptrtoint ptr %sk_type.i to i32
  call void @__asan_load2_noabort(i32 %233)
  %234 = load i16, ptr %sk_type.i, align 2
  %235 = zext i16 %234 to i64
  call void @__sanitizer_cov_trace_switch(i64 %235, ptr @__sancov_gen_cov_switch_values.501)
  switch i16 %234, label %if.then412.sw.epilog_crit_edge [
    i16 1, label %sk_is_tcp.exit
    i16 2, label %land.lhs.true419
  ]

if.then412.sw.epilog_crit_edge:                   ; preds = %if.then412
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sk_is_tcp.exit:                                   ; preds = %if.then412
  %sk_protocol.i = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 46
  %236 = ptrtoint ptr %sk_protocol.i to i32
  call void @__asan_load2_noabort(i32 %236)
  %237 = load i16, ptr %sk_protocol.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %237)
  %cmp3.i = icmp eq i16 %237, 6
  br i1 %cmp3.i, label %sk_is_tcp.exit.if.then435_crit_edge, label %sk_is_tcp.exit.sw.epilog_crit_edge

sk_is_tcp.exit.sw.epilog_crit_edge:               ; preds = %sk_is_tcp.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sk_is_tcp.exit.if.then435_crit_edge:              ; preds = %sk_is_tcp.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then435

land.lhs.true419:                                 ; preds = %if.then412
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 46
  %238 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %238)
  %239 = load i16, ptr %sk_protocol, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 17, i16 %239)
  %cmp421 = icmp eq i16 %239, 17
  br i1 %cmp421, label %land.lhs.true419.if.then435_crit_edge, label %land.lhs.true419.sw.epilog_crit_edge

land.lhs.true419.sw.epilog_crit_edge:             ; preds = %land.lhs.true419
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

land.lhs.true419.if.then435_crit_edge:            ; preds = %land.lhs.true419
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then435

if.then435:                                       ; preds = %land.lhs.true419.if.then435_crit_edge, %sk_is_tcp.exit.if.then435_crit_edge, %sw.bb401.if.then435_crit_edge
  %240 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %241)
  %242 = icmp ugt i32 %241, 1
  br i1 %242, label %if.then435.sw.epilog_crit_edge, label %if.else442

if.then435.sw.epilog_crit_edge:                   ; preds = %if.then435
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.else442:                                       ; preds = %if.then435
  %243 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %244 = ptrtoint ptr %243 to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %243, align 4
  br i1 %tobool8, label %if.then.i864, label %if.else.i866

if.then.i864:                                     ; preds = %if.else442
  call void @__sanitizer_cov_trace_pc() #19
  %or.i.i.i863 = or i32 %245, 262144
  %246 = ptrtoint ptr %243 to i32
  call void @__asan_store4_noabort(i32 %246)
  store i32 %or.i.i.i863, ptr %243, align 4
  br label %sw.epilog

if.else.i866:                                     ; preds = %if.else442
  call void @__sanitizer_cov_trace_pc() #19
  %and.i.i.i865 = and i32 %245, -262145
  %247 = ptrtoint ptr %243 to i32
  call void @__asan_store4_noabort(i32 %247)
  store i32 %and.i.i.i865, ptr %243, align 4
  br label %sw.epilog

sw.bb445:                                         ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %optlen)
  %cmp446.not = icmp eq i32 %optlen, 8
  br i1 %cmp446.not, label %if.else449, label %sw.bb445.sw.epilog_crit_edge

sw.bb445.sw.epilog_crit_edge:                     ; preds = %sw.bb445
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.else449:                                       ; preds = %sw.bb445
  %call450 = call fastcc i32 @copy_from_sockptr(ptr noundef nonnull %sk_txtime, [2 x i32] %optval.coerce, i32 noundef 8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call450)
  %tobool451.not = icmp eq i32 %call450, 0
  br i1 %tobool451.not, label %if.else453, label %if.else449.sw.epilog_crit_edge

if.else449.sw.epilog_crit_edge:                   ; preds = %if.else449
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.else453:                                       ; preds = %if.else449
  %248 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %249)
  %tobool455.not = icmp ult i32 %249, 4
  br i1 %tobool455.not, label %if.end459, label %if.else453.sw.epilog_crit_edge

if.else453.sw.epilog_crit_edge:                   ; preds = %if.else453
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end459:                                        ; preds = %if.else453
  %250 = ptrtoint ptr %sk_txtime to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %sk_txtime, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %251)
  %cmp460.not = icmp eq i32 %251, 1
  br i1 %cmp460.not, label %if.end459.if.end467_crit_edge, label %land.lhs.true462

if.end459.if.end467_crit_edge:                    ; preds = %if.end459
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end467

land.lhs.true462:                                 ; preds = %if.end459
  %skc_net.i869 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 9
  %252 = ptrtoint ptr %skc_net.i869 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %skc_net.i869, align 4
  %user_ns464 = getelementptr inbounds %struct.net, ptr %253, i32 0, i32 11
  %254 = ptrtoint ptr %user_ns464 to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %user_ns464, align 4
  %call465 = call zeroext i1 @ns_capable(ptr noundef %255, i32 noundef 12) #17
  br i1 %call465, label %land.lhs.true462.if.end467_crit_edge, label %land.lhs.true462.sw.epilog_crit_edge

land.lhs.true462.sw.epilog_crit_edge:             ; preds = %land.lhs.true462
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

land.lhs.true462.if.end467_crit_edge:             ; preds = %land.lhs.true462
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end467

if.end467:                                        ; preds = %land.lhs.true462.if.end467_crit_edge, %if.end459.if.end467_crit_edge
  %256 = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 13
  %257 = ptrtoint ptr %256 to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load i32, ptr %256, align 4
  %or.i.i.i870 = or i32 %258, 16777216
  store i32 %or.i.i.i870, ptr %256, align 4
  %259 = ptrtoint ptr %sk_txtime to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %sk_txtime, align 4
  %conv469 = trunc i32 %260 to i8
  %sk_clockid = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 69
  %261 = ptrtoint ptr %sk_clockid to i32
  call void @__asan_store1_noabort(i32 %261)
  store i8 %conv469, ptr %sk_clockid, align 4
  %262 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load i32, ptr %4, align 4
  %264 = trunc i32 %263 to i8
  %sk_txtime_deadline_mode = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 70
  %265 = ptrtoint ptr %sk_txtime_deadline_mode to i32
  call void @__asan_load1_noabort(i32 %265)
  %bf.load475 = load i8, ptr %sk_txtime_deadline_mode, align 1
  %bf.shl477 = shl i8 %264, 7
  %bf.clear478 = and i8 %bf.load475, 63
  %bf.set479 = or i8 %bf.clear478, %bf.shl477
  %266 = shl i8 %264, 5
  %bf.shl490 = and i8 %266, 64
  %bf.set492 = or i8 %bf.set479, %bf.shl490
  store i8 %bf.set492, ptr %sk_txtime_deadline_mode, align 1
  br label %sw.epilog

sw.bb493:                                         ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %267 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %val, align 4
  %call494 = call fastcc i32 @sock_bindtoindex_locked(ptr noundef %7, i32 noundef %268)
  br label %sw.epilog

sw.bb495:                                         ; preds = %lock_sock.exit
  %269 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %270)
  %tobool497.not = icmp ult i32 %270, 4
  br i1 %tobool497.not, label %if.end499, label %sw.bb495.sw.epilog_crit_edge

sw.bb495.sw.epilog_crit_edge:                     ; preds = %sw.bb495
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end499:                                        ; preds = %sw.bb495
  call void @__sanitizer_cov_trace_pc() #19
  %sk_userlocks500 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 43
  %271 = ptrtoint ptr %sk_userlocks500 to i32
  call void @__asan_load1_noabort(i32 %271)
  %bf.load501 = load i8, ptr %sk_userlocks500, align 8
  %272 = and i8 %bf.load501, 12
  %273 = trunc i32 %270 to i8
  %bf.value509 = or i8 %272, %273
  %bf.clear510 = and i8 %bf.load501, -16
  %bf.set511 = or i8 %bf.value509, %bf.clear510
  store i8 %bf.set511, ptr %sk_userlocks500, align 8
  br label %sw.epilog

sw.bb512:                                         ; preds = %lock_sock.exit
  %274 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %275)
  %cmp513 = icmp slt i32 %275, 0
  br i1 %cmp513, label %sw.bb512.sw.epilog_crit_edge, label %if.end516

sw.bb512.sw.epilog_crit_edge:                     ; preds = %sw.bb512
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end516:                                        ; preds = %sw.bb512
  %sk_reserved_mem = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 12
  %276 = ptrtoint ptr %sk_reserved_mem to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %sk_reserved_mem, align 4
  %sub = sub i32 %275, %277
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp517 = icmp slt i32 %sub, 0
  br i1 %cmp517, label %if.then519, label %if.else521

if.then519:                                       ; preds = %if.end516
  call void @__sanitizer_cov_trace_pc() #19
  %sub520 = sub i32 0, %sub
  call fastcc void @sock_release_reserved_memory(ptr noundef %7, i32 noundef %sub520)
  br label %sw.epilog

if.else521:                                       ; preds = %if.end516
  call void @__sanitizer_cov_trace_pc() #19
  %call522 = call fastcc i32 @sock_reserve_memory(ptr noundef %7, i32 noundef %sub)
  br label %sw.epilog

sw.default:                                       ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.else521, %if.then519, %sw.bb512.sw.epilog_crit_edge, %if.end499, %sw.bb495.sw.epilog_crit_edge, %sw.bb493, %if.end467, %land.lhs.true462.sw.epilog_crit_edge, %if.else453.sw.epilog_crit_edge, %if.else449.sw.epilog_crit_edge, %sw.bb445.sw.epilog_crit_edge, %if.else.i866, %if.then.i864, %if.then435.sw.epilog_crit_edge, %land.lhs.true419.sw.epilog_crit_edge, %sk_is_tcp.exit.sw.epilog_crit_edge, %if.then412.sw.epilog_crit_edge, %sw.bb401.sw.epilog_crit_edge, %if.then399, %sw.bb396.sw.epilog_crit_edge, %do.body390, %if.end375, %do.body337, %if.else325.sw.epilog_crit_edge, %land.lhs.true322.sw.epilog_crit_edge, %do.body307, %land.lhs.true299.sw.epilog_crit_edge, %do.body289, %if.else280.sw.epilog_crit_edge, %land.lhs.true277.sw.epilog_crit_edge, %if.else.i857, %if.then.i855, %if.else.i850, %if.then.i848, %if.then266, %sw.bb263.sw.epilog_crit_edge, %if.else.i843, %if.then.i841, %if.else.i836, %if.then.i834, %if.end260, %land.lhs.true255.sw.epilog_crit_edge, %if.else248, %if.then246, %if.else.i827, %if.then.i825, %sw.bb236.sw.epilog_crit_edge, %sw.bb234, %sw.bb232, %cleanup228, %sw.bb218.sw.epilog_crit_edge, %if.end216, %cleanup, %sw.bb200.sw.epilog_crit_edge, %if.end199, %sw.bb190, %sw.bb186, %do.body175, %if.then166, %if.end158, %if.then151.sw.epilog_crit_edge, %sw.bb146, %if.else143, %if.then142, %if.else130, %if.then129, %if.end123.sw.epilog_crit_edge, %sw.bb119.sw.epilog_crit_edge, %if.then116, %lor.lhs.false111.sw.epilog_crit_edge, %sw.bb95, %if.else.i819, %if.then.i817, %if.else.i812, %if.then.i810, %if.end78, %sw.bb75.sw.epilog_crit_edge, %sw.bb67, %sw.bb59.sw.epilog_crit_edge, %set_sndbuf, %if.else.i798, %if.then.i796, %sw.bb25, %sw.bb24, %sw.bb16, %sw.bb13, %if.else.i, %if.then.i, %land.lhs.true.sw.epilog_crit_edge, %lock_sock.exit.sw.epilog_crit_edge
  %ret.7 = phi i32 [ -92, %sw.default ], [ 0, %if.end499 ], [ %call494, %sw.bb493 ], [ 0, %if.end467 ], [ 0, %if.then399 ], [ 0, %sw.bb396.sw.epilog_crit_edge ], [ 0, %do.body390 ], [ 0, %if.end375 ], [ 0, %do.body337 ], [ 0, %do.body307 ], [ 0, %do.body289 ], [ %call269, %if.then266 ], [ 0, %if.end260 ], [ 0, %if.then246 ], [ 0, %if.else248 ], [ %call235, %sw.bb234 ], [ %call233, %sw.bb232 ], [ %ret.3, %cleanup228 ], [ -22, %sw.bb218.sw.epilog_crit_edge ], [ %ret.2, %if.end216 ], [ %ret.1, %cleanup ], [ -22, %sw.bb200.sw.epilog_crit_edge ], [ %ret.0, %if.end199 ], [ %call193, %sw.bb190 ], [ %call189, %sw.bb186 ], [ %call169, %if.then166 ], [ 0, %do.body175 ], [ %call159, %if.end158 ], [ 0, %sw.bb146 ], [ 0, %if.then142 ], [ 0, %if.else143 ], [ 0, %lock_sock.exit.sw.epilog_crit_edge ], [ 0, %if.else130 ], [ 0, %if.then129 ], [ 0, %if.then116 ], [ 0, %sw.bb95 ], [ 0, %if.end78 ], [ 0, %sw.bb67 ], [ 0, %set_sndbuf ], [ 0, %sw.bb25 ], [ -92, %sw.bb24 ], [ 0, %sw.bb16 ], [ 0, %sw.bb13 ], [ -13, %land.lhs.true.sw.epilog_crit_edge ], [ -1, %sw.bb59.sw.epilog_crit_edge ], [ -1, %sw.bb75.sw.epilog_crit_edge ], [ -1, %lor.lhs.false111.sw.epilog_crit_edge ], [ -22, %sw.bb119.sw.epilog_crit_edge ], [ -14, %if.end123.sw.epilog_crit_edge ], [ -14, %if.then151.sw.epilog_crit_edge ], [ -1, %sw.bb236.sw.epilog_crit_edge ], [ -1, %land.lhs.true255.sw.epilog_crit_edge ], [ -95, %sw.bb263.sw.epilog_crit_edge ], [ -1, %land.lhs.true277.sw.epilog_crit_edge ], [ -22, %if.else280.sw.epilog_crit_edge ], [ -1, %land.lhs.true299.sw.epilog_crit_edge ], [ -1, %land.lhs.true322.sw.epilog_crit_edge ], [ -22, %if.else325.sw.epilog_crit_edge ], [ -22, %if.then435.sw.epilog_crit_edge ], [ -22, %sw.bb445.sw.epilog_crit_edge ], [ -14, %if.else449.sw.epilog_crit_edge ], [ -22, %if.else453.sw.epilog_crit_edge ], [ -1, %land.lhs.true462.sw.epilog_crit_edge ], [ -22, %sw.bb495.sw.epilog_crit_edge ], [ -22, %sw.bb512.sw.epilog_crit_edge ], [ 0, %if.then519 ], [ %call522, %if.else521 ], [ 0, %if.then.i ], [ 0, %if.else.i ], [ 0, %if.then.i796 ], [ 0, %if.else.i798 ], [ 0, %if.then.i810 ], [ 0, %if.else.i812 ], [ 0, %if.then.i817 ], [ 0, %if.else.i819 ], [ 0, %if.then.i825 ], [ 0, %if.else.i827 ], [ 0, %if.then.i834 ], [ 0, %if.else.i836 ], [ 0, %if.then.i841 ], [ 0, %if.else.i843 ], [ 0, %if.then.i848 ], [ 0, %if.else.i850 ], [ 0, %if.then.i855 ], [ 0, %if.else.i857 ], [ 0, %if.then.i864 ], [ 0, %if.else.i866 ], [ -524, %sk_is_tcp.exit.sw.epilog_crit_edge ], [ -524, %land.lhs.true419.sw.epilog_crit_edge ], [ -524, %sw.bb401.sw.epilog_crit_edge ], [ -524, %if.then412.sw.epilog_crit_edge ]
  call void @release_sock(ptr noundef %7)
  br label %cleanup525

cleanup525:                                       ; preds = %sw.epilog, %if.then11.i.i.i.i, %if.end.cleanup525_crit_edge, %sock_setbindtodevice.exit
  %retval.0 = phi i32 [ %retval.0.i, %sock_setbindtodevice.exit ], [ %ret.7, %sw.epilog ], [ -22, %if.end.cleanup525_crit_edge ], [ -14, %if.then11.i.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ling) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sk_txtime) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %timestamping) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sock_set_timeout(ptr nocapture noundef writeonly %timeo_p, [2 x i32] %optval.coerce, i32 noundef %optlen, i1 noundef zeroext %old_timeval) unnamed_addr #0 align 64 {
entry:
  %tv = alloca %struct.__kernel_sock_timeval, align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tv) #17
  %0 = call ptr @memset(ptr %tv, i32 255, i32 16)
  %call = call i32 @sock_copy_user_timeval(ptr noundef nonnull %tv, [2 x i32] %optval.coerce, i32 noundef %optlen, i1 noundef zeroext %old_timeval)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.__kernel_sock_timeval, ptr %tv, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %1, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 999999, i64 %3)
  %4 = icmp ugt i64 %3, 999999
  br i1 %4, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %5 = ptrtoint ptr %tv to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %tv, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %6)
  %cmp6 = icmp slt i64 %6, 0
  br i1 %cmp6, label %if.then7, label %if.end18

if.then7:                                         ; preds = %if.end5
  %7 = ptrtoint ptr %timeo_p to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %timeo_p, align 4
  %8 = load i32, ptr @sock_set_timeout.warned, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %8)
  %cmp8 = icmp slt i32 %8, 10
  br i1 %cmp8, label %land.lhs.true, label %if.then7.cleanup_crit_edge

if.then7.cleanup_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true:                                    ; preds = %if.then7
  %call9 = call i32 @net_ratelimit() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %land.lhs.true.cleanup_crit_edge, label %if.then11

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then11:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %9 = load i32, ptr @sock_set_timeout.warned, align 4
  %inc = add i32 %9, 1
  store i32 %inc, ptr @sock_set_timeout.warned, align 4
  %10 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %task, align 8
  %comm = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 101
  %pid.i = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 68
  %14 = ptrtoint ptr %pid.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pid.i, align 8
  %call16 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.27, ptr noundef %comm, i32 noundef %15) #21
  br label %cleanup

if.end18:                                         ; preds = %if.end5
  %16 = ptrtoint ptr %timeo_p to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 2147483647, ptr %timeo_p, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %6)
  %cmp20 = icmp eq i64 %6, 0
  br i1 %cmp20, label %land.lhs.true21, label %if.end25

land.lhs.true21:                                  ; preds = %if.end18
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %3)
  %cmp23 = icmp eq i64 %3, 0
  br i1 %cmp23, label %land.lhs.true21.cleanup_crit_edge, label %land.lhs.true21.if.then28_crit_edge

land.lhs.true21.if.then28_crit_edge:              ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then28

land.lhs.true21.cleanup_crit_edge:                ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end25:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_const_cmp8(i64 21474835, i64 %6)
  %cmp27 = icmp ult i64 %6, 21474835
  br i1 %cmp27, label %if.end25.if.then28_crit_edge, label %if.end25.cleanup_crit_edge

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end25.if.then28_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then28

if.then28:                                        ; preds = %if.end25.if.then28_crit_edge, %land.lhs.true21.if.then28_crit_edge
  %conv = trunc i64 %3 to i32
  %sub = add nuw nsw i32 %conv, 9999
  %div = udiv i32 %sub, 10000
  %17 = trunc i64 %6 to i32
  %18 = mul nuw nsw i32 %17, 100
  %conv33 = add nuw nsw i32 %18, %div
  %19 = ptrtoint ptr %timeo_p to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %conv33, ptr %timeo_p, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then28, %if.end25.cleanup_crit_edge, %land.lhs.true21.cleanup_crit_edge, %if.then11, %land.lhs.true.cleanup_crit_edge, %if.then7.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ -33, %if.end.cleanup_crit_edge ], [ 0, %if.then11 ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.then7.cleanup_crit_edge ], [ 0, %land.lhs.true21.cleanup_crit_edge ], [ 0, %if.then28 ], [ 0, %if.end25.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tv) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @copy_bpf_fprog_from_user(ptr noundef, [2 x i32], i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_attach_filter(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_attach_bpf(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_reuseport_attach_filter(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_reuseport_attach_bpf(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @reuseport_detach_prog(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_detach_filter(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @dst_negative_advice(ptr noundef %sk) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %sk_txhash.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 42
  %0 = ptrtoint ptr %sk_txhash.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_txhash.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %entry.sk_rethink_txhash.exit_crit_edge, label %if.then.i

entry.sk_rethink_txhash.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_rethink_txhash.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i = tail call i32 @prandom_u32() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  %..i.i.i = select i1 %tobool.not.i.i.i, i32 1, i32 %call.i.i.i
  %2 = ptrtoint ptr %sk_txhash.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 %..i.i.i, ptr %sk_txhash.i, align 4
  br label %sk_rethink_txhash.exit

sk_rethink_txhash.exit:                           ; preds = %if.then.i, %entry.sk_rethink_txhash.exit_crit_edge
  %sk_dst_cache.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %3 = ptrtoint ptr %sk_dst_cache.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %sk_dst_cache.i.i, align 4
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i2 = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i2, label %lockdep_sock_is_held.exit.i.i, label %sk_rethink_txhash.exit.__sk_dst_get.exit.i_crit_edge

sk_rethink_txhash.exit.__sk_dst_get.exit.i_crit_edge: ; preds = %sk_rethink_txhash.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit.i

lockdep_sock_is_held.exit.i.i:                    ; preds = %sk_rethink_txhash.exit
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %lor.lhs.false.i.i, label %lockdep_sock_is_held.exit.i.i.__sk_dst_get.exit.i_crit_edge

lockdep_sock_is_held.exit.i.i.__sk_dst_get.exit.i_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit.i

lor.lhs.false.i.i:                                ; preds = %lockdep_sock_is_held.exit.i.i
  %call2.i.i = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.__sk_dst_get.exit.i_crit_edge

lor.lhs.false.i.i.__sk_dst_get.exit.i_crit_edge:  ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit.i

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call3.i.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i.__sk_dst_get.exit.i_crit_edge, label %land.lhs.true5.i.i

land.lhs.true.i.i.__sk_dst_get.exit.i_crit_edge:  ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit.i

land.lhs.true5.i.i:                               ; preds = %land.lhs.true.i.i
  %.b11.i.i = load i1, ptr @__sk_dst_get.__warned, align 1
  br i1 %.b11.i.i, label %land.lhs.true5.i.i.__sk_dst_get.exit.i_crit_edge, label %if.then.i.i

land.lhs.true5.i.i.__sk_dst_get.exit.i_crit_edge: ; preds = %land.lhs.true5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sk_dst_get.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__sk_dst_get.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.23, i32 noundef 2068, ptr noundef nonnull @.str.2) #17
  br label %__sk_dst_get.exit.i

__sk_dst_get.exit.i:                              ; preds = %if.then.i.i, %land.lhs.true5.i.i.__sk_dst_get.exit.i_crit_edge, %land.lhs.true.i.i.__sk_dst_get.exit.i_crit_edge, %lor.lhs.false.i.i.__sk_dst_get.exit.i_crit_edge, %lockdep_sock_is_held.exit.i.i.__sk_dst_get.exit.i_crit_edge, %sk_rethink_txhash.exit.__sk_dst_get.exit.i_crit_edge
  %tobool.not.i3 = icmp eq ptr %4, null
  br i1 %tobool.not.i3, label %__sk_dst_get.exit.i.__dst_negative_advice.exit_crit_edge, label %land.lhs.true.i

__sk_dst_get.exit.i.__dst_negative_advice.exit_crit_edge: ; preds = %__sk_dst_get.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__dst_negative_advice.exit

land.lhs.true.i:                                  ; preds = %__sk_dst_get.exit.i
  %ops.i = getelementptr inbounds %struct.dst_entry, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops.i, align 4
  %negative_advice.i = getelementptr inbounds %struct.dst_ops, ptr %6, i32 0, i32 9
  %7 = ptrtoint ptr %negative_advice.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %negative_advice.i, align 4
  %tobool1.not.i = icmp eq ptr %8, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.__dst_negative_advice.exit_crit_edge, label %if.then.i4

land.lhs.true.i.__dst_negative_advice.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__dst_negative_advice.exit

if.then.i4:                                       ; preds = %land.lhs.true.i
  %call4.i = tail call ptr %8(ptr noundef nonnull %4) #17
  %cmp.not.i = icmp eq ptr %call4.i, %4
  br i1 %cmp.not.i, label %if.then.i4.__dst_negative_advice.exit_crit_edge, label %do.body.i

if.then.i4.__dst_negative_advice.exit_crit_edge:  ; preds = %if.then.i4
  call void @__sanitizer_cov_trace_pc() #19
  br label %__dst_negative_advice.exit

do.body.i:                                        ; preds = %if.then.i4
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !924
  %9 = ptrtoint ptr %sk_dst_cache.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %call4.i, ptr %sk_dst_cache.i.i, align 4
  %skc_tx_queue_mapping.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %10 = ptrtoint ptr %skc_tx_queue_mapping.i.i to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 -1, ptr %skc_tx_queue_mapping.i.i, align 4
  %sk_dst_pending_confirm.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %11 = ptrtoint ptr %sk_dst_pending_confirm.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %sk_dst_pending_confirm.i, align 8
  br label %__dst_negative_advice.exit

__dst_negative_advice.exit:                       ; preds = %do.body.i, %if.then.i4.__dst_negative_advice.exit_crit_edge, %land.lhs.true.i.__dst_negative_advice.exit_crit_edge, %__sk_dst_get.exit.i.__dst_negative_advice.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sock_release_reserved_memory(ptr noundef %sk, i32 noundef %bytes) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %bytes, -4096
  %sk_reserved_mem = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %0 = ptrtoint ptr %sk_reserved_mem to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_reserved_mem, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %1)
  %cmp = icmp ugt i32 %and, %1
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge, !prof !889

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 970, i32 noundef 9, ptr noundef null) #17
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %2 = ptrtoint ptr %sk_reserved_mem to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sk_reserved_mem, align 4
  %sub = sub i32 %3, %and
  store i32 %sub, ptr %sk_reserved_mem, align 4
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %4 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i = getelementptr inbounds %struct.proto, ptr %5, i32 0, i32 32
  %6 = ptrtoint ptr %memory_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %memory_allocated.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %7, null
  br i1 %tobool.i.not.i, label %if.end.sk_mem_reclaim.exit_crit_edge, label %if.end.i

if.end.sk_mem_reclaim.exit_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_reclaim.exit

if.end.i:                                         ; preds = %if.end
  %sk_forward_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %8 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sk_forward_alloc.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %and)
  %tobool.not.i.i = icmp eq i32 %3, %and
  br i1 %tobool.not.i.i, label %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge, label %if.end.i.i, !prof !888

if.end.i.sk_unused_reserved_mem.exit.i_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i

if.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %10 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %sk_backlog.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i, i32 noundef 4) #17
  %12 = ptrtoint ptr %sk_backlog.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %sk_backlog.i.i, align 4
  %14 = add i32 %11, %13
  %sub5.i.i = sub i32 %sub, %14
  %15 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i

sk_unused_reserved_mem.exit.i:                    ; preds = %if.end.i.i, %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %15, %if.end.i.i ], [ 0, %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge ]
  %sub.i = sub i32 %9, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %sub.i)
  %cmp.i = icmp sgt i32 %sub.i, 4095
  br i1 %cmp.i, label %if.then2.i, label %sk_unused_reserved_mem.exit.i.sk_mem_reclaim.exit_crit_edge

sk_unused_reserved_mem.exit.i.sk_mem_reclaim.exit_crit_edge: ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_reclaim.exit

if.then2.i:                                       ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %shr.i8.i = lshr i32 %sub.i, 12
  %shl.i.i = and i32 %sub.i, -4096
  %16 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sk_forward_alloc.i, align 8
  %sub.i.i = sub i32 %17, %shl.i.i
  store i32 %sub.i.i, ptr %sk_forward_alloc.i, align 8
  tail call void @__sk_mem_reduce_allocated(ptr noundef %sk, i32 noundef %shr.i8.i) #17
  br label %sk_mem_reclaim.exit

sk_mem_reclaim.exit:                              ; preds = %if.then2.i, %sk_unused_reserved_mem.exit.i.sk_mem_reclaim.exit_crit_edge, %if.end.sk_mem_reclaim.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sock_reserve_memory(ptr nocapture noundef %sk, i32 noundef %bytes) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memcg_sockets_enabled_key, ptr blockaddress(@sock_reserve_memory, %lor.lhs.false)) #17
          to label %cleanup [label %lor.lhs.false], !srcloc !891

lor.lhs.false:                                    ; preds = %entry
  %sk_memcg = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %0 = ptrtoint ptr %sk_memcg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_memcg, align 8
  %tobool3.not = icmp eq ptr %1, null
  br i1 %tobool3.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false4

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %skc_prot.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %2 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skc_prot.i, align 8
  %memory_allocated.i = getelementptr inbounds %struct.proto, ptr %3, i32 0, i32 32
  %4 = ptrtoint ptr %memory_allocated.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %memory_allocated.i, align 4
  %tobool.i.not = icmp eq ptr %5, null
  br i1 %tobool.i.not, label %lor.lhs.false4.cleanup_crit_edge, label %if.end

lor.lhs.false4.cleanup_crit_edge:                 ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bytes)
  %tobool6.not = icmp eq i32 %bytes, 0
  br i1 %tobool6.not, label %if.end.cleanup_crit_edge, label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %sub.i = add i32 %bytes, 4095
  %shr.i = ashr i32 %sub.i, 12
  %call11 = tail call zeroext i1 @mem_cgroup_charge_skmem(ptr noundef nonnull %1, i32 noundef %shr.i, i32 noundef 19648) #17
  br i1 %call11, label %if.end15, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end15:                                         ; preds = %if.end8
  %6 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %skc_prot.i, align 8
  %memory_allocated.i40 = getelementptr inbounds %struct.proto, ptr %7, i32 0, i32 32
  %8 = ptrtoint ptr %memory_allocated.i40 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %memory_allocated.i40, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %9, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !925
  tail call void @llvm.prefetch.p0(ptr %9, i32 1, i32 3, i32 1) #17
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %9, ptr %9, i32 %shr.i, ptr elementtype(i32) %9) #17, !srcloc !926
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %10, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !927
  %11 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %skc_prot.i, align 8
  %sysctl_mem.i = getelementptr inbounds %struct.proto, ptr %12, i32 0, i32 35
  %13 = ptrtoint ptr %sysctl_mem.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sysctl_mem.i, align 4
  %arrayidx.i = getelementptr i32, ptr %14, i32 1
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult.i.i.i.i.i, i32 %16)
  %cmp = icmp sgt i32 %asmresult.i.i.i.i.i, %16
  br i1 %cmp, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  %memory_allocated.i43 = getelementptr inbounds %struct.proto, ptr %12, i32 0, i32 32
  %17 = ptrtoint ptr %memory_allocated.i43 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %memory_allocated.i43, align 4
  %call.i.i.i44 = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %18, i32 1, i32 3, i32 1) #17
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 %shr.i, ptr elementtype(i32) %18) #17, !srcloc !928
  %20 = ptrtoint ptr %sk_memcg to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sk_memcg, align 8
  tail call void @mem_cgroup_uncharge_skmem(ptr noundef %21, i32 noundef %shr.i) #17
  br label %cleanup

if.end20:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  %shl = and i32 %sub.i, -4096
  %sk_forward_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %22 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sk_forward_alloc, align 8
  %add = add i32 %23, %shl
  store i32 %add, ptr %sk_forward_alloc, align 8
  %sk_reserved_mem = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %24 = ptrtoint ptr %sk_reserved_mem to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sk_reserved_mem, align 4
  %add22 = add i32 %25, %shl
  store i32 %add22, ptr %sk_reserved_mem, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.then18, %if.end8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false4.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry
  %retval.0 = phi i32 [ -12, %if.then18 ], [ 0, %if.end20 ], [ -95, %lor.lhs.false4.cleanup_crit_edge ], [ -95, %lor.lhs.false.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ -12, %if.end8.cleanup_crit_edge ], [ -95, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_getsockopt(ptr noundef %sock, i32 noundef %level, i32 noundef %optname, ptr noundef %optval, ptr noundef %optlen) local_unnamed_addr #0 align 64 {
entry:
  %v = alloca %union.anon.210, align 8
  %peercred = alloca %struct.ucred, align 4
  %address = alloca [128 x i8], align 1
  %meminfo = alloca [9 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %v) #17
  %2 = getelementptr inbounds %struct.__kernel_sock_timeval, ptr %v, i32 0, i32 1
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 1515) #17
  %3 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 4
  %5 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #13, !srcloc !898
  %and.i = and i32 %5, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %6 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %optlen, i32 -1226833921) #17, !srcloc !929
  %asmresult = extractvalue { i32, i32 } %6, 0
  %asmresult2 = extractvalue { i32, i32 } %6, 1
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %5) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool.not = icmp eq i32 %asmresult, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup325_crit_edge

entry.cleanup325_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult2)
  %cmp = icmp slt i32 %asmresult2, 0
  br i1 %cmp, label %if.end.cleanup325_crit_edge, label %if.end5

if.end.cleanup325_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

if.end5:                                          ; preds = %if.end
  %7 = call ptr @memset(ptr %v, i32 0, i32 16)
  %8 = zext i32 %optname to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.502)
  switch i32 %optname, label %if.end5.cleanup325_crit_edge [
    i32 1, label %sw.bb
    i32 5, label %sw.bb7
    i32 6, label %sw.bb10
    i32 7, label %sw.bb13
    i32 8, label %sw.bb14
    i32 2, label %sw.bb15
    i32 15, label %sw.bb17
    i32 9, label %sw.bb22
    i32 3, label %sw.bb25
    i32 38, label %sw.bb27
    i32 39, label %sw.bb29
    i32 4, label %sw.bb32
    i32 10, label %sw.bb54
    i32 11, label %sw.bb57
    i32 12, label %sw.bb62
    i32 13, label %sw.bb63
    i32 14, label %if.end5.if.end59.i.i513_crit_edge
    i32 29, label %sw.bb66
    i32 35, label %sw.bb71
    i32 63, label %sw.bb79
    i32 64, label %sw.bb87
    i32 37, label %sw.bb95
    i32 20, label %if.end5.sw.bb97_crit_edge
    i32 66, label %if.end5.sw.bb97_crit_edge600
    i32 21, label %if.end5.sw.bb101_crit_edge
    i32 67, label %if.end5.sw.bb101_crit_edge601
    i32 18, label %sw.bb105
    i32 19, label %sw.bb106
    i32 16, label %sw.bb107
    i32 17, label %sw.bb113
    i32 59, label %sw.bb123
    i32 28, label %sw.bb155
    i32 30, label %sw.bb171
    i32 34, label %sw.bb176
    i32 31, label %sw.bb184
    i32 36, label %sw.bb186
    i32 40, label %sw.bb187
    i32 41, label %sw.bb190
    i32 42, label %sw.bb193
    i32 43, label %sw.bb198
    i32 25, label %sw.bb201
    i32 26, label %sw.bb203
    i32 44, label %sw.bb209
    i32 48, label %sw.bb212
    i32 45, label %sw.bb214
    i32 46, label %sw.bb217
    i32 69, label %do.end221
    i32 47, label %sw.bb224
    i32 49, label %do.end232
    i32 55, label %sw.bb235
    i32 56, label %do.end252
    i32 57, label %sw.bb258
    i32 60, label %sw.bb264
    i32 61, label %sw.bb267
    i32 62, label %sw.bb283
    i32 71, label %sw.bb285
    i32 72, label %sw.bb291
    i32 73, label %sw.bb295
  ]

if.end5.sw.bb101_crit_edge601:                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb101

if.end5.sw.bb101_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb101

if.end5.sw.bb97_crit_edge600:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb97

if.end5.sw.bb97_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb97

if.end5.if.end59.i.i513_crit_edge:                ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end59.i.i513

if.end5.cleanup325_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

sw.bb:                                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %9 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 4
  %12 = lshr i32 %11, 10
  %.lobit598 = and i32 %12, 1
  %13 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %.lobit598, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb7:                                           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %14 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %17 = lshr i32 %16, 13
  %.lobit597 = and i32 %17, 1
  %18 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %.lobit597, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb10:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %19 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  %22 = lshr i32 %21, 6
  %.lobit596 = and i32 %22, 1
  %23 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %.lobit596, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb13:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 21
  %24 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sk_sndbuf, align 4
  %26 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb14:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 15
  %27 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sk_rcvbuf, align 8
  %29 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb15:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %skc_reuse = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 5
  %30 = ptrtoint ptr %skc_reuse to i32
  call void @__asan_load1_noabort(i32 %30)
  %bf.load = load i8, ptr %skc_reuse, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %conv16 = zext i8 %bf.lshr to i32
  %31 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv16, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb17:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %skc_reuseport = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 5
  %32 = ptrtoint ptr %skc_reuseport to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load19 = load i8, ptr %skc_reuseport, align 1
  %bf.lshr20 = lshr i8 %bf.load19, 3
  %bf.clear = and i8 %bf.lshr20, 1
  %conv21 = zext i8 %bf.clear to i32
  %33 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %conv21, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb22:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %34 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  %37 = lshr i32 %36, 3
  %.lobit595 = and i32 %37, 1
  %38 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %.lobit595, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb25:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_type = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 45
  %39 = ptrtoint ptr %sk_type to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %sk_type, align 2
  %conv26 = zext i16 %40 to i32
  %41 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %conv26, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb27:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_protocol = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 46
  %42 = ptrtoint ptr %sk_protocol to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %sk_protocol, align 4
  %conv28 = zext i16 %43 to i32
  %44 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %conv28, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb29:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 3
  %45 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %skc_family, align 8
  %conv31 = zext i16 %46 to i32
  %47 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %conv31, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb32:                                          ; preds = %if.end5
  %call33 = tail call fastcc i32 @sock_error(ptr noundef %1)
  %sub = sub i32 0, %call33
  %48 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %sub, ptr %v, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %cmp34 = icmp eq i32 %call33, 0
  br i1 %cmp34, label %if.then36, label %sw.bb32.if.end59.i.i513_crit_edge

sw.bb32.if.end59.i.i513_crit_edge:                ; preds = %sw.bb32
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end59.i.i513

if.then36:                                        ; preds = %sw.bb32
  call void @__sanitizer_cov_trace_pc() #19
  %sk_err_soft = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 52
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_err_soft, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !930
  tail call void @llvm.prefetch.p0(ptr %sk_err_soft, i32 1, i32 3, i32 1) #17
  %49 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_err_soft) #17, !srcloc !914
  %asmresult.i = extractvalue { i32, i32 } %49, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !931
  %50 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %asmresult.i, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb54:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %51 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %54 = lshr i32 %53, 2
  %.lobit594 = and i32 %54, 1
  %55 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %.lobit594, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb57:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_no_check_tx = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 43
  %56 = ptrtoint ptr %sk_no_check_tx to i32
  call void @__asan_load1_noabort(i32 %56)
  %bf.load58 = load i8, ptr %sk_no_check_tx, align 8
  %bf.lshr59 = lshr i8 %bf.load58, 5
  %bf.clear60 = and i8 %bf.lshr59, 1
  %conv61 = zext i8 %bf.clear60 to i32
  %57 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %conv61, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb62:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_priority = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 33
  %58 = ptrtoint ptr %sk_priority to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %sk_priority, align 4
  %60 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb63:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %61 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %61, align 4
  %64 = lshr i32 %63, 4
  %.lobit593 = and i32 %64, 1
  %65 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %.lobit593, ptr %v, align 8
  %sk_lingertime = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 48
  %66 = ptrtoint ptr %sk_lingertime to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %sk_lingertime, align 8
  %div = udiv i32 %67, 100
  %l_linger = getelementptr inbounds %struct.linger, ptr %v, i32 0, i32 1
  %68 = ptrtoint ptr %l_linger to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %div, ptr %l_linger, align 4
  br label %if.end59.i.i513

sw.bb66:                                          ; preds = %if.end5
  %69 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %69, align 4
  %72 = and i32 %71, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool.i534.not = icmp eq i32 %72, 0
  br i1 %tobool.i534.not, label %sw.bb66.land.end_crit_edge, label %land.lhs.true

sw.bb66.land.end_crit_edge:                       ; preds = %sw.bb66
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end

land.lhs.true:                                    ; preds = %sw.bb66
  %73 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile i32, ptr %69, align 4
  %75 = and i32 %74, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool.i535.not = icmp eq i32 %75, 0
  br i1 %tobool.i535.not, label %land.rhs, label %land.lhs.true.land.end_crit_edge

land.lhs.true.land.end_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  %76 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %69, align 4
  %78 = lshr i32 %77, 12
  %.lobit592 = and i32 %78, 1
  %79 = xor i32 %.lobit592, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.land.end_crit_edge, %sw.bb66.land.end_crit_edge
  %80 = phi i32 [ 0, %land.lhs.true.land.end_crit_edge ], [ 0, %sw.bb66.land.end_crit_edge ], [ %79, %land.rhs ]
  %81 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %80, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb71:                                          ; preds = %if.end5
  %82 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %83 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %82, align 4
  %85 = and i32 %84, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool.i537.not = icmp eq i32 %85, 0
  br i1 %tobool.i537.not, label %sw.bb71.land.end77_crit_edge, label %land.rhs74

sw.bb71.land.end77_crit_edge:                     ; preds = %sw.bb71
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end77

land.rhs74:                                       ; preds = %sw.bb71
  call void @__sanitizer_cov_trace_pc() #19
  %86 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load volatile i32, ptr %82, align 4
  %88 = lshr i32 %87, 26
  %.lobit591 = and i32 %88, 1
  %89 = xor i32 %.lobit591, 1
  br label %land.end77

land.end77:                                       ; preds = %land.rhs74, %sw.bb71.land.end77_crit_edge
  %90 = phi i32 [ 0, %sw.bb71.land.end77_crit_edge ], [ %89, %land.rhs74 ]
  %91 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %90, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb79:                                          ; preds = %if.end5
  %92 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %93 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %92, align 4
  %95 = and i32 %94, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool.i539.not = icmp eq i32 %95, 0
  br i1 %tobool.i539.not, label %sw.bb79.land.end85_crit_edge, label %land.rhs82

sw.bb79.land.end85_crit_edge:                     ; preds = %sw.bb79
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end85

land.rhs82:                                       ; preds = %sw.bb79
  call void @__sanitizer_cov_trace_pc() #19
  %96 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile i32, ptr %92, align 4
  %98 = lshr i32 %97, 26
  %.lobit590 = and i32 %98, 1
  br label %land.end85

land.end85:                                       ; preds = %land.rhs82, %sw.bb79.land.end85_crit_edge
  %99 = phi i32 [ 0, %sw.bb79.land.end85_crit_edge ], [ %.lobit590, %land.rhs82 ]
  %100 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %99, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb87:                                          ; preds = %if.end5
  %101 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %102 = ptrtoint ptr %101 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile i32, ptr %101, align 4
  %104 = and i32 %103, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %104)
  %tobool.i541.not = icmp eq i32 %104, 0
  br i1 %tobool.i541.not, label %sw.bb87.land.end93_crit_edge, label %land.rhs90

sw.bb87.land.end93_crit_edge:                     ; preds = %sw.bb87
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end93

land.rhs90:                                       ; preds = %sw.bb87
  call void @__sanitizer_cov_trace_pc() #19
  %105 = ptrtoint ptr %101 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %101, align 4
  %107 = lshr i32 %106, 26
  %.lobit589 = and i32 %107, 1
  br label %land.end93

land.end93:                                       ; preds = %land.rhs90, %sw.bb87.land.end93_crit_edge
  %108 = phi i32 [ 0, %sw.bb87.land.end93_crit_edge ], [ %.lobit589, %land.rhs90 ]
  %109 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %108, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb95:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_tsflags = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 65
  %110 = ptrtoint ptr %sk_tsflags to i32
  call void @__asan_load2_noabort(i32 %110)
  %111 = load i16, ptr %sk_tsflags, align 8
  %conv96 = zext i16 %111 to i32
  %112 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 %conv96, ptr %v, align 8
  %sk_bind_phc = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 59
  %113 = ptrtoint ptr %sk_bind_phc to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %sk_bind_phc, align 8
  %bind_phc = getelementptr inbounds %struct.so_timestamping, ptr %v, i32 0, i32 1
  %115 = ptrtoint ptr %bind_phc to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 %114, ptr %bind_phc, align 4
  br label %if.end59.i.i513

sw.bb97:                                          ; preds = %if.end5.sw.bb97_crit_edge, %if.end5.sw.bb97_crit_edge600
  %sk_rcvtimeo = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 62
  %116 = ptrtoint ptr %sk_rcvtimeo to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %sk_rcvtimeo, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %optname)
  %cmp98 = icmp eq i32 %optname, 20
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %117)
  %cmp.i = icmp eq i32 %117, 2147483647
  br i1 %cmp.i, label %sw.bb97.if.end.i_crit_edge, label %if.else.i

sw.bb97.if.end.i_crit_edge:                       ; preds = %sw.bb97
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.else.i:                                        ; preds = %sw.bb97
  call void @__sanitizer_cov_trace_pc() #19
  %.frozen = freeze i32 %117
  %div.i = sdiv i32 %.frozen, 100
  %conv.i = sext i32 %div.i to i64
  %118 = mul i32 %div.i, 100
  %rem.i.decomposed = sub i32 %.frozen, %118
  %div2.i = mul nsw i32 %rem.i.decomposed, 10000
  %conv3.i = sext i32 %div2.i to i64
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %sw.bb97.if.end.i_crit_edge
  %tv.sroa.0.0.i = phi i64 [ %conv.i, %if.else.i ], [ 0, %sw.bb97.if.end.i_crit_edge ]
  %tv.sroa.8.0.i = phi i64 [ %conv3.i, %if.else.i ], [ 0, %sw.bb97.if.end.i_crit_edge ]
  br i1 %cmp98, label %land.lhs.true.i, label %if.end23.i

land.lhs.true.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv18.i = trunc i64 %tv.sroa.0.0.i to i32
  %conv21.i = trunc i64 %tv.sroa.8.0.i to i32
  %119 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 %conv18.i, ptr %v, align 8
  %old_tv.sroa.5.0..sroa_idx.i = getelementptr inbounds i8, ptr %v, i32 4
  %120 = ptrtoint ptr %old_tv.sroa.5.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 %conv21.i, ptr %old_tv.sroa.5.0..sroa_idx.i, align 4
  br label %if.end59.i.i513

if.end23.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %121 = ptrtoint ptr %v to i32
  call void @__asan_store8_noabort(i32 %121)
  store i64 %tv.sroa.0.0.i, ptr %v, align 8
  %122 = ptrtoint ptr %2 to i32
  call void @__asan_store8_noabort(i32 %122)
  store i64 %tv.sroa.8.0.i, ptr %2, align 8
  br label %if.end59.i.i513

sw.bb101:                                         ; preds = %if.end5.sw.bb101_crit_edge, %if.end5.sw.bb101_crit_edge601
  %sk_sndtimeo = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 31
  %123 = ptrtoint ptr %sk_sndtimeo to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %sk_sndtimeo, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %optname)
  %cmp102 = icmp eq i32 %optname, 21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %124)
  %cmp.i543 = icmp eq i32 %124, 2147483647
  br i1 %cmp.i543, label %sw.bb101.if.end.i552_crit_edge, label %if.else.i549

sw.bb101.if.end.i552_crit_edge:                   ; preds = %sw.bb101
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i552

if.else.i549:                                     ; preds = %sw.bb101
  call void @__sanitizer_cov_trace_pc() #19
  %.frozen599 = freeze i32 %124
  %div.i544 = sdiv i32 %.frozen599, 100
  %conv.i545 = sext i32 %div.i544 to i64
  %125 = mul i32 %div.i544, 100
  %rem.i546.decomposed = sub i32 %.frozen599, %125
  %div2.i547 = mul nsw i32 %rem.i546.decomposed, 10000
  %conv3.i548 = sext i32 %div2.i547 to i64
  br label %if.end.i552

if.end.i552:                                      ; preds = %if.else.i549, %sw.bb101.if.end.i552_crit_edge
  %tv.sroa.0.0.i550 = phi i64 [ %conv.i545, %if.else.i549 ], [ 0, %sw.bb101.if.end.i552_crit_edge ]
  %tv.sroa.8.0.i551 = phi i64 [ %conv3.i548, %if.else.i549 ], [ 0, %sw.bb101.if.end.i552_crit_edge ]
  br i1 %cmp102, label %land.lhs.true.i556, label %if.end23.i558

land.lhs.true.i556:                               ; preds = %if.end.i552
  call void @__sanitizer_cov_trace_pc() #19
  %conv18.i553 = trunc i64 %tv.sroa.0.0.i550 to i32
  %conv21.i554 = trunc i64 %tv.sroa.8.0.i551 to i32
  %126 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %126)
  store i32 %conv18.i553, ptr %v, align 8
  %old_tv.sroa.5.0..sroa_idx.i555 = getelementptr inbounds i8, ptr %v, i32 4
  %127 = ptrtoint ptr %old_tv.sroa.5.0..sroa_idx.i555 to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %conv21.i554, ptr %old_tv.sroa.5.0..sroa_idx.i555, align 4
  br label %if.end59.i.i513

if.end23.i558:                                    ; preds = %if.end.i552
  call void @__sanitizer_cov_trace_pc() #19
  %128 = ptrtoint ptr %v to i32
  call void @__asan_store8_noabort(i32 %128)
  store i64 %tv.sroa.0.0.i550, ptr %v, align 8
  %129 = ptrtoint ptr %2 to i32
  call void @__asan_store8_noabort(i32 %129)
  store i64 %tv.sroa.8.0.i551, ptr %2, align 8
  br label %if.end59.i.i513

sw.bb105:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_rcvlowat = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 6
  %130 = ptrtoint ptr %sk_rcvlowat to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %sk_rcvlowat, align 8
  %132 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 %131, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb106:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %133 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 1, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb107:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %flags108 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 2
  %134 = ptrtoint ptr %flags108 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %flags108, align 4
  %136 = lshr i32 %135, 3
  %.lobit588 = and i32 %136, 1
  %137 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 %.lobit588, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb113:                                         ; preds = %if.end5
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %peercred) #17
  %138 = ptrtoint ptr %peercred to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 -1, ptr %peercred, align 4, !annotation !896
  %139 = getelementptr inbounds %struct.ucred, ptr %peercred, i32 0, i32 1
  %140 = ptrtoint ptr %139 to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 -1, ptr %139, align 4, !annotation !896
  %141 = getelementptr inbounds %struct.ucred, ptr %peercred, i32 0, i32 2
  %142 = ptrtoint ptr %141 to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 -1, ptr %141, align 4, !annotation !896
  %143 = tail call i32 @llvm.umin.i32(i32 %asmresult2, i32 12)
  %sk_peer_lock = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 58
  tail call void @_raw_spin_lock(ptr noundef %sk_peer_lock) #17
  %sk_peer_pid = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 60
  %144 = ptrtoint ptr %sk_peer_pid to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %sk_peer_pid, align 4
  %sk_peer_cred = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 61
  %146 = ptrtoint ptr %sk_peer_cred to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %sk_peer_cred, align 8
  call fastcc void @cred_to_ucred(ptr noundef %145, ptr noundef %147, ptr noundef nonnull %peercred)
  tail call void @_raw_spin_unlock(ptr noundef %sk_peer_lock) #17
  call void @__check_object_size(ptr noundef nonnull %peercred, i32 noundef %143, i1 noundef zeroext true) #17
  call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 174) #17
  %call.i.i = call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i, label %sw.bb113.copy_to_user.exit_crit_edge, label %if.end.i.i

sw.bb113.copy_to_user.exit_crit_edge:             ; preds = %sw.bb113
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %sw.bb113
  %148 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %optval, i32 %143, i32 -1226833920) #20, !srcloc !932
  %asmresult.i.i = extractvalue { i32, i32 } %148, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %peercred, i32 noundef %143) #17
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %optval, ptr noundef nonnull %peercred, i32 noundef %143) #17
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %sw.bb113.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %143, %sw.bb113.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %143, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool120.not = icmp eq i32 %n.addr.0.i, 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %peercred) #17
  br i1 %tobool120.not, label %copy_to_user.exit.lenout_crit_edge, label %copy_to_user.exit.cleanup325_crit_edge

copy_to_user.exit.cleanup325_crit_edge:           ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

copy_to_user.exit.lenout_crit_edge:               ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %lenout

sw.bb123:                                         ; preds = %if.end5
  %call124 = tail call fastcc ptr @sk_get_peer_cred(ptr noundef %1)
  %tobool125.not = icmp eq ptr %call124, null
  br i1 %tobool125.not, label %sw.bb123.cleanup325_crit_edge, label %if.end127

sw.bb123.cleanup325_crit_edge:                    ; preds = %sw.bb123
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

if.end127:                                        ; preds = %sw.bb123
  %group_info = getelementptr inbounds %struct.cred, ptr %call124, i32 0, i32 27
  %149 = ptrtoint ptr %group_info to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %group_info, align 4
  %ngroups = getelementptr inbounds %struct.group_info, ptr %150, i32 0, i32 1
  %151 = ptrtoint ptr %ngroups to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %ngroups, align 4
  %mul = shl i32 %152, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult2, i32 %mul)
  %cmp128 = icmp ult i32 %asmresult2, %mul
  br i1 %cmp128, label %if.then130, label %cleanup152

if.then130:                                       ; preds = %if.end127
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @put_cred(ptr noundef nonnull %call124)
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 1668) #17
  %153 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i459 = and i32 %153, -16384
  %154 = inttoptr i32 %and.i.i.i459 to ptr
  %cpu_domain.i.i460 = getelementptr inbounds %struct.thread_info, ptr %154, i32 0, i32 4
  %155 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i460) #13, !srcloc !898
  %and.i461 = and i32 %155, -13
  %or.i462 = or i32 %and.i461, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i462) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %156 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %optlen, i32 %mul, i32 -1226833921) #17, !srcloc !933
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %155) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %156)
  %tobool144.not = icmp eq i32 %156, 0
  %cond = select i1 %tobool144.not, i32 -34, i32 -14
  br label %cleanup325

cleanup152:                                       ; preds = %if.end127
  %call148 = tail call fastcc i32 @groups_to_user(ptr noundef %optval, ptr noundef %150)
  tail call fastcc void @put_cred(ptr noundef nonnull %call124)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call148)
  %tobool149.not = icmp eq i32 %call148, 0
  br i1 %tobool149.not, label %cleanup152.lenout_crit_edge, label %cleanup152.cleanup325_crit_edge

cleanup152.cleanup325_crit_edge:                  ; preds = %cleanup152
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

cleanup152.lenout_crit_edge:                      ; preds = %cleanup152
  call void @__sanitizer_cov_trace_pc() #19
  br label %lenout

sw.bb155:                                         ; preds = %if.end5
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %address) #17
  %157 = call ptr @memset(ptr %address, i32 255, i32 128)
  %ops = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 5
  %158 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %ops, align 4
  %getname = getelementptr inbounds %struct.proto_ops, ptr %159, i32 0, i32 7
  %160 = ptrtoint ptr %getname to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %getname, align 4
  %call156 = call i32 %161(ptr noundef %sock, ptr noundef nonnull %address, i32 noundef 2) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call156)
  %cmp157 = icmp slt i32 %call156, 0
  br i1 %cmp157, label %sw.bb155.cleanup170.thread_crit_edge, label %if.end160

sw.bb155.cleanup170.thread_crit_edge:             ; preds = %sw.bb155
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup170.thread

if.end160:                                        ; preds = %sw.bb155
  call void @__sanitizer_cov_trace_cmp4(i32 %call156, i32 %asmresult2)
  %cmp161 = icmp ult i32 %call156, %asmresult2
  br i1 %cmp161, label %if.end160.cleanup170.thread_crit_edge, label %if.end164

if.end160.cleanup170.thread_crit_edge:            ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup170.thread

if.end164:                                        ; preds = %if.end160
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %asmresult2)
  %cmp1.i.i464 = icmp ugt i32 %asmresult2, 128
  br i1 %cmp1.i.i464, label %if.then3.i.i467, label %if.then.i.i.i470, !prof !889

if.then3.i.i467:                                  ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.18, i32 noundef 214, i32 noundef 9, ptr noundef nonnull @.str.19, i32 noundef 128, i32 noundef %asmresult2) #17
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %address) #17
  br label %cleanup325

if.then.i.i.i470:                                 ; preds = %if.end164
  call void @__check_object_size(ptr noundef nonnull %address, i32 noundef %asmresult2, i1 noundef zeroext true) #17
  call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 174) #17
  %call.i.i471 = call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i471, label %if.then.i.i.i470.cleanup170_crit_edge, label %if.end.i.i475

if.then.i.i.i470.cleanup170_crit_edge:            ; preds = %if.then.i.i.i470
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup170

if.end.i.i475:                                    ; preds = %if.then.i.i.i470
  %162 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %optval, i32 %asmresult2, i32 -1226833920) #20, !srcloc !932
  %asmresult.i.i473 = extractvalue { i32, i32 } %162, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i473)
  %cmp.i6.i474 = icmp eq i32 %asmresult.i.i473, 0
  br i1 %cmp.i6.i474, label %if.then2.i.i478, label %if.end.i.i475.cleanup170_crit_edge

if.end.i.i475.cleanup170_crit_edge:               ; preds = %if.end.i.i475
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup170

if.then2.i.i478:                                  ; preds = %if.end.i.i475
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i476 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %address, i32 noundef %asmresult2) #17
  %call.i12.i.i477 = call i32 @arm_copy_to_user(ptr noundef %optval, ptr noundef nonnull %address, i32 noundef %asmresult2) #17
  br label %cleanup170

cleanup170.thread:                                ; preds = %if.end160.cleanup170.thread_crit_edge, %sw.bb155.cleanup170.thread_crit_edge
  %retval.2.ph = phi i32 [ -22, %if.end160.cleanup170.thread_crit_edge ], [ -107, %sw.bb155.cleanup170.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %address) #17
  br label %cleanup325

cleanup170:                                       ; preds = %if.then2.i.i478, %if.end.i.i475.cleanup170_crit_edge, %if.then.i.i.i470.cleanup170_crit_edge
  %n.addr.0.i479 = phi i32 [ %asmresult2, %if.then.i.i.i470.cleanup170_crit_edge ], [ %call.i12.i.i477, %if.then2.i.i478 ], [ %asmresult2, %if.end.i.i475.cleanup170_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i479)
  %tobool167.not = icmp eq i32 %n.addr.0.i479, 0
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %address) #17
  br i1 %tobool167.not, label %cleanup170.lenout_crit_edge, label %cleanup170.cleanup325_crit_edge

cleanup170.cleanup325_crit_edge:                  ; preds = %cleanup170
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

cleanup170.lenout_crit_edge:                      ; preds = %cleanup170
  call void @__sanitizer_cov_trace_pc() #19
  br label %lenout

sw.bb171:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %163 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %163)
  %164 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %164)
  %cmp174 = icmp eq i8 %164, 10
  %conv175 = zext i1 %cmp174 to i32
  %165 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 %conv175, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb176:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %flags177 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 2
  %166 = ptrtoint ptr %flags177 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load volatile i32, ptr %flags177, align 4
  %168 = lshr i32 %167, 4
  %.lobit587 = and i32 %168, 1
  %169 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 %.lobit587, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb184:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %call185 = tail call i32 @security_socket_getpeersec_stream(ptr noundef %sock, ptr noundef %optval, ptr noundef %optlen, i32 noundef %asmresult2) #17
  br label %cleanup325

sw.bb186:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_mark = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 34
  %170 = ptrtoint ptr %sk_mark to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %sk_mark, align 8
  %172 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %171, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb187:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %173 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %174 = ptrtoint ptr %173 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load volatile i32, ptr %173, align 4
  %176 = lshr i32 %175, 17
  %.lobit586 = and i32 %176, 1
  %177 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 %.lobit586, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb190:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %178 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %179 = ptrtoint ptr %178 to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load volatile i32, ptr %178, align 4
  %181 = lshr i32 %180, 19
  %.lobit585 = and i32 %181, 1
  %182 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 %.lobit585, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb193:                                         ; preds = %if.end5
  %ops194 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 5
  %183 = ptrtoint ptr %ops194 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %ops194, align 4
  %set_peek_off = getelementptr inbounds %struct.proto_ops, ptr %184, i32 0, i32 21
  %185 = ptrtoint ptr %set_peek_off to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %set_peek_off, align 4
  %tobool195.not = icmp eq ptr %186, null
  br i1 %tobool195.not, label %sw.bb193.cleanup325_crit_edge, label %if.end197

sw.bb193.cleanup325_crit_edge:                    ; preds = %sw.bb193
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

if.end197:                                        ; preds = %sw.bb193
  call void @__sanitizer_cov_trace_pc() #19
  %sk_peek_off = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 27
  %187 = ptrtoint ptr %sk_peek_off to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %sk_peek_off, align 8
  %189 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 %188, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb198:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %190 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %191 = ptrtoint ptr %190 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load volatile i32, ptr %190, align 4
  %193 = lshr i32 %192, 20
  %.lobit584 = and i32 %193, 1
  %194 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 %.lobit584, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb201:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %call202 = tail call fastcc i32 @sock_getbindtodevice(ptr noundef %1, ptr noundef %optval, ptr noundef %optlen, i32 noundef %asmresult2)
  br label %cleanup325

sw.bb203:                                         ; preds = %if.end5
  %call204 = tail call i32 @sk_get_filter(ptr noundef %1, ptr noundef %optval, i32 noundef %asmresult2) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call204)
  %cmp205 = icmp slt i32 %call204, 0
  br i1 %cmp205, label %sw.bb203.cleanup325_crit_edge, label %sw.bb203.lenout_crit_edge

sw.bb203.lenout_crit_edge:                        ; preds = %sw.bb203
  call void @__sanitizer_cov_trace_pc() #19
  br label %lenout

sw.bb203.cleanup325_crit_edge:                    ; preds = %sw.bb203
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

sw.bb209:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %195 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %196 = ptrtoint ptr %195 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load volatile i32, ptr %195, align 4
  %198 = lshr i32 %197, 21
  %.lobit583 = and i32 %198, 1
  %199 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 %.lobit583, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb212:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %200 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 64, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb214:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %201 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %202 = ptrtoint ptr %201 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load volatile i32, ptr %201, align 4
  %204 = lshr i32 %203, 22
  %.lobit582 = and i32 %204, 1
  %205 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %.lobit582, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb217:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_ll_usec = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 13
  %206 = ptrtoint ptr %sk_ll_usec to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %sk_ll_usec, align 8
  %208 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %208)
  store i32 %207, ptr %v, align 8
  br label %if.end59.i.i513

do.end221:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_prefer_busy_poll = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 56
  %209 = ptrtoint ptr %sk_prefer_busy_poll to i32
  call void @__asan_load1_noabort(i32 %209)
  %210 = load volatile i8, ptr %sk_prefer_busy_poll, align 8
  %conv223 = zext i8 %210 to i32
  %211 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %211)
  store i32 %conv223, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb224:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_max_pacing_rate = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 36
  %212 = ptrtoint ptr %sk_max_pacing_rate to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %sk_max_pacing_rate, align 8
  %214 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %214)
  store i32 %213, ptr %v, align 8
  br label %if.end59.i.i513

do.end232:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %215 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 18
  %216 = ptrtoint ptr %215 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load volatile i32, ptr %215, align 8
  %218 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %218)
  store i32 %217, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb235:                                         ; preds = %if.end5
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %meminfo) #17
  %219 = call ptr @memset(ptr %meminfo, i32 255, i32 36)
  call void @sk_get_meminfo(ptr noundef %1, ptr noundef nonnull %meminfo)
  %220 = tail call i32 @llvm.umin.i32(i32 %asmresult2, i32 36)
  call void @__check_object_size(ptr noundef nonnull %meminfo, i32 noundef %220, i1 noundef zeroext true) #17
  call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 174) #17
  %call.i.i492 = call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i492, label %sw.bb235.copy_to_user.exit501_crit_edge, label %if.end.i.i496

sw.bb235.copy_to_user.exit501_crit_edge:          ; preds = %sw.bb235
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_to_user.exit501

if.end.i.i496:                                    ; preds = %sw.bb235
  %221 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %optval, i32 %220, i32 -1226833920) #20, !srcloc !932
  %asmresult.i.i494 = extractvalue { i32, i32 } %221, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i494)
  %cmp.i6.i495 = icmp eq i32 %asmresult.i.i494, 0
  br i1 %cmp.i6.i495, label %if.then2.i.i499, label %if.end.i.i496.copy_to_user.exit501_crit_edge

if.end.i.i496.copy_to_user.exit501_crit_edge:     ; preds = %if.end.i.i496
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_to_user.exit501

if.then2.i.i499:                                  ; preds = %if.end.i.i496
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i497 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %meminfo, i32 noundef %220) #17
  %call.i12.i.i498 = call i32 @arm_copy_to_user(ptr noundef %optval, ptr noundef nonnull %meminfo, i32 noundef %220) #17
  br label %copy_to_user.exit501

copy_to_user.exit501:                             ; preds = %if.then2.i.i499, %if.end.i.i496.copy_to_user.exit501_crit_edge, %sw.bb235.copy_to_user.exit501_crit_edge
  %n.addr.0.i500 = phi i32 [ %220, %sw.bb235.copy_to_user.exit501_crit_edge ], [ %call.i12.i.i498, %if.then2.i.i499 ], [ %220, %if.end.i.i496.copy_to_user.exit501_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i500)
  %tobool245.not = icmp eq i32 %n.addr.0.i500, 0
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %meminfo) #17
  br i1 %tobool245.not, label %copy_to_user.exit501.lenout_crit_edge, label %copy_to_user.exit501.cleanup325_crit_edge

copy_to_user.exit501.cleanup325_crit_edge:        ; preds = %copy_to_user.exit501
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

copy_to_user.exit501.lenout_crit_edge:            ; preds = %copy_to_user.exit501
  call void @__sanitizer_cov_trace_pc() #19
  br label %lenout

do.end252:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_napi_id = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 14
  %222 = ptrtoint ptr %sk_napi_id to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load volatile i32, ptr %sk_napi_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %223)
  %cmp254 = icmp ult i32 %223, 5
  %spec.store.select = select i1 %cmp254, i32 0, i32 %223
  %224 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %224)
  store i32 %spec.store.select, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb258:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %asmresult2)
  %cmp259 = icmp ult i32 %asmresult2, 8
  br i1 %cmp259, label %sw.bb258.cleanup325_crit_edge, label %if.end262

sw.bb258.cleanup325_crit_edge:                    ; preds = %sw.bb258
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

if.end262:                                        ; preds = %sw.bb258
  call void @__sanitizer_cov_trace_pc() #19
  %call263 = tail call fastcc i64 @sock_gen_cookie(ptr noundef %1)
  %225 = ptrtoint ptr %v to i32
  call void @__asan_store8_noabort(i32 %225)
  store i64 %call263, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb264:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %226 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %227 = ptrtoint ptr %226 to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load volatile i32, ptr %226, align 4
  %229 = lshr i32 %228, 18
  %.lobit = and i32 %229, 1
  %230 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %230)
  store i32 %.lobit, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb267:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_clockid = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 69
  %231 = ptrtoint ptr %sk_clockid to i32
  call void @__asan_load1_noabort(i32 %231)
  %232 = load i8, ptr %sk_clockid, align 4
  %conv268 = zext i8 %232 to i32
  %233 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %233)
  store i32 %conv268, ptr %v, align 8
  %sk_txtime_deadline_mode = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 70
  %234 = ptrtoint ptr %sk_txtime_deadline_mode to i32
  call void @__asan_load1_noabort(i32 %234)
  %bf.load269 = load i8, ptr %sk_txtime_deadline_mode, align 1
  %bf.load269.lobit = lshr i8 %bf.load269, 7
  %235 = zext i8 %bf.load269.lobit to i32
  %flags274 = getelementptr inbounds %struct.sock_txtime, ptr %v, i32 0, i32 1
  %236 = ptrtoint ptr %flags274 to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %flags274, align 4
  %or = or i32 %237, %235
  %238 = lshr i8 %bf.load269, 5
  %239 = and i8 %238, 2
  %240 = zext i8 %239 to i32
  %or282 = or i32 %or, %240
  store i32 %or282, ptr %flags274, align 4
  br label %if.end59.i.i513

sw.bb283:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %skc_bound_dev_if = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 6
  %241 = ptrtoint ptr %skc_bound_dev_if to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %skc_bound_dev_if, align 4
  %243 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %243)
  store i32 %242, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb285:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %asmresult2)
  %cmp286.not = icmp eq i32 %asmresult2, 8
  br i1 %cmp286.not, label %if.end289, label %sw.bb285.cleanup325_crit_edge

sw.bb285.cleanup325_crit_edge:                    ; preds = %sw.bb285
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

if.end289:                                        ; preds = %sw.bb285
  call void @__sanitizer_cov_trace_pc() #19
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 9
  %244 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load ptr, ptr %skc_net.i, align 4
  %net_cookie = getelementptr inbounds %struct.net, ptr %245, i32 0, i32 47
  %246 = ptrtoint ptr %net_cookie to i32
  call void @__asan_load8_noabort(i32 %246)
  %247 = load i64, ptr %net_cookie, align 128
  %248 = ptrtoint ptr %v to i32
  call void @__asan_store8_noabort(i32 %248)
  store i64 %247, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb291:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_userlocks = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 43
  %249 = ptrtoint ptr %sk_userlocks to i32
  call void @__asan_load1_noabort(i32 %249)
  %bf.load292 = load i8, ptr %sk_userlocks, align 8
  %250 = and i8 %bf.load292, 3
  %and = zext i8 %250 to i32
  %251 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %251)
  store i32 %and, ptr %v, align 8
  br label %if.end59.i.i513

sw.bb295:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_reserved_mem = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 12
  %252 = ptrtoint ptr %sk_reserved_mem to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %sk_reserved_mem, align 4
  %254 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %254)
  store i32 %253, ptr %v, align 8
  br label %if.end59.i.i513

if.end59.i.i513:                                  ; preds = %sw.bb295, %sw.bb291, %if.end289, %sw.bb283, %sw.bb267, %sw.bb264, %if.end262, %do.end252, %do.end232, %sw.bb224, %do.end221, %sw.bb217, %sw.bb214, %sw.bb212, %sw.bb209, %sw.bb198, %if.end197, %sw.bb190, %sw.bb187, %sw.bb186, %sw.bb176, %sw.bb171, %sw.bb107, %sw.bb106, %sw.bb105, %if.end23.i558, %land.lhs.true.i556, %if.end23.i, %land.lhs.true.i, %sw.bb95, %land.end93, %land.end85, %land.end77, %land.end, %sw.bb63, %sw.bb62, %sw.bb57, %sw.bb54, %if.then36, %sw.bb32.if.end59.i.i513_crit_edge, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb22, %sw.bb17, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb10, %sw.bb7, %sw.bb, %if.end5.if.end59.i.i513_crit_edge
  %lv.0 = phi i32 [ 4, %sw.bb295 ], [ 4, %sw.bb291 ], [ 8, %if.end289 ], [ 4, %sw.bb283 ], [ 8, %sw.bb267 ], [ 4, %sw.bb264 ], [ 8, %if.end262 ], [ 4, %do.end252 ], [ 4, %do.end232 ], [ 4, %sw.bb224 ], [ 4, %do.end221 ], [ 4, %sw.bb217 ], [ 4, %sw.bb214 ], [ 4, %sw.bb212 ], [ 4, %sw.bb209 ], [ 4, %sw.bb198 ], [ 4, %if.end197 ], [ 4, %sw.bb190 ], [ 4, %sw.bb187 ], [ 4, %sw.bb186 ], [ 4, %sw.bb176 ], [ 4, %sw.bb171 ], [ 4, %sw.bb107 ], [ 4, %sw.bb106 ], [ 4, %sw.bb105 ], [ 8, %sw.bb95 ], [ 4, %land.end93 ], [ 4, %land.end85 ], [ 4, %land.end77 ], [ 4, %land.end ], [ 4, %if.end5.if.end59.i.i513_crit_edge ], [ 8, %sw.bb63 ], [ 4, %sw.bb62 ], [ 4, %sw.bb57 ], [ 4, %sw.bb54 ], [ 4, %if.then36 ], [ 4, %sw.bb32.if.end59.i.i513_crit_edge ], [ 4, %sw.bb29 ], [ 4, %sw.bb27 ], [ 4, %sw.bb25 ], [ 4, %sw.bb22 ], [ 4, %sw.bb17 ], [ 4, %sw.bb15 ], [ 4, %sw.bb14 ], [ 4, %sw.bb13 ], [ 4, %sw.bb10 ], [ 4, %sw.bb7 ], [ 4, %sw.bb ], [ 8, %land.lhs.true.i ], [ 16, %if.end23.i ], [ 8, %land.lhs.true.i556 ], [ 16, %if.end23.i558 ]
  %255 = tail call i32 @llvm.umin.i32(i32 %asmresult2, i32 %lv.0)
  call void @__check_object_size(ptr noundef nonnull %v, i32 noundef %255, i1 noundef zeroext true) #17
  call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 174) #17
  %call.i.i515 = call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i515, label %if.end59.i.i513.copy_to_user.exit524_crit_edge, label %if.end.i.i519

if.end59.i.i513.copy_to_user.exit524_crit_edge:   ; preds = %if.end59.i.i513
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_to_user.exit524

if.end.i.i519:                                    ; preds = %if.end59.i.i513
  %256 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %optval, i32 %255, i32 -1226833920) #20, !srcloc !932
  %asmresult.i.i517 = extractvalue { i32, i32 } %256, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i517)
  %cmp.i6.i518 = icmp eq i32 %asmresult.i.i517, 0
  br i1 %cmp.i6.i518, label %if.then2.i.i522, label %if.end.i.i519.copy_to_user.exit524_crit_edge

if.end.i.i519.copy_to_user.exit524_crit_edge:     ; preds = %if.end.i.i519
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_to_user.exit524

if.then2.i.i522:                                  ; preds = %if.end.i.i519
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i520 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %v, i32 noundef %255) #17
  %call.i12.i.i521 = call i32 @arm_copy_to_user(ptr noundef %optval, ptr noundef nonnull %v, i32 noundef %255) #17
  br label %copy_to_user.exit524

copy_to_user.exit524:                             ; preds = %if.then2.i.i522, %if.end.i.i519.copy_to_user.exit524_crit_edge, %if.end59.i.i513.copy_to_user.exit524_crit_edge
  %n.addr.0.i523 = phi i32 [ %255, %if.end59.i.i513.copy_to_user.exit524_crit_edge ], [ %call.i12.i.i521, %if.then2.i.i522 ], [ %255, %if.end.i.i519.copy_to_user.exit524_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i523)
  %tobool301.not = icmp eq i32 %n.addr.0.i523, 0
  br i1 %tobool301.not, label %copy_to_user.exit524.lenout_crit_edge, label %copy_to_user.exit524.cleanup325_crit_edge

copy_to_user.exit524.cleanup325_crit_edge:        ; preds = %copy_to_user.exit524
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup325

copy_to_user.exit524.lenout_crit_edge:            ; preds = %copy_to_user.exit524
  call void @__sanitizer_cov_trace_pc() #19
  br label %lenout

lenout:                                           ; preds = %copy_to_user.exit524.lenout_crit_edge, %copy_to_user.exit501.lenout_crit_edge, %sw.bb203.lenout_crit_edge, %cleanup170.lenout_crit_edge, %cleanup152.lenout_crit_edge, %copy_to_user.exit.lenout_crit_edge
  %len.3 = phi i32 [ %255, %copy_to_user.exit524.lenout_crit_edge ], [ %220, %copy_to_user.exit501.lenout_crit_edge ], [ %call204, %sw.bb203.lenout_crit_edge ], [ %asmresult2, %cleanup170.lenout_crit_edge ], [ %mul, %cleanup152.lenout_crit_edge ], [ %143, %copy_to_user.exit.lenout_crit_edge ]
  call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 1849) #17
  %257 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i525 = and i32 %257, -16384
  %258 = inttoptr i32 %and.i.i.i525 to ptr
  %cpu_domain.i.i526 = getelementptr inbounds %struct.thread_info, ptr %258, i32 0, i32 4
  %259 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i526) #13, !srcloc !898
  %and.i527 = and i32 %259, -13
  %or.i528 = or i32 %and.i527, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i528) #17, !srcloc !899
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %260 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %optlen, i32 %len.3, i32 -1226833921) #17, !srcloc !934
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %259) #17, !srcloc !899
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %260)
  %tobool322.not = icmp eq i32 %260, 0
  %.458 = select i1 %tobool322.not, i32 0, i32 -14
  br label %cleanup325

cleanup325:                                       ; preds = %lenout, %copy_to_user.exit524.cleanup325_crit_edge, %sw.bb285.cleanup325_crit_edge, %sw.bb258.cleanup325_crit_edge, %copy_to_user.exit501.cleanup325_crit_edge, %sw.bb203.cleanup325_crit_edge, %sw.bb201, %sw.bb193.cleanup325_crit_edge, %sw.bb184, %cleanup170.cleanup325_crit_edge, %cleanup170.thread, %if.then3.i.i467, %cleanup152.cleanup325_crit_edge, %if.then130, %sw.bb123.cleanup325_crit_edge, %copy_to_user.exit.cleanup325_crit_edge, %if.end5.cleanup325_crit_edge, %if.end.cleanup325_crit_edge, %entry.cleanup325_crit_edge
  %retval.4 = phi i32 [ -14, %copy_to_user.exit501.cleanup325_crit_edge ], [ %call202, %sw.bb201 ], [ %call185, %sw.bb184 ], [ -14, %cleanup170.cleanup325_crit_edge ], [ %call148, %cleanup152.cleanup325_crit_edge ], [ -14, %copy_to_user.exit.cleanup325_crit_edge ], [ -14, %entry.cleanup325_crit_edge ], [ -22, %if.end.cleanup325_crit_edge ], [ -95, %sw.bb193.cleanup325_crit_edge ], [ %call204, %sw.bb203.cleanup325_crit_edge ], [ -22, %sw.bb258.cleanup325_crit_edge ], [ -22, %sw.bb285.cleanup325_crit_edge ], [ -92, %if.end5.cleanup325_crit_edge ], [ -14, %copy_to_user.exit524.cleanup325_crit_edge ], [ %.458, %lenout ], [ %retval.2.ph, %cleanup170.thread ], [ -14, %if.then3.i.i467 ], [ -61, %sw.bb123.cleanup325_crit_edge ], [ %cond, %if.then130 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %v) #17
  ret i32 %retval.4
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sock_error(ptr noundef %sk) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %sk_err = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 51
  %0 = ptrtoint ptr %sk_err to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !888

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_err, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !935
  tail call void @llvm.prefetch.p0(ptr %sk_err, i32 1, i32 3, i32 1) #17
  %2 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_err) #17, !srcloc !914
  %asmresult.i = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !936
  %sub = sub i32 0, %asmresult.i
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %sub, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cred_to_ucred(ptr noundef %pid, ptr noundef readonly %cred, ptr nocapture noundef writeonly %ucred) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pid_vnr(ptr noundef %pid) #17
  %0 = ptrtoint ptr %ucred to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %call, ptr %ucred, align 4
  %gid = getelementptr inbounds %struct.ucred, ptr %ucred, i32 0, i32 2
  %1 = ptrtoint ptr %gid to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %gid, align 4
  %uid = getelementptr inbounds %struct.ucred, ptr %ucred, i32 0, i32 1
  %2 = ptrtoint ptr %uid to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %uid, align 4
  %tobool.not = icmp eq ptr %cred, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %3 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %cred4 = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 99
  %7 = ptrtoint ptr %cred4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cred4, align 16
  %user_ns = getelementptr inbounds %struct.cred, ptr %8, i32 0, i32 25
  %9 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %user_ns, align 4
  %euid = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 8
  %11 = ptrtoint ptr %euid to i32
  call void @__asan_load4_noabort(i32 %11)
  %.unpack = load i32, ptr %euid, align 4
  %12 = insertvalue [1 x i32] undef, i32 %.unpack, 0
  %call5 = tail call i32 @from_kuid_munged(ptr noundef %10, [1 x i32] %12) #17
  %13 = ptrtoint ptr %uid to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call5, ptr %uid, align 4
  %egid = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 9
  %14 = ptrtoint ptr %egid to i32
  call void @__asan_load4_noabort(i32 %14)
  %.unpack17 = load i32, ptr %egid, align 4
  %15 = insertvalue [1 x i32] undef, i32 %.unpack17, 0
  %call8 = tail call i32 @from_kgid_munged(ptr noundef %10, [1 x i32] %15) #17
  %16 = ptrtoint ptr %gid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %call8, ptr %gid, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @sk_get_peer_cred(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_peer_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 58
  tail call void @_raw_spin_lock(ptr noundef %sk_peer_lock) #17
  %sk_peer_cred = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 61
  %0 = ptrtoint ptr %sk_peer_cred to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_peer_cred, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.get_cred.exit_crit_edge, label %do.body.i

entry.get_cred.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %get_cred.exit

do.body.i:                                        ; preds = %entry
  %call.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %1) #17
  br i1 %call.i.i, label %if.then.i.i, label %do.body.i.__validate_creds.exit.i_crit_edge, !prof !889

do.body.i.__validate_creds.exit.i_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__invalid_creds(ptr noundef nonnull %1, ptr noundef nonnull @.str.28, i32 noundef 253) #17
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %do.body.i.__validate_creds.exit.i_crit_edge
  %2 = getelementptr inbounds %struct.cred, ptr %1, i32 0, i32 28
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %2, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %1, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr nonnull %1, i32 1, i32 3, i32 1) #17
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %1, ptr nonnull %1, i32 1, ptr nonnull elementtype(i32) %1) #17, !srcloc !901
  br label %get_cred.exit

get_cred.exit:                                    ; preds = %__validate_creds.exit.i, %entry.get_cred.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %sk_peer_lock) #17
  ret ptr %1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_cred(ptr noundef %_cred) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %tobool.not = icmp eq ptr %_cred, null
  br i1 %tobool.not, label %entry.if.end2_crit_edge, label %do.body

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end2

do.body:                                          ; preds = %entry
  %call.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %_cred) #17
  br i1 %call.i, label %if.then.i, label %do.body.__validate_creds.exit_crit_edge, !prof !889

do.body.__validate_creds.exit_crit_edge:          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %__validate_creds.exit

if.then.i:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__invalid_creds(ptr noundef nonnull %_cred, ptr noundef nonnull @.str.28, i32 noundef 286) #17
  br label %__validate_creds.exit

__validate_creds.exit:                            ; preds = %if.then.i, %do.body.__validate_creds.exit_crit_edge
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %_cred, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !937
  tail call void @llvm.prefetch.p0(ptr nonnull %_cred, i32 1, i32 3, i32 1) #17
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %_cred, ptr nonnull %_cred, i32 1, ptr nonnull elementtype(i32) %_cred) #17, !srcloc !938
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !939
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then1, label %__validate_creds.exit.if.end2_crit_edge

__validate_creds.exit.if.end2_crit_edge:          ; preds = %__validate_creds.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end2

if.then1:                                         ; preds = %__validate_creds.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__put_cred(ptr noundef nonnull %_cred) #17
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %__validate_creds.exit.if.end2_crit_edge, %entry.if.end2_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @groups_to_user(ptr noundef %dst, ptr nocapture noundef readonly %src) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i15 = and i32 %0, -16384
  %1 = inttoptr i32 %and.i15 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 99
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cred, align 16
  %user_ns2 = getelementptr inbounds %struct.cred, ptr %5, i32 0, i32 25
  %6 = ptrtoint ptr %user_ns2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %user_ns2, align 4
  %ngroups = getelementptr inbounds %struct.group_info, ptr %src, i32 0, i32 1
  %8 = ptrtoint ptr %ngroups to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ngroups, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp16 = icmp sgt i32 %9, 0
  br i1 %cmp16, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.017, 1
  %10 = ptrtoint ptr %ngroups to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ngroups, align 4
  %cmp = icmp slt i32 %inc, %11
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.cond.cleanup_crit_edge

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %entry.for.body_crit_edge
  %i.017 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %add.ptr = getelementptr i32, ptr %dst, i32 %i.017
  %arrayidx = getelementptr %struct.group_info, ptr %src, i32 0, i32 2, i32 %i.017
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %.unpack = load i32, ptr %arrayidx, align 4
  %13 = insertvalue [1 x i32] undef, i32 %.unpack, 0
  %call4 = tail call i32 @from_kgid_munged(ptr noundef %7, [1 x i32] %13) #17
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 1489) #17
  %14 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 4
  %16 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #13, !srcloc !898
  %and.i = and i32 %16, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %17 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %add.ptr, i32 %call4, i32 -1226833921) #17, !srcloc !940
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %16) #17, !srcloc !899
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not = icmp eq i32 %17, 0
  br i1 %tobool.not, label %for.cond, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %for.cond.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.cond.cleanup_crit_edge ], [ -14, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_socket_getpeersec_stream(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sock_getbindtodevice(ptr nocapture noundef readonly %sk, ptr noundef %optval, ptr noundef %optlen, i32 noundef %len) unnamed_addr #0 align 64 {
entry:
  %devname = alloca [16 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %0 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_net.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %devname) #17
  %skc_bound_dev_if = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 6
  %2 = call ptr @memset(ptr %devname, i32 255, i32 16)
  %3 = ptrtoint ptr %skc_bound_dev_if to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %skc_bound_dev_if, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %entry.zero_crit_edge, label %if.end

entry.zero_crit_edge:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %zero

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %len)
  %cmp1 = icmp slt i32 %len, 16
  br i1 %cmp1, label %if.end.out_crit_edge, label %if.end3

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end3:                                          ; preds = %if.end
  %call6 = call i32 @netdev_get_name(ptr noundef %1, ptr noundef nonnull %devname, i32 noundef %4) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end8, label %if.end3.out_crit_edge

if.end3.out_crit_edge:                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end8:                                          ; preds = %if.end3
  %call10 = call i32 @strlen(ptr noundef nonnull %devname) #22
  %add = add i32 %call10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %add)
  %cmp1.i.i = icmp ugt i32 %add, 16
  br i1 %cmp1.i.i, label %if.then3.i.i, label %if.then.i.i.i, !prof !889

if.then3.i.i:                                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.18, i32 noundef 214, i32 noundef 9, ptr noundef nonnull @.str.19, i32 noundef 16, i32 noundef %add) #17
  br label %out

if.then.i.i.i:                                    ; preds = %if.end8
  call void @__check_object_size(ptr noundef nonnull %devname, i32 noundef %add, i1 noundef zeroext true) #17
  call void @__might_fault(ptr noundef nonnull @.str.20, i32 noundef 174) #17
  %call.i.i = call zeroext i1 @should_fail_usercopy() #17
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %5 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %optval, i32 %add, i32 -1226833920) #20, !srcloc !932
  %asmresult.i.i = extractvalue { i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %devname, i32 noundef %add) #17
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %optval, ptr noundef nonnull %devname, i32 noundef %add) #17
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %add, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %add, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool13.not = icmp eq i32 %n.addr.0.i, 0
  br i1 %tobool13.not, label %copy_to_user.exit.zero_crit_edge, label %copy_to_user.exit.out_crit_edge

copy_to_user.exit.out_crit_edge:                  ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

copy_to_user.exit.zero_crit_edge:                 ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %zero

zero:                                             ; preds = %copy_to_user.exit.zero_crit_edge, %entry.zero_crit_edge
  %len.addr.0 = phi i32 [ %add, %copy_to_user.exit.zero_crit_edge ], [ 0, %entry.zero_crit_edge ]
  call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 717) #17
  %6 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 4
  %8 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #13, !srcloc !898
  %and.i = and i32 %8, -13
  %or.i = or i32 %and.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #17, !srcloc !899
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  %9 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %optlen, i32 %len.addr.0, i32 -1226833921) #17, !srcloc !941
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %8) #17, !srcloc !899
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !900
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool18.not = icmp eq i32 %9, 0
  %spec.select = select i1 %tobool18.not, i32 0, i32 -14
  br label %out

out:                                              ; preds = %zero, %copy_to_user.exit.out_crit_edge, %if.then3.i.i, %if.end3.out_crit_edge, %if.end.out_crit_edge
  %ret.0 = phi i32 [ -22, %if.end.out_crit_edge ], [ %call6, %if.end3.out_crit_edge ], [ -14, %copy_to_user.exit.out_crit_edge ], [ %spec.select, %zero ], [ -14, %if.then3.i.i ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %devname) #17
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_get_filter(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_get_meminfo(ptr noundef %sk, ptr nocapture noundef writeonly %mem) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = call ptr @memset(ptr %mem, i32 0, i32 36)
  %sk_backlog.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i, i32 noundef 4) #17
  %1 = ptrtoint ptr %sk_backlog.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %sk_backlog.i, align 4
  %3 = ptrtoint ptr %mem to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %mem, align 4
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %4 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %sk_rcvbuf, align 8
  %arrayidx1 = getelementptr i32, ptr %mem, i32 1
  %6 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %arrayidx1, align 4
  %sk_wmem_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc.i, i32 noundef 4) #17
  %7 = ptrtoint ptr %sk_wmem_alloc.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %sk_wmem_alloc.i, align 4
  %sub.i = add i32 %8, -1
  %arrayidx3 = getelementptr i32, ptr %mem, i32 2
  %9 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %sub.i, ptr %arrayidx3, align 4
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %10 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %sk_sndbuf, align 4
  %arrayidx7 = getelementptr i32, ptr %mem, i32 3
  %12 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %arrayidx7, align 4
  %sk_forward_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %13 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sk_forward_alloc, align 8
  %arrayidx8 = getelementptr i32, ptr %mem, i32 4
  %15 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %arrayidx8, align 4
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %16 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %sk_wmem_queued, align 8
  %arrayidx12 = getelementptr i32, ptr %mem, i32 5
  %18 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %arrayidx12, align 4
  %sk_omem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  %19 = ptrtoint ptr %sk_omem_alloc to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %sk_omem_alloc, align 4
  %arrayidx14 = getelementptr i32, ptr %mem, i32 6
  %21 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %arrayidx14, align 4
  %len = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9, i32 1
  %22 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %len, align 4
  %arrayidx18 = getelementptr i32, ptr %mem, i32 7
  %24 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx18, align 4
  %sk_drops = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 5
  %call.i.i38 = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_drops, i32 noundef 4) #17
  %25 = ptrtoint ptr %sk_drops to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %sk_drops, align 4
  %arrayidx20 = getelementptr i32, ptr %mem, i32 8
  %27 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx20, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @sock_gen_cookie(ptr noundef %sk) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %3, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !942
  %call = tail call i64 @__sock_gen_cookie(ptr noundef %sk) #17
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !943
  %4 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i4 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i4 to ptr
  %preempt_count.i.i5 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i5, align 4
  %sub.i = add i32 %7, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i5, align 4
  ret i64 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sk_alloc(ptr noundef %net, i32 noundef %family, i32 noundef %priority, ptr noundef %prot, i32 noundef %kern) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %or = or i32 %priority, 256
  %call = tail call fastcc ptr @sk_prot_alloc(ptr noundef %prot, i32 noundef %or, i32 noundef %family)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.if.end22_crit_edge, label %if.then

entry.if.end22_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end22

if.then:                                          ; preds = %entry
  %conv = trunc i32 %family to i16
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 3
  %0 = ptrtoint ptr %skc_family to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 %conv, ptr %skc_family, align 8
  %sk_prot_creator = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 49
  %1 = ptrtoint ptr %sk_prot_creator to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %prot, ptr %sk_prot_creator, align 4
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 8
  %2 = ptrtoint ptr %skc_prot to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %prot, ptr %skc_prot, align 8
  %conv2 = trunc i32 %kern to i8
  %sk_kern_sock = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 43
  %3 = ptrtoint ptr %sk_kern_sock to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load = load i8, ptr %sk_kern_sock, align 8
  %bf.value = shl i8 %conv2, 6
  %bf.shl = and i8 %bf.value, 64
  %bf.clear = and i8 %bf.load, -65
  %bf.set = or i8 %bf.clear, %bf.shl
  store i8 %bf.set, ptr %sk_kern_sock, align 8
  tail call fastcc void @sock_lock_init(ptr noundef nonnull %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %kern)
  %tobool3.not = icmp eq i32 %kern, 0
  %skc_net_refcnt = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 5
  %4 = ptrtoint ptr %skc_net_refcnt to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load6 = load i8, ptr %skc_net_refcnt, align 1
  %bf.shl8 = select i1 %tobool3.not, i8 2, i8 0
  %bf.clear9 = and i8 %bf.load6, -3
  %bf.set10 = or i8 %bf.clear9, %bf.shl8
  store i8 %bf.set10, ptr %skc_net_refcnt, align 1
  br i1 %tobool3.not, label %if.then18, label %if.then.if.end_crit_edge, !prof !888

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then18:                                        ; preds = %if.then
  %ns_tracker = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 86
  %count.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 14, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %count.i.i, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i.i, ptr %count.i.i, i32 1, ptr elementtype(i32) %count.i.i) #17, !srcloc !944
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then18.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !889

if.then18.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then18
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %6 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %.not.i.i.i.i.i = icmp sgt i32 %6, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.get_net_track.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.get_net_track.exit_crit_edge:   ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %get_net_track.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then18.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then18.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %get_net_track.exit

get_net_track.exit:                               ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.get_net_track.exit_crit_edge
  %refcnt_tracker.i.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 15
  %call.i.i = tail call i32 @ref_tracker_alloc(ptr noundef %refcnt_tracker.i.i, ptr noundef %ns_tracker, i32 noundef %priority) #17
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !918
  %prot_inuse.i = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 29, i32 2
  %8 = ptrtoint ptr %prot_inuse.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prot_inuse.i, align 8
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %16, %10
  %17 = inttoptr i32 %add.i to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add13.i = add i32 %19, 1
  store i32 %add13.i, ptr %17, align 4
  %20 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !919
  %and.i.i.i = and i32 %20, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %get_net_track.exit.sock_inuse_add.exit_crit_edge, !prof !889

get_net_track.exit.sock_inuse_add.exit_crit_edge: ; preds = %get_net_track.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_inuse_add.exit

if.then.i:                                        ; preds = %get_net_track.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %sock_inuse_add.exit

sock_inuse_add.exit:                              ; preds = %if.then.i, %get_net_track.exit.sock_inuse_add.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #17, !srcloc !920
  br label %if.end

if.end:                                           ; preds = %sock_inuse_add.exit, %if.then.if.end_crit_edge
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 9
  %21 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %net, ptr %skc_net.i, align 4
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 23
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  %22 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile i32 1, ptr %sk_wmem_alloc, align 4
  tail call void @mem_cgroup_sk_alloc(ptr noundef nonnull %call) #17
  %sk_cgrp_data = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 74
  tail call void @cgroup_sk_alloc(ptr noundef %sk_cgrp_data) #17
  tail call fastcc void @sock_update_classid(ptr noundef %sk_cgrp_data)
  tail call fastcc void @sock_update_netprioidx(ptr noundef %sk_cgrp_data)
  %skc_tx_queue_mapping.i = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 16
  %23 = ptrtoint ptr %skc_tx_queue_mapping.i to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 -1, ptr %skc_tx_queue_mapping.i, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.end, %entry.if.end22_crit_edge
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @sk_prot_alloc(ptr nocapture noundef readonly %prot, i32 noundef %priority, i32 noundef %family) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %slab1 = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 42
  %0 = ptrtoint ptr %slab1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %slab1, align 4
  %cmp.not = icmp eq ptr %1, null
  br i1 %cmp.not, label %if.end8.i, label %if.then

if.then:                                          ; preds = %entry
  %and = and i32 %priority, -257
  %call = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef nonnull %1, i32 noundef %and) #17
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %if.then
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @init_on_alloc, i32 1), ptr blockaddress(@sk_prot_alloc, %2)) #17
          to label %if.then4 [label %2], !srcloc !891

2:                                                ; preds = %if.end
  %and17.i = and i32 %priority, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool1518.i.not = icmp eq i32 %and17.i, 0
  br i1 %tobool1518.i.not, label %.if.then10_crit_edge, label %.if.then4_crit_edge

.if.then4_crit_edge:                              ; preds = %2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4

.if.then10_crit_edge:                             ; preds = %2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then10

if.then4:                                         ; preds = %.if.then4_crit_edge, %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %obj_size = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 43
  %3 = ptrtoint ptr %obj_size to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %obj_size, align 4
  %5 = call ptr @memset(ptr %call, i32 0, i32 84)
  %pprev.i = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 15, i32 0, i32 1
  %sub.i = add i32 %4, -88
  %6 = call ptr @memset(ptr %pprev.i, i32 0, i32 %sub.i)
  br label %if.then10

if.end8.i:                                        ; preds = %entry
  %obj_size6 = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 43
  %7 = ptrtoint ptr %obj_size6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %obj_size6, align 4
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %8, i32 noundef %priority) #23
  %cmp9.not = icmp eq ptr %call9.i, null
  br i1 %cmp9.not, label %if.end8.i.cleanup_crit_edge, label %if.end8.i.if.then10_crit_edge

if.end8.i.if.then10_crit_edge:                    ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then10

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then10:                                        ; preds = %if.end8.i.if.then10_crit_edge, %if.then4, %.if.then10_crit_edge
  %sk.043 = phi ptr [ %call9.i, %if.end8.i.if.then10_crit_edge ], [ %call, %.if.then10_crit_edge ], [ %call, %if.then4 ]
  %call11 = tail call i32 @security_sk_alloc(ptr noundef nonnull %sk.043, i32 noundef %family, i32 noundef %priority) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %if.then10.out_free_crit_edge

if.then10.out_free_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_free

if.end14:                                         ; preds = %if.then10
  %owner = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 51
  %9 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %owner, align 4
  %call15 = tail call zeroext i1 @try_module_get(ptr noundef %10) #17
  br i1 %call15, label %if.end14.cleanup_crit_edge, label %out_free_sec

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

out_free_sec:                                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @security_sk_free(ptr noundef nonnull %sk.043) #17
  br label %out_free

out_free:                                         ; preds = %out_free_sec, %if.then10.out_free_crit_edge
  br i1 %cmp.not, label %if.else21, label %if.then20

if.then20:                                        ; preds = %out_free
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kmem_cache_free(ptr noundef nonnull %1, ptr noundef nonnull %sk.043) #17
  br label %cleanup

if.else21:                                        ; preds = %out_free
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kfree(ptr noundef nonnull %sk.043) #17
  br label %cleanup

cleanup:                                          ; preds = %if.else21, %if.then20, %if.end14.cleanup_crit_edge, %if.end8.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.then.cleanup_crit_edge ], [ %sk.043, %if.end14.cleanup_crit_edge ], [ null, %if.end8.i.cleanup_crit_edge ], [ null, %if.else21 ], [ null, %if.then20 ]
  ret ptr %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sock_lock_init(ptr noundef %sk) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %sk_kern_sock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %0 = ptrtoint ptr %sk_kern_sock to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %sk_kern_sock, align 8
  %1 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  %sk_lock29 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %owned30 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned30 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %owned30, align 4
  %wq33 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 2
  br i1 %tobool.not, label %do.body28, label %do.body

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__init_waitqueue_head(ptr noundef %wq33, ptr noundef nonnull @.str.29, ptr noundef nonnull @sock_lock_init.__key) #17
  tail call void @__raw_spin_lock_init(ptr noundef %sk_lock29, ptr noundef nonnull @.str.31, ptr noundef nonnull @sock_lock_init.__key.30, i16 noundef signext 3) #17
  tail call void @debug_check_no_locks_freed(ptr noundef %sk_lock29, i32 noundef 128) #17
  %dep_map = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %3 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %skc_family, align 8
  %idxprom = zext i16 %4 to i32
  %arrayidx = getelementptr [47 x ptr], ptr @af_family_kern_slock_key_strings, i32 0, i32 %idxprom
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %add.ptr = getelementptr %struct.lock_class_key, ptr @af_family_kern_slock_keys, i32 %idxprom
  %wait_type_inner = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4, i32 4
  %7 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %wait_type_inner, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map, ptr noundef %6, ptr noundef %add.ptr, i32 noundef 0, i8 noundef zeroext %8, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %dep_map18 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %9 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %skc_family, align 8
  %idxprom21 = zext i16 %10 to i32
  %arrayidx22 = getelementptr [47 x ptr], ptr @af_family_kern_key_strings, i32 0, i32 %idxprom21
  %11 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx22, align 4
  %add.ptr26 = getelementptr %struct.lock_class_key, ptr @af_family_kern_keys, i32 %idxprom21
  tail call void @lockdep_init_map_type(ptr noundef %dep_map18, ptr noundef %12, ptr noundef %add.ptr26, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  br label %if.end

do.body28:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__init_waitqueue_head(ptr noundef %wq33, ptr noundef nonnull @.str.29, ptr noundef nonnull @sock_lock_init.__key.32) #17
  tail call void @__raw_spin_lock_init(ptr noundef %sk_lock29, ptr noundef nonnull @.str.31, ptr noundef nonnull @sock_lock_init.__key.33, i16 noundef signext 3) #17
  tail call void @debug_check_no_locks_freed(ptr noundef %sk_lock29, i32 noundef 128) #17
  %dep_map43 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %skc_family45 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %13 = ptrtoint ptr %skc_family45 to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %skc_family45, align 8
  %idxprom46 = zext i16 %14 to i32
  %arrayidx47 = getelementptr [47 x ptr], ptr @af_family_slock_key_strings, i32 0, i32 %idxprom46
  %15 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx47, align 4
  %add.ptr51 = getelementptr %struct.lock_class_key, ptr @af_family_slock_keys, i32 %idxprom46
  %wait_type_inner55 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4, i32 4
  %17 = ptrtoint ptr %wait_type_inner55 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %wait_type_inner55, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map43, ptr noundef %16, ptr noundef %add.ptr51, i32 noundef 0, i8 noundef zeroext %18, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %dep_map61 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %19 = ptrtoint ptr %skc_family45 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %skc_family45, align 8
  %idxprom64 = zext i16 %20 to i32
  %arrayidx65 = getelementptr [47 x ptr], ptr @af_family_key_strings, i32 0, i32 %idxprom64
  %21 = ptrtoint ptr %arrayidx65 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx65, align 4
  %add.ptr69 = getelementptr %struct.lock_class_key, ptr @af_family_keys, i32 %idxprom64
  tail call void @lockdep_init_map_type(ptr noundef %dep_map61, ptr noundef %22, ptr noundef %add.ptr69, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  br label %if.end

if.end:                                           ; preds = %do.body28, %do.body
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_sk_alloc(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_sk_alloc(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sock_update_classid(ptr noundef %skcd) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task, align 8
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i2 = and i32 %5, 15728640
  %6 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i8.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i8.i to ptr
  %preempt_count.i9.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i9.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i9.i, align 4
  %and2.i = and i32 %9, 983040
  %or.i = or i32 %and2.i, %and.i2
  %10 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i10.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i10.i to ptr
  %preempt_count.i11.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i11.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i11.i, align 4
  %and4.i = and i32 %13, 65280
  %or5.i = or i32 %or.i, %and4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5.i)
  %tobool.not.i = icmp eq i32 %or5.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.task_cls_classid.exit_crit_edge

entry.task_cls_classid.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_cls_classid.exit

if.end.i:                                         ; preds = %entry
  %14 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %17, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i.i, label %if.end.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.end.i.rcu_read_lock.exit.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.end.i.rcu_read_lock.exit.i_crit_edge
  %cgroups.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 164
  %18 = ptrtoint ptr %cgroups.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %cgroups.i.i, align 16
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i12.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i12.i, label %lor.lhs.false.i.i, label %rcu_read_lock.exit.i.task_css.exit.i_crit_edge

rcu_read_lock.exit.i.task_css.exit.i_crit_edge:   ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

lor.lhs.false.i.i:                                ; preds = %rcu_read_lock.exit.i
  %call.i18.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i.i)
  %tobool3.not.i.i = icmp eq i32 %call.i18.i.i, 0
  br i1 %tobool3.not.i.i, label %lor.lhs.false4.i.i, label %lor.lhs.false.i.i.task_css.exit.i_crit_edge

lor.lhs.false.i.i.task_css.exit.i_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

lor.lhs.false4.i.i:                               ; preds = %lor.lhs.false.i.i
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool5.not.i.i, label %lor.lhs.false6.i.i, label %lor.lhs.false4.i.i.task_css.exit.i_crit_edge

lor.lhs.false4.i.i.task_css.exit.i_crit_edge:     ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

lor.lhs.false6.i.i:                               ; preds = %lor.lhs.false4.i.i
  %call7.i.i = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %land.lhs.true.i13.i, label %lor.lhs.false6.i.i.task_css.exit.i_crit_edge

lor.lhs.false6.i.i.task_css.exit.i_crit_edge:     ; preds = %lor.lhs.false6.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

land.lhs.true.i13.i:                              ; preds = %lor.lhs.false6.i.i
  %call9.i.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %tobool10.not.i.i = icmp eq i32 %call9.i.i, 0
  br i1 %tobool10.not.i.i, label %land.lhs.true.i13.i.task_css.exit.i_crit_edge, label %land.lhs.true11.i.i

land.lhs.true.i13.i.task_css.exit.i_crit_edge:    ; preds = %land.lhs.true.i13.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

land.lhs.true11.i.i:                              ; preds = %land.lhs.true.i13.i
  %.b17.i.i = load i1, ptr @task_css.__warned, align 1
  br i1 %.b17.i.i, label %land.lhs.true11.i.i.task_css.exit.i_crit_edge, label %if.then.i14.i

land.lhs.true11.i.i.task_css.exit.i_crit_edge:    ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

if.then.i14.i:                                    ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @task_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.222, i32 noundef 494, ptr noundef nonnull @.str.2) #17
  br label %task_css.exit.i

task_css.exit.i:                                  ; preds = %if.then.i14.i, %land.lhs.true11.i.i.task_css.exit.i_crit_edge, %land.lhs.true.i13.i.task_css.exit.i_crit_edge, %lor.lhs.false6.i.i.task_css.exit.i_crit_edge, %lor.lhs.false4.i.i.task_css.exit.i_crit_edge, %lor.lhs.false.i.i.task_css.exit.i_crit_edge, %rcu_read_lock.exit.i.task_css.exit.i_crit_edge
  %arrayidx.i.i = getelementptr [14 x ptr], ptr %19, i32 0, i32 7
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx.i.i, align 4
  %classid7.i = getelementptr inbounds %struct.cgroup_cls_state, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %classid7.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %classid7.i, align 8
  %call.i15.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i15.i, label %task_css.exit.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i18.i

task_css.exit.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %task_css.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit.i

land.lhs.true.i18.i:                              ; preds = %task_css.exit.i
  %call1.i16.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i16.i)
  %tobool.not.i17.i = icmp eq i32 %call1.i16.i, 0
  br i1 %tobool.not.i17.i, label %land.lhs.true.i18.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i20.i

land.lhs.true.i18.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i20.i:                             ; preds = %land.lhs.true.i18.i
  %.b4.i19.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i19.i, label %land.lhs.true2.i20.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i21.i

land.lhs.true2.i20.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i20.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit.i

if.then.i21.i:                                    ; preds = %land.lhs.true2.i20.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i21.i, %land.lhs.true2.i20.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i18.i.rcu_read_unlock.exit.i_crit_edge, %task_css.exit.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %26 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i22.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i22.i to ptr
  %preempt_count.i.i.i.i23.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i23.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i23.i, align 4
  %sub.i.i.i.i = add i32 %29, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i23.i, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  br label %task_cls_classid.exit

task_cls_classid.exit:                            ; preds = %rcu_read_unlock.exit.i, %entry.task_cls_classid.exit_crit_edge
  %retval.0.i = phi i32 [ %25, %rcu_read_unlock.exit.i ], [ 0, %entry.task_cls_classid.exit_crit_edge ]
  %classid3.i = getelementptr inbounds %struct.sock_cgroup_data, ptr %skcd, i32 0, i32 1
  %30 = ptrtoint ptr %classid3.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile i32 %retval.0.i, ptr %classid3.i, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sock_update_netprioidx(ptr noundef %skcd) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i8 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i8 to ptr
  %preempt_count.i9 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i9 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i9, align 4
  %and2 = and i32 %7, 983040
  %or = or i32 %and2, %and
  %8 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i10 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i10 to ptr
  %preempt_count.i11 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i11, align 4
  %and4 = and i32 %11, 65280
  %or5 = or i32 %or, %and4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5)
  %tobool.not = icmp eq i32 %or5, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %12 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task, align 8
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %17, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i.i, label %if.end.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.end.rcu_read_lock.exit.i_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.end
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.end.rcu_read_lock.exit.i_crit_edge
  %cgroups.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 164
  %18 = ptrtoint ptr %cgroups.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %cgroups.i.i, align 16
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i1.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i1.i, label %lor.lhs.false.i.i, label %rcu_read_lock.exit.i.task_css.exit.i_crit_edge

rcu_read_lock.exit.i.task_css.exit.i_crit_edge:   ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

lor.lhs.false.i.i:                                ; preds = %rcu_read_lock.exit.i
  %call.i18.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i.i)
  %tobool3.not.i.i = icmp eq i32 %call.i18.i.i, 0
  br i1 %tobool3.not.i.i, label %lor.lhs.false4.i.i, label %lor.lhs.false.i.i.task_css.exit.i_crit_edge

lor.lhs.false.i.i.task_css.exit.i_crit_edge:      ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

lor.lhs.false4.i.i:                               ; preds = %lor.lhs.false.i.i
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i.i, align 4
  %and.i.i12 = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i12)
  %tobool5.not.i.i = icmp eq i32 %and.i.i12, 0
  br i1 %tobool5.not.i.i, label %lor.lhs.false6.i.i, label %lor.lhs.false4.i.i.task_css.exit.i_crit_edge

lor.lhs.false4.i.i.task_css.exit.i_crit_edge:     ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

lor.lhs.false6.i.i:                               ; preds = %lor.lhs.false4.i.i
  %call7.i.i = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %land.lhs.true.i2.i, label %lor.lhs.false6.i.i.task_css.exit.i_crit_edge

lor.lhs.false6.i.i.task_css.exit.i_crit_edge:     ; preds = %lor.lhs.false6.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

land.lhs.true.i2.i:                               ; preds = %lor.lhs.false6.i.i
  %call9.i.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %tobool10.not.i.i = icmp eq i32 %call9.i.i, 0
  br i1 %tobool10.not.i.i, label %land.lhs.true.i2.i.task_css.exit.i_crit_edge, label %land.lhs.true11.i.i

land.lhs.true.i2.i.task_css.exit.i_crit_edge:     ; preds = %land.lhs.true.i2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

land.lhs.true11.i.i:                              ; preds = %land.lhs.true.i2.i
  %.b17.i.i = load i1, ptr @task_css.__warned, align 1
  br i1 %.b17.i.i, label %land.lhs.true11.i.i.task_css.exit.i_crit_edge, label %if.then.i3.i

land.lhs.true11.i.i.task_css.exit.i_crit_edge:    ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_css.exit.i

if.then.i3.i:                                     ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @task_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.222, i32 noundef 494, ptr noundef nonnull @.str.2) #17
  br label %task_css.exit.i

task_css.exit.i:                                  ; preds = %if.then.i3.i, %land.lhs.true11.i.i.task_css.exit.i_crit_edge, %land.lhs.true.i2.i.task_css.exit.i_crit_edge, %lor.lhs.false6.i.i.task_css.exit.i_crit_edge, %lor.lhs.false4.i.i.task_css.exit.i_crit_edge, %lor.lhs.false.i.i.task_css.exit.i_crit_edge, %rcu_read_lock.exit.i.task_css.exit.i_crit_edge
  %arrayidx.i.i = getelementptr [14 x ptr], ptr %19, i32 0, i32 9
  %22 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx.i.i, align 4
  %id.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %23, i32 0, i32 6
  %24 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %id.i, align 8
  %call.i4.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i4.i, label %task_css.exit.i.task_netprioidx.exit_crit_edge, label %land.lhs.true.i7.i

task_css.exit.i.task_netprioidx.exit_crit_edge:   ; preds = %task_css.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_netprioidx.exit

land.lhs.true.i7.i:                               ; preds = %task_css.exit.i
  %call1.i5.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i5.i)
  %tobool.not.i6.i = icmp eq i32 %call1.i5.i, 0
  br i1 %tobool.not.i6.i, label %land.lhs.true.i7.i.task_netprioidx.exit_crit_edge, label %land.lhs.true2.i9.i

land.lhs.true.i7.i.task_netprioidx.exit_crit_edge: ; preds = %land.lhs.true.i7.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_netprioidx.exit

land.lhs.true2.i9.i:                              ; preds = %land.lhs.true.i7.i
  %.b4.i8.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i8.i, label %land.lhs.true2.i9.i.task_netprioidx.exit_crit_edge, label %if.then.i10.i

land.lhs.true2.i9.i.task_netprioidx.exit_crit_edge: ; preds = %land.lhs.true2.i9.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %task_netprioidx.exit

if.then.i10.i:                                    ; preds = %land.lhs.true2.i9.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %task_netprioidx.exit

task_netprioidx.exit:                             ; preds = %if.then.i10.i, %land.lhs.true2.i9.i.task_netprioidx.exit_crit_edge, %land.lhs.true.i7.i.task_netprioidx.exit_crit_edge, %task_css.exit.i.task_netprioidx.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %26 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i11.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i11.i to ptr
  %preempt_count.i.i.i.i12.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i12.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i12.i, align 4
  %sub.i.i.i.i = add i32 %29, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i12.i, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  %conv = trunc i32 %25 to i16
  %prioidx3.i = getelementptr inbounds %struct.sock_cgroup_data, ptr %skcd, i32 0, i32 2
  %30 = ptrtoint ptr %prioidx3.i to i32
  call void @__asan_store2_noabort(i32 %30)
  store volatile i16 %conv, ptr %prioidx3.i, align 4
  br label %return

return:                                           ; preds = %task_netprioidx.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_destruct(ptr noundef %sk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %3 = and i32 %2, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not = icmp eq i32 %3, 0
  %defer_list = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 10
  %4 = ptrtoint ptr %defer_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %defer_list, align 4
  %cmp.i = icmp eq ptr %5, null
  br i1 %cmp.i, label %entry.if.end30_crit_edge, label %land.rhs

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30

land.rhs:                                         ; preds = %entry
  %.b58 = load i1, ptr @sk_destruct.__already_done, align 1
  br i1 %.b58, label %land.rhs.if.end30_crit_edge, label %if.then, !prof !888

land.rhs.if.end30_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sk_destruct.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2052, i32 noundef 9, ptr noundef null) #17
  br label %if.end30

if.end30:                                         ; preds = %if.then, %land.rhs.if.end30_crit_edge, %entry.if.end30_crit_edge
  %6 = ptrtoint ptr %defer_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %defer_list, align 4
  %cmp.i.i = icmp eq ptr %7, null
  br i1 %cmp.i.i, label %if.end30.sk_defer_free_flush.exit_crit_edge, label %if.end.i

if.end30.sk_defer_free_flush.exit_crit_edge:      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_defer_free_flush.exit

if.end.i:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__sk_defer_free_flush(ptr noundef %sk) #17
  br label %sk_defer_free_flush.exit

sk_defer_free_flush.exit:                         ; preds = %if.end.i, %if.end30.sk_defer_free_flush.exit_crit_edge
  %sk_reuseport_cb = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 83
  %8 = ptrtoint ptr %sk_reuseport_cb to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %sk_reuseport_cb, align 8
  %tobool43.not = icmp eq ptr %9, null
  br i1 %tobool43.not, label %if.end45, label %if.then44

if.then44:                                        ; preds = %sk_defer_free_flush.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @reuseport_detach_sock(ptr noundef %sk) #17
  br label %if.then47

if.end45:                                         ; preds = %sk_defer_free_flush.exit
  br i1 %tobool.i.not, label %if.else, label %if.end45.if.then47_crit_edge

if.end45.if.then47_crit_edge:                     ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then47

if.then47:                                        ; preds = %if.end45.if.then47_crit_edge, %if.then44
  %sk_rcu = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 85
  tail call void @call_rcu(ptr noundef %sk_rcu, ptr noundef nonnull @__sk_destruct) #17
  br label %if.end49

if.else:                                          ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #19
  %sk_rcu48 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 85
  tail call void @__sk_destruct(ptr noundef %sk_rcu48)
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then47
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @reuseport_detach_sock(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__sk_destruct(ptr noundef %head) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %head, i32 -944
  %sk_destruct = getelementptr i8, ptr %head, i32 -12
  %0 = ptrtoint ptr %sk_destruct to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_destruct, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %1(ptr noundef %add.ptr) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %sk_filter = getelementptr i8, ptr %head, i32 -532
  %2 = ptrtoint ptr %sk_filter to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %sk_filter, align 4
  %sk_wmem_alloc = getelementptr i8, ptr %head, i32 -500
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  %4 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %sk_wmem_alloc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.end.do.end13_crit_edge, label %lor.lhs.false

if.end.do.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

lor.lhs.false:                                    ; preds = %if.end
  %call4 = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true, label %lor.lhs.false.do.end13_crit_edge

lor.lhs.false.do.end13_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true.do.end13_crit_edge, label %land.lhs.true8

land.lhs.true.do.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

land.lhs.true8:                                   ; preds = %land.lhs.true
  %.b87 = load i1, ptr @__sk_destruct.__warned, align 1
  br i1 %.b87, label %land.lhs.true8.do.end13_crit_edge, label %if.then10

land.lhs.true8.do.end13_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

if.then10:                                        ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__sk_destruct.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2018, ptr noundef nonnull @.str.2) #17
  br label %do.end13

do.end13:                                         ; preds = %if.then10, %land.lhs.true8.do.end13_crit_edge, %land.lhs.true.do.end13_crit_edge, %lor.lhs.false.do.end13_crit_edge, %if.end.do.end13_crit_edge
  %tobool15.not = icmp eq ptr %3, null
  br i1 %tobool15.not, label %do.end13.if.end30_crit_edge, label %if.then16

do.end13.if.end30_crit_edge:                      ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30

if.then16:                                        ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @sk_filter_uncharge(ptr noundef %add.ptr, ptr noundef nonnull %3) #17
  %6 = ptrtoint ptr %sk_filter to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr null, ptr %sk_filter, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then16, %do.end13.if.end30_crit_edge
  %7 = getelementptr i8, ptr %head, i32 -864
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 8
  %and.i = and i32 %9, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end30.sock_disable_timestamp.exit_crit_edge, label %if.then.i

if.end30.sock_disable_timestamp.exit_crit_edge:   ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_disable_timestamp.exit

if.then.i:                                        ; preds = %if.end30
  %and2.i = and i32 %9, -32897
  %10 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %and2.i, ptr %7, align 8
  %skc_family.i.i = getelementptr i8, ptr %head, i32 -928
  %11 = ptrtoint ptr %skc_family.i.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %skc_family.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %12)
  %switch.i.i = icmp ugt i16 %12, 1
  br i1 %switch.i.i, label %if.then6.i, label %if.then.i.sock_disable_timestamp.exit_crit_edge

if.then.i.sock_disable_timestamp.exit_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_disable_timestamp.exit

if.then6.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_disable_timestamp() #17
  br label %sock_disable_timestamp.exit

sock_disable_timestamp.exit:                      ; preds = %if.then6.i, %if.then.i.sock_disable_timestamp.exit_crit_edge, %if.end30.sock_disable_timestamp.exit_crit_edge
  tail call void @bpf_sk_storage_free(ptr noundef %add.ptr) #17
  %sk_omem_alloc = getelementptr i8, ptr %head, i32 -512
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  %13 = ptrtoint ptr %sk_omem_alloc to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %sk_omem_alloc, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool32.not = icmp eq i32 %14, 0
  br i1 %tobool32.not, label %sock_disable_timestamp.exit.if.end46_crit_edge, label %do.body34

sock_disable_timestamp.exit.if.end46_crit_edge:   ; preds = %sock_disable_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end46

do.body34:                                        ; preds = %sock_disable_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__sk_destruct.__UNIQUE_ID_ddebug667, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__sk_destruct, %if.then40)) #17
          to label %if.end46 [label %if.then40], !srcloc !891

if.then40:                                        ; preds = %do.body34
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i88 = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  %15 = ptrtoint ptr %sk_omem_alloc to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %sk_omem_alloc, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__sk_destruct.__UNIQUE_ID_ddebug667, ptr noundef nonnull @.str.226, ptr noundef nonnull @.str.224, i32 noundef %16) #17
  br label %if.end46

if.end46:                                         ; preds = %if.then40, %do.body34, %sock_disable_timestamp.exit.if.end46_crit_edge
  %sk_frag = getelementptr i8, ptr %head, i32 -348
  %17 = ptrtoint ptr %sk_frag to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sk_frag, align 4
  %tobool47.not = icmp eq ptr %18, null
  br i1 %tobool47.not, label %if.end46.if.end53_crit_edge, label %if.then48

if.end46.if.end53_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end53

if.then48:                                        ; preds = %if.end46
  %19 = getelementptr inbounds %struct.page, ptr %18, i32 0, i32 1
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  %and.i.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !888

if.then.i.i:                                      ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i = add i32 %21, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %18 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %22, %if.end.i.i ]
  %23 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %23, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #17
  %24 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i.i.i.i = icmp eq i32 %25, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !889

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @dump_page(ptr noundef %23, ptr noundef nonnull @.str.372) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #17, !srcloc !945
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !937
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #17
  %26 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #17, !srcloc !938
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %26, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !939
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__sk_destruct, %if.then.i.i.i.i.i)) #17
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !891

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %23, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #17
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__put_page(ptr noundef %23) #17
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %27 = ptrtoint ptr %sk_frag to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %sk_frag, align 4
  br label %if.end53

if.end53:                                         ; preds = %put_page.exit, %if.end46.if.end53_crit_edge
  %sk_peer_cred = getelementptr i8, ptr %head, i32 -176
  %28 = ptrtoint ptr %sk_peer_cred to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sk_peer_cred, align 8
  %tobool.not.i89 = icmp eq ptr %29, null
  br i1 %tobool.not.i89, label %if.end53.put_cred.exit_crit_edge, label %do.body.i

if.end53.put_cred.exit_crit_edge:                 ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #19
  br label %put_cred.exit

do.body.i:                                        ; preds = %if.end53
  %call.i.i90 = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %29) #17
  br i1 %call.i.i90, label %if.then.i.i91, label %do.body.i.__validate_creds.exit.i_crit_edge, !prof !889

do.body.i.__validate_creds.exit.i_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__validate_creds.exit.i

if.then.i.i91:                                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__invalid_creds(ptr noundef nonnull %29, ptr noundef nonnull @.str.28, i32 noundef 286) #17
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i91, %do.body.i.__validate_creds.exit.i_crit_edge
  %call.i.i.i92 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %29, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !937
  tail call void @llvm.prefetch.p0(ptr nonnull %29, i32 1, i32 3, i32 1) #17
  %30 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %29, ptr nonnull %29, i32 1, ptr nonnull elementtype(i32) %29) #17, !srcloc !938
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %30, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !939
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then1.i, label %__validate_creds.exit.i.put_cred.exit_crit_edge

__validate_creds.exit.i.put_cred.exit_crit_edge:  ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %put_cred.exit

if.then1.i:                                       ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__put_cred(ptr noundef nonnull %29) #17
  br label %put_cred.exit

put_cred.exit:                                    ; preds = %if.then1.i, %__validate_creds.exit.i.put_cred.exit_crit_edge, %if.end53.put_cred.exit_crit_edge
  %sk_peer_pid = getelementptr i8, ptr %head, i32 -180
  %31 = ptrtoint ptr %sk_peer_pid to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %sk_peer_pid, align 4
  tail call void @put_pid(ptr noundef %32) #17
  %skc_net_refcnt = getelementptr i8, ptr %head, i32 -925
  %33 = ptrtoint ptr %skc_net_refcnt to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load = load i8, ptr %skc_net_refcnt, align 1
  %34 = and i8 %bf.load, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool54.not = icmp eq i8 %34, 0
  br i1 %tobool54.not, label %put_cred.exit.if.end63_crit_edge, label %if.then61, !prof !889

put_cred.exit.if.end63_crit_edge:                 ; preds = %put_cred.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end63

if.then61:                                        ; preds = %put_cred.exit
  %skc_net.i = getelementptr i8, ptr %head, i32 -908
  %35 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %skc_net.i, align 4
  %ns_tracker = getelementptr i8, ptr %head, i32 8
  %refcnt_tracker.i.i = getelementptr inbounds %struct.net, ptr %36, i32 0, i32 15
  %call.i.i93 = tail call i32 @ref_tracker_free(ptr noundef %refcnt_tracker.i.i, ptr noundef %ns_tracker) #17
  %count.i.i = getelementptr inbounds %struct.net, ptr %36, i32 0, i32 14, i32 3
  %call.i.i.i.i.i.i.i94 = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %count.i.i, i32 1, i32 3, i32 1) #17
  %37 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i.i, ptr %count.i.i, i32 1, ptr elementtype(i32) %count.i.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %37, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i95, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then61
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.if.end63_crit_edge, label %if.then10.i.i.i.i.i, !prof !888

if.end5.i.i.i.i.i.if.end63_crit_edge:             ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end63

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %count.i.i, i32 noundef 3) #17
  br label %if.end63

if.then.i.i95:                                    ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call void @__put_net(ptr noundef %36) #17
  br label %if.end63

if.end63:                                         ; preds = %if.then.i.i95, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.if.end63_crit_edge, %put_cred.exit.if.end63_crit_edge
  %sk_prot_creator = getelementptr i8, ptr %head, i32 -300
  %38 = ptrtoint ptr %sk_prot_creator to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %sk_prot_creator, align 4
  %owner1.i = getelementptr inbounds %struct.proto, ptr %39, i32 0, i32 51
  %40 = ptrtoint ptr %owner1.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %owner1.i, align 4
  %slab2.i = getelementptr inbounds %struct.proto, ptr %39, i32 0, i32 42
  %42 = ptrtoint ptr %slab2.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %slab2.i, align 4
  %sk_cgrp_data.i = getelementptr i8, ptr %head, i32 -52
  tail call void @cgroup_sk_free(ptr noundef %sk_cgrp_data.i) #17
  tail call void @mem_cgroup_sk_free(ptr noundef %add.ptr) #17
  tail call void @security_sk_free(ptr noundef %add.ptr) #17
  %cmp.not.i = icmp eq ptr %43, null
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i96

if.then.i96:                                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kmem_cache_free(ptr noundef nonnull %43, ptr noundef %add.ptr) #17
  br label %sk_prot_free.exit

if.else.i:                                        ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kfree(ptr noundef %add.ptr) #17
  br label %sk_prot_free.exit

sk_prot_free.exit:                                ; preds = %if.else.i, %if.then.i96
  tail call void @module_put(ptr noundef %41) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_free(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc, i32 1, i32 3, i32 1) #17
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc, ptr %sk_wmem_alloc, i32 1, ptr elementtype(i32) %sk_wmem_alloc) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end_crit_edge, label %if.then10.i.i.i, !prof !888

if.end5.i.i.i.if.end_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc, i32 noundef 3) #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call fastcc void @__sk_free(ptr noundef %sk)
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then10.i.i.i, %if.end5.i.i.i.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__sk_free(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_net_refcnt = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 5
  %0 = ptrtoint ptr %skc_net_refcnt to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %skc_net_refcnt, align 1
  %1 = and i8 %bf.load, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then, !prof !889

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %2 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skc_net.i, align 4
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !918
  %prot_inuse.i = getelementptr inbounds %struct.net, ptr %3, i32 0, i32 29, i32 2
  %5 = ptrtoint ptr %prot_inuse.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prot_inuse.i, align 8
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %13, %7
  %14 = inttoptr i32 %add.i to ptr
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %add13.i = add i32 %16, -1
  store i32 %add13.i, ptr %14, align 4
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !919
  %and.i.i.i = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then.sock_inuse_add.exit_crit_edge, !prof !889

if.then.sock_inuse_add.exit_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_inuse_add.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %sock_inuse_add.exit

sock_inuse_add.exit:                              ; preds = %if.then.i, %if.then.sock_inuse_add.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %4) #17, !srcloc !920
  br label %if.end

if.end:                                           ; preds = %sock_inuse_add.exit, %entry.if.end_crit_edge
  %18 = ptrtoint ptr %skc_net_refcnt to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load5 = load i8, ptr %skc_net_refcnt, align 1
  %19 = and i8 %bf.load5, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool8.not = icmp eq i8 %19, 0
  br i1 %tobool8.not, label %if.end.if.else_crit_edge, label %land.rhs

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.rhs:                                         ; preds = %if.end
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %20 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %skc_net.i.i, align 4
  %skc_family.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %22 = ptrtoint ptr %skc_family.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %skc_family.i.i, align 8
  %24 = zext i16 %23 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.503)
  switch i16 %23, label %land.rhs.if.else_crit_edge [
    i16 2, label %sw.bb.i.i
    i16 10, label %sw.bb6.i.i
  ]

land.rhs.if.else_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

sw.bb.i.i:                                        ; preds = %land.rhs
  %sk_type.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %25 = ptrtoint ptr %sk_type.i.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %sk_type.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %26)
  %cmp.i.i = icmp eq i16 %26, 3
  br i1 %cmp.i.i, label %sw.bb.i.i.if.else_crit_edge, label %if.end.i.i

sw.bb.i.i.if.else_crit_edge:                      ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.end.i.i:                                       ; preds = %sw.bb.i.i
  %sk_protocol.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %27 = ptrtoint ptr %sk_protocol.i.i to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %sk_protocol.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 17, i16 %28)
  %switch.selectcmp.i.i = icmp eq i16 %28, 17
  %switch.select.i.i = select i1 %switch.selectcmp.i.i, i32 2, i32 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %28)
  %switch.selectcmp23.i.i = icmp eq i16 %28, 6
  br i1 %switch.selectcmp23.i.i, label %if.end.i.i.land.lhs.true.i_crit_edge, label %if.end.i.i.sock_diag_destroy_group.exit.i_crit_edge

if.end.i.i.sock_diag_destroy_group.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_diag_destroy_group.exit.i

if.end.i.i.land.lhs.true.i_crit_edge:             ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true.i

sw.bb6.i.i:                                       ; preds = %land.rhs
  %sk_type7.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %29 = ptrtoint ptr %sk_type7.i.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %sk_type7.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 3, i16 %30)
  %cmp9.i.i = icmp eq i16 %30, 3
  br i1 %cmp9.i.i, label %sw.bb6.i.i.if.else_crit_edge, label %if.end12.i.i

sw.bb6.i.i.if.else_crit_edge:                     ; preds = %sw.bb6.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.end12.i.i:                                     ; preds = %sw.bb6.i.i
  %sk_protocol13.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %31 = ptrtoint ptr %sk_protocol13.i.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %sk_protocol13.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 17, i16 %32)
  %switch.selectcmp25.i.i = icmp eq i16 %32, 17
  %switch.select26.i.i = select i1 %switch.selectcmp25.i.i, i32 4, i32 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %32)
  %switch.selectcmp27.i.i = icmp eq i16 %32, 6
  br i1 %switch.selectcmp27.i.i, label %if.end12.i.i.land.lhs.true.i_crit_edge, label %if.end12.i.i.sock_diag_destroy_group.exit.i_crit_edge

if.end12.i.i.sock_diag_destroy_group.exit.i_crit_edge: ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_diag_destroy_group.exit.i

if.end12.i.i.land.lhs.true.i_crit_edge:           ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true.i

sock_diag_destroy_group.exit.i:                   ; preds = %if.end12.i.i.sock_diag_destroy_group.exit.i_crit_edge, %if.end.i.i.sock_diag_destroy_group.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %switch.select.i.i, %if.end.i.i.sock_diag_destroy_group.exit.i_crit_edge ], [ %switch.select26.i.i, %if.end12.i.i.sock_diag_destroy_group.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %cmp.not.i = icmp eq i32 %retval.0.i.i, 0
  br i1 %cmp.not.i, label %sock_diag_destroy_group.exit.i.if.else_crit_edge, label %sock_diag_destroy_group.exit.i.land.lhs.true.i_crit_edge

sock_diag_destroy_group.exit.i.land.lhs.true.i_crit_edge: ; preds = %sock_diag_destroy_group.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true.i

sock_diag_destroy_group.exit.i.if.else_crit_edge: ; preds = %sock_diag_destroy_group.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true.i:                                  ; preds = %sock_diag_destroy_group.exit.i.land.lhs.true.i_crit_edge, %if.end12.i.i.land.lhs.true.i_crit_edge, %if.end.i.i.land.lhs.true.i_crit_edge
  %retval.0.i15.i = phi i32 [ %retval.0.i.i, %sock_diag_destroy_group.exit.i.land.lhs.true.i_crit_edge ], [ 1, %if.end.i.i.land.lhs.true.i_crit_edge ], [ 3, %if.end12.i.i.land.lhs.true.i_crit_edge ]
  %diag_nlsk.i = getelementptr inbounds %struct.net, ptr %21, i32 0, i32 54
  %33 = ptrtoint ptr %diag_nlsk.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %diag_nlsk.i, align 8
  %tobool.not.i24 = icmp eq ptr %34, null
  br i1 %tobool.not.i24, label %land.lhs.true.i.if.else_crit_edge, label %sock_diag_has_destroy_listeners.exit

land.lhs.true.i.if.else_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

sock_diag_has_destroy_listeners.exit:             ; preds = %land.lhs.true.i
  %call3.i = tail call i32 @netlink_has_listeners(ptr noundef nonnull %34, i32 noundef %retval.0.i15.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.i.not = icmp eq i32 %call3.i, 0
  br i1 %tobool4.i.not, label %sock_diag_has_destroy_listeners.exit.if.else_crit_edge, label %if.then17, !prof !888

sock_diag_has_destroy_listeners.exit.if.else_crit_edge: ; preds = %sock_diag_has_destroy_listeners.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then17:                                        ; preds = %sock_diag_has_destroy_listeners.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @sock_diag_broadcast_destroy(ptr noundef %sk) #17
  br label %if.end18

if.else:                                          ; preds = %sock_diag_has_destroy_listeners.exit.if.else_crit_edge, %land.lhs.true.i.if.else_crit_edge, %sock_diag_destroy_group.exit.i.if.else_crit_edge, %sw.bb6.i.i.if.else_crit_edge, %sw.bb.i.i.if.else_crit_edge, %land.rhs.if.else_crit_edge, %if.end.if.else_crit_edge
  tail call void @sk_destruct(ptr noundef %sk)
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sk_clone_lock(ptr noundef %sk, i32 noundef %priority) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %0 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %skc_prot, align 8
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %2 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %skc_family, align 8
  %conv = zext i16 %3 to i32
  %call = tail call fastcc ptr @sk_prot_alloc(ptr noundef %1, i32 noundef %priority, i32 noundef %conv)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %skc_prot, align 8
  %sk_security.i = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 73
  %6 = ptrtoint ptr %sk_security.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sk_security.i, align 8
  %8 = call ptr @memcpy(ptr %call, ptr %sk, i32 84)
  %skc_dontcopy_end.i = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 20
  %skc_dontcopy_end6.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 20
  %obj_size.i = getelementptr inbounds %struct.proto, ptr %5, i32 0, i32 43
  %9 = ptrtoint ptr %obj_size.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %obj_size.i, align 4
  %sub.i = add i32 %10, -104
  %11 = call ptr @memcpy(ptr %skc_dontcopy_end.i, ptr %skc_dontcopy_end6.i, i32 %sub.i)
  store ptr %7, ptr %sk_security.i, align 8
  tail call void @security_sk_clone(ptr noundef %sk, ptr noundef nonnull %call) #17
  %sk_prot_creator = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 49
  %12 = ptrtoint ptr %sk_prot_creator to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %1, ptr %sk_prot_creator, align 4
  %skc_net_refcnt = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 5
  %13 = ptrtoint ptr %skc_net_refcnt to i32
  call void @__asan_load1_noabort(i32 %13)
  %bf.load = load i8, ptr %skc_net_refcnt, align 1
  %14 = and i8 %bf.load, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool3.not = icmp eq i8 %14, 0
  br i1 %tobool3.not, label %if.end.if.end10_crit_edge, label %if.then6, !prof !889

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then6:                                         ; preds = %if.end
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 9
  %15 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %skc_net.i, align 4
  %ns_tracker = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 86
  %count.i.i = getelementptr inbounds %struct.net, ptr %16, i32 0, i32 14, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %count.i.i, i32 1, i32 3, i32 1) #17
  %17 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i.i, ptr %count.i.i, i32 1, ptr elementtype(i32) %count.i.i) #17, !srcloc !944
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then6.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !889

if.then6.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then6
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %18 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %.not.i.i.i.i.i = icmp sgt i32 %18, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.get_net_track.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.get_net_track.exit_crit_edge:   ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %get_net_track.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then6.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then6.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %get_net_track.exit

get_net_track.exit:                               ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.get_net_track.exit_crit_edge
  %refcnt_tracker.i.i = getelementptr inbounds %struct.net, ptr %16, i32 0, i32 15
  %call.i.i204 = tail call i32 @ref_tracker_alloc(ptr noundef %refcnt_tracker.i.i, ptr noundef %ns_tracker, i32 noundef %priority) #17
  %19 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %skc_net.i, align 4
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !918
  %prot_inuse.i = getelementptr inbounds %struct.net, ptr %20, i32 0, i32 29, i32 2
  %22 = ptrtoint ptr %prot_inuse.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %prot_inuse.i, align 8
  %24 = ptrtoint ptr %23 to i32
  %25 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %28
  %29 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %30, %24
  %31 = inttoptr i32 %add.i to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %31, align 4
  %add13.i = add i32 %33, 1
  store i32 %add13.i, ptr %31, align 4
  %34 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !919
  %and.i.i.i = and i32 %34, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i206 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i206, label %if.then.i207, label %get_net_track.exit.sock_inuse_add.exit_crit_edge, !prof !889

get_net_track.exit.sock_inuse_add.exit_crit_edge: ; preds = %get_net_track.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_inuse_add.exit

if.then.i207:                                     ; preds = %get_net_track.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %sock_inuse_add.exit

sock_inuse_add.exit:                              ; preds = %if.then.i207, %get_net_track.exit.sock_inuse_add.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %21) #17, !srcloc !920
  br label %if.end10

if.end10:                                         ; preds = %sock_inuse_add.exit, %if.end.if.end10_crit_edge
  %pprev.i = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 15, i32 0, i32 1
  %35 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %pprev.i, align 4
  tail call fastcc void @sock_lock_init(ptr noundef nonnull %call)
  %sk_lock = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 4
  tail call void @_raw_spin_lock(ptr noundef %sk_lock) #17
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 9
  %tail = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 9, i32 3
  %36 = ptrtoint ptr %tail to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %tail, align 4
  %head = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 9, i32 2
  %37 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %head, align 4
  %len = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 9, i32 1
  %38 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %len, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog, i32 noundef 4) #17
  %39 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile i32 0, ptr %sk_backlog, align 4
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 23
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  %40 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile i32 1, ptr %sk_wmem_alloc, align 4
  %sk_omem_alloc = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 20
  %call.i.i201 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  %41 = ptrtoint ptr %sk_omem_alloc to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile i32 0, ptr %sk_omem_alloc, align 4
  tail call fastcc void @sk_init_common(ptr noundef nonnull %call)
  %sk_dst_cache = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 19
  %42 = ptrtoint ptr %sk_dst_cache to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr null, ptr %sk_dst_cache, align 4
  %sk_dst_pending_confirm = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 29
  %43 = ptrtoint ptr %sk_dst_pending_confirm to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %sk_dst_pending_confirm, align 8
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 22
  %44 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %sk_wmem_queued, align 8
  %sk_forward_alloc = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 11
  %45 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 0, ptr %sk_forward_alloc, align 8
  %sk_reserved_mem = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 12
  %46 = ptrtoint ptr %sk_reserved_mem to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %sk_reserved_mem, align 4
  %sk_drops = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 5
  %call.i.i202 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops, i32 noundef 4) #17
  %47 = ptrtoint ptr %sk_drops to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile i32 0, ptr %sk_drops, align 4
  %48 = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 25
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %48, align 4
  %sk_userlocks = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %50 = ptrtoint ptr %sk_userlocks to i32
  call void @__asan_load1_noabort(i32 %50)
  %bf.load15 = load i8, ptr %sk_userlocks, align 8
  %51 = and i8 %bf.load15, 7
  %sk_userlocks19 = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 43
  %52 = ptrtoint ptr %sk_userlocks19 to i32
  call void @__asan_load1_noabort(i32 %52)
  %bf.load20 = load i8, ptr %sk_userlocks19, align 8
  %bf.clear21 = and i8 %bf.load20, -16
  %bf.set = or i8 %bf.clear21, %51
  store i8 %bf.set, ptr %sk_userlocks19, align 8
  %sk_zckey = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 68
  %call.i.i203 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_zckey, i32 noundef 4) #17
  %53 = ptrtoint ptr %sk_zckey to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile i32 0, ptr %sk_zckey, align 4
  %54 = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 13
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %54, align 4
  %and.i.i208 = and i32 %56, -3
  store i32 %and.i.i208, ptr %54, align 4
  %sk_memcg = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 75
  %57 = ptrtoint ptr %sk_memcg to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr null, ptr %sk_memcg, align 8
  %sk_cgrp_data = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 74
  tail call void @cgroup_sk_clone(ptr noundef %sk_cgrp_data) #17
  %58 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i = and i32 %58, -16384
  %59 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %59, i32 0, i32 1
  %60 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %61, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i, label %if.end10.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end10.rcu_read_lock.exit_crit_edge:            ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end10
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end10.rcu_read_lock.exit_crit_edge
  %sk_filter = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 16
  %62 = ptrtoint ptr %sk_filter to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile ptr, ptr %sk_filter, align 4
  %call27 = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end36_crit_edge

rcu_read_lock.exit.do.end36_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end36

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call29 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %land.lhs.true.do.end36_crit_edge, label %land.lhs.true31

land.lhs.true.do.end36_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end36

land.lhs.true31:                                  ; preds = %land.lhs.true
  %.b200 = load i1, ptr @sk_clone_lock.__warned, align 1
  br i1 %.b200, label %land.lhs.true31.do.end36_crit_edge, label %if.then33

land.lhs.true31.do.end36_crit_edge:               ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end36

if.then33:                                        ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sk_clone_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 2169, ptr noundef nonnull @.str.2) #17
  br label %do.end36

do.end36:                                         ; preds = %if.then33, %land.lhs.true31.do.end36_crit_edge, %land.lhs.true.do.end36_crit_edge, %rcu_read_lock.exit.do.end36_crit_edge
  %cmp.not = icmp eq ptr %63, null
  br i1 %cmp.not, label %do.end36.do.body47_crit_edge, label %if.then39

do.end36.do.body47_crit_edge:                     ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body47

if.then39:                                        ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #19
  %call40 = tail call zeroext i1 @sk_filter_charge(ptr noundef nonnull %call, ptr noundef nonnull %63) #17
  br label %do.body47

do.body47:                                        ; preds = %if.then39, %do.end36.do.body47_crit_edge
  %is_charged.0.off0 = phi i1 [ %call40, %if.then39 ], [ true, %do.end36.do.body47_crit_edge ]
  %sk_filter48 = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 16
  %64 = ptrtoint ptr %sk_filter48 to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %63, ptr %sk_filter48, align 4
  %call.i209 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i209, label %do.body47.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i212

do.body47.rcu_read_unlock.exit_crit_edge:         ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true.i212:                               ; preds = %do.body47
  %call1.i210 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i210)
  %tobool.not.i211 = icmp eq i32 %call1.i210, 0
  br i1 %tobool.not.i211, label %land.lhs.true.i212.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i214

land.lhs.true.i212.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i212
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true2.i214:                              ; preds = %land.lhs.true.i212
  %.b4.i213 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i213, label %land.lhs.true2.i214.rcu_read_unlock.exit_crit_edge, label %if.then.i215

land.lhs.true2.i214.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i214
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

if.then.i215:                                     ; preds = %land.lhs.true2.i214
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i215, %land.lhs.true2.i214.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i212.rcu_read_unlock.exit_crit_edge, %do.body47.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %65 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i216 = and i32 %65, -16384
  %66 = inttoptr i32 %and.i.i.i.i.i216 to ptr
  %preempt_count.i.i.i.i217 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %preempt_count.i.i.i.i217 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %preempt_count.i.i.i.i217, align 4
  %sub.i.i.i = add i32 %68, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i217, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  br i1 %is_charged.0.off0, label %lor.rhs, label %do.body72.critedge, !prof !888

lor.rhs:                                          ; preds = %rcu_read_unlock.exit
  %sk_policy.i = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 18
  %69 = ptrtoint ptr %sk_policy.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr null, ptr %sk_policy.i, align 4
  %arrayidx2.i = getelementptr %struct.sock, ptr %call, i32 0, i32 18, i32 1
  %70 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr null, ptr %arrayidx2.i, align 4
  %sk_policy3.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 18
  %71 = ptrtoint ptr %sk_policy3.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %sk_policy3.i, align 4
  %tobool.not.i218 = icmp eq ptr %72, null
  br i1 %tobool.not.i218, label %lor.rhs.i, label %lor.rhs.xfrm_sk_clone_policy.exit_crit_edge, !prof !888

lor.rhs.xfrm_sk_clone_policy.exit_crit_edge:      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %xfrm_sk_clone_policy.exit

lor.rhs.i:                                        ; preds = %lor.rhs
  %arrayidx6.i = getelementptr %struct.sock, ptr %sk, i32 0, i32 18, i32 1
  %73 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx6.i, align 4
  %tobool7.not.i = icmp eq ptr %74, null
  br i1 %tobool7.not.i, label %lor.rhs.i.do.body87_crit_edge, label %lor.rhs.i.xfrm_sk_clone_policy.exit_crit_edge, !prof !888

lor.rhs.i.xfrm_sk_clone_policy.exit_crit_edge:    ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %xfrm_sk_clone_policy.exit

lor.rhs.i.do.body87_crit_edge:                    ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body87

xfrm_sk_clone_policy.exit:                        ; preds = %lor.rhs.i.xfrm_sk_clone_policy.exit_crit_edge, %lor.rhs.xfrm_sk_clone_policy.exit_crit_edge
  %call.i219 = tail call i32 @__xfrm_sk_clone_policy(ptr noundef nonnull %call, ptr noundef %sk) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i219)
  %tobool57.not = icmp eq i32 %call.i219, 0
  br i1 %tobool57.not, label %xfrm_sk_clone_policy.exit.do.body87_crit_edge, label %xfrm_sk_clone_policy.exit.if.end80_crit_edge, !prof !888

xfrm_sk_clone_policy.exit.if.end80_crit_edge:     ; preds = %xfrm_sk_clone_policy.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end80

xfrm_sk_clone_policy.exit.do.body87_crit_edge:    ; preds = %xfrm_sk_clone_policy.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body87

do.body72.critedge:                               ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %75 = ptrtoint ptr %sk_filter48 to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile ptr null, ptr %sk_filter48, align 4
  br label %if.end80

if.end80:                                         ; preds = %do.body72.critedge, %xfrm_sk_clone_policy.exit.if.end80_crit_edge
  tail call void @sk_free_unlock_clone(ptr noundef nonnull %call)
  br label %out

do.body87:                                        ; preds = %xfrm_sk_clone_policy.exit.do.body87_crit_edge, %lor.rhs.i.do.body87_crit_edge
  %sk_reuseport_cb = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 83
  %76 = ptrtoint ptr %sk_reuseport_cb to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile ptr null, ptr %sk_reuseport_cb, align 8
  %call94 = tail call i32 @bpf_sk_storage_clone(ptr noundef %sk, ptr noundef nonnull %call) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %if.end97, label %if.then96

if.then96:                                        ; preds = %do.body87
  %sk_destruct.i = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 82
  %77 = ptrtoint ptr %sk_destruct.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr null, ptr %sk_destruct.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %sk_lock) #17
  %call.i.i.i.i.i.i.i221 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc, i32 1, i32 3, i32 1) #17
  %78 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc, ptr %sk_wmem_alloc, i32 1, ptr elementtype(i32) %sk_wmem_alloc) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %78, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then96
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i222 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i222, label %if.end5.i.i.i.i.i.out_crit_edge, label %if.then10.i.i.i.i.i, !prof !888

if.end5.i.i.i.i.i.out_crit_edge:                  ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc, i32 noundef 3) #17
  br label %out

if.then.i.i:                                      ; preds = %if.then96
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call fastcc void @__sk_free(ptr noundef nonnull %call) #17
  br label %out

if.end97:                                         ; preds = %do.body87
  %sk_user_data.i = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 72
  %79 = ptrtoint ptr %sk_user_data.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %sk_user_data.i, align 4
  %81 = ptrtoint ptr %80 to i32
  %and.i = and i32 %81, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end97.if.end100_crit_edge, label %if.then99

if.end97.if.end100_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end100

if.then99:                                        ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #19
  %82 = ptrtoint ptr %sk_user_data.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr null, ptr %sk_user_data.i, align 4
  br label %if.end100

if.end100:                                        ; preds = %if.then99, %if.end97.if.end100_crit_edge
  %sk_err = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 51
  %83 = ptrtoint ptr %sk_err to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 0, ptr %sk_err, align 4
  %sk_err_soft = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 52
  %84 = ptrtoint ptr %sk_err_soft to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 0, ptr %sk_err_soft, align 8
  %sk_priority = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 33
  %85 = ptrtoint ptr %sk_priority to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 0, ptr %sk_priority, align 4
  %86 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i223 = and i32 %86, -16384
  %87 = inttoptr i32 %and.i223 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 3
  %88 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %cpu, align 4
  %90 = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 18
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %89, ptr %90, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !946
  %skc_refcnt = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 19
  %call.i.i.i224 = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt, i32 noundef 4) #17
  %92 = ptrtoint ptr %skc_refcnt to i32
  call void @__asan_store4_noabort(i32 %92)
  store volatile i32 2, ptr %skc_refcnt, align 4
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 71
  %93 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr null, ptr %sk_socket.i, align 8
  %skc_tx_queue_mapping.i = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 16
  %94 = ptrtoint ptr %skc_tx_queue_mapping.i to i32
  call void @__asan_store2_noabort(i32 %94)
  store i16 -1, ptr %skc_tx_queue_mapping.i, align 4
  %95 = getelementptr inbounds %struct.sock, ptr %call, i32 0, i32 17
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_store4_noabort(i32 %96)
  store volatile ptr null, ptr %95, align 8
  %skc_prot126 = getelementptr inbounds %struct.sock_common, ptr %call, i32 0, i32 8
  %97 = ptrtoint ptr %skc_prot126 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %skc_prot126, align 8
  %sockets_allocated = getelementptr inbounds %struct.proto, ptr %98, i32 0, i32 33
  %99 = ptrtoint ptr %sockets_allocated to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %sockets_allocated, align 4
  %tobool127.not = icmp eq ptr %100, null
  br i1 %tobool127.not, label %if.end100.if.end129_crit_edge, label %if.then128

if.end100.if.end129_crit_edge:                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end129

if.then128:                                       ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @percpu_counter_add_batch(ptr noundef nonnull %100, i64 noundef 1, i32 noundef 16) #17
  br label %if.end129

if.end129:                                        ; preds = %if.then128, %if.end100.if.end129_crit_edge
  %101 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %101)
  %102 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %102)
  %switch.i = icmp ugt i16 %102, 1
  br i1 %switch.i, label %land.lhs.true132, label %if.end129.out_crit_edge

if.end129.out_crit_edge:                          ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

land.lhs.true132:                                 ; preds = %if.end129
  %103 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %54, align 8
  %and134 = and i32 %104, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and134)
  %tobool135.not = icmp eq i32 %and134, 0
  br i1 %tobool135.not, label %land.lhs.true132.out_crit_edge, label %if.then136

land.lhs.true132.out_crit_edge:                   ; preds = %land.lhs.true132
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.then136:                                       ; preds = %land.lhs.true132
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_enable_timestamp() #17
  br label %out

out:                                              ; preds = %if.then136, %land.lhs.true132.out_crit_edge, %if.end129.out_crit_edge, %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.out_crit_edge, %if.end80, %entry.out_crit_edge
  %newsk.0 = phi ptr [ null, %if.end80 ], [ %call, %if.then136 ], [ %call, %land.lhs.true132.out_crit_edge ], [ %call, %if.end129.out_crit_edge ], [ null, %entry.out_crit_edge ], [ null, %if.end5.i.i.i.i.i.out_crit_edge ], [ null, %if.then10.i.i.i.i.i ], [ null, %if.then.i.i ]
  ret ptr %newsk.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sk_init_common(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8
  %lock.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i, ptr noundef nonnull @.str.227, ptr noundef nonnull @skb_queue_head_init.__key, i16 noundef signext 3) #17
  %0 = ptrtoint ptr %sk_receive_queue to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %sk_receive_queue, ptr %sk_receive_queue, align 4
  %prev.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 0, i32 0, i32 1
  %1 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %sk_receive_queue, ptr %prev.i.i, align 4
  %qlen.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 1
  %2 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %qlen.i.i, align 4
  %sk_write_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 26
  %lock.i87 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 26, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i87, ptr noundef nonnull @.str.227, ptr noundef nonnull @skb_queue_head_init.__key, i16 noundef signext 3) #17
  %3 = ptrtoint ptr %sk_write_queue to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %sk_write_queue, ptr %sk_write_queue, align 4
  %prev.i.i88 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 26, i32 0, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i88 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %sk_write_queue, ptr %prev.i.i88, align 4
  %qlen.i.i89 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 26, i32 1
  %5 = ptrtoint ptr %qlen.i.i89 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %qlen.i.i89, align 4
  %sk_error_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7
  %lock.i90 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 2
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i90, ptr noundef nonnull @.str.227, ptr noundef nonnull @skb_queue_head_init.__key, i16 noundef signext 3) #17
  %6 = ptrtoint ptr %sk_error_queue to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %sk_error_queue, ptr %sk_error_queue, align 4
  %prev.i.i91 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 0, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i91 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %sk_error_queue, ptr %prev.i.i91, align 4
  %qlen.i.i92 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 1
  %8 = ptrtoint ptr %qlen.i.i92 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %qlen.i.i92, align 4
  %sk_callback_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50
  tail call void @__rwlock_init(ptr noundef %sk_callback_lock, ptr noundef nonnull @.str.5, ptr noundef nonnull @sk_init_common.__key) #17
  %dep_map = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 2, i32 0, i32 0, i32 4
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %9 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %skc_family, align 8
  %idxprom = zext i16 %10 to i32
  %arrayidx = getelementptr [47 x ptr], ptr @af_family_rlock_key_strings, i32 0, i32 %idxprom
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx, align 4
  %add.ptr = getelementptr %struct.lock_class_key, ptr @af_rlock_keys, i32 %idxprom
  %wait_type_inner = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 2, i32 0, i32 0, i32 4, i32 4
  %13 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %wait_type_inner, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map, ptr noundef %12, ptr noundef %add.ptr, i32 noundef 0, i8 noundef zeroext %14, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %dep_map12 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 26, i32 2, i32 0, i32 0, i32 4
  %15 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %skc_family, align 8
  %idxprom15 = zext i16 %16 to i32
  %arrayidx16 = getelementptr [47 x ptr], ptr @af_family_wlock_key_strings, i32 0, i32 %idxprom15
  %17 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx16, align 4
  %add.ptr20 = getelementptr %struct.lock_class_key, ptr @af_wlock_keys, i32 %idxprom15
  %wait_type_inner24 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 26, i32 2, i32 0, i32 0, i32 4, i32 4
  %19 = ptrtoint ptr %wait_type_inner24 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %wait_type_inner24, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map12, ptr noundef %18, ptr noundef %add.ptr20, i32 noundef 0, i8 noundef zeroext %20, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %dep_map31 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 2, i32 0, i32 0, i32 4
  %21 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %skc_family, align 8
  %idxprom34 = zext i16 %22 to i32
  %arrayidx35 = getelementptr [47 x ptr], ptr @af_family_elock_key_strings, i32 0, i32 %idxprom34
  %23 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx35, align 4
  %add.ptr39 = getelementptr %struct.lock_class_key, ptr @af_elock_keys, i32 %idxprom34
  %wait_type_inner43 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 7, i32 2, i32 0, i32 0, i32 4, i32 4
  %25 = ptrtoint ptr %wait_type_inner43 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %wait_type_inner43, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map31, ptr noundef %24, ptr noundef %add.ptr39, i32 noundef 0, i8 noundef zeroext %26, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %dep_map49 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50, i32 4
  %27 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %skc_family, align 8
  %idxprom52 = zext i16 %28 to i32
  %arrayidx53 = getelementptr [47 x ptr], ptr @af_family_clock_key_strings, i32 0, i32 %idxprom52
  %29 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx53, align 4
  %add.ptr57 = getelementptr %struct.lock_class_key, ptr @af_callback_keys, i32 %idxprom52
  %wait_type_inner60 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50, i32 4, i32 4
  %31 = ptrtoint ptr %wait_type_inner60 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %wait_type_inner60, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map49, ptr noundef %30, ptr noundef %add.ptr57, i32 noundef 0, i8 noundef zeroext %32, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_sk_clone(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sk_filter_charge(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_free_unlock_clone(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_destruct = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 82
  %0 = ptrtoint ptr %sk_destruct to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %sk_destruct, align 4
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_unlock(ptr noundef %sk_lock) #17
  %sk_wmem_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc.i, i32 1, i32 3, i32 1) #17
  %1 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc.i, ptr %sk_wmem_alloc.i, i32 1, ptr elementtype(i32) %sk_wmem_alloc.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sk_free.exit_crit_edge, label %if.then10.i.i.i.i, !prof !888

if.end5.i.i.i.i.sk_free.exit_crit_edge:           ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_free.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc.i, i32 noundef 3) #17
  br label %sk_free.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call fastcc void @__sk_free(ptr noundef %sk) #17
  br label %sk_free.exit

sk_free.exit:                                     ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sk_free.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_sk_storage_clone(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @net_enable_timestamp() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_setup_caps(ptr noundef %sk, ptr noundef %dst) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_tx_queue_mapping.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 16
  %0 = ptrtoint ptr %skc_tx_queue_mapping.i.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %skc_tx_queue_mapping.i.i, align 4
  %sk_dst_pending_confirm.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 29
  %1 = ptrtoint ptr %sk_dst_pending_confirm.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %sk_dst_pending_confirm.i, align 8
  %sk_dst_cache.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 19
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_dst_cache.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !913
  %2 = ptrtoint ptr %dst to i32
  tail call void @llvm.prefetch.p0(ptr %sk_dst_cache.i, i32 1, i32 3, i32 1) #17
  %3 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %2, ptr %sk_dst_cache.i) #17, !srcloc !914
  %asmresult.i.i = extractvalue { i32, i32 } %3, 0
  %4 = inttoptr i32 %asmresult.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !915
  tail call void @dst_release(ptr noundef %4) #17
  %5 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dst, align 4
  %features = getelementptr inbounds %struct.net_device, ptr %6, i32 0, i32 23
  %7 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %features, align 16
  %sk_route_caps = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 38
  %9 = ptrtoint ptr %sk_route_caps to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %sk_route_caps, align 8
  %sk_type.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %10 = ptrtoint ptr %sk_type.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %sk_type.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %11)
  %cmp.i = icmp eq i16 %11, 1
  br i1 %cmp.i, label %sk_is_tcp.exit, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

sk_is_tcp.exit:                                   ; preds = %entry
  %sk_protocol.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 46
  %12 = ptrtoint ptr %sk_protocol.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %sk_protocol.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6, i16 %13)
  %cmp3.i = icmp eq i16 %13, 6
  br i1 %cmp3.i, label %if.then, label %sk_is_tcp.exit.if.end_crit_edge

sk_is_tcp.exit.if.end_crit_edge:                  ; preds = %sk_is_tcp.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %sk_is_tcp.exit
  call void @__sanitizer_cov_trace_pc() #19
  %or = or i64 %8, 2048
  %14 = ptrtoint ptr %sk_route_caps to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %or, ptr %sk_route_caps, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %sk_is_tcp.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %15 = ptrtoint ptr %sk_route_caps to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %sk_route_caps, align 8
  %and = and i64 %16, 2048
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end.if.end6_crit_edge, label %if.then3

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %or5 = or i64 %16, 26845446144
  %17 = ptrtoint ptr %sk_route_caps to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %or5, ptr %sk_route_caps, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.end.if.end6_crit_edge
  %sk_gso_disabled = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %18 = ptrtoint ptr %sk_gso_disabled to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load = load i8, ptr %sk_gso_disabled, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool7.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool7.not, label %if.end6.if.end13_crit_edge, label %if.then10, !prof !888

if.end6.if.end13_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13

if.then10:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %19 = ptrtoint ptr %sk_route_caps to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %sk_route_caps, align 8
  %and12 = and i64 %20, -34359672833
  store i64 %and12, ptr %sk_route_caps, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.end6.if.end13_crit_edge
  %21 = ptrtoint ptr %sk_route_caps to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %sk_route_caps, align 8
  %sk_gso_type.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 39
  %23 = ptrtoint ptr %sk_gso_type.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sk_gso_type.i, align 8
  %conv.i.i = sext i32 %24 to i64
  %shl.i.i = shl nsw i64 %conv.i.i, 16
  %and.i.i = and i64 %shl.i.i, %22
  call void @__sanitizer_cov_trace_cmp8(i64 %and.i.i, i64 %shl.i.i)
  %cmp.i.i = icmp eq i64 %and.i.i, %shl.i.i
  br i1 %cmp.i.i, label %if.then15, label %if.end13.if.end33_crit_edge

if.end13.if.end33_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.then15:                                        ; preds = %if.end13
  %header_len = getelementptr inbounds %struct.dst_entry, ptr %dst, i32 0, i32 9
  %25 = ptrtoint ptr %header_len to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %header_len, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %26)
  %tobool16.not = icmp eq i16 %26, 0
  br i1 %tobool16.not, label %if.then15.if.else_crit_edge, label %land.lhs.true

if.then15.if.else_crit_edge:                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true:                                    ; preds = %if.then15
  %xfrm.i = getelementptr inbounds %struct.dst_entry, ptr %dst, i32 0, i32 4
  %27 = ptrtoint ptr %xfrm.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %xfrm.i, align 4
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %land.lhs.true.if.then18_crit_edge, label %lor.lhs.false.i

land.lhs.true.if.then18_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then18

lor.lhs.false.i:                                  ; preds = %land.lhs.true
  %type_offload.i = getelementptr inbounds %struct.xfrm_state, ptr %28, i32 0, i32 49
  %29 = ptrtoint ptr %type_offload.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %type_offload.i, align 8
  %tobool1.not.i = icmp eq ptr %30, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i.if.then18_crit_edge, label %if.end.i

lor.lhs.false.i.if.then18_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then18

if.end.i:                                         ; preds = %lor.lhs.false.i
  %offload_handle.i = getelementptr inbounds %struct.xfrm_state, ptr %28, i32 0, i32 41, i32 3
  %31 = ptrtoint ptr %offload_handle.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %offload_handle.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool2.not.i = icmp eq i32 %32, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i, label %xfrm_dst_path.exit.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %child.i = getelementptr inbounds %struct.xfrm_dst, ptr %dst, i32 0, i32 2
  %33 = ptrtoint ptr %child.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %child.i, align 4
  %xfrm3.i = getelementptr inbounds %struct.dst_entry, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %xfrm3.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %xfrm3.i, align 4
  %tobool4.not.i = icmp eq ptr %36, null
  br i1 %tobool4.not.i, label %land.lhs.true.i.if.else_crit_edge, label %land.lhs.true.i.if.then18_crit_edge

land.lhs.true.i.if.then18_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then18

land.lhs.true.i.if.else_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

xfrm_dst_path.exit.i:                             ; preds = %if.end.i
  %xso.i = getelementptr inbounds %struct.xfrm_state, ptr %28, i32 0, i32 41
  %37 = ptrtoint ptr %xso.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %xso.i, align 8
  %path.i.i = getelementptr inbounds %struct.xfrm_dst, ptr %dst, i32 0, i32 3
  %39 = ptrtoint ptr %path.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %path.i.i, align 4
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %40, align 4
  %cmp.i54 = icmp eq ptr %38, %42
  br i1 %cmp.i54, label %land.lhs.true13.i, label %xfrm_dst_path.exit.i.if.then18_crit_edge

xfrm_dst_path.exit.i.if.then18_crit_edge:         ; preds = %xfrm_dst_path.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then18

land.lhs.true13.i:                                ; preds = %xfrm_dst_path.exit.i
  %child14.i = getelementptr inbounds %struct.xfrm_dst, ptr %dst, i32 0, i32 2
  %43 = ptrtoint ptr %child14.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %child14.i, align 4
  %xfrm15.i = getelementptr inbounds %struct.dst_entry, ptr %44, i32 0, i32 4
  %45 = ptrtoint ptr %xfrm15.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %xfrm15.i, align 4
  %tobool16.not.i = icmp eq ptr %46, null
  br i1 %tobool16.not.i, label %land.lhs.true13.i.if.else_crit_edge, label %land.lhs.true13.i.if.then18_crit_edge

land.lhs.true13.i.if.then18_crit_edge:            ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then18

land.lhs.true13.i.if.else_crit_edge:              ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then18:                                        ; preds = %land.lhs.true13.i.if.then18_crit_edge, %xfrm_dst_path.exit.i.if.then18_crit_edge, %land.lhs.true.i.if.then18_crit_edge, %lor.lhs.false.i.if.then18_crit_edge, %land.lhs.true.if.then18_crit_edge
  %and20 = and i64 %22, -34359672833
  %47 = ptrtoint ptr %sk_route_caps to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %and20, ptr %sk_route_caps, align 8
  br label %if.end33

if.else:                                          ; preds = %land.lhs.true13.i.if.else_crit_edge, %land.lhs.true.i.if.else_crit_edge, %if.then15.if.else_crit_edge
  %or22 = or i64 %22, 9
  %48 = ptrtoint ptr %sk_route_caps to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %or22, ptr %sk_route_caps, align 8
  %49 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %dst, align 4
  %gso_max_size = getelementptr inbounds %struct.net_device, ptr %50, i32 0, i32 137
  %51 = ptrtoint ptr %gso_max_size to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %gso_max_size, align 8
  %sk_gso_max_size = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 40
  %53 = ptrtoint ptr %sk_gso_max_size to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %sk_gso_max_size, align 4
  %54 = load ptr, ptr %dst, align 4
  %gso_max_segs = getelementptr inbounds %struct.net_device, ptr %54, i32 0, i32 138
  %55 = ptrtoint ptr %gso_max_segs to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load volatile i16, ptr %gso_max_segs, align 4
  %57 = tail call i16 @llvm.umax.i16(i16 %56, i16 1)
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then18, %if.end13.if.end33_crit_edge
  %max_segs.0 = phi i16 [ %57, %if.else ], [ 1, %if.then18 ], [ 1, %if.end13.if.end33_crit_edge ]
  %sk_gso_max_segs = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 47
  %58 = ptrtoint ptr %sk_gso_max_segs to i32
  call void @__asan_store2_noabort(i32 %58)
  store i16 %max_segs.0, ptr %sk_gso_max_segs, align 2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_wfree(ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %3 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %truesize, align 8
  %5 = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 13
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %8 = and i32 %7, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.then, label %entry.if.end21_crit_edge

entry.if.end21_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end21

if.then:                                          ; preds = %entry
  %sub = add i32 %4, -1
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 23
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc, i32 1, i32 3, i32 1) #17
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc, ptr %sk_wmem_alloc, i32 %sub, ptr elementtype(i32) %sk_wmem_alloc) #17, !srcloc !909
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult.i.i.i.i.i, i32 %sub)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, %sub
  br i1 %cmp.i.i, label %do.end, label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then
  %sub.i.i = sub i32 %asmresult.i.i.i.i.i, %sub
  %10 = or i32 %sub.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %10)
  %.not.i.i = icmp sgt i32 %10, -1
  br i1 %.not.i.i, label %if.end5.i.i.if.end_crit_edge, label %if.then10.i.i, !prof !888

if.end5.i.i.if.end_crit_edge:                     ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then10.i.i:                                    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc, i32 noundef 3) #17
  br label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2295, i32 noundef 9, ptr noundef null) #17
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then10.i.i, %if.end5.i.i.if.end_crit_edge
  %sk_write_space = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 78
  %11 = ptrtoint ptr %sk_write_space to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sk_write_space, align 4
  tail call void %12(ptr noundef %2) #17
  br label %if.end21

if.end21:                                         ; preds = %if.end, %entry.if.end21_crit_edge
  %len.0 = phi i32 [ %4, %entry.if.end21_crit_edge ], [ 1, %if.end ]
  %sk_wmem_alloc22 = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 23
  %call.i.i.i.i34 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc22, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc22, i32 1, i32 3, i32 1) #17
  %13 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc22, ptr %sk_wmem_alloc22, i32 %len.0, ptr elementtype(i32) %sk_wmem_alloc22) #17, !srcloc !909
  %asmresult.i.i.i.i.i35 = extractvalue { i32, i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult.i.i.i.i.i35, i32 %len.0)
  %cmp.i.i36 = icmp eq i32 %asmresult.i.i.i.i.i35, %len.0
  br i1 %cmp.i.i36, label %if.then24, label %if.end5.i.i40

if.end5.i.i40:                                    ; preds = %if.end21
  %sub.i.i38 = sub i32 %asmresult.i.i.i.i.i35, %len.0
  %14 = or i32 %sub.i.i38, %asmresult.i.i.i.i.i35
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %14)
  %.not.i.i39 = icmp sgt i32 %14, -1
  br i1 %.not.i.i39, label %if.end5.i.i40.if.end25_crit_edge, label %if.then10.i.i41, !prof !888

if.end5.i.i40.if.end25_crit_edge:                 ; preds = %if.end5.i.i40
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25

if.then10.i.i41:                                  ; preds = %if.end5.i.i40
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc22, i32 noundef 3) #17
  br label %if.end25

if.then24:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call fastcc void @__sk_free(ptr noundef %2)
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.then10.i.i41, %if.end5.i.i40.if.end25_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__sock_wfree(ptr nocapture noundef readonly %skb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %3 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %truesize, align 8
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 23
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc, ptr %sk_wmem_alloc, i32 %4, ptr elementtype(i32) %sk_wmem_alloc) #17, !srcloc !909
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult.i.i.i.i.i, i32 %4)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, %4
  br i1 %cmp.i.i, label %if.then, label %if.end5.i.i

if.end5.i.i:                                      ; preds = %entry
  %sub.i.i = sub i32 %asmresult.i.i.i.i.i, %4
  %6 = or i32 %sub.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %.not.i.i = icmp sgt i32 %6, -1
  br i1 %.not.i.i, label %if.end5.i.i.if.end_crit_edge, label %if.then10.i.i, !prof !888

if.end5.i.i.if.end_crit_edge:                     ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then10.i.i:                                    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc, i32 noundef 3) #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call fastcc void @__sk_free(ptr noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %if.then10.i.i, %if.end5.i.i.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_set_owner_w(ptr noundef %skb, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %destructor.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %0 = ptrtoint ptr %destructor.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %destructor.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %do.body.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %1(ptr noundef %skb) #17
  %2 = ptrtoint ptr %destructor.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %destructor.i, align 4
  br label %skb_orphan.exit

do.body.i:                                        ; preds = %entry
  %3 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool3.not.i = icmp eq ptr %5, null
  br i1 %tobool3.not.i, label %do.body.i.skb_orphan.exit_crit_edge, label %do.body7.i, !prof !888

do.body.i.skb_orphan.exit_crit_edge:              ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_orphan.exit

do.body7.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #17, !srcloc !902
  unreachable

skb_orphan.exit:                                  ; preds = %do.body.i.skb_orphan.exit_crit_edge, %if.then.i
  %6 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %sk, ptr %6, align 4
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %8 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i = zext i8 %9 to i32
  %shl.i = shl nuw i32 1, %conv.i
  %and.i = and i32 %shl.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then, label %if.end, !prof !889

if.then:                                          ; preds = %skb_orphan.exit
  %10 = ptrtoint ptr %destructor.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @sock_edemux, ptr %destructor.i, align 4
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %11 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !944
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !889

if.then.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %12 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %.not.i.i.i.i = icmp sgt i32 %12, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.return_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.return_crit_edge:                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #17
  br label %return

if.end:                                           ; preds = %skb_orphan.exit
  %13 = ptrtoint ptr %destructor.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @sock_wfree, ptr %destructor.i, align 4
  %sk_txhash.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 42
  %14 = ptrtoint ptr %sk_txhash.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %sk_txhash.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i13 = icmp eq i32 %15, 0
  br i1 %tobool.not.i13, label %if.end.skb_set_hash_from_sk.exit_crit_edge, label %if.then.i14

if.end.skb_set_hash_from_sk.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_set_hash_from_sk.exit

if.then.i14:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %l4_hash.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %16 = ptrtoint ptr %l4_hash.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %bf.load.i = load i16, ptr %l4_hash.i, align 8
  %bf.set.i = or i16 %bf.load.i, 128
  store i16 %bf.set.i, ptr %l4_hash.i, align 8
  %hash.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 8
  %17 = ptrtoint ptr %hash.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %15, ptr %hash.i, align 4
  br label %skb_set_hash_from_sk.exit

skb_set_hash_from_sk.exit:                        ; preds = %if.then.i14, %if.end.skb_set_hash_from_sk.exit_crit_edge
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %18 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %truesize, align 8
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc, i32 1, i32 3, i32 1) #17
  %20 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc, ptr %sk_wmem_alloc, i32 %19, ptr elementtype(i32) %sk_wmem_alloc) #17, !srcloc !944
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %20, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %tobool1.not.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %tobool1.not.i.i, label %skb_set_hash_from_sk.exit.if.end15.sink.split.i.i_crit_edge, label %if.else.i.i, !prof !889

skb_set_hash_from_sk.exit.if.end15.sink.split.i.i_crit_edge: ; preds = %skb_set_hash_from_sk.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i

if.else.i.i:                                      ; preds = %skb_set_hash_from_sk.exit
  %add.i.i = add i32 %asmresult.i.i.i.i, %19
  %21 = or i32 %add.i.i, %asmresult.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %.not.i.i = icmp sgt i32 %21, -1
  br i1 %.not.i.i, label %if.else.i.i.return_crit_edge, label %if.else.i.i.if.end15.sink.split.i.i_crit_edge, !prof !888

if.else.i.i.if.end15.sink.split.i.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i

if.else.i.i.return_crit_edge:                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end15.sink.split.i.i:                          ; preds = %if.else.i.i.if.end15.sink.split.i.i_crit_edge, %skb_set_hash_from_sk.exit.if.end15.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 2, %skb_set_hash_from_sk.exit.if.end15.sink.split.i.i_crit_edge ], [ 1, %if.else.i.i.if.end15.sink.split.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc, i32 noundef %.sink.i.i) #17
  br label %return

return:                                           ; preds = %if.end15.sink.split.i.i, %if.else.i.i.return_crit_edge, %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_edemux(ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @skb_orphan_partial(ptr noundef %skb) #0 align 64 {
entry:
  %old.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %0 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %truesize.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp.i = icmp eq i32 %1, 2
  br i1 %cmp.i, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %decrypted.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 3
  %2 = ptrtoint ptr %decrypted.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 4)
  %bf.load.i = load i32, ptr %decrypted.i, align 2
  %3 = and i32 %bf.load.i, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %can_skb_orphan_partial.exit, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

can_skb_orphan_partial.exit:                      ; preds = %if.end
  %destructor.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %4 = ptrtoint ptr %destructor.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %destructor.i, align 4
  %cmp.i9 = icmp eq ptr %5, @sock_wfree
  %cmp2.i = icmp eq ptr %5, @tcp_wfree
  %spec.select.i = or i1 %cmp.i9, %cmp2.i
  br i1 %spec.select.i, label %land.lhs.true, label %can_skb_orphan_partial.exit.if.end4_crit_edge

can_skb_orphan_partial.exit.if.end4_crit_edge:    ; preds = %can_skb_orphan_partial.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

land.lhs.true:                                    ; preds = %can_skb_orphan_partial.exit
  %6 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %tobool.not.i10 = icmp eq ptr %8, null
  br i1 %tobool.not.i10, label %land.lhs.true.if.end4_crit_edge, label %land.lhs.true.i

land.lhs.true.if.end4_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

land.lhs.true.i:                                  ; preds = %land.lhs.true
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %8, i32 0, i32 19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i.i) #17
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  %9 = ptrtoint ptr %skc_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %skc_refcnt.i, align 4
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, %land.lhs.true.i
  %11 = phi i32 [ %10, %land.lhs.true.i ], [ %asmresult3.i.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge ]
  %12 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i.i.i.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i.i.i.i, label %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %do.cond.i.i.i.i

do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i.i.i.i

do.cond.i.i.i.i:                                  ; preds = %do.body.i.i.i.i
  %add.i.i.i.i = add i32 %11, 1
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  %call.i3.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i.i, i32 noundef 4) #17
  %13 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %old.i.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  br label %do.body.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i:                            ; preds = %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i.i
  %15 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 %14, i32 %add.i.i.i.i, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !947
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %15, 0
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i:     ; preds = %do.body.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i = extractvalue { i32, i32 } %15, 1
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i, %14
  br i1 %cmp.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, !prof !888

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge
  %16 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %old.i.i.i.i, align 4
  %add5.i.i.i.i = add i32 %17, 1
  %18 = or i32 %add5.i.i.i.i, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %.not.i.i.i.i = icmp sgt i32 %18, -1
  br i1 %.not.i.i.i.i, label %if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge, label %if.then10.i.i.i.i, !prof !888

if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge: ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %refcount_inc_not_zero.exit.i

if.then10.i.i.i.i:                                ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 0) #17
  %19 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pr.i = load i32, ptr %old.i.i.i.i, align 4
  br label %refcount_inc_not_zero.exit.i

refcount_inc_not_zero.exit.i:                     ; preds = %if.then10.i.i.i.i, %if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge
  %20 = phi i32 [ %17, %if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge ], [ %.pr.i, %if.then10.i.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool12.i.i.i.not.i = icmp eq i32 %20, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i.i) #17
  br i1 %tobool12.i.i.i.not.i, label %refcount_inc_not_zero.exit.i.if.end4_crit_edge, label %if.then.i

refcount_inc_not_zero.exit.i.if.end4_crit_edge:   ; preds = %refcount_inc_not_zero.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

if.then.i:                                        ; preds = %refcount_inc_not_zero.exit.i
  %21 = ptrtoint ptr %destructor.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %destructor.i, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %do.body.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  call void %22(ptr noundef %skb) #17
  br label %skb_set_owner_sk_safe.exit

do.body.i.i:                                      ; preds = %if.then.i
  %23 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %6, align 4
  %tobool3.not.i.i = icmp eq ptr %24, null
  br i1 %tobool3.not.i.i, label %do.body.i.i.skb_set_owner_sk_safe.exit_crit_edge, label %do.body7.i.i, !prof !888

do.body.i.i.skb_set_owner_sk_safe.exit_crit_edge: ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_set_owner_sk_safe.exit

do.body7.i.i:                                     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #17, !srcloc !902
  unreachable

skb_set_owner_sk_safe.exit:                       ; preds = %do.body.i.i.skb_set_owner_sk_safe.exit_crit_edge, %if.then.i.i
  %25 = ptrtoint ptr %destructor.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @sock_efree, ptr %destructor.i, align 4
  %26 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %8, ptr %6, align 4
  br label %return

if.end4:                                          ; preds = %refcount_inc_not_zero.exit.i.if.end4_crit_edge, %land.lhs.true.if.end4_crit_edge, %can_skb_orphan_partial.exit.if.end4_crit_edge, %if.end.if.end4_crit_edge
  %destructor.i12 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %27 = ptrtoint ptr %destructor.i12 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %destructor.i12, align 4
  %tobool.not.i13 = icmp eq ptr %28, null
  br i1 %tobool.not.i13, label %do.body.i, label %if.then.i14

if.then.i14:                                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #19
  call void %28(ptr noundef %skb) #17
  %29 = ptrtoint ptr %destructor.i12 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %destructor.i12, align 4
  %30 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %30, align 4
  br label %return

do.body.i:                                        ; preds = %if.end4
  %32 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 4
  %tobool3.not.i = icmp eq ptr %34, null
  br i1 %tobool3.not.i, label %do.body.i.return_crit_edge, label %do.body7.i, !prof !888

do.body.i.return_crit_edge:                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

do.body7.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #17, !srcloc !902
  unreachable

return:                                           ; preds = %do.body.i.return_crit_edge, %if.then.i14, %skb_set_owner_sk_safe.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_rfree(ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %3 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %truesize, align 8
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_backlog, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog, ptr %sk_backlog, i32 %4, ptr elementtype(i32) %sk_backlog) #17, !srcloc !928
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 8
  %6 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i = getelementptr inbounds %struct.proto, ptr %7, i32 0, i32 32
  %8 = ptrtoint ptr %memory_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %memory_allocated.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %9, null
  br i1 %tobool.i.not.i, label %entry.sk_mem_uncharge.exit_crit_edge, label %if.end.i

entry.sk_mem_uncharge.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_uncharge.exit

if.end.i:                                         ; preds = %entry
  %sk_forward_alloc.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 11
  %10 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sk_forward_alloc.i, align 8
  %add.i = add i32 %11, %4
  store i32 %add.i, ptr %sk_forward_alloc.i, align 8
  %sk_reserved_mem.i.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 12
  %12 = ptrtoint ptr %sk_reserved_mem.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sk_reserved_mem.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i.i, label %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge, label %if.end.i.i, !prof !888

if.end.i.sk_unused_reserved_mem.exit.i_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i

if.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 22
  %14 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #17
  %16 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %sk_backlog, align 4
  %18 = add i32 %15, %17
  %sub5.i.i = sub i32 %13, %18
  %19 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i

sk_unused_reserved_mem.exit.i:                    ; preds = %if.end.i.i, %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %19, %if.end.i.i ], [ 0, %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge ]
  %sub.i = sub i32 %add.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097151, i32 %sub.i)
  %cmp.i = icmp sgt i32 %sub.i, 2097151
  br i1 %cmp.i, label %if.then4.i, label %sk_unused_reserved_mem.exit.i.sk_mem_uncharge.exit_crit_edge, !prof !889

sk_unused_reserved_mem.exit.i.sk_mem_uncharge.exit_crit_edge: ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_uncharge.exit

if.then4.i:                                       ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %20 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sk_forward_alloc.i, align 8
  %sub.i.i = add i32 %21, -1048576
  store i32 %sub.i.i, ptr %sk_forward_alloc.i, align 8
  tail call void @__sk_mem_reduce_allocated(ptr noundef %2, i32 noundef 256) #17
  br label %sk_mem_uncharge.exit

sk_mem_uncharge.exit:                             ; preds = %if.then4.i, %sk_unused_reserved_mem.exit.i.sk_mem_uncharge.exit_crit_edge, %entry.sk_mem_uncharge.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_efree(ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !888

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i:                                        ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  %sk_wmem_alloc.i.i = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 23
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc.i.i, i32 1, i32 3, i32 1) #17
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc.i.i, ptr %sk_wmem_alloc.i.i, i32 1, ptr elementtype(i32) %sk_wmem_alloc.i.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !888

if.end5.i.i.i.i.i.sock_put.exit_crit_edge:        ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc.i.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call fastcc void @__sk_free(ptr noundef %2) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.sock_put.exit_crit_edge, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_pfree(ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 4
  %3 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %4 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %entry.if.then_crit_edge, label %sk_is_refcounted.exit

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

sk_is_refcounted.exit:                            ; preds = %entry
  %5 = getelementptr inbounds %struct.sock_common, ptr %2, i32 0, i32 13
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %5, align 4
  %8 = and i32 %7, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i3.not.i = icmp eq i32 %8, 0
  br i1 %tobool.i3.not.i, label %sk_is_refcounted.exit.if.then_crit_edge, label %sk_is_refcounted.exit.if.end_crit_edge

sk_is_refcounted.exit.if.end_crit_edge:           ; preds = %sk_is_refcounted.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

sk_is_refcounted.exit.if.then_crit_edge:          ; preds = %sk_is_refcounted.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

if.then:                                          ; preds = %sk_is_refcounted.exit.if.then_crit_edge, %entry.if.then_crit_edge
  tail call void @sock_gen_put(ptr noundef %2) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %sk_is_refcounted.exit.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_gen_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_i_uid(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_callback_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50
  tail call void @_raw_read_lock_bh(ptr noundef %sk_callback_lock) #17
  %sk_socket = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %0 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_socket, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %i_uid = getelementptr inbounds %struct.socket_alloc, ptr %1, i32 0, i32 1, i32 2
  %2 = ptrtoint ptr %i_uid to i32
  call void @__asan_load4_noabort(i32 %2)
  %retval.sroa.0.0.copyload = load i32, ptr %i_uid, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %retval.sroa.0.0 = phi i32 [ %retval.sroa.0.0.copyload, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  tail call void @_raw_read_unlock_bh(ptr noundef %sk_callback_lock) #17
  ret i32 %retval.sroa.0.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock_bh(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock_bh(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_i_ino(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_callback_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50
  tail call void @_raw_read_lock_bh(ptr noundef %sk_callback_lock) #17
  %sk_socket = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %0 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_socket, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %i_ino = getelementptr inbounds %struct.socket_alloc, ptr %1, i32 0, i32 1, i32 11
  %2 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %i_ino, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %3, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  tail call void @_raw_read_unlock_bh(ptr noundef %sk_callback_lock) #17
  ret i32 %cond
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sock_wmalloc(ptr noundef %sk, i32 noundef %size, i32 noundef %force, i32 noundef %priority) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %force)
  %tobool.not = icmp eq i32 %force, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  %0 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %sk_wmem_alloc, align 4
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %2 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %sk_sndbuf, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp = icmp ult i32 %1, %3
  br i1 %cmp, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %call.i = tail call ptr @__alloc_skb(i32 noundef %size, i32 noundef %priority, i32 noundef 0, i32 noundef -1) #17
  %tobool2.not = icmp eq ptr %call.i, null
  br i1 %tobool2.not, label %if.then.return_crit_edge, label %cleanup

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

cleanup:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @skb_set_owner_w(ptr noundef nonnull %call.i, ptr noundef %sk)
  br label %return

return:                                           ; preds = %cleanup, %if.then.return_crit_edge, %lor.lhs.false.return_crit_edge
  %retval.1 = phi ptr [ %call.i, %cleanup ], [ null, %lor.lhs.false.return_crit_edge ], [ null, %if.then.return_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sock_omalloc(ptr noundef %sk, i32 noundef %size, i32 noundef %priority) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_omem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  %0 = ptrtoint ptr %sk_omem_alloc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %sk_omem_alloc, align 4
  %add1 = add i32 %size, 512
  %add2 = add i32 %add1, %1
  %2 = load i32, ptr @sysctl_optmem_max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add2, i32 %2)
  %cmp = icmp ugt i32 %add2, %2
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call ptr @__alloc_skb(i32 noundef %size, i32 noundef %priority, i32 noundef 0, i32 noundef -1) #17
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 20
  %3 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %truesize, align 8
  %call.i.i14 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_omem_alloc, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_omem_alloc, ptr %sk_omem_alloc, i32 %4, ptr elementtype(i32) %sk_omem_alloc) #17, !srcloc !901
  %6 = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %sk, ptr %6, align 4
  %destructor = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 4, i32 0, i32 1
  %8 = ptrtoint ptr %destructor to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @sock_ofree, ptr %destructor, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call.i, %if.end5 ], [ null, %entry.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sock_ofree(ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %3 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %truesize, align 8
  %sk_omem_alloc = getelementptr inbounds %struct.sock, ptr %2, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_omem_alloc, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_omem_alloc, ptr %sk_omem_alloc, i32 %4, ptr elementtype(i32) %sk_omem_alloc) #17, !srcloc !928
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sock_kmalloc(ptr noundef %sk, i32 noundef %size, i32 noundef %priority) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @sysctl_optmem_max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %0, i32 %size)
  %cmp.not = icmp ult i32 %0, %size
  br i1 %cmp.not, label %entry.return_crit_edge, label %land.lhs.true

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

land.lhs.true:                                    ; preds = %entry
  %sk_omem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  %1 = ptrtoint ptr %sk_omem_alloc to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %sk_omem_alloc, align 4
  %add = add i32 %2, %size
  %3 = load i32, ptr @sysctl_optmem_max, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %3)
  %cmp1 = icmp slt i32 %add, %3
  br i1 %cmp1, label %if.then, label %land.lhs.true.return_crit_edge

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.then:                                          ; preds = %land.lhs.true
  %call.i.i14 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_omem_alloc, i32 1, i32 3, i32 1) #17
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_omem_alloc, ptr %sk_omem_alloc, i32 %size, ptr elementtype(i32) %sk_omem_alloc) #17, !srcloc !901
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %size, i32 noundef %priority) #23
  %tobool.not = icmp eq ptr %call9.i, null
  br i1 %tobool.not, label %cleanup, label %if.then.return_crit_edge

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

cleanup:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i15 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_omem_alloc, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_omem_alloc, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_omem_alloc, ptr %sk_omem_alloc, i32 %size, ptr elementtype(i32) %sk_omem_alloc) #17, !srcloc !928
  br label %return

return:                                           ; preds = %cleanup, %if.then.return_crit_edge, %land.lhs.true.return_crit_edge, %entry.return_crit_edge
  %retval.1 = phi ptr [ null, %cleanup ], [ null, %land.lhs.true.return_crit_edge ], [ null, %entry.return_crit_edge ], [ %call9.i, %if.then.return_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_kfree_s(ptr noundef %sk, ptr noundef %mem, i32 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %mem, null
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end40.critedge.i

land.rhs.i:                                       ; preds = %entry
  %.b48.i = load i1, ptr @__sock_kfree_s.__already_done, align 1
  br i1 %.b48.i, label %land.rhs.i.__sock_kfree_s.exit_crit_edge, label %if.then.i, !prof !888

land.rhs.i.__sock_kfree_s.exit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sock_kfree_s.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__sock_kfree_s.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2503, i32 noundef 9, ptr noundef null) #17
  br label %__sock_kfree_s.exit

if.end40.critedge.i:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kfree(ptr noundef nonnull %mem) #17
  %sk_omem_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 20
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_omem_alloc.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_omem_alloc.i, i32 1, i32 3, i32 1) #17
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_omem_alloc.i, ptr %sk_omem_alloc.i, i32 %size, ptr elementtype(i32) %sk_omem_alloc.i) #17, !srcloc !928
  br label %__sock_kfree_s.exit

__sock_kfree_s.exit:                              ; preds = %if.end40.critedge.i, %if.then.i, %land.rhs.i.__sock_kfree_s.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_kzfree_s(ptr noundef %sk, ptr noundef %mem, i32 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %mem, null
  br i1 %tobool.not.i, label %land.rhs.i, label %if.end40.critedge.i

land.rhs.i:                                       ; preds = %entry
  %.b48.i = load i1, ptr @__sock_kfree_s.__already_done, align 1
  br i1 %.b48.i, label %land.rhs.i.__sock_kfree_s.exit_crit_edge, label %if.then.i, !prof !888

land.rhs.i.__sock_kfree_s.exit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__sock_kfree_s.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__sock_kfree_s.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2503, i32 noundef 9, ptr noundef null) #17
  br label %__sock_kfree_s.exit

if.end40.critedge.i:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kfree_sensitive(ptr noundef nonnull %mem) #17
  %sk_omem_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 20
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_omem_alloc.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_omem_alloc.i, i32 1, i32 3, i32 1) #17
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_omem_alloc.i, ptr %sk_omem_alloc.i, i32 %size, ptr elementtype(i32) %sk_omem_alloc.i) #17, !srcloc !928
  br label %__sock_kfree_s.exit

__sock_kfree_s.exit:                              ; preds = %if.end40.critedge.i, %if.then.i, %land.rhs.i.__sock_kfree_s.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sock_alloc_send_pskb(ptr noundef %sk, i32 noundef %header_len, i32 noundef %data_len, i32 noundef %noblock, ptr noundef %errcode, i32 noundef %max_page_order) #0 align 64 {
entry:
  %wait.i = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %noblock)
  %tobool.not = icmp eq i32 %noblock, 0
  br i1 %tobool.not, label %cond.false.i, label %entry.sock_sndtimeo.exit_crit_edge

entry.sock_sndtimeo.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_sndtimeo.exit

cond.false.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %sk_sndtimeo.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 31
  %0 = ptrtoint ptr %sk_sndtimeo.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_sndtimeo.i, align 8
  br label %sock_sndtimeo.exit

sock_sndtimeo.exit:                               ; preds = %cond.false.i, %entry.sock_sndtimeo.exit_crit_edge
  %cond.i = phi i32 [ %1, %cond.false.i ], [ 0, %entry.sock_sndtimeo.exit_crit_edge ]
  %sk_err.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 51
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %sk_wmem_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %2 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %3 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %sk_socket = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %4 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 1
  %5 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 2
  %6 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3
  %7 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3, i32 1
  br label %for.cond

for.cond:                                         ; preds = %sock_wait_for_wmem.exit, %sock_sndtimeo.exit
  %timeo.0 = phi i32 [ %cond.i, %sock_sndtimeo.exit ], [ %timeo.addr.0.lcssa.i, %sock_wait_for_wmem.exit ]
  %8 = ptrtoint ptr %sk_err.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sk_err.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %for.cond.if.end_crit_edge, label %sock_error.exit, !prof !888

for.cond.if.end_crit_edge:                        ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

sock_error.exit:                                  ; preds = %for.cond
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %sk_err.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !935
  call void @llvm.prefetch.p0(ptr %sk_err.i, i32 1, i32 3, i32 1) #17
  %10 = call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_err.i) #17, !srcloc !914
  %asmresult.i.i = extractvalue { i32, i32 } %10, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !936
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.not = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.not, label %sock_error.exit.if.end_crit_edge, label %failure.loopexit.split.loop.exit

sock_error.exit.if.end_crit_edge:                 ; preds = %sock_error.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %sock_error.exit.if.end_crit_edge, %for.cond.if.end_crit_edge
  %11 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %sk_shutdown, align 2
  %13 = and i8 %12, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool2.not = icmp eq i8 %13, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.failure_crit_edge

if.end.failure_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %failure

if.end4:                                          ; preds = %if.end
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc.i, i32 noundef 4) #17
  %14 = ptrtoint ptr %sk_wmem_alloc.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %sk_wmem_alloc.i, align 4
  %sub.i41 = add i32 %15, -1
  %16 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %sk_sndbuf, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i41, i32 %17)
  %cmp6 = icmp slt i32 %sub.i41, %17
  br i1 %cmp6, label %for.end, label %if.end9

if.end9:                                          ; preds = %if.end4
  %18 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %2, align 4
  %20 = and i32 %19, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.i.not.i = icmp eq i32 %20, 0
  br i1 %tobool.i.not.i, label %if.end9.sk_set_bit.exit_crit_edge, label %if.end.i42

if.end9.sk_set_bit.exit_crit_edge:                ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_set_bit.exit

if.end.i42:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  %21 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %3, align 8
  %flags.i = getelementptr inbounds %struct.socket_wq, ptr %22, i32 0, i32 2
  call void @_set_bit(i32 noundef 0, ptr noundef %flags.i) #17
  br label %sk_set_bit.exit

sk_set_bit.exit:                                  ; preds = %if.end.i42, %if.end9.sk_set_bit.exit_crit_edge
  %23 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %sk_socket, align 8
  %flags = getelementptr inbounds %struct.socket, ptr %24, i32 0, i32 2
  call void @_set_bit(i32 noundef 2, ptr noundef %flags) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %timeo.0)
  %tobool10.not = icmp eq i32 %timeo.0, 0
  br i1 %tobool10.not, label %sk_set_bit.exit.failure_crit_edge, label %if.end12

sk_set_bit.exit.failure_crit_edge:                ; preds = %sk_set_bit.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %failure

if.end12:                                         ; preds = %sk_set_bit.exit
  %25 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %stack.i.i, align 4
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  %33 = and i32 %32, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.not.i43 = icmp eq i32 %33, 0
  br i1 %tobool.not.i43, label %signal_pending.exit, label %if.end12.interrupted_crit_edge, !prof !888

if.end12.interrupted_crit_edge:                   ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %interrupted

signal_pending.exit:                              ; preds = %if.end12
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %30, align 4
  %and1.i.i.i.i.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool15.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool15.not, label %if.end17, label %signal_pending.exit.interrupted_crit_edge

signal_pending.exit.interrupted_crit_edge:        ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %interrupted

if.end17:                                         ; preds = %signal_pending.exit
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait.i) #17
  %36 = ptrtoint ptr %wait.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %wait.i, align 4
  %37 = call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 2
  %39 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %task.i, align 8
  %41 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %40, ptr %4, align 4
  %42 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr @autoremove_wake_function, ptr %5, align 4
  %43 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %6, ptr %6, align 4
  %44 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %6, ptr %7, align 4
  %45 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %2, align 4
  %47 = and i32 %46, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.i.not.i.i = icmp eq i32 %47, 0
  br i1 %tobool.i.not.i.i, label %if.end17.if.end.i48.preheader_crit_edge, label %if.end.i.i

if.end17.if.end.i48.preheader_crit_edge:          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i48.preheader

if.end.i.i:                                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  %48 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %3, align 8
  %flags.i.i = getelementptr inbounds %struct.socket_wq, ptr %49, i32 0, i32 2
  call void @_clear_bit(i32 noundef 0, ptr noundef %flags.i.i) #17
  br label %if.end.i48.preheader

if.end.i48.preheader:                             ; preds = %if.end.i.i, %if.end17.if.end.i48.preheader_crit_edge
  br label %if.end.i48

if.end.i48:                                       ; preds = %if.end20.i.if.end.i48_crit_edge, %if.end.i48.preheader
  %timeo.addr.036.i = phi i32 [ %call21.i, %if.end20.i.if.end.i48_crit_edge ], [ %timeo.0, %if.end.i48.preheader ]
  %50 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %task.i, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %stack.i.i.i, align 4
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %53, align 4
  %56 = and i32 %55, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.not.i.i = icmp eq i32 %56, 0
  br i1 %tobool.not.i.i, label %signal_pending.exit.i, label %if.end.i48.sock_wait_for_wmem.exit_crit_edge, !prof !888

if.end.i48.sock_wait_for_wmem.exit_crit_edge:     ; preds = %if.end.i48
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_wait_for_wmem.exit

signal_pending.exit.i:                            ; preds = %if.end.i48
  %57 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %53, align 4
  %and1.i.i.i.i.i.i = and i32 %58, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool7.not.i = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool7.not.i, label %if.end9.i, label %signal_pending.exit.i.sock_wait_for_wmem.exit_crit_edge

signal_pending.exit.i.sock_wait_for_wmem.exit_crit_edge: ; preds = %signal_pending.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_wait_for_wmem.exit

if.end9.i:                                        ; preds = %signal_pending.exit.i
  %59 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %sk_socket, align 8
  %flags10.i = getelementptr inbounds %struct.socket, ptr %60, i32 0, i32 2
  call void @_set_bit(i32 noundef 2, ptr noundef %flags10.i) #17
  %61 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile ptr, ptr %3, align 8
  call void @prepare_to_wait(ptr noundef %62, ptr noundef nonnull %wait.i, i32 noundef 1) #17
  %call.i.i.i.i49 = call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc.i, i32 noundef 4) #17
  %63 = ptrtoint ptr %sk_wmem_alloc.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %sk_wmem_alloc.i, align 4
  %65 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %sk_sndbuf, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %66)
  %cmp.i = icmp ult i32 %64, %66
  br i1 %cmp.i, label %if.end9.i.sock_wait_for_wmem.exit_crit_edge, label %if.end14.i

if.end9.i.sock_wait_for_wmem.exit_crit_edge:      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_wait_for_wmem.exit

if.end14.i:                                       ; preds = %if.end9.i
  %67 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %sk_shutdown, align 2
  %69 = and i8 %68, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool15.not.i = icmp eq i8 %69, 0
  br i1 %tobool15.not.i, label %if.end17.i, label %if.end14.i.sock_wait_for_wmem.exit_crit_edge

if.end14.i.sock_wait_for_wmem.exit_crit_edge:     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_wait_for_wmem.exit

if.end17.i:                                       ; preds = %if.end14.i
  %70 = ptrtoint ptr %sk_err.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %sk_err.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool18.not.i = icmp eq i32 %71, 0
  br i1 %tobool18.not.i, label %if.end20.i, label %if.end17.i.sock_wait_for_wmem.exit_crit_edge

if.end17.i.sock_wait_for_wmem.exit_crit_edge:     ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_wait_for_wmem.exit

if.end20.i:                                       ; preds = %if.end17.i
  %call21.i = call i32 @schedule_timeout(i32 noundef %timeo.addr.036.i) #17
  %tobool.not.i50 = icmp eq i32 %call21.i, 0
  br i1 %tobool.not.i50, label %if.end20.i.sock_wait_for_wmem.exit_crit_edge, label %if.end20.i.if.end.i48_crit_edge

if.end20.i.if.end.i48_crit_edge:                  ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i48

if.end20.i.sock_wait_for_wmem.exit_crit_edge:     ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_wait_for_wmem.exit

sock_wait_for_wmem.exit:                          ; preds = %if.end20.i.sock_wait_for_wmem.exit_crit_edge, %if.end17.i.sock_wait_for_wmem.exit_crit_edge, %if.end14.i.sock_wait_for_wmem.exit_crit_edge, %if.end9.i.sock_wait_for_wmem.exit_crit_edge, %signal_pending.exit.i.sock_wait_for_wmem.exit_crit_edge, %if.end.i48.sock_wait_for_wmem.exit_crit_edge
  %timeo.addr.0.lcssa.i = phi i32 [ %timeo.addr.036.i, %if.end.i48.sock_wait_for_wmem.exit_crit_edge ], [ %timeo.addr.036.i, %if.end17.i.sock_wait_for_wmem.exit_crit_edge ], [ %timeo.addr.036.i, %if.end14.i.sock_wait_for_wmem.exit_crit_edge ], [ %timeo.addr.036.i, %if.end9.i.sock_wait_for_wmem.exit_crit_edge ], [ %timeo.addr.036.i, %signal_pending.exit.i.sock_wait_for_wmem.exit_crit_edge ], [ 0, %if.end20.i.sock_wait_for_wmem.exit_crit_edge ]
  %72 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile ptr, ptr %3, align 8
  call void @finish_wait(ptr noundef %73, ptr noundef nonnull %wait.i) #17
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait.i) #17
  br label %for.cond

for.end:                                          ; preds = %if.end4
  %sk_allocation = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 41
  %74 = ptrtoint ptr %sk_allocation to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %sk_allocation, align 8
  %call19 = call ptr @alloc_skb_with_frags(i32 noundef %header_len, i32 noundef %data_len, i32 noundef %max_page_order, ptr noundef %errcode, i32 noundef %75) #17
  %tobool20.not = icmp eq ptr %call19, null
  br i1 %tobool20.not, label %for.end.cleanup_crit_edge, label %if.then21

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then21:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  call void @skb_set_owner_w(ptr noundef nonnull %call19, ptr noundef %sk)
  br label %cleanup

interrupted:                                      ; preds = %signal_pending.exit.interrupted_crit_edge, %if.end12.interrupted_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %timeo.0)
  %cmp.i51 = icmp eq i32 %timeo.0, 2147483647
  %cond.i52 = select i1 %cmp.i51, i32 -512, i32 -4
  br label %failure

failure.loopexit.split.loop.exit:                 ; preds = %sock_error.exit
  call void @__sanitizer_cov_trace_pc() #19
  %asmresult.i.i.le = extractvalue { i32, i32 } %10, 0
  %sub.i.le = sub i32 0, %asmresult.i.i.le
  br label %failure

failure:                                          ; preds = %failure.loopexit.split.loop.exit, %interrupted, %sk_set_bit.exit.failure_crit_edge, %if.end.failure_crit_edge
  %err.0 = phi i32 [ %cond.i52, %interrupted ], [ %sub.i.le, %failure.loopexit.split.loop.exit ], [ -32, %if.end.failure_crit_edge ], [ -11, %sk_set_bit.exit.failure_crit_edge ]
  %76 = ptrtoint ptr %errcode to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %err.0, ptr %errcode, align 4
  br label %cleanup

cleanup:                                          ; preds = %failure, %if.then21, %for.end.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %failure ], [ %call19, %if.then21 ], [ null, %for.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_skb_with_frags(i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @sock_alloc_send_skb(ptr noundef %sk, i32 noundef %size, i32 noundef %noblock, ptr noundef %errcode) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @sock_alloc_send_pskb(ptr noundef %sk, i32 noundef %size, i32 noundef 0, i32 noundef %noblock, ptr noundef %errcode, i32 noundef 0)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__sock_cmsg_send(ptr noundef %sk, ptr nocapture readnone %msg, ptr nocapture noundef readonly %cmsg, ptr nocapture noundef %sockc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %cmsg_type = getelementptr inbounds %struct.cmsghdr, ptr %cmsg, i32 0, i32 2
  %0 = ptrtoint ptr %cmsg_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cmsg_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.504)
  switch i32 %1, label %entry.cleanup_crit_edge [
    i32 36, label %sw.bb
    i32 37, label %sw.bb4
    i32 61, label %sw.bb18
    i32 1, label %entry.sw.epilog_crit_edge
    i32 2, label %entry.sw.epilog_crit_edge40
  ]

entry.sw.epilog_crit_edge40:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %3 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %skc_net.i, align 4
  %user_ns = getelementptr inbounds %struct.net, ptr %4, i32 0, i32 11
  %5 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %user_ns, align 4
  %call1 = tail call zeroext i1 @ns_capable(ptr noundef %6, i32 noundef 12) #17
  br i1 %call1, label %if.end, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %sw.bb
  %7 = ptrtoint ptr %cmsg to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cmsg, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %8)
  %cmp.not = icmp eq i32 %8, 16
  br i1 %cmp.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr = getelementptr i8, ptr %cmsg, i32 12
  %9 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %add.ptr, align 4
  %mark = getelementptr inbounds %struct.sockcm_cookie, ptr %sockc, i32 0, i32 1
  %11 = ptrtoint ptr %mark to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %mark, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %12 = ptrtoint ptr %cmsg to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cmsg, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %13)
  %cmp6.not = icmp eq i32 %13, 16
  br i1 %cmp6.not, label %if.end8, label %sw.bb4.cleanup_crit_edge

sw.bb4.cleanup_crit_edge:                         ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end8:                                          ; preds = %sw.bb4
  %add.ptr9 = getelementptr i8, ptr %cmsg, i32 12
  %14 = ptrtoint ptr %add.ptr9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %add.ptr9, align 4
  %and = and i32 %15, -772
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end11, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  %tsflags12 = getelementptr inbounds %struct.sockcm_cookie, ptr %sockc, i32 0, i32 2
  %16 = ptrtoint ptr %tsflags12 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %tsflags12, align 4
  %18 = and i16 %17, -772
  %19 = trunc i32 %15 to i16
  %conv17 = or i16 %18, %19
  store i16 %conv17, ptr %tsflags12, align 4
  br label %sw.epilog

sw.bb18:                                          ; preds = %entry
  %20 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  %23 = and i32 %22, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.i.not = icmp eq i32 %23, 0
  br i1 %tobool.i.not, label %sw.bb18.cleanup_crit_edge, label %if.end21

sw.bb18.cleanup_crit_edge:                        ; preds = %sw.bb18
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end21:                                         ; preds = %sw.bb18
  %24 = ptrtoint ptr %cmsg to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cmsg, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %25)
  %cmp23.not = icmp eq i32 %25, 20
  br i1 %cmp23.not, label %if.end26, label %if.end21.cleanup_crit_edge

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end26:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr27 = getelementptr i8, ptr %cmsg, i32 12
  %26 = ptrtoint ptr %add.ptr27 to i32
  call void @__asan_loadN_noabort(i32 %26, i32 8)
  %27 = load i64, ptr %add.ptr27, align 1
  %28 = ptrtoint ptr %sockc to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %27, ptr %sockc, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end26, %if.end11, %if.end3, %entry.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge40
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.end21.cleanup_crit_edge, %sw.bb18.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %sw.bb4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -1, %sw.bb.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -22, %sw.bb4.cleanup_crit_edge ], [ -22, %if.end8.cleanup_crit_edge ], [ -22, %sw.bb18.cleanup_crit_edge ], [ -22, %if.end21.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_cmsg_send(ptr noundef %sk, ptr nocapture noundef readonly %msg, ptr nocapture noundef %sockc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %msg_controllen = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 5
  %0 = ptrtoint ptr %msg_controllen to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %msg_controllen, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %1)
  %cmp = icmp ugt i32 %1, 11
  br i1 %cmp, label %cond.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cond.end:                                         ; preds = %entry
  %2 = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 3
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %tobool.not27 = icmp eq ptr %4, null
  br i1 %tobool.not27, label %cond.end.cleanup_crit_edge, label %for.body.lr.ph

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body.lr.ph:                                   ; preds = %cond.end
  %5 = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 3
  %6 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %tsflags12.i = getelementptr inbounds %struct.sockcm_cookie, ptr %sockc, i32 0, i32 2
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %mark.i = getelementptr inbounds %struct.sockcm_cookie, ptr %sockc, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %cmsg.028 = phi ptr [ %4, %for.body.lr.ph ], [ %add.ptr.i.i, %for.inc.for.body_crit_edge ]
  %7 = ptrtoint ptr %cmsg.028 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cmsg.028, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %8)
  %cmp1 = icmp ugt i32 %8, 11
  br i1 %cmp1, label %land.lhs.true, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true:                                    ; preds = %for.body
  %9 = ptrtoint ptr %msg_controllen to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %msg_controllen, align 8
  %11 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %5, align 8
  %sub.ptr.lhs.cast = ptrtoint ptr %cmsg.028 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %12 to i32
  %sub.ptr.sub.neg = sub i32 %10, %sub.ptr.lhs.cast
  %sub = add i32 %sub.ptr.sub.neg, %sub.ptr.rhs.cast
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %sub)
  %cmp4.not = icmp ugt i32 %8, %sub
  br i1 %cmp4.not, label %land.lhs.true.cleanup_crit_edge, label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true
  %cmsg_level = getelementptr inbounds %struct.cmsghdr, ptr %cmsg.028, i32 0, i32 1
  %13 = ptrtoint ptr %cmsg_level to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cmsg_level, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp5.not = icmp eq i32 %14, 1
  br i1 %cmp5.not, label %if.end7, label %if.end.for.inc_crit_edge

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end7:                                          ; preds = %if.end
  %cmsg_type.i = getelementptr inbounds %struct.cmsghdr, ptr %cmsg.028, i32 0, i32 2
  %15 = ptrtoint ptr %cmsg_type.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cmsg_type.i, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.505)
  switch i32 %16, label %if.end7.cleanup_crit_edge [
    i32 36, label %sw.bb.i
    i32 37, label %sw.bb4.i
    i32 61, label %sw.bb18.i
    i32 1, label %if.end7.for.inc_crit_edge
    i32 2, label %if.end7.for.inc_crit_edge40
  ]

if.end7.for.inc_crit_edge40:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end7.for.inc_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end7
  %18 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %skc_net.i.i, align 4
  %user_ns.i = getelementptr inbounds %struct.net, ptr %19, i32 0, i32 11
  %20 = ptrtoint ptr %user_ns.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %user_ns.i, align 4
  %call1.i = tail call zeroext i1 @ns_capable(ptr noundef %21, i32 noundef 12) #17
  br i1 %call1.i, label %if.end.i, label %sw.bb.i.cleanup_crit_edge

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i:                                         ; preds = %sw.bb.i
  %22 = ptrtoint ptr %cmsg.028 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cmsg.028, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %23)
  %cmp.not.i = icmp eq i32 %23, 16
  br i1 %cmp.not.i, label %if.end3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr.i = getelementptr i8, ptr %cmsg.028, i32 12
  %24 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %add.ptr.i, align 4
  %26 = ptrtoint ptr %mark.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %mark.i, align 8
  br label %for.inc

sw.bb4.i:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %8)
  %cmp6.not.i = icmp eq i32 %8, 16
  br i1 %cmp6.not.i, label %if.end8.i, label %sw.bb4.i.cleanup_crit_edge

sw.bb4.i.cleanup_crit_edge:                       ; preds = %sw.bb4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end8.i:                                        ; preds = %sw.bb4.i
  %add.ptr9.i = getelementptr i8, ptr %cmsg.028, i32 12
  %27 = ptrtoint ptr %add.ptr9.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %add.ptr9.i, align 4
  %and.i = and i32 %28, -772
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end11.i, label %if.end8.i.cleanup_crit_edge

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end11.i:                                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #19
  %29 = ptrtoint ptr %tsflags12.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %tsflags12.i, align 4
  %31 = and i16 %30, -772
  %32 = trunc i32 %28 to i16
  %conv17.i = or i16 %31, %32
  store i16 %conv17.i, ptr %tsflags12.i, align 4
  br label %for.inc

sw.bb18.i:                                        ; preds = %if.end7
  %33 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %6, align 4
  %35 = and i32 %34, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.i.not.i = icmp ne i32 %35, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %8)
  %cmp23.not.i = icmp eq i32 %8, 20
  %or.cond = select i1 %tobool.i.not.i, i1 %cmp23.not.i, i1 false
  br i1 %or.cond, label %if.end26.i, label %sw.bb18.i.cleanup_crit_edge

sw.bb18.i.cleanup_crit_edge:                      ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end26.i:                                       ; preds = %sw.bb18.i
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr27.i = getelementptr i8, ptr %cmsg.028, i32 12
  %36 = ptrtoint ptr %add.ptr27.i to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %37 = load i64, ptr %add.ptr27.i, align 1
  %38 = ptrtoint ptr %sockc to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %sockc, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end26.i, %if.end11.i, %if.end3.i, %if.end7.for.inc_crit_edge, %if.end7.for.inc_crit_edge40, %if.end.for.inc_crit_edge
  %39 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %5, align 8
  %41 = ptrtoint ptr %msg_controllen to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %msg_controllen, align 8
  %43 = ptrtoint ptr %cmsg.028 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %cmsg.028, align 4
  %sub.i.i = add i32 %44, 3
  %and.i.i = and i32 %sub.i.i, -4
  %add.ptr.i.i = getelementptr i8, ptr %cmsg.028, i32 %and.i.i
  %add.ptr1.i.i = getelementptr %struct.cmsghdr, ptr %add.ptr.i.i, i32 1
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %add.ptr1.i.i to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %40 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.ptr.sub.i.i, i32 %42)
  %cmp.i.i = icmp ugt i32 %sub.ptr.sub.i.i, %42
  %tobool.not39 = icmp eq ptr %add.ptr.i.i, null
  %tobool.not = select i1 %cmp.i.i, i1 true, i1 %tobool.not39
  br i1 %tobool.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %sw.bb18.i.cleanup_crit_edge, %if.end8.i.cleanup_crit_edge, %sw.bb4.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %sw.bb.i.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %for.body.cleanup_crit_edge, %cond.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %cond.end.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ -22, %if.end7.cleanup_crit_edge ], [ -22, %sw.bb18.i.cleanup_crit_edge ], [ -22, %if.end8.i.cleanup_crit_edge ], [ -22, %sw.bb4.i.cleanup_crit_edge ], [ -22, %if.end.i.cleanup_crit_edge ], [ -1, %sw.bb.i.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ -22, %for.body.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @skb_page_frag_refill(i32 noundef %sz, ptr nocapture noundef %pfrag, i32 noundef %gfp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pfrag to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pfrag, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.land.lhs.true_crit_edge, label %if.then

entry.land.lhs.true_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true

if.then:                                          ; preds = %entry
  %_refcount.i = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 3
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i, i32 noundef 4) #17
  %2 = ptrtoint ptr %_refcount.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %_refcount.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp = icmp eq i32 %3, 1
  %offset = getelementptr inbounds %struct.page_frag, ptr %pfrag, i32 0, i32 1
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %4 = ptrtoint ptr %offset to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 0, ptr %offset, align 4
  br label %return

if.end:                                           ; preds = %if.then
  %5 = ptrtoint ptr %offset to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %offset, align 4
  %conv = zext i16 %6 to i32
  %add = add i32 %conv, %sz
  %size = getelementptr inbounds %struct.page_frag, ptr %pfrag, i32 0, i32 2
  %7 = ptrtoint ptr %size to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %size, align 2
  %conv4 = zext i16 %8 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %conv4)
  %cmp5.not = icmp ugt i32 %add, %conv4
  br i1 %cmp5.not, label %if.end8, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end8:                                          ; preds = %if.end
  %9 = ptrtoint ptr %pfrag to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pfrag, align 4
  %11 = getelementptr inbounds %struct.page, ptr %10, i32 0, i32 1
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  %and.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !888

if.then.i.i:                                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i = add i32 %13, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  %14 = ptrtoint ptr %10 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %14, %if.end.i.i ]
  %15 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %15, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #17
  %16 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.i.i.i.i = icmp eq i32 %17, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !889

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @dump_page(ptr noundef %15, ptr noundef nonnull @.str.372) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #17, !srcloc !945
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !937
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #17
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #17, !srcloc !938
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %18, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !939
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@skb_page_frag_refill, %if.then.i.i.i.i.i)) #17
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !891

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %15, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #17
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.land.lhs.true_crit_edge

folio_put_testzero.exit.i.i.land.lhs.true_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__put_page(ptr noundef %15) #17
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.land.lhs.true_crit_edge, %entry.land.lhs.true_crit_edge
  %offset11 = getelementptr inbounds %struct.page_frag, ptr %pfrag, i32 0, i32 1
  %19 = ptrtoint ptr %offset11 to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 0, ptr %offset11, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @net_high_order_alloc_disable_key, ptr blockaddress(@skb_page_frag_refill, %if.end37)) #17
          to label %if.then18 [label %if.end37], !srcloc !891

if.then18:                                        ; preds = %land.lhs.true
  %and = and i32 %gfp, -336897
  %or20 = or i32 %and, 335872
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef %or20, i32 noundef 3, i32 noundef 0, ptr noundef null) #17
  %20 = ptrtoint ptr %pfrag to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call38.i.i.i, ptr %pfrag, align 4
  %tobool25.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool25.not, label %if.then18.if.end37_crit_edge, label %if.then32, !prof !889

if.then18.if.end37_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end37

if.then32:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #19
  %size35 = getelementptr inbounds %struct.page_frag, ptr %pfrag, i32 0, i32 2
  %21 = ptrtoint ptr %size35 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 -32768, ptr %size35, align 2
  br label %return

if.end37:                                         ; preds = %if.then18.if.end37_crit_edge, %land.lhs.true
  %call38.i.i.i64 = tail call ptr @__alloc_pages(i32 noundef %gfp, i32 noundef 0, i32 noundef 0, ptr noundef null) #17
  %22 = ptrtoint ptr %pfrag to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call38.i.i.i64, ptr %pfrag, align 4
  %tobool41.not = icmp eq ptr %call38.i.i.i64, null
  br i1 %tobool41.not, label %if.end37.return_crit_edge, label %if.then48, !prof !889

if.end37.return_crit_edge:                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.then48:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #19
  %size49 = getelementptr inbounds %struct.page_frag, ptr %pfrag, i32 0, i32 2
  %23 = ptrtoint ptr %size49 to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 4096, ptr %size49, align 2
  br label %return

return:                                           ; preds = %if.then48, %if.end37.return_crit_edge, %if.then32, %if.end.return_crit_edge, %if.then2
  %retval.0 = phi i1 [ true, %if.then2 ], [ true, %if.then48 ], [ true, %if.then32 ], [ true, %if.end.return_crit_edge ], [ false, %if.end37.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @sk_page_frag_refill(ptr noundef %sk, ptr nocapture noundef %pfrag) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_allocation = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 41
  %0 = ptrtoint ptr %sk_allocation to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_allocation, align 8
  %call = tail call zeroext i1 @skb_page_frag_refill(i32 noundef 32, ptr noundef %pfrag, i32 noundef %1)
  br i1 %call, label %entry.return_crit_edge, label %if.end, !prof !888

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %skc_prot.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %2 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skc_prot.i, align 8
  %enter_memory_pressure.i = getelementptr inbounds %struct.proto, ptr %3, i32 0, i32 30
  %4 = ptrtoint ptr %enter_memory_pressure.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %enter_memory_pressure.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end.sk_enter_memory_pressure.exit_crit_edge, label %if.end.i

if.end.sk_enter_memory_pressure.exit_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_enter_memory_pressure.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %5(ptr noundef %sk) #17
  br label %sk_enter_memory_pressure.exit

sk_enter_memory_pressure.exit:                    ; preds = %if.end.i, %if.end.sk_enter_memory_pressure.exit_crit_edge
  tail call fastcc void @sk_stream_moderate_sndbuf(ptr noundef %sk)
  br label %return

return:                                           ; preds = %sk_enter_memory_pressure.exit, %entry.return_crit_edge
  ret i1 %call
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sk_stream_moderate_sndbuf(ptr noundef %sk) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %sk_userlocks = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %0 = ptrtoint ptr %sk_userlocks to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %sk_userlocks, align 8
  %1 = and i8 %bf.load, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %2 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sk_sndbuf, align 4
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %4 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sk_wmem_queued, align 8
  %shr = ashr i32 %5, 1
  %6 = tail call i32 @llvm.smin.i32(i32 %3, i32 %shr)
  %sk_reserved_mem.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %7 = ptrtoint ptr %sk_reserved_mem.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sk_reserved_mem.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %if.end.sk_unused_reserved_mem.exit_crit_edge, label %if.end.i, !prof !888

if.end.sk_unused_reserved_mem.exit_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %sk_backlog.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i, i32 noundef 4) #17
  %9 = ptrtoint ptr %sk_backlog.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %sk_backlog.i, align 4
  %11 = add i32 %5, %10
  %sub5.i = sub i32 %8, %11
  %12 = tail call i32 @llvm.smax.i32(i32 %sub5.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit

sk_unused_reserved_mem.exit:                      ; preds = %if.end.i, %if.end.sk_unused_reserved_mem.exit_crit_edge
  %retval.0.i = phi i32 [ %12, %if.end.i ], [ 0, %if.end.sk_unused_reserved_mem.exit_crit_edge ]
  %13 = tail call i32 @llvm.umax.i32(i32 %6, i32 %retval.0.i)
  %14 = tail call i32 @llvm.umax.i32(i32 %13, i32 4608)
  %15 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile i32 %14, ptr %sk_sndbuf, align 4
  br label %cleanup

cleanup:                                          ; preds = %sk_unused_reserved_mem.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__lock_sock(ptr noundef %sk) local_unnamed_addr #0 align 64 {
entry:
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #17
  %0 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %2 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %4 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %wait, align 4
  %5 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %0, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @autoremove_wake_function, ptr %1, align 4
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %2, ptr %2, align 4
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %2, ptr %3, align 4
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %wq = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 2
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %owned.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  br label %for.cond

for.cond:                                         ; preds = %sock_owned_by_user.exit.for.cond_crit_edge, %entry
  %call4 = call zeroext i1 @prepare_to_wait_exclusive(ptr noundef %wq, ptr noundef nonnull %wait, i32 noundef 2) #17
  call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  call void @schedule() #17
  call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %call.i.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %for.cond.sock_owned_by_user.exit_crit_edge

for.cond.sock_owned_by_user.exit_crit_edge:       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %for.cond
  %call.i6.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %13 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !888

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %for.cond.sock_owned_by_user.exit_crit_edge
  %14 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %owned.i, align 4
  %tobool.i.not = icmp eq i32 %15, 0
  br i1 %tobool.i.not, label %for.end, label %sock_owned_by_user.exit.for.cond_crit_edge

sock_owned_by_user.exit.for.cond_crit_edge:       ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond

for.end:                                          ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  call void @finish_wait(ptr noundef %wq, ptr noundef nonnull %wait) #17
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @autoremove_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @prepare_to_wait_exclusive(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__release_sock(ptr noundef %sk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %head = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9, i32 2
  %0 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %head, align 4
  %cmp.not64 = icmp eq ptr %1, null
  br i1 %cmp.not64, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %tail = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9, i32 3
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %2 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %sk_backlog_rcv.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 80
  br label %while.body

while.body:                                       ; preds = %do.end45.while.body_crit_edge, %while.body.lr.ph
  %3 = phi ptr [ %1, %while.body.lr.ph ], [ %36, %do.end45.while.body_crit_edge ]
  %4 = ptrtoint ptr %tail to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %tail, align 4
  %5 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %head, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  br label %do.body

do.body:                                          ; preds = %sk_backlog_rcv.exit.do.body_crit_edge, %while.body
  %skb.0 = phi ptr [ %3, %while.body ], [ %7, %sk_backlog_rcv.exit.do.body_crit_edge ]
  %6 = ptrtoint ptr %skb.0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %skb.0, align 8
  tail call void asm sideeffect "pld\09${0:a}", "r"(ptr %7) #17, !srcloc !948
  %8 = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 8
  %and.i = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.body.if.end32_crit_edge, label %land.lhs.true.i.i

do.body.if.end32_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

land.lhs.true.i.i:                                ; preds = %do.body
  %call.i.i = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge

land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_dst_is_noref.exit

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  %call2.i.i = tail call i32 @rcu_read_lock_bh_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.skb_dst_is_noref.exit_crit_edge, !prof !889

land.rhs.i.i.skb_dst_is_noref.exit_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_dst_is_noref.exit

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 1013, i32 noundef 9, ptr noundef null) #17
  br label %skb_dst_is_noref.exit

skb_dst_is_noref.exit:                            ; preds = %do.end.i.i, %land.rhs.i.i.skb_dst_is_noref.exit_crit_edge, %land.lhs.true.i.i.skb_dst_is_noref.exit_crit_edge
  %11 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %8, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %tobool1.i = icmp ugt i32 %12, 1
  br i1 %tobool1.i, label %land.rhs, label %skb_dst_is_noref.exit.if.end32_crit_edge

skb_dst_is_noref.exit.if.end32_crit_edge:         ; preds = %skb_dst_is_noref.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

land.rhs:                                         ; preds = %skb_dst_is_noref.exit
  %.b63 = load i1, ptr @__release_sock.__already_done, align 1
  br i1 %.b63, label %land.rhs.if.end32_crit_edge, label %if.then, !prof !888

land.rhs.if.end32_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__release_sock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2777, i32 noundef 9, ptr noundef null) #17
  br label %if.end32

if.end32:                                         ; preds = %if.then, %land.rhs.if.end32_crit_edge, %skb_dst_is_noref.exit.if.end32_crit_edge, %do.body.if.end32_crit_edge
  %13 = ptrtoint ptr %skb.0 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %skb.0, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memalloc_socks_key, ptr blockaddress(@__release_sock, %land.lhs.true.i)) #17
          to label %if.end.i [label %land.lhs.true.i], !srcloc !891

land.lhs.true.i:                                  ; preds = %if.end32
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 12
  %14 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load.i.i = load i8, ptr %pfmemalloc.i.i, align 2
  %15 = and i8 %bf.load.i.i, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.i.not.i = icmp eq i8 %15, 0
  br i1 %tobool.i.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %16 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %2, align 4
  %18 = and i32 %17, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.i.not.i.i = icmp eq i32 %18, 0
  br i1 %tobool.i.not.i.i, label %do.body3.i.i, label %__sk_backlog_rcv.exit.i, !prof !889

do.body3.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22net/core/sock.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 325, 0\0A.popsection", ""() #17, !srcloc !890
  unreachable

__sk_backlog_rcv.exit.i:                          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %19 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task.i.i.i, align 8
  %flags1.i.i.i = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %flags1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags1.i.i.i, align 4
  %and.i.i.i = and i32 %24, 2048
  %or.i.i.i = or i32 %24, 2048
  store i32 %or.i.i.i, ptr %flags1.i.i.i, align 4
  %25 = ptrtoint ptr %sk_backlog_rcv.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sk_backlog_rcv.i.i, align 4
  %call10.i.i = tail call i32 %26(ptr noundef %sk, ptr noundef nonnull %skb.0) #17
  %27 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i13.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i13.i.i to ptr
  %task.i14.i.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %task.i14.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %task.i14.i.i, align 8
  %flags1.i15.i.i = getelementptr inbounds %struct.task_struct, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %flags1.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags1.i15.i.i, align 4
  %and.i16.i.i = and i32 %32, -2049
  %or.i17.i.i = or i32 %and.i16.i.i, %and.i.i.i
  store i32 %or.i17.i.i, ptr %flags1.i15.i.i, align 4
  br label %sk_backlog_rcv.exit

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end32
  call void @__sanitizer_cov_trace_pc() #19
  %33 = ptrtoint ptr %sk_backlog_rcv.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %sk_backlog_rcv.i.i, align 4
  %call3.i = tail call i32 %34(ptr noundef %sk, ptr noundef nonnull %skb.0) #17
  br label %sk_backlog_rcv.exit

sk_backlog_rcv.exit:                              ; preds = %if.end.i, %__sk_backlog_rcv.exit.i
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 2781, i32 noundef 0) #17
  %call.i = tail call i32 @__cond_resched() #17
  %cmp44.not = icmp eq ptr %7, null
  br i1 %cmp44.not, label %do.end45, label %sk_backlog_rcv.exit.do.body_crit_edge

sk_backlog_rcv.exit.do.body_crit_edge:            ; preds = %sk_backlog_rcv.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

do.end45:                                         ; preds = %sk_backlog_rcv.exit
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %35 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %head, align 4
  %cmp.not = icmp eq ptr %36, null
  br i1 %cmp.not, label %do.end45.while.end_crit_edge, label %do.end45.while.body_crit_edge

do.end45.while.body_crit_edge:                    ; preds = %do.end45
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body

do.end45.while.end_crit_edge:                     ; preds = %do.end45
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

while.end:                                        ; preds = %do.end45.while.end_crit_edge, %entry.while.end_crit_edge
  %len = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9, i32 1
  %37 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %len, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__sk_flush_backlog(ptr noundef %sk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  tail call void @__release_sock(ptr noundef %sk)
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sk_wait_data(ptr noundef %sk, ptr nocapture noundef %timeo, ptr noundef readnone %skb) #0 align 64 {
entry:
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #17
  %0 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %2 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %4 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %wait, align 4
  %5 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %0, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @woken_wake_function, ptr %1, align 4
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %2, ptr %2, align 4
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %2, ptr %3, align 4
  %13 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %13, align 8
  call void @add_wait_queue(ptr noundef %15, ptr noundef nonnull %wait) #17
  %16 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  %19 = and i32 %18, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.i.not.i = icmp eq i32 %19, 0
  br i1 %tobool.i.not.i, label %entry.sk_set_bit.exit_crit_edge, label %if.end.i

entry.sk_set_bit.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_set_bit.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %20 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %13, align 8
  %flags.i = getelementptr inbounds %struct.socket_wq, ptr %21, i32 0, i32 2
  call void @_set_bit(i32 noundef 1, ptr noundef %flags.i) #17
  br label %sk_set_bit.exit

sk_set_bit.exit:                                  ; preds = %if.end.i, %entry.sk_set_bit.exit_crit_edge
  call void @release_sock(ptr noundef %sk)
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8
  %prev.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8, i32 0, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %prev.i, align 4
  %cmp.i = icmp eq ptr %23, %sk_receive_queue
  %spec.store.select.i = select i1 %cmp.i, ptr null, ptr %23
  %cmp.not = icmp eq ptr %spec.store.select.i, %skb
  br i1 %cmp.not, label %if.then, label %sk_set_bit.exit.if.end_crit_edge

sk_set_bit.exit.if.end_crit_edge:                 ; preds = %sk_set_bit.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %sk_set_bit.exit
  call void @__sanitizer_cov_trace_pc() #19
  %24 = ptrtoint ptr %timeo to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %timeo, align 4
  %call6 = call i32 @wait_woken(ptr noundef nonnull %wait, i32 noundef 1, i32 noundef %25) #17
  %26 = ptrtoint ptr %timeo to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %call6, ptr %timeo, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %sk_set_bit.exit.if.end_crit_edge
  %27 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %28, i32 0, i32 212
  %29 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %task_state_change, align 4
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %30 = call ptr @llvm.returnaddress(i32 0) #17
  %31 = ptrtoint ptr %30 to i32
  call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %31) #17
  call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i.i) #17
  %owned.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %32 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %owned.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.i.not.i.i = icmp eq i32 %33, 0
  br i1 %tobool.i.not.i.i, label %if.end.lock_sock.exit_crit_edge, label %if.then.i.i

if.end.lock_sock.exit_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %lock_sock.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  call void @__lock_sock(ptr noundef %sk) #17
  br label %lock_sock.exit

lock_sock.exit:                                   ; preds = %if.then.i.i, %if.end.lock_sock.exit_crit_edge
  %34 = ptrtoint ptr %owned.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 1, ptr %owned.i.i.i, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  %35 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %prev.i, align 4
  %37 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %16, align 4
  %39 = and i32 %38, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.i.not.i27 = icmp eq i32 %39, 0
  br i1 %tobool.i.not.i27, label %lock_sock.exit.sk_clear_bit.exit_crit_edge, label %if.end.i29

lock_sock.exit.sk_clear_bit.exit_crit_edge:       ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_clear_bit.exit

if.end.i29:                                       ; preds = %lock_sock.exit
  call void @__sanitizer_cov_trace_pc() #19
  %40 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %13, align 8
  %flags.i28 = getelementptr inbounds %struct.socket_wq, ptr %41, i32 0, i32 2
  call void @_clear_bit(i32 noundef 1, ptr noundef %flags.i28) #17
  br label %sk_clear_bit.exit

sk_clear_bit.exit:                                ; preds = %if.end.i29, %lock_sock.exit.sk_clear_bit.exit_crit_edge
  %cmp.i25 = icmp eq ptr %36, %sk_receive_queue
  %spec.store.select.i26 = select i1 %cmp.i25, ptr null, ptr %36
  %cmp11 = icmp ne ptr %spec.store.select.i26, %skb
  %conv12 = zext i1 %cmp11 to i32
  %42 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile ptr, ptr %13, align 8
  call void @remove_wait_queue(ptr noundef %43, ptr noundef nonnull %wait) #17
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #17
  ret i32 %conv12
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @woken_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_woken(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__sk_mem_raise_allocated(ptr noundef %sk, i32 noundef %size, i32 noundef %amt, i32 noundef %kind) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %0 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_prot, align 8
  %memory_allocated.i = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 32
  %2 = ptrtoint ptr %memory_allocated.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %memory_allocated.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %3, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !925
  tail call void @llvm.prefetch.p0(ptr %3, i32 1, i32 3, i32 1) #17
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %3, ptr %3, i32 %amt, ptr elementtype(i32) %3) #17, !srcloc !926
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %4, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !927
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memcg_sockets_enabled_key, ptr blockaddress(@__sk_mem_raise_allocated, %land.rhs)) #17
          to label %if.end [label %land.rhs], !srcloc !891

land.rhs:                                         ; preds = %entry
  %sk_memcg = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %5 = ptrtoint ptr %sk_memcg to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sk_memcg, align 8
  %tobool4.not = icmp eq ptr %6, null
  br i1 %tobool4.not, label %land.rhs.if.end_crit_edge, label %land.lhs.true

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true:                                    ; preds = %land.rhs
  %7 = ptrtoint ptr %sk_memcg to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sk_memcg, align 8
  %9 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %12, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %cond.i = select i1 %tobool.not.i, i32 3264, i32 2048
  %call9 = tail call zeroext i1 @mem_cgroup_charge_skmem(ptr noundef %8, i32 noundef %amt, i32 noundef %cond.i) #17
  br i1 %call9, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.suppress_allocation_crit_edge

land.lhs.true.suppress_allocation_crit_edge:      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %suppress_allocation

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %land.rhs.if.end_crit_edge, %entry
  %13 = phi i1 [ true, %land.lhs.true.if.end_crit_edge ], [ false, %land.rhs.if.end_crit_edge ], [ false, %entry ]
  %14 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %skc_prot, align 8
  %sysctl_mem.i = getelementptr inbounds %struct.proto, ptr %15, i32 0, i32 35
  %16 = ptrtoint ptr %sysctl_mem.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %sysctl_mem.i, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult.i.i.i.i.i, i32 %19)
  %cmp.not = icmp sgt i32 %asmresult.i.i.i.i.i, %19
  br i1 %cmp.not, label %if.end13, label %if.then12

if.then12:                                        ; preds = %if.end
  %leave_memory_pressure.i = getelementptr inbounds %struct.proto, ptr %15, i32 0, i32 31
  %20 = ptrtoint ptr %leave_memory_pressure.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %leave_memory_pressure.i, align 4
  %tobool.not.i174 = icmp eq ptr %21, null
  br i1 %tobool.not.i174, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %21(ptr noundef %sk) #17
  br label %cleanup109

if.else.i:                                        ; preds = %if.then12
  %memory_pressure6.i = getelementptr inbounds %struct.proto, ptr %15, i32 0, i32 34
  %22 = ptrtoint ptr %memory_pressure6.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %memory_pressure6.i, align 4
  %tobool7.not.i = icmp eq ptr %23, null
  br i1 %tobool7.not.i, label %if.else.i.cleanup109_crit_edge, label %do.end.i

if.else.i.cleanup109_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

do.end.i:                                         ; preds = %if.else.i
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %23, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool8.not.i = icmp eq i32 %25, 0
  br i1 %tobool8.not.i, label %do.end.i.cleanup109_crit_edge, label %do.body14.i

do.end.i.cleanup109_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

do.body14.i:                                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %26 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile i32 0, ptr %23, align 4
  br label %cleanup109

if.end13:                                         ; preds = %if.end
  %arrayidx.i = getelementptr i32, ptr %17, i32 1
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult.i.i.i.i.i, i32 %28)
  %cmp15 = icmp sgt i32 %asmresult.i.i.i.i.i, %28
  br i1 %cmp15, label %if.then16, label %if.end13.if.end17_crit_edge

if.end13.if.end17_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.then16:                                        ; preds = %if.end13
  %enter_memory_pressure.i = getelementptr inbounds %struct.proto, ptr %15, i32 0, i32 30
  %29 = ptrtoint ptr %enter_memory_pressure.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %enter_memory_pressure.i, align 4
  %tobool.not.i178 = icmp eq ptr %30, null
  br i1 %tobool.not.i178, label %if.then16.if.end17_crit_edge, label %if.end.i

if.then16.if.end17_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.end.i:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %30(ptr noundef %sk) #17
  br label %if.end17

if.end17:                                         ; preds = %if.end.i, %if.then16.if.end17_crit_edge, %if.end13.if.end17_crit_edge
  %31 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %skc_prot, align 8
  %sysctl_mem.i180 = getelementptr inbounds %struct.proto, ptr %32, i32 0, i32 35
  %33 = ptrtoint ptr %sysctl_mem.i180 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %sysctl_mem.i180, align 4
  %arrayidx.i181 = getelementptr i32, ptr %34, i32 2
  %35 = ptrtoint ptr %arrayidx.i181 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.i181, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %asmresult.i.i.i.i.i, i32 %36)
  %cmp19 = icmp sgt i32 %asmresult.i.i.i.i.i, %36
  br i1 %cmp19, label %if.end17.suppress_allocation_crit_edge, label %if.end21

if.end17.suppress_allocation_crit_edge:           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %suppress_allocation

if.end21:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %kind)
  %cmp22 = icmp eq i32 %kind, 1
  br i1 %cmp22, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.end21
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #17
  %37 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %sk_backlog, align 4
  %sysctl_rmem_offset.i = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 39
  %39 = ptrtoint ptr %sysctl_rmem_offset.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sysctl_rmem_offset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i182 = icmp eq i32 %40, 0
  br i1 %tobool.not.i182, label %if.end.i184, label %if.then.i183

if.then.i183:                                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #19
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %41 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %skc_net.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %42, i32 %40
  br label %sk_get_rmem0.exit

if.end.i184:                                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #19
  %sysctl_rmem.i = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 37
  %43 = ptrtoint ptr %sysctl_rmem.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %sysctl_rmem.i, align 4
  br label %sk_get_rmem0.exit

sk_get_rmem0.exit:                                ; preds = %if.end.i184, %if.then.i183
  %retval.0.in.i = phi ptr [ %add.ptr.i, %if.then.i183 ], [ %44, %if.end.i184 ]
  %45 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %retval.0.i185 = load i32, ptr %retval.0.in.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %38, i32 %retval.0.i185)
  %cmp26 = icmp slt i32 %38, %retval.0.i185
  br i1 %cmp26, label %sk_get_rmem0.exit.cleanup109_crit_edge, label %sk_get_rmem0.exit.if.end44_crit_edge

sk_get_rmem0.exit.if.end44_crit_edge:             ; preds = %sk_get_rmem0.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44

sk_get_rmem0.exit.cleanup109_crit_edge:           ; preds = %sk_get_rmem0.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

if.else:                                          ; preds = %if.end21
  %sysctl_wmem_offset.i = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 38
  %46 = ptrtoint ptr %sysctl_wmem_offset.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sysctl_wmem_offset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.not.i186 = icmp eq i32 %47, 0
  br i1 %tobool.not.i186, label %if.end.i190, label %if.then.i189

if.then.i189:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %skc_net.i.i187 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %48 = ptrtoint ptr %skc_net.i.i187 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %skc_net.i.i187, align 4
  %add.ptr.i188 = getelementptr i8, ptr %49, i32 %47
  br label %sk_get_wmem0.exit

if.end.i190:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %sysctl_wmem.i = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 36
  %50 = ptrtoint ptr %sysctl_wmem.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %sysctl_wmem.i, align 4
  br label %sk_get_wmem0.exit

sk_get_wmem0.exit:                                ; preds = %if.end.i190, %if.then.i189
  %retval.0.in.i191 = phi ptr [ %add.ptr.i188, %if.then.i189 ], [ %51, %if.end.i190 ]
  %52 = ptrtoint ptr %retval.0.in.i191 to i32
  call void @__asan_load4_noabort(i32 %52)
  %retval.0.i192 = load i32, ptr %retval.0.in.i191, align 4
  %sk_type = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %53 = ptrtoint ptr %sk_type to i32
  call void @__asan_load2_noabort(i32 %53)
  %54 = load i16, ptr %sk_type, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %54)
  %cmp30 = icmp eq i16 %54, 1
  br i1 %cmp30, label %if.then32, label %if.else37

if.then32:                                        ; preds = %sk_get_wmem0.exit
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %55 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %sk_wmem_queued, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %retval.0.i192)
  %cmp33 = icmp slt i32 %56, %retval.0.i192
  br i1 %cmp33, label %if.then32.cleanup109_crit_edge, label %if.then32.if.end44_crit_edge

if.then32.if.end44_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44

if.then32.cleanup109_crit_edge:                   ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

if.else37:                                        ; preds = %sk_get_wmem0.exit
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i193 = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  %57 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %sk_wmem_alloc, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %58, i32 %retval.0.i192)
  %cmp39 = icmp ult i32 %58, %retval.0.i192
  br i1 %cmp39, label %if.else37.cleanup109_crit_edge, label %if.else37.if.end44_crit_edge

if.else37.if.end44_crit_edge:                     ; preds = %if.else37
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end44

if.else37.cleanup109_crit_edge:                   ; preds = %if.else37
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

if.end44:                                         ; preds = %if.else37.if.end44_crit_edge, %if.then32.if.end44_crit_edge, %sk_get_rmem0.exit.if.end44_crit_edge
  %59 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %skc_prot, align 8
  %memory_pressure.i = getelementptr inbounds %struct.proto, ptr %60, i32 0, i32 34
  %61 = ptrtoint ptr %memory_pressure.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %memory_pressure.i, align 4
  %cmp.i.not = icmp eq ptr %62, null
  br i1 %cmp.i.not, label %if.end44.suppress_allocation_crit_edge, label %if.end.i198

if.end44.suppress_allocation_crit_edge:           ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #19
  br label %suppress_allocation

if.end.i198:                                      ; preds = %if.end44
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memcg_sockets_enabled_key, ptr blockaddress(@__sk_mem_raise_allocated, %land.lhs.true.i)) #17
          to label %sk_under_memory_pressure.exit [label %land.lhs.true.i], !srcloc !891

land.lhs.true.i:                                  ; preds = %if.end.i198
  %sk_memcg.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %63 = ptrtoint ptr %sk_memcg.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sk_memcg.i, align 8
  %tobool4.not.i = icmp eq ptr %64, null
  br i1 %tobool4.not.i, label %land.lhs.true.i.sk_under_memory_pressure.exit_crit_edge, label %land.lhs.true5.i

land.lhs.true.i.sk_under_memory_pressure.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_under_memory_pressure.exit

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@__sk_mem_raise_allocated, %land.lhs.true.i.i)) #17
          to label %do.body.i.i [label %land.lhs.true.i.i], !srcloc !891

land.lhs.true.i.i:                                ; preds = %land.lhs.true5.i
  %tcpmem_pressure.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %64, i32 0, i32 31
  %65 = ptrtoint ptr %tcpmem_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %tcpmem_pressure.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool4.not.i.i = icmp eq i32 %66, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i.do.body.i.i_crit_edge, label %land.lhs.true.i.i.if.end49_crit_edge

land.lhs.true.i.i.if.end49_crit_edge:             ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

land.lhs.true.i.i.do.body.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %land.lhs.true.i.i.do.body.i.i_crit_edge, %land.lhs.true5.i
  %memcg.addr.0.i.i = phi ptr [ %add.ptr.i.i.i, %do.cond.i.i.do.body.i.i_crit_edge ], [ %64, %land.lhs.true.i.i.do.body.i.i_crit_edge ], [ %64, %land.lhs.true5.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %67 = load volatile i32, ptr @jiffies, align 128
  %socket_pressure.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 29
  %68 = ptrtoint ptr %socket_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %socket_pressure.i.i, align 8
  %sub.i.i = sub i32 %67, %69
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %do.body.i.i.if.end49_crit_edge, label %do.cond.i.i

do.body.i.i.if.end49_crit_edge:                   ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

do.cond.i.i:                                      ; preds = %do.body.i.i
  %parent.i.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 2, i32 13
  %70 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %parent.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %71, null
  %add.ptr.i.i.i = getelementptr i8, ptr %71, i32 -176
  %tobool10.not16.i.i = icmp eq ptr %add.ptr.i.i.i, null
  %tobool10.not.i.i = or i1 %tobool.not.i.i.i, %tobool10.not16.i.i
  br i1 %tobool10.not.i.i, label %do.cond.i.i.sk_under_memory_pressure.exit_crit_edge, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

do.cond.i.i.sk_under_memory_pressure.exit_crit_edge: ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_under_memory_pressure.exit

sk_under_memory_pressure.exit:                    ; preds = %do.cond.i.i.sk_under_memory_pressure.exit_crit_edge, %land.lhs.true.i.sk_under_memory_pressure.exit_crit_edge, %if.end.i198
  %72 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %skc_prot, align 8
  %memory_pressure12.i = getelementptr inbounds %struct.proto, ptr %73, i32 0, i32 34
  %74 = ptrtoint ptr %memory_pressure12.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %memory_pressure12.i, align 4
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %75, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %tobool13.i.not = icmp eq i32 %77, 0
  br i1 %tobool13.i.not, label %sk_under_memory_pressure.exit.cleanup109_crit_edge, label %sk_under_memory_pressure.exit.if.end49_crit_edge

sk_under_memory_pressure.exit.if.end49_crit_edge: ; preds = %sk_under_memory_pressure.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

sk_under_memory_pressure.exit.cleanup109_crit_edge: ; preds = %sk_under_memory_pressure.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

if.end49:                                         ; preds = %sk_under_memory_pressure.exit.if.end49_crit_edge, %do.body.i.i.if.end49_crit_edge, %land.lhs.true.i.i.if.end49_crit_edge
  %78 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %skc_prot, align 8
  %sockets_allocated.i = getelementptr inbounds %struct.proto, ptr %79, i32 0, i32 33
  %80 = ptrtoint ptr %sockets_allocated.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %sockets_allocated.i, align 4
  %count.i.i = getelementptr inbounds %struct.percpu_counter, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load volatile i64, ptr %count.i.i, align 8
  %84 = tail call i64 @llvm.smax.i64(i64 %83, i64 0) #17
  %sysctl_mem.i202 = getelementptr inbounds %struct.proto, ptr %79, i32 0, i32 35
  %85 = ptrtoint ptr %sysctl_mem.i202 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %sysctl_mem.i202, align 4
  %arrayidx.i203 = getelementptr i32, ptr %86, i32 2
  %87 = ptrtoint ptr %arrayidx.i203 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %arrayidx.i203, align 4
  %conv52 = sext i32 %88 to i64
  %sk_wmem_queued53 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %89 = ptrtoint ptr %sk_wmem_queued53 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %sk_wmem_queued53, align 8
  %sk_backlog54 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i171 = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog54, i32 noundef 4) #17
  %91 = ptrtoint ptr %sk_backlog54 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %sk_backlog54, align 4
  %sk_forward_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %93 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %sk_forward_alloc, align 8
  %add = add i32 %90, 4095
  %add57 = add i32 %add, %92
  %sub.i = add i32 %add57, %94
  %shr.i = ashr i32 %sub.i, 12
  %conv59 = sext i32 %shr.i to i64
  %mul = mul i64 %84, %conv59
  call void @__sanitizer_cov_trace_cmp8(i64 %mul, i64 %conv52)
  %cmp60.not = icmp ult i64 %mul, %conv52
  br i1 %cmp60.not, label %if.end49.cleanup109_crit_edge, label %if.end49.suppress_allocation_crit_edge

if.end49.suppress_allocation_crit_edge:           ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #19
  br label %suppress_allocation

if.end49.cleanup109_crit_edge:                    ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

suppress_allocation:                              ; preds = %if.end49.suppress_allocation_crit_edge, %if.end44.suppress_allocation_crit_edge, %if.end17.suppress_allocation_crit_edge, %land.lhs.true.suppress_allocation_crit_edge
  %95 = phi i1 [ %13, %if.end17.suppress_allocation_crit_edge ], [ %13, %if.end49.suppress_allocation_crit_edge ], [ %13, %if.end44.suppress_allocation_crit_edge ], [ true, %land.lhs.true.suppress_allocation_crit_edge ]
  %charged.1.off0 = phi i1 [ true, %if.end17.suppress_allocation_crit_edge ], [ true, %if.end49.suppress_allocation_crit_edge ], [ true, %if.end44.suppress_allocation_crit_edge ], [ false, %land.lhs.true.suppress_allocation_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %kind)
  %cmp68 = icmp eq i32 %kind, 0
  br i1 %cmp68, label %land.lhs.true70, label %lor.lhs.false.critedge

land.lhs.true70:                                  ; preds = %suppress_allocation
  %sk_type71 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %96 = ptrtoint ptr %sk_type71 to i32
  call void @__asan_load2_noabort(i32 %96)
  %97 = load i16, ptr %sk_type71, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %97)
  %cmp73 = icmp eq i16 %97, 1
  br i1 %cmp73, label %if.then75, label %land.lhs.true70.if.then99_crit_edge

land.lhs.true70.if.then99_crit_edge:              ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then99

if.then75:                                        ; preds = %land.lhs.true70
  %sk_userlocks.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %98 = ptrtoint ptr %sk_userlocks.i to i32
  call void @__asan_load1_noabort(i32 %98)
  %bf.load.i = load i8, ptr %sk_userlocks.i, align 8
  %99 = and i8 %bf.load.i, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %99)
  %tobool.not.i204 = icmp eq i8 %99, 0
  br i1 %tobool.not.i204, label %if.end.i206, label %if.then75.sk_stream_moderate_sndbuf.exit_crit_edge

if.then75.sk_stream_moderate_sndbuf.exit_crit_edge: ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_moderate_sndbuf.exit

if.end.i206:                                      ; preds = %if.then75
  %sk_sndbuf.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %100 = ptrtoint ptr %sk_sndbuf.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %sk_sndbuf.i, align 4
  %sk_wmem_queued.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %102 = ptrtoint ptr %sk_wmem_queued.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %sk_wmem_queued.i, align 8
  %shr.i205 = ashr i32 %103, 1
  %104 = tail call i32 @llvm.smin.i32(i32 %101, i32 %shr.i205) #17
  %sk_reserved_mem.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %105 = ptrtoint ptr %sk_reserved_mem.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %sk_reserved_mem.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %106)
  %tobool.not.i.i = icmp eq i32 %106, 0
  br i1 %tobool.not.i.i, label %if.end.i206.sk_unused_reserved_mem.exit.i_crit_edge, label %if.end.i.i207, !prof !888

if.end.i206.sk_unused_reserved_mem.exit.i_crit_edge: ; preds = %if.end.i206
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i

if.end.i.i207:                                    ; preds = %if.end.i206
  call void @__sanitizer_cov_trace_pc() #19
  %sk_backlog.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i, i32 noundef 4) #17
  %107 = ptrtoint ptr %sk_backlog.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %sk_backlog.i.i, align 4
  %109 = add i32 %103, %108
  %sub5.i.i = sub i32 %106, %109
  %110 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i

sk_unused_reserved_mem.exit.i:                    ; preds = %if.end.i.i207, %if.end.i206.sk_unused_reserved_mem.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %110, %if.end.i.i207 ], [ 0, %if.end.i206.sk_unused_reserved_mem.exit.i_crit_edge ]
  %111 = tail call i32 @llvm.umax.i32(i32 %104, i32 %retval.0.i.i) #17
  %112 = tail call i32 @llvm.umax.i32(i32 %111, i32 4608) #17
  %113 = ptrtoint ptr %sk_sndbuf.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store volatile i32 %112, ptr %sk_sndbuf.i, align 4
  br label %sk_stream_moderate_sndbuf.exit

sk_stream_moderate_sndbuf.exit:                   ; preds = %sk_unused_reserved_mem.exit.i, %if.then75.sk_stream_moderate_sndbuf.exit_crit_edge
  %sk_wmem_queued76 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %114 = ptrtoint ptr %sk_wmem_queued76 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %sk_wmem_queued76, align 8
  %add77 = add i32 %115, %size
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %116 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %sk_sndbuf, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add77, i32 %117)
  %cmp78.not = icmp slt i32 %add77, %117
  br i1 %cmp78.not, label %sk_stream_moderate_sndbuf.exit.if.then99_crit_edge, label %if.then80

sk_stream_moderate_sndbuf.exit.if.then99_crit_edge: ; preds = %sk_stream_moderate_sndbuf.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then99

if.then80:                                        ; preds = %sk_stream_moderate_sndbuf.exit
  %.not = xor i1 %95, true
  %brmerge = or i1 %charged.1.off0, %.not
  br i1 %brmerge, label %if.then80.cleanup109_crit_edge, label %if.then85

if.then80.cleanup109_crit_edge:                   ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

if.then85:                                        ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #19
  %sk_memcg86 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %118 = ptrtoint ptr %sk_memcg86 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %sk_memcg86, align 8
  %120 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i208 = and i32 %120, -16384
  %121 = inttoptr i32 %and.i.i.i208 to ptr
  %preempt_count.i.i209 = getelementptr inbounds %struct.thread_info, ptr %121, i32 0, i32 1
  %122 = ptrtoint ptr %preempt_count.i.i209 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load volatile i32, ptr %preempt_count.i.i209, align 4
  %and.i210 = and i32 %123, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i210)
  %tobool.not.i211 = icmp eq i32 %and.i210, 0
  %or = select i1 %tobool.not.i211, i32 36032, i32 34816
  %call88 = tail call zeroext i1 @mem_cgroup_charge_skmem(ptr noundef %119, i32 noundef %amt, i32 noundef %or) #17
  br label %cleanup109

lor.lhs.false.critedge:                           ; preds = %suppress_allocation
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %kind)
  %cmp94 = icmp eq i32 %kind, 1
  %124 = and i1 %cmp94, %charged.1.off0
  br i1 %124, label %lor.lhs.false.critedge.if.then99_crit_edge, label %lor.lhs.false.critedge.if.end100_crit_edge

lor.lhs.false.critedge.if.end100_crit_edge:       ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end100

lor.lhs.false.critedge.if.then99_crit_edge:       ; preds = %lor.lhs.false.critedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then99

if.then99:                                        ; preds = %lor.lhs.false.critedge.if.then99_crit_edge, %sk_stream_moderate_sndbuf.exit.if.then99_crit_edge, %land.lhs.true70.if.then99_crit_edge
  tail call fastcc void @trace_sock_exceed_buf_limit(ptr noundef %sk, ptr noundef %1, i32 noundef %asmresult.i.i.i.i.i, i32 noundef %kind)
  br label %if.end100

if.end100:                                        ; preds = %if.then99, %lor.lhs.false.critedge.if.end100_crit_edge
  %125 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %skc_prot, align 8
  %memory_allocated.i214 = getelementptr inbounds %struct.proto, ptr %126, i32 0, i32 32
  %127 = ptrtoint ptr %memory_allocated.i214 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %memory_allocated.i214, align 4
  %call.i.i.i215 = tail call zeroext i1 @__kasan_check_write(ptr noundef %128, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %128, i32 1, i32 3, i32 1) #17
  %129 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %128, ptr %128, i32 %amt, ptr elementtype(i32) %128) #17, !srcloc !928
  %brmerge170.demorgan = and i1 %95, %charged.1.off0
  br i1 %brmerge170.demorgan, label %if.then106, label %if.end100.cleanup109_crit_edge

if.end100.cleanup109_crit_edge:                   ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup109

if.then106:                                       ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #19
  %sk_memcg107 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %130 = ptrtoint ptr %sk_memcg107 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %sk_memcg107, align 8
  tail call void @mem_cgroup_uncharge_skmem(ptr noundef %131, i32 noundef %amt) #17
  br label %cleanup109

cleanup109:                                       ; preds = %if.then106, %if.end100.cleanup109_crit_edge, %if.then85, %if.then80.cleanup109_crit_edge, %if.end49.cleanup109_crit_edge, %sk_under_memory_pressure.exit.cleanup109_crit_edge, %if.else37.cleanup109_crit_edge, %if.then32.cleanup109_crit_edge, %sk_get_rmem0.exit.cleanup109_crit_edge, %do.body14.i, %do.end.i.cleanup109_crit_edge, %if.else.i.cleanup109_crit_edge, %if.then.i
  %retval.3 = phi i32 [ 1, %if.end49.cleanup109_crit_edge ], [ 1, %sk_get_rmem0.exit.cleanup109_crit_edge ], [ 1, %if.else37.cleanup109_crit_edge ], [ 1, %if.then32.cleanup109_crit_edge ], [ 1, %if.then80.cleanup109_crit_edge ], [ 1, %if.then85 ], [ 0, %if.end100.cleanup109_crit_edge ], [ 0, %if.then106 ], [ 1, %sk_under_memory_pressure.exit.cleanup109_crit_edge ], [ 1, %if.then.i ], [ 1, %if.else.i.cleanup109_crit_edge ], [ 1, %do.end.i.cleanup109_crit_edge ], [ 1, %do.body14.i ]
  ret i32 %retval.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mem_cgroup_charge_skmem(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_sock_exceed_buf_limit(ptr noundef %sk, ptr noundef %prot, i32 noundef %allocated, i32 noundef %kind) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_sock_exceed_buf_limit, i32 0, i32 1), ptr blockaddress(@trace_sock_exceed_buf_limit, %do.body)) #17
          to label %if.end48 [label %do.body], !srcloc !891

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !888

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  %9 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !949
  %call42 = tail call i32 @__traceiter_sock_exceed_buf_limit(ptr noundef null, ptr noundef %sk, ptr noundef %prot, i32 noundef %allocated, i32 noundef %kind) #17
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !950
  %13 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !888

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !894
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_sock_exceed_buf_limit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_sock_exceed_buf_limit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_sock_exceed_buf_limit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @trace_sock_exceed_buf_limit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.16, i32 noundef 136, ptr noundef nonnull @.str.2) #17
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !895
  %31 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_uncharge_skmem(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__sk_mem_schedule(ptr noundef %sk, i32 noundef %size, i32 noundef %kind) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sub.i = add i32 %size, 4095
  %shr.i = ashr i32 %sub.i, 12
  %shl = and i32 %sub.i, -4096
  %sk_forward_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %0 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_forward_alloc, align 8
  %add = add i32 %1, %shl
  store i32 %add, ptr %sk_forward_alloc, align 8
  %call1 = tail call i32 @__sk_mem_raise_allocated(ptr noundef %sk, i32 noundef %size, i32 noundef %shr.i, i32 noundef %kind)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %2 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sk_forward_alloc, align 8
  %sub = sub i32 %3, %shl
  store i32 %sub, ptr %sk_forward_alloc, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__sk_mem_reduce_allocated(ptr noundef %sk, i32 noundef %amount) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_prot.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %0 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_prot.i, align 8
  %memory_allocated.i = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 32
  %2 = ptrtoint ptr %memory_allocated.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %memory_allocated.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %3, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %3, i32 1, i32 3, i32 1) #17
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %3, ptr %3, i32 %amount, ptr elementtype(i32) %3) #17, !srcloc !928
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memcg_sockets_enabled_key, ptr blockaddress(@__sk_mem_reduce_allocated, %land.lhs.true)) #17
          to label %if.end [label %land.lhs.true], !srcloc !891

land.lhs.true:                                    ; preds = %entry
  %sk_memcg = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %5 = ptrtoint ptr %sk_memcg to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sk_memcg, align 8
  %tobool3.not = icmp eq ptr %6, null
  br i1 %tobool3.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mem_cgroup_uncharge_skmem(ptr noundef nonnull %6, i32 noundef %amount) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry
  %7 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %skc_prot.i, align 8
  %memory_pressure.i = getelementptr inbounds %struct.proto, ptr %8, i32 0, i32 34
  %9 = ptrtoint ptr %memory_pressure.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %memory_pressure.i, align 4
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %if.end.if.end10_crit_edge, label %if.end.i

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.end.i:                                         ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memcg_sockets_enabled_key, ptr blockaddress(@__sk_mem_reduce_allocated, %land.lhs.true.i)) #17
          to label %sk_under_memory_pressure.exit [label %land.lhs.true.i], !srcloc !891

land.lhs.true.i:                                  ; preds = %if.end.i
  %sk_memcg.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %11 = ptrtoint ptr %sk_memcg.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sk_memcg.i, align 8
  %tobool4.not.i = icmp eq ptr %12, null
  br i1 %tobool4.not.i, label %land.lhs.true.i.sk_under_memory_pressure.exit_crit_edge, label %land.lhs.true5.i

land.lhs.true.i.sk_under_memory_pressure.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_under_memory_pressure.exit

land.lhs.true5.i:                                 ; preds = %land.lhs.true.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@__sk_mem_reduce_allocated, %land.lhs.true.i.i)) #17
          to label %do.body.i.i [label %land.lhs.true.i.i], !srcloc !891

land.lhs.true.i.i:                                ; preds = %land.lhs.true5.i
  %tcpmem_pressure.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %12, i32 0, i32 31
  %13 = ptrtoint ptr %tcpmem_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %tcpmem_pressure.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool4.not.i.i = icmp eq i32 %14, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i.do.body.i.i_crit_edge, label %land.lhs.true.i.i.land.lhs.true6_crit_edge

land.lhs.true.i.i.land.lhs.true6_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true6

land.lhs.true.i.i.do.body.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %land.lhs.true.i.i.do.body.i.i_crit_edge, %land.lhs.true5.i
  %memcg.addr.0.i.i = phi ptr [ %add.ptr.i.i.i, %do.cond.i.i.do.body.i.i_crit_edge ], [ %12, %land.lhs.true.i.i.do.body.i.i_crit_edge ], [ %12, %land.lhs.true5.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %15 = load volatile i32, ptr @jiffies, align 128
  %socket_pressure.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 29
  %16 = ptrtoint ptr %socket_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %socket_pressure.i.i, align 8
  %sub.i.i = sub i32 %15, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %do.body.i.i.land.lhs.true6_crit_edge, label %do.cond.i.i

do.body.i.i.land.lhs.true6_crit_edge:             ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true6

do.cond.i.i:                                      ; preds = %do.body.i.i
  %parent.i.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 2, i32 13
  %18 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %19, null
  %add.ptr.i.i.i = getelementptr i8, ptr %19, i32 -176
  %tobool10.not16.i.i = icmp eq ptr %add.ptr.i.i.i, null
  %tobool10.not.i.i = or i1 %tobool.not.i.i.i, %tobool10.not16.i.i
  br i1 %tobool10.not.i.i, label %do.cond.i.i.sk_under_memory_pressure.exit_crit_edge, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

do.cond.i.i.sk_under_memory_pressure.exit_crit_edge: ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_under_memory_pressure.exit

sk_under_memory_pressure.exit:                    ; preds = %do.cond.i.i.sk_under_memory_pressure.exit_crit_edge, %land.lhs.true.i.sk_under_memory_pressure.exit_crit_edge, %if.end.i
  %20 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %skc_prot.i, align 8
  %memory_pressure12.i = getelementptr inbounds %struct.proto, ptr %21, i32 0, i32 34
  %22 = ptrtoint ptr %memory_pressure12.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %memory_pressure12.i, align 4
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool13.i.not = icmp eq i32 %25, 0
  br i1 %tobool13.i.not, label %sk_under_memory_pressure.exit.if.end10_crit_edge, label %sk_under_memory_pressure.exit.land.lhs.true6_crit_edge

sk_under_memory_pressure.exit.land.lhs.true6_crit_edge: ; preds = %sk_under_memory_pressure.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true6

sk_under_memory_pressure.exit.if.end10_crit_edge: ; preds = %sk_under_memory_pressure.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

land.lhs.true6:                                   ; preds = %sk_under_memory_pressure.exit.land.lhs.true6_crit_edge, %do.body.i.i.land.lhs.true6_crit_edge, %land.lhs.true.i.i.land.lhs.true6_crit_edge
  %26 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %skc_prot.i, align 8
  %memory_allocated.i21 = getelementptr inbounds %struct.proto, ptr %27, i32 0, i32 32
  %28 = ptrtoint ptr %memory_allocated.i21 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %memory_allocated.i21, align 4
  %call.i.i.i22 = tail call zeroext i1 @__kasan_check_read(ptr noundef %29, i32 noundef 4) #17
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %29, align 4
  %32 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %skc_prot.i, align 8
  %sysctl_mem.i = getelementptr inbounds %struct.proto, ptr %33, i32 0, i32 35
  %34 = ptrtoint ptr %sysctl_mem.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sysctl_mem.i, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %37)
  %cmp = icmp slt i32 %31, %37
  br i1 %cmp, label %if.then9, label %land.lhs.true6.if.end10_crit_edge

land.lhs.true6.if.end10_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then9:                                         ; preds = %land.lhs.true6
  %leave_memory_pressure.i = getelementptr inbounds %struct.proto, ptr %33, i32 0, i32 31
  %38 = ptrtoint ptr %leave_memory_pressure.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %leave_memory_pressure.i, align 4
  %tobool.not.i25 = icmp eq ptr %39, null
  br i1 %tobool.not.i25, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %39(ptr noundef %sk) #17
  br label %if.end10

if.else.i:                                        ; preds = %if.then9
  %memory_pressure6.i = getelementptr inbounds %struct.proto, ptr %33, i32 0, i32 34
  %40 = ptrtoint ptr %memory_pressure6.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %memory_pressure6.i, align 4
  %tobool7.not.i = icmp eq ptr %41, null
  br i1 %tobool7.not.i, label %if.else.i.if.end10_crit_edge, label %do.end.i

if.else.i.if.end10_crit_edge:                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

do.end.i:                                         ; preds = %if.else.i
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %41, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool8.not.i = icmp eq i32 %43, 0
  br i1 %tobool8.not.i, label %do.end.i.if.end10_crit_edge, label %do.body14.i

do.end.i.if.end10_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

do.body14.i:                                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %44 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile i32 0, ptr %41, align 4
  br label %if.end10

if.end10:                                         ; preds = %do.body14.i, %do.end.i.if.end10_crit_edge, %if.else.i.if.end10_crit_edge, %if.then.i, %land.lhs.true6.if.end10_crit_edge, %sk_under_memory_pressure.exit.if.end10_crit_edge, %if.end.if.end10_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__sk_mem_reclaim(ptr noundef %sk, i32 noundef %amount) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %shr = ashr i32 %amount, 12
  %shl = and i32 %amount, -4096
  %sk_forward_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %0 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_forward_alloc, align 8
  %sub = sub i32 %1, %shl
  store i32 %sub, ptr %sk_forward_alloc, align 8
  tail call void @__sk_mem_reduce_allocated(ptr noundef %sk, i32 noundef %shr)
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local i32 @sk_set_peek_off(ptr nocapture noundef writeonly %sk, i32 noundef %val) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_peek_off = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 27
  %0 = ptrtoint ptr %sk_peek_off to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %val, ptr %sk_peek_off, align 8
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_bind(ptr nocapture readnone %sock, ptr nocapture readnone %saddr, i32 %len) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_connect(ptr nocapture readnone %sock, ptr nocapture readnone %saddr, i32 %len, i32 %flags) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_socketpair(ptr nocapture readnone %sock1, ptr nocapture readnone %sock2) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_accept(ptr nocapture readnone %sock, ptr nocapture readnone %newsock, i32 %flags, i1 zeroext %kern) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_getname(ptr nocapture readnone %sock, ptr nocapture readnone %saddr, i32 %peer) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_ioctl(ptr nocapture readnone %sock, i32 %cmd, i32 %arg) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_listen(ptr nocapture readnone %sock, i32 %backlog) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_shutdown(ptr nocapture readnone %sock, i32 %how) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_sendmsg(ptr nocapture readnone %sock, ptr nocapture readnone %m, i32 %len) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_sendmsg_locked(ptr nocapture readnone %sk, ptr nocapture readnone %m, i32 %len) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_recvmsg(ptr nocapture readnone %sock, ptr nocapture readnone %m, i32 %len, i32 %flags) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @sock_no_mmap(ptr nocapture readnone %file, ptr nocapture readnone %sock, ptr nocapture readnone %vma) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -19
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__receive_sock(ptr noundef %file) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @sock_from_file(ptr noundef %file) #17
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %sk = getelementptr inbounds %struct.socket, ptr %call, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  %sk_cgrp_data = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 74
  tail call fastcc void @sock_update_netprioidx(ptr noundef %sk_cgrp_data)
  %2 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk, align 16
  %sk_cgrp_data2 = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 74
  tail call fastcc void @sock_update_classid(ptr noundef %sk_cgrp_data2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sock_from_file(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_no_sendpage(ptr noundef %sock, ptr noundef %page, i32 noundef %offset, i32 noundef %size, i32 noundef %flags) #0 align 64 {
entry:
  %msg = alloca %struct.msghdr, align 8
  %iov = alloca %struct.kvec, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %msg) #17
  %0 = call ptr @memset(ptr %msg, i32 0, i32 56)
  %msg_flags = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 6
  %1 = ptrtoint ptr %msg_flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %flags, ptr %msg_flags, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %iov) #17
  %2 = getelementptr inbounds %struct.kvec, ptr %iov, i32 0, i32 1
  tail call void @__might_sleep(ptr noundef nonnull @.str.374, i32 noundef 44) #17
  %3 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %page, align 4
  %shr.i.i = lshr i32 %4, 30
  %5 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.506)
  switch i32 %shr.i.i, label %entry.if.then.i_crit_edge [
    i32 2, label %entry.if.else.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i
  ]

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i

entry.if.then.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i

is_highmem_idx.exit.i:                            ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %6 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %cmp2.i.not.i = icmp eq i32 %6, 2
  br i1 %cmp2.i.not.i, label %is_highmem_idx.exit.i.if.else.i_crit_edge, label %is_highmem_idx.exit.i.if.then.i_crit_edge

is_highmem_idx.exit.i.if.then.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i

is_highmem_idx.exit.i.if.else.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i

if.then.i:                                        ; preds = %is_highmem_idx.exit.i.if.then.i_crit_edge, %entry.if.then.i_crit_edge
  %call5.i = tail call ptr @page_address(ptr noundef %page) #17
  br label %kmap.exit

if.else.i:                                        ; preds = %is_highmem_idx.exit.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %call6.i = tail call ptr @kmap_high(ptr noundef %page) #17
  br label %kmap.exit

kmap.exit:                                        ; preds = %if.else.i, %if.then.i
  %addr.0.i = phi ptr [ %call6.i, %if.else.i ], [ %call5.i, %if.then.i ]
  %add.ptr = getelementptr i8, ptr %addr.0.i, i32 %offset
  %7 = ptrtoint ptr %iov to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr, ptr %iov, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %size, ptr %2, align 4
  %call1 = call i32 @kernel_sendmsg(ptr noundef %sock, ptr noundef nonnull %msg, ptr noundef nonnull %iov, i32 noundef 1, i32 noundef %size) #17
  call void @__might_sleep(ptr noundef nonnull @.str.374, i32 noundef 55) #17
  %9 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %page, align 4
  %shr.i.i4 = lshr i32 %10, 30
  %11 = zext i32 %shr.i.i4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.507)
  switch i32 %shr.i.i4, label %kmap.exit.kunmap.exit_crit_edge [
    i32 2, label %kmap.exit.if.end.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i6
  ]

kmap.exit.if.end.i_crit_edge:                     ; preds = %kmap.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

kmap.exit.kunmap.exit_crit_edge:                  ; preds = %kmap.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %kunmap.exit

is_highmem_idx.exit.i6:                           ; preds = %kmap.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %12 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %12)
  %cmp2.i.not.i5 = icmp eq i32 %12, 2
  br i1 %cmp2.i.not.i5, label %is_highmem_idx.exit.i6.if.end.i_crit_edge, label %is_highmem_idx.exit.i6.kunmap.exit_crit_edge

is_highmem_idx.exit.i6.kunmap.exit_crit_edge:     ; preds = %is_highmem_idx.exit.i6
  call void @__sanitizer_cov_trace_pc() #19
  br label %kunmap.exit

is_highmem_idx.exit.i6.if.end.i_crit_edge:        ; preds = %is_highmem_idx.exit.i6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.end.i:                                         ; preds = %is_highmem_idx.exit.i6.if.end.i_crit_edge, %kmap.exit.if.end.i_crit_edge
  call void @kunmap_high(ptr noundef %page) #17
  br label %kunmap.exit

kunmap.exit:                                      ; preds = %if.end.i, %is_highmem_idx.exit.i6.kunmap.exit_crit_edge, %kmap.exit.kunmap.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %iov) #17
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %msg) #17
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_sendmsg(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_no_sendpage_locked(ptr noundef %sk, ptr noundef %page, i32 noundef %offset, i32 noundef %size, i32 noundef %flags) #0 align 64 {
entry:
  %msg = alloca %struct.msghdr, align 8
  %iov = alloca %struct.kvec, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %msg) #17
  %0 = call ptr @memset(ptr %msg, i32 0, i32 56)
  %msg_flags = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 6
  %1 = ptrtoint ptr %msg_flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %flags, ptr %msg_flags, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %iov) #17
  %2 = getelementptr inbounds %struct.kvec, ptr %iov, i32 0, i32 1
  tail call void @__might_sleep(ptr noundef nonnull @.str.374, i32 noundef 44) #17
  %3 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %page, align 4
  %shr.i.i = lshr i32 %4, 30
  %5 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.508)
  switch i32 %shr.i.i, label %entry.if.then.i_crit_edge [
    i32 2, label %entry.if.else.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i
  ]

entry.if.else.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i

entry.if.then.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i

is_highmem_idx.exit.i:                            ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %6 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %cmp2.i.not.i = icmp eq i32 %6, 2
  br i1 %cmp2.i.not.i, label %is_highmem_idx.exit.i.if.else.i_crit_edge, label %is_highmem_idx.exit.i.if.then.i_crit_edge

is_highmem_idx.exit.i.if.then.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i

is_highmem_idx.exit.i.if.else.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else.i

if.then.i:                                        ; preds = %is_highmem_idx.exit.i.if.then.i_crit_edge, %entry.if.then.i_crit_edge
  %call5.i = tail call ptr @page_address(ptr noundef %page) #17
  br label %kmap.exit

if.else.i:                                        ; preds = %is_highmem_idx.exit.i.if.else.i_crit_edge, %entry.if.else.i_crit_edge
  %call6.i = tail call ptr @kmap_high(ptr noundef %page) #17
  br label %kmap.exit

kmap.exit:                                        ; preds = %if.else.i, %if.then.i
  %addr.0.i = phi ptr [ %call6.i, %if.else.i ], [ %call5.i, %if.then.i ]
  %add.ptr = getelementptr i8, ptr %addr.0.i, i32 %offset
  %7 = ptrtoint ptr %iov to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %add.ptr, ptr %iov, align 4
  %8 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %size, ptr %2, align 4
  %call1 = call i32 @kernel_sendmsg_locked(ptr noundef %sk, ptr noundef nonnull %msg, ptr noundef nonnull %iov, i32 noundef 1, i32 noundef %size) #17
  call void @__might_sleep(ptr noundef nonnull @.str.374, i32 noundef 55) #17
  %9 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %page, align 4
  %shr.i.i4 = lshr i32 %10, 30
  %11 = zext i32 %shr.i.i4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.509)
  switch i32 %shr.i.i4, label %kmap.exit.kunmap.exit_crit_edge [
    i32 2, label %kmap.exit.if.end.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i6
  ]

kmap.exit.if.end.i_crit_edge:                     ; preds = %kmap.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

kmap.exit.kunmap.exit_crit_edge:                  ; preds = %kmap.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %kunmap.exit

is_highmem_idx.exit.i6:                           ; preds = %kmap.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %12 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %12)
  %cmp2.i.not.i5 = icmp eq i32 %12, 2
  br i1 %cmp2.i.not.i5, label %is_highmem_idx.exit.i6.if.end.i_crit_edge, label %is_highmem_idx.exit.i6.kunmap.exit_crit_edge

is_highmem_idx.exit.i6.kunmap.exit_crit_edge:     ; preds = %is_highmem_idx.exit.i6
  call void @__sanitizer_cov_trace_pc() #19
  br label %kunmap.exit

is_highmem_idx.exit.i6.if.end.i_crit_edge:        ; preds = %is_highmem_idx.exit.i6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.end.i:                                         ; preds = %is_highmem_idx.exit.i6.if.end.i_crit_edge, %kmap.exit.if.end.i_crit_edge
  call void @kunmap_high(ptr noundef %page) #17
  br label %kunmap.exit

kunmap.exit:                                      ; preds = %if.end.i, %is_highmem_idx.exit.i6.kunmap.exit_crit_edge, %kmap.exit.kunmap.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %iov) #17
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %msg) #17
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernel_sendmsg_locked(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_def_readable(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 8
  %call = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b14 = load i1, ptr @sock_def_readable.__warned, align 1
  br i1 %.b14, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_def_readable.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3145, ptr noundef nonnull @.str.2) #17
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %tobool.not.i15 = icmp eq ptr %6, null
  br i1 %tobool.not.i15, label %do.end7.if.end11_crit_edge, label %skwq_has_sleeper.exit

do.end7.if.end11_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

skwq_has_sleeper.exit:                            ; preds = %do.end7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !951
  %head.i.i.i = getelementptr inbounds %struct.wait_queue_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %head.i.i.i, align 4
  %cmp.i.i.i.i.not = icmp eq ptr %8, %head.i.i.i
  br i1 %cmp.i.i.i.i.not, label %skwq_has_sleeper.exit.if.end11_crit_edge, label %if.then10

skwq_has_sleeper.exit.if.end11_crit_edge:         ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

if.then10:                                        ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__wake_up_sync_key(ptr noundef nonnull %6, i32 noundef 1, ptr noundef nonnull inttoptr (i32 195 to ptr)) #17
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %skwq_has_sleeper.exit.if.end11_crit_edge, %do.end7.if.end11_crit_edge
  tail call fastcc void @sk_wake_async(ptr noundef %sk, i32 noundef 1, i32 noundef 1)
  %call.i16 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i16, label %if.end11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i19

if.end11.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true.i19:                                ; preds = %if.end11
  %call1.i17 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i17)
  %tobool.not.i18 = icmp eq i32 %call1.i17, 0
  br i1 %tobool.not.i18, label %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i21

land.lhs.true.i19.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i19
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true2.i21:                               ; preds = %land.lhs.true.i19
  %.b4.i20 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i20, label %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, label %if.then.i22

land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

if.then.i22:                                      ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i22, %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, %if.end11.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %9 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i23 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i23 to ptr
  %preempt_count.i.i.i.i24 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i24 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i24, align 4
  %sub.i.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i24, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up_sync_key(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sk_wake_async(ptr noundef %sk, i32 noundef %how, i32 noundef %band) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %3 = and i32 %2, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %entry.if.end12_crit_edge, label %if.then

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then:                                          ; preds = %entry
  %4 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i, label %if.then.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then.rcu_read_lock.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then.rcu_read_lock.exit_crit_edge
  %8 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %8, align 8
  %call2 = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end9_crit_edge

rcu_read_lock.exit.do.end9_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end9_crit_edge, label %land.lhs.true5

land.lhs.true.do.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b14 = load i1, ptr @sk_wake_async.__warned, align 1
  br i1 %.b14, label %land.lhs.true5.do.end9_crit_edge, label %if.then7

land.lhs.true5.do.end9_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sk_wake_async.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.23, i32 noundef 2444, ptr noundef nonnull @.str.2) #17
  br label %do.end9

do.end9:                                          ; preds = %if.then7, %land.lhs.true5.do.end9_crit_edge, %land.lhs.true.do.end9_crit_edge, %rcu_read_lock.exit.do.end9_crit_edge
  %call11 = tail call i32 @sock_wake_async(ptr noundef %10, i32 noundef %how, i32 noundef %band) #17
  %call.i15 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i15, label %do.end9.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i18

do.end9.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true.i18:                                ; preds = %do.end9
  %call1.i16 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i16)
  %tobool.not.i17 = icmp eq i32 %call1.i16, 0
  br i1 %tobool.not.i17, label %land.lhs.true.i18.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i20

land.lhs.true.i18.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i18
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true2.i20:                               ; preds = %land.lhs.true.i18
  %.b4.i19 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i19, label %land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge, label %if.then.i21

land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

if.then.i21:                                      ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i21, %land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i18.rcu_read_unlock.exit_crit_edge, %do.end9.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %11 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i22 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i22 to ptr
  %preempt_count.i.i.i.i23 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i23 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i23, align 4
  %sub.i.i.i = add i32 %14, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i23, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  br label %if.end12

if.end12:                                         ; preds = %rcu_read_unlock.exit, %entry.if.end12_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_send_sigurg(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_socket = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %0 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_socket, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %land.lhs.true

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

land.lhs.true:                                    ; preds = %entry
  %file = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %file, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %land.lhs.true.if.end7_crit_edge, label %if.then

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then:                                          ; preds = %land.lhs.true
  %f_owner = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 11
  %call = tail call i32 @send_sigurg(ptr noundef %f_owner) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool5.not = icmp eq i32 %call, 0
  br i1 %tobool5.not, label %if.then.if.end7_crit_edge, label %if.then6

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @sk_wake_async(ptr noundef %sk, i32 noundef 3, i32 noundef 5)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.then.if.end7_crit_edge, %land.lhs.true.if.end7_crit_edge, %entry.if.end7_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @send_sigurg(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_reset_timer(ptr noundef %sk, ptr noundef %timer, i32 noundef %expires) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mod_timer(ptr noundef %timer, i32 noundef %expires) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !944
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !889

if.then.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.if.end_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !888

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.if.end_crit_edge:                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #17
  br label %if.end

if.end:                                           ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_stop_timer(ptr noundef %sk, ptr noundef %timer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @del_timer(ptr noundef %timer) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.if.end_crit_edge, !prof !889

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then3.i.i.i:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  br label %if.end

if.end:                                           ; preds = %if.then3.i.i.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_stop_timer_sync(ptr noundef %sk, ptr noundef %timer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @del_timer_sync(ptr noundef %timer) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.if.end_crit_edge, !prof !889

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then3.i.i.i:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  br label %if.end

if.end:                                           ; preds = %if.then3.i.i.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sock_init_data(ptr noundef %sock, ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @sk_init_common(ptr noundef %sk)
  %0 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 25
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %0, align 4
  %sk_timer = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 32
  tail call void @init_timer_key(ptr noundef %sk_timer, ptr noundef null, i32 noundef 0, ptr noundef nonnull @.str.3, ptr noundef nonnull @sock_init_data.__key) #17
  %sk_allocation = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 41
  %2 = ptrtoint ptr %sk_allocation to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 3264, ptr %sk_allocation, align 8
  %3 = load i32, ptr @sysctl_rmem_default, align 4
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %4 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %sk_rcvbuf, align 8
  %5 = load i32, ptr @sysctl_wmem_default, align 4
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %6 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %sk_sndbuf, align 4
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %7 = ptrtoint ptr %skc_state to i32
  call void @__asan_store1_noabort(i32 %7)
  store volatile i8 7, ptr %skc_state, align 2
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %8 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %sock, ptr %sk_socket.i, align 8
  %9 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %or.i.i = or i32 %11, 256
  store i32 %or.i.i, ptr %9, align 4
  %tobool.not = icmp eq ptr %sock, null
  br i1 %tobool.not, label %do.body14, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %type = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 1
  %12 = ptrtoint ptr %type to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %type, align 4
  %sk_type = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 45
  %14 = ptrtoint ptr %sk_type to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %13, ptr %sk_type, align 2
  %wq = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 7
  %15 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %wq, ptr %15, align 8
  %sk9 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %17 = ptrtoint ptr %sk9 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %sk, ptr %sk9, align 16
  %i_uid = getelementptr inbounds %struct.socket_alloc, ptr %sock, i32 0, i32 1, i32 2
  %18 = ptrtoint ptr %i_uid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_uid, align 4
  br label %do.body21

do.body14:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %20 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr null, ptr %20, align 8
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %22 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %skc_net.i, align 4
  %user_ns = getelementptr inbounds %struct.net, ptr %23, i32 0, i32 11
  %24 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %user_ns, align 4
  %call20 = tail call i32 @make_kuid(ptr noundef %25, i32 noundef 0) #17
  br label %do.body21

do.body21:                                        ; preds = %do.body14, %if.then
  %.sink = phi i32 [ %call20, %do.body14 ], [ %19, %if.then ]
  %26 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 55
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %.sink, ptr %26, align 4
  %sk_callback_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50
  tail call void @__rwlock_init(ptr noundef %sk_callback_lock, ptr noundef nonnull @.str.5, ptr noundef nonnull @sock_init_data.__key.4) #17
  %sk_kern_sock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %28 = ptrtoint ptr %sk_kern_sock to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load = load i8, ptr %sk_kern_sock, align 8
  %29 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool23.not = icmp eq i8 %29, 0
  %dep_map35 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50, i32 4
  %skc_family37 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 3
  %30 = ptrtoint ptr %skc_family37 to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %skc_family37, align 8
  %idxprom38 = zext i16 %31 to i32
  %af_family_clock_key_strings.af_family_kern_clock_key_strings = select i1 %tobool23.not, ptr @af_family_clock_key_strings, ptr @af_family_kern_clock_key_strings
  %af_callback_keys.af_kern_callback_keys = select i1 %tobool23.not, ptr @af_callback_keys, ptr @af_kern_callback_keys
  %arrayidx39 = getelementptr [47 x ptr], ptr %af_family_clock_key_strings.af_family_kern_clock_key_strings, i32 0, i32 %idxprom38
  %32 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx39, align 4
  %add.ptr43 = getelementptr %struct.lock_class_key, ptr %af_callback_keys.af_kern_callback_keys, i32 %idxprom38
  %wait_type_inner46 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50, i32 4, i32 4
  %34 = ptrtoint ptr %wait_type_inner46 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %wait_type_inner46, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map35, ptr noundef %33, ptr noundef %add.ptr43, i32 noundef 0, i8 noundef zeroext %35, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %sk_state_change = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 76
  %36 = ptrtoint ptr %sk_state_change to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @sock_def_wakeup, ptr %sk_state_change, align 4
  %sk_data_ready = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 77
  %37 = ptrtoint ptr %sk_data_ready to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr @sock_def_readable, ptr %sk_data_ready, align 8
  %sk_write_space = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 78
  %38 = ptrtoint ptr %sk_write_space to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @sock_def_write_space, ptr %sk_write_space, align 4
  %sk_error_report = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 79
  %39 = ptrtoint ptr %sk_error_report to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr @sock_def_error_report, ptr %sk_error_report, align 8
  %sk_destruct = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 82
  %40 = ptrtoint ptr %sk_destruct to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @sock_def_destruct, ptr %sk_destruct, align 4
  %sk_frag = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 37
  %41 = ptrtoint ptr %sk_frag to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %sk_frag, align 4
  %offset = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 37, i32 1
  %42 = ptrtoint ptr %offset to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 0, ptr %offset, align 4
  %sk_peek_off = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 27
  %43 = ptrtoint ptr %sk_peek_off to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 -1, ptr %sk_peek_off, align 8
  %sk_peer_pid = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 60
  %44 = ptrtoint ptr %sk_peer_pid to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %sk_peer_pid, align 4
  %sk_peer_cred = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 61
  %45 = ptrtoint ptr %sk_peer_cred to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %sk_peer_cred, align 8
  %sk_peer_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 58
  tail call void @__raw_spin_lock_init(ptr noundef %sk_peer_lock, ptr noundef nonnull @.str.7, ptr noundef nonnull @sock_init_data.__key.6, i16 noundef signext 3) #17
  %sk_write_pending = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 28
  %46 = ptrtoint ptr %sk_write_pending to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %sk_write_pending, align 4
  %sk_rcvlowat = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 6
  %47 = ptrtoint ptr %sk_rcvlowat to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 1, ptr %sk_rcvlowat, align 8
  %sk_rcvtimeo = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 62
  %48 = ptrtoint ptr %sk_rcvtimeo to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 2147483647, ptr %sk_rcvtimeo, align 4
  %sk_sndtimeo = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 31
  %49 = ptrtoint ptr %sk_sndtimeo to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 2147483647, ptr %sk_sndtimeo, align 8
  %sk_stamp = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 63
  %50 = ptrtoint ptr %sk_stamp to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 -1000000000, ptr %sk_stamp, align 8
  %sk_stamp_seq = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 64
  %lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 64, i32 1
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.9, ptr noundef nonnull @sock_init_data.__key.8, i16 noundef signext 3) #17
  %dep_map.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 64, i32 0, i32 0, i32 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map.i, ptr noundef nonnull @.str.11, ptr noundef nonnull @sock_init_data.__key.10, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %51 = ptrtoint ptr %sk_stamp_seq to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %sk_stamp_seq, align 4
  %lock66 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 64, i32 0, i32 1
  %52 = ptrtoint ptr %lock66 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %lock, ptr %lock66, align 4
  %sk_zckey = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 68
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_zckey, i32 noundef 4) #17
  %53 = ptrtoint ptr %sk_zckey to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile i32 0, ptr %sk_zckey, align 4
  %sk_napi_id = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 14
  %54 = ptrtoint ptr %sk_napi_id to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %sk_napi_id, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sysctl_net_busy_read to i32))
  %55 = load i32, ptr @sysctl_net_busy_read, align 4
  %sk_ll_usec = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 13
  %56 = ptrtoint ptr %sk_ll_usec to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %sk_ll_usec, align 8
  %sk_max_pacing_rate = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 36
  %57 = ptrtoint ptr %sk_max_pacing_rate to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 -1, ptr %sk_max_pacing_rate, align 8
  %sk_pacing_rate = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 35
  %58 = ptrtoint ptr %sk_pacing_rate to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 -1, ptr %sk_pacing_rate, align 4
  %sk_pacing_shift = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 44
  %59 = ptrtoint ptr %sk_pacing_shift to i32
  call void @__asan_store1_noabort(i32 %59)
  store volatile i8 10, ptr %sk_pacing_shift, align 1
  %60 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 18
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 -1, ptr %60, align 8
  %skc_rx_queue_mapping.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 17
  %62 = ptrtoint ptr %skc_rx_queue_mapping.i to i32
  call void @__asan_store2_noabort(i32 %62)
  store volatile i16 -1, ptr %skc_rx_queue_mapping.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !952
  %skc_refcnt = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt, i32 noundef 4) #17
  %63 = ptrtoint ptr %skc_refcnt to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile i32 1, ptr %skc_refcnt, align 4
  %sk_drops = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 5
  %call.i.i150 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops, i32 noundef 4) #17
  %64 = ptrtoint ptr %sk_drops to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile i32 0, ptr %sk_drops, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kuid(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__rwlock_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sock_def_wakeup(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 8
  %call = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b13 = load i1, ptr @sock_def_wakeup.__warned, align 1
  br i1 %.b13, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_def_wakeup.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3122, ptr noundef nonnull @.str.2) #17
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %tobool.not.i14 = icmp eq ptr %6, null
  br i1 %tobool.not.i14, label %do.end7.if.end11_crit_edge, label %skwq_has_sleeper.exit

do.end7.if.end11_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

skwq_has_sleeper.exit:                            ; preds = %do.end7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !951
  %head.i.i.i = getelementptr inbounds %struct.wait_queue_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %head.i.i.i, align 4
  %cmp.i.i.i.i.not = icmp eq ptr %8, %head.i.i.i
  br i1 %cmp.i.i.i.i.not, label %skwq_has_sleeper.exit.if.end11_crit_edge, label %if.then10

skwq_has_sleeper.exit.if.end11_crit_edge:         ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

if.then10:                                        ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__wake_up(ptr noundef nonnull %6, i32 noundef 1, i32 noundef 0, ptr noundef null) #17
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %skwq_has_sleeper.exit.if.end11_crit_edge, %do.end7.if.end11_crit_edge
  %call.i15 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i15, label %if.end11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i18

if.end11.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true.i18:                                ; preds = %if.end11
  %call1.i16 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i16)
  %tobool.not.i17 = icmp eq i32 %call1.i16, 0
  br i1 %tobool.not.i17, label %land.lhs.true.i18.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i20

land.lhs.true.i18.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i18
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true2.i20:                               ; preds = %land.lhs.true.i18
  %.b4.i19 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i19, label %land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge, label %if.then.i21

land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

if.then.i21:                                      ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i21, %land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i18.rcu_read_unlock.exit_crit_edge, %if.end11.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %9 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i22 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i22 to ptr
  %preempt_count.i.i.i.i23 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i23 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i23, align 4
  %sub.i.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i23, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sock_def_write_space(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %sk_wmem_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  %4 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %sk_wmem_alloc, align 4
  %shl = shl i32 %5, 1
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %6 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %sk_sndbuf, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %shl, i32 %7)
  %cmp.not = icmp ugt i32 %shl, %7
  br i1 %cmp.not, label %rcu_read_lock.exit.if.end21_crit_edge, label %if.then

rcu_read_lock.exit.if.end21_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end21

if.then:                                          ; preds = %rcu_read_lock.exit
  %8 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %8, align 8
  %call6 = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.then.do.end13_crit_edge

if.then.do.end13_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

land.lhs.true:                                    ; preds = %if.then
  %call7 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true.do.end13_crit_edge, label %land.lhs.true9

land.lhs.true.do.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

land.lhs.true9:                                   ; preds = %land.lhs.true
  %.b27 = load i1, ptr @sock_def_write_space.__warned, align 1
  br i1 %.b27, label %land.lhs.true9.do.end13_crit_edge, label %if.then11

land.lhs.true9.do.end13_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end13

if.then11:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_def_write_space.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3163, ptr noundef nonnull @.str.2) #17
  br label %do.end13

do.end13:                                         ; preds = %if.then11, %land.lhs.true9.do.end13_crit_edge, %land.lhs.true.do.end13_crit_edge, %if.then.do.end13_crit_edge
  %tobool.not.i28 = icmp eq ptr %10, null
  br i1 %tobool.not.i28, label %do.end13.if.end17_crit_edge, label %skwq_has_sleeper.exit

do.end13.if.end17_crit_edge:                      ; preds = %do.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

skwq_has_sleeper.exit:                            ; preds = %do.end13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !951
  %head.i.i.i = getelementptr inbounds %struct.wait_queue_head, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %head.i.i.i, align 4
  %cmp.i.i.i.i.not = icmp eq ptr %12, %head.i.i.i
  br i1 %cmp.i.i.i.i.not, label %skwq_has_sleeper.exit.if.end17_crit_edge, label %if.then16

skwq_has_sleeper.exit.if.end17_crit_edge:         ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.then16:                                        ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__wake_up_sync_key(ptr noundef nonnull %10, i32 noundef 1, ptr noundef nonnull inttoptr (i32 772 to ptr)) #17
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %skwq_has_sleeper.exit.if.end17_crit_edge, %do.end13.if.end17_crit_edge
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_wmem_alloc, i32 noundef 4) #17
  %13 = ptrtoint ptr %sk_wmem_alloc to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %sk_wmem_alloc, align 4
  %15 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %sk_sndbuf, align 4
  %shr.i = ashr i32 %16, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %shr.i)
  %cmp.i = icmp ult i32 %14, %shr.i
  br i1 %cmp.i, label %if.then19, label %if.end17.if.end21_crit_edge

if.end17.if.end21_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end21

if.then19:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @sk_wake_async(ptr noundef %sk, i32 noundef 2, i32 noundef 2)
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end17.if.end21_crit_edge, %rcu_read_lock.exit.if.end21_crit_edge
  %call.i29 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i29, label %if.end21.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i32

if.end21.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true.i32:                                ; preds = %if.end21
  %call1.i30 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i30)
  %tobool.not.i31 = icmp eq i32 %call1.i30, 0
  br i1 %tobool.not.i31, label %land.lhs.true.i32.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i34

land.lhs.true.i32.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i32
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true2.i34:                               ; preds = %land.lhs.true.i32
  %.b4.i33 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i33, label %land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge, label %if.then.i35

land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i34
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

if.then.i35:                                      ; preds = %land.lhs.true2.i34
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i35, %land.lhs.true2.i34.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i32.rcu_read_unlock.exit_crit_edge, %if.end21.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %17 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i36 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i.i36 to ptr
  %preempt_count.i.i.i.i37 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i.i37 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i.i37, align 4
  %sub.i.i.i = add i32 %20, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i37, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sock_def_error_report(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !911
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 696, ptr noundef nonnull @.str.370) #17
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %4, align 8
  %call = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b14 = load i1, ptr @sock_def_error_report.__warned, align 1
  br i1 %.b14, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_def_error_report.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str, i32 noundef 3133, ptr noundef nonnull @.str.2) #17
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %tobool.not.i15 = icmp eq ptr %6, null
  br i1 %tobool.not.i15, label %do.end7.if.end11_crit_edge, label %skwq_has_sleeper.exit

do.end7.if.end11_crit_edge:                       ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

skwq_has_sleeper.exit:                            ; preds = %do.end7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !951
  %head.i.i.i = getelementptr inbounds %struct.wait_queue_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %head.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %head.i.i.i, align 4
  %cmp.i.i.i.i.not = icmp eq ptr %8, %head.i.i.i
  br i1 %cmp.i.i.i.i.not, label %skwq_has_sleeper.exit.if.end11_crit_edge, label %if.then10

skwq_has_sleeper.exit.if.end11_crit_edge:         ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

if.then10:                                        ; preds = %skwq_has_sleeper.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__wake_up(ptr noundef nonnull %6, i32 noundef 1, i32 noundef 1, ptr noundef nonnull inttoptr (i32 8 to ptr)) #17
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %skwq_has_sleeper.exit.if.end11_crit_edge, %do.end7.if.end11_crit_edge
  tail call fastcc void @sk_wake_async(ptr noundef %sk, i32 noundef 0, i32 noundef 4)
  %call.i16 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i16, label %if.end11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i19

if.end11.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true.i19:                                ; preds = %if.end11
  %call1.i17 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i17)
  %tobool.not.i18 = icmp eq i32 %call1.i17, 0
  br i1 %tobool.not.i18, label %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i21

land.lhs.true.i19.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i19
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true2.i21:                               ; preds = %land.lhs.true.i19
  %.b4.i20 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i20, label %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, label %if.then.i22

land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

if.then.i22:                                      ; preds = %land.lhs.true2.i21
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.369, i32 noundef 724, ptr noundef nonnull @.str.371) #17
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i22, %land.lhs.true2.i21.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i19.rcu_read_unlock.exit_crit_edge, %if.end11.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !912
  %9 = tail call i32 @llvm.read_register.i32(metadata !878) #17
  %and.i.i.i.i.i23 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i23 to ptr
  %preempt_count.i.i.i.i24 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i24 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i24, align 4
  %sub.i.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i24, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @sock_def_destruct(ptr nocapture noundef %sk) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @lock_sock_nested(ptr noundef %sk, i32 noundef %subclass) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0)
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map, i32 noundef %subclass, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3298) #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %owned.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %2 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %4 = ptrtoint ptr %owned.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %owned.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__lock_sock_fast(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 3328) #17
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %owned.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %0 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.i = icmp ne i32 %1, 0
  br i1 %tobool.i, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__lock_sock(ptr noundef %sk)
  %2 = ptrtoint ptr %owned.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %owned.i, align 4
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  ret i1 %tobool.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_gettstamp(ptr nocapture noundef readonly %sock, ptr noundef %userstamp, i1 noundef zeroext %timeval, i1 noundef zeroext %time32) #0 align 64 {
entry:
  %ts = alloca %struct.timespec64, align 8
  %tmp7 = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk2 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk2, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ts) #17
  %2 = call ptr @memset(ptr %ts, i32 255, i32 16)
  %3 = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 13
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %3, align 4
  %6 = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not.i = icmp eq i32 %6, 0
  br i1 %tobool.i.not.i, label %if.then.i, label %entry.sock_enable_timestamp.exit_crit_edge

entry.sock_enable_timestamp.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_enable_timestamp.exit

if.then.i:                                        ; preds = %entry
  %or.i.i.i = or i32 %5, 128
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i.i.i, ptr %3, align 4
  %skc_family.i.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %skc_family.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %skc_family.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %9)
  %switch.i.i = icmp ugt i16 %9, 1
  %and.i = and i32 %5, 32896
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %or.cond.i = select i1 %switch.i.i, i1 %tobool.not.i, i1 false
  br i1 %or.cond.i, label %if.then2.i, label %if.then.i.sock_enable_timestamp.exit_crit_edge

if.then.i.sock_enable_timestamp.exit_crit_edge:   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_enable_timestamp.exit

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @net_enable_timestamp() #17
  br label %sock_enable_timestamp.exit

sock_enable_timestamp.exit:                       ; preds = %if.then2.i, %if.then.i.sock_enable_timestamp.exit_crit_edge, %entry.sock_enable_timestamp.exit_crit_edge
  %sk_stamp_seq.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 64
  %dep_map.c48.i.i.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 64, i32 0, i32 0, i32 1
  %sk_stamp.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 63
  br label %do.body.i

do.body.i:                                        ; preds = %read_seqbegin.exit.i.do.body.i_crit_edge, %sock_enable_timestamp.exit
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !918
  %and.i.i.i.i = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %do.body24.critedge.i.i.i

if.then.i.i.i:                                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @trace_hardirqs_off() #17
  %11 = tail call ptr @llvm.returnaddress(i32 0) #17
  %12 = ptrtoint ptr %11 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %12) #17
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i.i, i32 noundef %12) #17
  tail call void @trace_hardirqs_on() #17
  br label %do.body24.i.i.i

do.body24.critedge.i.i.i:                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %13 = tail call ptr @llvm.returnaddress(i32 0) #17
  %14 = ptrtoint ptr %13 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %14) #17
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i.i, i32 noundef %14) #17
  br label %do.body24.i.i.i

do.body24.i.i.i:                                  ; preds = %do.body24.critedge.i.i.i, %if.then.i.i.i
  %15 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !919
  %and.i.i.i.i.i = and i32 %15, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool32.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i, label %if.then36.i.i.i, label %do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge, !prof !889

do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge: ; preds = %do.body24.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %seqcount_lockdep_reader_access.exit.i.i

if.then36.i.i.i:                                  ; preds = %do.body24.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %seqcount_lockdep_reader_access.exit.i.i

seqcount_lockdep_reader_access.exit.i.i:          ; preds = %if.then36.i.i.i, %do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #17, !srcloc !920
  %16 = ptrtoint ptr %sk_stamp_seq.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %sk_stamp_seq.i, align 4
  %and18.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i.i)
  %tobool.not19.i.i = icmp eq i32 %and18.i.i, 0
  br i1 %tobool.not19.i.i, label %seqcount_lockdep_reader_access.exit.i.i.read_seqbegin.exit.i_crit_edge, label %seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge

seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i.i
  br label %do.end.i.i

seqcount_lockdep_reader_access.exit.i.i.read_seqbegin.exit.i_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %read_seqbegin.exit.i

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !953
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #17, !srcloc !954
  %18 = ptrtoint ptr %sk_stamp_seq.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %sk_stamp_seq.i, align 4
  %and.i.i = and i32 %19, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.end.i.i.read_seqbegin.exit.i_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i.i

do.end.i.i.read_seqbegin.exit.i_crit_edge:        ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %read_seqbegin.exit.i

read_seqbegin.exit.i:                             ; preds = %do.end.i.i.read_seqbegin.exit.i_crit_edge, %seqcount_lockdep_reader_access.exit.i.i.read_seqbegin.exit.i_crit_edge
  %.lcssa.i.i = phi i32 [ %17, %seqcount_lockdep_reader_access.exit.i.i.read_seqbegin.exit.i_crit_edge ], [ %19, %do.end.i.i.read_seqbegin.exit.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !955
  %20 = ptrtoint ptr %sk_stamp.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %sk_stamp.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !956
  %22 = ptrtoint ptr %sk_stamp_seq.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %sk_stamp_seq.i, align 4
  %cmp.i.i.i.not.i = icmp eq i32 %23, %.lcssa.i.i
  br i1 %cmp.i.i.i.not.i, label %sock_read_timestamp.exit, label %read_seqbegin.exit.i.do.body.i_crit_edge

read_seqbegin.exit.i.do.body.i_crit_edge:         ; preds = %read_seqbegin.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i

sock_read_timestamp.exit:                         ; preds = %read_seqbegin.exit.i
  call void @ns_to_timespec64(ptr nonnull sret(%struct.timespec64) align 8 %ts, i64 noundef %21) #17
  %24 = ptrtoint ptr %ts to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %ts, align 8
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.510)
  switch i64 %25, label %sock_read_timestamp.exit.if.end8_crit_edge [
    i64 -1, label %sock_read_timestamp.exit.cleanup_crit_edge
    i64 0, label %if.then5
  ]

sock_read_timestamp.exit.cleanup_crit_edge:       ; preds = %sock_read_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sock_read_timestamp.exit.if.end8_crit_edge:       ; preds = %sock_read_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end8

if.then5:                                         ; preds = %sock_read_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #19
  %call.i = call i64 @ktime_get_with_offset(i32 noundef 0) #17
  %lock.i.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 64, i32 1
  call void @_raw_spin_lock(ptr noundef %lock.i.i) #17
  %26 = ptrtoint ptr %sk_stamp_seq.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sk_stamp_seq.i, align 4
  %inc.i.i.i.i.i = add i32 %27, 1
  store i32 %inc.i.i.i.i.i, ptr %sk_stamp_seq.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !957
  %28 = call ptr @llvm.returnaddress(i32 0) #17
  %29 = ptrtoint ptr %28 to i32
  call void @lock_acquire(ptr noundef %dep_map.c48.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %29) #17
  %30 = ptrtoint ptr %sk_stamp.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %call.i, ptr %sk_stamp.i, align 8
  call void @lock_release(ptr noundef %dep_map.c48.i.i.i, i32 noundef %29) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !958
  %31 = ptrtoint ptr %sk_stamp_seq.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sk_stamp_seq.i, align 4
  %inc.i.i.i.i = add i32 %32, 1
  store i32 %inc.i.i.i.i, ptr %sk_stamp_seq.i, align 4
  call void @_raw_spin_unlock(ptr noundef %lock.i.i) #17
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tmp7) #17
  call void @ns_to_timespec64(ptr nonnull sret(%struct.timespec64) align 8 %tmp7, i64 noundef %call.i) #17
  %33 = call ptr @memcpy(ptr %ts, ptr %tmp7, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tmp7) #17
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %sock_read_timestamp.exit.if.end8_crit_edge
  br i1 %timeval, label %if.then9, label %if.end8.if.end10_crit_edge

if.end8.if.end10_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then9:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  %tv_nsec = getelementptr inbounds %struct.timespec64, ptr %ts, i32 0, i32 1
  %34 = ptrtoint ptr %tv_nsec to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %tv_nsec, align 8
  %div = sdiv i32 %35, 1000
  store i32 %div, ptr %tv_nsec, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end8.if.end10_crit_edge
  br i1 %time32, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  %call13 = call i32 @put_old_timespec32(ptr noundef nonnull %ts, ptr noundef %userstamp) #17
  br label %cleanup

if.end14:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  %call15 = call i32 @put_timespec64(ptr noundef nonnull %ts, ptr noundef %userstamp) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then12, %sock_read_timestamp.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %if.then12 ], [ %call15, %if.end14 ], [ -2, %sock_read_timestamp.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ts) #17
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ns_to_timespec64(ptr sret(%struct.timespec64) align 8, i64 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @put_old_timespec32(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @put_timespec64(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_recv_errqueue(ptr noundef %sk, ptr noundef %msg, i32 noundef %len, i32 noundef %level, i32 noundef %type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @sock_dequeue_err_skb(ptr noundef %sk) #17
  %cmp = icmp eq ptr %call, null
  br i1 %cmp, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end:                                           ; preds = %entry
  %len1 = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 6
  %0 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %len)
  %cmp2 = icmp sgt i32 %1, %len
  br i1 %cmp2, label %if.then3, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %msg_flags = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 6
  %2 = ptrtoint ptr %msg_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %msg_flags, align 4
  %or = or i32 %3, 32
  store i32 %or, ptr %msg_flags, align 4
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end.if.end4_crit_edge
  %copied.0 = phi i32 [ %len, %if.then3 ], [ %1, %if.end.if.end4_crit_edge ]
  %msg_iter.i = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 2
  %call.i = tail call i32 @skb_copy_datagram_iter(ptr noundef nonnull %call, i32 noundef 0, ptr noundef %msg_iter.i, i32 noundef %copied.0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end7, label %if.end4.out_free_skb_crit_edge

if.end4.out_free_skb_crit_edge:                   ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_free_skb

if.end7:                                          ; preds = %if.end4
  %4 = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 2
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %4, align 8
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 17
  %7 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %end.i.i.i, align 4
  %hwtstamps.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %8, i32 0, i32 7
  %9 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 4
  %12 = and i32 %11, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.i.not.i = icmp eq i32 %12, 0
  br i1 %tobool.i.not.i, label %lor.lhs.false.i, label %if.end7.if.then.i_crit_edge

if.end7.if.then.i_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end7
  %sk_tsflags.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 65
  %13 = ptrtoint ptr %sk_tsflags.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %sk_tsflags.i, align 8
  %conv.i = zext i16 %14 to i32
  %and.i = and i32 %conv.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false2.i, label %lor.lhs.false.i.if.then.i_crit_edge

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %6)
  %tobool3.not.i = icmp eq i64 %6, 0
  %and6.i = and i32 %conv.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %tobool7.not.i = icmp eq i32 %and6.i, 0
  %or.cond.i = select i1 %tobool3.not.i, i1 true, i1 %tobool7.not.i
  br i1 %or.cond.i, label %lor.lhs.false8.i, label %lor.lhs.false2.i.if.then.i_crit_edge

lor.lhs.false2.i.if.then.i_crit_edge:             ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i

lor.lhs.false8.i:                                 ; preds = %lor.lhs.false2.i
  %15 = ptrtoint ptr %hwtstamps.i.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %hwtstamps.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %16)
  %tobool9.not.i = icmp eq i64 %16, 0
  %17 = and i16 %14, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool14.not.i = icmp eq i16 %17, 0
  %or.cond36.i = select i1 %tobool9.not.i, i1 true, i1 %tobool14.not.i
  br i1 %or.cond36.i, label %if.else.i, label %lor.lhs.false8.i.if.then.i_crit_edge

lor.lhs.false8.i.if.then.i_crit_edge:             ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false8.i.if.then.i_crit_edge, %lor.lhs.false2.i.if.then.i_crit_edge, %lor.lhs.false.i.if.then.i_crit_edge, %if.end7.if.then.i_crit_edge
  tail call void @__sock_recv_timestamp(ptr noundef %msg, ptr noundef %sk, ptr noundef nonnull %call) #17
  br label %if.end.i

if.else.i:                                        ; preds = %lor.lhs.false8.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_stamp_seq.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 64
  %lock.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 64, i32 1
  tail call void @_raw_spin_lock(ptr noundef %lock.i.i.i) #17
  %18 = ptrtoint ptr %sk_stamp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sk_stamp_seq.i.i, align 4
  %inc.i.i.i.i.i.i = add i32 %19, 1
  store i32 %inc.i.i.i.i.i.i, ptr %sk_stamp_seq.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !957
  %dep_map.i.i.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 64, i32 0, i32 0, i32 1
  %20 = tail call ptr @llvm.returnaddress(i32 0) #17
  %21 = ptrtoint ptr %20 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %21) #17
  %sk_stamp.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 63
  %22 = ptrtoint ptr %sk_stamp.i.i to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %6, ptr %sk_stamp.i.i, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i.i.i.i, i32 noundef %21) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !958
  %23 = ptrtoint ptr %sk_stamp_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sk_stamp_seq.i.i, align 4
  %inc.i.i.i.i.i = add i32 %24, 1
  store i32 %inc.i.i.i.i.i, ptr %sk_stamp_seq.i.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %lock.i.i.i) #17
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %25 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %9, align 4
  %27 = and i32 %26, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i35.not.i = icmp eq i32 %27, 0
  br i1 %tobool.i35.not.i, label %if.end.i.sock_recv_timestamp.exit_crit_edge, label %land.lhs.true17.i

if.end.i.sock_recv_timestamp.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_recv_timestamp.exit

land.lhs.true17.i:                                ; preds = %if.end.i
  %wifi_acked_valid.i = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 15
  %28 = ptrtoint ptr %wifi_acked_valid.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %bf.load.i = load i16, ptr %wifi_acked_valid.i, align 8
  %29 = and i16 %bf.load.i, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool19.not.i = icmp eq i16 %29, 0
  br i1 %tobool19.not.i, label %land.lhs.true17.i.sock_recv_timestamp.exit_crit_edge, label %if.then20.i

land.lhs.true17.i.sock_recv_timestamp.exit_crit_edge: ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_recv_timestamp.exit

if.then20.i:                                      ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__sock_recv_wifi_status(ptr noundef %msg, ptr noundef %sk, ptr noundef nonnull %call) #17
  br label %sock_recv_timestamp.exit

sock_recv_timestamp.exit:                         ; preds = %if.then20.i, %land.lhs.true17.i.sock_recv_timestamp.exit_crit_edge, %if.end.i.sock_recv_timestamp.exit_crit_edge
  %ee = getelementptr inbounds %struct.sk_buff, ptr %call, i32 0, i32 3, i32 24
  %call8 = tail call i32 @put_cmsg(ptr noundef %msg, i32 noundef %level, i32 noundef %type, i32 noundef 16, ptr noundef %ee) #17
  %msg_flags9 = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 6
  %30 = ptrtoint ptr %msg_flags9 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %msg_flags9, align 4
  %or10 = or i32 %31, 8192
  store i32 %or10, ptr %msg_flags9, align 4
  br label %out_free_skb

out_free_skb:                                     ; preds = %sock_recv_timestamp.exit, %if.end4.out_free_skb_crit_edge
  %err.0 = phi i32 [ %call.i, %if.end4.out_free_skb_crit_edge ], [ %copied.0, %sock_recv_timestamp.exit ]
  tail call void @kfree_skb_reason(ptr noundef nonnull %call, i32 noundef 0) #17
  br label %out

out:                                              ; preds = %out_free_skb, %entry.out_crit_edge
  %err.1 = phi i32 [ -11, %entry.out_crit_edge ], [ %err.0, %out_free_skb ]
  ret i32 %err.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sock_dequeue_err_skb(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @put_cmsg(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_common_getsockopt(ptr nocapture noundef readonly %sock, i32 noundef %level, i32 noundef %optname, ptr noundef %optval, ptr noundef %optlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skc_prot, align 8
  %getsockopt = getelementptr inbounds %struct.proto, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %getsockopt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %getsockopt, align 4
  %call = tail call i32 %5(ptr noundef %1, i32 noundef %level, i32 noundef %optname, ptr noundef %optval, ptr noundef %optlen) #17
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_common_recvmsg(ptr nocapture noundef readonly %sock, ptr noundef %msg, i32 noundef %size, i32 noundef %flags) #0 align 64 {
entry:
  %addr_len = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %addr_len) #17
  %2 = ptrtoint ptr %addr_len to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %addr_len, align 4
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 8
  %3 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %skc_prot, align 8
  %recvmsg = getelementptr inbounds %struct.proto, ptr %4, i32 0, i32 13
  %5 = ptrtoint ptr %recvmsg to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %recvmsg, align 4
  %and = and i32 %flags, 64
  %and2 = and i32 %flags, -65
  %call = call i32 %6(ptr noundef %1, ptr noundef %msg, i32 noundef %size, i32 noundef %and, i32 noundef %and2, ptr noundef nonnull %addr_len) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call)
  %cmp = icmp sgt i32 %call, -1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %7 = ptrtoint ptr %addr_len to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %addr_len, align 4
  %msg_namelen = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 1
  %9 = ptrtoint ptr %msg_namelen to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %msg_namelen, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %addr_len) #17
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_common_setsockopt(ptr nocapture noundef readonly %sock, i32 noundef %level, i32 noundef %optname, [2 x i32] %optval.coerce, i32 noundef %optlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %skc_prot, align 8
  %setsockopt = getelementptr inbounds %struct.proto, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %setsockopt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %setsockopt, align 4
  %call = tail call i32 %5(ptr noundef %1, i32 noundef %level, i32 noundef %optname, [2 x i32] %optval.coerce, i32 noundef %optlen) #17
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sk_common_release(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %0 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_prot, align 8
  %destroy = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %destroy to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %destroy, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %3(ptr noundef %sk) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %4 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %skc_prot, align 8
  %unhash = getelementptr inbounds %struct.proto, ptr %5, i32 0, i32 21
  %6 = ptrtoint ptr %unhash to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %unhash, align 4
  tail call void %7(ptr noundef %sk) #17
  %sk_callback_lock.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i) #17
  %8 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %or.i.i.i = or i32 %10, 1
  store i32 %or.i.i.i, ptr %8, align 4
  %sk_socket.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %11 = ptrtoint ptr %sk_socket.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %sk_socket.i.i, align 8
  %12 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %12, align 8
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i) #17
  %sk_policy.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 18
  %14 = ptrtoint ptr %sk_policy.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %sk_policy.i, align 4
  %cmp.not.i = icmp eq ptr %15, null
  br i1 %cmp.not.i, label %if.end.do.end6.i_crit_edge, label %if.then.i, !prof !888

if.end.do.end6.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end6.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %call.i = tail call i32 @xfrm_policy_delete(ptr noundef nonnull %15, i32 noundef 3) #17
  %16 = ptrtoint ptr %sk_policy.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %sk_policy.i, align 4
  br label %do.end6.i

do.end6.i:                                        ; preds = %if.then.i, %if.end.do.end6.i_crit_edge
  %arrayidx9.i = getelementptr %struct.sock, ptr %sk, i32 0, i32 18, i32 1
  %17 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx9.i, align 4
  %cmp10.not.i = icmp eq ptr %18, null
  br i1 %cmp10.not.i, label %do.end6.i.xfrm_sk_free_policy.exit_crit_edge, label %if.then17.i, !prof !888

do.end6.i.xfrm_sk_free_policy.exit_crit_edge:     ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %xfrm_sk_free_policy.exit

if.then17.i:                                      ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  %call18.i = tail call i32 @xfrm_policy_delete(ptr noundef nonnull %18, i32 noundef 4) #17
  %19 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %arrayidx9.i, align 4
  br label %xfrm_sk_free_policy.exit

xfrm_sk_free_policy.exit:                         ; preds = %if.then17.i, %do.end6.i.xfrm_sk_free_policy.exit_crit_edge
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %20 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %20, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i13, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %xfrm_sk_free_policy.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !888

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i13:                                      ; preds = %xfrm_sk_free_policy.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  %sk_wmem_alloc.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 23
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_wmem_alloc.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !908
  tail call void @llvm.prefetch.p0(ptr %sk_wmem_alloc.i.i, i32 1, i32 3, i32 1) #17
  %21 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_wmem_alloc.i.i, ptr %sk_wmem_alloc.i.i, i32 1, ptr elementtype(i32) %sk_wmem_alloc.i.i) #17, !srcloc !909
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %21, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i, label %if.then.i.i, label %if.end5.i.i.i.i.i

if.end5.i.i.i.i.i:                                ; preds = %if.then.i13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i, label %if.end5.i.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i.i, !prof !888

if.end5.i.i.i.i.i.sock_put.exit_crit_edge:        ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i.i:                              ; preds = %if.end5.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %sk_wmem_alloc.i.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i.i:                                      ; preds = %if.then.i13
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !910
  tail call fastcc void @__sk_free(ptr noundef %sk) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i.i, %if.then10.i.i.i.i.i, %if.end5.i.i.i.i.i.sock_put.exit_crit_edge, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_prot_inuse_get(ptr nocapture noundef readonly %net, ptr nocapture noundef readonly %prot) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %inuse_idx = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 26
  %0 = ptrtoint ptr %inuse_idx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %inuse_idx, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %call9 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__sanitizer_cov_trace_cmp4(i32 %call9, i32 %2)
  %cmp10 = icmp ult i32 %call9, %2
  br i1 %cmp10, label %do.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

do.body.lr.ph:                                    ; preds = %entry
  %prot_inuse = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 29, i32 2
  %3 = ptrtoint ptr %prot_inuse to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prot_inuse, align 8
  %5 = ptrtoint ptr %4 to i32
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %do.body.lr.ph
  %call12 = phi i32 [ %call9, %do.body.lr.ph ], [ %call, %do.body.do.body_crit_edge ]
  %res.011 = phi i32 [ 0, %do.body.lr.ph ], [ %add3, %do.body.do.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call12
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx, align 4
  %add = add i32 %7, %5
  %8 = inttoptr i32 %add to ptr
  %arrayidx2 = getelementptr %struct.prot_inuse, ptr %8, i32 0, i32 1, i32 %1
  %9 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx2, align 4
  %add3 = add i32 %10, %res.011
  %call = tail call i32 @cpumask_next(i32 noundef %call12, ptr noundef nonnull @__cpu_possible_mask) #24
  %cmp = icmp ult i32 %call, %2
  br i1 %cmp, label %do.body.do.body_crit_edge, label %do.body.for.end_crit_edge

do.body.for.end_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

for.end:                                          ; preds = %do.body.for.end_crit_edge, %entry.for.end_crit_edge
  %res.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %add3, %do.body.for.end_crit_edge ]
  %11 = tail call i32 @llvm.smax.i32(i32 %res.0.lcssa, i32 0)
  ret i32 %11
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #8

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_inuse_get(ptr nocapture noundef readonly %net) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  %call6 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__sanitizer_cov_trace_cmp4(i32 %call6, i32 %0)
  %cmp7 = icmp ult i32 %call6, %0
  br i1 %cmp7, label %do.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

do.body.lr.ph:                                    ; preds = %entry
  %prot_inuse = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 29, i32 2
  %1 = ptrtoint ptr %prot_inuse to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %prot_inuse, align 8
  %3 = ptrtoint ptr %2 to i32
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %do.body.lr.ph
  %call9 = phi i32 [ %call6, %do.body.lr.ph ], [ %call, %do.body.do.body_crit_edge ]
  %res.08 = phi i32 [ 0, %do.body.lr.ph ], [ %add2, %do.body.do.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call9
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, %3
  %6 = inttoptr i32 %add to ptr
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 4
  %add2 = add i32 %8, %res.08
  %call = tail call i32 @cpumask_next(i32 noundef %call9, ptr noundef nonnull @__cpu_possible_mask) #24
  %cmp = icmp ult i32 %call, %0
  br i1 %cmp, label %do.body.do.body_crit_edge, label %do.body.for.end_crit_edge

do.body.for.end_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

for.end:                                          ; preds = %do.body.for.end_crit_edge, %entry.for.end_crit_edge
  %res.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %add2, %do.body.for.end_crit_edge ]
  ret i32 %res.0.lcssa
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @net_inuse_init() #9 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @register_pernet_subsys(ptr noundef nonnull @net_inuse_ops) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.470) #25
  unreachable

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @proto_register(ptr noundef %prot, i32 noundef %alloc_slab) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %alloc_slab)
  %tobool.not = icmp eq i32 %alloc_slab, 0
  br i1 %tobool.not, label %entry.if.end14_crit_edge, label %if.then

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

if.then:                                          ; preds = %entry
  %name = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 52
  %obj_size = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 43
  %0 = ptrtoint ptr %obj_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %obj_size, align 4
  %slab_flags = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 44
  %2 = ptrtoint ptr %slab_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %slab_flags, align 4
  %or = or i32 %3, 67117056
  %useroffset = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 45
  %4 = ptrtoint ptr %useroffset to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %useroffset, align 4
  %usersize = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 46
  %6 = ptrtoint ptr %usersize to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %usersize, align 4
  %call = tail call ptr @kmem_cache_create_usercopy(ptr noundef %name, i32 noundef %1, i32 noundef 0, i32 noundef %or, i32 noundef %5, i32 noundef %7, ptr noundef null) #17
  %slab = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 42
  %8 = ptrtoint ptr %slab to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call, ptr %slab, align 4
  %cmp = icmp eq ptr %call, null
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12, ptr noundef %name) #21
  br label %cleanup

if.end:                                           ; preds = %if.then
  %rsk_prot1.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 48
  %9 = ptrtoint ptr %rsk_prot1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rsk_prot1.i, align 4
  %tobool.not.i = icmp eq ptr %10, null
  br i1 %tobool.not.i, label %if.end.if.end9_crit_edge, label %if.end.i

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end9

if.end.i:                                         ; preds = %if.end
  %call.i = tail call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 3264, ptr noundef nonnull @.str.471, ptr noundef %name) #17
  %slab_name.i = getelementptr inbounds %struct.request_sock_ops, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %slab_name.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call.i, ptr %slab_name.i, align 4
  %tobool3.not.i = icmp eq ptr %call.i, null
  br i1 %tobool3.not.i, label %if.end.i.if.then23_crit_edge, label %if.end5.i

if.end.i.if.then23_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then23

if.end5.i:                                        ; preds = %if.end.i
  %obj_size.i = getelementptr inbounds %struct.request_sock_ops, ptr %10, i32 0, i32 1
  %12 = ptrtoint ptr %obj_size.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %obj_size.i, align 4
  %14 = ptrtoint ptr %slab_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %slab_flags, align 4
  %or.i = or i32 %15, 67108864
  %call7.i = tail call ptr @kmem_cache_create(ptr noundef nonnull %call.i, i32 noundef %13, i32 noundef 0, i32 noundef %or.i, ptr noundef null) #17
  %slab.i = getelementptr inbounds %struct.request_sock_ops, ptr %10, i32 0, i32 2
  %16 = ptrtoint ptr %slab.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call7.i, ptr %slab.i, align 4
  %tobool9.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool9.not.i, label %do.end.i, label %if.end5.i.if.end9_crit_edge

if.end5.i.if.end9_crit_edge:                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end9

do.end.i:                                         ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  %call13.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.472, ptr noundef %name) #21
  br label %if.then23

if.end9:                                          ; preds = %if.end5.i.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %twsk_prot1.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 49
  %17 = ptrtoint ptr %twsk_prot1.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %twsk_prot1.i, align 4
  %tobool.not.i46 = icmp eq ptr %18, null
  br i1 %tobool.not.i46, label %if.end9.if.end14_crit_edge, label %if.end.i50

if.end9.if.end14_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

if.end.i50:                                       ; preds = %if.end9
  %call.i48 = tail call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 3264, ptr noundef nonnull @.str.474, ptr noundef %name) #17
  %twsk_slab_name.i = getelementptr inbounds %struct.timewait_sock_ops, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %twsk_slab_name.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call.i48, ptr %twsk_slab_name.i, align 4
  %tobool3.not.i49 = icmp eq ptr %call.i48, null
  br i1 %tobool3.not.i49, label %if.end.i50.if.then20_crit_edge, label %if.end5.i55

if.end.i50.if.then20_crit_edge:                   ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then20

if.end5.i55:                                      ; preds = %if.end.i50
  %twsk_obj_size.i = getelementptr inbounds %struct.timewait_sock_ops, ptr %18, i32 0, i32 2
  %20 = ptrtoint ptr %twsk_obj_size.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %twsk_obj_size.i, align 4
  %22 = ptrtoint ptr %slab_flags to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %slab_flags, align 4
  %or.i52 = or i32 %23, 67108864
  %call7.i53 = tail call ptr @kmem_cache_create(ptr noundef nonnull %call.i48, i32 noundef %21, i32 noundef 0, i32 noundef %or.i52, ptr noundef null) #17
  %24 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %call7.i53, ptr %18, align 4
  %tobool9.not.i54 = icmp eq ptr %call7.i53, null
  br i1 %tobool9.not.i54, label %do.end.i57, label %if.end5.i55.if.end14_crit_edge

if.end5.i55.if.end14_crit_edge:                   ; preds = %if.end5.i55
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

do.end.i57:                                       ; preds = %if.end5.i55
  call void @__sanitizer_cov_trace_pc() #19
  %call13.i56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.475, ptr noundef %name) #21
  br label %if.then20

if.end14:                                         ; preds = %if.end5.i55.if.end14_crit_edge, %if.end9.if.end14_crit_edge, %entry.if.end14_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @proto_list_mutex, i32 noundef 0) #17
  %call.i59 = tail call i32 @_find_first_zero_bit_be(ptr noundef nonnull @proto_inuse_idx, i32 noundef 64) #17
  %inuse_idx.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 26
  %25 = ptrtoint ptr %inuse_idx.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %call.i59, ptr %inuse_idx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %call.i59)
  %cmp.i = icmp eq i32 %call.i59, 63
  br i1 %cmp.i, label %out_free_timewait_sock_slab, label %if.end18, !prof !889

if.end18:                                         ; preds = %if.end14
  tail call void @_set_bit(i32 noundef %call.i59, ptr noundef nonnull @proto_inuse_idx) #17
  %node = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 53
  %26 = load ptr, ptr @proto_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %node, ptr noundef nonnull @proto_list, ptr noundef %26) #17
  br i1 %call.i.i, label %if.end.i.i, label %if.end18.list_add.exit_crit_edge

if.end18.list_add.exit_crit_edge:                 ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #19
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %node, ptr %prev1.i.i, align 4
  %28 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %26, ptr %node, align 4
  %prev3.i.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 53, i32 1
  %29 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @proto_list, ptr %prev3.i.i, align 4
  store volatile ptr %node, ptr @proto_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end18.list_add.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @proto_list_mutex) #17
  br label %cleanup

out_free_timewait_sock_slab:                      ; preds = %if.end14
  %call3.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.479) #21
  tail call void @mutex_unlock(ptr noundef nonnull @proto_list_mutex) #17
  br i1 %tobool.not, label %out_free_timewait_sock_slab.cleanup_crit_edge, label %out_free_timewait_sock_slab.if.then20_crit_edge

out_free_timewait_sock_slab.if.then20_crit_edge:  ; preds = %out_free_timewait_sock_slab
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then20

out_free_timewait_sock_slab.cleanup_crit_edge:    ; preds = %out_free_timewait_sock_slab
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then20:                                        ; preds = %out_free_timewait_sock_slab.if.then20_crit_edge, %do.end.i57, %if.end.i50.if.then20_crit_edge
  %ret.077 = phi i32 [ -28, %out_free_timewait_sock_slab.if.then20_crit_edge ], [ -105, %do.end.i57 ], [ -105, %if.end.i50.if.then20_crit_edge ]
  %twsk_prot = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 49
  %30 = ptrtoint ptr %twsk_prot to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %twsk_prot, align 4
  %tobool.not.i63 = icmp eq ptr %31, null
  br i1 %tobool.not.i63, label %if.then20.if.then23_crit_edge, label %if.end.i65

if.then20.if.then23_crit_edge:                    ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then23

if.end.i65:                                       ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #19
  %twsk_slab_name.i64 = getelementptr inbounds %struct.timewait_sock_ops, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %twsk_slab_name.i64 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %twsk_slab_name.i64, align 4
  tail call void @kfree(ptr noundef %33) #17
  %34 = ptrtoint ptr %twsk_slab_name.i64 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %twsk_slab_name.i64, align 4
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %31, align 4
  tail call void @kmem_cache_destroy(ptr noundef %36) #17
  %37 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %31, align 4
  br label %if.then23

if.then23:                                        ; preds = %if.end.i65, %if.then20.if.then23_crit_edge, %do.end.i, %if.end.i.if.then23_crit_edge
  %ret.1.ph = phi i32 [ %ret.077, %if.end.i65 ], [ %ret.077, %if.then20.if.then23_crit_edge ], [ -105, %do.end.i ], [ -105, %if.end.i.if.then23_crit_edge ]
  %rsk_prot = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 48
  %38 = ptrtoint ptr %rsk_prot to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %rsk_prot, align 4
  %tobool.not.i66 = icmp eq ptr %39, null
  br i1 %tobool.not.i66, label %if.then23.req_prot_cleanup.exit_crit_edge, label %if.end.i69

if.then23.req_prot_cleanup.exit_crit_edge:        ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #19
  br label %req_prot_cleanup.exit

if.end.i69:                                       ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #19
  %slab_name.i67 = getelementptr inbounds %struct.request_sock_ops, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %slab_name.i67 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %slab_name.i67, align 4
  tail call void @kfree(ptr noundef %41) #17
  %42 = ptrtoint ptr %slab_name.i67 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr null, ptr %slab_name.i67, align 4
  %slab.i68 = getelementptr inbounds %struct.request_sock_ops, ptr %39, i32 0, i32 2
  %43 = ptrtoint ptr %slab.i68 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %slab.i68, align 4
  tail call void @kmem_cache_destroy(ptr noundef %44) #17
  %45 = ptrtoint ptr %slab.i68 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr null, ptr %slab.i68, align 4
  br label %req_prot_cleanup.exit

req_prot_cleanup.exit:                            ; preds = %if.end.i69, %if.then23.req_prot_cleanup.exit_crit_edge
  %slab24 = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 42
  %46 = ptrtoint ptr %slab24 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %slab24, align 4
  tail call void @kmem_cache_destroy(ptr noundef %47) #17
  %48 = ptrtoint ptr %slab24 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %slab24, align 4
  br label %cleanup

cleanup:                                          ; preds = %req_prot_cleanup.exit, %out_free_timewait_sock_slab.cleanup_crit_edge, %list_add.exit, %do.end
  %retval.0 = phi i32 [ 0, %list_add.exit ], [ -105, %do.end ], [ %ret.1.ph, %req_prot_cleanup.exit ], [ -28, %out_free_timewait_sock_slab.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create_usercopy(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @proto_unregister(ptr noundef %prot) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @proto_list_mutex, i32 noundef 0) #17
  %inuse_idx.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 26
  %0 = ptrtoint ptr %inuse_idx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %inuse_idx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %1)
  %cmp.not.i = icmp eq i32 %1, 63
  br i1 %cmp.not.i, label %entry.release_proto_idx.exit_crit_edge, label %if.then.i

entry.release_proto_idx.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %release_proto_idx.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @_clear_bit(i32 noundef %1, ptr noundef nonnull @proto_inuse_idx) #17
  br label %release_proto_idx.exit

release_proto_idx.exit:                           ; preds = %if.then.i, %entry.release_proto_idx.exit_crit_edge
  %node = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 53
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %node) #17
  br i1 %call.i.i, label %if.end.i.i, label %release_proto_idx.exit.list_del.exit_crit_edge

release_proto_idx.exit.list_del.exit_crit_edge:   ; preds = %release_proto_idx.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit

if.end.i.i:                                       ; preds = %release_proto_idx.exit
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 53, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %node to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %node, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %release_proto_idx.exit.list_del.exit_crit_edge
  %8 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 256 to ptr), ptr %node, align 4
  %prev.i = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 53, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @proto_list_mutex) #17
  %slab = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 42
  %10 = ptrtoint ptr %slab to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %slab, align 4
  tail call void @kmem_cache_destroy(ptr noundef %11) #17
  %12 = ptrtoint ptr %slab to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %slab, align 4
  %rsk_prot = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 48
  %13 = ptrtoint ptr %rsk_prot to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rsk_prot, align 4
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %list_del.exit.req_prot_cleanup.exit_crit_edge, label %if.end.i

list_del.exit.req_prot_cleanup.exit_crit_edge:    ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %req_prot_cleanup.exit

if.end.i:                                         ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #19
  %slab_name.i = getelementptr inbounds %struct.request_sock_ops, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %slab_name.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %slab_name.i, align 4
  tail call void @kfree(ptr noundef %16) #17
  %17 = ptrtoint ptr %slab_name.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %slab_name.i, align 4
  %slab.i = getelementptr inbounds %struct.request_sock_ops, ptr %14, i32 0, i32 2
  %18 = ptrtoint ptr %slab.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %slab.i, align 4
  tail call void @kmem_cache_destroy(ptr noundef %19) #17
  %20 = ptrtoint ptr %slab.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %slab.i, align 4
  br label %req_prot_cleanup.exit

req_prot_cleanup.exit:                            ; preds = %if.end.i, %list_del.exit.req_prot_cleanup.exit_crit_edge
  %twsk_prot = getelementptr inbounds %struct.proto, ptr %prot, i32 0, i32 49
  %21 = ptrtoint ptr %twsk_prot to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %twsk_prot, align 4
  %tobool.not.i7 = icmp eq ptr %22, null
  br i1 %tobool.not.i7, label %req_prot_cleanup.exit.tw_prot_cleanup.exit_crit_edge, label %if.end.i8

req_prot_cleanup.exit.tw_prot_cleanup.exit_crit_edge: ; preds = %req_prot_cleanup.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %tw_prot_cleanup.exit

if.end.i8:                                        ; preds = %req_prot_cleanup.exit
  call void @__sanitizer_cov_trace_pc() #19
  %twsk_slab_name.i = getelementptr inbounds %struct.timewait_sock_ops, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %twsk_slab_name.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %twsk_slab_name.i, align 4
  tail call void @kfree(ptr noundef %24) #17
  %25 = ptrtoint ptr %twsk_slab_name.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %twsk_slab_name.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %22, align 4
  tail call void @kmem_cache_destroy(ptr noundef %27) #17
  %28 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %22, align 4
  br label %tw_prot_cleanup.exit

tw_prot_cleanup.exit:                             ; preds = %if.end.i8, %req_prot_cleanup.exit.tw_prot_cleanup.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_load_diag_module(i32 noundef %family, i32 noundef %protocol) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %protocol)
  %tobool.not = icmp eq i32 %protocol, 0
  br i1 %tobool.not, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %call = tail call zeroext i1 @sock_is_registered(i32 noundef %family) #17
  br i1 %call, label %if.end, label %if.then.return_crit_edge

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %call2 = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext true, ptr noundef nonnull @.str.14, i32 noundef 16, i32 noundef 4, i32 noundef %family) #17
  br label %return

if.end3:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %family)
  %cmp = icmp eq i32 %family, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %protocol)
  %0 = icmp slt i32 %protocol, 255
  %1 = and i1 %cmp, %0
  br i1 %1, label %land.lhs.true7, label %if.end3.if.end11_crit_edge

if.end3.if.end11_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

land.lhs.true7:                                   ; preds = %if.end3
  %arrayidx = getelementptr [256 x ptr], ptr @inet_protos, i32 0, i32 %protocol
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %arrayidx, align 4
  %tobool9.not = icmp eq ptr %3, null
  br i1 %tobool9.not, label %land.lhs.true7.return_crit_edge, label %land.lhs.true7.if.end11_crit_edge

land.lhs.true7.if.end11_crit_edge:                ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

land.lhs.true7.return_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end11:                                         ; preds = %land.lhs.true7.if.end11_crit_edge, %if.end3.if.end11_crit_edge
  %call12 = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext true, ptr noundef nonnull @.str.15, i32 noundef 16, i32 noundef 4, i32 noundef %family, i32 noundef %protocol) #17
  br label %return

return:                                           ; preds = %if.end11, %land.lhs.true7.return_crit_edge, %if.end, %if.then.return_crit_edge
  %retval.0 = phi i32 [ %call12, %if.end11 ], [ %call2, %if.end ], [ -2, %if.then.return_crit_edge ], [ -2, %land.lhs.true7.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @sock_is_registered(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__request_module(i1 noundef zeroext, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @proto_init() #9 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @register_pernet_subsys(ptr noundef nonnull @proto_net_ops) #17
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @sk_busy_loop_end(ptr noundef %p, i32 noundef %start_time) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %p, i32 0, i32 8
  %0 = ptrtoint ptr %sk_receive_queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %sk_receive_queue, align 4
  %cmp.i = icmp eq ptr %1, %sk_receive_queue
  br i1 %cmp.i, label %lor.rhs, label %entry.lor.end_crit_edge

entry.lor.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.end

lor.rhs:                                          ; preds = %entry
  %sk_ll_usec.i = getelementptr inbounds %struct.sock, ptr %p, i32 0, i32 13
  %2 = ptrtoint ptr %sk_ll_usec.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %sk_ll_usec.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %lor.rhs.lor.end_crit_edge, label %if.then.i

lor.rhs.lor.end_crit_edge:                        ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.end

if.then.i:                                        ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #19
  %add.i = add i32 %3, %start_time
  %call.i.i.i = tail call i64 @sched_clock() #17
  %shr.i.i = lshr i64 %call.i.i.i, 10
  %conv.i.i = trunc i64 %shr.i.i to i32
  %sub.i = sub i32 %add.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i3 = icmp slt i32 %sub.i, 0
  br label %lor.end

lor.end:                                          ; preds = %if.then.i, %lor.rhs.lor.end_crit_edge, %entry.lor.end_crit_edge
  %4 = phi i1 [ true, %entry.lor.end_crit_edge ], [ %cmp.i3, %if.then.i ], [ true, %lor.rhs.lor.end_crit_edge ]
  ret i1 %4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @sock_bind_add(ptr noundef %sk, ptr noundef %addr, i32 noundef %addr_len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %0 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_prot, align 8
  %bind_add = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 16
  %2 = ptrtoint ptr %bind_add to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bind_add, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call = tail call i32 %3(ptr noundef %sk, ptr noundef %addr, i32 noundef %addr_len) #17
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ -95, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_inet_sk_error_report(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_sock_rcvqueue_full(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_bh_held() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_get_by_index(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ethtool_get_phc_vclocks(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @net_disable_timestamp() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_get_by_name_rcu(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @net_ratelimit() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prandom_u32() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pid_vnr(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kuid_munged(ptr noundef, [1 x i32]) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kgid_munged(ptr noundef, [1 x i32]) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @creds_are_invalid(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__invalid_creds(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_cred(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netdev_get_name(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @__sock_gen_cookie(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_sk_alloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @security_sk_free(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_check_no_locks_freed(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ref_tracker_alloc(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__sk_defer_free_flush(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_filter_uncharge(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_sk_storage_free(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_pid(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ref_tracker_free(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_net(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_sk_free(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mem_cgroup_sk_free(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_diag_broadcast_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netlink_has_listeners(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @security_sk_clone(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__xfrm_sk_clone_policy(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_add_batch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_wfree(ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_skb(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_sensitive(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @prepare_to_wait(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_sock_exceed_buf_limit(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmap_high(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_high(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_wake_async(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_with_offset(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_datagram_iter(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__sock_recv_timestamp(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__sock_recv_wifi_status(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock_bh(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock_bh(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xfrm_policy_delete(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_pernet_subsys(ptr noundef) local_unnamed_addr #1

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #15

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @sock_inuse_init_net(ptr nocapture noundef writeonly %net) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__alloc_percpu(i32 noundef 260, i32 noundef 4) #23
  %prot_inuse = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 29, i32 2
  %0 = ptrtoint ptr %prot_inuse to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %prot_inuse, align 8
  %cmp = icmp eq ptr %call, null
  %. = select i1 %cmp, i32 -12, i32 0
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @sock_inuse_exit_net(ptr nocapture noundef readonly %net) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %prot_inuse = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 29, i32 2
  %0 = ptrtoint ptr %prot_inuse to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prot_inuse, align 8
  tail call void @free_percpu(ptr noundef %1) #17
  ret void
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kasprintf(i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_zero_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @proto_init_net(ptr nocapture noundef readonly %net) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %proc_net = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 17
  %0 = ptrtoint ptr %proc_net to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %proc_net, align 4
  %call = tail call ptr @proc_create_net_data(ptr noundef nonnull @.str.481, i16 noundef zeroext 292, ptr noundef %1, ptr noundef nonnull @proto_seq_ops, i32 noundef 8, ptr noundef null) #17
  %tobool.not = icmp eq ptr %call, null
  %. = select i1 %tobool.not, i32 -12, i32 0
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @proto_exit_net(ptr nocapture noundef readonly %net) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %proc_net = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 17
  %0 = ptrtoint ptr %proc_net to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %proc_net, align 4
  tail call void @remove_proc_entry(ptr noundef nonnull @.str.481, ptr noundef %1) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @proc_create_net_data(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @proto_seq_start(ptr nocapture noundef readnone %seq, ptr nocapture noundef readonly %pos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @proto_list_mutex, i32 noundef 0) #17
  %0 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %pos, align 8
  %call = tail call ptr @seq_list_start_head(ptr noundef nonnull @proto_list, i64 noundef %1) #17
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @proto_seq_stop(ptr nocapture noundef readnone %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_unlock(ptr noundef nonnull @proto_list_mutex) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @proto_seq_next(ptr nocapture noundef readnone %seq, ptr noundef %v, ptr noundef %pos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @seq_list_next(ptr noundef %v, ptr noundef nonnull @proto_list, ptr noundef %pos) #17
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @proto_seq_show(ptr noundef %seq, ptr noundef %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp = icmp eq ptr %v, @proto_list
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.482, ptr noundef nonnull @.str.483, ptr noundef nonnull @.str.484, ptr noundef nonnull @.str.485, ptr noundef nonnull @.str.486, ptr noundef nonnull @.str.487, ptr noundef nonnull @.str.488, ptr noundef nonnull @.str.489, ptr noundef nonnull @.str.490, ptr noundef nonnull @.str.491) #17
  br label %if.end

if.else:                                          ; preds = %entry
  %add.ptr = getelementptr i8, ptr %v, i32 -240
  %obj_size.i = getelementptr i8, ptr %v, i32 -68
  %0 = ptrtoint ptr %obj_size.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %obj_size.i, align 4
  %inuse_idx.i.i = getelementptr i8, ptr %v, i32 -136
  %2 = ptrtoint ptr %inuse_idx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %inuse_idx.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %call9.i.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__sanitizer_cov_trace_cmp4(i32 %call9.i.i, i32 %4)
  %cmp10.i.i = icmp ult i32 %call9.i.i, %4
  br i1 %cmp10.i.i, label %do.body.lr.ph.i.i, label %if.else.sock_prot_inuse_get.exit.i_crit_edge

if.else.sock_prot_inuse_get.exit.i_crit_edge:     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_prot_inuse_get.exit.i

do.body.lr.ph.i.i:                                ; preds = %if.else
  %private.i.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %5 = ptrtoint ptr %private.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private.i.i, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %prot_inuse.i.i = getelementptr inbounds %struct.net, ptr %8, i32 0, i32 29, i32 2
  %9 = ptrtoint ptr %prot_inuse.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prot_inuse.i.i, align 8
  %11 = ptrtoint ptr %10 to i32
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i.do.body.i.i_crit_edge, %do.body.lr.ph.i.i
  %call12.i.i = phi i32 [ %call9.i.i, %do.body.lr.ph.i.i ], [ %call.i.i, %do.body.i.i.do.body.i.i_crit_edge ]
  %res.011.i.i = phi i32 [ 0, %do.body.lr.ph.i.i ], [ %add3.i.i, %do.body.i.i.do.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call12.i.i
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %13, %11
  %14 = inttoptr i32 %add.i.i to ptr
  %arrayidx2.i.i = getelementptr %struct.prot_inuse, ptr %14, i32 0, i32 1, i32 %3
  %15 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx2.i.i, align 4
  %add3.i.i = add i32 %16, %res.011.i.i
  %call.i.i = tail call i32 @cpumask_next(i32 noundef %call12.i.i, ptr noundef nonnull @__cpu_possible_mask) #24
  %cmp.i.i = icmp ult i32 %call.i.i, %4
  br i1 %cmp.i.i, label %do.body.i.i.do.body.i.i_crit_edge, label %do.body.i.i.sock_prot_inuse_get.exit.i_crit_edge

do.body.i.i.sock_prot_inuse_get.exit.i_crit_edge: ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_prot_inuse_get.exit.i

do.body.i.i.do.body.i.i_crit_edge:                ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

sock_prot_inuse_get.exit.i:                       ; preds = %do.body.i.i.sock_prot_inuse_get.exit.i_crit_edge, %if.else.sock_prot_inuse_get.exit.i_crit_edge
  %res.0.lcssa.i.i = phi i32 [ 0, %if.else.sock_prot_inuse_get.exit.i_crit_edge ], [ %add3.i.i, %do.body.i.i.sock_prot_inuse_get.exit.i_crit_edge ]
  %memory_allocated.i.i = getelementptr i8, ptr %v, i32 -112
  %17 = ptrtoint ptr %memory_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %memory_allocated.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %18, null
  br i1 %cmp.not.i.i, label %sock_prot_inuse_get.exit.i.sock_prot_memory_allocated.exit.i_crit_edge, label %cond.true.i.i

sock_prot_inuse_get.exit.i.sock_prot_memory_allocated.exit.i_crit_edge: ; preds = %sock_prot_inuse_get.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_prot_memory_allocated.exit.i

cond.true.i.i:                                    ; preds = %sock_prot_inuse_get.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull %18, i32 noundef 4) #17
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %18, align 4
  br label %sock_prot_memory_allocated.exit.i

sock_prot_memory_allocated.exit.i:                ; preds = %cond.true.i.i, %sock_prot_inuse_get.exit.i.sock_prot_memory_allocated.exit.i_crit_edge
  %cond.i.i = phi i32 [ %20, %cond.true.i.i ], [ -1, %sock_prot_inuse_get.exit.i.sock_prot_memory_allocated.exit.i_crit_edge ]
  %memory_pressure.i.i = getelementptr i8, ptr %v, i32 -104
  %21 = ptrtoint ptr %memory_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %memory_pressure.i.i, align 4
  %cmp.not.i72.i = icmp eq ptr %22, null
  br i1 %cmp.not.i72.i, label %sock_prot_memory_allocated.exit.i.proto_seq_printf.exit_crit_edge, label %proto_memory_pressure.exit.i.i

sock_prot_memory_allocated.exit.i.proto_seq_printf.exit_crit_edge: ; preds = %sock_prot_memory_allocated.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %proto_seq_printf.exit

proto_memory_pressure.exit.i.i:                   ; preds = %sock_prot_memory_allocated.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool2.i.not.i.i = icmp eq i32 %24, 0
  %cond.i73.i = select i1 %tobool2.i.not.i.i, ptr @.str.493, ptr @.str.494
  br label %proto_seq_printf.exit

proto_seq_printf.exit:                            ; preds = %proto_memory_pressure.exit.i.i, %sock_prot_memory_allocated.exit.i.proto_seq_printf.exit_crit_edge
  %cond1.i.i = phi ptr [ %cond.i73.i, %proto_memory_pressure.exit.i.i ], [ @.str.496, %sock_prot_memory_allocated.exit.i.proto_seq_printf.exit_crit_edge ]
  %25 = tail call i32 @llvm.smax.i32(i32 %res.0.lcssa.i.i, i32 0) #17
  %max_header.i = getelementptr i8, ptr %v, i32 -80
  %26 = ptrtoint ptr %max_header.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %max_header.i, align 4
  %slab.i = getelementptr i8, ptr %v, i32 -72
  %28 = ptrtoint ptr %slab.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %slab.i, align 4
  %owner.i = getelementptr i8, ptr %v, i32 -36
  %30 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %owner.i, align 4
  %tobool.not.i = icmp eq ptr %31, null
  %name4.i = getelementptr inbounds %struct.module, ptr %31, i32 0, i32 2
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.495, ptr %name4.i
  %cmp.i = icmp eq ptr %29, null
  %cond.i = select i1 %cmp.i, ptr @.str.493, ptr @.str.494
  %name.i = getelementptr i8, ptr %v, i32 -32
  %32 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %add.ptr, align 4
  %cmp.i74.i = icmp eq ptr %33, null
  %conv.i = select i1 %cmp.i74.i, i32 110, i32 121
  %connect.i = getelementptr i8, ptr %v, i32 -232
  %34 = ptrtoint ptr %connect.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %connect.i, align 4
  %cmp.i75.i = icmp eq ptr %35, null
  %conv9.i = select i1 %cmp.i75.i, i32 110, i32 121
  %disconnect.i = getelementptr i8, ptr %v, i32 -228
  %36 = ptrtoint ptr %disconnect.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %disconnect.i, align 4
  %cmp.i77.i = icmp eq ptr %37, null
  %conv11.i = select i1 %cmp.i77.i, i32 110, i32 121
  %accept.i = getelementptr i8, ptr %v, i32 -224
  %38 = ptrtoint ptr %accept.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %accept.i, align 4
  %cmp.i79.i = icmp eq ptr %39, null
  %conv13.i = select i1 %cmp.i79.i, i32 110, i32 121
  %ioctl.i = getelementptr i8, ptr %v, i32 -220
  %40 = ptrtoint ptr %ioctl.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ioctl.i, align 4
  %cmp.i81.i = icmp eq ptr %41, null
  %conv15.i = select i1 %cmp.i81.i, i32 110, i32 121
  %init.i = getelementptr i8, ptr %v, i32 -216
  %42 = ptrtoint ptr %init.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %init.i, align 4
  %cmp.i83.i = icmp eq ptr %43, null
  %conv17.i = select i1 %cmp.i83.i, i32 110, i32 121
  %destroy.i = getelementptr i8, ptr %v, i32 -212
  %44 = ptrtoint ptr %destroy.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %destroy.i, align 4
  %cmp.i85.i = icmp eq ptr %45, null
  %conv19.i = select i1 %cmp.i85.i, i32 110, i32 121
  %shutdown.i = getelementptr i8, ptr %v, i32 -208
  %46 = ptrtoint ptr %shutdown.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %shutdown.i, align 4
  %cmp.i87.i = icmp eq ptr %47, null
  %conv21.i = select i1 %cmp.i87.i, i32 110, i32 121
  %setsockopt.i = getelementptr i8, ptr %v, i32 -204
  %48 = ptrtoint ptr %setsockopt.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %setsockopt.i, align 4
  %cmp.i89.i = icmp eq ptr %49, null
  %conv23.i = select i1 %cmp.i89.i, i32 110, i32 121
  %getsockopt.i = getelementptr i8, ptr %v, i32 -200
  %50 = ptrtoint ptr %getsockopt.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %getsockopt.i, align 4
  %cmp.i91.i = icmp eq ptr %51, null
  %conv25.i = select i1 %cmp.i91.i, i32 110, i32 121
  %sendmsg.i = getelementptr i8, ptr %v, i32 -192
  %52 = ptrtoint ptr %sendmsg.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %sendmsg.i, align 4
  %cmp.i93.i = icmp eq ptr %53, null
  %conv27.i = select i1 %cmp.i93.i, i32 110, i32 121
  %recvmsg.i = getelementptr i8, ptr %v, i32 -188
  %54 = ptrtoint ptr %recvmsg.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %recvmsg.i, align 4
  %cmp.i95.i = icmp eq ptr %55, null
  %conv29.i = select i1 %cmp.i95.i, i32 110, i32 121
  %sendpage.i = getelementptr i8, ptr %v, i32 -184
  %56 = ptrtoint ptr %sendpage.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %sendpage.i, align 4
  %cmp.i97.i = icmp eq ptr %57, null
  %conv31.i = select i1 %cmp.i97.i, i32 110, i32 121
  %bind.i = getelementptr i8, ptr %v, i32 -180
  %58 = ptrtoint ptr %bind.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %bind.i, align 4
  %cmp.i99.i = icmp eq ptr %59, null
  %conv33.i = select i1 %cmp.i99.i, i32 110, i32 121
  %backlog_rcv.i = getelementptr i8, ptr %v, i32 -172
  %60 = ptrtoint ptr %backlog_rcv.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %backlog_rcv.i, align 4
  %cmp.i101.i = icmp eq ptr %61, null
  %conv35.i = select i1 %cmp.i101.i, i32 110, i32 121
  %hash.i = getelementptr i8, ptr %v, i32 -160
  %62 = ptrtoint ptr %hash.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %hash.i, align 4
  %cmp.i103.i = icmp eq ptr %63, null
  %conv37.i = select i1 %cmp.i103.i, i32 110, i32 121
  %unhash.i = getelementptr i8, ptr %v, i32 -156
  %64 = ptrtoint ptr %unhash.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %unhash.i, align 4
  %cmp.i105.i = icmp eq ptr %65, null
  %conv39.i = select i1 %cmp.i105.i, i32 110, i32 121
  %get_port.i = getelementptr i8, ptr %v, i32 -148
  %66 = ptrtoint ptr %get_port.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %get_port.i, align 4
  %cmp.i107.i = icmp eq ptr %67, null
  %conv41.i = select i1 %cmp.i107.i, i32 110, i32 121
  %enter_memory_pressure.i = getelementptr i8, ptr %v, i32 -120
  %68 = ptrtoint ptr %enter_memory_pressure.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %enter_memory_pressure.i, align 4
  %cmp.i109.i = icmp eq ptr %69, null
  %conv43.i = select i1 %cmp.i109.i, i32 110, i32 121
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.492, ptr noundef %name.i, i32 noundef %1, i32 noundef %25, i32 noundef %cond.i.i, ptr noundef nonnull %cond1.i.i, i32 noundef %27, ptr noundef nonnull %cond.i, ptr noundef %spec.select.i, i32 noundef %conv.i, i32 noundef %conv9.i, i32 noundef %conv11.i, i32 noundef %conv13.i, i32 noundef %conv15.i, i32 noundef %conv17.i, i32 noundef %conv19.i, i32 noundef %conv21.i, i32 noundef %conv23.i, i32 noundef %conv25.i, i32 noundef %conv27.i, i32 noundef %conv29.i, i32 noundef %conv31.i, i32 noundef %conv33.i, i32 noundef %conv35.i, i32 noundef %conv37.i, i32 noundef %conv39.i, i32 noundef %conv41.i, i32 noundef %conv43.i) #17
  br label %if.end

if.end:                                           ; preds = %proto_seq_printf.exit, %if.then
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @seq_list_start_head(ptr noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @seq_list_next(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_proc_entry(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umax.i16(i16, i16) #16

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #17

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #18 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 530)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #18 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 530)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #12 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nounwind readonly }
attributes #14 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { cold noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #17 = { nounwind }
attributes #18 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #19 = { nomerge }
attributes #20 = { nounwind readnone }
attributes #21 = { cold nounwind }
attributes #22 = { nobuiltin }
attributes #23 = { nounwind allocsize(0) }
attributes #24 = { nounwind readonly willreturn }
attributes #25 = { cold noreturn nounwind }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !55, !57, !59, !61, !63, !65, !67, !69, !71, !73, !75, !77, !79, !81, !83, !85, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !136, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !170, !172, !174, !176, !178, !180, !182, !184, !185, !187, !188, !190, !191, !193, !194, !195, !196, !198, !200, !202, !204, !206, !208, !210, !212, !214, !216, !218, !220, !222, !224, !225, !226, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !250, !251, !253, !254, !256, !257, !259, !261, !263, !264, !266, !268, !270, !271, !273, !275, !277, !278, !279, !280, !282, !284, !285, !286, !287, !289, !291, !293, !295, !296, !297, !298, !300, !301, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !351, !353, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !403, !405, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !455, !457, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !507, !509, !511, !512, !514, !516, !517, !518, !519, !520, !522, !524, !525, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !575, !577, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !627, !629, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !679, !681, !683, !684, !685, !687, !688, !690, !692, !694, !696, !697, !699, !701, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !751, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !801, !803, !805, !807, !809, !811, !813, !815, !817, !819, !820, !821, !822, !824, !826, !827, !828, !829, !831, !832, !833, !835, !836, !837, !838, !840, !842, !844, !846, !848, !850, !852, !854, !856, !858, !860, !862, !864, !866, !868, !870, !872, !874, !876}
!llvm.named.register.sp = !{!878}
!llvm.module.flags = !{!879, !880, !881, !882, !883, !884, !885, !886}
!llvm.ident = !{!887}

!0 = !{ptr @__ksymtab_sk_ns_capable, !1, !"__ksymtab_sk_ns_capable", i1 false, i1 false}
!1 = !{!"../net/core/sock.c", i32 163, i32 1}
!2 = !{ptr @__ksymtab_sk_capable, !3, !"__ksymtab_sk_capable", i1 false, i1 false}
!3 = !{!"../net/core/sock.c", i32 178, i32 1}
!4 = !{ptr @__ksymtab_sk_net_capable, !5, !"__ksymtab_sk_net_capable", i1 false, i1 false}
!5 = !{!"../net/core/sock.c", i32 193, i32 1}
!6 = !{ptr @sysctl_wmem_max, !7, !"sysctl_wmem_max", i1 false, i1 false}
!7 = !{!"../net/core/sock.c", i32 270, i32 7}
!8 = !{ptr @__ksymtab_sysctl_wmem_max, !9, !"__ksymtab_sysctl_wmem_max", i1 false, i1 false}
!9 = !{!"../net/core/sock.c", i32 271, i32 1}
!10 = !{ptr @sysctl_rmem_max, !11, !"sysctl_rmem_max", i1 false, i1 false}
!11 = !{!"../net/core/sock.c", i32 272, i32 7}
!12 = !{ptr @__ksymtab_sysctl_rmem_max, !13, !"__ksymtab_sysctl_rmem_max", i1 false, i1 false}
!13 = !{!"../net/core/sock.c", i32 273, i32 1}
!14 = !{ptr @sysctl_wmem_default, !15, !"sysctl_wmem_default", i1 false, i1 false}
!15 = !{!"../net/core/sock.c", i32 274, i32 7}
!16 = !{ptr @sysctl_rmem_default, !17, !"sysctl_rmem_default", i1 false, i1 false}
!17 = !{!"../net/core/sock.c", i32 275, i32 7}
!18 = !{ptr @sysctl_optmem_max, !19, !"sysctl_optmem_max", i1 false, i1 false}
!19 = !{!"../net/core/sock.c", i32 278, i32 5}
!20 = !{ptr @__ksymtab_sysctl_optmem_max, !21, !"__ksymtab_sysctl_optmem_max", i1 false, i1 false}
!21 = !{!"../net/core/sock.c", i32 279, i32 1}
!22 = !{ptr @sysctl_tstamp_allow_data, !23, !"sysctl_tstamp_allow_data", i1 false, i1 false}
!23 = !{!"../net/core/sock.c", i32 281, i32 5}
!24 = !{ptr @memalloc_socks_key, !25, !"memalloc_socks_key", i1 false, i1 false}
!25 = !{!"../net/core/sock.c", i32 283, i32 1}
!26 = !{ptr @__ksymtab_memalloc_socks_key, !27, !"__ksymtab_memalloc_socks_key", i1 false, i1 false}
!27 = !{!"../net/core/sock.c", i32 284, i32 1}
!28 = !{ptr @__ksymtab_sk_set_memalloc, !29, !"__ksymtab_sk_set_memalloc", i1 false, i1 false}
!29 = !{!"../net/core/sock.c", i32 300, i32 1}
!30 = !{ptr @__ksymtab_sk_clear_memalloc, !31, !"__ksymtab_sk_clear_memalloc", i1 false, i1 false}
!31 = !{!"../net/core/sock.c", i32 317, i32 1}
!32 = !{ptr @__ksymtab___sk_backlog_rcv, !33, !"__ksymtab___sk_backlog_rcv", i1 false, i1 false}
!33 = !{!"../net/core/sock.c", i32 336, i32 1}
!34 = !{ptr @__ksymtab_sk_error_report, !35, !"__ksymtab_sk_error_report", i1 false, i1 false}
!35 = !{!"../net/core/sock.c", i32 352, i32 1}
!36 = !{ptr @__ksymtab_sock_get_timeout, !37, !"__ksymtab_sock_get_timeout", i1 false, i1 false}
!37 = !{!"../net/core/sock.c", i32 383, i32 1}
!38 = !{ptr @__ksymtab_sock_copy_user_timeval, !39, !"__ksymtab_sock_copy_user_timeval", i1 false, i1 false}
!39 = !{!"../net/core/sock.c", i32 416, i32 1}
!40 = !{ptr @__ksymtab___sock_queue_rcv_skb, !41, !"__ksymtab___sock_queue_rcv_skb", i1 false, i1 false}
!41 = !{!"../net/core/sock.c", i32 504, i32 1}
!42 = !{ptr @__ksymtab_sock_queue_rcv_skb, !43, !"__ksymtab_sock_queue_rcv_skb", i1 false, i1 false}
!43 = !{!"../net/core/sock.c", i32 516, i32 1}
!44 = !{ptr @__ksymtab___sk_receive_skb, !45, !"__ksymtab___sk_receive_skb", i1 false, i1 false}
!45 = !{!"../net/core/sock.c", i32 560, i32 1}
!46 = !{ptr @__ksymtab___sk_dst_check, !47, !"__ksymtab___sk_dst_check", i1 false, i1 false}
!47 = !{!"../net/core/sock.c", i32 582, i32 1}
!48 = !{ptr @__ksymtab_sk_dst_check, !49, !"__ksymtab_sk_dst_check", i1 false, i1 false}
!49 = !{!"../net/core/sock.c", i32 598, i32 1}
!50 = !{ptr @__ksymtab_sock_bindtoindex, !51, !"__ksymtab_sock_bindtoindex", i1 false, i1 false}
!51 = !{!"../net/core/sock.c", i32 640, i32 1}
!52 = distinct !{null, !53, !"__already_done", i1 false, i1 false}
!53 = !{!"../net/core/sock.c", i32 742, i32 2}
!54 = !{ptr @.str, !53, !"<string literal>", i1 false, i1 false}
!55 = !{ptr @__ksymtab_sk_mc_loop, !56, !"__ksymtab_sk_mc_loop", i1 false, i1 false}
!56 = !{!"../net/core/sock.c", i32 745, i32 1}
!57 = !{ptr @__ksymtab_sock_set_reuseaddr, !58, !"__ksymtab_sock_set_reuseaddr", i1 false, i1 false}
!58 = !{!"../net/core/sock.c", i32 753, i32 1}
!59 = !{ptr @__ksymtab_sock_set_reuseport, !60, !"__ksymtab_sock_set_reuseport", i1 false, i1 false}
!60 = !{!"../net/core/sock.c", i32 761, i32 1}
!61 = !{ptr @__ksymtab_sock_no_linger, !62, !"__ksymtab_sock_no_linger", i1 false, i1 false}
!62 = !{!"../net/core/sock.c", i32 770, i32 1}
!63 = !{ptr @__ksymtab_sock_set_priority, !64, !"__ksymtab_sock_set_priority", i1 false, i1 false}
!64 = !{!"../net/core/sock.c", i32 778, i32 1}
!65 = !{ptr @__ksymtab_sock_set_sndtimeo, !66, !"__ksymtab_sock_set_sndtimeo", i1 false, i1 false}
!66 = !{!"../net/core/sock.c", i32 789, i32 1}
!67 = !{ptr @__ksymtab_sock_enable_timestamps, !68, !"__ksymtab_sock_enable_timestamps", i1 false, i1 false}
!68 = !{!"../net/core/sock.c", i32 810, i32 1}
!69 = !{ptr @__ksymtab_sock_set_keepalive, !70, !"__ksymtab_sock_set_keepalive", i1 false, i1 false}
!70 = !{!"../net/core/sock.c", i32 918, i32 1}
!71 = !{ptr @__ksymtab_sock_set_rcvbuf, !72, !"__ksymtab_sock_set_rcvbuf", i1 false, i1 false}
!72 = !{!"../net/core/sock.c", i32 947, i32 1}
!73 = !{ptr @__ksymtab_sock_set_mark, !74, !"__ksymtab_sock_set_mark", i1 false, i1 false}
!74 = !{!"../net/core/sock.c", i32 963, i32 1}
!75 = !{ptr @__ksymtab_sock_setsockopt, !76, !"__ksymtab_sock_setsockopt", i1 false, i1 false}
!76 = !{!"../net/core/sock.c", i32 1457, i32 1}
!77 = !{ptr @__ksymtab_sk_alloc, !78, !"__ksymtab_sk_alloc", i1 false, i1 false}
!78 = !{!"../net/core/sock.c", i32 2004, i32 1}
!79 = distinct !{null, !80, !"__already_done", i1 false, i1 false}
!80 = !{!"../net/core/sock.c", i32 2052, i32 2}
!81 = !{ptr @__ksymtab_sk_free, !82, !"__ksymtab_sk_free", i1 false, i1 false}
!82 = !{!"../net/core/sock.c", i32 2087, i32 1}
!83 = distinct !{null, !84, !"__warned", i1 false, i1 false}
!84 = !{!"../net/core/sock.c", i32 2169, i32 11}
!85 = !{ptr @.str.2, !84, !"<string literal>", i1 false, i1 false}
!86 = !{ptr @__ksymtab_sk_clone_lock, !87, !"__ksymtab_sk_clone_lock", i1 false, i1 false}
!87 = !{!"../net/core/sock.c", i32 2238, i32 1}
!88 = !{ptr @__ksymtab_sk_free_unlock_clone, !89, !"__ksymtab_sk_free_unlock_clone", i1 false, i1 false}
!89 = !{!"../net/core/sock.c", i32 2248, i32 1}
!90 = !{ptr @__ksymtab_sk_setup_caps, !91, !"__ksymtab_sk_setup_caps", i1 false, i1 false}
!91 = !{!"../net/core/sock.c", i32 2275, i32 1}
!92 = !{ptr @__ksymtab_sock_wfree, !93, !"__ksymtab_sock_wfree", i1 false, i1 false}
!93 = !{!"../net/core/sock.c", i32 2306, i32 1}
!94 = !{ptr @__ksymtab_skb_set_owner_w, !95, !"__ksymtab_skb_set_owner_w", i1 false, i1 false}
!95 = !{!"../net/core/sock.c", i32 2339, i32 1}
!96 = !{ptr @__ksymtab_skb_orphan_partial, !97, !"__ksymtab_skb_orphan_partial", i1 false, i1 false}
!97 = !{!"../net/core/sock.c", i32 2370, i32 1}
!98 = !{ptr @__ksymtab_sock_rfree, !99, !"__ksymtab_sock_rfree", i1 false, i1 false}
!99 = !{!"../net/core/sock.c", i32 2383, i32 1}
!100 = !{ptr @__ksymtab_sock_efree, !101, !"__ksymtab_sock_efree", i1 false, i1 false}
!101 = !{!"../net/core/sock.c", i32 2393, i32 1}
!102 = !{ptr @__ksymtab_sock_pfree, !103, !"__ksymtab_sock_pfree", i1 false, i1 false}
!103 = !{!"../net/core/sock.c", i32 2404, i32 1}
!104 = !{ptr @__ksymtab_sock_i_uid, !105, !"__ksymtab_sock_i_uid", i1 false, i1 false}
!105 = !{!"../net/core/sock.c", i32 2416, i32 1}
!106 = !{ptr @__ksymtab_sock_i_ino, !107, !"__ksymtab_sock_i_ino", i1 false, i1 false}
!107 = !{!"../net/core/sock.c", i32 2427, i32 1}
!108 = !{ptr @__ksymtab_sock_wmalloc, !109, !"__ksymtab_sock_wmalloc", i1 false, i1 false}
!109 = !{!"../net/core/sock.c", i32 2446, i32 1}
!110 = !{ptr @__ksymtab_sock_kmalloc, !111, !"__ksymtab_sock_kmalloc", i1 false, i1 false}
!111 = !{!"../net/core/sock.c", i32 2494, i32 1}
!112 = !{ptr @__ksymtab_sock_kfree_s, !113, !"__ksymtab_sock_kfree_s", i1 false, i1 false}
!113 = !{!"../net/core/sock.c", i32 2516, i32 1}
!114 = !{ptr @__ksymtab_sock_kzfree_s, !115, !"__ksymtab_sock_kzfree_s", i1 false, i1 false}
!115 = !{!"../net/core/sock.c", i32 2522, i32 1}
!116 = !{ptr @__ksymtab_sock_alloc_send_pskb, !117, !"__ksymtab_sock_alloc_send_pskb", i1 false, i1 false}
!117 = !{!"../net/core/sock.c", i32 2598, i32 1}
!118 = !{ptr @__ksymtab_sock_alloc_send_skb, !119, !"__ksymtab_sock_alloc_send_skb", i1 false, i1 false}
!119 = !{!"../net/core/sock.c", i32 2605, i32 1}
!120 = !{ptr @__ksymtab___sock_cmsg_send, !121, !"__ksymtab___sock_cmsg_send", i1 false, i1 false}
!121 = !{!"../net/core/sock.c", i32 2647, i32 1}
!122 = !{ptr @__ksymtab_sock_cmsg_send, !123, !"__ksymtab_sock_cmsg_send", i1 false, i1 false}
!123 = !{!"../net/core/sock.c", i32 2666, i32 1}
!124 = !{ptr @net_high_order_alloc_disable_key, !125, !"net_high_order_alloc_disable_key", i1 false, i1 false}
!125 = !{!"../net/core/sock.c", i32 2688, i32 1}
!126 = !{ptr @__ksymtab_skb_page_frag_refill, !127, !"__ksymtab_skb_page_frag_refill", i1 false, i1 false}
!127 = !{!"../net/core/sock.c", i32 2732, i32 1}
!128 = !{ptr @__ksymtab_sk_page_frag_refill, !129, !"__ksymtab_sk_page_frag_refill", i1 false, i1 false}
!129 = !{!"../net/core/sock.c", i32 2743, i32 1}
!130 = distinct !{null, !131, !"__already_done", i1 false, i1 false}
!131 = !{!"../net/core/sock.c", i32 2777, i32 4}
!132 = !{ptr @__ksymtab_sk_wait_data, !133, !"__ksymtab_sk_wait_data", i1 false, i1 false}
!133 = !{!"../net/core/sock.c", i32 2826, i32 1}
!134 = !{ptr @__ksymtab___sk_mem_raise_allocated, !135, !"__ksymtab___sk_mem_raise_allocated", i1 false, i1 false}
!135 = !{!"../net/core/sock.c", i32 2920, i32 1}
!136 = !{ptr @__ksymtab___sk_mem_schedule, !137, !"__ksymtab___sk_mem_schedule", i1 false, i1 false}
!137 = !{!"../net/core/sock.c", i32 2942, i32 1}
!138 = !{ptr @__ksymtab___sk_mem_reduce_allocated, !139, !"__ksymtab___sk_mem_reduce_allocated", i1 false, i1 false}
!139 = !{!"../net/core/sock.c", i32 2962, i32 1}
!140 = !{ptr @__ksymtab___sk_mem_reclaim, !141, !"__ksymtab___sk_mem_reclaim", i1 false, i1 false}
!141 = !{!"../net/core/sock.c", i32 2975, i32 1}
!142 = !{ptr @__ksymtab_sk_set_peek_off, !143, !"__ksymtab_sk_set_peek_off", i1 false, i1 false}
!143 = !{!"../net/core/sock.c", i32 2982, i32 1}
!144 = !{ptr @__ksymtab_sock_no_bind, !145, !"__ksymtab_sock_no_bind", i1 false, i1 false}
!145 = !{!"../net/core/sock.c", i32 2995, i32 1}
!146 = !{ptr @__ksymtab_sock_no_connect, !147, !"__ksymtab_sock_no_connect", i1 false, i1 false}
!147 = !{!"../net/core/sock.c", i32 3002, i32 1}
!148 = !{ptr @__ksymtab_sock_no_socketpair, !149, !"__ksymtab_sock_no_socketpair", i1 false, i1 false}
!149 = !{!"../net/core/sock.c", i32 3008, i32 1}
!150 = !{ptr @__ksymtab_sock_no_accept, !151, !"__ksymtab_sock_no_accept", i1 false, i1 false}
!151 = !{!"../net/core/sock.c", i32 3015, i32 1}
!152 = !{ptr @__ksymtab_sock_no_getname, !153, !"__ksymtab_sock_no_getname", i1 false, i1 false}
!153 = !{!"../net/core/sock.c", i32 3022, i32 1}
!154 = !{ptr @__ksymtab_sock_no_ioctl, !155, !"__ksymtab_sock_no_ioctl", i1 false, i1 false}
!155 = !{!"../net/core/sock.c", i32 3028, i32 1}
!156 = !{ptr @__ksymtab_sock_no_listen, !157, !"__ksymtab_sock_no_listen", i1 false, i1 false}
!157 = !{!"../net/core/sock.c", i32 3034, i32 1}
!158 = !{ptr @__ksymtab_sock_no_shutdown, !159, !"__ksymtab_sock_no_shutdown", i1 false, i1 false}
!159 = !{!"../net/core/sock.c", i32 3040, i32 1}
!160 = !{ptr @__ksymtab_sock_no_sendmsg, !161, !"__ksymtab_sock_no_sendmsg", i1 false, i1 false}
!161 = !{!"../net/core/sock.c", i32 3046, i32 1}
!162 = !{ptr @__ksymtab_sock_no_sendmsg_locked, !163, !"__ksymtab_sock_no_sendmsg_locked", i1 false, i1 false}
!163 = !{!"../net/core/sock.c", i32 3052, i32 1}
!164 = !{ptr @__ksymtab_sock_no_recvmsg, !165, !"__ksymtab_sock_no_recvmsg", i1 false, i1 false}
!165 = !{!"../net/core/sock.c", i32 3059, i32 1}
!166 = !{ptr @__ksymtab_sock_no_mmap, !167, !"__ksymtab_sock_no_mmap", i1 false, i1 false}
!167 = !{!"../net/core/sock.c", i32 3066, i32 1}
!168 = !{ptr @__ksymtab_sock_no_sendpage, !169, !"__ksymtab_sock_no_sendpage", i1 false, i1 false}
!169 = !{!"../net/core/sock.c", i32 3095, i32 1}
!170 = !{ptr @__ksymtab_sock_no_sendpage_locked, !171, !"__ksymtab_sock_no_sendpage_locked", i1 false, i1 false}
!171 = !{!"../net/core/sock.c", i32 3111, i32 1}
!172 = distinct !{null, !173, !"__warned", i1 false, i1 false}
!173 = !{!"../net/core/sock.c", i32 3145, i32 7}
!174 = !{ptr @__ksymtab_sk_send_sigurg, !175, !"__ksymtab_sk_send_sigurg", i1 false, i1 false}
!175 = !{!"../net/core/sock.c", i32 3186, i32 1}
!176 = !{ptr @__ksymtab_sk_reset_timer, !177, !"__ksymtab_sk_reset_timer", i1 false, i1 false}
!177 = !{!"../net/core/sock.c", i32 3194, i32 1}
!178 = !{ptr @__ksymtab_sk_stop_timer, !179, !"__ksymtab_sk_stop_timer", i1 false, i1 false}
!179 = !{!"../net/core/sock.c", i32 3201, i32 1}
!180 = !{ptr @__ksymtab_sk_stop_timer_sync, !181, !"__ksymtab_sk_stop_timer_sync", i1 false, i1 false}
!181 = !{!"../net/core/sock.c", i32 3208, i32 1}
!182 = !{ptr @sock_init_data.__key, !183, !"__key", i1 false, i1 false}
!183 = !{!"../net/core/sock.c", i32 3215, i32 2}
!184 = !{ptr @.str.3, !183, !"<string literal>", i1 false, i1 false}
!185 = !{ptr @sock_init_data.__key.4, !186, !"__key", i1 false, i1 false}
!186 = !{!"../net/core/sock.c", i32 3235, i32 2}
!187 = !{ptr @.str.5, !186, !"<string literal>", i1 false, i1 false}
!188 = !{ptr @sock_init_data.__key.6, !189, !"__key", i1 false, i1 false}
!189 = !{!"../net/core/sock.c", i32 3259, i32 2}
!190 = !{ptr @.str.7, !189, !"<string literal>", i1 false, i1 false}
!191 = !{ptr @sock_init_data.__key.8, !192, !"__key", i1 false, i1 false}
!192 = !{!"../net/core/sock.c", i32 3268, i32 2}
!193 = !{ptr @.str.9, !192, !"<string literal>", i1 false, i1 false}
!194 = !{ptr @sock_init_data.__key.10, !192, !"__key", i1 false, i1 false}
!195 = !{ptr @.str.11, !192, !"<string literal>", i1 false, i1 false}
!196 = !{ptr @__ksymtab_sock_init_data, !197, !"__ksymtab_sock_init_data", i1 false, i1 false}
!197 = !{!"../net/core/sock.c", i32 3291, i32 1}
!198 = !{ptr @__ksymtab_lock_sock_nested, !199, !"__ksymtab_lock_sock_nested", i1 false, i1 false}
!199 = !{!"../net/core/sock.c", i32 3305, i32 1}
!200 = !{ptr @__ksymtab_release_sock, !201, !"__ksymtab_release_sock", i1 false, i1 false}
!201 = !{!"../net/core/sock.c", i32 3324, i32 1}
!202 = !{ptr @__ksymtab___lock_sock_fast, !203, !"__ksymtab___lock_sock_fast", i1 false, i1 false}
!203 = !{!"../net/core/sock.c", i32 3356, i32 1}
!204 = !{ptr @__ksymtab_sock_gettstamp, !205, !"__ksymtab_sock_gettstamp", i1 false, i1 false}
!205 = !{!"../net/core/sock.c", i32 3395, i32 1}
!206 = !{ptr @__ksymtab_sock_recv_errqueue, !207, !"__ksymtab_sock_recv_errqueue", i1 false, i1 false}
!207 = !{!"../net/core/sock.c", i32 3448, i32 1}
!208 = !{ptr @__ksymtab_sock_common_getsockopt, !209, !"__ksymtab_sock_common_getsockopt", i1 false, i1 false}
!209 = !{!"../net/core/sock.c", i32 3464, i32 1}
!210 = !{ptr @__ksymtab_sock_common_recvmsg, !211, !"__ksymtab_sock_common_recvmsg", i1 false, i1 false}
!211 = !{!"../net/core/sock.c", i32 3479, i32 1}
!212 = !{ptr @__ksymtab_sock_common_setsockopt, !213, !"__ksymtab_sock_common_setsockopt", i1 false, i1 false}
!213 = !{!"../net/core/sock.c", i32 3491, i32 1}
!214 = !{ptr @__ksymtab_sk_common_release, !215, !"__ksymtab_sk_common_release", i1 false, i1 false}
!215 = !{!"../net/core/sock.c", i32 3528, i32 1}
!216 = !{ptr @__ksymtab_sock_prot_inuse_get, !217, !"__ksymtab_sock_prot_inuse_get", i1 false, i1 false}
!217 = !{!"../net/core/sock.c", i32 3558, i32 1}
!218 = !{ptr @__ksymtab_sock_inuse_get, !219, !"__ksymtab_sock_inuse_get", i1 false, i1 false}
!219 = !{!"../net/core/sock.c", i32 3570, i32 1}
!220 = !{ptr @__initcall__kmod_sock__702_3598_net_inuse_init1, !221, !"__initcall__kmod_sock__702_3598_net_inuse_init1", i1 false, i1 false}
!221 = !{!"../net/core/sock.c", i32 3598, i32 1}
!222 = !{ptr @.str.12, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../net/core/sock.c", i32 3714, i32 4}
!224 = !{ptr @.str.13, !223, !"<string literal>", i1 false, i1 false}
!225 = !{ptr @proto_register._entry, !223, !"_entry", i1 false, i1 false}
!226 = !{ptr @proto_register._entry_ptr, !223, !"_entry_ptr", i1 false, i1 false}
!227 = !{ptr @__ksymtab_proto_register, !228, !"__ksymtab_proto_register", i1 false, i1 false}
!228 = !{!"../net/core/sock.c", i32 3749, i32 1}
!229 = !{ptr @__ksymtab_proto_unregister, !230, !"__ksymtab_proto_unregister", i1 false, i1 false}
!230 = !{!"../net/core/sock.c", i32 3764, i32 1}
!231 = !{ptr @.str.14, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../net/core/sock.c", i32 3772, i32 10}
!233 = !{ptr @.str.15, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../net/core/sock.c", i32 3784, i32 9}
!235 = !{ptr @__ksymtab_sock_load_diag_module, !236, !"__ksymtab_sock_load_diag_module", i1 false, i1 false}
!236 = !{!"../net/core/sock.c", i32 3787, i32 1}
!237 = !{ptr @__initcall__kmod_sock__705_3907_proto_init4, !238, !"__initcall__kmod_sock__705_3907_proto_init4", i1 false, i1 false}
!238 = !{!"../net/core/sock.c", i32 3907, i32 1}
!239 = !{ptr @__ksymtab_sk_busy_loop_end, !240, !"__ksymtab_sk_busy_loop_end", i1 false, i1 false}
!240 = !{!"../net/core/sock.c", i32 3919, i32 1}
!241 = !{ptr @__ksymtab_sock_bind_add, !242, !"__ksymtab_sock_bind_add", i1 false, i1 false}
!242 = !{!"../net/core/sock.c", i32 3928, i32 1}
!243 = !{ptr @af_callback_keys, !244, !"af_callback_keys", i1 false, i1 false}
!244 = !{!"../net/core/sock.c", i32 263, i32 30}
!245 = !{ptr @af_kern_callback_keys, !246, !"af_kern_callback_keys", i1 false, i1 false}
!246 = !{!"../net/core/sock.c", i32 267, i32 30}
!247 = distinct !{null, !248, !"__already_done", i1 false, i1 false}
!248 = !{!"../include/trace/events/sock.h", i32 204, i32 1}
!249 = !{ptr @.str.16, !248, !"<string literal>", i1 false, i1 false}
!250 = distinct !{null, !248, !"__warned", i1 false, i1 false}
!251 = distinct !{null, !252, !"__already_done", i1 false, i1 false}
!252 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!253 = !{ptr @.str.17, !252, !"<string literal>", i1 false, i1 false}
!254 = distinct !{null, !255, !"__already_done", i1 false, i1 false}
!255 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!256 = !{ptr @.str.18, !255, !"<string literal>", i1 false, i1 false}
!257 = !{ptr @.str.19, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!259 = !{ptr @.str.20, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../include/linux/uaccess.h", i32 156, i32 2}
!261 = distinct !{null, !262, !"__already_done", i1 false, i1 false}
!262 = !{!"../include/trace/events/sock.h", i32 71, i32 1}
!263 = distinct !{null, !262, !"__warned", i1 false, i1 false}
!264 = !{ptr @.str.21, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../include/net/dst.h", i32 316, i32 3}
!266 = !{ptr @.str.22, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../include/linux/skbuff.h", i32 1011, i32 2}
!268 = distinct !{null, !269, !"__already_done", i1 false, i1 false}
!269 = !{!"../include/net/sock.h", i32 1750, i32 2}
!270 = !{ptr @.str.23, !269, !"<string literal>", i1 false, i1 false}
!271 = distinct !{null, !272, !"__warned", i1 false, i1 false}
!272 = !{!"../include/net/sock.h", i32 2067, i32 9}
!273 = distinct !{null, !274, !"__warned", i1 false, i1 false}
!274 = !{!"../include/net/sock.h", i32 2077, i32 8}
!275 = !{ptr @.str.24, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../net/core/sock.c", i32 842, i32 3}
!277 = !{ptr @.str.25, !276, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @sock_timestamping_bind_phc._entry, !276, !"_entry", i1 false, i1 false}
!279 = !{ptr @sock_timestamping_bind_phc._entry_ptr, !276, !"_entry_ptr", i1 false, i1 false}
!280 = !{ptr @sock_set_timeout.warned, !281, !"warned", i1 false, i1 false}
!281 = !{!"../net/core/sock.c", i32 431, i32 14}
!282 = !{ptr @.str.26, !283, !"<string literal>", i1 false, i1 false}
!283 = !{!"../net/core/sock.c", i32 436, i32 4}
!284 = !{ptr @.str.27, !283, !"<string literal>", i1 false, i1 false}
!285 = !{ptr @sock_set_timeout._entry, !283, !"_entry", i1 false, i1 false}
!286 = !{ptr @sock_set_timeout._entry_ptr, !283, !"_entry_ptr", i1 false, i1 false}
!287 = distinct !{null, !288, !"__warned", i1 false, i1 false}
!288 = !{!"../net/core/sock.c", i32 1476, i32 39}
!289 = !{ptr @.str.28, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../include/linux/cred.h", i32 253, i32 2}
!291 = distinct !{null, !292, !"__warned", i1 false, i1 false}
!292 = !{!"../net/core/sock.c", i32 1485, i32 35}
!293 = !{ptr @sock_lock_init.__key, !294, !"__key", i1 false, i1 false}
!294 = !{!"../net/core/sock.c", i32 1862, i32 3}
!295 = !{ptr @.str.29, !294, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @sock_lock_init.__key.30, !294, !"__key", i1 false, i1 false}
!297 = !{ptr @.str.31, !294, !"<string literal>", i1 false, i1 false}
!298 = !{ptr @sock_lock_init.__key.32, !299, !"__key", i1 false, i1 false}
!299 = !{!"../net/core/sock.c", i32 1869, i32 3}
!300 = !{ptr @sock_lock_init.__key.33, !299, !"__key", i1 false, i1 false}
!301 = !{ptr @.str.34, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../net/core/sock.c", i32 244, i32 2}
!303 = !{ptr @.str.35, !302, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @.str.36, !302, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @.str.37, !302, !"<string literal>", i1 false, i1 false}
!306 = !{ptr @.str.38, !302, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @.str.39, !302, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @.str.40, !302, !"<string literal>", i1 false, i1 false}
!309 = !{ptr @.str.41, !302, !"<string literal>", i1 false, i1 false}
!310 = !{ptr @.str.42, !302, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @.str.43, !302, !"<string literal>", i1 false, i1 false}
!312 = !{ptr @.str.44, !302, !"<string literal>", i1 false, i1 false}
!313 = !{ptr @.str.45, !302, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @.str.46, !302, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @.str.47, !302, !"<string literal>", i1 false, i1 false}
!316 = !{ptr @.str.48, !302, !"<string literal>", i1 false, i1 false}
!317 = !{ptr @.str.49, !302, !"<string literal>", i1 false, i1 false}
!318 = !{ptr @.str.50, !302, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @.str.51, !302, !"<string literal>", i1 false, i1 false}
!320 = !{ptr @.str.52, !302, !"<string literal>", i1 false, i1 false}
!321 = !{ptr @.str.53, !302, !"<string literal>", i1 false, i1 false}
!322 = !{ptr @.str.54, !302, !"<string literal>", i1 false, i1 false}
!323 = !{ptr @.str.55, !302, !"<string literal>", i1 false, i1 false}
!324 = !{ptr @.str.56, !302, !"<string literal>", i1 false, i1 false}
!325 = !{ptr @.str.57, !302, !"<string literal>", i1 false, i1 false}
!326 = !{ptr @.str.58, !302, !"<string literal>", i1 false, i1 false}
!327 = !{ptr @.str.59, !302, !"<string literal>", i1 false, i1 false}
!328 = !{ptr @.str.60, !302, !"<string literal>", i1 false, i1 false}
!329 = !{ptr @.str.61, !302, !"<string literal>", i1 false, i1 false}
!330 = !{ptr @.str.62, !302, !"<string literal>", i1 false, i1 false}
!331 = !{ptr @.str.63, !302, !"<string literal>", i1 false, i1 false}
!332 = !{ptr @.str.64, !302, !"<string literal>", i1 false, i1 false}
!333 = !{ptr @.str.65, !302, !"<string literal>", i1 false, i1 false}
!334 = !{ptr @.str.66, !302, !"<string literal>", i1 false, i1 false}
!335 = !{ptr @.str.67, !302, !"<string literal>", i1 false, i1 false}
!336 = !{ptr @.str.68, !302, !"<string literal>", i1 false, i1 false}
!337 = !{ptr @.str.69, !302, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @.str.70, !302, !"<string literal>", i1 false, i1 false}
!339 = !{ptr @.str.71, !302, !"<string literal>", i1 false, i1 false}
!340 = !{ptr @.str.72, !302, !"<string literal>", i1 false, i1 false}
!341 = !{ptr @.str.73, !302, !"<string literal>", i1 false, i1 false}
!342 = !{ptr @.str.74, !302, !"<string literal>", i1 false, i1 false}
!343 = !{ptr @.str.75, !302, !"<string literal>", i1 false, i1 false}
!344 = !{ptr @.str.76, !302, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @.str.77, !302, !"<string literal>", i1 false, i1 false}
!346 = !{ptr @.str.78, !302, !"<string literal>", i1 false, i1 false}
!347 = !{ptr @.str.79, !302, !"<string literal>", i1 false, i1 false}
!348 = !{ptr @.str.80, !302, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @af_family_kern_slock_key_strings, !350, !"af_family_kern_slock_key_strings", i1 false, i1 false}
!350 = !{!"../net/core/sock.c", i32 243, i32 26}
!351 = !{ptr @af_family_kern_slock_keys, !352, !"af_family_kern_slock_keys", i1 false, i1 false}
!352 = !{!"../net/core/sock.c", i32 203, i32 30}
!353 = !{ptr @.str.81, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../net/core/sock.c", i32 241, i32 2}
!355 = !{ptr @.str.82, !354, !"<string literal>", i1 false, i1 false}
!356 = !{ptr @.str.83, !354, !"<string literal>", i1 false, i1 false}
!357 = !{ptr @.str.84, !354, !"<string literal>", i1 false, i1 false}
!358 = !{ptr @.str.85, !354, !"<string literal>", i1 false, i1 false}
!359 = !{ptr @.str.86, !354, !"<string literal>", i1 false, i1 false}
!360 = !{ptr @.str.87, !354, !"<string literal>", i1 false, i1 false}
!361 = !{ptr @.str.88, !354, !"<string literal>", i1 false, i1 false}
!362 = !{ptr @.str.89, !354, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @.str.90, !354, !"<string literal>", i1 false, i1 false}
!364 = !{ptr @.str.91, !354, !"<string literal>", i1 false, i1 false}
!365 = !{ptr @.str.92, !354, !"<string literal>", i1 false, i1 false}
!366 = !{ptr @.str.93, !354, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @.str.94, !354, !"<string literal>", i1 false, i1 false}
!368 = !{ptr @.str.95, !354, !"<string literal>", i1 false, i1 false}
!369 = !{ptr @.str.96, !354, !"<string literal>", i1 false, i1 false}
!370 = !{ptr @.str.97, !354, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @.str.98, !354, !"<string literal>", i1 false, i1 false}
!372 = !{ptr @.str.99, !354, !"<string literal>", i1 false, i1 false}
!373 = !{ptr @.str.100, !354, !"<string literal>", i1 false, i1 false}
!374 = !{ptr @.str.101, !354, !"<string literal>", i1 false, i1 false}
!375 = !{ptr @.str.102, !354, !"<string literal>", i1 false, i1 false}
!376 = !{ptr @.str.103, !354, !"<string literal>", i1 false, i1 false}
!377 = !{ptr @.str.104, !354, !"<string literal>", i1 false, i1 false}
!378 = !{ptr @.str.105, !354, !"<string literal>", i1 false, i1 false}
!379 = !{ptr @.str.106, !354, !"<string literal>", i1 false, i1 false}
!380 = !{ptr @.str.107, !354, !"<string literal>", i1 false, i1 false}
!381 = !{ptr @.str.108, !354, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @.str.109, !354, !"<string literal>", i1 false, i1 false}
!383 = !{ptr @.str.110, !354, !"<string literal>", i1 false, i1 false}
!384 = !{ptr @.str.111, !354, !"<string literal>", i1 false, i1 false}
!385 = !{ptr @.str.112, !354, !"<string literal>", i1 false, i1 false}
!386 = !{ptr @.str.113, !354, !"<string literal>", i1 false, i1 false}
!387 = !{ptr @.str.114, !354, !"<string literal>", i1 false, i1 false}
!388 = !{ptr @.str.115, !354, !"<string literal>", i1 false, i1 false}
!389 = !{ptr @.str.116, !354, !"<string literal>", i1 false, i1 false}
!390 = !{ptr @.str.117, !354, !"<string literal>", i1 false, i1 false}
!391 = !{ptr @.str.118, !354, !"<string literal>", i1 false, i1 false}
!392 = !{ptr @.str.119, !354, !"<string literal>", i1 false, i1 false}
!393 = !{ptr @.str.120, !354, !"<string literal>", i1 false, i1 false}
!394 = !{ptr @.str.121, !354, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @.str.122, !354, !"<string literal>", i1 false, i1 false}
!396 = !{ptr @.str.123, !354, !"<string literal>", i1 false, i1 false}
!397 = !{ptr @.str.124, !354, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @.str.125, !354, !"<string literal>", i1 false, i1 false}
!399 = !{ptr @.str.126, !354, !"<string literal>", i1 false, i1 false}
!400 = !{ptr @.str.127, !354, !"<string literal>", i1 false, i1 false}
!401 = !{ptr @af_family_kern_key_strings, !402, !"af_family_kern_key_strings", i1 false, i1 false}
!402 = !{!"../net/core/sock.c", i32 240, i32 26}
!403 = !{ptr @af_family_kern_keys, !404, !"af_family_kern_keys", i1 false, i1 false}
!404 = !{!"../net/core/sock.c", i32 201, i32 30}
!405 = !{ptr @.str.128, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../net/core/sock.c", i32 234, i32 2}
!407 = !{ptr @.str.129, !406, !"<string literal>", i1 false, i1 false}
!408 = !{ptr @.str.130, !406, !"<string literal>", i1 false, i1 false}
!409 = !{ptr @.str.131, !406, !"<string literal>", i1 false, i1 false}
!410 = !{ptr @.str.132, !406, !"<string literal>", i1 false, i1 false}
!411 = !{ptr @.str.133, !406, !"<string literal>", i1 false, i1 false}
!412 = !{ptr @.str.134, !406, !"<string literal>", i1 false, i1 false}
!413 = !{ptr @.str.135, !406, !"<string literal>", i1 false, i1 false}
!414 = !{ptr @.str.136, !406, !"<string literal>", i1 false, i1 false}
!415 = !{ptr @.str.137, !406, !"<string literal>", i1 false, i1 false}
!416 = !{ptr @.str.138, !406, !"<string literal>", i1 false, i1 false}
!417 = !{ptr @.str.139, !406, !"<string literal>", i1 false, i1 false}
!418 = !{ptr @.str.140, !406, !"<string literal>", i1 false, i1 false}
!419 = !{ptr @.str.141, !406, !"<string literal>", i1 false, i1 false}
!420 = !{ptr @.str.142, !406, !"<string literal>", i1 false, i1 false}
!421 = !{ptr @.str.143, !406, !"<string literal>", i1 false, i1 false}
!422 = !{ptr @.str.144, !406, !"<string literal>", i1 false, i1 false}
!423 = !{ptr @.str.145, !406, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @.str.146, !406, !"<string literal>", i1 false, i1 false}
!425 = !{ptr @.str.147, !406, !"<string literal>", i1 false, i1 false}
!426 = !{ptr @.str.148, !406, !"<string literal>", i1 false, i1 false}
!427 = !{ptr @.str.149, !406, !"<string literal>", i1 false, i1 false}
!428 = !{ptr @.str.150, !406, !"<string literal>", i1 false, i1 false}
!429 = !{ptr @.str.151, !406, !"<string literal>", i1 false, i1 false}
!430 = !{ptr @.str.152, !406, !"<string literal>", i1 false, i1 false}
!431 = !{ptr @.str.153, !406, !"<string literal>", i1 false, i1 false}
!432 = !{ptr @.str.154, !406, !"<string literal>", i1 false, i1 false}
!433 = !{ptr @.str.155, !406, !"<string literal>", i1 false, i1 false}
!434 = !{ptr @.str.156, !406, !"<string literal>", i1 false, i1 false}
!435 = !{ptr @.str.157, !406, !"<string literal>", i1 false, i1 false}
!436 = !{ptr @.str.158, !406, !"<string literal>", i1 false, i1 false}
!437 = !{ptr @.str.159, !406, !"<string literal>", i1 false, i1 false}
!438 = !{ptr @.str.160, !406, !"<string literal>", i1 false, i1 false}
!439 = !{ptr @.str.161, !406, !"<string literal>", i1 false, i1 false}
!440 = !{ptr @.str.162, !406, !"<string literal>", i1 false, i1 false}
!441 = !{ptr @.str.163, !406, !"<string literal>", i1 false, i1 false}
!442 = !{ptr @.str.164, !406, !"<string literal>", i1 false, i1 false}
!443 = !{ptr @.str.165, !406, !"<string literal>", i1 false, i1 false}
!444 = !{ptr @.str.166, !406, !"<string literal>", i1 false, i1 false}
!445 = !{ptr @.str.167, !406, !"<string literal>", i1 false, i1 false}
!446 = !{ptr @.str.168, !406, !"<string literal>", i1 false, i1 false}
!447 = !{ptr @.str.169, !406, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @.str.170, !406, !"<string literal>", i1 false, i1 false}
!449 = !{ptr @.str.171, !406, !"<string literal>", i1 false, i1 false}
!450 = !{ptr @.str.172, !406, !"<string literal>", i1 false, i1 false}
!451 = !{ptr @.str.173, !406, !"<string literal>", i1 false, i1 false}
!452 = !{ptr @.str.174, !406, !"<string literal>", i1 false, i1 false}
!453 = !{ptr @af_family_slock_key_strings, !454, !"af_family_slock_key_strings", i1 false, i1 false}
!454 = !{!"../net/core/sock.c", i32 233, i32 26}
!455 = !{ptr @af_family_slock_keys, !456, !"af_family_slock_keys", i1 false, i1 false}
!456 = !{!"../net/core/sock.c", i32 202, i32 30}
!457 = !{ptr @.str.175, !458, !"<string literal>", i1 false, i1 false}
!458 = !{!"../net/core/sock.c", i32 231, i32 2}
!459 = !{ptr @.str.176, !458, !"<string literal>", i1 false, i1 false}
!460 = !{ptr @.str.177, !458, !"<string literal>", i1 false, i1 false}
!461 = !{ptr @.str.178, !458, !"<string literal>", i1 false, i1 false}
!462 = !{ptr @.str.179, !458, !"<string literal>", i1 false, i1 false}
!463 = !{ptr @.str.180, !458, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @.str.181, !458, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @.str.182, !458, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @.str.183, !458, !"<string literal>", i1 false, i1 false}
!467 = !{ptr @.str.184, !458, !"<string literal>", i1 false, i1 false}
!468 = !{ptr @.str.185, !458, !"<string literal>", i1 false, i1 false}
!469 = !{ptr @.str.186, !458, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @.str.187, !458, !"<string literal>", i1 false, i1 false}
!471 = !{ptr @.str.188, !458, !"<string literal>", i1 false, i1 false}
!472 = !{ptr @.str.189, !458, !"<string literal>", i1 false, i1 false}
!473 = !{ptr @.str.190, !458, !"<string literal>", i1 false, i1 false}
!474 = !{ptr @.str.191, !458, !"<string literal>", i1 false, i1 false}
!475 = !{ptr @.str.192, !458, !"<string literal>", i1 false, i1 false}
!476 = !{ptr @.str.193, !458, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @.str.194, !458, !"<string literal>", i1 false, i1 false}
!478 = !{ptr @.str.195, !458, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @.str.196, !458, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @.str.197, !458, !"<string literal>", i1 false, i1 false}
!481 = !{ptr @.str.198, !458, !"<string literal>", i1 false, i1 false}
!482 = !{ptr @.str.199, !458, !"<string literal>", i1 false, i1 false}
!483 = !{ptr @.str.200, !458, !"<string literal>", i1 false, i1 false}
!484 = !{ptr @.str.201, !458, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @.str.202, !458, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @.str.203, !458, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @.str.204, !458, !"<string literal>", i1 false, i1 false}
!488 = !{ptr @.str.205, !458, !"<string literal>", i1 false, i1 false}
!489 = !{ptr @.str.206, !458, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @.str.207, !458, !"<string literal>", i1 false, i1 false}
!491 = !{ptr @.str.208, !458, !"<string literal>", i1 false, i1 false}
!492 = !{ptr @.str.209, !458, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @.str.210, !458, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @.str.211, !458, !"<string literal>", i1 false, i1 false}
!495 = !{ptr @.str.212, !458, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @.str.213, !458, !"<string literal>", i1 false, i1 false}
!497 = !{ptr @.str.214, !458, !"<string literal>", i1 false, i1 false}
!498 = !{ptr @.str.215, !458, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @.str.216, !458, !"<string literal>", i1 false, i1 false}
!500 = !{ptr @.str.217, !458, !"<string literal>", i1 false, i1 false}
!501 = !{ptr @.str.218, !458, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @.str.219, !458, !"<string literal>", i1 false, i1 false}
!503 = !{ptr @.str.220, !458, !"<string literal>", i1 false, i1 false}
!504 = !{ptr @.str.221, !458, !"<string literal>", i1 false, i1 false}
!505 = !{ptr @af_family_key_strings, !506, !"af_family_key_strings", i1 false, i1 false}
!506 = !{!"../net/core/sock.c", i32 230, i32 26}
!507 = !{ptr @af_family_keys, !508, !"af_family_keys", i1 false, i1 false}
!508 = !{!"../net/core/sock.c", i32 200, i32 30}
!509 = distinct !{null, !510, !"__warned", i1 false, i1 false}
!510 = !{!"../include/linux/cgroup.h", i32 494, i32 9}
!511 = !{ptr @.str.222, !510, !"<string literal>", i1 false, i1 false}
!512 = distinct !{null, !513, !"__warned", i1 false, i1 false}
!513 = !{!"../net/core/sock.c", i32 2017, i32 11}
!514 = !{ptr @.str.223, !515, !"<string literal>", i1 false, i1 false}
!515 = !{!"../net/core/sock.c", i32 2031, i32 3}
!516 = !{ptr @.str.224, !515, !"<string literal>", i1 false, i1 false}
!517 = !{ptr @.str.225, !515, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @__sk_destruct.__UNIQUE_ID_ddebug667, !515, !"__UNIQUE_ID_ddebug667", i1 false, i1 false}
!519 = !{ptr @.str.226, !515, !"<string literal>", i1 false, i1 false}
!520 = !{ptr @sk_init_common.__key, !521, !"__key", i1 false, i1 false}
!521 = !{!"../net/core/sock.c", i32 2095, i32 2}
!522 = !{ptr @skb_queue_head_init.__key, !523, !"__key", i1 false, i1 false}
!523 = !{!"../include/linux/skbuff.h", i32 1984, i32 2}
!524 = !{ptr @.str.227, !523, !"<string literal>", i1 false, i1 false}
!525 = !{ptr @.str.228, !526, !"<string literal>", i1 false, i1 false}
!526 = !{!"../net/core/sock.c", i32 250, i32 2}
!527 = !{ptr @.str.229, !526, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @.str.230, !526, !"<string literal>", i1 false, i1 false}
!529 = !{ptr @.str.231, !526, !"<string literal>", i1 false, i1 false}
!530 = !{ptr @.str.232, !526, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @.str.233, !526, !"<string literal>", i1 false, i1 false}
!532 = !{ptr @.str.234, !526, !"<string literal>", i1 false, i1 false}
!533 = !{ptr @.str.235, !526, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @.str.236, !526, !"<string literal>", i1 false, i1 false}
!535 = !{ptr @.str.237, !526, !"<string literal>", i1 false, i1 false}
!536 = !{ptr @.str.238, !526, !"<string literal>", i1 false, i1 false}
!537 = !{ptr @.str.239, !526, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @.str.240, !526, !"<string literal>", i1 false, i1 false}
!539 = !{ptr @.str.241, !526, !"<string literal>", i1 false, i1 false}
!540 = !{ptr @.str.242, !526, !"<string literal>", i1 false, i1 false}
!541 = !{ptr @.str.243, !526, !"<string literal>", i1 false, i1 false}
!542 = !{ptr @.str.244, !526, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @.str.245, !526, !"<string literal>", i1 false, i1 false}
!544 = !{ptr @.str.246, !526, !"<string literal>", i1 false, i1 false}
!545 = !{ptr @.str.247, !526, !"<string literal>", i1 false, i1 false}
!546 = !{ptr @.str.248, !526, !"<string literal>", i1 false, i1 false}
!547 = !{ptr @.str.249, !526, !"<string literal>", i1 false, i1 false}
!548 = !{ptr @.str.250, !526, !"<string literal>", i1 false, i1 false}
!549 = !{ptr @.str.251, !526, !"<string literal>", i1 false, i1 false}
!550 = !{ptr @.str.252, !526, !"<string literal>", i1 false, i1 false}
!551 = !{ptr @.str.253, !526, !"<string literal>", i1 false, i1 false}
!552 = !{ptr @.str.254, !526, !"<string literal>", i1 false, i1 false}
!553 = !{ptr @.str.255, !526, !"<string literal>", i1 false, i1 false}
!554 = !{ptr @.str.256, !526, !"<string literal>", i1 false, i1 false}
!555 = !{ptr @.str.257, !526, !"<string literal>", i1 false, i1 false}
!556 = !{ptr @.str.258, !526, !"<string literal>", i1 false, i1 false}
!557 = !{ptr @.str.259, !526, !"<string literal>", i1 false, i1 false}
!558 = !{ptr @.str.260, !526, !"<string literal>", i1 false, i1 false}
!559 = !{ptr @.str.261, !526, !"<string literal>", i1 false, i1 false}
!560 = !{ptr @.str.262, !526, !"<string literal>", i1 false, i1 false}
!561 = !{ptr @.str.263, !526, !"<string literal>", i1 false, i1 false}
!562 = !{ptr @.str.264, !526, !"<string literal>", i1 false, i1 false}
!563 = !{ptr @.str.265, !526, !"<string literal>", i1 false, i1 false}
!564 = !{ptr @.str.266, !526, !"<string literal>", i1 false, i1 false}
!565 = !{ptr @.str.267, !526, !"<string literal>", i1 false, i1 false}
!566 = !{ptr @.str.268, !526, !"<string literal>", i1 false, i1 false}
!567 = !{ptr @.str.269, !526, !"<string literal>", i1 false, i1 false}
!568 = !{ptr @.str.270, !526, !"<string literal>", i1 false, i1 false}
!569 = !{ptr @.str.271, !526, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @.str.272, !526, !"<string literal>", i1 false, i1 false}
!571 = !{ptr @.str.273, !526, !"<string literal>", i1 false, i1 false}
!572 = !{ptr @.str.274, !526, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @af_family_rlock_key_strings, !574, !"af_family_rlock_key_strings", i1 false, i1 false}
!574 = !{!"../net/core/sock.c", i32 249, i32 26}
!575 = !{ptr @af_rlock_keys, !576, !"af_rlock_keys", i1 false, i1 false}
!576 = !{!"../net/core/sock.c", i32 264, i32 30}
!577 = !{ptr @.str.275, !578, !"<string literal>", i1 false, i1 false}
!578 = !{!"../net/core/sock.c", i32 253, i32 2}
!579 = !{ptr @.str.276, !578, !"<string literal>", i1 false, i1 false}
!580 = !{ptr @.str.277, !578, !"<string literal>", i1 false, i1 false}
!581 = !{ptr @.str.278, !578, !"<string literal>", i1 false, i1 false}
!582 = !{ptr @.str.279, !578, !"<string literal>", i1 false, i1 false}
!583 = !{ptr @.str.280, !578, !"<string literal>", i1 false, i1 false}
!584 = !{ptr @.str.281, !578, !"<string literal>", i1 false, i1 false}
!585 = !{ptr @.str.282, !578, !"<string literal>", i1 false, i1 false}
!586 = !{ptr @.str.283, !578, !"<string literal>", i1 false, i1 false}
!587 = !{ptr @.str.284, !578, !"<string literal>", i1 false, i1 false}
!588 = !{ptr @.str.285, !578, !"<string literal>", i1 false, i1 false}
!589 = !{ptr @.str.286, !578, !"<string literal>", i1 false, i1 false}
!590 = !{ptr @.str.287, !578, !"<string literal>", i1 false, i1 false}
!591 = !{ptr @.str.288, !578, !"<string literal>", i1 false, i1 false}
!592 = !{ptr @.str.289, !578, !"<string literal>", i1 false, i1 false}
!593 = !{ptr @.str.290, !578, !"<string literal>", i1 false, i1 false}
!594 = !{ptr @.str.291, !578, !"<string literal>", i1 false, i1 false}
!595 = !{ptr @.str.292, !578, !"<string literal>", i1 false, i1 false}
!596 = !{ptr @.str.293, !578, !"<string literal>", i1 false, i1 false}
!597 = !{ptr @.str.294, !578, !"<string literal>", i1 false, i1 false}
!598 = !{ptr @.str.295, !578, !"<string literal>", i1 false, i1 false}
!599 = !{ptr @.str.296, !578, !"<string literal>", i1 false, i1 false}
!600 = !{ptr @.str.297, !578, !"<string literal>", i1 false, i1 false}
!601 = !{ptr @.str.298, !578, !"<string literal>", i1 false, i1 false}
!602 = !{ptr @.str.299, !578, !"<string literal>", i1 false, i1 false}
!603 = !{ptr @.str.300, !578, !"<string literal>", i1 false, i1 false}
!604 = !{ptr @.str.301, !578, !"<string literal>", i1 false, i1 false}
!605 = !{ptr @.str.302, !578, !"<string literal>", i1 false, i1 false}
!606 = !{ptr @.str.303, !578, !"<string literal>", i1 false, i1 false}
!607 = !{ptr @.str.304, !578, !"<string literal>", i1 false, i1 false}
!608 = !{ptr @.str.305, !578, !"<string literal>", i1 false, i1 false}
!609 = !{ptr @.str.306, !578, !"<string literal>", i1 false, i1 false}
!610 = !{ptr @.str.307, !578, !"<string literal>", i1 false, i1 false}
!611 = !{ptr @.str.308, !578, !"<string literal>", i1 false, i1 false}
!612 = !{ptr @.str.309, !578, !"<string literal>", i1 false, i1 false}
!613 = !{ptr @.str.310, !578, !"<string literal>", i1 false, i1 false}
!614 = !{ptr @.str.311, !578, !"<string literal>", i1 false, i1 false}
!615 = !{ptr @.str.312, !578, !"<string literal>", i1 false, i1 false}
!616 = !{ptr @.str.313, !578, !"<string literal>", i1 false, i1 false}
!617 = !{ptr @.str.314, !578, !"<string literal>", i1 false, i1 false}
!618 = !{ptr @.str.315, !578, !"<string literal>", i1 false, i1 false}
!619 = !{ptr @.str.316, !578, !"<string literal>", i1 false, i1 false}
!620 = !{ptr @.str.317, !578, !"<string literal>", i1 false, i1 false}
!621 = !{ptr @.str.318, !578, !"<string literal>", i1 false, i1 false}
!622 = !{ptr @.str.319, !578, !"<string literal>", i1 false, i1 false}
!623 = !{ptr @.str.320, !578, !"<string literal>", i1 false, i1 false}
!624 = !{ptr @.str.321, !578, !"<string literal>", i1 false, i1 false}
!625 = !{ptr @af_family_wlock_key_strings, !626, !"af_family_wlock_key_strings", i1 false, i1 false}
!626 = !{!"../net/core/sock.c", i32 252, i32 26}
!627 = !{ptr @af_wlock_keys, !628, !"af_wlock_keys", i1 false, i1 false}
!628 = !{!"../net/core/sock.c", i32 265, i32 30}
!629 = !{ptr @.str.322, !630, !"<string literal>", i1 false, i1 false}
!630 = !{!"../net/core/sock.c", i32 256, i32 2}
!631 = !{ptr @.str.323, !630, !"<string literal>", i1 false, i1 false}
!632 = !{ptr @.str.324, !630, !"<string literal>", i1 false, i1 false}
!633 = !{ptr @.str.325, !630, !"<string literal>", i1 false, i1 false}
!634 = !{ptr @.str.326, !630, !"<string literal>", i1 false, i1 false}
!635 = !{ptr @.str.327, !630, !"<string literal>", i1 false, i1 false}
!636 = !{ptr @.str.328, !630, !"<string literal>", i1 false, i1 false}
!637 = !{ptr @.str.329, !630, !"<string literal>", i1 false, i1 false}
!638 = !{ptr @.str.330, !630, !"<string literal>", i1 false, i1 false}
!639 = !{ptr @.str.331, !630, !"<string literal>", i1 false, i1 false}
!640 = !{ptr @.str.332, !630, !"<string literal>", i1 false, i1 false}
!641 = !{ptr @.str.333, !630, !"<string literal>", i1 false, i1 false}
!642 = !{ptr @.str.334, !630, !"<string literal>", i1 false, i1 false}
!643 = !{ptr @.str.335, !630, !"<string literal>", i1 false, i1 false}
!644 = !{ptr @.str.336, !630, !"<string literal>", i1 false, i1 false}
!645 = !{ptr @.str.337, !630, !"<string literal>", i1 false, i1 false}
!646 = !{ptr @.str.338, !630, !"<string literal>", i1 false, i1 false}
!647 = !{ptr @.str.339, !630, !"<string literal>", i1 false, i1 false}
!648 = !{ptr @.str.340, !630, !"<string literal>", i1 false, i1 false}
!649 = !{ptr @.str.341, !630, !"<string literal>", i1 false, i1 false}
!650 = !{ptr @.str.342, !630, !"<string literal>", i1 false, i1 false}
!651 = !{ptr @.str.343, !630, !"<string literal>", i1 false, i1 false}
!652 = !{ptr @.str.344, !630, !"<string literal>", i1 false, i1 false}
!653 = !{ptr @.str.345, !630, !"<string literal>", i1 false, i1 false}
!654 = !{ptr @.str.346, !630, !"<string literal>", i1 false, i1 false}
!655 = !{ptr @.str.347, !630, !"<string literal>", i1 false, i1 false}
!656 = !{ptr @.str.348, !630, !"<string literal>", i1 false, i1 false}
!657 = !{ptr @.str.349, !630, !"<string literal>", i1 false, i1 false}
!658 = !{ptr @.str.350, !630, !"<string literal>", i1 false, i1 false}
!659 = !{ptr @.str.351, !630, !"<string literal>", i1 false, i1 false}
!660 = !{ptr @.str.352, !630, !"<string literal>", i1 false, i1 false}
!661 = !{ptr @.str.353, !630, !"<string literal>", i1 false, i1 false}
!662 = !{ptr @.str.354, !630, !"<string literal>", i1 false, i1 false}
!663 = !{ptr @.str.355, !630, !"<string literal>", i1 false, i1 false}
!664 = !{ptr @.str.356, !630, !"<string literal>", i1 false, i1 false}
!665 = !{ptr @.str.357, !630, !"<string literal>", i1 false, i1 false}
!666 = !{ptr @.str.358, !630, !"<string literal>", i1 false, i1 false}
!667 = !{ptr @.str.359, !630, !"<string literal>", i1 false, i1 false}
!668 = !{ptr @.str.360, !630, !"<string literal>", i1 false, i1 false}
!669 = !{ptr @.str.361, !630, !"<string literal>", i1 false, i1 false}
!670 = !{ptr @.str.362, !630, !"<string literal>", i1 false, i1 false}
!671 = !{ptr @.str.363, !630, !"<string literal>", i1 false, i1 false}
!672 = !{ptr @.str.364, !630, !"<string literal>", i1 false, i1 false}
!673 = !{ptr @.str.365, !630, !"<string literal>", i1 false, i1 false}
!674 = !{ptr @.str.366, !630, !"<string literal>", i1 false, i1 false}
!675 = !{ptr @.str.367, !630, !"<string literal>", i1 false, i1 false}
!676 = !{ptr @.str.368, !630, !"<string literal>", i1 false, i1 false}
!677 = !{ptr @af_family_elock_key_strings, !678, !"af_family_elock_key_strings", i1 false, i1 false}
!678 = !{!"../net/core/sock.c", i32 255, i32 26}
!679 = !{ptr @af_elock_keys, !680, !"af_elock_keys", i1 false, i1 false}
!680 = !{!"../net/core/sock.c", i32 266, i32 30}
!681 = distinct !{null, !682, !"__warned", i1 false, i1 false}
!682 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!683 = !{ptr @.str.369, !682, !"<string literal>", i1 false, i1 false}
!684 = !{ptr @.str.370, !682, !"<string literal>", i1 false, i1 false}
!685 = distinct !{null, !686, !"__warned", i1 false, i1 false}
!686 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!687 = !{ptr @.str.371, !686, !"<string literal>", i1 false, i1 false}
!688 = distinct !{null, !689, !"__already_done", i1 false, i1 false}
!689 = !{!"../net/core/sock.c", i32 2503, i32 6}
!690 = !{ptr @.str.372, !691, !"<string literal>", i1 false, i1 false}
!691 = !{!"../include/linux/mm.h", i32 717, i32 2}
!692 = distinct !{null, !693, !"<string literal>", i1 false, i1 false}
!693 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!694 = distinct !{null, !695, !"__already_done", i1 false, i1 false}
!695 = !{!"../include/trace/events/sock.h", i32 93, i32 1}
!696 = distinct !{null, !695, !"__warned", i1 false, i1 false}
!697 = !{ptr @.str.374, !698, !"<string literal>", i1 false, i1 false}
!698 = !{!"./../include/linux/highmem-internal.h", i32 44, i32 2}
!699 = distinct !{null, !700, !"__warned", i1 false, i1 false}
!700 = !{!"../include/net/sock.h", i32 2444, i32 19}
!701 = !{ptr @.str.375, !702, !"<string literal>", i1 false, i1 false}
!702 = !{!"../net/core/sock.c", i32 247, i32 2}
!703 = !{ptr @.str.376, !702, !"<string literal>", i1 false, i1 false}
!704 = !{ptr @.str.377, !702, !"<string literal>", i1 false, i1 false}
!705 = !{ptr @.str.378, !702, !"<string literal>", i1 false, i1 false}
!706 = !{ptr @.str.379, !702, !"<string literal>", i1 false, i1 false}
!707 = !{ptr @.str.380, !702, !"<string literal>", i1 false, i1 false}
!708 = !{ptr @.str.381, !702, !"<string literal>", i1 false, i1 false}
!709 = !{ptr @.str.382, !702, !"<string literal>", i1 false, i1 false}
!710 = !{ptr @.str.383, !702, !"<string literal>", i1 false, i1 false}
!711 = !{ptr @.str.384, !702, !"<string literal>", i1 false, i1 false}
!712 = !{ptr @.str.385, !702, !"<string literal>", i1 false, i1 false}
!713 = !{ptr @.str.386, !702, !"<string literal>", i1 false, i1 false}
!714 = !{ptr @.str.387, !702, !"<string literal>", i1 false, i1 false}
!715 = !{ptr @.str.388, !702, !"<string literal>", i1 false, i1 false}
!716 = !{ptr @.str.389, !702, !"<string literal>", i1 false, i1 false}
!717 = !{ptr @.str.390, !702, !"<string literal>", i1 false, i1 false}
!718 = !{ptr @.str.391, !702, !"<string literal>", i1 false, i1 false}
!719 = !{ptr @.str.392, !702, !"<string literal>", i1 false, i1 false}
!720 = !{ptr @.str.393, !702, !"<string literal>", i1 false, i1 false}
!721 = !{ptr @.str.394, !702, !"<string literal>", i1 false, i1 false}
!722 = !{ptr @.str.395, !702, !"<string literal>", i1 false, i1 false}
!723 = !{ptr @.str.396, !702, !"<string literal>", i1 false, i1 false}
!724 = !{ptr @.str.397, !702, !"<string literal>", i1 false, i1 false}
!725 = !{ptr @.str.398, !702, !"<string literal>", i1 false, i1 false}
!726 = !{ptr @.str.399, !702, !"<string literal>", i1 false, i1 false}
!727 = !{ptr @.str.400, !702, !"<string literal>", i1 false, i1 false}
!728 = !{ptr @.str.401, !702, !"<string literal>", i1 false, i1 false}
!729 = !{ptr @.str.402, !702, !"<string literal>", i1 false, i1 false}
!730 = !{ptr @.str.403, !702, !"<string literal>", i1 false, i1 false}
!731 = !{ptr @.str.404, !702, !"<string literal>", i1 false, i1 false}
!732 = !{ptr @.str.405, !702, !"<string literal>", i1 false, i1 false}
!733 = !{ptr @.str.406, !702, !"<string literal>", i1 false, i1 false}
!734 = !{ptr @.str.407, !702, !"<string literal>", i1 false, i1 false}
!735 = !{ptr @.str.408, !702, !"<string literal>", i1 false, i1 false}
!736 = !{ptr @.str.409, !702, !"<string literal>", i1 false, i1 false}
!737 = !{ptr @.str.410, !702, !"<string literal>", i1 false, i1 false}
!738 = !{ptr @.str.411, !702, !"<string literal>", i1 false, i1 false}
!739 = !{ptr @.str.412, !702, !"<string literal>", i1 false, i1 false}
!740 = !{ptr @.str.413, !702, !"<string literal>", i1 false, i1 false}
!741 = !{ptr @.str.414, !702, !"<string literal>", i1 false, i1 false}
!742 = !{ptr @.str.415, !702, !"<string literal>", i1 false, i1 false}
!743 = !{ptr @.str.416, !702, !"<string literal>", i1 false, i1 false}
!744 = !{ptr @.str.417, !702, !"<string literal>", i1 false, i1 false}
!745 = !{ptr @.str.418, !702, !"<string literal>", i1 false, i1 false}
!746 = !{ptr @.str.419, !702, !"<string literal>", i1 false, i1 false}
!747 = !{ptr @.str.420, !702, !"<string literal>", i1 false, i1 false}
!748 = !{ptr @.str.421, !702, !"<string literal>", i1 false, i1 false}
!749 = !{ptr @af_family_kern_clock_key_strings, !750, !"af_family_kern_clock_key_strings", i1 false, i1 false}
!750 = !{!"../net/core/sock.c", i32 246, i32 26}
!751 = !{ptr @.str.422, !752, !"<string literal>", i1 false, i1 false}
!752 = !{!"../net/core/sock.c", i32 237, i32 2}
!753 = !{ptr @.str.423, !752, !"<string literal>", i1 false, i1 false}
!754 = !{ptr @.str.424, !752, !"<string literal>", i1 false, i1 false}
!755 = !{ptr @.str.425, !752, !"<string literal>", i1 false, i1 false}
!756 = !{ptr @.str.426, !752, !"<string literal>", i1 false, i1 false}
!757 = !{ptr @.str.427, !752, !"<string literal>", i1 false, i1 false}
!758 = !{ptr @.str.428, !752, !"<string literal>", i1 false, i1 false}
!759 = !{ptr @.str.429, !752, !"<string literal>", i1 false, i1 false}
!760 = !{ptr @.str.430, !752, !"<string literal>", i1 false, i1 false}
!761 = !{ptr @.str.431, !752, !"<string literal>", i1 false, i1 false}
!762 = !{ptr @.str.432, !752, !"<string literal>", i1 false, i1 false}
!763 = !{ptr @.str.433, !752, !"<string literal>", i1 false, i1 false}
!764 = !{ptr @.str.434, !752, !"<string literal>", i1 false, i1 false}
!765 = !{ptr @.str.435, !752, !"<string literal>", i1 false, i1 false}
!766 = !{ptr @.str.436, !752, !"<string literal>", i1 false, i1 false}
!767 = !{ptr @.str.437, !752, !"<string literal>", i1 false, i1 false}
!768 = !{ptr @.str.438, !752, !"<string literal>", i1 false, i1 false}
!769 = !{ptr @.str.439, !752, !"<string literal>", i1 false, i1 false}
!770 = !{ptr @.str.440, !752, !"<string literal>", i1 false, i1 false}
!771 = !{ptr @.str.441, !752, !"<string literal>", i1 false, i1 false}
!772 = !{ptr @.str.442, !752, !"<string literal>", i1 false, i1 false}
!773 = !{ptr @.str.443, !752, !"<string literal>", i1 false, i1 false}
!774 = !{ptr @.str.444, !752, !"<string literal>", i1 false, i1 false}
!775 = !{ptr @.str.445, !752, !"<string literal>", i1 false, i1 false}
!776 = !{ptr @.str.446, !752, !"<string literal>", i1 false, i1 false}
!777 = !{ptr @.str.447, !752, !"<string literal>", i1 false, i1 false}
!778 = !{ptr @.str.448, !752, !"<string literal>", i1 false, i1 false}
!779 = !{ptr @.str.449, !752, !"<string literal>", i1 false, i1 false}
!780 = !{ptr @.str.450, !752, !"<string literal>", i1 false, i1 false}
!781 = !{ptr @.str.451, !752, !"<string literal>", i1 false, i1 false}
!782 = !{ptr @.str.452, !752, !"<string literal>", i1 false, i1 false}
!783 = !{ptr @.str.453, !752, !"<string literal>", i1 false, i1 false}
!784 = !{ptr @.str.454, !752, !"<string literal>", i1 false, i1 false}
!785 = !{ptr @.str.455, !752, !"<string literal>", i1 false, i1 false}
!786 = !{ptr @.str.456, !752, !"<string literal>", i1 false, i1 false}
!787 = !{ptr @.str.457, !752, !"<string literal>", i1 false, i1 false}
!788 = !{ptr @.str.458, !752, !"<string literal>", i1 false, i1 false}
!789 = !{ptr @.str.459, !752, !"<string literal>", i1 false, i1 false}
!790 = !{ptr @.str.460, !752, !"<string literal>", i1 false, i1 false}
!791 = !{ptr @.str.461, !752, !"<string literal>", i1 false, i1 false}
!792 = !{ptr @.str.462, !752, !"<string literal>", i1 false, i1 false}
!793 = !{ptr @.str.463, !752, !"<string literal>", i1 false, i1 false}
!794 = !{ptr @.str.464, !752, !"<string literal>", i1 false, i1 false}
!795 = !{ptr @.str.465, !752, !"<string literal>", i1 false, i1 false}
!796 = !{ptr @.str.466, !752, !"<string literal>", i1 false, i1 false}
!797 = !{ptr @.str.467, !752, !"<string literal>", i1 false, i1 false}
!798 = !{ptr @.str.468, !752, !"<string literal>", i1 false, i1 false}
!799 = !{ptr @af_family_clock_key_strings, !800, !"af_family_clock_key_strings", i1 false, i1 false}
!800 = !{!"../net/core/sock.c", i32 236, i32 26}
!801 = distinct !{null, !802, !"__warned", i1 false, i1 false}
!802 = !{!"../net/core/sock.c", i32 3122, i32 7}
!803 = distinct !{null, !804, !"__warned", i1 false, i1 false}
!804 = !{!"../net/core/sock.c", i32 3163, i32 8}
!805 = distinct !{null, !806, !"__warned", i1 false, i1 false}
!806 = !{!"../net/core/sock.c", i32 3133, i32 7}
!807 = distinct !{null, !808, !"__warned", i1 false, i1 false}
!808 = !{!"../include/net/xfrm.h", i32 1207, i32 8}
!809 = distinct !{null, !810, !"__warned", i1 false, i1 false}
!810 = !{!"../include/net/xfrm.h", i32 1212, i32 8}
!811 = !{ptr @.str.470, !812, !"<string literal>", i1 false, i1 false}
!812 = !{!"../net/core/sock.c", i32 3593, i32 9}
!813 = !{ptr @net_inuse_ops, !814, !"net_inuse_ops", i1 false, i1 false}
!814 = !{!"../net/core/sock.c", i32 3585, i32 33}
!815 = !{ptr @.str.471, !816, !"<string literal>", i1 false, i1 false}
!816 = !{!"../net/core/sock.c", i32 3683, i32 46}
!817 = !{ptr @.str.472, !818, !"<string literal>", i1 false, i1 false}
!818 = !{!"../net/core/sock.c", i32 3694, i32 3}
!819 = !{ptr @.str.473, !818, !"<string literal>", i1 false, i1 false}
!820 = !{ptr @req_prot_init._entry, !818, !"_entry", i1 false, i1 false}
!821 = !{ptr @req_prot_init._entry_ptr, !818, !"_entry_ptr", i1 false, i1 false}
!822 = !{ptr @.str.474, !823, !"<string literal>", i1 false, i1 false}
!823 = !{!"../net/core/sock.c", i32 3647, i32 52}
!824 = !{ptr @.str.475, !825, !"<string literal>", i1 false, i1 false}
!825 = !{!"../net/core/sock.c", i32 3658, i32 3}
!826 = !{ptr @.str.476, !825, !"<string literal>", i1 false, i1 false}
!827 = !{ptr @tw_prot_init._entry, !825, !"_entry", i1 false, i1 false}
!828 = !{ptr @tw_prot_init._entry_ptr, !825, !"_entry_ptr", i1 false, i1 false}
!829 = !{ptr @.str.477, !830, !"<string literal>", i1 false, i1 false}
!830 = !{!"../net/core/sock.c", i32 144, i32 8}
!831 = !{ptr @.str.478, !830, !"<string literal>", i1 false, i1 false}
!832 = !{ptr @proto_list_mutex, !830, !"proto_list_mutex", i1 false, i1 false}
!833 = !{ptr @.str.479, !834, !"<string literal>", i1 false, i1 false}
!834 = !{!"../net/core/sock.c", i32 3605, i32 3}
!835 = !{ptr @.str.480, !834, !"<string literal>", i1 false, i1 false}
!836 = !{ptr @assign_proto_idx._entry, !834, !"_entry", i1 false, i1 false}
!837 = !{ptr @assign_proto_idx._entry_ptr, !834, !"_entry_ptr", i1 false, i1 false}
!838 = !{ptr @proto_inuse_idx, !839, !"proto_inuse_idx", i1 false, i1 false}
!839 = !{!"../net/core/sock.c", i32 3546, i32 8}
!840 = !{ptr @proto_list, !841, !"proto_list", i1 false, i1 false}
!841 = !{!"../net/core/sock.c", i32 145, i32 8}
!842 = !{ptr @proto_net_ops, !843, !"proto_net_ops", i1 false, i1 false}
!843 = !{!"../net/core/sock.c", i32 3897, i32 48}
!844 = !{ptr @.str.481, !845, !"<string literal>", i1 false, i1 false}
!845 = !{!"../net/core/sock.c", i32 3884, i32 7}
!846 = !{ptr @proto_seq_ops, !847, !"proto_seq_ops", i1 false, i1 false}
!847 = !{!"../net/core/sock.c", i32 3875, i32 36}
!848 = !{ptr @.str.482, !849, !"<string literal>", i1 false, i1 false}
!849 = !{!"../net/core/sock.c", i32 3860, i32 19}
!850 = !{ptr @.str.483, !851, !"<string literal>", i1 false, i1 false}
!851 = !{!"../net/core/sock.c", i32 3861, i32 7}
!852 = !{ptr @.str.484, !853, !"<string literal>", i1 false, i1 false}
!853 = !{!"../net/core/sock.c", i32 3862, i32 7}
!854 = !{ptr @.str.485, !855, !"<string literal>", i1 false, i1 false}
!855 = !{!"../net/core/sock.c", i32 3863, i32 7}
!856 = !{ptr @.str.486, !857, !"<string literal>", i1 false, i1 false}
!857 = !{!"../net/core/sock.c", i32 3864, i32 7}
!858 = !{ptr @.str.487, !859, !"<string literal>", i1 false, i1 false}
!859 = !{!"../net/core/sock.c", i32 3865, i32 7}
!860 = !{ptr @.str.488, !861, !"<string literal>", i1 false, i1 false}
!861 = !{!"../net/core/sock.c", i32 3866, i32 7}
!862 = !{ptr @.str.489, !863, !"<string literal>", i1 false, i1 false}
!863 = !{!"../net/core/sock.c", i32 3867, i32 7}
!864 = !{ptr @.str.490, !865, !"<string literal>", i1 false, i1 false}
!865 = !{!"../net/core/sock.c", i32 3868, i32 7}
!866 = !{ptr @.str.491, !867, !"<string literal>", i1 false, i1 false}
!867 = !{!"../net/core/sock.c", i32 3869, i32 7}
!868 = !{ptr @.str.492, !869, !"<string literal>", i1 false, i1 false}
!869 = !{!"../net/core/sock.c", i32 3826, i32 18}
!870 = !{ptr @.str.493, !871, !"<string literal>", i1 false, i1 false}
!871 = !{!"../net/core/sock.c", i32 3834, i32 28}
!872 = !{ptr @.str.494, !873, !"<string literal>", i1 false, i1 false}
!873 = !{!"../net/core/sock.c", i32 3834, i32 35}
!874 = !{ptr @.str.495, !875, !"<string literal>", i1 false, i1 false}
!875 = !{!"../net/core/sock.c", i32 3835, i32 6}
!876 = !{ptr @.str.496, !877, !"<string literal>", i1 false, i1 false}
!877 = !{!"../net/core/sock.c", i32 3820, i32 48}
!878 = !{!"sp"}
!879 = !{i32 1, !"wchar_size", i32 2}
!880 = !{i32 1, !"min_enum_size", i32 4}
!881 = !{i32 8, !"branch-target-enforcement", i32 0}
!882 = !{i32 8, !"sign-return-address", i32 0}
!883 = !{i32 8, !"sign-return-address-all", i32 0}
!884 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!885 = !{i32 7, !"uwtable", i32 1}
!886 = !{i32 7, !"frame-pointer", i32 2}
!887 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!888 = !{!"branch_weights", i32 2000, i32 1}
!889 = !{!"branch_weights", i32 1, i32 2000}
!890 = !{i64 2159346105, i64 2159346585, i64 2159346142, i64 2159346198, i64 2159346232, i64 2159346256, i64 2159346297, i64 2159346318, i64 2159346346, i64 2159346380}
!891 = !{i64 2149000899, i64 2149000904, i64 2149000917, i64 2149000961, i64 2149000995, i64 2149001016}
!892 = !{i64 2158784555}
!893 = !{i64 2158784762}
!894 = !{i64 2149822742}
!895 = !{i64 2149823778}
!896 = !{!"auto-init"}
!897 = !{i64 2152439594, i64 2152439619}
!898 = !{i64 4947657}
!899 = !{i64 4947854}
!900 = !{i64 2152433087}
!901 = !{i64 2148550475, i64 2148550501, i64 2148550530, i64 2148550564, i64 2148550595, i64 2148550618}
!902 = !{i64 2154697622, i64 2154698110, i64 2154697659, i64 2154697715, i64 2154697749, i64 2154697773, i64 2154697814, i64 2154697835, i64 2154697863, i64 2154697897}
!903 = !{i64 2158728066}
!904 = !{i64 2158728279}
!905 = !{i64 2148549894}
!906 = !{i64 1034717, i64 1034742, i64 1034764, i64 1034780, i64 1034792, i64 1034812, i64 1034836, i64 1034852, i64 1034864}
!907 = !{i64 2148550082}
!908 = !{i64 2148640006}
!909 = !{i64 2148554470, i64 2148554502, i64 2148554531, i64 2148554565, i64 2148554596, i64 2148554619}
!910 = !{i64 2150678659}
!911 = !{i64 2149814183}
!912 = !{i64 2149814449}
!913 = !{i64 2156867043}
!914 = !{i64 1057243, i64 1057260, i64 1057284, i64 1057310, i64 1057328}
!915 = !{i64 2156867388}
!916 = !{i64 2155808031}
!917 = !{i64 2155826399}
!918 = !{i64 942956, i64 943017}
!919 = !{i64 945688}
!920 = !{i64 945973}
!921 = !{i64 2159450695}
!922 = !{i64 1059967, i64 1059988, i64 1060011, i64 1060030, i64 1060049}
!923 = !{i64 2159451124}
!924 = !{i64 2156854564}
!925 = !{i64 2148635886}
!926 = !{i64 2148551195, i64 2148551227, i64 2148551256, i64 2148551290, i64 2148551321, i64 2148551344}
!927 = !{i64 2148636115}
!928 = !{i64 2148552940, i64 2148552966, i64 2148552995, i64 2148553029, i64 2148553060, i64 2148553083}
!929 = !{i64 2159476184, i64 2159476464, i64 2159476798, i64 2159477132}
!930 = !{i64 2159480699}
!931 = !{i64 2159481042}
!932 = !{i64 2152440275, i64 2152440300}
!933 = !{i64 2159487019, i64 2159487299, i64 2159487633, i64 2159487967}
!934 = !{i64 2159509480, i64 2159509760, i64 2159510094, i64 2159510428}
!935 = !{i64 2156887824}
!936 = !{i64 2156888167}
!937 = !{i64 2148638927}
!938 = !{i64 2148553660, i64 2148553692, i64 2148553721, i64 2148553755, i64 2148553786, i64 2148553809}
!939 = !{i64 2148639156}
!940 = !{i64 2159464705, i64 2159464985, i64 2159465319, i64 2159465653}
!941 = !{i64 2159381763, i64 2159382043, i64 2159382377, i64 2159382711}
!942 = !{i64 2158060697}
!943 = !{i64 2158060794}
!944 = !{i64 2148552005, i64 2148552037, i64 2148552066, i64 2148552100, i64 2148552131, i64 2148552154}
!945 = !{i64 2153402500, i64 2153402983, i64 2153402537, i64 2153402593, i64 2153402627, i64 2153402651, i64 2153402692, i64 2153402713, i64 2153402741, i64 2153402775}
!946 = !{i64 2159562460}
!947 = !{i64 1034211, i64 1034235, i64 1034256, i64 1034273, i64 1034290}
!948 = !{i64 1047966}
!949 = !{i64 2158745290}
!950 = !{i64 2158745545}
!951 = !{i64 2149715845}
!952 = !{i64 2159720003}
!953 = !{i64 2150445311}
!954 = !{i64 2150445153}
!955 = !{i64 2150445481}
!956 = !{i64 2150430552}
!957 = !{i64 2150430877}
!958 = !{i64 2150431202}
