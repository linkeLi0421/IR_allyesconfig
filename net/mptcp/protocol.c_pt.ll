; ModuleID = '/llk/IR_all_yes/net/mptcp/protocol.c_pt.bc'
source_filename = "../net/mptcp/protocol.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.218 }
%union.anon.218 = type { %struct.anon.219 }
%struct.anon.219 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.220, %struct.trace_event, ptr, ptr, %union.anon.221, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.220 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.221 = type { ptr }
%union.anon.222 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.223 = type { %struct.bpf_raw_event_map }
%union.anon.224 = type { %struct.bpf_raw_event_map }
%union.anon.225 = type { %struct.bpf_raw_event_map }
%struct.proto = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i8, ptr, i32, i32, i32, i32, ptr, ptr, ptr, %union.anon.162, ptr, [32 x i8], %struct.list_head, ptr }
%union.anon.162 = type { ptr }
%struct.lock_class_key = type { %union.anon.13 }
%union.anon.13 = type { %struct.hlist_node }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.12 }
%union.anon.12 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.173, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.191, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.173 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.rb_root = type { ptr }
%struct.spinlock = type { %union.anon.11 }
%union.anon.11 = type { %struct.raw_spinlock }
%struct.hlist_head = type { ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.possible_net_t = type { ptr }
%union.anon.191 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.mptcp_delegated_action = type { %struct.napi_struct, %struct.list_head }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.inet_protosw = type { %struct.list_head, i16, i16, ptr, ptr, i8 }
%struct.trace_print_flags = type { i32, ptr }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon }
%union.anon = type { i32 }
%struct.static_key_true = type { %struct.static_key }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.proto_ops = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.mptcp_subflow_context = type { %struct.list_head, %union.anon.0, %struct.list_head, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { i32, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i24, i32, i32, i64, i32, i32, [20 x i8], i8, i8, i8, i8, i32 }
%struct.callback_head = type { ptr, ptr }
%struct.tcp_sock = type { %struct.inet_connection_sock, i16, i16, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, %struct.tcp_rack, i16, i8, i8, i32, [3 x i32], i16, i8, i8, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, %struct.minmax, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, %struct.tcp_options_received, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrtimer, %struct.hrtimer, ptr, ptr, %struct.rb_root, ptr, [1 x %struct.tcp_sack_block], [4 x %struct.tcp_sack_block], [4 x %struct.tcp_sack_block], ptr, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8, i16, i32, i32, %struct.anon.233, %struct.anon.234, %struct.anon.235, i32, i8, i8, ptr, ptr, ptr, ptr, ptr }
%struct.inet_connection_sock = type { %struct.inet_sock, %struct.request_sock_queue, ptr, i32, %struct.timer_list, %struct.timer_list, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.hlist_node, ptr, i8, i8, i8, i8, i8, i8, i16, %struct.anon.229, %struct.anon.230, i32, i32, [13 x i64] }
%struct.inet_sock = type { %struct.sock, ptr, i32, i16, i16, ptr, i16, i16, i8, i8, i8, i8, i16, i8, i8, i32, i32, i32, ptr, %struct.inet_cork_full }
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.167, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.168, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.169, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, ptr }
%struct.sock_common = type { %union.anon.2, %union.anon.4, %union.anon.5, i16, i8, i8, i32, %union.anon.7, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.163, [0 x i32], %union.anon.164, i16, i16, %union.anon.165, %struct.refcount_struct, [0 x i32], %union.anon.166 }
%union.anon.2 = type { i64 }
%union.anon.4 = type { i32 }
%union.anon.5 = type { i32 }
%union.anon.7 = type { %struct.hlist_node }
%struct.in6_addr = type { %union.anon.48 }
%union.anon.48 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.163 = type { i32 }
%union.anon.164 = type { %struct.hlist_node }
%union.anon.165 = type { i32 }
%union.anon.166 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head, %struct.lockdep_map }
%struct.anon.167 = type { %struct.atomic_t, i32, ptr, ptr }
%struct.llist_head = type { ptr }
%union.anon.168 = type { ptr }
%union.anon.169 = type { ptr }
%struct.sk_buff_head = type { %union.anon.74, i32, %struct.spinlock }
%union.anon.74 = type { %struct.anon.75 }
%struct.anon.75 = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.kuid_t = type { i32 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.sock_cgroup_data = type { ptr, i32, i16 }
%struct.inet_cork_full = type { %struct.inet_cork, %struct.flowi }
%struct.inet_cork = type { i32, i32, ptr, i32, i32, ptr, i8, i8, i16, i8, i16, i64, i32 }
%struct.flowi = type { %union.anon.43 }
%union.anon.43 = type { %struct.flowi6 }
%struct.flowi6 = type { %struct.flowi_common, %struct.in6_addr, %struct.in6_addr, i32, %union.flowi_uli, i32 }
%struct.flowi_common = type { i32, i32, i32, i8, i8, i8, i8, i32, %struct.kuid_t, %struct.flowi_tunnel, i32 }
%struct.flowi_tunnel = type { i64 }
%union.flowi_uli = type { i32 }
%struct.request_sock_queue = type { %struct.spinlock, i8, i32, %struct.atomic_t, %struct.atomic_t, ptr, ptr, %struct.fastopen_queue }
%struct.fastopen_queue = type { ptr, ptr, %struct.spinlock, i32, i32, ptr }
%struct.anon.229 = type { i8, i8, i8, i8, i32, i32, i32, i16, i16 }
%struct.anon.230 = type { i32, i32, i32, i32 }
%struct.tcp_rack = type { i64, i32, i32, i32, i8, i8 }
%struct.minmax = type { [3 x %struct.minmax_sample] }
%struct.minmax_sample = type { i32, i32 }
%struct.tcp_options_received = type { i32, i32, i32, i32, [3 x i8], i8, i16, i16 }
%struct.tcp_sack_block = type { i32, i32 }
%struct.anon.233 = type { i32, i32, i64 }
%struct.anon.234 = type { i32, i32, i64 }
%struct.anon.235 = type { i32, i32 }
%struct.trace_event_raw_mptcp_subflow_get_send = type { %struct.trace_entry, i8, i8, i32, i32, i8, i64, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.mptcp_ext = type { %union.anon.197, i64, i32, i16, i16, i16 }
%union.anon.197 = type { i64 }
%struct.trace_event_raw_mptcp_dump_mpext = type { %struct.trace_entry, i64, i64, i32, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [0 x i8] }
%struct.trace_event_raw_ack_update_msk = type { %struct.trace_entry, i64, i64, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_subflow_check_data_avail = type { %struct.trace_entry, i8, ptr, [0 x i8] }
%struct.mptcp_sock = type { %struct.inet_connection_sock, i64, i64, i64, i64, i64, i64, i64, i32, ptr, i32, i32, i64, i64, i64, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.work_struct, ptr, %struct.rb_root, %struct.sk_buff_head, %struct.list_head, %struct.list_head, ptr, %struct.list_head, ptr, ptr, %struct.mptcp_pm_data, %struct.anon.232, i32, [16 x i8] }
%struct.mptcp_pm_data = type { %struct.mptcp_addr_info, %struct.mptcp_addr_info, %struct.list_head, %struct.spinlock, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i32], %struct.mptcp_rm_list, %struct.mptcp_rm_list }
%struct.mptcp_addr_info = type { i8, i16, i16, %union.anon.231 }
%union.anon.231 = type { %struct.in6_addr }
%struct.mptcp_rm_list = type { [8 x i8], i8 }
%struct.anon.232 = type { i32, i32, i64, i64 }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.38, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.38 = type { %struct.anon.39 }
%struct.anon.39 = type { ptr, i32, i32, i32 }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.79, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.anon.79 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.mptcp_sendmsg_info = type { i32, i32, i16, i16, i32, i8 }
%struct.mptcp_data_frag = type { %struct.list_head, i64, i16, i16, i16, i16, ptr }
%struct.subflow_send_info = type { ptr, i64 }
%struct.sk_buff = type { %union.anon.49, %union.anon.52, %union.anon.53, [48 x i8], %union.anon.54, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.56, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { ptr, ptr, %union.anon.51 }
%union.anon.51 = type { ptr }
%union.anon.52 = type { ptr }
%union.anon.53 = type { i64 }
%union.anon.54 = type { %struct.anon.55 }
%struct.anon.55 = type { i32, ptr }
%union.anon.56 = type { %struct.anon.57 }
%struct.anon.57 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.58, i32, i32, i32, i16, i16, %union.anon.60, i32, %union.anon.61, %union.anon.62, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.58 = type { i32 }
%union.anon.60 = type { i32 }
%union.anon.61 = type { i32 }
%union.anon.62 = type { i16 }
%struct.skb_ext = type { %struct.refcount_struct, [4 x i8], i8, [7 x i8], [0 x i8] }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.page = type { i32, %union.anon.9, %union.anon.158, %struct.atomic_t, i32 }
%union.anon.9 = type { %struct.anon.10 }
%struct.anon.10 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.158 = type { %struct.atomic_t }
%struct.socket = type { i32, i16, i32, ptr, ptr, ptr, [104 x i8], %struct.socket_wq }
%struct.socket_wq = type { %struct.wait_queue_head, ptr, i32, %struct.callback_head, [60 x i8] }
%struct.mptcp_subflow_request_sock = type { %struct.tcp_request_sock, i8, i8, i8, i64, i64, i32, i32, i64, i32, i32, ptr, %struct.hlist_nulls_node }
%struct.tcp_request_sock = type { %struct.inet_request_sock, ptr, i64, i8, i8, i8, i32, i32, i32, i32, i32, i32, i8 }
%struct.inet_request_sock = type { %struct.request_sock, i16, i32, %union.anon.240 }
%struct.request_sock = type { %struct.sock_common, ptr, i16, i8, i8, i32, %struct.timer_list, ptr, ptr, ptr, i32, i32 }
%union.anon.240 = type { %struct.anon.241 }
%struct.anon.241 = type { ptr, ptr }
%struct.hlist_nulls_node = type { ptr, ptr }
%struct.mptcp_options_received = type { i64, i64, i64, i64, i32, i16, i16, i16, i32, i32, i16, i8, i64, [20 x i8], %struct.mptcp_addr_info, %struct.mptcp_rm_list, i64, i64 }
%struct.mem_cgroup = type { %struct.cgroup_subsys_state, %struct.mem_cgroup_id, %struct.page_counter, %union.anon.171, %struct.page_counter, %struct.page_counter, %struct.work_struct, i32, %struct.vmpressure, i8, i8, i32, i32, i32, %struct.cgroup_file, %struct.cgroup_file, %struct.cgroup_file, %struct.mutex, %struct.mem_cgroup_thresholds, %struct.mem_cgroup_thresholds, %struct.list_head, i32, %struct.spinlock, i32, [20 x i8], %struct.memcg_padding, %struct.memcg_vmstats, [9 x %struct.atomic_t], [9 x %struct.atomic_t], i32, i8, i32, i32, ptr, %struct.list_head, [92 x i8], %struct.memcg_padding, %struct.atomic_t, ptr, ptr, %struct.list_head, %struct.wb_domain, [4 x %struct.memcg_cgwb_frn], %struct.list_head, %struct.spinlock, [0 x ptr], [84 x i8] }
%struct.cgroup_subsys_state = type { ptr, ptr, %struct.percpu_ref, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i64, %struct.atomic_t, %struct.work_struct, %struct.rcu_work, ptr }
%struct.percpu_ref = type { i32, ptr }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.mem_cgroup_id = type { i32, %struct.refcount_struct }
%union.anon.171 = type { %struct.page_counter }
%struct.page_counter = type { %struct.atomic_t, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t, i32, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr }
%struct.vmpressure = type { i32, i32, i32, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.work_struct }
%struct.cgroup_file = type { ptr, i32, %struct.timer_list }
%struct.mem_cgroup_thresholds = type { ptr, ptr }
%struct.memcg_vmstats = type { [44 x i32], [76 x i32], [44 x i32], [76 x i32] }
%struct.memcg_padding = type { [0 x i8] }
%struct.wb_domain = type { %struct.spinlock, %struct.fprop_global, %struct.timer_list, i32, i32, i32 }
%struct.fprop_global = type { %struct.percpu_counter, i32, %struct.seqcount }
%struct.memcg_cgwb_frn = type { i64, i32, i64, %struct.wb_completion }
%struct.wb_completion = type { %struct.atomic_t, ptr }
%struct.socket_alloc = type { %struct.socket, %struct.inode, [112 x i8] }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.192, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.193, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.194, ptr, %struct.address_space, %struct.list_head, %union.anon.195, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.192 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.193 = type { %struct.callback_head }
%union.anon.194 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.195 = type { ptr }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.tcp_congestion_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.list_head, i32, i32, ptr, ptr, [40 x i8] }
%struct.msghdr = type { ptr, i32, %struct.iov_iter, %union.anon.161, i8, i32, i32, ptr }
%struct.iov_iter = type { i8, i8, i8, i32, i32, %union.anon.8, %union.anon.159 }
%union.anon.8 = type { ptr }
%union.anon.159 = type { i64 }
%union.anon.161 = type { ptr }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.134, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.21 }
%union.anon.21 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.23 }
%union.anon.23 = type { %struct.anon.24 }
%struct.anon.24 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.134 = type { %struct.callback_head }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.scm_timestamping_internal = type { [3 x %struct.timespec64] }
%struct.ipv6_pinfo = type { %struct.in6_addr, %struct.in6_pktinfo, ptr, ptr, i32, i32, i32, i32, i32, %union.anon.226, i16, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.inet6_cork }
%struct.in6_pktinfo = type { %struct.in6_addr, i32 }
%union.anon.226 = type { %struct.anon.227 }
%struct.anon.227 = type { i16 }
%struct.inet6_cork = type { ptr, i8, i8 }
%struct.anon.6 = type { i16, i16 }
%struct.anon.3 = type { i32, i32 }

@__tpstrtab_mptcp_subflow_get_send = internal constant [23 x i8] c"mptcp_subflow_get_send\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_mptcp_subflow_get_send = dso_local global %struct.static_call_key { ptr @__traceiter_mptcp_subflow_get_send }, align 4
@__tracepoint_mptcp_subflow_get_send = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_mptcp_subflow_get_send, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_mptcp_subflow_get_send, ptr null, ptr @__traceiter_mptcp_subflow_get_send, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_mptcp_subflow_get_send = internal constant ptr @__tracepoint_mptcp_subflow_get_send, section "__tracepoints_ptrs", align 4
@__tpstrtab_get_mapping_status = internal constant [19 x i8] c"get_mapping_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_get_mapping_status = dso_local global %struct.static_call_key { ptr @__traceiter_get_mapping_status }, align 4
@__tracepoint_get_mapping_status = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_get_mapping_status, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_get_mapping_status, ptr null, ptr @__traceiter_get_mapping_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_get_mapping_status = internal constant ptr @__tracepoint_get_mapping_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_ack_update_msk = internal constant [15 x i8] c"ack_update_msk\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ack_update_msk = dso_local global %struct.static_call_key { ptr @__traceiter_ack_update_msk }, align 4
@__tracepoint_ack_update_msk = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_ack_update_msk, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_ack_update_msk, ptr null, ptr @__traceiter_ack_update_msk, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ack_update_msk = internal constant ptr @__tracepoint_ack_update_msk, section "__tracepoints_ptrs", align 4
@__tpstrtab_subflow_check_data_avail = internal constant [25 x i8] c"subflow_check_data_avail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_subflow_check_data_avail = dso_local global %struct.static_call_key { ptr @__traceiter_subflow_check_data_avail }, align 4
@__tracepoint_subflow_check_data_avail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_subflow_check_data_avail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_subflow_check_data_avail, ptr null, ptr @__traceiter_subflow_check_data_avail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_subflow_check_data_avail = internal constant ptr @__tracepoint_subflow_check_data_avail, section "__tracepoints_ptrs", align 4
@str__mptcp__trace_system_name = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"mptcp\00", [26 x i8] zeroinitializer }, align 32
@trace_event_fields_mptcp_subflow_get_send = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.218 { %struct.anon.219 { ptr @.str.17, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.218 { %struct.anon.219 { ptr @.str.18, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.19, %union.anon.218 { %struct.anon.219 { ptr @.str.20, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.19, %union.anon.218 { %struct.anon.219 { ptr @.str.21, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.23, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.24, %union.anon.218 { %struct.anon.219 { ptr @.str.25, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_mptcp_subflow_get_send = internal global %struct.trace_event_class { ptr @str__mptcp__trace_system_name, ptr @trace_event_raw_event_mptcp_subflow_get_send, ptr @perf_trace_mptcp_subflow_get_send, ptr @trace_event_reg, ptr @trace_event_fields_mptcp_subflow_get_send, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mptcp_subflow_get_send, i64 24), ptr getelementptr (i8, ptr @event_class_mptcp_subflow_get_send, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mptcp_subflow_get_send = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mptcp_subflow_get_send, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mptcp_subflow_get_send = internal global { [134 x i8], [58 x i8] } { [134 x i8] c"\22active=%d free=%d snd_wnd=%u pace=%u backup=%u ratio=%llu\22, REC->active, REC->free, REC->snd_wnd, REC->pace, REC->backup, REC->ratio\00", [58 x i8] zeroinitializer }, align 32
@event_mptcp_subflow_get_send = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mptcp_subflow_get_send, %union.anon.220 { ptr @__tracepoint_mptcp_subflow_get_send }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mptcp_subflow_get_send }, ptr @print_fmt_mptcp_subflow_get_send, ptr null, %union.anon.221 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_mptcp_subflow_get_send = internal global ptr @event_mptcp_subflow_get_send, section "_ftrace_events", align 4
@trace_event_fields_mptcp_dump_mpext = internal global { [16 x %struct.trace_event_fields], [96 x i8] } { [16 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.24, %union.anon.218 { %struct.anon.219 { ptr @.str.27, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.24, %union.anon.218 { %struct.anon.219 { ptr @.str.28, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.19, %union.anon.218 { %struct.anon.219 { ptr @.str.29, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.218 { %struct.anon.219 { ptr @.str.31, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.218 { %struct.anon.219 { ptr @.str.32, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.33, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.34, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.35, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.36, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.37, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.38, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.39, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.40, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.41, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.42, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [96 x i8] zeroinitializer }, align 32
@event_class_mptcp_dump_mpext = internal global %struct.trace_event_class { ptr @str__mptcp__trace_system_name, ptr @trace_event_raw_event_mptcp_dump_mpext, ptr @perf_trace_mptcp_dump_mpext, ptr @trace_event_reg, ptr @trace_event_fields_mptcp_dump_mpext, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_mptcp_dump_mpext, i64 24), ptr getelementptr (i8, ptr @event_class_mptcp_dump_mpext, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_mptcp_dump_mpext = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_mptcp_dump_mpext, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_mptcp_dump_mpext = internal global { [411 x i8], [101 x i8] } { [411 x i8] c"\22data_ack=%llu data_seq=%llu subflow_seq=%u data_len=%u csum=%x use_map=%u dsn64=%u data_fin=%u use_ack=%u ack64=%u mpc_map=%u frozen=%u reset_transient=%u reset_reason=%u csum_reqd=%u\22, REC->data_ack, REC->data_seq, REC->subflow_seq, REC->data_len, REC->csum, REC->use_map, REC->dsn64, REC->data_fin, REC->use_ack, REC->ack64, REC->mpc_map, REC->frozen, REC->reset_transient, REC->reset_reason, REC->csum_reqd\00", [101 x i8] zeroinitializer }, align 32
@event_get_mapping_status = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_mptcp_dump_mpext, %union.anon.220 { ptr @__tracepoint_get_mapping_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_mptcp_dump_mpext }, ptr @print_fmt_mptcp_dump_mpext, ptr null, %union.anon.221 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_get_mapping_status = internal global ptr @event_get_mapping_status, section "_ftrace_events", align 4
@trace_event_fields_ack_update_msk = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.24, %union.anon.218 { %struct.anon.219 { ptr @.str.27, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.24, %union.anon.218 { %struct.anon.219 { ptr @.str.44, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.24, %union.anon.218 { %struct.anon.219 { ptr @.str.45, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.24, %union.anon.218 { %struct.anon.219 { ptr @.str.46, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.24, %union.anon.218 { %struct.anon.219 { ptr @.str.47, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_ack_update_msk = internal global %struct.trace_event_class { ptr @str__mptcp__trace_system_name, ptr @trace_event_raw_event_ack_update_msk, ptr @perf_trace_ack_update_msk, ptr @trace_event_reg, ptr @trace_event_fields_ack_update_msk, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ack_update_msk, i64 24), ptr getelementptr (i8, ptr @event_class_ack_update_msk, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ack_update_msk = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_ack_update_msk, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_ack_update_msk = internal global { [171 x i8], [53 x i8] } { [171 x i8] c"\22data_ack=%llu old_snd_una=%llu new_snd_una=%llu new_wnd_end=%llu msk_wnd_end=%llu\22, REC->data_ack, REC->old_snd_una, REC->new_snd_una, REC->new_wnd_end, REC->msk_wnd_end\00", [53 x i8] zeroinitializer }, align 32
@event_ack_update_msk = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ack_update_msk, %union.anon.220 { ptr @__tracepoint_ack_update_msk }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ack_update_msk }, ptr @print_fmt_ack_update_msk, ptr null, %union.anon.221 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_ack_update_msk = internal global ptr @event_ack_update_msk, section "_ftrace_events", align 4
@trace_event_fields_subflow_check_data_avail = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.22, %union.anon.218 { %struct.anon.219 { ptr @.str.49, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.50, %union.anon.218 { %struct.anon.219 { ptr @.str.51, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_subflow_check_data_avail = internal global %struct.trace_event_class { ptr @str__mptcp__trace_system_name, ptr @trace_event_raw_event_subflow_check_data_avail, ptr @perf_trace_subflow_check_data_avail, ptr @trace_event_reg, ptr @trace_event_fields_subflow_check_data_avail, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_subflow_check_data_avail, i64 24), ptr getelementptr (i8, ptr @event_class_subflow_check_data_avail, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_subflow_check_data_avail = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_subflow_check_data_avail, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_subflow_check_data_avail = internal global { [191 x i8], [33 x i8] } { [191 x i8] c"\22mapping_status=%s, skb=%p\22, __print_symbolic(REC->status, { 0, \22MAPPING_OK\22 }, { 1, \22MAPPING_INVALID\22 }, { 2, \22MAPPING_EMPTY\22 }, { 3, \22MAPPING_DATA_FIN\22 }, { 4, \22MAPPING_DUMMY\22 }), REC->skb\00", [33 x i8] zeroinitializer }, align 32
@event_subflow_check_data_avail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_subflow_check_data_avail, %union.anon.220 { ptr @__tracepoint_subflow_check_data_avail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_subflow_check_data_avail }, ptr @print_fmt_subflow_check_data_avail, ptr null, %union.anon.221 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_subflow_check_data_avail = internal global ptr @event_subflow_check_data_avail, section "_ftrace_events", align 4
@__bpf_trace_tp_map_mptcp_subflow_get_send = internal global %union.anon.222 { %struct.bpf_raw_event_map { ptr @__tracepoint_mptcp_subflow_get_send, ptr @__bpf_trace_mptcp_subflow_get_send, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_get_mapping_status = internal global %union.anon.223 { %struct.bpf_raw_event_map { ptr @__tracepoint_get_mapping_status, ptr @__bpf_trace_mptcp_dump_mpext, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_ack_update_msk = internal global %union.anon.224 { %struct.bpf_raw_event_map { ptr @__tracepoint_ack_update_msk, ptr @__bpf_trace_ack_update_msk, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_subflow_check_data_avail = internal global %union.anon.225 { %struct.bpf_raw_event_map { ptr @__tracepoint_subflow_check_data_avail, ptr @__bpf_trace_subflow_check_data_avail, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@mptcp_subflow_shutdown.__UNIQUE_ID_ddebug751 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, i8 2, i8 -113, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"mptcp\00", [26 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mptcp_subflow_shutdown\00", [41 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"net/mptcp/protocol.c\00", [43 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Fallback\00", [23 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"MPTCP: Fallback\00", [16 x i8] zeroinitializer }, align 32
@mptcp_subflow_shutdown.__UNIQUE_ID_ddebug752 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.5, i8 2, i8 -112, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.5 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Sending DATA_FIN on subflow %p\00", [33 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"MPTCP: Sending DATA_FIN on subflow %p\00", [58 x i8] zeroinitializer }, align 32
@mptcp_finish_connect.__UNIQUE_ID_ddebug773 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.7, ptr @.str.2, ptr @.str.8, i8 3, i8 28, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.7 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"mptcp_finish_connect\00", [43 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"msk=%p, token=%u\00", [47 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"MPTCP: msk=%p, token=%u\00", [40 x i8] zeroinitializer }, align 32
@mptcp_finish_join.__UNIQUE_ID_ddebug785 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.10, ptr @.str.2, ptr @.str.11, i8 3, i8 38, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.10 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"mptcp_finish_join\00", [46 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"msk=%p, subflow=%p\00", [45 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"MPTCP: msk=%p, subflow=%p\00", [38 x i8] zeroinitializer }, align 32
@mptcp_finish_join.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@tcp_prot = external dso_local global %struct.proto, align 4
@mptcp_prot = internal global { %struct.proto, [36 x i8] } { %struct.proto { ptr @mptcp_close, ptr null, ptr null, ptr @mptcp_disconnect, ptr @mptcp_accept, ptr @mptcp_ioctl, ptr @mptcp_init_sock, ptr @mptcp_destroy, ptr @mptcp_shutdown, ptr @mptcp_setsockopt, ptr @mptcp_getsockopt, ptr null, ptr @mptcp_sendmsg, ptr @mptcp_recvmsg, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mptcp_release_cb, ptr @mptcp_hash, ptr @mptcp_unhash, ptr null, ptr @mptcp_get_port, ptr null, ptr null, i32 0, ptr @mptcp_forward_alloc_get, ptr null, ptr null, ptr null, ptr null, ptr @tcp_memory_allocated, ptr @mptcp_sockets_allocated, ptr @tcp_memory_pressure, ptr @sysctl_tcp_mem, ptr null, ptr null, i32 1324, i32 1336, i32 0, i8 1, ptr null, i32 2072, i32 524288, i32 0, i32 0, ptr null, ptr null, ptr null, %union.anon.162 zeroinitializer, ptr null, [32 x i8] c"MPTCP\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", %struct.list_head zeroinitializer, ptr null }, [36 x i8] zeroinitializer }, align 32
@mptcp_proto_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@mptcp_sockets_allocated = internal global %struct.percpu_counter zeroinitializer, align 128
@.str.13 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Failed to allocate MPTCP pcpu counter\0A\00", [57 x i8] zeroinitializer }, align 32
@mptcp_napi_dev = internal global %struct.net_device zeroinitializer, align 128
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@mptcp_delegated_actions = weak dso_local global %struct.mptcp_delegated_action zeroinitializer, section ".data..percpu", align 8
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.14 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Failed to register MPTCP proto.\0A\00", [63 x i8] zeroinitializer }, align 32
@mptcp_protosw = internal global { %struct.inet_protosw, [40 x i8] } { %struct.inet_protosw { %struct.list_head zeroinitializer, i16 1, i16 262, ptr @mptcp_prot, ptr @mptcp_stream_ops, i8 4 }, [40 x i8] zeroinitializer }, align 32
@mptcp_v6_prot = internal global { %struct.proto, [36 x i8] } zeroinitializer, align 32
@mptcp_v6_protosw = internal global { %struct.inet_protosw, [40 x i8] } { %struct.inet_protosw { %struct.list_head zeroinitializer, i16 1, i16 262, ptr @mptcp_v6_prot, ptr @mptcp_v6_stream_ops, i8 4 }, [40 x i8] zeroinitializer }, align 32
@__pcpu_scope_mptcp_delegated_actions = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_mptcp_delegated_actions = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@.str.16 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"active\00", [25 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"free\00", [27 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u32\00", [28 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"snd_wnd\00", [24 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pace\00", [27 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"u8\00", [29 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"backup\00", [25 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u64\00", [28 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ratio\00", [26 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"active=%d free=%d snd_wnd=%u pace=%u backup=%u ratio=%llu\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"data_ack\00", [23 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"data_seq\00", [23 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"subflow_seq\00", [20 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u16\00", [28 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"data_len\00", [23 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"csum\00", [27 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"use_map\00", [24 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dsn64\00", [26 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"data_fin\00", [23 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"use_ack\00", [24 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ack64\00", [26 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"mpc_map\00", [24 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"frozen\00", [25 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"reset_transient\00", [16 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"reset_reason\00", [19 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"csum_reqd\00", [22 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [185 x i8], [39 x i8] } { [185 x i8] c"data_ack=%llu data_seq=%llu subflow_seq=%u data_len=%u csum=%x use_map=%u dsn64=%u data_fin=%u use_ack=%u ack64=%u mpc_map=%u frozen=%u reset_transient=%u reset_reason=%u csum_reqd=%u\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"old_snd_una\00", [20 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"new_snd_una\00", [20 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"new_wnd_end\00", [20 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"msk_wnd_end\00", [20 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"data_ack=%llu old_snd_una=%llu new_snd_una=%llu new_wnd_end=%llu msk_wnd_end=%llu\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"status\00", [25 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"const void *\00", [19 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"skb\00", [28 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"mapping_status=%s, skb=%p\0A\00", [37 x i8] zeroinitializer }, align 32
@trace_raw_output_subflow_check_data_avail.symbols = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.53 }, %struct.trace_print_flags { i32 1, ptr @.str.54 }, %struct.trace_print_flags { i32 2, ptr @.str.55 }, %struct.trace_print_flags { i32 3, ptr @.str.56 }, %struct.trace_print_flags { i32 4, ptr @.str.57 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"MAPPING_OK\00", [21 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"MAPPING_INVALID\00", [16 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"MAPPING_EMPTY\00", [18 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"MAPPING_DATA_FIN\00", [47 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"MAPPING_DUMMY\00", [18 x i8] zeroinitializer }, align 32
@__mptcp_move_skbs_from_subflow.__UNIQUE_ID_ddebug684 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.58, ptr @.str.2, ptr @.str.59, i8 0, i8 -96, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.58 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"__mptcp_move_skbs_from_subflow\00", [33 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"msk=%p ssk=%p\00", [18 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"MPTCP: msk=%p ssk=%p\00", [43 x i8] zeroinitializer }, align 32
@__mptcp_move_skbs_from_subflow.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__mptcp_move_skbs_from_subflow.__already_done.61 = internal unnamed_addr global i1 false, section ".data.once", align 1
@mptcp_try_coalesce.__UNIQUE_ID_ddebug659 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.62, ptr @.str.2, ptr @.str.63, i8 0, i8 37, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.62 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mptcp_try_coalesce\00", [45 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"colesced seq %llx into %llx new len %d new end seq %llx\00", [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"MPTCP: colesced seq %llx into %llx new len %d new end seq %llx\00", [33 x i8] zeroinitializer }, align 32
@mptcp_data_queue_ofo.__UNIQUE_ID_ddebug661 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.65, ptr @.str.2, ptr @.str.66, i8 0, i8 54, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.65 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"mptcp_data_queue_ofo\00", [43 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"msk=%p seq=%llx limit=%llx empty=%d\00", [60 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"MPTCP: msk=%p seq=%llx limit=%llx empty=%d\00", [53 x i8] zeroinitializer }, align 32
@mptcp_data_queue_ofo.__UNIQUE_ID_ddebug663 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.65, ptr @.str.2, ptr @.str.68, i8 0, i8 56, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.68 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"oow by %lld, rcv_wnd_sent %llu\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"MPTCP: oow by %lld, rcv_wnd_sent %llu\0A\00", [57 x i8] zeroinitializer }, align 32
@__mptcp_ofo_queue.__UNIQUE_ID_ddebug686 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.70, ptr @.str.2, ptr @.str.71, i8 0, i8 -76, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.70 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__mptcp_ofo_queue\00", [46 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"msk=%p empty=%d\00", [16 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"MPTCP: msk=%p empty=%d\00", [41 x i8] zeroinitializer }, align 32
@__mptcp_ofo_queue.__UNIQUE_ID_ddebug688 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.70, ptr @.str.2, ptr @.str.73, i8 0, i8 -70, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.73 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"uncoalesced seq=%llx ack seq=%llx delta=%d\00", [53 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"MPTCP: uncoalesced seq=%llx ack seq=%llx delta=%d\00", [46 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@sock_owned_by_me.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.75 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"include/net/sock.h\00", [45 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/trace/events/mptcp.h\00", [35 x i8] zeroinitializer }, align 32
@trace_mptcp_subflow_get_send.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.77 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.78 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@mptcp_sendmsg_frag.__UNIQUE_ID_ddebug698 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.79, ptr @.str.2, ptr @.str.80, i8 1, i8 55, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.79 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"mptcp_sendmsg_frag\00", [45 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"msk=%p ssk=%p sending dfrag at seq=%llu len=%u already sent=%u\00", [33 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"MPTCP: msk=%p ssk=%p sending dfrag at seq=%llu len=%u already sent=%u\00", [58 x i8] zeroinitializer }, align 32
@mptcp_sendmsg_frag.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@sysctl_max_skb_frags = external dso_local local_unnamed_addr global i32, align 4
@mptcp_sendmsg_frag.__already_done.82 = internal unnamed_addr global i1 false, section ".data.once", align 1
@mptcp_sendmsg_frag.__already_done.83 = internal unnamed_addr global i1 false, section ".data.once", align 1
@mptcp_sendmsg_frag.__UNIQUE_ID_ddebug703 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.79, ptr @.str.2, ptr @.str.84, i8 1, i8 80, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.84 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"data_seq=%llu subflow_seq=%u data_len=%u dsn64=%d\00", [46 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"MPTCP: data_seq=%llu subflow_seq=%u data_len=%u dsn64=%d\00", [39 x i8] zeroinitializer }, align 32
@memcg_sockets_enabled_key = external dso_local global %struct.static_key_false, align 4
@tcp_memory_pressure = external dso_local global i32, align 4
@memory_cgrp_subsys_on_dfl_key = external dso_local global %struct.static_key_true, align 4
@__mptcp_mem_reclaim_partial.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.86 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VM_BUG_ON_FOLIO(((unsigned int) folio_ref_count(folio) + 127u <= 127u))\00", [56 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@__mptcp_clean_una_wakeup.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__mptcp_check_send_data_fin.__UNIQUE_ID_ddebug753 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.87, ptr @.str.2, ptr @.str.88, i8 2, i8 -100, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.87 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"__mptcp_check_send_data_fin\00", [36 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"msk=%p snd_data_fin_enable=%d pending=%d snd_nxt=%llu write_seq=%llu\00", [59 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"MPTCP: msk=%p snd_data_fin_enable=%d pending=%d snd_nxt=%llu write_seq=%llu\00", [52 x i8] zeroinitializer }, align 32
@sk_wake_async.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.90 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.92 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@__mptcp_init_sock.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.93 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"(work_completion)(&msk->work)\00", [34 x i8] zeroinitializer }, align 32
@__mptcp_init_sock.__key.94 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.95 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"(&msk->sk.icsk_retransmit_timer)\00", [63 x i8] zeroinitializer }, align 32
@__mptcp_init_sock.__key.96 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.97 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"(&sk->sk_timer)\00", [16 x i8] zeroinitializer }, align 32
@mptcp_check_data_fin.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__mptcp_destroy_sock.__UNIQUE_ID_ddebug759 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.98, ptr @.str.2, ptr @.str.99, i8 2, i8 -87, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.98 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"__mptcp_destroy_sock\00", [43 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"msk=%p\00", [25 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"MPTCP: msk=%p\00", [18 x i8] zeroinitializer }, align 32
@__mptcp_destroy_sock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__mptcp_destroy_sock.__already_done.101 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.103 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@__mptcp_clean_una.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__mptcp_clean_una.__already_done.104 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__mptcp_clean_una.__already_done.105 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__const.__mptcp_subflow_push_pending.info = private unnamed_addr constant { i32, i32, i16, i16, i32, i8, [3 x i8] } { i32 0, i32 0, i16 0, i16 0, i32 0, i8 1, [3 x i8] zeroinitializer }, align 4
@mptcp_subflow_delegate.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@.str.106 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"net/mptcp/protocol.h\00", [43 x i8] zeroinitializer }, align 32
@schedule_3rdack_retransmission.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@tcp_memory_allocated = external dso_local global %struct.atomic_t, align 4
@sysctl_tcp_mem = external dso_local global [3 x i32], align 4
@mptcp_close.__UNIQUE_ID_ddebug760 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.107, ptr @.str.2, ptr @.str.108, i8 2, i8 -72, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.107 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"mptcp_close\00", [20 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"msk=%p state=%d\00", [16 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"MPTCP: msk=%p state=%d\00", [41 x i8] zeroinitializer }, align 32
@new_state = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"\07\84\07\84\04\05\07\07\89\09\07\0B\07\00\00\00", [16 x i8] zeroinitializer }, align 32
@__mptcp_wr_shutdown.__UNIQUE_ID_ddebug756 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.110, ptr @.str.2, ptr @.str.111, i8 2, i8 -91, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.110 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__mptcp_wr_shutdown\00", [44 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"msk=%p snd_data_fin_enable=%d shutdown=%x state=%d pending=%d\00", [34 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"MPTCP: msk=%p snd_data_fin_enable=%d shutdown=%x state=%d pending=%d\00", [59 x i8] zeroinitializer }, align 32
@mptcp_accept.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mptcp_accept.__UNIQUE_ID_ddebug770 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.113, ptr @.str.2, ptr @.str.114, i8 2, i8 -28, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.113 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mptcp_accept\00", [19 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"msk=%p, listener=%p\00", [44 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"MPTCP: msk=%p, listener=%p\00", [37 x i8] zeroinitializer }, align 32
@mptcp_accept.__UNIQUE_ID_ddebug771 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.113, ptr @.str.2, ptr @.str.116, i8 2, i8 -27, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.116 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"msk=%p, subflow is mptcp=%d\00", [36 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"MPTCP: msk=%p, subflow is mptcp=%d\00", [61 x i8] zeroinitializer }, align 32
@mptcp_accept.__already_done.118 = internal unnamed_addr global i1 false, section ".data.once", align 1
@mptcp_shutdown.__UNIQUE_ID_ddebug787 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.119, ptr @.str.2, ptr @.str.120, i8 3, i8 51, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.119 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"mptcp_shutdown\00", [17 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sk=%p, how=%d\00", [18 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"MPTCP: sk=%p, how=%d\00", [43 x i8] zeroinitializer }, align 32
@mptcp_sendmsg.__UNIQUE_ID_ddebug721 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.122, ptr @.str.2, ptr @.str.123, i8 1, i8 -74, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.122 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mptcp_sendmsg\00", [18 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"msk=%p dfrag at seq=%llu len=%u sent=%u new=%d\00", [49 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"MPTCP: msk=%p dfrag at seq=%llu len=%u sent=%u new=%d\00", [42 x i8] zeroinitializer }, align 32
@mptcp_pending_tail.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@mptcp_recvmsg.__UNIQUE_ID_ddebug739 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.125, ptr @.str.2, ptr @.str.126, i8 2, i8 13, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.125 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mptcp_recvmsg\00", [18 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"block timeout %ld\00", [46 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"MPTCP: block timeout %ld\00", [39 x i8] zeroinitializer }, align 32
@mptcp_recvmsg.__UNIQUE_ID_ddebug740 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.125, ptr @.str.2, ptr @.str.128, i8 2, i8 17, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.128 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"msk=%p rx queue empty=%d:%d copied=%d\00", [58 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"MPTCP: msk=%p rx queue empty=%d:%d copied=%d\00", [51 x i8] zeroinitializer }, align 32
@mptcp_hash.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mptcp_get_port.__UNIQUE_ID_ddebug772 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.130, ptr @.str.2, ptr @.str.11, i8 3, i8 24, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.130 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"mptcp_get_port\00", [17 x i8] zeroinitializer }, align 32
@mptcp_get_port.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mptcp_stream_ops = internal constant { %struct.proto_ops, [52 x i8] } { %struct.proto_ops { i32 2, ptr null, ptr @inet_release, ptr @mptcp_bind, ptr @mptcp_stream_connect, ptr @sock_no_socketpair, ptr @mptcp_stream_accept, ptr @inet_getname, ptr @mptcp_poll, ptr @inet_ioctl, ptr @sock_gettstamp, ptr @mptcp_listen, ptr @inet_shutdown, ptr @sock_common_setsockopt, ptr @sock_common_getsockopt, ptr null, ptr @inet_sendmsg, ptr @inet_recvmsg, ptr @sock_no_mmap, ptr @inet_sendpage, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__mptcp_do_fallback.__UNIQUE_ID_ddebug629 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.131, ptr @.str.106, ptr @.str.132, i8 0, i8 -40, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.131 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__mptcp_do_fallback\00", [44 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"TCP fallback already done (msk=%p)\00", [61 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"MPTCP: TCP fallback already done (msk=%p)\00", [54 x i8] zeroinitializer }, align 32
@mptcp_stream_accept.__UNIQUE_ID_ddebug793 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.134, ptr @.str.2, ptr @.str.99, i8 3, i8 109, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.134 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"mptcp_stream_accept\00", [44 x i8] zeroinitializer }, align 32
@inet_stream_ops = external dso_local constant %struct.proto_ops, align 4
@tcpv6_prot = external dso_local global %struct.proto, align 4
@inet6_stream_ops = external dso_local constant %struct.proto_ops, align 4
@mptcp_poll.__UNIQUE_ID_ddebug794 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.135, ptr @.str.2, ptr @.str.136, i8 3, i8 -125, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.135 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"mptcp_poll\00", [21 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"msk=%p state=%d flags=%lx\00", [38 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"MPTCP: msk=%p state=%d flags=%lx\00", [63 x i8] zeroinitializer }, align 32
@mptcp_poll.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mptcp_listen.__UNIQUE_ID_ddebug792 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.138, ptr @.str.2, ptr @.str.99, i8 3, i8 102, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.138 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mptcp_listen\00", [19 x i8] zeroinitializer }, align 32
@mptcp_v6_stream_ops = internal constant { %struct.proto_ops, [52 x i8] } { %struct.proto_ops { i32 10, ptr null, ptr @inet6_release, ptr @mptcp_bind, ptr @mptcp_stream_connect, ptr @sock_no_socketpair, ptr @mptcp_stream_accept, ptr @inet6_getname, ptr @mptcp_poll, ptr @inet6_ioctl, ptr @sock_gettstamp, ptr @mptcp_listen, ptr @inet_shutdown, ptr @sock_common_setsockopt, ptr @sock_common_getsockopt, ptr null, ptr @inet6_sendmsg, ptr @inet6_recvmsg, ptr @sock_no_mmap, ptr @inet_sendpage, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 8, i64 2, i64 10]
@__sancov_gen_cov_switch_values.139 = internal global [5 x i64] [i64 3, i64 8, i64 4, i64 9, i64 11]
@__sancov_gen_cov_switch_values.140 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 4, i64 5]
@__sancov_gen_cov_switch_values.141 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 4, i64 5]
@__sancov_gen_cov_switch_values.142 = internal global [5 x i64] [i64 3, i64 32, i64 21521, i64 21531, i64 35147]
@__sancov_gen_cov_switch_values.143 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967181]
@__sancov_gen_cov_switch_values.144 = internal global [5 x i64] [i64 3, i64 8, i64 2, i64 3, i64 10]
@___asan_gen_.145 = private unnamed_addr constant [30 x i8] c"str__mptcp__trace_system_name\00", align 1
@___asan_gen_.146 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.147 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.146, i32 36, i32 1 }
@___asan_gen_.148 = private unnamed_addr constant [42 x i8] c"trace_event_fields_mptcp_subflow_get_send\00", align 1
@___asan_gen_.151 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_mptcp_subflow_get_send\00", align 1
@___asan_gen_.154 = private unnamed_addr constant [33 x i8] c"print_fmt_mptcp_subflow_get_send\00", align 1
@___asan_gen_.157 = private unnamed_addr constant [29 x i8] c"event_mptcp_subflow_get_send\00", align 1
@___asan_gen_.160 = private unnamed_addr constant [36 x i8] c"trace_event_fields_mptcp_dump_mpext\00", align 1
@___asan_gen_.163 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_mptcp_dump_mpext\00", align 1
@___asan_gen_.166 = private unnamed_addr constant [27 x i8] c"print_fmt_mptcp_dump_mpext\00", align 1
@___asan_gen_.169 = private unnamed_addr constant [25 x i8] c"event_get_mapping_status\00", align 1
@___asan_gen_.171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.440, i32 118, i32 1 }
@___asan_gen_.172 = private unnamed_addr constant [34 x i8] c"trace_event_fields_ack_update_msk\00", align 1
@___asan_gen_.175 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_ack_update_msk\00", align 1
@___asan_gen_.178 = private unnamed_addr constant [25 x i8] c"print_fmt_ack_update_msk\00", align 1
@___asan_gen_.181 = private unnamed_addr constant [21 x i8] c"event_ack_update_msk\00", align 1
@___asan_gen_.184 = private unnamed_addr constant [44 x i8] c"trace_event_fields_subflow_check_data_avail\00", align 1
@___asan_gen_.187 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_subflow_check_data_avail\00", align 1
@___asan_gen_.190 = private unnamed_addr constant [35 x i8] c"print_fmt_subflow_check_data_avail\00", align 1
@___asan_gen_.193 = private unnamed_addr constant [31 x i8] c"event_subflow_check_data_avail\00", align 1
@___asan_gen_.210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2623, i32 4 }
@___asan_gen_.216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2627, i32 4 }
@___asan_gen_.225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3187, i32 2 }
@___asan_gen_.234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3227, i32 2 }
@___asan_gen_.235 = private unnamed_addr constant [11 x i8] c"mptcp_prot\00", align 1
@___asan_gen_.237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3350, i32 21 }
@___asan_gen_.238 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3694, i32 6 }
@___asan_gen_.243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3695, i32 9 }
@___asan_gen_.246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3711, i32 9 }
@___asan_gen_.247 = private unnamed_addr constant [14 x i8] c"mptcp_protosw\00", align 1
@___asan_gen_.249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3646, i32 28 }
@___asan_gen_.250 = private unnamed_addr constant [14 x i8] c"mptcp_v6_prot\00", align 1
@___asan_gen_.252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3744, i32 21 }
@___asan_gen_.253 = private unnamed_addr constant [17 x i8] c"mptcp_v6_protosw\00", align 1
@___asan_gen_.255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3752, i32 28 }
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.440, i32 65, i32 1 }
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.440, i32 122, i32 1 }
@___asan_gen_.367 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.440, i32 154, i32 1 }
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 641, i32 2 }
@___asan_gen_.402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 146, i32 2 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 218, i32 2 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 223, i32 3 }
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 720, i32 2 }
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 742, i32 4 }
@___asan_gen_.434 = private unnamed_addr constant [22 x i8] c"../include/net/sock.h\00", align 1
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.434, i32 1750, i32 2 }
@___asan_gen_.440 = private unnamed_addr constant [32 x i8] c"../include/trace/events/mptcp.h\00", align 1
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.440, i32 18, i32 1 }
@___asan_gen_.443 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.443, i32 108, i32 2 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 1243, i32 2 }
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 1344, i32 2 }
@___asan_gen_.462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.500, i32 1160, i32 2 }
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2670, i32 2 }
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.479, i32 695, i32 2 }
@___asan_gen_.479 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.479, i32 723, i32 2 }
@___asan_gen_.483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2526, i32 2 }
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2542, i32 2 }
@___asan_gen_.489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2543, i32 2 }
@___asan_gen_.498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2724, i32 2 }
@___asan_gen_.500 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.500, i32 717, i32 2 }
@___asan_gen_.504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.587, i32 523, i32 2 }
@___asan_gen_.513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2786, i32 2 }
@___asan_gen_.514 = private unnamed_addr constant [10 x i8] c"new_state\00", align 1
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2638, i32 28 }
@___asan_gen_.525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2707, i32 2 }
@___asan_gen_.534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2960, i32 2 }
@___asan_gen_.540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2965, i32 2 }
@___asan_gen_.549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3277, i32 2 }
@___asan_gen_.558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 1752, i32 3 }
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2101, i32 3 }
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 2117, i32 2 }
@___asan_gen_.576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3169, i32 2 }
@___asan_gen_.577 = private unnamed_addr constant [17 x i8] c"mptcp_stream_ops\00", align 1
@___asan_gen_.579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3624, i32 31 }
@___asan_gen_.587 = private unnamed_addr constant [24 x i8] c"../net/mptcp/protocol.h\00", align 1
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.587, i32 864, i32 3 }
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3511, i32 2 }
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3599, i32 2 }
@___asan_gen_.601 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3481, i32 2 }
@___asan_gen_.604 = private unnamed_addr constant [20 x i8] c"mptcp_v6_stream_ops\00", align 1
@___asan_gen_.605 = private constant [24 x i8] c"../net/mptcp/protocol.c\00", align 1
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.605, i32 3719, i32 31 }
@llvm.compiler.used = appending global [174 x ptr] [ptr @__bpf_trace_tp_map_ack_update_msk, ptr @__bpf_trace_tp_map_get_mapping_status, ptr @__bpf_trace_tp_map_mptcp_subflow_get_send, ptr @__bpf_trace_tp_map_subflow_check_data_avail, ptr @__event_ack_update_msk, ptr @__event_get_mapping_status, ptr @__event_mptcp_subflow_get_send, ptr @__event_subflow_check_data_avail, ptr @__tracepoint_ack_update_msk, ptr @__tracepoint_get_mapping_status, ptr @__tracepoint_mptcp_subflow_get_send, ptr @__tracepoint_ptr_ack_update_msk, ptr @__tracepoint_ptr_get_mapping_status, ptr @__tracepoint_ptr_mptcp_subflow_get_send, ptr @__tracepoint_ptr_subflow_check_data_avail, ptr @__tracepoint_subflow_check_data_avail, ptr @event_ack_update_msk, ptr @event_class_ack_update_msk, ptr @event_class_mptcp_dump_mpext, ptr @event_class_mptcp_subflow_get_send, ptr @event_class_subflow_check_data_avail, ptr @event_get_mapping_status, ptr @event_mptcp_subflow_get_send, ptr @event_subflow_check_data_avail, ptr @str__mptcp__trace_system_name, ptr @trace_event_fields_mptcp_subflow_get_send, ptr @trace_event_type_funcs_mptcp_subflow_get_send, ptr @print_fmt_mptcp_subflow_get_send, ptr @trace_event_fields_mptcp_dump_mpext, ptr @trace_event_type_funcs_mptcp_dump_mpext, ptr @print_fmt_mptcp_dump_mpext, ptr @trace_event_fields_ack_update_msk, ptr @trace_event_type_funcs_ack_update_msk, ptr @print_fmt_ack_update_msk, ptr @trace_event_fields_subflow_check_data_avail, ptr @trace_event_type_funcs_subflow_check_data_avail, ptr @print_fmt_subflow_check_data_avail, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @mptcp_prot, ptr @mptcp_proto_init.__key, ptr @.str.13, ptr @.str.14, ptr @mptcp_protosw, ptr @mptcp_v6_prot, ptr @mptcp_v6_protosw, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @trace_raw_output_subflow_check_data_avail.symbols, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.95, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.103, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @new_state, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @mptcp_stream_ops, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @mptcp_v6_stream_ops], section "llvm.metadata"
@0 = internal global [154 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__mptcp__trace_system_name to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mptcp_subflow_get_send to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mptcp_subflow_get_send to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mptcp_subflow_get_send to i32), i32 134, i32 192, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_mptcp_subflow_get_send to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_mptcp_dump_mpext to i32), i32 384, i32 480, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_mptcp_dump_mpext to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_mptcp_dump_mpext to i32), i32 411, i32 512, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_get_mapping_status to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_ack_update_msk to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_ack_update_msk to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_ack_update_msk to i32), i32 171, i32 224, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_ack_update_msk to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_subflow_check_data_avail to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_subflow_check_data_avail to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_subflow_check_data_avail to i32), i32 191, i32 224, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_subflow_check_data_avail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mptcp_prot to i32), i32 252, i32 288, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mptcp_proto_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mptcp_protosw to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mptcp_v6_prot to i32), i32 252, i32 288, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mptcp_v6_protosw to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 185, i32 224, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_subflow_check_data_avail.symbols to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @new_state to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mptcp_stream_ops to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mptcp_v6_stream_ops to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_mptcp_subflow_get_send(ptr nocapture readnone %__data, ptr noundef %subflow) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mptcp_subflow_get_send, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %subflow) #17
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_get_mapping_status(ptr nocapture readnone %__data, ptr noundef %mpext) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_get_mapping_status, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mpext) #17
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ack_update_msk(ptr nocapture readnone %__data, i64 noundef %data_ack, i64 noundef %old_snd_una, i64 noundef %new_snd_una, i64 noundef %new_wnd_end, i64 noundef %msk_wnd_end) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_ack_update_msk, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i64 noundef %data_ack, i64 noundef %old_snd_una, i64 noundef %new_snd_una, i64 noundef %new_wnd_end, i64 noundef %msk_wnd_end) #17
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_subflow_check_data_avail(ptr nocapture readnone %__data, i8 noundef zeroext %status, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_subflow_check_data_avail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i8 noundef zeroext %status, ptr noundef %skb) #17
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mptcp_subflow_get_send(ptr noundef %__data, ptr nocapture noundef %subflow) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #17
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !340

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !341

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #17
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #17
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %stale.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1, i32 0, i32 13
  %3 = ptrtoint ptr %stale.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %bf.load.i = load i32, ptr %stale.i, align 8
  %4 = and i32 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i78 = icmp eq i32 %4, 0
  br i1 %tobool.not.i78, label %if.end5.if.end6.i_crit_edge, label %if.then.i, !prof !340

if.end5.if.end6.i_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i

if.then.i:                                        ; preds = %if.end5
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %5 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tcp_sock.i.i, align 8
  %rcv_tstamp4.i = getelementptr inbounds %struct.tcp_sock, ptr %6, i32 0, i32 18
  %7 = ptrtoint ptr %rcv_tstamp4.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %rcv_tstamp4.i, align 4
  %stale_rcv_tstamp.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 4
  %9 = ptrtoint ptr %stale_rcv_tstamp.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %stale_rcv_tstamp.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %8)
  %cmp.i = icmp eq i32 %10, %8
  br i1 %cmp.i, label %if.then.i.mptcp_subflow_active.exit_crit_edge, label %cleanup.thread.i

if.then.i.mptcp_subflow_active.exit_crit_edge:    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_subflow_active.exit

cleanup.thread.i:                                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @mptcp_subflow_set_active(ptr noundef %subflow) #17
  br label %if.end6.i

if.end6.i:                                        ; preds = %cleanup.thread.i, %if.end5.if.end6.i_crit_edge
  %11 = ptrtoint ptr %stale.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %bf.load.i.i = load i32, ptr %stale.i, align 8
  %12 = and i32 %bf.load.i.i, 1140850688
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %12)
  %13 = icmp eq i32 %12, 1073741824
  br i1 %13, label %if.end6.i.mptcp_subflow_active.exit_crit_edge, label %if.end.i.i

if.end6.i.mptcp_subflow_active.exit_crit_edge:    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_subflow_active.exit

if.end.i.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  %tcp_sock.i.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %14 = ptrtoint ptr %tcp_sock.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tcp_sock.i.i.i, align 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %15, i32 0, i32 4
  %16 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %17 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, 258
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.i.i = icmp ne i32 %and.i.i, 0
  br label %mptcp_subflow_active.exit

mptcp_subflow_active.exit:                        ; preds = %if.end.i.i, %if.end6.i.mptcp_subflow_active.exit_crit_edge, %if.then.i.mptcp_subflow_active.exit_crit_edge
  %retval.1.i = phi i1 [ false, %if.then.i.mptcp_subflow_active.exit_crit_edge ], [ %tobool5.i.i, %if.end.i.i ], [ false, %if.end6.i.mptcp_subflow_active.exit_crit_edge ]
  %active = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 1
  %frombool = zext i1 %retval.1.i to i8
  %18 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %frombool, ptr %active, align 8
  %19 = ptrtoint ptr %stale.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %bf.load = load i32, ptr %stale.i, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  %20 = trunc i32 %bf.lshr to i8
  %conv = and i8 %20, 1
  %backup7 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 5
  %21 = ptrtoint ptr %backup7 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv, ptr %backup7, align 4
  %tcp_sock = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %22 = ptrtoint ptr %tcp_sock to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %tcp_sock, align 8
  %tobool8.not = icmp eq ptr %23, null
  br i1 %tobool8.not, label %mptcp_subflow_active.exit.if.else_crit_edge, label %land.lhs.true

mptcp_subflow_active.exit.if.else_crit_edge:      ; preds = %mptcp_subflow_active.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true:                                    ; preds = %mptcp_subflow_active.exit
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %23, i32 0, i32 4
  %24 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i = zext i8 %25 to i32
  %shl.i = shl nuw i32 1, %conv.i
  %and.i79 = and i32 %shl.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i79)
  %tobool.i.not = icmp eq i32 %and.i79, 0
  br i1 %tobool.i.not, label %land.lhs.true.if.else_crit_edge, label %if.then12

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then12:                                        ; preds = %land.lhs.true
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %23, i32 0, i32 22
  %26 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %sk_wmem_queued.i.i, align 8
  %sk_sndbuf.i.i = getelementptr inbounds %struct.sock, ptr %23, i32 0, i32 21
  %28 = ptrtoint ptr %sk_sndbuf.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %sk_sndbuf.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %29)
  %cmp.not.i.i = icmp slt i32 %27, %29
  br i1 %cmp.not.i.i, label %if.end.i.i80, label %if.then12.sk_stream_memory_free.exit_crit_edge

if.then12.sk_stream_memory_free.exit_crit_edge:   ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_memory_free.exit

if.end.i.i80:                                     ; preds = %if.then12
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %23, i32 0, i32 8
  %30 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %skc_prot.i.i, align 8
  %stream_memory_free.i.i = getelementptr inbounds %struct.proto, ptr %31, i32 0, i32 28
  %32 = ptrtoint ptr %stream_memory_free.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %stream_memory_free.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %33, null
  br i1 %tobool.not.i.i, label %if.end.i.i80.sk_stream_memory_free.exit_crit_edge, label %cond.true.i.i

if.end.i.i80.sk_stream_memory_free.exit_crit_edge: ; preds = %if.end.i.i80
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_memory_free.exit

cond.true.i.i:                                    ; preds = %if.end.i.i80
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i = call zeroext i1 %33(ptr noundef nonnull %23, i32 noundef 0) #17
  br label %sk_stream_memory_free.exit

sk_stream_memory_free.exit:                       ; preds = %cond.true.i.i, %if.end.i.i80.sk_stream_memory_free.exit_crit_edge, %if.then12.sk_stream_memory_free.exit_crit_edge
  %retval.0.i.i = phi i1 [ false, %if.then12.sk_stream_memory_free.exit_crit_edge ], [ %call.i.i, %cond.true.i.i ], [ true, %if.end.i.i80.sk_stream_memory_free.exit_crit_edge ]
  %free = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 2
  %frombool15 = zext i1 %retval.0.i.i to i8
  %34 = ptrtoint ptr %free to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %frombool15, ptr %free, align 1
  br label %if.end17

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %mptcp_subflow_active.exit.if.else_crit_edge
  %free16 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 2
  %35 = ptrtoint ptr %free16 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 0, ptr %free16, align 1
  br label %if.end17

if.end17:                                         ; preds = %if.else, %sk_stream_memory_free.exit
  %36 = ptrtoint ptr %tcp_sock to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tcp_sock, align 8
  %tobool19.not = icmp eq ptr %37, null
  br i1 %tobool19.not, label %if.else41.critedge, label %land.lhs.true20

land.lhs.true20:                                  ; preds = %if.end17
  %skc_state.i81 = getelementptr inbounds %struct.sock_common, ptr %37, i32 0, i32 4
  %38 = ptrtoint ptr %skc_state.i81 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load volatile i8, ptr %skc_state.i81, align 2
  %conv.i82 = zext i8 %39 to i32
  %shl.i83 = shl nuw i32 1, %conv.i82
  %and.i84 = and i32 %shl.i83, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i84)
  %tobool.i85.not = icmp eq i32 %and.i84, 0
  br i1 %tobool.i85.not, label %land.lhs.true31.critedge75, label %if.then23

if.then23:                                        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #19
  %snd_wnd = getelementptr inbounds %struct.tcp_sock, ptr %37, i32 0, i32 26
  %40 = ptrtoint ptr %snd_wnd to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %snd_wnd, align 4
  %snd_wnd25 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 3
  %42 = ptrtoint ptr %snd_wnd25 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %snd_wnd25, align 4
  %sk_pacing_rate = getelementptr inbounds %struct.sock, ptr %37, i32 0, i32 35
  %43 = ptrtoint ptr %sk_pacing_rate to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sk_pacing_rate, align 4
  br label %land.lhs.true31

land.lhs.true31.critedge75:                       ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #19
  %snd_wnd27.c = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 3
  %45 = ptrtoint ptr %snd_wnd27.c to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 0, ptr %snd_wnd27.c, align 4
  br label %land.lhs.true31

land.lhs.true31:                                  ; preds = %land.lhs.true31.critedge75, %if.then23
  %.sink = phi i32 [ 0, %land.lhs.true31.critedge75 ], [ %44, %if.then23 ]
  %46 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 4
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %.sink, ptr %46, align 8
  %48 = ptrtoint ptr %skc_state.i81 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load volatile i8, ptr %skc_state.i81, align 2
  %conv.i87 = zext i8 %49 to i32
  %shl.i88 = shl nuw i32 1, %conv.i87
  %and.i89 = and i32 %shl.i88, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i89)
  %tobool.i90.not = icmp eq i32 %and.i89, 0
  br i1 %tobool.i90.not, label %land.lhs.true31.if.end43_crit_edge, label %land.lhs.true34

land.lhs.true31.if.end43_crit_edge:               ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %50 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %46, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool36.not = icmp eq i32 %51, 0
  br i1 %tobool36.not, label %land.lhs.true34.if.end43_crit_edge, label %if.then37

land.lhs.true34.if.end43_crit_edge:               ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

if.then37:                                        ; preds = %land.lhs.true34
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %37, i32 0, i32 22
  %52 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %sk_wmem_queued, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp164.i.i = icmp eq i32 %53, 0
  br i1 %cmp164.i.i, label %if.then37.if.end43_crit_edge, label %if.else174.i.i, !prof !340

if.then37.if.end43_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

if.else174.i.i:                                   ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #19
  %conv3874 = zext i32 %53 to i64
  %shl = shl nuw i64 %conv3874, 32
  %54 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %51, i64 %shl) #20, !srcloc !342
  %asmresult1.i.i.i = extractvalue { i64, i64 } %54, 1
  br label %if.end43

if.else41.critedge:                               ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  %snd_wnd27.c76 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 3
  %55 = ptrtoint ptr %snd_wnd27.c76 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %snd_wnd27.c76, align 4
  %pace28.c77 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 4
  %56 = ptrtoint ptr %pace28.c77 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %pace28.c77, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.else41.critedge, %if.else174.i.i, %if.then37.if.end43_crit_edge, %land.lhs.true34.if.end43_crit_edge, %land.lhs.true31.if.end43_crit_edge
  %.sink94 = phi i64 [ %asmresult1.i.i.i, %if.else174.i.i ], [ 0, %if.then37.if.end43_crit_edge ], [ 0, %if.else41.critedge ], [ 0, %land.lhs.true34.if.end43_crit_edge ], [ 0, %land.lhs.true31.if.end43_crit_edge ]
  %ratio42 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call3, i32 0, i32 6
  %57 = ptrtoint ptr %ratio42 to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %.sink94, ptr %ratio42, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mptcp_subflow_get_send(ptr noundef %__data, ptr nocapture noundef %subflow) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #17
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !343
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #17
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !343
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #17
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #17
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #17
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !330) #17
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %stale.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1, i32 0, i32 13
  %27 = ptrtoint ptr %stale.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %bf.load.i = load i32, ptr %stale.i, align 8
  %28 = and i32 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i102 = icmp eq i32 %28, 0
  br i1 %tobool.not.i102, label %if.end16.if.end6.i_crit_edge, label %if.then.i, !prof !340

if.end16.if.end6.i_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i

if.then.i:                                        ; preds = %if.end16
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %29 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %tcp_sock.i.i, align 8
  %rcv_tstamp4.i = getelementptr inbounds %struct.tcp_sock, ptr %30, i32 0, i32 18
  %31 = ptrtoint ptr %rcv_tstamp4.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %rcv_tstamp4.i, align 4
  %stale_rcv_tstamp.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 4
  %33 = ptrtoint ptr %stale_rcv_tstamp.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %stale_rcv_tstamp.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %32)
  %cmp.i = icmp eq i32 %34, %32
  br i1 %cmp.i, label %if.then.i.mptcp_subflow_active.exit_crit_edge, label %cleanup.thread.i

if.then.i.mptcp_subflow_active.exit_crit_edge:    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_subflow_active.exit

cleanup.thread.i:                                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @mptcp_subflow_set_active(ptr noundef %subflow) #17
  br label %if.end6.i

if.end6.i:                                        ; preds = %cleanup.thread.i, %if.end16.if.end6.i_crit_edge
  %35 = ptrtoint ptr %stale.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %bf.load.i.i = load i32, ptr %stale.i, align 8
  %36 = and i32 %bf.load.i.i, 1140850688
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %36)
  %37 = icmp eq i32 %36, 1073741824
  br i1 %37, label %if.end6.i.mptcp_subflow_active.exit_crit_edge, label %if.end.i.i

if.end6.i.mptcp_subflow_active.exit_crit_edge:    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_subflow_active.exit

if.end.i.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  %tcp_sock.i.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %38 = ptrtoint ptr %tcp_sock.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %tcp_sock.i.i.i, align 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %39, i32 0, i32 4
  %40 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %41 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, 258
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.i.i = icmp ne i32 %and.i.i, 0
  br label %mptcp_subflow_active.exit

mptcp_subflow_active.exit:                        ; preds = %if.end.i.i, %if.end6.i.mptcp_subflow_active.exit_crit_edge, %if.then.i.mptcp_subflow_active.exit_crit_edge
  %retval.1.i = phi i1 [ false, %if.then.i.mptcp_subflow_active.exit_crit_edge ], [ %tobool5.i.i, %if.end.i.i ], [ false, %if.end6.i.mptcp_subflow_active.exit_crit_edge ]
  %active = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 1
  %frombool = zext i1 %retval.1.i to i8
  %42 = ptrtoint ptr %active to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %frombool, ptr %active, align 8
  %43 = ptrtoint ptr %stale.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %bf.load = load i32, ptr %stale.i, align 8
  %bf.lshr = lshr i32 %bf.load, 19
  %44 = trunc i32 %bf.lshr to i8
  %conv = and i8 %44, 1
  %backup18 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 5
  %45 = ptrtoint ptr %backup18 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %conv, ptr %backup18, align 4
  %tcp_sock = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %46 = ptrtoint ptr %tcp_sock to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %tcp_sock, align 8
  %tobool19.not = icmp eq ptr %47, null
  br i1 %tobool19.not, label %mptcp_subflow_active.exit.if.else_crit_edge, label %land.lhs.true20

mptcp_subflow_active.exit.if.else_crit_edge:      ; preds = %mptcp_subflow_active.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true20:                                  ; preds = %mptcp_subflow_active.exit
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %47, i32 0, i32 4
  %48 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i = zext i8 %49 to i32
  %shl.i = shl nuw i32 1, %conv.i
  %and.i103 = and i32 %shl.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i103)
  %tobool.i104.not = icmp eq i32 %and.i103, 0
  br i1 %tobool.i104.not, label %land.lhs.true20.if.else_crit_edge, label %if.then24

land.lhs.true20.if.else_crit_edge:                ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then24:                                        ; preds = %land.lhs.true20
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %47, i32 0, i32 22
  %50 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %sk_wmem_queued.i.i, align 8
  %sk_sndbuf.i.i = getelementptr inbounds %struct.sock, ptr %47, i32 0, i32 21
  %52 = ptrtoint ptr %sk_sndbuf.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %sk_sndbuf.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %51, i32 %53)
  %cmp.not.i.i = icmp slt i32 %51, %53
  br i1 %cmp.not.i.i, label %if.end.i.i105, label %if.then24.sk_stream_memory_free.exit_crit_edge

if.then24.sk_stream_memory_free.exit_crit_edge:   ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_memory_free.exit

if.end.i.i105:                                    ; preds = %if.then24
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %47, i32 0, i32 8
  %54 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %skc_prot.i.i, align 8
  %stream_memory_free.i.i = getelementptr inbounds %struct.proto, ptr %55, i32 0, i32 28
  %56 = ptrtoint ptr %stream_memory_free.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %stream_memory_free.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %57, null
  br i1 %tobool.not.i.i, label %if.end.i.i105.sk_stream_memory_free.exit_crit_edge, label %cond.true.i.i

if.end.i.i105.sk_stream_memory_free.exit_crit_edge: ; preds = %if.end.i.i105
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_memory_free.exit

cond.true.i.i:                                    ; preds = %if.end.i.i105
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i = call zeroext i1 %57(ptr noundef nonnull %47, i32 noundef 0) #17
  br label %sk_stream_memory_free.exit

sk_stream_memory_free.exit:                       ; preds = %cond.true.i.i, %if.end.i.i105.sk_stream_memory_free.exit_crit_edge, %if.then24.sk_stream_memory_free.exit_crit_edge
  %retval.0.i.i = phi i1 [ false, %if.then24.sk_stream_memory_free.exit_crit_edge ], [ %call.i.i, %cond.true.i.i ], [ true, %if.end.i.i105.sk_stream_memory_free.exit_crit_edge ]
  %free = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 2
  %frombool27 = zext i1 %retval.0.i.i to i8
  %58 = ptrtoint ptr %free to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %frombool27, ptr %free, align 1
  br label %if.end29

if.else:                                          ; preds = %land.lhs.true20.if.else_crit_edge, %mptcp_subflow_active.exit.if.else_crit_edge
  %free28 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 2
  %59 = ptrtoint ptr %free28 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 0, ptr %free28, align 1
  br label %if.end29

if.end29:                                         ; preds = %if.else, %sk_stream_memory_free.exit
  %60 = ptrtoint ptr %tcp_sock to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %tcp_sock, align 8
  %tobool31.not = icmp eq ptr %61, null
  br i1 %tobool31.not, label %if.else53.critedge, label %land.lhs.true32

land.lhs.true32:                                  ; preds = %if.end29
  %skc_state.i106 = getelementptr inbounds %struct.sock_common, ptr %61, i32 0, i32 4
  %62 = ptrtoint ptr %skc_state.i106 to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load volatile i8, ptr %skc_state.i106, align 2
  %conv.i107 = zext i8 %63 to i32
  %shl.i108 = shl nuw i32 1, %conv.i107
  %and.i109 = and i32 %shl.i108, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i109)
  %tobool.i110.not = icmp eq i32 %and.i109, 0
  br i1 %tobool.i110.not, label %land.lhs.true43.critedge99, label %if.then35

if.then35:                                        ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #19
  %snd_wnd = getelementptr inbounds %struct.tcp_sock, ptr %61, i32 0, i32 26
  %64 = ptrtoint ptr %snd_wnd to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %snd_wnd, align 4
  %snd_wnd37 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 3
  %66 = ptrtoint ptr %snd_wnd37 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %65, ptr %snd_wnd37, align 4
  %sk_pacing_rate = getelementptr inbounds %struct.sock, ptr %61, i32 0, i32 35
  %67 = ptrtoint ptr %sk_pacing_rate to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %sk_pacing_rate, align 4
  br label %land.lhs.true43

land.lhs.true43.critedge99:                       ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #19
  %snd_wnd39.c = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 3
  %69 = ptrtoint ptr %snd_wnd39.c to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 0, ptr %snd_wnd39.c, align 4
  br label %land.lhs.true43

land.lhs.true43:                                  ; preds = %land.lhs.true43.critedge99, %if.then35
  %.sink = phi i32 [ 0, %land.lhs.true43.critedge99 ], [ %68, %if.then35 ]
  %70 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 4
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %.sink, ptr %70, align 8
  %72 = ptrtoint ptr %skc_state.i106 to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load volatile i8, ptr %skc_state.i106, align 2
  %conv.i112 = zext i8 %73 to i32
  %shl.i113 = shl nuw i32 1, %conv.i112
  %and.i114 = and i32 %shl.i113, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i114)
  %tobool.i115.not = icmp eq i32 %and.i114, 0
  br i1 %tobool.i115.not, label %land.lhs.true43.if.end55_crit_edge, label %land.lhs.true46

land.lhs.true43.if.end55_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end55

land.lhs.true46:                                  ; preds = %land.lhs.true43
  %74 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %70, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool48.not = icmp eq i32 %75, 0
  br i1 %tobool48.not, label %land.lhs.true46.if.end55_crit_edge, label %if.then49

land.lhs.true46.if.end55_crit_edge:               ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end55

if.then49:                                        ; preds = %land.lhs.true46
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %61, i32 0, i32 22
  %76 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %sk_wmem_queued, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %cmp164.i.i = icmp eq i32 %77, 0
  br i1 %cmp164.i.i, label %if.then49.if.end55_crit_edge, label %if.else174.i.i, !prof !340

if.then49.if.end55_crit_edge:                     ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end55

if.else174.i.i:                                   ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #19
  %conv5098 = zext i32 %77 to i64
  %shl = shl nuw i64 %conv5098, 32
  %78 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %75, i64 %shl) #20, !srcloc !342
  %asmresult1.i.i.i = extractvalue { i64, i64 } %78, 1
  br label %if.end55

if.else53.critedge:                               ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #19
  %snd_wnd39.c100 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 3
  %79 = ptrtoint ptr %snd_wnd39.c100 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 0, ptr %snd_wnd39.c100, align 4
  %pace40.c101 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 4
  %80 = ptrtoint ptr %pace40.c101 to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 0, ptr %pace40.c101, align 8
  br label %if.end55

if.end55:                                         ; preds = %if.else53.critedge, %if.else174.i.i, %if.then49.if.end55_crit_edge, %land.lhs.true46.if.end55_crit_edge, %land.lhs.true43.if.end55_crit_edge
  %.sink118 = phi i64 [ %asmresult1.i.i.i, %if.else174.i.i ], [ 0, %if.then49.if.end55_crit_edge ], [ 0, %if.else53.critedge ], [ 0, %land.lhs.true46.if.end55_crit_edge ], [ 0, %land.lhs.true43.if.end55_crit_edge ]
  %ratio54 = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %call13, i32 0, i32 6
  %81 = ptrtoint ptr %ratio54 to i32
  call void @__asan_store8_noabort(i32 %81)
  store i64 %.sink118, ptr %ratio54, align 8
  %82 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %rctx, align 4
  %84 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %83, ptr noundef %__data, i64 noundef 1, ptr noundef %85, ptr noundef %11, ptr noundef null) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end55, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_mptcp_dump_mpext(ptr noundef %__data, ptr nocapture noundef readonly %mpext) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #17
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !340

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !341

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #17
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #17
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %ack64 = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 5
  %3 = ptrtoint ptr %ack64 to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load = load i16, ptr %ack64, align 8
  %4 = and i16 %bf.load, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool6.not = icmp eq i16 %4, 0
  br i1 %tobool6.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %5 = ptrtoint ptr %mpext to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %mpext, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  %7 = ptrtoint ptr %mpext to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mpext, align 8
  %conv7 = zext i32 %8 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %conv7, %cond.false ]
  %data_ack = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %data_ack to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %cond, ptr %data_ack, align 8
  %data_seq = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 1
  %10 = ptrtoint ptr %data_seq to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %data_seq, align 8
  %data_seq8 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %data_seq8 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %data_seq8, align 8
  %subflow_seq = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 2
  %13 = ptrtoint ptr %subflow_seq to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %subflow_seq, align 8
  %subflow_seq9 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %subflow_seq9 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %subflow_seq9, align 8
  %data_len = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 3
  %16 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %data_len, align 4
  %data_len10 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 4
  %18 = ptrtoint ptr %data_len10 to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %17, ptr %data_len10, align 4
  %csum = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 4
  %19 = ptrtoint ptr %csum to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %csum, align 2
  %csum11 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 5
  %21 = ptrtoint ptr %csum11 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %20, ptr %csum11, align 2
  %22 = ptrtoint ptr %ack64 to i32
  call void @__asan_load2_noabort(i32 %22)
  %bf.load12 = load i16, ptr %ack64, align 8
  %bf.lshr13 = lshr i16 %bf.load12, 15
  %bf.cast14 = trunc i16 %bf.lshr13 to i8
  %use_map15 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 6
  %23 = ptrtoint ptr %use_map15 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %bf.cast14, ptr %use_map15, align 8
  %bf.load16 = load i16, ptr %ack64, align 8
  %bf.lshr17 = lshr i16 %bf.load16, 14
  %24 = trunc i16 %bf.lshr17 to i8
  %bf.cast19 = and i8 %24, 1
  %dsn6420 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 7
  %25 = ptrtoint ptr %dsn6420 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %bf.cast19, ptr %dsn6420, align 1
  %bf.load21 = load i16, ptr %ack64, align 8
  %bf.lshr22 = lshr i16 %bf.load21, 13
  %26 = trunc i16 %bf.lshr22 to i8
  %bf.cast24 = and i8 %26, 1
  %data_fin25 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 8
  %27 = ptrtoint ptr %data_fin25 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %bf.cast24, ptr %data_fin25, align 2
  %bf.load26 = load i16, ptr %ack64, align 8
  %bf.lshr27 = lshr i16 %bf.load26, 12
  %28 = trunc i16 %bf.lshr27 to i8
  %bf.cast29 = and i8 %28, 1
  %use_ack30 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 9
  %29 = ptrtoint ptr %use_ack30 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %bf.cast29, ptr %use_ack30, align 1
  %bf.load32 = load i16, ptr %ack64, align 8
  %bf.lshr33 = lshr i16 %bf.load32, 11
  %30 = trunc i16 %bf.lshr33 to i8
  %bf.cast35 = and i8 %30, 1
  %ack6436 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 10
  %31 = ptrtoint ptr %ack6436 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %bf.cast35, ptr %ack6436, align 4
  %bf.load37 = load i16, ptr %ack64, align 8
  %bf.lshr38 = lshr i16 %bf.load37, 10
  %32 = trunc i16 %bf.lshr38 to i8
  %bf.cast40 = and i8 %32, 1
  %mpc_map41 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 11
  %33 = ptrtoint ptr %mpc_map41 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %bf.cast40, ptr %mpc_map41, align 1
  %bf.load42 = load i16, ptr %ack64, align 8
  %bf.lshr43 = lshr i16 %bf.load42, 9
  %34 = trunc i16 %bf.lshr43 to i8
  %bf.cast45 = and i8 %34, 1
  %frozen46 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 12
  %35 = ptrtoint ptr %frozen46 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %bf.cast45, ptr %frozen46, align 2
  %bf.load47 = load i16, ptr %ack64, align 8
  %bf.lshr48 = lshr i16 %bf.load47, 8
  %36 = trunc i16 %bf.lshr48 to i8
  %bf.cast50 = and i8 %36, 1
  %reset_transient51 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 13
  %37 = ptrtoint ptr %reset_transient51 to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %bf.cast50, ptr %reset_transient51, align 1
  %bf.load52 = load i16, ptr %ack64, align 8
  %38 = trunc i16 %bf.load52 to i8
  %39 = lshr i8 %38, 4
  %reset_reason56 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 14
  %40 = ptrtoint ptr %reset_reason56 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %39, ptr %reset_reason56, align 8
  %bf.load57 = load i16, ptr %ack64, align 8
  %41 = trunc i16 %bf.load57 to i8
  %42 = lshr i8 %41, 3
  %bf.cast60 = and i8 %42, 1
  %csum_reqd61 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call3, i32 0, i32 15
  %43 = ptrtoint ptr %csum_reqd61 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %bf.cast60, ptr %csum_reqd61, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #17
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_mptcp_dump_mpext(ptr noundef %__data, ptr nocapture noundef readonly %mpext) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #17
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !343
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #17
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !343
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #17
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #17
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #17
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !330) #17
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %ack64 = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 5
  %27 = ptrtoint ptr %ack64 to i32
  call void @__asan_load2_noabort(i32 %27)
  %bf.load = load i16, ptr %ack64, align 8
  %28 = and i16 %bf.load, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %28)
  %tobool17.not = icmp eq i16 %28, 0
  br i1 %tobool17.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  %29 = ptrtoint ptr %mpext to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %mpext, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  %31 = ptrtoint ptr %mpext to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mpext, align 8
  %conv18 = zext i32 %32 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %30, %cond.true ], [ %conv18, %cond.false ]
  %data_ack = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %data_ack to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %cond, ptr %data_ack, align 8
  %data_seq = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 1
  %34 = ptrtoint ptr %data_seq to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %data_seq, align 8
  %data_seq19 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %data_seq19 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %data_seq19, align 8
  %subflow_seq = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 2
  %37 = ptrtoint ptr %subflow_seq to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %subflow_seq, align 8
  %subflow_seq20 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %subflow_seq20 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %subflow_seq20, align 8
  %data_len = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 3
  %40 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %data_len, align 4
  %data_len21 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 4
  %42 = ptrtoint ptr %data_len21 to i32
  call void @__asan_store2_noabort(i32 %42)
  store i16 %41, ptr %data_len21, align 4
  %csum = getelementptr inbounds %struct.mptcp_ext, ptr %mpext, i32 0, i32 4
  %43 = ptrtoint ptr %csum to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %csum, align 2
  %csum22 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 5
  %45 = ptrtoint ptr %csum22 to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %44, ptr %csum22, align 2
  %46 = ptrtoint ptr %ack64 to i32
  call void @__asan_load2_noabort(i32 %46)
  %bf.load23 = load i16, ptr %ack64, align 8
  %bf.lshr24 = lshr i16 %bf.load23, 15
  %bf.cast25 = trunc i16 %bf.lshr24 to i8
  %use_map26 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 6
  %47 = ptrtoint ptr %use_map26 to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %bf.cast25, ptr %use_map26, align 8
  %bf.load27 = load i16, ptr %ack64, align 8
  %bf.lshr28 = lshr i16 %bf.load27, 14
  %48 = trunc i16 %bf.lshr28 to i8
  %bf.cast30 = and i8 %48, 1
  %dsn6431 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 7
  %49 = ptrtoint ptr %dsn6431 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %bf.cast30, ptr %dsn6431, align 1
  %bf.load32 = load i16, ptr %ack64, align 8
  %bf.lshr33 = lshr i16 %bf.load32, 13
  %50 = trunc i16 %bf.lshr33 to i8
  %bf.cast35 = and i8 %50, 1
  %data_fin36 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 8
  %51 = ptrtoint ptr %data_fin36 to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %bf.cast35, ptr %data_fin36, align 2
  %bf.load37 = load i16, ptr %ack64, align 8
  %bf.lshr38 = lshr i16 %bf.load37, 12
  %52 = trunc i16 %bf.lshr38 to i8
  %bf.cast40 = and i8 %52, 1
  %use_ack41 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 9
  %53 = ptrtoint ptr %use_ack41 to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %bf.cast40, ptr %use_ack41, align 1
  %bf.load43 = load i16, ptr %ack64, align 8
  %bf.lshr44 = lshr i16 %bf.load43, 11
  %54 = trunc i16 %bf.lshr44 to i8
  %bf.cast46 = and i8 %54, 1
  %ack6447 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 10
  %55 = ptrtoint ptr %ack6447 to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %bf.cast46, ptr %ack6447, align 4
  %bf.load48 = load i16, ptr %ack64, align 8
  %bf.lshr49 = lshr i16 %bf.load48, 10
  %56 = trunc i16 %bf.lshr49 to i8
  %bf.cast51 = and i8 %56, 1
  %mpc_map52 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 11
  %57 = ptrtoint ptr %mpc_map52 to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 %bf.cast51, ptr %mpc_map52, align 1
  %bf.load53 = load i16, ptr %ack64, align 8
  %bf.lshr54 = lshr i16 %bf.load53, 9
  %58 = trunc i16 %bf.lshr54 to i8
  %bf.cast56 = and i8 %58, 1
  %frozen57 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 12
  %59 = ptrtoint ptr %frozen57 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 %bf.cast56, ptr %frozen57, align 2
  %bf.load58 = load i16, ptr %ack64, align 8
  %bf.lshr59 = lshr i16 %bf.load58, 8
  %60 = trunc i16 %bf.lshr59 to i8
  %bf.cast61 = and i8 %60, 1
  %reset_transient62 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 13
  %61 = ptrtoint ptr %reset_transient62 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %bf.cast61, ptr %reset_transient62, align 1
  %bf.load63 = load i16, ptr %ack64, align 8
  %62 = trunc i16 %bf.load63 to i8
  %63 = lshr i8 %62, 4
  %reset_reason67 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 14
  %64 = ptrtoint ptr %reset_reason67 to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %63, ptr %reset_reason67, align 8
  %bf.load68 = load i16, ptr %ack64, align 8
  %65 = trunc i16 %bf.load68 to i8
  %66 = lshr i8 %65, 3
  %bf.cast71 = and i8 %66, 1
  %csum_reqd72 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %call13, i32 0, i32 15
  %67 = ptrtoint ptr %csum_reqd72 to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 %bf.cast71, ptr %csum_reqd72, align 1
  %68 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %rctx, align 4
  %70 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %69, ptr noundef %__data, i64 noundef 1, ptr noundef %71, ptr noundef %11, ptr noundef null) #17
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ack_update_msk(ptr noundef %__data, i64 noundef %data_ack, i64 noundef %old_snd_una, i64 noundef %new_snd_una, i64 noundef %new_wnd_end, i64 noundef %msk_wnd_end) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #17
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !340

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !341

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #17
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #17
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %data_ack6 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %data_ack6 to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %data_ack, ptr %data_ack6, align 8
  %old_snd_una7 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %old_snd_una7 to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %old_snd_una, ptr %old_snd_una7, align 8
  %new_snd_una8 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %new_snd_una8 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %new_snd_una, ptr %new_snd_una8, align 8
  %new_wnd_end9 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call3, i32 0, i32 4
  %6 = ptrtoint ptr %new_wnd_end9 to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %new_wnd_end, ptr %new_wnd_end9, align 8
  %msk_wnd_end10 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call3, i32 0, i32 5
  %7 = ptrtoint ptr %msk_wnd_end10 to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %msk_wnd_end, ptr %msk_wnd_end10, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_ack_update_msk(ptr noundef %__data, i64 noundef %data_ack, i64 noundef %old_snd_una, i64 noundef %new_snd_una, i64 noundef %new_wnd_end, i64 noundef %msk_wnd_end) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #17
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !343
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #17
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !343
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #17
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #17
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #17
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !330) #17
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %data_ack17 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %data_ack17 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %data_ack, ptr %data_ack17, align 8
  %old_snd_una18 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %old_snd_una18 to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %old_snd_una, ptr %old_snd_una18, align 8
  %new_snd_una19 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %new_snd_una19 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %new_snd_una, ptr %new_snd_una19, align 8
  %new_wnd_end20 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call13, i32 0, i32 4
  %30 = ptrtoint ptr %new_wnd_end20 to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %new_wnd_end, ptr %new_wnd_end20, align 8
  %msk_wnd_end21 = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %call13, i32 0, i32 5
  %31 = ptrtoint ptr %msk_wnd_end21 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %msk_wnd_end, ptr %msk_wnd_end21, align 8
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_subflow_check_data_avail(ptr noundef %__data, i8 noundef zeroext %status, ptr noundef %skb) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #17
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !340

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !341

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #17
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #17
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %status6 = getelementptr inbounds %struct.trace_event_raw_subflow_check_data_avail, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %status6 to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %status, ptr %status6, align 4
  %skb7 = getelementptr inbounds %struct.trace_event_raw_subflow_check_data_avail, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %skb7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %skb, ptr %skb7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_subflow_check_data_avail(ptr noundef %__data, i8 noundef zeroext %status, ptr noundef %skb) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #17
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !343
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #17
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !343
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #17
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #17
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #17
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !330) #17
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %status17 = getelementptr inbounds %struct.trace_event_raw_subflow_check_data_avail, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %status17 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %status, ptr %status17, align 4
  %skb18 = getelementptr inbounds %struct.trace_event_raw_subflow_check_data_avail, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %skb18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %skb, ptr %skb18, align 4
  %29 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rctx, align 4
  %31 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %30, ptr noundef %__data, i64 noundef 1, ptr noundef %32, ptr noundef %11, ptr noundef null) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mptcp_subflow_get_send(ptr noundef %__data, ptr noundef %subflow) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = ptrtoint ptr %subflow to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_mptcp_dump_mpext(ptr noundef %__data, ptr noundef %mpext) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = ptrtoint ptr %mpext to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_ack_update_msk(ptr noundef %__data, i64 noundef %data_ack, i64 noundef %old_snd_una, i64 noundef %new_snd_una, i64 noundef %new_wnd_end, i64 noundef %msk_wnd_end) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %data_ack, i64 noundef %old_snd_una, i64 noundef %new_snd_una, i64 noundef %new_wnd_end, i64 noundef %msk_wnd_end) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_subflow_check_data_avail(ptr noundef %__data, i8 noundef zeroext %status, ptr noundef %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %conv = zext i8 %status to i64
  %0 = ptrtoint ptr %skb to i32
  %conv4 = zext i32 %0 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #17
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @__mptcp_nmpc_socket(ptr noundef %msk) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %subflow = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 38
  %0 = ptrtoint ptr %subflow to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %subflow, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %do.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %can_ack = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 22
  %2 = ptrtoint ptr %can_ack to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load volatile i8, ptr %can_ack, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  %spec.select = select i1 %tobool1.not, ptr %1, ptr null
  br label %return

return:                                           ; preds = %do.end, %entry.return_crit_edge
  %retval.0 = phi ptr [ null, %entry.return_crit_edge ], [ %spec.select, %do.end ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_subflow_send_ack(ptr noundef %ssk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dep_map.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0) #17
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  %call.i = tail call zeroext i1 @__lock_sock_fast(ptr noundef %ssk) #17
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 4
  %2 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  %conv.i.i = zext i8 %3 to i32
  %shl.i = shl nuw i32 1, %conv.i.i
  %and.i = and i32 %shl.i, 1228
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @tcp_send_ack(ptr noundef %ssk) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  br i1 %call.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @release_sock(ptr noundef %ssk) #17
  br label %unlock_sock_fast.exit

if.else.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 4
  tail call void @lock_release(ptr noundef %dep_map.i, i32 noundef %1) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i) #17
  br label %unlock_sock_fast.exit

unlock_sock_fast.exit:                            ; preds = %if.else.i, %if.then.i
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @lock_sock_fast(ptr noundef %sk) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %dep_map = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0)
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_acquire(ptr noundef %dep_map, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %1) #17
  %call = tail call zeroext i1 @__lock_sock_fast(ptr noundef %sk) #17
  ret i1 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_send_ack(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @unlock_sock_fast(ptr noundef %sk, i1 noundef zeroext %slow) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  br i1 %slow, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @release_sock(ptr noundef %sk) #17
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %dep_map = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %0 = tail call ptr @llvm.returnaddress(i32 0)
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_release(ptr noundef %dep_map, i32 noundef %1) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_data_ready(ptr noundef %sk, ptr noundef %ssk) local_unnamed_addr #0 align 64 {
entry:
  %moved.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 13
  %0 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %icsk_ulp_data.i, align 8
  %disposable = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 1, i32 0, i32 13
  %2 = ptrtoint ptr %disposable to i32
  call void @__asan_load4_noabort(i32 %2)
  %bf.load = load i32, ptr %disposable, align 8
  %3 = and i32 %bf.load, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %do.end, label %entry.cleanup_crit_edge, !prof !340

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end:                                           ; preds = %entry
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 15
  %4 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %sk_rcvbuf, align 8
  %sk_rcvbuf8 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %6 = ptrtoint ptr %sk_rcvbuf8 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %sk_rcvbuf8, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp = icmp sgt i32 %5, %7
  br i1 %cmp, label %if.then15, label %do.end.if.end16_crit_edge, !prof !341

do.end.if.end16_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

if.then15:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %do.end.if.end16_crit_edge
  %sk_rbuf.0 = phi i32 [ %5, %if.then15 ], [ %7, %do.end.if.end16_crit_edge ]
  %sk_backlog.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i, i32 noundef 4) #17
  %8 = ptrtoint ptr %sk_backlog.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %sk_backlog.i, align 4
  %rmem_released.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 17
  %10 = ptrtoint ptr %rmem_released.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %rmem_released.i, align 8
  %sub.i = sub i32 %9, %11
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %sk_rbuf.0)
  %cmp18 = icmp sgt i32 %sub.i, %sk_rbuf.0
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end16
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %12 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %skc_net.i, align 4
  %mptcp_statistics.i = getelementptr inbounds %struct.net, ptr %13, i32 0, i32 30, i32 8
  %14 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mptcp_statistics.i, align 4
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %if.then19.cleanup_crit_edge, label %do.body3.i, !prof !341

if.then19.cleanup_crit_edge:                      ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body3.i:                                       ; preds = %if.then19
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %17 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mptcp_statistics.i, align 4
  %arrayidx.i = getelementptr [43 x i32], ptr %18, i32 0, i32 40
  %19 = ptrtoint ptr %arrayidx.i to i32
  %20 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cpu.i, align 4
  %arrayidx17.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx17.i, align 4
  %add.i = add i32 %25, %19
  %26 = inttoptr i32 %add.i to ptr
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  %add18.i = add i32 %28, 1
  store i32 %add18.i, ptr %26, align 4
  %29 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool29.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool29.not.i, label %if.then38.i, label %do.body3.i.do.end40.i_crit_edge, !prof !341

do.body3.i.do.end40.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i

if.then38.i:                                      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i

do.end40.i:                                       ; preds = %if.then38.i, %do.body3.i.do.end40.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %16) #17, !srcloc !348
  br label %cleanup

if.end21:                                         ; preds = %if.end16
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %moved.i) #17
  %30 = ptrtoint ptr %moved.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %moved.i, align 4
  %call.i = call fastcc zeroext i1 @__mptcp_move_skbs_from_subflow(ptr noundef %sk, ptr noundef %ssk, ptr noundef nonnull %moved.i) #17
  %call1.i = tail call fastcc zeroext i1 @__mptcp_ofo_queue(ptr noundef %sk) #17
  %sk_err.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 51
  %31 = ptrtoint ptr %sk_err.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %sk_err.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i42 = icmp eq i32 %32, 0
  br i1 %tobool.not.i42, label %if.end21.if.end6.i_crit_edge, label %if.then.i, !prof !340

if.end21.if.end6.i_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i

if.then.i:                                        ; preds = %if.end21
  %call4.i = tail call fastcc zeroext i1 @sock_owned_by_user(ptr noundef %sk) #17
  br i1 %call4.i, label %if.else.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mptcp_error_report(ptr noundef %sk) #17
  br label %if.end6.i

if.else.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  %cb_flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 19
  %33 = ptrtoint ptr %cb_flags.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cb_flags.i, align 4
  %or.i.i = or i32 %34, 8
  store i32 %or.i.i, ptr %cb_flags.i, align 4
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.else.i, %if.then5.i, %if.end21.if.end6.i_crit_edge
  %rcv_data_fin.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 24
  %35 = ptrtoint ptr %rcv_data_fin.i.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load volatile i8, ptr %rcv_data_fin.i.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool.not.i.i = icmp eq i8 %36, 0
  br i1 %tobool.not.i.i, label %if.end6.i.move_skbs_to_msk.exit_crit_edge, label %land.lhs.true.i.i

if.end6.i.move_skbs_to_msk.exit_crit_edge:        ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %move_skbs_to_msk.exit

land.lhs.true.i.i:                                ; preds = %if.end6.i
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %37 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %38 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i43 = and i32 %shl.i.i, 50
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i43)
  %tobool2.not.i.i = icmp eq i32 %and.i.i43, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.move_skbs_to_msk.exit_crit_edge, label %if.then.i.i

land.lhs.true.i.i.move_skbs_to_msk.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %move_skbs_to_msk.exit

if.then.i.i:                                      ; preds = %land.lhs.true.i.i
  %rcv_data_fin_seq7.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 7
  %39 = ptrtoint ptr %rcv_data_fin_seq7.i.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load volatile i64, ptr %rcv_data_fin_seq7.i.i, align 8
  %ack_seq.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 5
  %41 = ptrtoint ptr %ack_seq.i.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %ack_seq.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %42, i64 %40)
  %cmp.i.i = icmp eq i64 %42, %40
  br i1 %cmp.i.i, label %if.then8.i, label %if.then.i.i.move_skbs_to_msk.exit_crit_edge

if.then.i.i.move_skbs_to_msk.exit_crit_edge:      ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %move_skbs_to_msk.exit

if.then8.i:                                       ; preds = %if.then.i.i
  %43 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %44)
  %cmp.not.i.i = icmp eq i8 %44, 7
  br i1 %cmp.not.i.i, label %if.then8.i.move_skbs_to_msk.exit_crit_edge, label %land.lhs.true.i18.i

if.then8.i.move_skbs_to_msk.exit_crit_edge:       ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %move_skbs_to_msk.exit

land.lhs.true.i18.i:                              ; preds = %if.then8.i
  %work.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %45 = load ptr, ptr @system_wq, align 4
  %call.i.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %45, ptr noundef %work.i.i) #17
  br i1 %call.i.i.i.i, label %if.then.i19.i, label %land.lhs.true.i18.i.move_skbs_to_msk.exit_crit_edge

land.lhs.true.i18.i.move_skbs_to_msk.exit_crit_edge: ; preds = %land.lhs.true.i18.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %move_skbs_to_msk.exit

if.then.i19.i:                                    ; preds = %land.lhs.true.i18.i
  %skc_refcnt.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i.i, i32 1, i32 3, i32 1) #17
  %46 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i.i, ptr %skc_refcnt.i.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %46, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i.i, label %if.then.i19.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i.i, !prof !341

if.then.i19.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.then.i19.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i:                              ; preds = %if.then.i19.i
  %add.i.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i.i, 1
  %47 = or i32 %add.i.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %47)
  %.not.i.i.i.i.i.i = icmp sgt i32 %47, -1
  br i1 %.not.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.move_skbs_to_msk.exit_crit_edge, label %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i.i

if.else.i.i.i.i.i.i.move_skbs_to_msk.exit_crit_edge: ; preds = %if.else.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %move_skbs_to_msk.exit

if.end15.sink.split.i.i.i.i.i.i:                  ; preds = %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge, %if.then.i19.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i.i = phi i32 [ 2, %if.then.i19.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i.i, i32 noundef %.sink.i.i.i.i.i.i) #17
  br label %move_skbs_to_msk.exit

move_skbs_to_msk.exit:                            ; preds = %if.end15.sink.split.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.move_skbs_to_msk.exit_crit_edge, %land.lhs.true.i18.i.move_skbs_to_msk.exit_crit_edge, %if.then8.i.move_skbs_to_msk.exit_crit_edge, %if.then.i.i.move_skbs_to_msk.exit_crit_edge, %land.lhs.true.i.i.move_skbs_to_msk.exit_crit_edge, %if.end6.i.move_skbs_to_msk.exit_crit_edge
  %48 = ptrtoint ptr %moved.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %moved.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp.i.not = icmp eq i32 %49, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %moved.i) #17
  br i1 %cmp.i.not, label %move_skbs_to_msk.exit.if.end24_crit_edge, label %if.then23

move_skbs_to_msk.exit.if.end24_crit_edge:         ; preds = %move_skbs_to_msk.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24

if.then23:                                        ; preds = %move_skbs_to_msk.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sk_data_ready = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 77
  %50 = ptrtoint ptr %sk_data_ready to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %sk_data_ready, align 8
  tail call void %51(ptr noundef %sk) #17
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %move_skbs_to_msk.exit.if.end24_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %do.end40.i, %if.then19.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @MPTCP_INC_STATS(ptr nocapture noundef readonly %net, i32 noundef %field) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %mptcp_statistics = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 30, i32 8
  %0 = ptrtoint ptr %mptcp_statistics to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mptcp_statistics, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end47_crit_edge, label %do.body3, !prof !341

entry.if.end47_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end47

do.body3:                                         ; preds = %entry
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %3 = ptrtoint ptr %mptcp_statistics to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mptcp_statistics, align 4
  %arrayidx = getelementptr [43 x i32], ptr %4, i32 0, i32 %field
  %5 = ptrtoint ptr %arrayidx to i32
  %6 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu, align 4
  %arrayidx17 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx17, align 4
  %add = add i32 %11, %5
  %12 = inttoptr i32 %add to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %add18 = add i32 %14, 1
  store i32 %add18, ptr %12, align 4
  %15 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i = and i32 %15, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool29.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool29.not, label %if.then38, label %do.body3.do.end40_crit_edge, !prof !341

do.body3.do.end40_crit_edge:                      ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40

if.then38:                                        ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40

do.end40:                                         ; preds = %if.then38, %do.body3.do.end40_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %2) #17, !srcloc !348
  br label %if.end47

if.end47:                                         ; preds = %do.end40, %entry.if.end47_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @mptcp_schedule_work(ptr noundef %sk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %0 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %skc_state.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %1)
  %cmp.not = icmp eq i8 %1, 7
  br i1 %cmp.not, label %entry.return_crit_edge, label %land.lhs.true

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

land.lhs.true:                                    ; preds = %entry
  %work = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %2 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %2, ptr noundef %work) #17
  br i1 %call.i.i, label %if.then, label %land.lhs.true.return_crit_edge

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.then:                                          ; preds = %land.lhs.true
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !341

if.then.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %4 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %4)
  %.not.i.i.i.i = icmp sgt i32 %4, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.return_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.return_crit_edge:                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #17
  br label %return

return:                                           ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.return_crit_edge, %land.lhs.true.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %land.lhs.true.return_crit_edge ], [ false, %entry.return_crit_edge ], [ true, %if.else.i.i.i.i.return_crit_edge ], [ true, %if.end15.sink.split.i.i.i.i ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_subflow_eof(ptr noundef %sk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %call1 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %flags) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %0 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %1)
  %cmp.not.i = icmp eq i8 %1, 7
  br i1 %cmp.not.i, label %if.then.if.end_crit_edge, label %land.lhs.true.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true.i:                                  ; preds = %if.then
  %work.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %2 = load ptr, ptr @system_wq, align 4
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %2, ptr noundef %work.i) #17
  br i1 %call.i.i.i, label %if.then.i, label %land.lhs.true.i.if.end_crit_edge

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then.i:                                        ; preds = %land.lhs.true.i
  %skc_refcnt.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i, i32 1, i32 3, i32 1) #17
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i, ptr %skc_refcnt.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !341

if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %4 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %4)
  %.not.i.i.i.i.i = icmp sgt i32 %4, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.if.end_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.if.end_crit_edge:               ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %if.end

if.end:                                           ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_subflow_set_active(ptr nocapture noundef %subflow) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %stale = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1, i32 0, i32 13
  %0 = ptrtoint ptr %stale to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %stale, align 8
  %1 = and i32 %bf.load, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end:                                           ; preds = %entry
  %bf.clear3 = and i32 %bf.load, -4097
  %2 = ptrtoint ptr %stale to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %bf.clear3, ptr %stale, align 8
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %3 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tcp_sock.i, align 8
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %4, i32 0, i32 9
  %5 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %skc_net.i, align 4
  %mptcp_statistics.i = getelementptr inbounds %struct.net, ptr %6, i32 0, i32 30, i32 8
  %7 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mptcp_statistics.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end.return_crit_edge, label %do.body3.i, !prof !341

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

do.body3.i:                                       ; preds = %if.end
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %10 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mptcp_statistics.i, align 4
  %arrayidx.i = getelementptr [43 x i32], ptr %11, i32 0, i32 42
  %12 = ptrtoint ptr %arrayidx.i to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu.i, align 4
  %arrayidx17.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx17.i, align 4
  %add.i = add i32 %18, %12
  %19 = inttoptr i32 %add.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add18.i = add i32 %21, 1
  store i32 %add18.i, ptr %19, align 4
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i = and i32 %22, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool29.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool29.not.i, label %if.then38.i, label %do.body3.i.do.end40.i_crit_edge, !prof !341

do.body3.i.do.end40.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i

if.then38.i:                                      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i

do.end40.i:                                       ; preds = %if.then38.i, %do.body3.i.do.end40.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %9) #17, !srcloc !348
  br label %return

return:                                           ; preds = %do.end40.i, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @mptcp_subflow_active(ptr nocapture noundef %subflow) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %stale = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1, i32 0, i32 13
  %0 = ptrtoint ptr %stale to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %stale, align 8
  %1 = and i32 %bf.load, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then, !prof !340

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.then:                                          ; preds = %entry
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %2 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tcp_sock.i, align 8
  %rcv_tstamp4 = getelementptr inbounds %struct.tcp_sock, ptr %3, i32 0, i32 18
  %4 = ptrtoint ptr %rcv_tstamp4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %rcv_tstamp4, align 4
  %stale_rcv_tstamp = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 4
  %6 = ptrtoint ptr %stale_rcv_tstamp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %stale_rcv_tstamp, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %5)
  %cmp = icmp eq i32 %7, %5
  br i1 %cmp, label %if.then.return_crit_edge, label %cleanup.thread

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

cleanup.thread:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_subflow_set_active(ptr noundef %subflow)
  br label %if.end6

if.end6:                                          ; preds = %cleanup.thread, %entry.if.end6_crit_edge
  %8 = ptrtoint ptr %stale to i32
  call void @__asan_load4_noabort(i32 %8)
  %bf.load.i = load i32, ptr %stale, align 8
  %9 = and i32 %bf.load.i, 1140850688
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %9)
  %10 = icmp eq i32 %9, 1073741824
  br i1 %10, label %if.end6.return_crit_edge, label %if.end.i

if.end6.return_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %return

if.end.i:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %11 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tcp_sock.i.i, align 8
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %12, i32 0, i32 4
  %13 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i = zext i8 %14 to i32
  %shl.i = shl nuw i32 1, %conv.i
  %and.i = and i32 %shl.i, 258
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.i = icmp ne i32 %and.i, 0
  br label %return

return:                                           ; preds = %if.end.i, %if.end6.return_crit_edge, %if.then.return_crit_edge
  %retval.1 = phi i1 [ false, %if.then.return_crit_edge ], [ %tobool5.i, %if.end.i ], [ false, %if.end6.return_crit_edge ]
  ret i1 %retval.1
}

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @mptcp_check_and_set_pending(ptr noundef %sk) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %first_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %0 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %first_pending.i, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %push_pending = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 20
  %2 = ptrtoint ptr %push_pending to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %push_pending, align 4
  %or = or i32 %3, 2
  store i32 %or, ptr %push_pending, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__mptcp_push_pending(ptr noundef %sk, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.mptcp_sendmsg_info, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %info) #17
  %0 = call ptr @memset(ptr %info, i32 0, i32 20)
  %flags1 = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 4
  %1 = ptrtoint ptr %flags1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %flags, ptr %flags1, align 4
  %first_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %2 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %first_pending.i, align 8
  %tobool.not104 = icmp eq ptr %3, null
  br i1 %tobool.not104, label %entry.out_crit_edge, label %while.body.lr.ph

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

while.body.lr.ph:                                 ; preds = %entry
  %sent = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 3
  %limit = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 2
  %size_goal.i = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 1
  %snd_burst.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 10
  %snd_nxt.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %rtx_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35
  br label %while.body

while.body:                                       ; preds = %do.body31.while.body_crit_edge, %while.body.lr.ph
  %4 = phi ptr [ %3, %while.body.lr.ph ], [ %42, %do.body31.while.body_crit_edge ]
  %copied.0106 = phi i32 [ 0, %while.body.lr.ph ], [ %copied.1.lcssa, %do.body31.while.body_crit_edge ]
  %ssk.0105 = phi ptr [ null, %while.body.lr.ph ], [ %ssk.1.lcssa, %do.body31.while.body_crit_edge ]
  %already_sent = getelementptr inbounds %struct.mptcp_data_frag, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %already_sent, align 2
  %7 = ptrtoint ptr %sent to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %sent, align 2
  %data_len = getelementptr inbounds %struct.mptcp_data_frag, ptr %4, i32 0, i32 2
  %8 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %data_len, align 8
  %10 = ptrtoint ptr %limit to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %limit, align 4
  %conv = zext i16 %9 to i32
  %conv5 = zext i16 %6 to i32
  %sub = sub nsw i32 %conv, %conv5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp99 = icmp sgt i32 %sub, 0
  br i1 %cmp99, label %while.body8.lr.ph, label %while.body.do.body31_crit_edge

while.body.do.body31_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body31

while.body8.lr.ph:                                ; preds = %while.body
  %data_seq.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %4, i32 0, i32 1
  br label %while.body8

while.body8:                                      ; preds = %cleanup.while.body8_crit_edge, %while.body8.lr.ph
  %copied.1102 = phi i32 [ %copied.0106, %while.body8.lr.ph ], [ %add28, %cleanup.while.body8_crit_edge ]
  %len.0101 = phi i32 [ %sub, %while.body8.lr.ph ], [ %sub29, %cleanup.while.body8_crit_edge ]
  %ssk.1100 = phi ptr [ %ssk.0105, %while.body8.lr.ph ], [ %call9, %cleanup.while.body8_crit_edge ]
  %call9 = call fastcc ptr @mptcp_subflow_get_send(ptr noundef %sk)
  %cmp10.not = icmp eq ptr %call9, %ssk.1100
  %tobool12.not = icmp eq ptr %ssk.1100, null
  %or.cond = or i1 %tobool12.not, %cmp10.not
  br i1 %or.cond, label %while.body8.if.end_crit_edge, label %if.then

while.body8.if.end_crit_edge:                     ; preds = %while.body8
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %while.body8
  call void @__sanitizer_cov_trace_pc() #19
  %11 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %info, align 4
  %nonagle.i = getelementptr inbounds %struct.tcp_sock, ptr %ssk.1100, i32 0, i32 37
  %13 = ptrtoint ptr %nonagle.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %bf.load.i = load i16, ptr %nonagle.i, align 4
  %14 = lshr i16 %bf.load.i, 4
  %15 = and i16 %14, 15
  %conv.i = zext i16 %15 to i32
  %16 = ptrtoint ptr %size_goal.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %size_goal.i, align 4
  call void @tcp_push(ptr noundef nonnull %ssk.1100, i32 noundef 0, i32 noundef %12, i32 noundef %conv.i, i32 noundef %17) #17
  call void @release_sock(ptr noundef nonnull %ssk.1100) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body8.if.end_crit_edge
  %tobool13.not = icmp eq ptr %call9, null
  br i1 %tobool13.not, label %if.end.out_crit_edge, label %if.end15

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end15:                                         ; preds = %if.end
  br i1 %cmp10.not, label %if.end15.if.end19_crit_edge, label %if.then18

if.end15.if.end19_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19

if.then18:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #19
  call void @lock_sock_nested(ptr noundef nonnull %call9, i32 noundef 0) #17
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.end15.if.end19_crit_edge
  %call20 = call fastcc i32 @mptcp_sendmsg_frag(ptr noundef %sk, ptr noundef nonnull %call9, ptr noundef nonnull %4, ptr noundef nonnull %info)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call20)
  %cmp21 = icmp slt i32 %call20, 1
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #19
  %18 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %info, align 4
  %nonagle.i77 = getelementptr inbounds %struct.tcp_sock, ptr %call9, i32 0, i32 37
  %20 = ptrtoint ptr %nonagle.i77 to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load.i78 = load i16, ptr %nonagle.i77, align 4
  %21 = lshr i16 %bf.load.i78, 4
  %22 = and i16 %21, 15
  %conv.i79 = zext i16 %22 to i32
  %23 = ptrtoint ptr %size_goal.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %size_goal.i, align 4
  call void @tcp_push(ptr noundef nonnull %call9, i32 noundef 0, i32 noundef %19, i32 noundef %conv.i79, i32 noundef %24) #17
  br label %out.sink.split

if.end24:                                         ; preds = %if.end19
  %25 = ptrtoint ptr %sent to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %sent, align 2
  %27 = trunc i32 %call20 to i16
  %conv27 = add i16 %26, %27
  store i16 %conv27, ptr %sent, align 2
  %add28 = add i32 %call20, %copied.1102
  %sub29 = sub nsw i32 %len.0101, %call20
  %28 = ptrtoint ptr %data_seq.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %data_seq.i, align 8
  %30 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %already_sent, align 2
  %conv1.i = add i16 %31, %27
  store i16 %conv1.i, ptr %already_sent, align 2
  %32 = ptrtoint ptr %snd_burst.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %snd_burst.i, align 8
  %sub.i = sub i32 %33, %call20
  store i32 %sub.i, ptr %snd_burst.i, align 8
  %34 = load i16, ptr %already_sent, align 2
  %conv3.i = zext i16 %34 to i64
  %add4.i = add i64 %29, %conv3.i
  %35 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %snd_nxt.i, align 8
  %sub.i.i = sub i64 %36, %add4.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i.i)
  %cmp.i.i = icmp slt i64 %sub.i.i, 0
  br i1 %cmp.i.i, label %if.then.i, label %if.end24.cleanup_crit_edge, !prof !340

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then.i:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #19
  %37 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %add4.i, ptr %snd_nxt.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end24.cleanup_crit_edge
  %cmp = icmp sgt i32 %sub29, 0
  br i1 %cmp, label %cleanup.while.body8_crit_edge, label %cleanup.do.body31_crit_edge

cleanup.do.body31_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body31

cleanup.while.body8_crit_edge:                    ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body8

do.body31:                                        ; preds = %cleanup.do.body31_crit_edge, %while.body.do.body31_crit_edge
  %ssk.1.lcssa = phi ptr [ %ssk.0105, %while.body.do.body31_crit_edge ], [ %call9, %cleanup.do.body31_crit_edge ]
  %copied.1.lcssa = phi i32 [ %copied.0106, %while.body.do.body31_crit_edge ], [ %add28, %cleanup.do.body31_crit_edge ]
  %38 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %first_pending.i, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %cmp.i.not.i = icmp eq ptr %41, %rtx_queue.i
  %spec.select.i = select i1 %cmp.i.not.i, ptr null, ptr %41
  store volatile ptr %spec.select.i, ptr %first_pending.i, align 8
  %42 = load volatile ptr, ptr %first_pending.i, align 8
  %tobool.not = icmp eq ptr %42, null
  br i1 %tobool.not, label %while.end37, label %do.body31.while.body_crit_edge

do.body31.while.body_crit_edge:                   ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body

while.end37:                                      ; preds = %do.body31
  %tobool38.not = icmp eq ptr %ssk.1.lcssa, null
  br i1 %tobool38.not, label %while.end37.out_crit_edge, label %if.then39

while.end37.out_crit_edge:                        ; preds = %while.end37
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.then39:                                        ; preds = %while.end37
  call void @__sanitizer_cov_trace_pc() #19
  %43 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %info, align 4
  %nonagle.i82 = getelementptr inbounds %struct.tcp_sock, ptr %ssk.1.lcssa, i32 0, i32 37
  %45 = ptrtoint ptr %nonagle.i82 to i32
  call void @__asan_load2_noabort(i32 %45)
  %bf.load.i83 = load i16, ptr %nonagle.i82, align 4
  %46 = lshr i16 %bf.load.i83, 4
  %47 = and i16 %46, 15
  %conv.i84 = zext i16 %47 to i32
  %size_goal.i85 = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 1
  %48 = ptrtoint ptr %size_goal.i85 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %size_goal.i85, align 4
  call void @tcp_push(ptr noundef nonnull %ssk.1.lcssa, i32 noundef 0, i32 noundef %44, i32 noundef %conv.i84, i32 noundef %49) #17
  br label %out.sink.split

out.sink.split:                                   ; preds = %if.then39, %if.then23
  %call9.lcssa116.sink = phi ptr [ %call9, %if.then23 ], [ %ssk.1.lcssa, %if.then39 ]
  %copied.3.ph = phi i32 [ %copied.1102, %if.then23 ], [ %copied.1.lcssa, %if.then39 ]
  call void @release_sock(ptr noundef nonnull %call9.lcssa116.sink) #17
  br label %out

out:                                              ; preds = %out.sink.split, %while.end37.out_crit_edge, %if.end.out_crit_edge, %entry.out_crit_edge
  %copied.3 = phi i32 [ %copied.1.lcssa, %while.end37.out_crit_edge ], [ 0, %entry.out_crit_edge ], [ %copied.3.ph, %out.sink.split ], [ %copied.1102, %if.end.out_crit_edge ]
  %pprev.i.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4, i32 0, i32 1
  %50 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.i.i.not = icmp eq ptr %51, null
  br i1 %tobool.not.i.i.i.not, label %if.then42, label %out.if.end43_crit_edge

out.if.end43_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

if.then42:                                        ; preds = %out
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %52 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load volatile i8, ptr %skc_state.i.i, align 2
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %53)
  %cmp.i = icmp eq i8 %53, 7
  br i1 %cmp.i, label %if.then42.if.end43_crit_edge, label %if.end.i, !prof !341

if.then42.if.end43_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

if.end.i:                                         ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #19
  %timer_ival.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 15
  %54 = ptrtoint ptr %timer_ival.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %timer_ival.i, align 8
  %icsk_retransmit_timer.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %56 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %56, %55
  call void @sk_reset_timer(ptr noundef %sk, ptr noundef %icsk_retransmit_timer.i, i32 noundef %add.i) #17
  br label %if.end43

if.end43:                                         ; preds = %if.end.i, %if.then42.if.end43_crit_edge, %out.if.end43_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %copied.3)
  %tobool44.not = icmp eq i32 %copied.3, 0
  br i1 %tobool44.not, label %if.end43.if.end46_crit_edge, label %if.then45

if.end43.if.end46_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end46

if.then45:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @__mptcp_check_send_data_fin(ptr noundef %sk)
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %if.end43.if.end46_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %info) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @mptcp_subflow_get_send(ptr noundef %msk) unnamed_addr #0 align 64 {
entry:
  %send_info = alloca [2 x %struct.subflow_send_info], align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %send_info) #17
  %0 = call ptr @memset(ptr %send_info, i32 255, i32 32)
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 4, i32 3
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lockdep_sock_is_held.exit.i, label %entry.sock_owned_by_me.exit_crit_edge

entry.sock_owned_by_me.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit

lockdep_sock_is_held.exit.i:                      ; preds = %entry
  %dep_map2.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i)
  %tobool4.i.not.i = icmp eq i32 %call.i6.i.i, 0
  br i1 %tobool4.i.not.i, label %land.rhs.i, label %lockdep_sock_is_held.exit.i.sock_owned_by_me.exit_crit_edge

lockdep_sock_is_held.exit.i.sock_owned_by_me.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit

land.rhs.i:                                       ; preds = %lockdep_sock_is_held.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %land.rhs.i.sock_owned_by_me.exit_crit_edge, label %land.rhs3.i

land.rhs.i.sock_owned_by_me.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit

land.rhs3.i:                                      ; preds = %land.rhs.i
  %.b40.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i, label %land.rhs3.i.sock_owned_by_me.exit_crit_edge, label %if.then.i, !prof !340

land.rhs3.i.sock_owned_by_me.exit_crit_edge:      ; preds = %land.rhs3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit

if.then.i:                                        ; preds = %land.rhs3.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_me.exit

sock_owned_by_me.exit:                            ; preds = %if.then.i, %land.rhs3.i.sock_owned_by_me.exit_crit_edge, %land.rhs.i.sock_owned_by_me.exit_crit_edge, %lockdep_sock_is_held.exit.i.sock_owned_by_me.exit_crit_edge, %entry.sock_owned_by_me.exit_crit_edge
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 18
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags.i, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not = icmp eq i32 %4, 0
  br i1 %tobool.i.not, label %if.end5, label %if.then

if.then:                                          ; preds = %sock_owned_by_me.exit
  %first = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 39
  %5 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %first, align 8
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %if.then
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %6, i32 0, i32 22
  %7 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %sk_wmem_queued.i.i, align 8
  %sk_sndbuf.i.i = getelementptr inbounds %struct.sock, ptr %6, i32 0, i32 21
  %9 = ptrtoint ptr %sk_sndbuf.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %sk_sndbuf.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %10)
  %cmp.not.i.i = icmp slt i32 %8, %10
  br i1 %cmp.not.i.i, label %if.end.i.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %6, i32 0, i32 8
  %11 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %skc_prot.i.i, align 8
  %stream_memory_free.i.i = getelementptr inbounds %struct.proto, ptr %12, i32 0, i32 28
  %13 = ptrtoint ptr %stream_memory_free.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %stream_memory_free.i.i, align 4
  %tobool.not.i.i206 = icmp eq ptr %14, null
  br i1 %tobool.not.i.i206, label %if.end.i.i.cond.true_crit_edge, label %sk_stream_memory_free.exit

if.end.i.i.cond.true_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.true

sk_stream_memory_free.exit:                       ; preds = %if.end.i.i
  %call.i.i = tail call zeroext i1 %14(ptr noundef nonnull %6, i32 noundef 0) #17
  br i1 %call.i.i, label %sk_stream_memory_free.exit.cond.true_crit_edge, label %sk_stream_memory_free.exit.cleanup_crit_edge

sk_stream_memory_free.exit.cleanup_crit_edge:     ; preds = %sk_stream_memory_free.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sk_stream_memory_free.exit.cond.true_crit_edge:   ; preds = %sk_stream_memory_free.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.true

cond.true:                                        ; preds = %sk_stream_memory_free.exit.cond.true_crit_edge, %if.end.i.i.cond.true_crit_edge
  %15 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %first, align 8
  br label %cleanup

if.end5:                                          ; preds = %sock_owned_by_me.exit
  %last_snd = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 9
  %17 = ptrtoint ptr %last_snd to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %last_snd, align 4
  %tobool6.not = icmp eq ptr %18, null
  br i1 %tobool6.not, label %if.end5.if.end16_crit_edge, label %land.lhs.true

if.end5.if.end16_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

land.lhs.true:                                    ; preds = %if.end5
  %snd_burst = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 10
  %19 = ptrtoint ptr %snd_burst to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %snd_burst, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp = icmp sgt i32 %20, 0
  br i1 %cmp, label %land.lhs.true7, label %land.lhs.true.if.end16_crit_edge

land.lhs.true.if.end16_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

land.lhs.true7:                                   ; preds = %land.lhs.true
  %sk_wmem_queued.i.i207 = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 22
  %21 = ptrtoint ptr %sk_wmem_queued.i.i207 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %sk_wmem_queued.i.i207, align 8
  %sk_sndbuf.i.i208 = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 21
  %23 = ptrtoint ptr %sk_sndbuf.i.i208 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %sk_sndbuf.i.i208, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %24)
  %cmp.not.i.i209 = icmp slt i32 %22, %24
  br i1 %cmp.not.i.i209, label %if.end.i.i213, label %land.lhs.true7.if.end16_crit_edge

land.lhs.true7.if.end16_crit_edge:                ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

if.end.i.i213:                                    ; preds = %land.lhs.true7
  %skc_prot.i.i210 = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 8
  %25 = ptrtoint ptr %skc_prot.i.i210 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %skc_prot.i.i210, align 8
  %stream_memory_free.i.i211 = getelementptr inbounds %struct.proto, ptr %26, i32 0, i32 28
  %27 = ptrtoint ptr %stream_memory_free.i.i211 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %stream_memory_free.i.i211, align 4
  %tobool.not.i.i212 = icmp eq ptr %28, null
  br i1 %tobool.not.i.i212, label %if.end.i.i213.land.lhs.true10_crit_edge, label %sk_stream_memory_free.exit217

if.end.i.i213.land.lhs.true10_crit_edge:          ; preds = %if.end.i.i213
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true10

sk_stream_memory_free.exit217:                    ; preds = %if.end.i.i213
  %call.i.i214 = tail call zeroext i1 %28(ptr noundef nonnull %18, i32 noundef 0) #17
  br i1 %call.i.i214, label %sk_stream_memory_free.exit217.land.lhs.true10_crit_edge, label %sk_stream_memory_free.exit217.if.end16_crit_edge

sk_stream_memory_free.exit217.if.end16_crit_edge: ; preds = %sk_stream_memory_free.exit217
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

sk_stream_memory_free.exit217.land.lhs.true10_crit_edge: ; preds = %sk_stream_memory_free.exit217
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true10

land.lhs.true10:                                  ; preds = %sk_stream_memory_free.exit217.land.lhs.true10_crit_edge, %if.end.i.i213.land.lhs.true10_crit_edge
  %29 = ptrtoint ptr %last_snd to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %last_snd, align 4
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %30, i32 0, i32 13
  %31 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %icsk_ulp_data.i, align 8
  %stale.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %32, i32 0, i32 1, i32 0, i32 13
  %33 = ptrtoint ptr %stale.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %bf.load.i = load i32, ptr %stale.i, align 8
  %34 = and i32 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.not.i218 = icmp eq i32 %34, 0
  br i1 %tobool.not.i218, label %land.lhs.true10.if.end6.i_crit_edge, label %if.then.i219, !prof !340

land.lhs.true10.if.end6.i_crit_edge:              ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i

if.then.i219:                                     ; preds = %land.lhs.true10
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %32, i32 0, i32 5
  %35 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %tcp_sock.i.i, align 8
  %rcv_tstamp4.i = getelementptr inbounds %struct.tcp_sock, ptr %36, i32 0, i32 18
  %37 = ptrtoint ptr %rcv_tstamp4.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %rcv_tstamp4.i, align 4
  %stale_rcv_tstamp.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %32, i32 0, i32 4
  %39 = ptrtoint ptr %stale_rcv_tstamp.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %stale_rcv_tstamp.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %38)
  %cmp.i = icmp eq i32 %40, %38
  br i1 %cmp.i, label %if.then.i219.if.end16_crit_edge, label %cleanup.thread.i

if.then.i219.if.end16_crit_edge:                  ; preds = %if.then.i219
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

cleanup.thread.i:                                 ; preds = %if.then.i219
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_subflow_set_active(ptr noundef %32) #17
  br label %if.end6.i

if.end6.i:                                        ; preds = %cleanup.thread.i, %land.lhs.true10.if.end6.i_crit_edge
  %41 = ptrtoint ptr %stale.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %bf.load.i.i = load i32, ptr %stale.i, align 8
  %42 = and i32 %bf.load.i.i, 1140850688
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %42)
  %43 = icmp eq i32 %42, 1073741824
  br i1 %43, label %if.end6.i.if.end16_crit_edge, label %mptcp_subflow_active.exit

if.end6.i.if.end16_crit_edge:                     ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

mptcp_subflow_active.exit:                        ; preds = %if.end6.i
  %tcp_sock.i.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %32, i32 0, i32 5
  %44 = ptrtoint ptr %tcp_sock.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %tcp_sock.i.i.i, align 8
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %45, i32 0, i32 4
  %46 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %47 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, 258
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.i.i.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool5.i.i.not, label %mptcp_subflow_active.exit.if.end16_crit_edge, label %if.then14

mptcp_subflow_active.exit.if.end16_crit_edge:     ; preds = %mptcp_subflow_active.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end16

if.then14:                                        ; preds = %mptcp_subflow_active.exit
  %conn_list.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 34
  %48 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %subflow.018.i = load ptr, ptr %conn_list.i, align 8
  %cmp.not19.i = icmp eq ptr %subflow.018.i, %conn_list.i
  br i1 %cmp.not19.i, label %if.then14.mptcp_set_timeout.exit_crit_edge, label %if.then14.for.body.i_crit_edge

if.then14.for.body.i_crit_edge:                   ; preds = %if.then14
  br label %for.body.i

if.then14.mptcp_set_timeout.exit_crit_edge:       ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_set_timeout.exit

for.body.i:                                       ; preds = %mptcp_timeout_from_subflow.exit.i.for.body.i_crit_edge, %if.then14.for.body.i_crit_edge
  %subflow.021.i = phi ptr [ %subflow.0.i, %mptcp_timeout_from_subflow.exit.i.for.body.i_crit_edge ], [ %subflow.018.i, %if.then14.for.body.i_crit_edge ]
  %tout.020.i = phi i32 [ %58, %mptcp_timeout_from_subflow.exit.i.for.body.i_crit_edge ], [ 0, %if.then14.for.body.i_crit_edge ]
  %tcp_sock.i.i.i221 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.021.i, i32 0, i32 5
  %49 = ptrtoint ptr %tcp_sock.i.i.i221 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %tcp_sock.i.i.i221, align 8
  %icsk_pending.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %50, i32 0, i32 19
  %51 = ptrtoint ptr %icsk_pending.i.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %icsk_pending.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool.not.i.i222 = icmp eq i8 %52, 0
  br i1 %tobool.not.i.i222, label %for.body.i.mptcp_timeout_from_subflow.exit.i_crit_edge, label %land.lhs.true.i.i

for.body.i.mptcp_timeout_from_subflow.exit.i_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_timeout_from_subflow.exit.i

land.lhs.true.i.i:                                ; preds = %for.body.i
  %stale_count.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.021.i, i32 0, i32 1, i32 0, i32 23
  %53 = ptrtoint ptr %stale_count.i.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %stale_count.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool2.not.i.i = icmp eq i8 %54, 0
  br i1 %tobool2.not.i.i, label %cond.true.i.i223, label %land.lhs.true.i.i.mptcp_timeout_from_subflow.exit.i_crit_edge

land.lhs.true.i.i.mptcp_timeout_from_subflow.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_timeout_from_subflow.exit.i

cond.true.i.i223:                                 ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %icsk_timeout.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %50, i32 0, i32 3
  %55 = ptrtoint ptr %icsk_timeout.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %icsk_timeout.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %57 = load volatile i32, ptr @jiffies, align 128
  %sub.i.i = sub i32 %56, %57
  br label %mptcp_timeout_from_subflow.exit.i

mptcp_timeout_from_subflow.exit.i:                ; preds = %cond.true.i.i223, %land.lhs.true.i.i.mptcp_timeout_from_subflow.exit.i_crit_edge, %for.body.i.mptcp_timeout_from_subflow.exit.i_crit_edge
  %cond.i.i = phi i32 [ %sub.i.i, %cond.true.i.i223 ], [ 0, %land.lhs.true.i.i.mptcp_timeout_from_subflow.exit.i_crit_edge ], [ 0, %for.body.i.mptcp_timeout_from_subflow.exit.i_crit_edge ]
  %58 = tail call i32 @llvm.smax.i32(i32 %tout.020.i, i32 %cond.i.i) #17
  %59 = ptrtoint ptr %subflow.021.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %subflow.0.i = load ptr, ptr %subflow.021.i, align 8
  %cmp.not.i = icmp eq ptr %subflow.0.i, %conn_list.i
  br i1 %cmp.not.i, label %for.end.i, label %mptcp_timeout_from_subflow.exit.i.for.body.i_crit_edge

mptcp_timeout_from_subflow.exit.i.for.body.i_crit_edge: ; preds = %mptcp_timeout_from_subflow.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.end.i:                                        ; preds = %mptcp_timeout_from_subflow.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %cmp.i.i = icmp sgt i32 %58, 0
  %spec.select.i = select i1 %cmp.i.i, i32 %58, i32 20
  br label %mptcp_set_timeout.exit

mptcp_set_timeout.exit:                           ; preds = %for.end.i, %if.then14.mptcp_set_timeout.exit_crit_edge
  %60 = phi i32 [ 20, %if.then14.mptcp_set_timeout.exit_crit_edge ], [ %spec.select.i, %for.end.i ]
  %timer_ival.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 15
  %61 = ptrtoint ptr %timer_ival.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %timer_ival.i.i, align 8
  %62 = ptrtoint ptr %last_snd to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %last_snd, align 4
  br label %cleanup

if.end16:                                         ; preds = %mptcp_subflow_active.exit.if.end16_crit_edge, %if.end6.i.if.end16_crit_edge, %if.then.i219.if.end16_crit_edge, %sk_stream_memory_free.exit217.if.end16_crit_edge, %land.lhs.true7.if.end16_crit_edge, %land.lhs.true.if.end16_crit_edge, %if.end5.if.end16_crit_edge
  %64 = ptrtoint ptr %send_info to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr null, ptr %send_info, align 8
  %linger_time20 = getelementptr inbounds [2 x %struct.subflow_send_info], ptr %send_info, i32 0, i32 0, i32 1
  %65 = ptrtoint ptr %linger_time20 to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 -1, ptr %linger_time20, align 8
  %arrayidx.1 = getelementptr inbounds [2 x %struct.subflow_send_info], ptr %send_info, i32 0, i32 1
  %66 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %arrayidx.1, align 8
  %linger_time20.1 = getelementptr inbounds [2 x %struct.subflow_send_info], ptr %send_info, i32 0, i32 1, i32 1
  %67 = ptrtoint ptr %linger_time20.1 to i32
  call void @__asan_store8_noabort(i32 %67)
  store i64 -1, ptr %linger_time20.1, align 8
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 34
  %68 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %68)
  %subflow.0392 = load ptr, ptr %conn_list, align 8
  %cmp23.not393 = icmp eq ptr %subflow.0392, %conn_list
  br i1 %cmp23.not393, label %.thread, label %if.end16.for.body24_crit_edge

if.end16.for.body24_crit_edge:                    ; preds = %if.end16
  br label %for.body24

.thread:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  %timer_ival.i403 = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 15
  %69 = ptrtoint ptr %timer_ival.i403 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 20, ptr %timer_ival.i403, align 8
  br label %if.then89

for.body24:                                       ; preds = %for.inc81.for.body24_crit_edge, %if.end16.for.body24_crit_edge
  %subflow.0396 = phi ptr [ %subflow.0, %for.inc81.for.body24_crit_edge ], [ %subflow.0392, %if.end16.for.body24_crit_edge ]
  %nr_active.0395 = phi i32 [ %nr_active.1, %for.inc81.for.body24_crit_edge ], [ 0, %if.end16.for.body24_crit_edge ]
  %tout.0394 = phi i32 [ %tout.1, %for.inc81.for.body24_crit_edge ], [ 0, %if.end16.for.body24_crit_edge ]
  tail call fastcc void @trace_mptcp_subflow_get_send(ptr noundef %subflow.0396)
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0396, i32 0, i32 5
  %70 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %tcp_sock.i, align 8
  %stale.i224 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0396, i32 0, i32 1, i32 0, i32 13
  %72 = ptrtoint ptr %stale.i224 to i32
  call void @__asan_load4_noabort(i32 %72)
  %bf.load.i225 = load i32, ptr %stale.i224, align 8
  %73 = and i32 %bf.load.i225, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %tobool.not.i226 = icmp eq i32 %73, 0
  br i1 %tobool.not.i226, label %for.body24.if.end6.i234_crit_edge, label %if.then.i231, !prof !340

for.body24.if.end6.i234_crit_edge:                ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i234

if.then.i231:                                     ; preds = %for.body24
  %rcv_tstamp4.i228 = getelementptr inbounds %struct.tcp_sock, ptr %71, i32 0, i32 18
  %74 = ptrtoint ptr %rcv_tstamp4.i228 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %rcv_tstamp4.i228, align 4
  %stale_rcv_tstamp.i229 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0396, i32 0, i32 4
  %76 = ptrtoint ptr %stale_rcv_tstamp.i229 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %stale_rcv_tstamp.i229, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %77, i32 %75)
  %cmp.i230 = icmp eq i32 %77, %75
  br i1 %cmp.i230, label %if.then.i231.for.inc81_crit_edge, label %cleanup.thread.i232

if.then.i231.for.inc81_crit_edge:                 ; preds = %if.then.i231
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc81

cleanup.thread.i232:                              ; preds = %if.then.i231
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_subflow_set_active(ptr noundef %subflow.0396) #17
  br label %if.end6.i234

if.end6.i234:                                     ; preds = %cleanup.thread.i232, %for.body24.if.end6.i234_crit_edge
  %78 = ptrtoint ptr %stale.i224 to i32
  call void @__asan_load4_noabort(i32 %78)
  %bf.load.i.i233 = load i32, ptr %stale.i224, align 8
  %79 = and i32 %bf.load.i.i233, 1140850688
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %79)
  %80 = icmp eq i32 %79, 1073741824
  br i1 %80, label %if.end6.i234.for.inc81_crit_edge, label %mptcp_subflow_active.exit243

if.end6.i234.for.inc81_crit_edge:                 ; preds = %if.end6.i234
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc81

mptcp_subflow_active.exit243:                     ; preds = %if.end6.i234
  %81 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %tcp_sock.i, align 8
  %skc_state.i.i236 = getelementptr inbounds %struct.sock_common, ptr %82, i32 0, i32 4
  %83 = ptrtoint ptr %skc_state.i.i236 to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load volatile i8, ptr %skc_state.i.i236, align 2
  %conv.i.i237 = zext i8 %84 to i32
  %shl.i.i238 = shl nuw i32 1, %conv.i.i237
  %and.i.i239 = and i32 %shl.i.i238, 258
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i239)
  %tobool5.i.i240.not = icmp eq i32 %and.i.i239, 0
  br i1 %tobool5.i.i240.not, label %mptcp_subflow_active.exit243.for.inc81_crit_edge, label %if.end28

mptcp_subflow_active.exit243.for.inc81_crit_edge: ; preds = %mptcp_subflow_active.exit243
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc81

if.end28:                                         ; preds = %mptcp_subflow_active.exit243
  %85 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %tcp_sock.i, align 8
  %icsk_pending.i = getelementptr inbounds %struct.inet_connection_sock, ptr %86, i32 0, i32 19
  %87 = ptrtoint ptr %icsk_pending.i to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %icsk_pending.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %88)
  %tobool.not.i245 = icmp eq i8 %88, 0
  br i1 %tobool.not.i245, label %if.end28.mptcp_timeout_from_subflow.exit_crit_edge, label %land.lhs.true.i

if.end28.mptcp_timeout_from_subflow.exit_crit_edge: ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_timeout_from_subflow.exit

land.lhs.true.i:                                  ; preds = %if.end28
  %stale_count.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0396, i32 0, i32 1, i32 0, i32 23
  %89 = ptrtoint ptr %stale_count.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %stale_count.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool2.not.i = icmp eq i8 %90, 0
  br i1 %tobool2.not.i, label %cond.true.i, label %land.lhs.true.i.mptcp_timeout_from_subflow.exit_crit_edge

land.lhs.true.i.mptcp_timeout_from_subflow.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_timeout_from_subflow.exit

cond.true.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  %icsk_timeout.i = getelementptr inbounds %struct.inet_connection_sock, ptr %86, i32 0, i32 3
  %91 = ptrtoint ptr %icsk_timeout.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %icsk_timeout.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %93 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %92, %93
  br label %mptcp_timeout_from_subflow.exit

mptcp_timeout_from_subflow.exit:                  ; preds = %cond.true.i, %land.lhs.true.i.mptcp_timeout_from_subflow.exit_crit_edge, %if.end28.mptcp_timeout_from_subflow.exit_crit_edge
  %cond.i = phi i32 [ %sub.i, %cond.true.i ], [ 0, %land.lhs.true.i.mptcp_timeout_from_subflow.exit_crit_edge ], [ 0, %if.end28.mptcp_timeout_from_subflow.exit_crit_edge ]
  %94 = tail call i32 @llvm.smax.i32(i32 %tout.0394, i32 %cond.i)
  %95 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0396, i32 0, i32 1
  %96 = ptrtoint ptr %stale.i224 to i32
  call void @__asan_load4_noabort(i32 %96)
  %bf.load = load i32, ptr %stale.i224, align 8
  %97 = lshr i32 %bf.load, 19
  %.lobit = and i32 %97, 1
  %98 = xor i32 %.lobit, 1
  %add = add i32 %98, %nr_active.0395
  %99 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %95, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %tobool38.not = icmp eq i32 %100, 0
  br i1 %tobool38.not, label %do.end, label %mptcp_timeout_from_subflow.exit.do.end56_crit_edge, !prof !341

mptcp_timeout_from_subflow.exit.do.end56_crit_edge: ; preds = %mptcp_timeout_from_subflow.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end56

do.end:                                           ; preds = %mptcp_timeout_from_subflow.exit
  %sk_pacing_rate = getelementptr inbounds %struct.sock, ptr %71, i32 0, i32 35
  %101 = ptrtoint ptr %sk_pacing_rate to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile i32, ptr %sk_pacing_rate, align 4
  %103 = ptrtoint ptr %95 to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %102, ptr %95, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %102)
  %tobool50.not = icmp eq i32 %102, 0
  br i1 %tobool50.not, label %do.end.for.inc81_crit_edge, label %do.end.do.end56_crit_edge

do.end.do.end56_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end56

do.end.for.inc81_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc81

do.end56:                                         ; preds = %do.end.do.end56_crit_edge, %mptcp_timeout_from_subflow.exit.do.end56_crit_edge
  %pace.0 = phi i32 [ %102, %do.end.do.end56_crit_edge ], [ %100, %mptcp_timeout_from_subflow.exit.do.end56_crit_edge ]
  %sk_wmem_queued = getelementptr inbounds %struct.sock, ptr %71, i32 0, i32 22
  %104 = ptrtoint ptr %sk_wmem_queued to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile i32, ptr %sk_wmem_queued, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %105)
  %cmp164.i.i = icmp eq i32 %105, 0
  br i1 %cmp164.i.i, label %do.end56.div_u64.exit_crit_edge, label %if.else174.i.i, !prof !340

do.end56.div_u64.exit_crit_edge:                  ; preds = %do.end56
  call void @__sanitizer_cov_trace_pc() #19
  br label %div_u64.exit

if.else174.i.i:                                   ; preds = %do.end56
  call void @__sanitizer_cov_trace_pc() #19
  %conv205 = zext i32 %105 to i64
  %shl = shl nuw i64 %conv205, 32
  %106 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %pace.0, i64 %shl) #20, !srcloc !342
  %asmresult1.i.i.i = extractvalue { i64, i64 } %106, 1
  br label %div_u64.exit

div_u64.exit:                                     ; preds = %if.else174.i.i, %do.end56.div_u64.exit_crit_edge
  %dividend.addr.0.i.i = phi i64 [ %asmresult1.i.i.i, %if.else174.i.i ], [ 0, %do.end56.div_u64.exit_crit_edge ]
  %107 = ptrtoint ptr %stale.i224 to i32
  call void @__asan_load4_noabort(i32 %107)
  %bf.load60 = load i32, ptr %stale.i224, align 8
  %bf.lshr61 = lshr i32 %bf.load60, 19
  %bf.clear62 = and i32 %bf.lshr61, 1
  %linger_time64 = getelementptr [2 x %struct.subflow_send_info], ptr %send_info, i32 0, i32 %bf.clear62, i32 1
  %108 = ptrtoint ptr %linger_time64 to i32
  call void @__asan_load8_noabort(i32 %108)
  %109 = load i64, ptr %linger_time64, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %dividend.addr.0.i.i, i64 %109)
  %cmp65 = icmp ult i64 %dividend.addr.0.i.i, %109
  br i1 %cmp65, label %if.then67, label %div_u64.exit.for.inc81_crit_edge

div_u64.exit.for.inc81_crit_edge:                 ; preds = %div_u64.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.inc81

if.then67:                                        ; preds = %div_u64.exit
  call void @__sanitizer_cov_trace_pc() #19
  %arrayidx63 = getelementptr [2 x %struct.subflow_send_info], ptr %send_info, i32 0, i32 %bf.clear62
  %110 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr %71, ptr %arrayidx63, align 8
  %111 = ptrtoint ptr %linger_time64 to i32
  call void @__asan_store8_noabort(i32 %111)
  store i64 %dividend.addr.0.i.i, ptr %linger_time64, align 8
  br label %for.inc81

for.inc81:                                        ; preds = %if.then67, %div_u64.exit.for.inc81_crit_edge, %do.end.for.inc81_crit_edge, %mptcp_subflow_active.exit243.for.inc81_crit_edge, %if.end6.i234.for.inc81_crit_edge, %if.then.i231.for.inc81_crit_edge
  %tout.1 = phi i32 [ %94, %if.then67 ], [ %94, %div_u64.exit.for.inc81_crit_edge ], [ %94, %do.end.for.inc81_crit_edge ], [ %tout.0394, %mptcp_subflow_active.exit243.for.inc81_crit_edge ], [ %tout.0394, %if.then.i231.for.inc81_crit_edge ], [ %tout.0394, %if.end6.i234.for.inc81_crit_edge ]
  %nr_active.1 = phi i32 [ %add, %if.then67 ], [ %add, %div_u64.exit.for.inc81_crit_edge ], [ %add, %do.end.for.inc81_crit_edge ], [ %nr_active.0395, %mptcp_subflow_active.exit243.for.inc81_crit_edge ], [ %nr_active.0395, %if.then.i231.for.inc81_crit_edge ], [ %nr_active.0395, %if.end6.i234.for.inc81_crit_edge ]
  %112 = ptrtoint ptr %subflow.0396 to i32
  call void @__asan_load4_noabort(i32 %112)
  %subflow.0 = load ptr, ptr %subflow.0396, align 8
  %cmp23.not = icmp eq ptr %subflow.0, %conn_list
  br i1 %cmp23.not, label %for.end87, label %for.inc81.for.body24_crit_edge

for.inc81.for.body24_crit_edge:                   ; preds = %for.inc81
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body24

for.end87:                                        ; preds = %for.inc81
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tout.1)
  %cmp.i249 = icmp sgt i32 %tout.1, 0
  %spec.select = select i1 %cmp.i249, i32 %tout.1, i32 20
  %timer_ival.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 15
  %113 = ptrtoint ptr %timer_ival.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %spec.select, ptr %timer_ival.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_active.1)
  %tobool88.not = icmp eq i32 %nr_active.1, 0
  br i1 %tobool88.not, label %for.end87.if.then89_crit_edge, label %if.end94thread-pre-split

for.end87.if.then89_crit_edge:                    ; preds = %for.end87
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then89

if.then89:                                        ; preds = %for.end87.if.then89_crit_edge, %.thread
  %114 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %arrayidx.1, align 8
  %116 = ptrtoint ptr %send_info to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr %115, ptr %send_info, align 8
  br label %if.end94

if.end94thread-pre-split:                         ; preds = %for.end87
  call void @__sanitizer_cov_trace_pc() #19
  %117 = ptrtoint ptr %send_info to i32
  call void @__asan_load4_noabort(i32 %117)
  %.pr = load ptr, ptr %send_info, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.end94thread-pre-split, %if.then89
  %118 = phi ptr [ %.pr, %if.end94thread-pre-split ], [ %115, %if.then89 ]
  %tobool97.not = icmp eq ptr %118, null
  br i1 %tobool97.not, label %if.end94.cleanup_crit_edge, label %lor.lhs.false

if.end94.cleanup_crit_edge:                       ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end94
  %sk_wmem_queued.i.i251 = getelementptr inbounds %struct.sock, ptr %118, i32 0, i32 22
  %119 = ptrtoint ptr %sk_wmem_queued.i.i251 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile i32, ptr %sk_wmem_queued.i.i251, align 8
  %sk_sndbuf.i.i252 = getelementptr inbounds %struct.sock, ptr %118, i32 0, i32 21
  %121 = ptrtoint ptr %sk_sndbuf.i.i252 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load volatile i32, ptr %sk_sndbuf.i.i252, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %120, i32 %122)
  %cmp.not.i.i253 = icmp slt i32 %120, %122
  br i1 %cmp.not.i.i253, label %if.end.i.i257, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i.i257:                                    ; preds = %lor.lhs.false
  %skc_prot.i.i254 = getelementptr inbounds %struct.sock_common, ptr %118, i32 0, i32 8
  %123 = ptrtoint ptr %skc_prot.i.i254 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %skc_prot.i.i254, align 8
  %stream_memory_free.i.i255 = getelementptr inbounds %struct.proto, ptr %124, i32 0, i32 28
  %125 = ptrtoint ptr %stream_memory_free.i.i255 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %stream_memory_free.i.i255, align 4
  %tobool.not.i.i256 = icmp eq ptr %126, null
  br i1 %tobool.not.i.i256, label %if.end.i.i257.lor.lhs.false99_crit_edge, label %sk_stream_memory_free.exit261

if.end.i.i257.lor.lhs.false99_crit_edge:          ; preds = %if.end.i.i257
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false99

sk_stream_memory_free.exit261:                    ; preds = %if.end.i.i257
  %call.i.i258 = tail call zeroext i1 %126(ptr noundef nonnull %118, i32 noundef 0) #17
  br i1 %call.i.i258, label %sk_stream_memory_free.exit261.lor.lhs.false99_crit_edge, label %sk_stream_memory_free.exit261.cleanup_crit_edge

sk_stream_memory_free.exit261.cleanup_crit_edge:  ; preds = %sk_stream_memory_free.exit261
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sk_stream_memory_free.exit261.lor.lhs.false99_crit_edge: ; preds = %sk_stream_memory_free.exit261
  call void @__sanitizer_cov_trace_pc() #19
  br label %lor.lhs.false99

lor.lhs.false99:                                  ; preds = %sk_stream_memory_free.exit261.lor.lhs.false99_crit_edge, %if.end.i.i257.lor.lhs.false99_crit_edge
  %snd_wnd = getelementptr inbounds %struct.tcp_sock, ptr %118, i32 0, i32 26
  %127 = ptrtoint ptr %snd_wnd to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %snd_wnd, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %128)
  %tobool101.not = icmp eq i32 %128, 0
  br i1 %tobool101.not, label %lor.lhs.false99.cleanup_crit_edge, label %if.end103

lor.lhs.false99.cleanup_crit_edge:                ; preds = %lor.lhs.false99
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end103:                                        ; preds = %lor.lhs.false99
  %129 = tail call i32 @llvm.smin.i32(i32 %128, i32 65428)
  %130 = ptrtoint ptr %sk_wmem_queued.i.i251 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load volatile i32, ptr %sk_wmem_queued.i.i251, align 8
  %icsk_ulp_data.i262 = getelementptr inbounds %struct.inet_connection_sock, ptr %118, i32 0, i32 13
  %132 = ptrtoint ptr %icsk_ulp_data.i262 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %icsk_ulp_data.i262, align 8
  %134 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %133, i32 0, i32 1
  %135 = ptrtoint ptr %134 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %134, align 8
  %conv120 = zext i32 %136 to i64
  %conv121 = zext i32 %131 to i64
  %mul = mul nuw i64 %conv120, %conv121
  %sk_pacing_rate126 = getelementptr inbounds %struct.sock, ptr %118, i32 0, i32 35
  %137 = ptrtoint ptr %sk_pacing_rate126 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %sk_pacing_rate126, align 4
  %mul127 = mul i32 %138, %129
  %conv128 = zext i32 %mul127 to i64
  %add129 = add nuw i64 %mul, %conv128
  %add130 = add i32 %131, %129
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %add129)
  %cmp164.i.i367 = icmp ult i64 %add129, 4294967296
  br i1 %cmp164.i.i367, label %if.then168.i.i372, label %if.else174.i.i374, !prof !340

if.then168.i.i372:                                ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #19
  %conv169.i.i369 = trunc i64 %add129 to i32
  %div172.i.i370 = udiv i32 %conv169.i.i369, %add130
  br label %div_u64.exit376

if.else174.i.i374:                                ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #19
  %139 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %add130, i64 %add129) #20, !srcloc !342
  %asmresult1.i.i.i373 = extractvalue { i64, i64 } %139, 1
  %extract.t389 = trunc i64 %asmresult1.i.i.i373 to i32
  br label %div_u64.exit376

div_u64.exit376:                                  ; preds = %if.else174.i.i374, %if.then168.i.i372
  %dividend.addr.0.i.i375.off0 = phi i32 [ %div172.i.i370, %if.then168.i.i372 ], [ %extract.t389, %if.else174.i.i374 ]
  %140 = ptrtoint ptr %134 to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 %dividend.addr.0.i.i375.off0, ptr %134, align 8
  %141 = ptrtoint ptr %last_snd to i32
  call void @__asan_store4_noabort(i32 %141)
  store ptr %118, ptr %last_snd, align 4
  %snd_burst135 = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 10
  %142 = ptrtoint ptr %snd_burst135 to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %129, ptr %snd_burst135, align 8
  br label %cleanup

cleanup:                                          ; preds = %div_u64.exit376, %lor.lhs.false99.cleanup_crit_edge, %sk_stream_memory_free.exit261.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end94.cleanup_crit_edge, %mptcp_set_timeout.exit, %cond.true, %sk_stream_memory_free.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ %63, %mptcp_set_timeout.exit ], [ %118, %div_u64.exit376 ], [ null, %if.then.cleanup_crit_edge ], [ %16, %cond.true ], [ null, %sk_stream_memory_free.exit.cleanup_crit_edge ], [ null, %lor.lhs.false99.cleanup_crit_edge ], [ null, %sk_stream_memory_free.exit261.cleanup_crit_edge ], [ null, %if.end94.cleanup_crit_edge ], [ null, %if.end.cleanup_crit_edge ], [ null, %lor.lhs.false.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %send_info) #17
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mptcp_sendmsg_frag(ptr noundef %sk, ptr noundef %ssk, ptr nocapture noundef readonly %dfrag, ptr noundef %info) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %data_seq1 = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 1
  %0 = ptrtoint ptr %data_seq1 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %data_seq1, align 8
  %sent = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 3
  %2 = ptrtoint ptr %sent to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %sent, align 2
  %conv = zext i16 %3 to i64
  %add = add i64 %1, %conv
  %offset2 = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 3
  %4 = ptrtoint ptr %offset2 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %offset2, align 2
  %conv3 = zext i16 %5 to i32
  %conv5 = zext i16 %3 to i32
  %add6 = add nuw nsw i32 %conv3, %conv5
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_sendmsg_frag.__UNIQUE_ID_ddebug698, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_sendmsg_frag, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %6 = ptrtoint ptr %data_seq1 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %data_seq1, align 8
  %data_len = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 2
  %8 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %data_len, align 8
  %conv11 = zext i16 %9 to i32
  %10 = ptrtoint ptr %sent to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %sent, align 2
  %conv13 = zext i16 %11 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_sendmsg_frag.__UNIQUE_ID_ddebug698, ptr noundef nonnull @.str.81, ptr noundef %sk, ptr noundef %ssk, i64 noundef %7, i32 noundef %conv11, i32 noundef %conv13) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %12 = ptrtoint ptr %sent to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %sent, align 2
  %limit = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 2
  %14 = ptrtoint ptr %limit to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %limit, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %13, i16 %15)
  %cmp = icmp ugt i16 %13, %15
  br i1 %cmp, label %do.end.land.rhs_crit_edge, label %lor.rhs

do.end.land.rhs_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs

lor.rhs:                                          ; preds = %do.end
  %data_len20 = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 2
  %16 = ptrtoint ptr %data_len20 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %data_len20, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %17)
  %cmp22 = icmp ugt i16 %15, %17
  br i1 %cmp22, label %lor.rhs.land.rhs_crit_edge, label %if.end76

lor.rhs.land.rhs_crit_edge:                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs

land.rhs:                                         ; preds = %lor.rhs.land.rhs_crit_edge, %do.end.land.rhs_crit_edge
  %.b482 = load i1, ptr @mptcp_sendmsg_frag.__already_done, align 1
  br i1 %.b482, label %land.rhs.cleanup352_crit_edge, label %if.then40, !prof !340

land.rhs.cleanup352_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup352

if.then40:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_sendmsg_frag.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1247, i32 noundef 9, ptr noundef null) #17
  br label %cleanup352

if.end76:                                         ; preds = %lor.rhs
  %size_goal = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 1
  %flags = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 4
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags, align 4
  %call77 = tail call i32 @tcp_send_mss(ptr noundef %ssk, ptr noundef %size_goal, i32 noundef %19) #17
  %20 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call77, ptr %info, align 4
  %21 = ptrtoint ptr %size_goal to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %size_goal, align 4
  %sk_write_queue.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 26
  %prev.i.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 26, i32 0, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %prev.i.i, align 4
  %cmp.i.i = icmp eq ptr %24, %sk_write_queue.i
  %tobool80.not564 = icmp eq ptr %24, null
  %tobool80.not = or i1 %cmp.i.i, %tobool80.not564
  br i1 %tobool80.not, label %if.end76.alloc_skb_crit_edge, label %land.lhs.true

if.end76.alloc_skb_crit_edge:                     ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #19
  br label %alloc_skb

land.lhs.true:                                    ; preds = %if.end76
  %len = getelementptr inbounds %struct.sk_buff, ptr %24, i32 0, i32 6
  %25 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %26)
  %cmp81 = icmp ugt i32 %22, %26
  br i1 %cmp81, label %if.then83, label %land.lhs.true.alloc_skb_crit_edge

land.lhs.true.alloc_skb_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %alloc_skb

if.then83:                                        ; preds = %land.lhs.true
  %active_extensions.i.i = getelementptr inbounds %struct.sk_buff, ptr %24, i32 0, i32 13
  %27 = ptrtoint ptr %active_extensions.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %active_extensions.i.i, align 1
  %29 = and i8 %28, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool.i.not.i = icmp eq i8 %29, 0
  br i1 %tobool.i.not.i, label %skb_ext_find.exit.thread, label %skb_ext_find.exit

skb_ext_find.exit.thread:                         ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #19
  %eor.i.i543 = getelementptr inbounds %struct.sk_buff, ptr %24, i32 0, i32 3, i32 15
  %30 = ptrtoint ptr %eor.i.i543 to i32
  call void @__asan_load1_noabort(i32 %30)
  %bf.load.i.i544 = load i8, ptr %eor.i.i543, align 1
  br label %if.then86

skb_ext_find.exit:                                ; preds = %if.then83
  %extensions.i = getelementptr inbounds %struct.sk_buff, ptr %24, i32 0, i32 22
  %31 = ptrtoint ptr %extensions.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %extensions.i, align 8
  %arrayidx.i = getelementptr %struct.skb_ext, ptr %32, i32 0, i32 1, i32 3
  %33 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %34 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 3
  %add.ptr.i = getelementptr i8, ptr %32, i32 %shl.i
  %eor.i.i = getelementptr inbounds %struct.sk_buff, ptr %24, i32 0, i32 3, i32 15
  %35 = ptrtoint ptr %eor.i.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %bf.load.i.i = load i8, ptr %eor.i.i, align 1
  %36 = and i8 %bf.load.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool.not.i.i = icmp ne i8 %36, 0
  %tobool.not.i = icmp eq ptr %add.ptr.i, null
  %or.cond.i = or i1 %tobool.not.i.i, %tobool.not.i
  br i1 %or.cond.i, label %skb_ext_find.exit.if.then86_crit_edge, label %land.lhs.true.i

skb_ext_find.exit.if.then86_crit_edge:            ; preds = %skb_ext_find.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then86

land.lhs.true.i:                                  ; preds = %skb_ext_find.exit
  %data_seq.i = getelementptr inbounds %struct.mptcp_ext, ptr %add.ptr.i, i32 0, i32 1
  %37 = ptrtoint ptr %data_seq.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %data_seq.i, align 8
  %data_len.i = getelementptr inbounds %struct.mptcp_ext, ptr %add.ptr.i, i32 0, i32 3
  %39 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %data_len.i, align 4
  %conv.i488 = zext i16 %40 to i64
  %add.i = add i64 %38, %conv.i488
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %add)
  %cmp.i = icmp eq i64 %add.i, %add
  br i1 %cmp.i, label %mptcp_skb_can_collapse_to.exit, label %land.lhs.true.i.if.then86_crit_edge

land.lhs.true.i.if.then86_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then86

mptcp_skb_can_collapse_to.exit:                   ; preds = %land.lhs.true.i
  %frozen.i = getelementptr inbounds %struct.mptcp_ext, ptr %add.ptr.i, i32 0, i32 5
  %41 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %bf.load.i = load i16, ptr %frozen.i, align 8
  %42 = and i16 %bf.load.i, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %42)
  %tobool2.not.i = icmp eq i16 %42, 0
  br i1 %tobool2.not.i, label %land.rhs.i.i, label %mptcp_skb_can_collapse_to.exit.if.then86_crit_edge

mptcp_skb_can_collapse_to.exit.if.then86_crit_edge: ; preds = %mptcp_skb_can_collapse_to.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then86

if.then86:                                        ; preds = %mptcp_skb_can_collapse_to.exit.if.then86_crit_edge, %land.lhs.true.i.if.then86_crit_edge, %skb_ext_find.exit.if.then86_crit_edge, %skb_ext_find.exit.thread
  %eor.i.i549556 = phi ptr [ %eor.i.i, %mptcp_skb_can_collapse_to.exit.if.then86_crit_edge ], [ %eor.i.i543, %skb_ext_find.exit.thread ], [ %eor.i.i, %land.lhs.true.i.if.then86_crit_edge ], [ %eor.i.i, %skb_ext_find.exit.if.then86_crit_edge ]
  %bf.load.i.i550555 = phi i8 [ %bf.load.i.i, %mptcp_skb_can_collapse_to.exit.if.then86_crit_edge ], [ %bf.load.i.i544, %skb_ext_find.exit.thread ], [ %bf.load.i.i, %land.lhs.true.i.if.then86_crit_edge ], [ %bf.load.i.i, %skb_ext_find.exit.if.then86_crit_edge ]
  %bf.set = or i8 %bf.load.i.i550555, 64
  %43 = ptrtoint ptr %eor.i.i549556 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %bf.set, ptr %eor.i.i549556, align 1
  br label %alloc_skb

land.rhs.i.i:                                     ; preds = %mptcp_skb_can_collapse_to.exit
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %24, i32 0, i32 17
  %44 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %end.i, align 4
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, ptr %45, i32 0, i32 2
  %46 = ptrtoint ptr %nr_frags to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %nr_frags, align 2
  %conv89 = zext i8 %47 to i32
  %page = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 6
  %48 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %page, align 8
  %50 = ptrtoint ptr %45 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %45, align 8
  %52 = and i8 %51, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool1.not.i.i = icmp eq i8 %52, 0
  br i1 %tobool1.not.i.i, label %land.rhs.i.i.skb_zcopy.exit.i_crit_edge, label %cond.true.i.i

land.rhs.i.i.skb_zcopy.exit.i_crit_edge:          ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_zcopy.exit.i

cond.true.i.i:                                    ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %destructor_arg.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %45, i32 0, i32 11
  %53 = ptrtoint ptr %destructor_arg.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %destructor_arg.i.i, align 4
  %phi.cmp.i = icmp ne ptr %54, null
  br label %skb_zcopy.exit.i

skb_zcopy.exit.i:                                 ; preds = %cond.true.i.i, %land.rhs.i.i.skb_zcopy.exit.i_crit_edge
  %cond.i.i = phi i1 [ %phi.cmp.i, %cond.true.i.i ], [ false, %land.rhs.i.i.skb_zcopy.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool1.not.i = icmp eq i8 %47, 0
  %or.cond.i491 = or i1 %tobool1.not.i, %cond.i.i
  br i1 %or.cond.i491, label %skb_zcopy.exit.i.land.lhs.true93_crit_edge, label %if.then2.i

skb_zcopy.exit.i.land.lhs.true93_crit_edge:       ; preds = %skb_zcopy.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true93

if.then2.i:                                       ; preds = %skb_zcopy.exit.i
  %sub.i = add nsw i32 %conv89, -1
  %arrayidx.i492 = getelementptr %struct.skb_shared_info, ptr %45, i32 0, i32 12, i32 %sub.i
  %55 = ptrtoint ptr %arrayidx.i492 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx.i492, align 4
  %cmp.i493 = icmp eq ptr %56, %49
  br i1 %cmp.i493, label %skb_can_coalesce.exit, label %if.then2.i.land.lhs.true93_crit_edge

if.then2.i.land.lhs.true93_crit_edge:             ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true93

skb_can_coalesce.exit:                            ; preds = %if.then2.i
  %bv_offset.i.i = getelementptr %struct.skb_shared_info, ptr %45, i32 0, i32 12, i32 %sub.i, i32 2
  %57 = ptrtoint ptr %bv_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %bv_offset.i.i, align 4
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %45, i32 0, i32 12, i32 %sub.i, i32 1
  %59 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %bv_len.i.i, align 4
  %add.i494 = add i32 %60, %58
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i494, i32 %add6)
  %cmp7.i = icmp eq i32 %add.i494, %add6
  br i1 %cmp7.i, label %skb_can_coalesce.exit.if.end98_crit_edge, label %skb_can_coalesce.exit.land.lhs.true93_crit_edge

skb_can_coalesce.exit.land.lhs.true93_crit_edge:  ; preds = %skb_can_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true93

skb_can_coalesce.exit.if.end98_crit_edge:         ; preds = %skb_can_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end98

land.lhs.true93:                                  ; preds = %skb_can_coalesce.exit.land.lhs.true93_crit_edge, %if.then2.i.land.lhs.true93_crit_edge, %skb_zcopy.exit.i.land.lhs.true93_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @sysctl_max_skb_frags to i32))
  %61 = load i32, ptr @sysctl_max_skb_frags, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %61, i32 %conv89)
  %cmp94.not = icmp sgt i32 %61, %conv89
  br i1 %cmp94.not, label %land.lhs.true93.if.end98_crit_edge, label %if.then96

land.lhs.true93.if.end98_crit_edge:               ; preds = %land.lhs.true93
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end98

if.then96:                                        ; preds = %land.lhs.true93
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @tcp_mark_push(ptr noundef %ssk, ptr noundef nonnull %24) #17
  br label %alloc_skb

if.end98:                                         ; preds = %land.lhs.true93.if.end98_crit_edge, %skb_can_coalesce.exit.if.end98_crit_edge
  %retval.0.i496559 = phi i1 [ false, %land.lhs.true93.if.end98_crit_edge ], [ true, %skb_can_coalesce.exit.if.end98_crit_edge ]
  %sub = sub i32 %22, %26
  br label %if.end109

alloc_skb:                                        ; preds = %if.then96, %if.then86, %land.lhs.true.alloc_skb_crit_edge, %if.end76.alloc_skb_crit_edge
  %data_lock_held = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 5
  %62 = ptrtoint ptr %data_lock_held to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %data_lock_held, align 4, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool100 = icmp ne i8 %63, 0
  %call101 = tail call fastcc ptr @mptcp_alloc_tx_skb(ptr noundef %sk, ptr noundef %ssk, i1 noundef zeroext %tobool100)
  %tobool102.not = icmp eq ptr %call101, null
  br i1 %tobool102.not, label %alloc_skb.cleanup352_crit_edge, label %if.end104

alloc_skb.cleanup352_crit_edge:                   ; preds = %alloc_skb
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup352

if.end104:                                        ; preds = %alloc_skb
  %end.i497 = getelementptr inbounds %struct.sk_buff, ptr %call101, i32 0, i32 17
  %64 = ptrtoint ptr %end.i497 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %end.i497, align 4
  %nr_frags106 = getelementptr inbounds %struct.skb_shared_info, ptr %65, i32 0, i32 2
  %66 = ptrtoint ptr %nr_frags106 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %nr_frags106, align 2
  %conv107 = zext i8 %67 to i32
  %active_extensions.i.i498 = getelementptr inbounds %struct.sk_buff, ptr %call101, i32 0, i32 13
  %68 = ptrtoint ptr %active_extensions.i.i498 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %active_extensions.i.i498, align 1
  %70 = and i8 %69, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool.i.not.i499 = icmp eq i8 %70, 0
  br i1 %tobool.i.not.i499, label %if.end104.if.end109_crit_edge, label %if.then.i505

if.end104.if.end109_crit_edge:                    ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end109

if.then.i505:                                     ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #19
  %extensions.i500 = getelementptr inbounds %struct.sk_buff, ptr %call101, i32 0, i32 22
  %71 = ptrtoint ptr %extensions.i500 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %extensions.i500, align 8
  %arrayidx.i501 = getelementptr %struct.skb_ext, ptr %72, i32 0, i32 1, i32 3
  %73 = ptrtoint ptr %arrayidx.i501 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %arrayidx.i501, align 1
  %conv.i502 = zext i8 %74 to i32
  %shl.i503 = shl nuw nsw i32 %conv.i502, 3
  %add.ptr.i504 = getelementptr i8, ptr %72, i32 %shl.i503
  br label %if.end109

if.end109:                                        ; preds = %if.then.i505, %if.end104.if.end109_crit_edge, %if.end98
  %i.0 = phi i32 [ %conv89, %if.end98 ], [ %conv107, %if.end104.if.end109_crit_edge ], [ %conv107, %if.then.i505 ]
  %copy.0 = phi i32 [ %sub, %if.end98 ], [ %22, %if.end104.if.end109_crit_edge ], [ %22, %if.then.i505 ]
  %skb.0 = phi ptr [ %24, %if.end98 ], [ %call101, %if.end104.if.end109_crit_edge ], [ %call101, %if.then.i505 ]
  %reuse_skb.0.off0 = phi i1 [ true, %if.end98 ], [ false, %if.end104.if.end109_crit_edge ], [ false, %if.then.i505 ]
  %can_coalesce.1.off0 = phi i1 [ %retval.0.i496559, %if.end98 ], [ false, %if.end104.if.end109_crit_edge ], [ false, %if.then.i505 ]
  %mpext.0 = phi ptr [ %add.ptr.i, %if.end98 ], [ null, %if.end104.if.end109_crit_edge ], [ %add.ptr.i504, %if.then.i505 ]
  %wnd_end.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 14
  %75 = ptrtoint ptr %wnd_end.i.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load volatile i64, ptr %wnd_end.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %77 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %flags.i.i, align 4
  %79 = and i32 %78, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool.i.not.i508 = icmp eq i32 %79, 0
  br i1 %tobool.i.not.i508, label %if.end.i, label %if.end109.mptcp_check_allowed_size.exit_crit_edge

if.end109.mptcp_check_allowed_size.exit_crit_edge: ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_allowed_size.exit

if.end.i:                                         ; preds = %if.end109
  %conv.i509 = sext i32 %copy.0 to i64
  %add.i510 = add i64 %add, %conv.i509
  %sub.i.i = sub i64 %add.i510, %76
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i.i)
  %cmp.i.i511 = icmp slt i64 %sub.i.i, 0
  br i1 %cmp.i.i511, label %if.end.i.mptcp_check_allowed_size.exit_crit_edge, label %if.then3.i

if.end.i.mptcp_check_allowed_size.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_allowed_size.exit

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i512 = sub i64 %76, %add
  %conv4.i = trunc i64 %sub.i512 to i32
  %80 = tail call i32 @llvm.umin.i32(i32 %conv4.i, i32 %copy.0) #17
  br label %mptcp_check_allowed_size.exit

mptcp_check_allowed_size.exit:                    ; preds = %if.then3.i, %if.end.i.mptcp_check_allowed_size.exit_crit_edge, %if.end109.mptcp_check_allowed_size.exit_crit_edge
  %retval.0.i513 = phi i32 [ %80, %if.then3.i ], [ %copy.0, %if.end109.mptcp_check_allowed_size.exit_crit_edge ], [ %copy.0, %if.end.i.mptcp_check_allowed_size.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i513)
  %cmp111 = icmp eq i32 %retval.0.i513, 0
  br i1 %cmp111, label %if.then113, label %mptcp_check_allowed_size.exit.if.end179_crit_edge

mptcp_check_allowed_size.exit.if.end179_crit_edge: ; preds = %mptcp_check_allowed_size.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end179

if.then113:                                       ; preds = %mptcp_check_allowed_size.exit
  %snd_una118 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 13
  %81 = ptrtoint ptr %snd_una118 to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load volatile i64, ptr %snd_una118, align 8
  %snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %83 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %snd_nxt, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %82, i64 %84)
  %cmp119.not = icmp eq i64 %82, %84
  br i1 %cmp119.not, label %if.end122, label %cleanup

if.end122:                                        ; preds = %if.then113
  %sub123 = add i64 %82, -1
  br i1 %reuse_skb.0.off0, label %land.rhs133, label %if.end122.if.end179_crit_edge

if.end122.if.end179_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end179

land.rhs133:                                      ; preds = %if.end122
  %.b476481 = load i1, ptr @mptcp_sendmsg_frag.__already_done.82, align 1
  br i1 %.b476481, label %land.rhs133.if.end179_crit_edge, label %if.then144, !prof !340

land.rhs133.if.end179_crit_edge:                  ; preds = %land.rhs133
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end179

if.then144:                                       ; preds = %land.rhs133
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_sendmsg_frag.__already_done.82, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1304, i32 noundef 9, ptr noundef null) #17
  br label %if.end179

cleanup:                                          ; preds = %if.then113
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @tcp_remove_empty_skb(ptr noundef %ssk) #17
  br label %cleanup352

if.end179:                                        ; preds = %if.then144, %land.rhs133.if.end179_crit_edge, %if.end122.if.end179_crit_edge, %mptcp_check_allowed_size.exit.if.end179_crit_edge
  %copy.2 = phi i32 [ %retval.0.i513, %mptcp_check_allowed_size.exit.if.end179_crit_edge ], [ 1, %land.rhs133.if.end179_crit_edge ], [ 1, %if.then144 ], [ 1, %if.end122.if.end179_crit_edge ]
  %data_seq.1 = phi i64 [ %add, %mptcp_check_allowed_size.exit.if.end179_crit_edge ], [ %sub123, %land.rhs133.if.end179_crit_edge ], [ %sub123, %if.then144 ], [ %sub123, %if.end122.if.end179_crit_edge ]
  %85 = ptrtoint ptr %limit to i32
  call void @__asan_load2_noabort(i32 %85)
  %86 = load i16, ptr %limit, align 4
  %conv181 = zext i16 %86 to i32
  %87 = ptrtoint ptr %sent to i32
  call void @__asan_load2_noabort(i32 %87)
  %88 = load i16, ptr %sent, align 2
  %conv183 = zext i16 %88 to i32
  %sub184 = sub nsw i32 %conv181, %conv183
  %89 = tail call i32 @llvm.umin.i32(i32 %copy.2, i32 %sub184)
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 8
  %90 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i = getelementptr inbounds %struct.proto, ptr %91, i32 0, i32 32
  %92 = ptrtoint ptr %memory_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %memory_allocated.i.i, align 4
  %tobool.i.not.i514 = icmp eq ptr %93, null
  br i1 %tobool.i.not.i514, label %if.end179.if.end190_crit_edge, label %if.end.i515

if.end179.if.end190_crit_edge:                    ; preds = %if.end179
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end190

if.end.i515:                                      ; preds = %if.end179
  %sk_forward_alloc.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 11
  %94 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %sk_forward_alloc.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %95, i32 %89)
  %cmp.not.i = icmp slt i32 %95, %89
  br i1 %cmp.not.i, label %sk_wmem_schedule.exit, label %if.end.i515.if.end190_crit_edge

if.end.i515.if.end190_crit_edge:                  ; preds = %if.end.i515
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end190

sk_wmem_schedule.exit:                            ; preds = %if.end.i515
  %call1.i = tail call i32 @__sk_mem_schedule(ptr noundef %ssk, i32 noundef %89, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.i.not = icmp eq i32 %call1.i, 0
  br i1 %tobool.i.not, label %if.then189, label %sk_wmem_schedule.exit.if.end190_crit_edge

sk_wmem_schedule.exit.if.end190_crit_edge:        ; preds = %sk_wmem_schedule.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end190

if.then189:                                       ; preds = %sk_wmem_schedule.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @tcp_remove_empty_skb(ptr noundef %ssk) #17
  br label %cleanup352

if.end190:                                        ; preds = %sk_wmem_schedule.exit.if.end190_crit_edge, %if.end.i515.if.end190_crit_edge, %if.end179.if.end190_crit_edge
  br i1 %can_coalesce.1.off0, label %if.then192, label %if.else196

if.then192:                                       ; preds = %if.end190
  call void @__sanitizer_cov_trace_pc() #19
  %end.i517 = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 17
  %96 = ptrtoint ptr %end.i517 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %end.i517, align 4
  %sub194 = add nsw i32 %i.0, -1
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %97, i32 0, i32 12, i32 %sub194, i32 1
  %98 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %bv_len.i, align 4
  %add.i518 = add i32 %99, %89
  store i32 %add.i518, ptr %bv_len.i, align 4
  br label %if.end199

if.else196:                                       ; preds = %if.end190
  %page197 = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 6
  %100 = ptrtoint ptr %page197 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %page197, align 8
  %102 = getelementptr inbounds %struct.page, ptr %101, i32 0, i32 1
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %102, align 4
  %and.i.i = and i32 %104, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i519 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i519, label %if.end.i.i, label %if.then.i.i, !prof !340

if.then.i.i:                                      ; preds = %if.else196
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i520 = add i32 %104, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.else196
  call void @__sanitizer_cov_trace_pc() #19
  %105 = ptrtoint ptr %101 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i520, %if.then.i.i ], [ %105, %if.end.i.i ]
  %106 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %106, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #17
  %107 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %108, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i521 = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i521, label %if.then.i1.i, label %do.end5.i.i, !prof !341

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @dump_page(ptr noundef %106, ptr noundef nonnull @.str.86) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #17, !srcloc !351
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #17
  %109 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #17, !srcloc !352
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@mptcp_sendmsg_frag, %if.then.i.i.i.i)) #17
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !350

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__page_ref_mod(ptr noundef %106, i32 noundef 1) #17
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %110 = ptrtoint ptr %page197 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %page197, align 8
  %end.i.i.i522 = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 17
  %112 = ptrtoint ptr %end.i.i.i522 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %end.i.i.i522, align 4
  %arrayidx.i.i = getelementptr %struct.skb_shared_info, ptr %113, i32 0, i32 12, i32 %i.0
  %114 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %111, ptr %arrayidx.i.i, align 4
  %bv_offset.i.i523 = getelementptr %struct.skb_shared_info, ptr %113, i32 0, i32 12, i32 %i.0, i32 2
  %115 = ptrtoint ptr %bv_offset.i.i523 to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 %add6, ptr %bv_offset.i.i523, align 4
  %bv_len.i.i.i = getelementptr %struct.skb_shared_info, ptr %113, i32 0, i32 12, i32 %i.0, i32 1
  %116 = ptrtoint ptr %bv_len.i.i.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %89, ptr %bv_len.i.i.i, align 4
  %117 = getelementptr inbounds %struct.page, ptr %111, i32 0, i32 1
  %118 = ptrtoint ptr %117 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load volatile i32, ptr %117, align 4
  %and.i.i.i = and i32 %119, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !340

if.then.i.i.i:                                    ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i.i = add i32 %119, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #19
  %120 = ptrtoint ptr %111 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %120, %if.end.i.i.i ]
  %121 = inttoptr i32 %retval.0.i.i.i to ptr
  %122 = getelementptr inbounds %struct.page, ptr %121, i32 0, i32 1
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %122, align 4
  %125 = ptrtoint ptr %124 to i32
  %and.i8.i.i = and i32 %125, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i8.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i8.i.i, 0
  br i1 %tobool.i.not.i.i, label %_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge, label %if.then.i.i525

_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge: ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_fill_page_desc.exit

if.then.i.i525:                                   ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %pfmemalloc.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 12
  %126 = ptrtoint ptr %pfmemalloc.i.i to i32
  call void @__asan_load1_noabort(i32 %126)
  %bf.load.i.i524 = load i8, ptr %pfmemalloc.i.i, align 2
  %bf.set.i.i = or i8 %bf.load.i.i524, 2
  store i8 %bf.set.i.i, ptr %pfmemalloc.i.i, align 2
  br label %skb_fill_page_desc.exit

skb_fill_page_desc.exit:                          ; preds = %if.then.i.i525, %_compound_head.exit.i.i.skb_fill_page_desc.exit_crit_edge
  %127 = trunc i32 %i.0 to i8
  %conv.i526 = add i8 %127, 1
  %128 = ptrtoint ptr %end.i.i.i522 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %end.i.i.i522, align 4
  %nr_frags.i = getelementptr inbounds %struct.skb_shared_info, ptr %129, i32 0, i32 2
  %130 = ptrtoint ptr %nr_frags.i to i32
  call void @__asan_store1_noabort(i32 %130)
  store i8 %conv.i526, ptr %nr_frags.i, align 2
  br label %if.end199

if.end199:                                        ; preds = %skb_fill_page_desc.exit, %if.then192
  %len200 = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 6
  %131 = ptrtoint ptr %len200 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %len200, align 4
  %add201 = add i32 %132, %89
  store i32 %add201, ptr %len200, align 4
  %data_len202 = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 7
  %133 = ptrtoint ptr %data_len202 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %data_len202, align 8
  %add203 = add i32 %134, %89
  store i32 %add203, ptr %data_len202, align 8
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 20
  %135 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %truesize, align 8
  %add204 = add i32 %136, %89
  store i32 %add204, ptr %truesize, align 8
  %sk_wmem_queued.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 22
  %137 = ptrtoint ptr %sk_wmem_queued.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %sk_wmem_queued.i, align 8
  %add.i527 = add i32 %138, %89
  store volatile i32 %add.i527, ptr %sk_wmem_queued.i, align 8
  %139 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i529 = getelementptr inbounds %struct.proto, ptr %140, i32 0, i32 32
  %141 = ptrtoint ptr %memory_allocated.i.i529 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %memory_allocated.i.i529, align 4
  %tobool.i.not.i530 = icmp eq ptr %142, null
  br i1 %tobool.i.not.i530, label %if.end199.sk_mem_charge.exit_crit_edge, label %if.end.i533

if.end199.sk_mem_charge.exit_crit_edge:           ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_charge.exit

if.end.i533:                                      ; preds = %if.end199
  call void @__sanitizer_cov_trace_pc() #19
  %sk_forward_alloc.i531 = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 11
  %143 = ptrtoint ptr %sk_forward_alloc.i531 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %sk_forward_alloc.i531, align 8
  %sub.i532 = sub i32 %144, %89
  store i32 %sub.i532, ptr %sk_forward_alloc.i531, align 8
  br label %sk_mem_charge.exit

sk_mem_charge.exit:                               ; preds = %if.end.i533, %if.end199.sk_mem_charge.exit_crit_edge
  %write_seq = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 80
  %145 = ptrtoint ptr %write_seq to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %write_seq, align 4
  %add211 = add i32 %146, %89
  store volatile i32 %add211, ptr %write_seq, align 4
  %end_seq = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 3, i32 4
  %147 = ptrtoint ptr %end_seq to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %end_seq, align 4
  %add220 = add i32 %148, %89
  store i32 %add220, ptr %end_seq, align 4
  %149 = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 3, i32 8
  %150 = ptrtoint ptr %149 to i32
  call void @__asan_store2_noabort(i32 %150)
  store i16 0, ptr %149, align 8
  br i1 %reuse_skb.0.off0, label %if.then222, label %if.end286

if.then222:                                       ; preds = %sk_mem_charge.exit
  %tcp_flags = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 3, i32 12
  %151 = ptrtoint ptr %tcp_flags to i32
  call void @__asan_load1_noabort(i32 %151)
  %152 = load i8, ptr %tcp_flags, align 4
  %153 = and i8 %152, -9
  store i8 %153, ptr %tcp_flags, align 4
  %data_len227 = getelementptr inbounds %struct.mptcp_ext, ptr %mpext.0, i32 0, i32 3
  %154 = ptrtoint ptr %data_len227 to i32
  call void @__asan_load2_noabort(i32 %154)
  %155 = load i16, ptr %data_len227, align 4
  %156 = trunc i32 %89 to i16
  %conv230 = add i16 %155, %156
  store i16 %conv230, ptr %data_len227, align 4
  br i1 %cmp111, label %land.rhs240, label %if.then222.do.end341_crit_edge

if.then222.do.end341_crit_edge:                   ; preds = %if.then222
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end341

land.rhs240:                                      ; preds = %if.then222
  %.b477480 = load i1, ptr @mptcp_sendmsg_frag.__already_done.83, align 1
  br i1 %.b477480, label %land.rhs240.do.end341_crit_edge, label %if.then251, !prof !340

land.rhs240.do.end341_crit_edge:                  ; preds = %land.rhs240
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end341

if.then251:                                       ; preds = %land.rhs240
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_sendmsg_frag.__already_done.83, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1333, i32 noundef 9, ptr noundef null) #17
  br label %do.end341

if.end286:                                        ; preds = %sk_mem_charge.exit
  %157 = call ptr @memset(ptr %mpext.0, i32 0, i32 32)
  %data_seq287 = getelementptr inbounds %struct.mptcp_ext, ptr %mpext.0, i32 0, i32 1
  %158 = ptrtoint ptr %data_seq287 to i32
  call void @__asan_store8_noabort(i32 %158)
  store i64 %data_seq.1, ptr %data_seq287, align 8
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 13
  %159 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %icsk_ulp_data.i, align 8
  %rel_write_seq = getelementptr inbounds %struct.mptcp_subflow_context, ptr %160, i32 0, i32 1, i32 0, i32 7
  %161 = ptrtoint ptr %rel_write_seq to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %rel_write_seq, align 8
  %subflow_seq = getelementptr inbounds %struct.mptcp_ext, ptr %mpext.0, i32 0, i32 2
  %163 = ptrtoint ptr %subflow_seq to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 %162, ptr %subflow_seq, align 8
  %conv289 = trunc i32 %89 to i16
  %data_len290 = getelementptr inbounds %struct.mptcp_ext, ptr %mpext.0, i32 0, i32 3
  %164 = ptrtoint ptr %data_len290 to i32
  call void @__asan_store2_noabort(i32 %164)
  store i16 %conv289, ptr %data_len290, align 4
  %use_map = getelementptr inbounds %struct.mptcp_ext, ptr %mpext.0, i32 0, i32 5
  %165 = ptrtoint ptr %use_map to i32
  call void @__asan_store2_noabort(i32 %165)
  store i16 -16384, ptr %use_map, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_sendmsg_frag.__UNIQUE_ID_ddebug703, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_sendmsg_frag, %if.then309)) #17
          to label %do.end320 [label %if.then309], !srcloc !350

if.then309:                                       ; preds = %if.end286
  call void @__sanitizer_cov_trace_pc() #19
  %166 = ptrtoint ptr %data_seq287 to i32
  call void @__asan_load8_noabort(i32 %166)
  %167 = load i64, ptr %data_seq287, align 8
  %168 = ptrtoint ptr %subflow_seq to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load i32, ptr %subflow_seq, align 8
  %170 = ptrtoint ptr %data_len290 to i32
  call void @__asan_load2_noabort(i32 %170)
  %171 = load i16, ptr %data_len290, align 4
  %conv313 = zext i16 %171 to i32
  %172 = ptrtoint ptr %use_map to i32
  call void @__asan_load2_noabort(i32 %172)
  %bf.load315 = load i16, ptr %use_map, align 8
  %bf.lshr = lshr i16 %bf.load315, 14
  %173 = and i16 %bf.lshr, 1
  %bf.cast = zext i16 %173 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_sendmsg_frag.__UNIQUE_ID_ddebug703, ptr noundef nonnull @.str.85, i64 noundef %167, i32 noundef %169, i32 noundef %conv313, i32 noundef %bf.cast) #17
  br label %do.end320

do.end320:                                        ; preds = %if.then309, %if.end286
  br i1 %cmp111, label %if.then322, label %do.end320.do.end341_crit_edge

do.end320.do.end341_crit_edge:                    ; preds = %do.end320
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end341

if.then322:                                       ; preds = %do.end320
  %174 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %icsk_ulp_data.i, align 8
  %rel_write_seq324 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %175, i32 0, i32 1, i32 0, i32 7
  %176 = ptrtoint ptr %rel_write_seq324 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %rel_write_seq324, align 8
  %add325 = add i32 %177, %89
  store i32 %add325, ptr %rel_write_seq324, align 8
  %178 = ptrtoint ptr %use_map to i32
  call void @__asan_load2_noabort(i32 %178)
  %bf.load326 = load i16, ptr %use_map, align 8
  %bf.set328 = or i16 %bf.load326, 512
  store i16 %bf.set328, ptr %use_map, align 8
  %csum_enabled = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 28
  %179 = ptrtoint ptr %csum_enabled to i32
  call void @__asan_load1_noabort(i32 %179)
  %180 = load volatile i8, ptr %csum_enabled, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %180)
  %tobool333.not = icmp eq i8 %180, 0
  br i1 %tobool333.not, label %if.then322.if.end337_crit_edge, label %if.then336

if.then322.if.end337_crit_edge:                   ; preds = %if.then322
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end337

if.then336:                                       ; preds = %if.then322
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mptcp_update_data_checksum(ptr noundef nonnull %skb.0, i32 noundef %89)
  br label %if.end337

if.end337:                                        ; preds = %if.then336, %if.then322.if.end337_crit_edge
  tail call fastcc void @tcp_push_pending_frames(ptr noundef %ssk)
  br label %cleanup352

do.end341:                                        ; preds = %do.end320.do.end341_crit_edge, %if.then251, %land.rhs240.do.end341_crit_edge, %if.then222.do.end341_crit_edge
  %csum_enabled343 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 28
  %181 = ptrtoint ptr %csum_enabled343 to i32
  call void @__asan_load1_noabort(i32 %181)
  %182 = load volatile i8, ptr %csum_enabled343, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %182)
  %tobool344.not = icmp eq i8 %182, 0
  br i1 %tobool344.not, label %do.end341.if.end348_crit_edge, label %if.then347

do.end341.if.end348_crit_edge:                    ; preds = %do.end341
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end348

if.then347:                                       ; preds = %do.end341
  %active_extensions.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 13
  %183 = ptrtoint ptr %active_extensions.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %183)
  %184 = load i8, ptr %active_extensions.i.i.i.i, align 1
  %185 = and i8 %184, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %185)
  %tobool.i.not.i.i.i = icmp eq i8 %185, 0
  br i1 %tobool.i.not.i.i.i, label %if.then347.mptcp_update_data_checksum.exit_crit_edge, label %if.then.i.i.i535

if.then347.mptcp_update_data_checksum.exit_crit_edge: ; preds = %if.then347
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_update_data_checksum.exit

if.then.i.i.i535:                                 ; preds = %if.then347
  call void @__sanitizer_cov_trace_pc() #19
  %extensions.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0, i32 0, i32 22
  %186 = ptrtoint ptr %extensions.i.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %extensions.i.i.i, align 8
  %arrayidx.i.i.i = getelementptr %struct.skb_ext, ptr %187, i32 0, i32 1, i32 3
  %188 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load1_noabort(i32 %188)
  %189 = load i8, ptr %arrayidx.i.i.i, align 1
  %conv.i.i12.i = zext i8 %189 to i32
  %shl.i.i.i = shl nuw nsw i32 %conv.i.i12.i, 3
  %add.ptr.i.i.i = getelementptr i8, ptr %187, i32 %shl.i.i.i
  br label %mptcp_update_data_checksum.exit

mptcp_update_data_checksum.exit:                  ; preds = %if.then.i.i.i535, %if.then347.mptcp_update_data_checksum.exit_crit_edge
  %retval.0.i.i13.i = phi ptr [ %add.ptr.i.i.i, %if.then.i.i.i535 ], [ null, %if.then347.mptcp_update_data_checksum.exit_crit_edge ]
  %csum1.i = getelementptr inbounds %struct.mptcp_ext, ptr %retval.0.i.i13.i, i32 0, i32 4
  %190 = ptrtoint ptr %csum1.i to i32
  call void @__asan_load2_noabort(i32 %190)
  %191 = load i16, ptr %csum1.i, align 2
  %conv.i.i = zext i16 %191 to i32
  %neg.i = xor i32 %conv.i.i, -1
  %192 = ptrtoint ptr %len200 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %len200, align 4
  %sub.i536 = sub i32 %193, %89
  %call3.i = tail call i32 @skb_checksum(ptr noundef nonnull %skb.0, i32 noundef %sub.i536, i32 noundef %89, i32 noundef 0) #17
  %and.i.i.i537 = and i32 %sub.i536, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i537)
  %tobool.not.i.i.i538 = icmp eq i32 %and.i.i.i537, 0
  %or.i.i.i.i = tail call i32 @llvm.fshl.i32(i32 %call3.i, i32 %call3.i, i32 24) #17
  %retval.0.i.i.i539 = select i1 %tobool.not.i.i.i538, i32 %call3.i, i32 %or.i.i.i.i
  %add.i.i.i = add i32 %retval.0.i.i.i539, %neg.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i.i, i32 %retval.0.i.i.i539)
  %cmp.i.i.i = icmp ult i32 %add.i.i.i, %retval.0.i.i.i539
  %conv.i.i.i = zext i1 %cmp.i.i.i to i32
  %add1.i.i.i = add i32 %add.i.i.i, %conv.i.i.i
  %194 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %add1.i.i.i) #20, !srcloc !353
  %neg.i.i = xor i32 %194, -1
  %shr.i.i = lshr i32 %neg.i.i, 16
  %conv.i14.i = trunc i32 %shr.i.i to i16
  %195 = ptrtoint ptr %csum1.i to i32
  call void @__asan_store2_noabort(i32 %195)
  store i16 %conv.i14.i, ptr %csum1.i, align 2
  br label %if.end348

if.end348:                                        ; preds = %mptcp_update_data_checksum.exit, %do.end341.if.end348_crit_edge
  %icsk_ulp_data.i540 = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 13
  %196 = ptrtoint ptr %icsk_ulp_data.i540 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %icsk_ulp_data.i540, align 8
  %rel_write_seq350 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %197, i32 0, i32 1, i32 0, i32 7
  %198 = ptrtoint ptr %rel_write_seq350 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %rel_write_seq350, align 8
  %add351 = add i32 %199, %89
  store i32 %add351, ptr %rel_write_seq350, align 8
  br label %cleanup352

cleanup352:                                       ; preds = %if.end348, %if.end337, %if.then189, %cleanup, %alloc_skb.cleanup352_crit_edge, %if.then40, %land.rhs.cleanup352_crit_edge
  %retval.1 = phi i32 [ %89, %if.end348 ], [ 0, %if.end337 ], [ -12, %if.then189 ], [ 0, %cleanup ], [ 0, %if.then40 ], [ -12, %alloc_skb.cleanup352_crit_edge ], [ 0, %land.rhs.cleanup352_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_check_send_data_fin(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_check_send_data_fin.__UNIQUE_ID_ddebug753, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__mptcp_check_send_data_fin, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %snd_data_fin_enable = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %0 = ptrtoint ptr %snd_data_fin_enable to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %snd_data_fin_enable, align 4, !range !344
  %2 = zext i8 %1 to i32
  %first_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %3 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %first_pending.i, align 8
  %tobool6 = icmp ne ptr %4, null
  %lnot.ext10 = zext i1 %tobool6 to i32
  %snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %5 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %snd_nxt, align 8
  %write_seq = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %7 = ptrtoint ptr %write_seq to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %write_seq, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_check_send_data_fin.__UNIQUE_ID_ddebug753, ptr noundef nonnull @.str.89, ptr noundef %sk, i32 noundef %2, i32 noundef %lnot.ext10, i64 noundef %6, i64 noundef %8) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %snd_data_fin_enable11 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %9 = ptrtoint ptr %snd_data_fin_enable11 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %snd_data_fin_enable11, align 4, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool12.not = icmp eq i8 %10, 0
  br i1 %tobool12.not, label %do.end.cleanup_crit_edge, label %lor.lhs.false

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %do.end
  %snd_nxt13 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %11 = ptrtoint ptr %snd_nxt13 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %snd_nxt13, align 8
  %add = add i64 %12, 1
  %write_seq14 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %13 = ptrtoint ptr %write_seq14 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %write_seq14, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %14)
  %cmp.not = icmp eq i64 %add, %14
  br i1 %cmp.not, label %lor.lhs.false16, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %first_pending.i92 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %15 = ptrtoint ptr %first_pending.i92 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %first_pending.i92, align 8
  %tobool18.not = icmp eq ptr %16, null
  br i1 %tobool18.not, label %do.body25, label %lor.lhs.false16.cleanup_crit_edge

lor.lhs.false16.cleanup_crit_edge:                ; preds = %lor.lhs.false16
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body25:                                        ; preds = %lor.lhs.false16
  %17 = ptrtoint ptr %snd_nxt13 to i32
  call void @__asan_store8_noabort(i32 %17)
  store volatile i64 %add, ptr %snd_nxt13, align 8
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %18 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %flags.i, align 4
  %20 = and i32 %19, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.i.not = icmp eq i32 %20, 0
  br i1 %tobool.i.not, label %do.body25.if.end55_crit_edge, label %do.body38

do.body25.if.end55_crit_edge:                     ; preds = %do.body25
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end55

do.body38:                                        ; preds = %do.body25
  %snd_una = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 13
  %21 = ptrtoint ptr %snd_una to i32
  call void @__asan_store8_noabort(i32 %21)
  store volatile i64 %add, ptr %snd_una, align 8
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %22 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load volatile i8, ptr %skc_state, align 2
  %conv44 = zext i8 %23 to i32
  %shl = shl nuw i32 1, %conv44
  %and = and i32 %shl, 2560
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool45.not = icmp eq i32 %and, 0
  br i1 %tobool45.not, label %if.else, label %if.then46

if.then46:                                        ; preds = %do.body38
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef 7) #17
  %24 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  %27 = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i.not.i = icmp eq i32 %27, 0
  br i1 %tobool.i.not.i, label %if.end.i, label %if.then46.if.end55_crit_edge

if.then46.if.end55_crit_edge:                     ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end55

if.end.i:                                         ; preds = %if.then46
  %sk_state_change.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 76
  %28 = ptrtoint ptr %sk_state_change.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sk_state_change.i, align 4
  tail call void %29(ptr noundef %sk) #17
  %sk_shutdown.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %30 = ptrtoint ptr %sk_shutdown.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %sk_shutdown.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %31)
  %cmp.i = icmp eq i8 %31, 3
  br i1 %cmp.i, label %if.end.i.if.end6.sink.split.i_crit_edge, label %lor.lhs.false.i

if.end.i.if.end6.sink.split.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.sink.split.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %32 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %33)
  %cmp3.i = icmp eq i8 %33, 7
  %spec.select.i = select i1 %cmp3.i, i32 6, i32 1
  br label %if.end6.sink.split.i

if.end6.sink.split.i:                             ; preds = %lor.lhs.false.i, %if.end.i.if.end6.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 6, %if.end.i.if.end6.sink.split.i_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  tail call fastcc void @sk_wake_async(ptr noundef %sk, i32 noundef %.sink.i) #17
  br label %if.end55

if.else:                                          ; preds = %do.body38
  %34 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %35)
  %cmp50 = icmp eq i8 %35, 4
  br i1 %cmp50, label %if.then52, label %if.else.if.end55_crit_edge

if.else.if.end55_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end55

if.then52:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef 5) #17
  br label %if.end55

if.end55:                                         ; preds = %if.then52, %if.else.if.end55_crit_edge, %if.end6.sink.split.i, %if.then46.if.end55_crit_edge, %do.body25.if.end55_crit_edge
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %36 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %36)
  %subflow.094 = load ptr, ptr %conn_list, align 8
  %cmp58.not95 = icmp eq ptr %subflow.094, %conn_list
  br i1 %cmp58.not95, label %if.end55.cleanup_crit_edge, label %if.end55.for.body_crit_edge

if.end55.for.body_crit_edge:                      ; preds = %if.end55
  br label %for.body

if.end55.cleanup_crit_edge:                       ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end55.for.body_crit_edge
  %subflow.096 = phi ptr [ %subflow.0, %for.body.for.body_crit_edge ], [ %subflow.094, %if.end55.for.body_crit_edge ]
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.096, i32 0, i32 5
  %37 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %tcp_sock.i, align 8
  tail call void @mptcp_subflow_shutdown(ptr noundef %sk, ptr noundef %38, i32 noundef 2)
  %39 = ptrtoint ptr %subflow.096 to i32
  call void @__asan_load4_noabort(i32 %39)
  %subflow.0 = load ptr, ptr %subflow.096, align 8
  %cmp58.not = icmp eq ptr %subflow.0, %conn_list
  br i1 %cmp58.not, label %for.body.cleanup_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %if.end55.cleanup_crit_edge, %lor.lhs.false16.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %do.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @__mptcp_retransmit_pending_data(ptr noundef %sk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags.i, align 4
  %2 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 25
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %3, align 4
  %cmp.i.i = icmp eq ptr %5, null
  br i1 %cmp.i.i, label %tcp_rtx_and_write_queues_empty.exit, label %if.end.if.end5_crit_edge

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

tcp_rtx_and_write_queues_empty.exit:              ; preds = %if.end
  %write_seq.i.i = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 80
  %6 = ptrtoint ptr %write_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %write_seq.i.i, align 4
  %snd_nxt.i.i = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 10
  %8 = ptrtoint ptr %snd_nxt.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %snd_nxt.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp.i3.i = icmp eq i32 %7, %9
  br i1 %cmp.i3.i, label %tcp_rtx_and_write_queues_empty.exit.cleanup_crit_edge, label %tcp_rtx_and_write_queues_empty.exit.if.end5_crit_edge

tcp_rtx_and_write_queues_empty.exit.if.end5_crit_edge: ; preds = %tcp_rtx_and_write_queues_empty.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

tcp_rtx_and_write_queues_empty.exit.cleanup_crit_edge: ; preds = %tcp_rtx_and_write_queues_empty.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %tcp_rtx_and_write_queues_empty.exit.if.end5_crit_edge, %if.end.if.end5_crit_edge
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  tail call fastcc void @__mptcp_clean_una_wakeup(ptr noundef %sk)
  %snd_una.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 13
  %10 = ptrtoint ptr %snd_una.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %snd_una.i, align 8
  %snd_nxt.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %12 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load volatile i64, ptr %snd_nxt.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %11, i64 %13)
  %cmp.i = icmp eq i64 %11, %13
  br i1 %cmp.i, label %if.end5.if.then7_crit_edge, label %if.end.i

if.end5.if.then7_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then7

if.end.i:                                         ; preds = %if.end5
  %rtx_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35
  %14 = ptrtoint ptr %rtx_queue.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %rtx_queue.i, align 4
  %cmp6.not.i = icmp eq ptr %15, %rtx_queue.i
  %tobool.not = icmp eq ptr %15, null
  %or.cond = or i1 %cmp6.not.i, %tobool.not
  br i1 %or.cond, label %if.end.i.if.then7_crit_edge, label %if.end10

if.end.i.if.then7_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then7

if.then7:                                         ; preds = %if.end.i.if.then7_crit_edge, %if.end5.if.then7_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  br label %cleanup

if.end10:                                         ; preds = %if.end.i
  %recovery_snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 12
  %16 = ptrtoint ptr %recovery_snd_nxt to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %13, ptr %recovery_snd_nxt, align 8
  %recovery = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 21
  %17 = ptrtoint ptr %recovery to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 1, ptr %recovery, align 8
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  %first_pending = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %18 = ptrtoint ptr %first_pending to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %first_pending, align 8
  %snd_burst = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 10
  %19 = ptrtoint ptr %snd_burst to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %snd_burst, align 8
  %20 = ptrtoint ptr %rtx_queue.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %cur.044 = load ptr, ptr %rtx_queue.i, align 8
  %cmp.not45 = icmp eq ptr %cur.044, %rtx_queue.i
  br i1 %cmp.not45, label %if.end10.cleanup_crit_edge, label %if.end10.for.body_crit_edge

if.end10.for.body_crit_edge:                      ; preds = %if.end10
  br label %for.body

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.body:                                         ; preds = %if.end16.for.body_crit_edge, %if.end10.for.body_crit_edge
  %cur.046 = phi ptr [ %cur.0, %if.end16.for.body_crit_edge ], [ %cur.044, %if.end10.for.body_crit_edge ]
  %already_sent = getelementptr inbounds %struct.mptcp_data_frag, ptr %cur.046, i32 0, i32 5
  %21 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %already_sent, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool14.not = icmp eq i16 %22, 0
  br i1 %tobool14.not, label %for.body.cleanup_crit_edge, label %if.end16

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end16:                                         ; preds = %for.body
  %23 = ptrtoint ptr %already_sent to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 0, ptr %already_sent, align 2
  %24 = ptrtoint ptr %cur.046 to i32
  call void @__asan_load4_noabort(i32 %24)
  %cur.0 = load ptr, ptr %cur.046, align 8
  %cmp.not = icmp eq ptr %cur.0, %rtx_queue.i
  br i1 %cmp.not, label %if.end16.cleanup_crit_edge, label %if.end16.for.body_crit_edge

if.end16.for.body_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

cleanup:                                          ; preds = %if.end16.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.then7, %tcp_rtx_and_write_queues_empty.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %if.then7 ], [ false, %entry.cleanup_crit_edge ], [ false, %tcp_rtx_and_write_queues_empty.exit.cleanup_crit_edge ], [ true, %if.end10.cleanup_crit_edge ], [ true, %if.end16.cleanup_crit_edge ], [ true, %for.body.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_clean_una_wakeup(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end32_crit_edge, label %land.rhs

entry.if.end32_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %land.rhs4, label %land.rhs.if.end32_crit_edge

land.rhs.if.end32_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

land.rhs4:                                        ; preds = %land.rhs
  %.b46 = load i1, ptr @__mptcp_clean_una_wakeup.__already_done, align 1
  br i1 %.b46, label %land.rhs4.if.end32_crit_edge, label %if.then, !prof !340

land.rhs4.if.end32_crit_edge:                     ; preds = %land.rhs4
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

if.then:                                          ; preds = %land.rhs4
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__mptcp_clean_una_wakeup.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1071, i32 noundef 9, ptr noundef null) #17
  br label %if.end32

if.end32:                                         ; preds = %if.then, %land.rhs4.if.end32_crit_edge, %land.rhs.if.end32_crit_edge, %entry.if.end32_crit_edge
  tail call fastcc void @__mptcp_clean_una(ptr noundef %sk)
  %sk_sndbuf.i.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %1 = ptrtoint ptr %sk_sndbuf.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %sk_sndbuf.i.i.i.i, align 4
  %sk_wmem_queued.i.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %3 = ptrtoint ptr %sk_wmem_queued.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %sub.i.i.i.i = sub i32 %2, %4
  %5 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %shr.i.i.i.i = ashr i32 %5, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i.i, i32 %shr.i.i.i.i)
  %cmp.not.i.i.i = icmp slt i32 %sub.i.i.i.i, %shr.i.i.i.i
  br i1 %cmp.not.i.i.i, label %if.end32.mptcp_write_space.exit_crit_edge, label %land.rhs.i.i.i

if.end32.mptcp_write_space.exit_crit_edge:        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_write_space.exit

land.rhs.i.i.i:                                   ; preds = %if.end32
  %6 = ptrtoint ptr %sk_wmem_queued.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %8 = ptrtoint ptr %sk_sndbuf.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %sk_sndbuf.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp.not.i.i.i.i = icmp slt i32 %7, %9
  br i1 %cmp.not.i.i.i.i, label %if.end.i.i.i.i, label %land.rhs.i.i.i.mptcp_write_space.exit_crit_edge

land.rhs.i.i.i.mptcp_write_space.exit_crit_edge:  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_write_space.exit

if.end.i.i.i.i:                                   ; preds = %land.rhs.i.i.i
  %skc_prot.i.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %10 = ptrtoint ptr %skc_prot.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %skc_prot.i.i.i.i, align 8
  %stream_memory_free.i.i.i.i = getelementptr inbounds %struct.proto, ptr %11, i32 0, i32 28
  %12 = ptrtoint ptr %stream_memory_free.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %stream_memory_free.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i.do.end.i_crit_edge, label %sk_stream_is_writeable.exit.i

if.end.i.i.i.i.do.end.i_crit_edge:                ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i

sk_stream_is_writeable.exit.i:                    ; preds = %if.end.i.i.i.i
  %call.i.i.i.i = tail call zeroext i1 %13(ptr noundef %sk, i32 noundef 0) #17
  br i1 %call.i.i.i.i, label %sk_stream_is_writeable.exit.i.do.end.i_crit_edge, label %sk_stream_is_writeable.exit.i.mptcp_write_space.exit_crit_edge

sk_stream_is_writeable.exit.i.mptcp_write_space.exit_crit_edge: ; preds = %sk_stream_is_writeable.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_write_space.exit

sk_stream_is_writeable.exit.i.do.end.i_crit_edge: ; preds = %sk_stream_is_writeable.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end.i

do.end.i:                                         ; preds = %sk_stream_is_writeable.exit.i.do.end.i_crit_edge, %if.end.i.i.i.i.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !354
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %call4.i = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %flags.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool.not.i, label %do.end.i.mptcp_write_space.exit_crit_edge, label %if.then5.i

do.end.i.mptcp_write_space.exit_crit_edge:        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_write_space.exit

if.then5.i:                                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @sk_stream_write_space(ptr noundef %sk) #17
  br label %mptcp_write_space.exit

mptcp_write_space.exit:                           ; preds = %if.then5.i, %do.end.i.mptcp_write_space.exit_crit_edge, %sk_stream_is_writeable.exit.i.mptcp_write_space.exit_crit_edge, %land.rhs.i.i.i.mptcp_write_space.exit_crit_edge, %if.end32.mptcp_write_space.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_close_ssk(ptr noundef %sk, ptr noundef %ssk, ptr noundef %subflow) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %0 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %1)
  %cmp = icmp eq i8 %1, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_event(i32 noundef 11, ptr noundef %sk, ptr noundef %ssk, i32 noundef 3264) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @mptcp_pm_subflow_check_next(ptr noundef %sk, ptr noundef %ssk, ptr noundef %subflow) #17
  tail call fastcc void @__mptcp_close_ssk(ptr noundef %sk, ptr noundef %ssk, ptr noundef %subflow, i32 noundef 2)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_event(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_pm_subflow_check_next(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_close_ssk(ptr noundef %sk, ptr noundef %ssk, ptr noundef %subflow, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %subflow1 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 38
  %0 = ptrtoint ptr %subflow1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %subflow1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.then_crit_edge, label %lor.end

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

lor.end:                                          ; preds = %entry
  %sk3 = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %sk3 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk3, align 16
  %cmp.not = icmp eq ptr %3, %ssk
  br i1 %cmp.not, label %lor.end.if.end_crit_edge, label %lor.end.if.then_crit_edge

lor.end.if.then_crit_edge:                        ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

lor.end.if.end_crit_edge:                         ; preds = %lor.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %lor.end.if.then_crit_edge, %entry.if.then_crit_edge
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %subflow) #17
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %subflow, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %subflow to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %subflow, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %10 = ptrtoint ptr %subflow to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 256 to ptr), ptr %subflow, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %subflow, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %lor.end.if.end_crit_edge
  %12 = phi i1 [ true, %list_del.exit ], [ false, %lor.end.if.end_crit_edge ]
  tail call void @lock_sock_nested(ptr noundef %ssk, i32 noundef 1) #17
  %and = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %if.end.if.end7_crit_edge, label %if.then6

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %send_fastclose = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1, i32 0, i32 13
  %13 = ptrtoint ptr %send_fastclose to i32
  call void @__asan_load4_noabort(i32 %13)
  %bf.load = load i32, ptr %send_fastclose, align 8
  %bf.set = or i32 %bf.load, 65536
  store i32 %bf.set, ptr %send_fastclose, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end.if.end7_crit_edge
  %and8 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end7.land.end_crit_edge, label %land.rhs

if.end7.land.end_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.end

land.rhs:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  %call10 = tail call zeroext i1 @__mptcp_retransmit_pending_data(ptr noundef %sk)
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end7.land.end_crit_edge
  %14 = phi i1 [ false, %if.end7.land.end_crit_edge ], [ %call10, %land.rhs ]
  br i1 %12, label %if.end16, label %if.then13

if.then13:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #19
  %call14 = tail call i32 @tcp_disconnect(ptr noundef %ssk, i32 noundef 0) #17
  %15 = ptrtoint ptr %subflow1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %subflow1, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 1, ptr %16, align 128
  %18 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1
  %19 = call ptr @memset(ptr %18, i32 0, i32 136)
  %request_mptcp.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1, i32 0, i32 13
  %20 = ptrtoint ptr %request_mptcp.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 -2147483648, ptr %request_mptcp.i, align 8
  tail call void @release_sock(ptr noundef %ssk) #17
  br label %out

if.end16:                                         ; preds = %land.end
  %sk_socket = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 71
  %21 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %sk_socket, align 8
  %tobool17.not = icmp eq ptr %22, null
  br i1 %tobool17.not, label %if.end16.if.end19_crit_edge, label %if.then18

if.end16.if.end19_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #19
  %sk_callback_lock.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i) #17
  %23 = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 13
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %or.i.i.i = or i32 %25, 1
  store i32 %or.i.i.i, ptr %23, align 4
  %26 = ptrtoint ptr %sk_socket to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %sk_socket, align 8
  %27 = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 17
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %27, align 8
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i) #17
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.end16.if.end19_crit_edge
  %disposable = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1, i32 0, i32 13
  %29 = ptrtoint ptr %disposable to i32
  call void @__asan_load4_noabort(i32 %29)
  %bf.load20 = load i32, ptr %disposable, align 8
  %bf.set22 = or i32 %bf.load20, 8192
  store i32 %bf.set22, ptr %disposable, align 8
  %icsk_ulp_ops = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 12
  %30 = ptrtoint ptr %icsk_ulp_ops to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %icsk_ulp_ops, align 4
  %tobool24.not = icmp eq ptr %31, null
  br i1 %tobool24.not, label %do.body, label %if.else

do.body:                                          ; preds = %if.end19
  %tobool26.not = icmp eq ptr %subflow, null
  br i1 %tobool26.not, label %do.body.if.end32_crit_edge, label %do.end

do.body.if.end32_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %rcu = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 12
  tail call void @kvfree_call_rcu(ptr noundef %rcu, ptr noundef nonnull inttoptr (i32 188 to ptr)) #17
  br label %if.end32

if.else:                                          ; preds = %if.end19
  tail call void @__tcp_close(ptr noundef %ssk, i32 noundef 0) #17
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 19
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %32 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %32, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.else.if.end32_crit_edge, !prof !341

if.else.if.end32_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end32

if.then3.i.i.i:                                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  br label %if.end32

if.end32:                                         ; preds = %if.then3.i.i.i, %if.else.if.end32_crit_edge, %do.end, %do.body.if.end32_crit_edge
  tail call void @release_sock(ptr noundef %ssk) #17
  %skc_refcnt.i71 = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i71, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i71, i32 1, i32 3, i32 1) #17
  %33 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i71, ptr %skc_refcnt.i71, i32 1, ptr elementtype(i32) %skc_refcnt.i71) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %33, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !340

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i71, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !357
  tail call void @sk_free(ptr noundef %ssk) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  %first = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 39
  %34 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %first, align 8
  %cmp33 = icmp eq ptr %35, %ssk
  br i1 %cmp33, label %if.then34, label %sock_put.exit.out_crit_edge

sock_put.exit.out_crit_edge:                      ; preds = %sock_put.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.then34:                                        ; preds = %sock_put.exit
  call void @__sanitizer_cov_trace_pc() #19
  %36 = ptrtoint ptr %first to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %first, align 8
  br label %out

out:                                              ; preds = %if.then34, %sock_put.exit.out_crit_edge, %if.then13
  %last_snd = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 9
  %37 = ptrtoint ptr %last_snd to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %last_snd, align 4
  %cmp37 = icmp eq ptr %38, %ssk
  br i1 %cmp37, label %if.then38, label %out.if.end40_crit_edge

out.if.end40_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

if.then38:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  %39 = ptrtoint ptr %last_snd to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %last_snd, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %out.if.end40_crit_edge
  br i1 %14, label %if.then42, label %if.end40.if.end43_crit_edge

if.end40.if.end43_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

if.then42:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mptcp_push_pending(ptr noundef %sk, i32 noundef 0)
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end40.if.end43_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_subflow_shutdown(ptr noundef %sk, ptr noundef %ssk, i32 noundef %how) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @lock_sock_nested(ptr noundef %ssk, i32 noundef 0) #17
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 4
  %0 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %skc_state, align 2
  %2 = zext i8 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values)
  switch i8 %1, label %sw.default [
    i8 10, label %sw.bb
    i8 2, label %entry.sw.bb1_crit_edge
  ]

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1

sw.bb:                                            ; preds = %entry
  %and = and i32 %how, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %sw.bb.sw.epilog_crit_edge, label %sw.bb.sw.bb1_crit_edge

sw.bb.sw.bb1_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb1

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sw.bb1:                                           ; preds = %sw.bb.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge
  %call = tail call i32 @tcp_disconnect(ptr noundef %ssk, i32 noundef 2048) #17
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %flags.i, align 4
  %5 = and i32 %4, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %do.body13, label %do.body

do.body:                                          ; preds = %sw.default
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_subflow_shutdown.__UNIQUE_ID_ddebug751, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_subflow_shutdown, %if.then9)) #17
          to label %do.end [label %if.then9], !srcloc !350

if.then9:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_subflow_shutdown.__UNIQUE_ID_ddebug751, ptr noundef nonnull @.str.4) #17
  br label %do.end

do.end:                                           ; preds = %if.then9, %do.body
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 66
  %6 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %sk_shutdown, align 2
  %8 = trunc i32 %how to i8
  %conv12 = or i8 %7, %8
  store i8 %conv12, ptr %sk_shutdown, align 2
  tail call void @tcp_shutdown(ptr noundef %ssk, i32 noundef %how) #17
  br label %sw.epilog

do.body13:                                        ; preds = %sw.default
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_subflow_shutdown.__UNIQUE_ID_ddebug752, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_subflow_shutdown, %if.then25)) #17
          to label %do.end27 [label %if.then25], !srcloc !350

if.then25:                                        ; preds = %do.body13
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_subflow_shutdown.__UNIQUE_ID_ddebug752, ptr noundef nonnull @.str.6, ptr noundef %ssk) #17
  br label %do.end27

do.end27:                                         ; preds = %if.then25, %do.body13
  tail call void @tcp_send_ack(ptr noundef %ssk) #17
  %pprev.i.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4, i32 0, i32 1
  %9 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.i.i.not = icmp eq ptr %10, null
  br i1 %tobool.not.i.i.i.not, label %if.then29, label %do.end27.sw.epilog_crit_edge

do.end27.sw.epilog_crit_edge:                     ; preds = %do.end27
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then29:                                        ; preds = %do.end27
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %11 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %12)
  %cmp.i = icmp eq i8 %12, 7
  br i1 %cmp.i, label %if.then29.sw.epilog_crit_edge, label %if.end.i, !prof !341

if.then29.sw.epilog_crit_edge:                    ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end.i:                                         ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #19
  %timer_ival.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 15
  %13 = ptrtoint ptr %timer_ival.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %timer_ival.i, align 8
  %icsk_retransmit_timer.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %15 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %15, %14
  tail call void @sk_reset_timer(ptr noundef %sk, ptr noundef %icsk_retransmit_timer.i, i32 noundef %add.i) #17
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.i, %if.then29.sw.epilog_crit_edge, %do.end27.sw.epilog_crit_edge, %do.end, %sw.bb1, %sw.bb.sw.epilog_crit_edge
  tail call void @release_sock(ptr noundef %ssk) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcp_disconnect(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_shutdown(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @release_sock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @mptcp_sk_clone(ptr noundef %sk, ptr nocapture noundef readonly %mp_opt, ptr noundef %req) local_unnamed_addr #0 align 64 {
entry:
  %ack_seq = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %call1 = tail call ptr @sk_clone_lock(ptr noundef %sk, i32 noundef 2592) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ack_seq) #17
  %0 = ptrtoint ptr %ack_seq to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %ack_seq, align 8, !annotation !343
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %skc_family = getelementptr inbounds %struct.sock_common, ptr %call1, i32 0, i32 3
  %1 = ptrtoint ptr %skc_family to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %skc_family, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 10, i16 %2)
  %cmp = icmp eq i16 %2, 10
  br i1 %cmp, label %if.then3, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %add.ptr.i = getelementptr i8, ptr %call1, i32 2072
  %pinet6 = getelementptr inbounds %struct.inet_sock, ptr %call1, i32 0, i32 1
  %3 = ptrtoint ptr %pinet6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %add.ptr.i, ptr %pinet6, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.end.if.end6_crit_edge
  tail call fastcc void @__mptcp_init_sock(ptr noundef nonnull %call1)
  %local_key = getelementptr inbounds %struct.mptcp_subflow_request_sock, ptr %req, i32 0, i32 4
  %4 = ptrtoint ptr %local_key to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %local_key, align 8
  %local_key9 = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 1
  %6 = ptrtoint ptr %local_key9 to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %5, ptr %local_key9, align 8
  %token = getelementptr inbounds %struct.mptcp_subflow_request_sock, ptr %req, i32 0, i32 6
  %7 = ptrtoint ptr %token to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %token, align 8
  %token10 = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 16
  %9 = ptrtoint ptr %token10 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %token10, align 4
  %subflow = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 38
  %10 = ptrtoint ptr %subflow to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %subflow, align 4
  %fully_established = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 23
  %11 = ptrtoint ptr %fully_established to i32
  call void @__asan_store1_noabort(i32 %11)
  store volatile i8 0, ptr %fully_established, align 2
  %suboptions = getelementptr inbounds %struct.mptcp_options_received, ptr %mp_opt, i32 0, i32 7
  %12 = ptrtoint ptr %suboptions to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %suboptions, align 8
  %14 = and i16 %13, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool18.not = icmp eq i16 %14, 0
  br i1 %tobool18.not, label %if.end6.if.end29_crit_edge, label %do.body24

if.end6.if.end29_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end29

do.body24:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  %csum_enabled = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 28
  %15 = ptrtoint ptr %csum_enabled to i32
  call void @__asan_store1_noabort(i32 %15)
  store volatile i8 1, ptr %csum_enabled, align 1
  br label %if.end29

if.end29:                                         ; preds = %do.body24, %if.end6.if.end29_crit_edge
  %idsn = getelementptr inbounds %struct.mptcp_subflow_request_sock, ptr %req, i32 0, i32 5
  %16 = ptrtoint ptr %idsn to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %idsn, align 8
  %add = add i64 %17, 1
  %write_seq = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 3
  %18 = ptrtoint ptr %write_seq to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %add, ptr %write_seq, align 8
  %snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 4
  %19 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %add, ptr %snd_nxt, align 8
  %snd_una = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 13
  %20 = ptrtoint ptr %snd_una to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %add, ptr %snd_una, align 8
  %21 = getelementptr inbounds %struct.sock_common, ptr %req, i32 0, i32 18
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 8
  %conv33 = zext i32 %23 to i64
  %add34 = add i64 %add, %conv33
  %wnd_end = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 14
  %24 = ptrtoint ptr %wnd_end to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %add34, ptr %wnd_end, align 8
  %setsockopt_seq = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 42
  %25 = ptrtoint ptr %setsockopt_seq to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %setsockopt_seq, align 8
  %setsockopt_seq36 = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 42
  %27 = ptrtoint ptr %setsockopt_seq36 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %setsockopt_seq36, align 8
  %28 = ptrtoint ptr %suboptions to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %suboptions, align 8
  %30 = and i16 %29, 7
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %30)
  %tobool40.not = icmp eq i16 %30, 0
  br i1 %tobool40.not, label %if.end29.if.end62_crit_edge, label %if.then41

if.end29.if.end62_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end62

if.then41:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #19
  %can_ack = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 22
  %31 = ptrtoint ptr %can_ack to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 1, ptr %can_ack, align 1
  %32 = ptrtoint ptr %mp_opt to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %mp_opt, align 8
  %remote_key = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 2
  %34 = ptrtoint ptr %remote_key to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %33, ptr %remote_key, align 8
  call void @mptcp_crypto_key_sha(i64 noundef %33, ptr noundef null, ptr noundef nonnull %ack_seq) #17
  %35 = ptrtoint ptr %ack_seq to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %ack_seq, align 8
  %inc = add i64 %36, 1
  store i64 %inc, ptr %ack_seq, align 8
  %ack_seq48 = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 5
  %37 = ptrtoint ptr %ack_seq48 to i32
  call void @__asan_store8_noabort(i32 %37)
  store volatile i64 %inc, ptr %ack_seq48, align 8
  %rcv_wnd_sent = getelementptr inbounds %struct.mptcp_sock, ptr %call1, i32 0, i32 6
  %38 = ptrtoint ptr %rcv_wnd_sent to i32
  call void @__asan_store8_noabort(i32 %38)
  store volatile i64 %inc, ptr %rcv_wnd_sent, align 8
  br label %if.end62

if.end62:                                         ; preds = %if.then41, %if.end29.if.end62_crit_edge
  %39 = getelementptr inbounds %struct.sock_common, ptr %call1, i32 0, i32 13
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %39, align 4
  %and.i.i = and i32 %41, -8388609
  store i32 %and.i.i, ptr %39, align 4
  call void @inet_sk_state_store(ptr noundef nonnull %call1, i32 noundef 3) #17
  call void @security_inet_csk_clone(ptr noundef nonnull %call1, ptr noundef %req) #17
  %sk_lock = getelementptr inbounds %struct.sock, ptr %call1, i32 0, i32 4
  call void @_raw_spin_unlock(ptr noundef %sk_lock) #17
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %call1, i32 0, i32 19
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %42 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %42, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.end62.cleanup_crit_edge, !prof !341

if.end62.cleanup_crit_edge:                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then3.i.i.i:                                   ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then3.i.i.i, %if.end62.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ack_seq) #17
  ret ptr %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sk_clone_lock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_init_sock(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %0 = ptrtoint ptr %conn_list to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %conn_list, ptr %conn_list, align 4
  %prev.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %conn_list, ptr %prev.i, align 4
  %join_list = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 37
  %2 = ptrtoint ptr %join_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %join_list, ptr %join_list, align 4
  %prev.i1 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 37, i32 1
  %3 = ptrtoint ptr %prev.i1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %join_list, ptr %prev.i1, align 4
  %rtx_queue = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35
  %4 = ptrtoint ptr %rtx_queue to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %rtx_queue, ptr %rtx_queue, align 4
  %prev.i2 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35, i32 1
  %5 = ptrtoint ptr %prev.i2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %rtx_queue, ptr %prev.i2, align 4
  %work = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30
  tail call void @__init_work(ptr noundef %work, i32 noundef 0) #17
  %6 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -64, ptr %work, align 4
  %lockdep_map = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.93, ptr noundef nonnull @__mptcp_init_sock.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #17
  %entry4 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30, i32 1
  %7 = ptrtoint ptr %entry4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %entry4, ptr %entry4, align 4
  %prev.i3 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30, i32 1, i32 1
  %8 = ptrtoint ptr %prev.i3 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %entry4, ptr %prev.i3, align 4
  %func = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30, i32 2
  %9 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @mptcp_worker, ptr %func, align 4
  %receive_queue = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 33
  %10 = ptrtoint ptr %receive_queue to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %receive_queue, ptr %receive_queue, align 4
  %prev.i4 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 33, i32 0, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %receive_queue, ptr %prev.i4, align 4
  %qlen.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 33, i32 1
  %12 = ptrtoint ptr %qlen.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %qlen.i, align 4
  %out_of_order_queue = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 32
  %13 = ptrtoint ptr %out_of_order_queue to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %out_of_order_queue, align 4
  %first_pending = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %14 = ptrtoint ptr %first_pending to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %first_pending, align 8
  %rmem_fwd_alloc = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 8
  %15 = ptrtoint ptr %rmem_fwd_alloc to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %rmem_fwd_alloc, align 8
  %rmem_released = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 17
  %16 = ptrtoint ptr %rmem_released to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile i32 0, ptr %rmem_released, align 8
  %timer_ival = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 15
  %17 = ptrtoint ptr %timer_ival to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 20, ptr %timer_ival, align 8
  %first = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 39
  %18 = ptrtoint ptr %first to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %first, align 8
  %icsk_sync_mss = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 16
  %19 = ptrtoint ptr %icsk_sync_mss to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @mptcp_sync_mss, ptr %icsk_sync_mss, align 8
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %20 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %skc_net.i, align 4
  %call23 = tail call i32 @mptcp_is_checksum_enabled(ptr noundef %21) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool = icmp ne i32 %call23, 0
  %csum_enabled = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 28
  %frombool = zext i1 %tobool to i8
  %22 = ptrtoint ptr %csum_enabled to i32
  call void @__asan_store1_noabort(i32 %22)
  store volatile i8 %frombool, ptr %csum_enabled, align 1
  %recovery = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 21
  %23 = ptrtoint ptr %recovery to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 0, ptr %recovery, align 8
  tail call void @mptcp_pm_data_init(ptr noundef %sk) #17
  %icsk_retransmit_timer = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  tail call void @init_timer_key(ptr noundef %icsk_retransmit_timer, ptr noundef nonnull @mptcp_retransmit_timer, i32 noundef 0, ptr noundef nonnull @.str.95, ptr noundef nonnull @__mptcp_init_sock.__key.94) #17
  %sk_timer = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 32
  tail call void @init_timer_key(ptr noundef %sk_timer, ptr noundef nonnull @mptcp_timeout_timer, i32 noundef 0, ptr noundef nonnull @.str.97, ptr noundef nonnull @__mptcp_init_sock.__key.96) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_crypto_key_sha(i64 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @inet_sk_state_store(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @security_inet_csk_clone(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_rcv_space_init(ptr noundef %msk, ptr nocapture noundef readonly %ssk) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %copied = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 41, i32 1
  %0 = ptrtoint ptr %copied to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %copied, align 4
  %rtt_us = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 41, i32 3
  %1 = ptrtoint ptr %rtt_us to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 0, ptr %rtt_us, align 8
  %tcp_mstamp = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 44
  %2 = ptrtoint ptr %tcp_mstamp to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %tcp_mstamp, align 8
  %time = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 41, i32 2
  %4 = ptrtoint ptr %time to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %time, align 8
  %rcv_wnd = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 79
  %5 = ptrtoint ptr %rcv_wnd to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %rcv_wnd, align 8
  %advmss = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 32
  %7 = ptrtoint ptr %advmss to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %advmss, align 8
  %conv = zext i16 %8 to i32
  %mul = mul nuw nsw i32 %conv, 10
  %9 = tail call i32 @llvm.umin.i32(i32 %6, i32 %mul)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp7 = icmp eq i32 %9, 0
  %storemerge = select i1 %cmp7, i32 5360, i32 %9
  %rcvq_space = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 41
  %10 = ptrtoint ptr %rcvq_space to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %storemerge, ptr %rcvq_space, align 8
  %snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 4
  %11 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %snd_nxt, align 8
  %snd_wnd = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 26
  %13 = ptrtoint ptr %snd_wnd to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %snd_wnd, align 4
  %conv14 = zext i32 %14 to i64
  %add = add i64 %12, %conv14
  %wnd_end = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 14
  %15 = ptrtoint ptr %wnd_end to i32
  call void @__asan_store8_noabort(i32 %15)
  store volatile i64 %add, ptr %wnd_end, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_destroy_common(ptr noundef %msk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %first_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 36
  %0 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr null, ptr %first_pending.i, align 8
  %rtx_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 35
  %1 = ptrtoint ptr %rtx_queue.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %rtx_queue.i, align 8
  %cmp.not24.i = icmp eq ptr %2, %rtx_queue.i
  br i1 %cmp.not24.i, label %entry.__mptcp_clear_xmit.exit_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.__mptcp_clear_xmit.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_clear_xmit.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %dfrag.025.i = phi ptr [ %dtmp.0.i, %for.body.i.for.body.i_crit_edge ], [ %2, %entry.for.body.i_crit_edge ]
  %3 = ptrtoint ptr %dfrag.025.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %dtmp.0.i = load ptr, ptr %dfrag.025.i, align 8
  tail call fastcc void @dfrag_clear(ptr noundef %msk, ptr noundef %dfrag.025.i) #17
  %cmp.not.i = icmp eq ptr %dtmp.0.i, %rtx_queue.i
  br i1 %cmp.not.i, label %for.body.i.__mptcp_clear_xmit.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.body.i.__mptcp_clear_xmit.exit_crit_edge:     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_clear_xmit.exit

__mptcp_clear_xmit.exit:                          ; preds = %for.body.i.__mptcp_clear_xmit.exit_crit_edge, %entry.__mptcp_clear_xmit.exit_crit_edge
  %sk_lock = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %receive_queue = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 33
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8
  %4 = ptrtoint ptr %receive_queue to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %receive_queue, align 4
  %cmp.i.not.i = icmp eq ptr %5, %receive_queue
  br i1 %cmp.i.not.i, label %__mptcp_clear_xmit.exit.skb_queue_splice_tail_init.exit_crit_edge, label %if.then.i

__mptcp_clear_xmit.exit.skb_queue_splice_tail_init.exit_crit_edge: ; preds = %__mptcp_clear_xmit.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_queue_splice_tail_init.exit

if.then.i:                                        ; preds = %__mptcp_clear_xmit.exit
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 0, i32 0, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i, align 4
  %prev2.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 33, i32 0, i32 0, i32 1
  %8 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev2.i.i, align 4
  %prev5.i.i = getelementptr inbounds %struct.anon.50, ptr %5, i32 0, i32 1
  %10 = ptrtoint ptr %prev5.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %7, ptr %prev5.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %5, ptr %7, align 8
  %12 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %sk_receive_queue, ptr %9, align 8
  store volatile ptr %9, ptr %prev.i, align 4
  %qlen.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 33, i32 1
  %13 = ptrtoint ptr %qlen.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %qlen.i, align 4
  %qlen1.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 1
  %15 = ptrtoint ptr %qlen1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %qlen1.i, align 4
  %add.i = add i32 %16, %14
  store i32 %add.i, ptr %qlen1.i, align 4
  %17 = ptrtoint ptr %receive_queue to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %receive_queue, ptr %receive_queue, align 4
  store ptr %receive_queue, ptr %prev2.i.i, align 4
  store i32 0, ptr %qlen.i, align 4
  br label %skb_queue_splice_tail_init.exit

skb_queue_splice_tail_init.exit:                  ; preds = %if.then.i, %__mptcp_clear_xmit.exit.skb_queue_splice_tail_init.exit_crit_edge
  %18 = ptrtoint ptr %sk_receive_queue to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sk_receive_queue, align 4
  %cmp.i.i2.i = icmp eq ptr %19, %sk_receive_queue
  %tobool.not.i13.i = icmp eq ptr %19, null
  %tobool.not.i4.i = or i1 %cmp.i.i2.i, %tobool.not.i13.i
  br i1 %tobool.not.i4.i, label %skb_queue_splice_tail_init.exit.__skb_queue_purge.exit_crit_edge, label %while.body.lr.ph.i

skb_queue_splice_tail_init.exit.__skb_queue_purge.exit_crit_edge: ; preds = %skb_queue_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %__skb_queue_purge.exit

while.body.lr.ph.i:                               ; preds = %skb_queue_splice_tail_init.exit
  %qlen.i.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 1
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %20 = phi ptr [ %19, %while.body.lr.ph.i ], [ %30, %while.body.i.while.body.i_crit_edge ]
  %21 = ptrtoint ptr %qlen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %qlen.i.i.i, align 4
  %sub.i.i.i = add i32 %22, -1
  store volatile i32 %sub.i.i.i, ptr %qlen.i.i.i, align 4
  %23 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %20, align 8
  %prev9.i.i.i = getelementptr inbounds %struct.anon.50, ptr %20, i32 0, i32 1
  %25 = ptrtoint ptr %prev9.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %prev9.i.i.i, align 4
  store ptr null, ptr %prev9.i.i.i, align 4
  store ptr null, ptr %20, align 8
  %prev17.i.i.i = getelementptr inbounds %struct.anon.50, ptr %24, i32 0, i32 1
  %27 = ptrtoint ptr %prev17.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %26, ptr %prev17.i.i.i, align 4
  %28 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %24, ptr %26, align 8
  tail call void @kfree_skb_reason(ptr noundef nonnull %20, i32 noundef 0) #17
  %29 = ptrtoint ptr %sk_receive_queue to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %sk_receive_queue, align 4
  %cmp.i.i.i = icmp eq ptr %30, %sk_receive_queue
  %tobool.not.i1.i = icmp eq ptr %30, null
  %tobool.not.i.i = or i1 %cmp.i.i.i, %tobool.not.i1.i
  br i1 %tobool.not.i.i, label %while.body.i.__skb_queue_purge.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body.i

while.body.i.__skb_queue_purge.exit_crit_edge:    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__skb_queue_purge.exit

__skb_queue_purge.exit:                           ; preds = %while.body.i.__skb_queue_purge.exit_crit_edge, %skb_queue_splice_tail_init.exit.__skb_queue_purge.exit_crit_edge
  %out_of_order_queue = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 32
  %call = tail call i32 @skb_rbtree_purge(ptr noundef %out_of_order_queue) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  %rmem_fwd_alloc = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 8
  %31 = ptrtoint ptr %rmem_fwd_alloc to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rmem_fwd_alloc, align 8
  %sk_forward_alloc = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 11
  %33 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %sk_forward_alloc, align 8
  %add = add i32 %34, %32
  store i32 %add, ptr %sk_forward_alloc, align 8
  store i32 0, ptr %rmem_fwd_alloc, align 8
  tail call void @mptcp_token_destroy(ptr noundef %msk) #17
  tail call void @mptcp_pm_free_anno_list(ptr noundef %msk) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_rbtree_purge(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_token_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_pm_free_anno_list(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__mptcp_data_acked(ptr noundef %sk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %entry.sock_owned_by_user.exit_crit_edge

entry.sock_owned_by_user.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %entry
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !340

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %entry.sock_owned_by_user.exit_crit_edge
  %owned.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %1 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %if.then, label %if.else

if.then:                                          ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @__mptcp_clean_una(ptr noundef %sk)
  br label %if.end

if.else:                                          ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  %cb_flags = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 19
  %3 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cb_flags, align 4
  %or.i = or i32 %4, 4
  store i32 %or.i, ptr %cb_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %flags.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %5 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %flags.i.i, align 4
  %7 = and i32 %6, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i.not.i = icmp eq i32 %7, 0
  br i1 %tobool.i.not.i, label %land.lhs.true.i, label %if.end.if.end5_crit_edge

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

land.lhs.true.i:                                  ; preds = %if.end
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %8 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i = zext i8 %9 to i32
  %shl.i = shl nuw i32 1, %conv.i
  %and.i = and i32 %shl.i, 2576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.if.end5_crit_edge, label %mptcp_pending_data_fin_ack.exit

land.lhs.true.i.if.end5_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

mptcp_pending_data_fin_ack.exit:                  ; preds = %land.lhs.true.i
  %write_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %10 = ptrtoint ptr %write_seq.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %write_seq.i, align 8
  %snd_una.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 13
  %12 = ptrtoint ptr %snd_una.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load volatile i64, ptr %snd_una.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %11, i64 %13)
  %cmp.i = icmp eq i64 %11, %13
  br i1 %cmp.i, label %if.then3, label %mptcp_pending_data_fin_ack.exit.if.end5_crit_edge

mptcp_pending_data_fin_ack.exit.if.end5_crit_edge: ; preds = %mptcp_pending_data_fin_ack.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

if.then3:                                         ; preds = %mptcp_pending_data_fin_ack.exit
  %14 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load volatile i8, ptr %skc_state.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %15)
  %cmp.not.i = icmp eq i8 %15, 7
  br i1 %cmp.not.i, label %if.then3.if.end5_crit_edge, label %land.lhs.true.i10

if.then3.if.end5_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

land.lhs.true.i10:                                ; preds = %if.then3
  %work.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %16 = load ptr, ptr @system_wq, align 4
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %16, ptr noundef %work.i) #17
  br i1 %call.i.i.i, label %if.then.i, label %land.lhs.true.i10.if.end5_crit_edge

land.lhs.true.i10.if.end5_crit_edge:              ; preds = %land.lhs.true.i10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

if.then.i:                                        ; preds = %land.lhs.true.i10
  %skc_refcnt.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i, i32 1, i32 3, i32 1) #17
  %17 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i, ptr %skc_refcnt.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !341

if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %18 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %.not.i.i.i.i.i = icmp sgt i32 %18, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.if.end5_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.if.end5_crit_edge:              ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %if.end5

if.end5:                                          ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.if.end5_crit_edge, %land.lhs.true.i10.if.end5_crit_edge, %if.then3.if.end5_crit_edge, %mptcp_pending_data_fin_ack.exit.if.end5_crit_edge, %land.lhs.true.i.if.end5_crit_edge, %if.end.if.end5_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @sock_owned_by_user(ptr noundef %sk) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lockdep_sock_is_held.exit.i, label %entry.sock_owned_by_me.exit_crit_edge

entry.sock_owned_by_me.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit

lockdep_sock_is_held.exit.i:                      ; preds = %entry
  %dep_map2.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i)
  %tobool4.i.not.i = icmp eq i32 %call.i6.i.i, 0
  br i1 %tobool4.i.not.i, label %land.rhs.i, label %lockdep_sock_is_held.exit.i.sock_owned_by_me.exit_crit_edge

lockdep_sock_is_held.exit.i.sock_owned_by_me.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit

land.rhs.i:                                       ; preds = %lockdep_sock_is_held.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %land.rhs.i.sock_owned_by_me.exit_crit_edge, label %land.rhs3.i

land.rhs.i.sock_owned_by_me.exit_crit_edge:       ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit

land.rhs3.i:                                      ; preds = %land.rhs.i
  %.b40.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i, label %land.rhs3.i.sock_owned_by_me.exit_crit_edge, label %if.then.i, !prof !340

land.rhs3.i.sock_owned_by_me.exit_crit_edge:      ; preds = %land.rhs3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit

if.then.i:                                        ; preds = %land.rhs3.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_me.exit

sock_owned_by_me.exit:                            ; preds = %if.then.i, %land.rhs3.i.sock_owned_by_me.exit_crit_edge, %land.rhs.i.sock_owned_by_me.exit_crit_edge, %lockdep_sock_is_held.exit.i.sock_owned_by_me.exit_crit_edge, %entry.sock_owned_by_me.exit_crit_edge
  %owned = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %1 = ptrtoint ptr %owned to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %owned, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool = icmp ne i32 %2, 0
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_clean_una(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags.i, align 4
  %2 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %3 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load volatile i64, ptr %snd_nxt, align 8
  %snd_una2 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 13
  %5 = ptrtoint ptr %snd_una2 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %snd_una2, align 8
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %snd_una3 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 13
  %6 = ptrtoint ptr %snd_una3 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %snd_una3, align 8
  %rtx_queue = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35
  %8 = ptrtoint ptr %rtx_queue to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rtx_queue, align 8
  %cmp.not404 = icmp eq ptr %9, %rtx_queue
  br i1 %cmp.not404, label %if.end.for.end_crit_edge, label %for.body.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %first_pending = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %recovery = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 21
  br label %for.body

for.body:                                         ; preds = %if.end85.for.body_crit_edge, %for.body.lr.ph
  %dfrag.0406 = phi ptr [ %9, %for.body.lr.ph ], [ %dtmp.0407, %if.end85.for.body_crit_edge ]
  %cleaned.0.off0405 = phi i1 [ false, %for.body.lr.ph ], [ true, %if.end85.for.body_crit_edge ]
  %10 = ptrtoint ptr %dfrag.0406 to i32
  call void @__asan_load4_noabort(i32 %10)
  %dtmp.0407 = load ptr, ptr %dfrag.0406, align 8
  %data_seq = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag.0406, i32 0, i32 1
  %11 = ptrtoint ptr %data_seq to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %data_seq, align 8
  %data_len = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag.0406, i32 0, i32 2
  %13 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %data_len, align 8
  %conv = zext i16 %14 to i64
  %15 = add i64 %12, %conv
  %sub.i = sub i64 %7, %15
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i)
  %cmp.i = icmp slt i64 %sub.i, 0
  br i1 %cmp.i, label %for.body.for.end_crit_edge, label %if.end13

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.end13:                                         ; preds = %for.body
  %16 = ptrtoint ptr %first_pending to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %first_pending, align 8
  %cmp14 = icmp eq ptr %dfrag.0406, %17
  br i1 %cmp14, label %if.then18, label %if.end13.if.end85_crit_edge, !prof !341

if.end13.if.end85_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end85

if.then18:                                        ; preds = %if.end13
  %18 = ptrtoint ptr %recovery to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %recovery, align 8, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool19.not = icmp eq i8 %19, 0
  br i1 %tobool19.not, label %land.rhs, label %do.body78.critedge

land.rhs:                                         ; preds = %if.then18
  %.b368 = load i1, ptr @__mptcp_clean_una.__already_done, align 1
  br i1 %.b368, label %land.rhs.for.end_crit_edge, label %if.then37, !prof !340

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.then37:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__mptcp_clean_una.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1020, i32 noundef 9, ptr noundef null) #17
  br label %for.end

do.body78.critedge:                               ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #19
  %20 = ptrtoint ptr %dfrag.0406 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dfrag.0406, align 4
  %cmp.i.not.i = icmp eq ptr %21, %rtx_queue
  %spec.select.i = select i1 %cmp.i.not.i, ptr null, ptr %21
  %22 = ptrtoint ptr %first_pending to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %spec.select.i, ptr %first_pending, align 8
  br label %if.end85

if.end85:                                         ; preds = %do.body78.critedge, %if.end13.if.end85_crit_edge
  tail call fastcc void @dfrag_clear(ptr noundef %sk, ptr noundef %dfrag.0406)
  %cmp.not = icmp eq ptr %dtmp.0407, %rtx_queue
  br i1 %cmp.not, label %if.end85.for.end_crit_edge, label %if.end85.for.body_crit_edge

if.end85.for.body_crit_edge:                      ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

if.end85.for.end_crit_edge:                       ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %if.end85.for.end_crit_edge, %if.then37, %land.rhs.for.end_crit_edge, %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  %cleaned.0.off0402 = phi i1 [ %cleaned.0.off0405, %land.rhs.for.end_crit_edge ], [ %cleaned.0.off0405, %if.then37 ], [ false, %if.end.for.end_crit_edge ], [ true, %if.end85.for.end_crit_edge ], [ %cleaned.0.off0405, %for.body.for.end_crit_edge ]
  %23 = ptrtoint ptr %snd_una3 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %snd_una3, align 8
  %snd_nxt.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %25 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load volatile i64, ptr %snd_nxt.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %24, i64 %26)
  %cmp.i372 = icmp eq i64 %24, %26
  br i1 %cmp.i372, label %for.end.if.end252_crit_edge, label %if.end.i

for.end.if.end252_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end252

if.end.i:                                         ; preds = %for.end
  %27 = ptrtoint ptr %rtx_queue to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %rtx_queue, align 4
  %cmp6.not.i = icmp eq ptr %28, %rtx_queue
  %tobool92.not = icmp eq ptr %28, null
  %or.cond = or i1 %cmp6.not.i, %tobool92.not
  br i1 %or.cond, label %if.end.i.if.end252_crit_edge, label %land.lhs.true

if.end.i.if.end252_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end252

land.lhs.true:                                    ; preds = %if.end.i
  %data_seq93 = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %data_seq93 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %data_seq93, align 8
  %sub.i375 = sub i64 %30, %7
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i375)
  %cmp.i376 = icmp slt i64 %sub.i375, 0
  br i1 %cmp.i376, label %if.then96, label %land.lhs.true.if.end252_crit_edge

land.lhs.true.if.end252_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end252

if.then96:                                        ; preds = %land.lhs.true
  %sub = sub i64 %7, %30
  %already_sent = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 5
  %31 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %already_sent, align 2
  %conv98 = zext i16 %32 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %sub, i64 %conv98)
  %cmp99 = icmp ugt i64 %sub, %conv98
  br i1 %cmp99, label %if.then107, label %if.then96.if.end237_crit_edge, !prof !341

if.then96.if.end237_crit_edge:                    ; preds = %if.then96
  call void @__sanitizer_cov_trace_pc() #19
  %.pre = trunc i64 %sub to i16
  br label %if.end237

if.then107:                                       ; preds = %if.then96
  %recovery109 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 21
  %33 = ptrtoint ptr %recovery109 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %recovery109, align 8, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool110.not = icmp eq i8 %34, 0
  br i1 %tobool110.not, label %land.rhs120, label %if.end168

land.rhs120:                                      ; preds = %if.then107
  %.b356367 = load i1, ptr @__mptcp_clean_una.__already_done.104, align 1
  br i1 %.b356367, label %land.rhs120.cleanup.thread_crit_edge, label %land.rhs120.cleanup.thread.sink.split_crit_edge, !prof !340

land.rhs120.cleanup.thread.sink.split_crit_edge:  ; preds = %land.rhs120
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.thread.sink.split

land.rhs120.cleanup.thread_crit_edge:             ; preds = %land.rhs120
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.thread

if.end168:                                        ; preds = %if.then107
  %data_len170 = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 2
  %35 = ptrtoint ptr %data_len170 to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %data_len170, align 8
  %conv171 = zext i16 %36 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %sub, i64 %conv171)
  %cmp172 = icmp ugt i64 %sub, %conv171
  br i1 %cmp172, label %land.rhs181, label %if.end229

land.rhs181:                                      ; preds = %if.end168
  %.b357366 = load i1, ptr @__mptcp_clean_una.__already_done.105, align 1
  br i1 %.b357366, label %land.rhs181.cleanup.thread_crit_edge, label %land.rhs181.cleanup.thread.sink.split_crit_edge, !prof !340

land.rhs181.cleanup.thread.sink.split_crit_edge:  ; preds = %land.rhs181
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.thread.sink.split

land.rhs181.cleanup.thread_crit_edge:             ; preds = %land.rhs181
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.thread

if.end229:                                        ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #19
  %conv236 = trunc i64 %sub to i16
  %37 = ptrtoint ptr %already_sent to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %conv236, ptr %already_sent, align 2
  br label %if.end237

if.end237:                                        ; preds = %if.end229, %if.then96.if.end237_crit_edge
  %.pre-phi = phi i16 [ %.pre, %if.then96.if.end237_crit_edge ], [ %conv236, %if.end229 ]
  %38 = ptrtoint ptr %data_seq93 to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %data_seq93, align 8
  %add239 = add i64 %39, %sub
  store i64 %add239, ptr %data_seq93, align 8
  %offset = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 3
  %40 = ptrtoint ptr %offset to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %offset, align 2
  %conv242 = add i16 %41, %.pre-phi
  store i16 %conv242, ptr %offset, align 2
  %data_len243 = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 2
  %42 = ptrtoint ptr %data_len243 to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %data_len243, align 8
  %conv246 = sub i16 %43, %.pre-phi
  store i16 %conv246, ptr %data_len243, align 8
  %44 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %already_sent, align 2
  %conv250 = sub i16 %45, %.pre-phi
  store i16 %conv250, ptr %already_sent, align 2
  %conv251 = trunc i64 %sub to i32
  %skc_prot.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %46 = ptrtoint ptr %skc_prot.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %skc_prot.i.i.i, align 8
  %memory_allocated.i.i.i = getelementptr inbounds %struct.proto, ptr %47, i32 0, i32 32
  %48 = ptrtoint ptr %memory_allocated.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %memory_allocated.i.i.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %49, null
  br i1 %tobool.i.not.i.i, label %if.end237.cleanup_crit_edge, label %if.end.i.i

if.end237.cleanup_crit_edge:                      ; preds = %if.end237
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end237
  %sk_forward_alloc.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %50 = ptrtoint ptr %sk_forward_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %sk_forward_alloc.i.i, align 8
  %add.i.i = add i32 %51, %conv251
  store i32 %add.i.i, ptr %sk_forward_alloc.i.i, align 8
  %sk_reserved_mem.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %52 = ptrtoint ptr %sk_reserved_mem.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %sk_reserved_mem.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool.not.i.i.i = icmp eq i32 %53, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.sk_unused_reserved_mem.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !340

if.end.i.i.sk_unused_reserved_mem.exit.i.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %54 = ptrtoint ptr %sk_wmem_queued.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %sk_wmem_queued.i.i.i, align 8
  %sk_backlog.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i.i, i32 noundef 4) #17
  %56 = ptrtoint ptr %sk_backlog.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %sk_backlog.i.i.i, align 4
  %58 = add i32 %55, %57
  %sub5.i.i.i = sub i32 %53, %58
  %59 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i.i

sk_unused_reserved_mem.exit.i.i:                  ; preds = %if.end.i.i.i, %if.end.i.i.sk_unused_reserved_mem.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %59, %if.end.i.i.i ], [ 0, %if.end.i.i.sk_unused_reserved_mem.exit.i.i_crit_edge ]
  %sub.i.i = sub i32 %add.i.i, %retval.0.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097151, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 2097151
  br i1 %cmp.i.i, label %if.then4.i.i, label %sk_unused_reserved_mem.exit.i.i.cleanup_crit_edge, !prof !341

sk_unused_reserved_mem.exit.i.i.cleanup_crit_edge: ; preds = %sk_unused_reserved_mem.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then4.i.i:                                     ; preds = %sk_unused_reserved_mem.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__sk_mem_reclaim(ptr noundef %sk, i32 noundef 1048576) #17
  br label %cleanup

cleanup.thread.sink.split:                        ; preds = %land.rhs181.cleanup.thread.sink.split_crit_edge, %land.rhs120.cleanup.thread.sink.split_crit_edge
  %__mptcp_clean_una.__already_done.104.sink = phi ptr [ @__mptcp_clean_una.__already_done.104, %land.rhs120.cleanup.thread.sink.split_crit_edge ], [ @__mptcp_clean_una.__already_done.105, %land.rhs181.cleanup.thread.sink.split_crit_edge ]
  %.sink = phi i32 [ 1036, %land.rhs120.cleanup.thread.sink.split_crit_edge ], [ 1038, %land.rhs181.cleanup.thread.sink.split_crit_edge ]
  %60 = ptrtoint ptr %__mptcp_clean_una.__already_done.104.sink to i32
  call void @__asan_store1_noabort(i32 %60)
  store i1 true, ptr %__mptcp_clean_una.__already_done.104.sink, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #17
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %cleanup.thread.sink.split, %land.rhs181.cleanup.thread_crit_edge, %land.rhs120.cleanup.thread_crit_edge
  br i1 %cleaned.0.off0402, label %cleanup.thread.land.lhs.true270_crit_edge, label %cleanup.thread.if.end274_crit_edge

cleanup.thread.if.end274_crit_edge:               ; preds = %cleanup.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end274

cleanup.thread.land.lhs.true270_crit_edge:        ; preds = %cleanup.thread
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true270

cleanup:                                          ; preds = %if.then4.i.i, %sk_unused_reserved_mem.exit.i.i.cleanup_crit_edge, %if.end237.cleanup_crit_edge
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %61 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %add.i3.i = sub i32 %62, %conv251
  store volatile i32 %add.i3.i, ptr %sk_wmem_queued.i.i, align 8
  br label %if.end252

if.end252:                                        ; preds = %cleanup, %land.lhs.true.if.end252_crit_edge, %if.end.i.if.end252_crit_edge, %for.end.if.end252_crit_edge
  %cleaned.2.off0 = phi i1 [ true, %cleanup ], [ %cleaned.0.off0402, %land.lhs.true.if.end252_crit_edge ], [ %cleaned.0.off0402, %for.end.if.end252_crit_edge ], [ %cleaned.0.off0402, %if.end.i.if.end252_crit_edge ]
  %recovery253 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 21
  %63 = ptrtoint ptr %recovery253 to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %recovery253, align 8, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %64)
  %tobool254.not = icmp eq i8 %64, 0
  br i1 %tobool254.not, label %if.end252.out_crit_edge, label %land.lhs.true261, !prof !340

if.end252.out_crit_edge:                          ; preds = %if.end252
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

land.lhs.true261:                                 ; preds = %if.end252
  %recovery_snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 12
  %65 = ptrtoint ptr %recovery_snd_nxt to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %recovery_snd_nxt, align 8
  %67 = ptrtoint ptr %snd_una3 to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %snd_una3, align 8
  %sub.i377 = sub i64 %66, %68
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i377)
  %cmp.i378 = icmp slt i64 %sub.i377, 0
  br i1 %cmp.i378, label %if.then265, label %land.lhs.true261.out_crit_edge

land.lhs.true261.out_crit_edge:                   ; preds = %land.lhs.true261
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.then265:                                       ; preds = %land.lhs.true261
  %69 = ptrtoint ptr %recovery253 to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 0, ptr %recovery253, align 8
  br i1 %cleaned.2.off0, label %if.then265.land.lhs.true270_crit_edge, label %if.then265.if.end274_crit_edge

if.then265.if.end274_crit_edge:                   ; preds = %if.then265
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end274

if.then265.land.lhs.true270_crit_edge:            ; preds = %if.then265
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true270

out:                                              ; preds = %land.lhs.true261.out_crit_edge, %if.end252.out_crit_edge
  br i1 %cleaned.2.off0, label %out.land.lhs.true270_crit_edge, label %out.if.end274_crit_edge

out.if.end274_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end274

out.land.lhs.true270_crit_edge:                   ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.lhs.true270

land.lhs.true270:                                 ; preds = %out.land.lhs.true270_crit_edge, %if.then265.land.lhs.true270_crit_edge, %cleanup.thread.land.lhs.true270_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memcg_sockets_enabled_key, ptr blockaddress(@__mptcp_clean_una, %land.lhs.true.i)) #17
          to label %tcp_under_memory_pressure.exit [label %land.lhs.true.i], !srcloc !350

land.lhs.true.i:                                  ; preds = %land.lhs.true270
  %sk_memcg.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %70 = ptrtoint ptr %sk_memcg.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %sk_memcg.i, align 8
  %tobool3.not.i = icmp eq ptr %71, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.tcp_under_memory_pressure.exit_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.tcp_under_memory_pressure.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %tcp_under_memory_pressure.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@__mptcp_clean_una, %land.lhs.true.i.i)) #17
          to label %do.body.i.i [label %land.lhs.true.i.i], !srcloc !350

land.lhs.true.i.i:                                ; preds = %land.lhs.true4.i
  %tcpmem_pressure.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %71, i32 0, i32 31
  %72 = ptrtoint ptr %tcpmem_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %tcpmem_pressure.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %tobool4.not.i.i = icmp eq i32 %73, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i.do.body.i.i_crit_edge, label %land.lhs.true.i.i.if.then273_crit_edge

land.lhs.true.i.i.if.then273_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then273

land.lhs.true.i.i.do.body.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %land.lhs.true.i.i.do.body.i.i_crit_edge, %land.lhs.true4.i
  %memcg.addr.0.i.i = phi ptr [ %add.ptr.i.i.i, %do.cond.i.i.do.body.i.i_crit_edge ], [ %71, %land.lhs.true.i.i.do.body.i.i_crit_edge ], [ %71, %land.lhs.true4.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %74 = load volatile i32, ptr @jiffies, align 128
  %socket_pressure.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 29
  %75 = ptrtoint ptr %socket_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %socket_pressure.i.i, align 8
  %sub.i.i380 = sub i32 %74, %76
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i380)
  %cmp.i.i381 = icmp slt i32 %sub.i.i380, 0
  br i1 %cmp.i.i381, label %do.body.i.i.if.then273_crit_edge, label %do.cond.i.i

do.body.i.i.if.then273_crit_edge:                 ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then273

do.cond.i.i:                                      ; preds = %do.body.i.i
  %parent.i.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 2, i32 13
  %77 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %parent.i.i.i, align 4
  %tobool.not.i.i.i382 = icmp eq ptr %78, null
  %add.ptr.i.i.i = getelementptr i8, ptr %78, i32 -176
  %tobool10.not16.i.i = icmp eq ptr %add.ptr.i.i.i, null
  %tobool10.not.i.i = or i1 %tobool.not.i.i.i382, %tobool10.not16.i.i
  br i1 %tobool10.not.i.i, label %do.cond.i.i.tcp_under_memory_pressure.exit_crit_edge, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

do.cond.i.i.tcp_under_memory_pressure.exit_crit_edge: ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %tcp_under_memory_pressure.exit

tcp_under_memory_pressure.exit:                   ; preds = %do.cond.i.i.tcp_under_memory_pressure.exit_crit_edge, %land.lhs.true.i.tcp_under_memory_pressure.exit_crit_edge, %land.lhs.true270
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @tcp_memory_pressure to i32))
  %79 = load volatile i32, ptr @tcp_memory_pressure, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool8.i.not = icmp eq i32 %79, 0
  br i1 %tobool8.i.not, label %tcp_under_memory_pressure.exit.if.end274_crit_edge, label %tcp_under_memory_pressure.exit.if.then273_crit_edge

tcp_under_memory_pressure.exit.if.then273_crit_edge: ; preds = %tcp_under_memory_pressure.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then273

tcp_under_memory_pressure.exit.if.end274_crit_edge: ; preds = %tcp_under_memory_pressure.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end274

if.then273:                                       ; preds = %tcp_under_memory_pressure.exit.if.then273_crit_edge, %do.body.i.i.if.then273_crit_edge, %land.lhs.true.i.i.if.then273_crit_edge
  tail call fastcc void @__mptcp_mem_reclaim_partial(ptr noundef %sk)
  br label %if.end274

if.end274:                                        ; preds = %if.then273, %tcp_under_memory_pressure.exit.if.end274_crit_edge, %out.if.end274_crit_edge, %if.then265.if.end274_crit_edge, %cleanup.thread.if.end274_crit_edge
  %80 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load volatile i64, ptr %snd_nxt.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %7, i64 %81)
  %cmp280 = icmp eq i64 %7, %81
  br i1 %cmp280, label %land.lhs.true282, label %if.end274.if.else_crit_edge

if.end274.if.else_crit_edge:                      ; preds = %if.end274
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

land.lhs.true282:                                 ; preds = %if.end274
  %write_seq = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %82 = ptrtoint ptr %write_seq to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load volatile i64, ptr %write_seq, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %7, i64 %83)
  %cmp287 = icmp eq i64 %7, %83
  br i1 %cmp287, label %if.then289, label %land.lhs.true282.if.else_crit_edge

land.lhs.true282.if.else_crit_edge:               ; preds = %land.lhs.true282
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.else

if.then289:                                       ; preds = %land.lhs.true282
  %pprev.i.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4, i32 0, i32 1
  %84 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.i.i384.not = icmp eq ptr %85, null
  br i1 %tobool.not.i.i.i384.not, label %if.then289.if.end296_crit_edge, label %land.lhs.true292

if.then289.if.end296_crit_edge:                   ; preds = %if.then289
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end296

land.lhs.true292:                                 ; preds = %if.then289
  %snd_data_fin_enable.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %86 = ptrtoint ptr %snd_data_fin_enable.i to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load volatile i8, ptr %snd_data_fin_enable.i, align 4, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %87)
  %tobool.not.i = icmp eq i8 %87, 0
  br i1 %tobool.not.i, label %land.lhs.true292.if.then294_crit_edge, label %mptcp_data_fin_enabled.exit

land.lhs.true292.if.then294_crit_edge:            ; preds = %land.lhs.true292
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then294

mptcp_data_fin_enabled.exit:                      ; preds = %land.lhs.true292
  %88 = ptrtoint ptr %write_seq to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load volatile i64, ptr %write_seq, align 8
  %90 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load volatile i64, ptr %snd_nxt.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %89, i64 %91)
  %cmp.i386 = icmp eq i64 %89, %91
  br i1 %cmp.i386, label %mptcp_data_fin_enabled.exit.if.end296_crit_edge, label %mptcp_data_fin_enabled.exit.if.then294_crit_edge

mptcp_data_fin_enabled.exit.if.then294_crit_edge: ; preds = %mptcp_data_fin_enabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then294

mptcp_data_fin_enabled.exit.if.end296_crit_edge:  ; preds = %mptcp_data_fin_enabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end296

if.then294:                                       ; preds = %mptcp_data_fin_enabled.exit.if.then294_crit_edge, %land.lhs.true292.if.then294_crit_edge
  %icsk_retransmit_timer.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  tail call void @sk_stop_timer(ptr noundef %sk, ptr noundef %icsk_retransmit_timer.i) #17
  %timer_ival.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 15
  %92 = ptrtoint ptr %timer_ival.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 0, ptr %timer_ival.i, align 8
  br label %if.end296

if.else:                                          ; preds = %land.lhs.true282.if.else_crit_edge, %if.end274.if.else_crit_edge
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %93 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %94)
  %cmp.i387 = icmp eq i8 %94, 7
  br i1 %cmp.i387, label %if.else.if.end296_crit_edge, label %if.end.i390, !prof !341

if.else.if.end296_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end296

if.end.i390:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %timer_ival.i388 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 15
  %95 = ptrtoint ptr %timer_ival.i388 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %timer_ival.i388, align 8
  %icsk_retransmit_timer.i389 = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %97 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %97, %96
  tail call void @sk_reset_timer(ptr noundef %sk, ptr noundef %icsk_retransmit_timer.i389, i32 noundef %add.i) #17
  br label %if.end296

if.end296:                                        ; preds = %if.end.i390, %if.else.if.end296_crit_edge, %if.then294, %mptcp_data_fin_enabled.exit.if.end296_crit_edge, %if.then289.if.end296_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__mptcp_check_push(ptr noundef %sk, ptr noundef %ssk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %first_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %0 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %first_pending.i, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end13_crit_edge, label %if.end

entry.if.end13_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13

if.end:                                           ; preds = %entry
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %if.end.sock_owned_by_user.exit_crit_edge

if.end.sock_owned_by_user.exit_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %if.end
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !340

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %if.end.sock_owned_by_user.exit_crit_edge
  %owned.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 1
  %3 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not = icmp eq i32 %4, 0
  br i1 %tobool.i.not, label %if.then2, label %if.else11

if.then2:                                         ; preds = %sock_owned_by_user.exit
  %call4 = tail call fastcc ptr @mptcp_subflow_get_send(ptr noundef %sk)
  %cmp = icmp eq ptr %call4, %ssk
  br i1 %cmp, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @__mptcp_subflow_push_pending(ptr noundef %sk, ptr noundef %ssk)
  br label %if.end13

if.else:                                          ; preds = %if.then2
  %tobool6.not = icmp eq ptr %call4, null
  br i1 %tobool6.not, label %if.else.if.end13_crit_edge, label %if.then7

if.else.if.end13_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end13

if.then7:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %call4, i32 0, i32 13
  %5 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %icsk_ulp_data.i, align 8
  tail call fastcc void @mptcp_subflow_delegate(ptr noundef %6)
  br label %if.end13

if.else11:                                        ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  %cb_flags = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 19
  %7 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cb_flags, align 4
  %or.i = or i32 %8, 2
  store i32 %or.i, ptr %cb_flags, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then7, %if.else.if.end13_crit_edge, %if.then5, %entry.if.end13_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_subflow_push_pending(ptr noundef %sk, ptr noundef %ssk) unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.mptcp_sendmsg_info, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %info) #17
  %0 = call ptr @memcpy(ptr %info, ptr @__const.__mptcp_subflow_push_pending.info, i32 20)
  %flags = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 4
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %flags, align 4
  %first_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %2 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %first_pending.i, align 8
  %tobool.not106 = icmp eq ptr %3, null
  br i1 %tobool.not106, label %entry.if.end51_crit_edge, label %while.body.lr.ph

entry.if.end51_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end51

while.body.lr.ph:                                 ; preds = %entry
  %sent = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 3
  %limit = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 2
  %snd_burst.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 10
  %snd_nxt.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %rtx_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35
  br label %while.body

while.body:                                       ; preds = %do.body29.while.body_crit_edge, %while.body.lr.ph
  %4 = phi ptr [ %3, %while.body.lr.ph ], [ %30, %do.body29.while.body_crit_edge ]
  %first.0.off0108 = phi i1 [ true, %while.body.lr.ph ], [ %first.1.off0.lcssa, %do.body29.while.body_crit_edge ]
  %copied.0107 = phi i32 [ 0, %while.body.lr.ph ], [ %copied.1.lcssa, %do.body29.while.body_crit_edge ]
  %already_sent = getelementptr inbounds %struct.mptcp_data_frag, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %already_sent, align 2
  %7 = ptrtoint ptr %sent to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %sent, align 2
  %data_len = getelementptr inbounds %struct.mptcp_data_frag, ptr %4, i32 0, i32 2
  %8 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %data_len, align 8
  %10 = ptrtoint ptr %limit to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %limit, align 4
  %conv = zext i16 %9 to i32
  %conv4 = zext i16 %6 to i32
  %sub = sub nsw i32 %conv, %conv4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp101 = icmp sgt i32 %sub, 0
  br i1 %cmp101, label %while.body7.lr.ph, label %while.body.do.body29_crit_edge

while.body.do.body29_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body29

while.body7.lr.ph:                                ; preds = %while.body
  %data_seq.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %4, i32 0, i32 1
  br label %while.body7

while.body7:                                      ; preds = %cleanup.while.body7_crit_edge, %while.body7.lr.ph
  %first.1.off0104 = phi i1 [ %first.0.off0108, %while.body7.lr.ph ], [ false, %cleanup.while.body7_crit_edge ]
  %copied.1103 = phi i32 [ %copied.0107, %while.body7.lr.ph ], [ %add26, %cleanup.while.body7_crit_edge ]
  %len.0102 = phi i32 [ %sub, %while.body7.lr.ph ], [ %sub27, %cleanup.while.body7_crit_edge ]
  br i1 %first.1.off0104, label %while.body7.cond.end_crit_edge, label %cond.false

while.body7.cond.end_crit_edge:                   ; preds = %while.body7
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.false:                                       ; preds = %while.body7
  call void @__sanitizer_cov_trace_pc() #19
  %call11 = call fastcc ptr @mptcp_subflow_get_send(ptr noundef %sk)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %while.body7.cond.end_crit_edge
  %cond = phi ptr [ %call11, %cond.false ], [ %ssk, %while.body7.cond.end_crit_edge ]
  %tobool12.not = icmp eq ptr %cond, null
  br i1 %tobool12.not, label %cond.end.out_crit_edge, label %if.end

cond.end.out_crit_edge:                           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end:                                           ; preds = %cond.end
  %cmp13.not = icmp eq ptr %cond, %ssk
  br i1 %cmp13.not, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %cond, i32 0, i32 13
  %11 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %icsk_ulp_data.i, align 8
  call fastcc void @mptcp_subflow_delegate(ptr noundef %12)
  br label %out

if.end17:                                         ; preds = %if.end
  %call18 = call fastcc i32 @mptcp_sendmsg_frag(ptr noundef %sk, ptr noundef %ssk, ptr noundef nonnull %4, ptr noundef nonnull %info)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call18)
  %cmp19 = icmp slt i32 %call18, 1
  br i1 %cmp19, label %if.end17.out_crit_edge, label %if.end22

if.end17.out_crit_edge:                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end22:                                         ; preds = %if.end17
  %13 = ptrtoint ptr %sent to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %sent, align 2
  %15 = trunc i32 %call18 to i16
  %conv25 = add i16 %14, %15
  store i16 %conv25, ptr %sent, align 2
  %add26 = add i32 %call18, %copied.1103
  %sub27 = sub nsw i32 %len.0102, %call18
  %16 = ptrtoint ptr %data_seq.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %data_seq.i, align 8
  %18 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %already_sent, align 2
  %conv1.i = add i16 %19, %15
  store i16 %conv1.i, ptr %already_sent, align 2
  %20 = ptrtoint ptr %snd_burst.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %snd_burst.i, align 8
  %sub.i = sub i32 %21, %call18
  store i32 %sub.i, ptr %snd_burst.i, align 8
  %22 = load i16, ptr %already_sent, align 2
  %conv3.i = zext i16 %22 to i64
  %add4.i = add i64 %17, %conv3.i
  %23 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %snd_nxt.i, align 8
  %sub.i.i = sub i64 %24, %add4.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i.i)
  %cmp.i.i = icmp slt i64 %sub.i.i, 0
  br i1 %cmp.i.i, label %if.then.i, label %if.end22.cleanup_crit_edge, !prof !340

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then.i:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  %25 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %add4.i, ptr %snd_nxt.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end22.cleanup_crit_edge
  %cmp = icmp sgt i32 %sub27, 0
  br i1 %cmp, label %cleanup.while.body7_crit_edge, label %cleanup.do.body29_crit_edge

cleanup.do.body29_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body29

cleanup.while.body7_crit_edge:                    ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body7

do.body29:                                        ; preds = %cleanup.do.body29_crit_edge, %while.body.do.body29_crit_edge
  %copied.1.lcssa = phi i32 [ %copied.0107, %while.body.do.body29_crit_edge ], [ %add26, %cleanup.do.body29_crit_edge ]
  %first.1.off0.lcssa = phi i1 [ %first.0.off0108, %while.body.do.body29_crit_edge ], [ false, %cleanup.do.body29_crit_edge ]
  %26 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %first_pending.i, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 4
  %cmp.i.not.i = icmp eq ptr %29, %rtx_queue.i
  %spec.select.i = select i1 %cmp.i.not.i, ptr null, ptr %29
  store volatile ptr %spec.select.i, ptr %first_pending.i, align 8
  %30 = load volatile ptr, ptr %first_pending.i, align 8
  %tobool.not = icmp eq ptr %30, null
  br i1 %tobool.not, label %do.body29.out_crit_edge, label %do.body29.while.body_crit_edge

do.body29.while.body_crit_edge:                   ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body

do.body29.out_crit_edge:                          ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

out:                                              ; preds = %do.body29.out_crit_edge, %if.end17.out_crit_edge, %if.then15, %cond.end.out_crit_edge
  %copied.3 = phi i32 [ %copied.1103, %if.then15 ], [ %copied.1103, %cond.end.out_crit_edge ], [ %copied.1103, %if.end17.out_crit_edge ], [ %copied.1.lcssa, %do.body29.out_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %copied.3)
  %tobool36.not = icmp eq i32 %copied.3, 0
  br i1 %tobool36.not, label %out.if.end51_crit_edge, label %if.then37

out.if.end51_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end51

if.then37:                                        ; preds = %out
  %31 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %info, align 4
  %nonagle = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 37
  %33 = ptrtoint ptr %nonagle to i32
  call void @__asan_load2_noabort(i32 %33)
  %bf.load = load i16, ptr %nonagle, align 4
  %34 = lshr i16 %bf.load, 4
  %35 = and i16 %34, 15
  %conv39 = zext i16 %35 to i32
  %size_goal = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 1
  %36 = ptrtoint ptr %size_goal to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %size_goal, align 4
  call void @tcp_push(ptr noundef %ssk, i32 noundef 0, i32 noundef %32, i32 noundef %conv39, i32 noundef %37) #17
  %pprev.i.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4, i32 0, i32 1
  %38 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.i.i.not = icmp eq ptr %39, null
  br i1 %tobool.not.i.i.i.not, label %if.then41, label %if.then37.if.end42_crit_edge

if.then37.if.end42_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end42

if.then41:                                        ; preds = %if.then37
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %40 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load volatile i8, ptr %skc_state.i.i, align 2
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %41)
  %cmp.i = icmp eq i8 %41, 7
  br i1 %cmp.i, label %if.then41.if.end42_crit_edge, label %if.end.i, !prof !341

if.then41.if.end42_crit_edge:                     ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end42

if.end.i:                                         ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #19
  %timer_ival.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 15
  %42 = ptrtoint ptr %timer_ival.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %timer_ival.i, align 8
  %icsk_retransmit_timer.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %44 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %44, %43
  call void @sk_reset_timer(ptr noundef %sk, ptr noundef %icsk_retransmit_timer.i, i32 noundef %add.i) #17
  br label %if.end42

if.end42:                                         ; preds = %if.end.i, %if.then41.if.end42_crit_edge, %if.then37.if.end42_crit_edge
  %snd_data_fin_enable = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %45 = ptrtoint ptr %snd_data_fin_enable to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %snd_data_fin_enable, align 4, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool43.not = icmp eq i8 %46, 0
  br i1 %tobool43.not, label %if.end42.if.end51_crit_edge, label %land.lhs.true

if.end42.if.end51_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end51

land.lhs.true:                                    ; preds = %if.end42
  %snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %47 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %snd_nxt, align 8
  %add45 = add i64 %48, 1
  %write_seq = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %49 = ptrtoint ptr %write_seq to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %write_seq, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add45, i64 %50)
  %cmp46 = icmp eq i64 %add45, %50
  br i1 %cmp46, label %if.then48, label %land.lhs.true.if.end51_crit_edge

land.lhs.true.if.end51_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end51

if.then48:                                        ; preds = %land.lhs.true
  %skc_state.i.i86 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %51 = ptrtoint ptr %skc_state.i.i86 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load volatile i8, ptr %skc_state.i.i86, align 2
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %52)
  %cmp.not.i = icmp eq i8 %52, 7
  br i1 %cmp.not.i, label %if.then48.if.end51_crit_edge, label %land.lhs.true.i

if.then48.if.end51_crit_edge:                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end51

land.lhs.true.i:                                  ; preds = %if.then48
  %work.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %53 = load ptr, ptr @system_wq, align 4
  %call.i.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %53, ptr noundef %work.i) #17
  br i1 %call.i.i.i, label %if.then.i87, label %land.lhs.true.i.if.end51_crit_edge

land.lhs.true.i.if.end51_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end51

if.then.i87:                                      ; preds = %land.lhs.true.i
  %skc_refcnt.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i, i32 1, i32 3, i32 1) #17
  %54 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i, ptr %skc_refcnt.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %54, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i87.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !341

if.then.i87.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i87
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i87
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %55 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %55)
  %.not.i.i.i.i.i = icmp sgt i32 %55, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.if.end51_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.if.end51_crit_edge:             ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end51

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i87.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i87.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %if.end51

if.end51:                                         ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.if.end51_crit_edge, %land.lhs.true.i.if.end51_crit_edge, %if.then48.if.end51_crit_edge, %land.lhs.true.if.end51_crit_edge, %if.end42.if.end51_crit_edge, %out.if.end51_crit_edge, %entry.if.end51_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %info) #17
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mptcp_subflow_delegate(ptr noundef %subflow) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end62_crit_edge, label %land.lhs.true

entry.if.end62_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end62

land.lhs.true:                                    ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %4, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !358
  %5 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, ptrtoint (ptr @lockdep_recursion to i32)
  %11 = inttoptr i32 %add to ptr
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !359
  %14 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i6 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i6 to ptr
  %preempt_count.i.i7 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i7 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i7, align 4
  %sub.i = add i32 %17, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool20.not = icmp eq i32 %13, 0
  br i1 %tobool20.not, label %land.rhs, label %land.lhs.true.if.end62_crit_edge

land.lhs.true.if.end62_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end62

land.rhs:                                         ; preds = %land.lhs.true
  %18 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %21, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool22.not = icmp eq i32 %and, 0
  br i1 %tobool22.not, label %land.rhs.land.rhs31_crit_edge, label %lor.lhs.false

land.rhs.land.rhs31_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs31

lor.lhs.false:                                    ; preds = %land.rhs
  %22 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i8 = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i8 to ptr
  %preempt_count.i9 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i9 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i9, align 4
  %and24 = and i32 %25, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  br i1 %tobool25.not, label %lor.rhs, label %lor.lhs.false.land.rhs31_crit_edge

lor.lhs.false.land.rhs31_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs31

lor.rhs:                                          ; preds = %lor.lhs.false
  %26 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i10 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i10 to ptr
  %preempt_count.i11 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i11 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i11, align 4
  %and27 = and i32 %29, 15728640
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27)
  %tobool28.not = icmp eq i32 %and27, 0
  br i1 %tobool28.not, label %lor.rhs.if.end62_crit_edge, label %lor.rhs.land.rhs31_crit_edge

lor.rhs.land.rhs31_crit_edge:                     ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs31

lor.rhs.if.end62_crit_edge:                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end62

land.rhs31:                                       ; preds = %lor.rhs.land.rhs31_crit_edge, %lor.lhs.false.land.rhs31_crit_edge, %land.rhs.land.rhs31_crit_edge
  %.b1 = load i1, ptr @mptcp_subflow_delegate.__already_done, align 1
  br i1 %.b1, label %land.rhs31.if.end62_crit_edge, label %if.then, !prof !340

land.rhs31.if.end62_crit_edge:                    ; preds = %land.rhs31
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end62

if.then:                                          ; preds = %land.rhs31
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_subflow_delegate.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.106, i32 noundef 523, i32 noundef 9, ptr noundef null) #17
  br label %if.end62

if.end62:                                         ; preds = %if.then, %land.rhs31.if.end62_crit_edge, %lor.rhs.if.end62_crit_edge, %land.lhs.true.if.end62_crit_edge, %entry.if.end62_crit_edge
  %delegated_status = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 1, i32 0, i32 24
  %call72 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %delegated_status) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %if.then74, label %if.end62.cleanup_crit_edge

if.end62.cleanup_crit_edge:                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then74:                                        ; preds = %if.end62
  %delegated_node = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 2
  %30 = ptrtoint ptr %delegated_node to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %delegated_node, align 4
  %cmp.i.not = icmp eq ptr %31, %delegated_node
  br i1 %cmp.i.not, label %do.body79, label %if.then74.cleanup_crit_edge

if.then74.cleanup_crit_edge:                      ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body79:                                        ; preds = %if.then74
  %32 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i12 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i12 to ptr
  %cpu87 = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %cpu87 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cpu87, align 4
  %arrayidx88 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %35
  %36 = ptrtoint ptr %arrayidx88 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx88, align 4
  %add89 = add i32 %37, ptrtoint (ptr @mptcp_delegated_actions to i32)
  %38 = inttoptr i32 %add89 to ptr
  %head = getelementptr inbounds %struct.mptcp_delegated_action, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile ptr, ptr %head, align 4
  %cmp.i13.not = icmp eq ptr %40, %head
  %prev.i = getelementptr inbounds %struct.mptcp_delegated_action, ptr %38, i32 0, i32 1, i32 1
  %41 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %delegated_node, ptr noundef %42, ptr noundef %head) #17
  br i1 %call.i.i, label %if.end.i.i, label %do.body79.list_add_tail.exit_crit_edge

do.body79.list_add_tail.exit_crit_edge:           ; preds = %do.body79
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %do.body79
  call void @__sanitizer_cov_trace_pc() #19
  %43 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %delegated_node, ptr %prev.i, align 4
  %44 = ptrtoint ptr %delegated_node to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %head, ptr %delegated_node, align 4
  %prev3.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 2, i32 1
  %45 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %42, ptr %prev3.i.i, align 4
  %46 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %delegated_node, ptr %42, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %do.body79.list_add_tail.exit_crit_edge
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow, i32 0, i32 5
  %47 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %tcp_sock.i, align 8
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %48, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %49 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %49, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %list_add_tail.exit.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !341

list_add_tail.exit.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %list_add_tail.exit
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %50 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %50)
  %.not.i.i.i.i = icmp sgt i32 %50, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.sock_hold.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.sock_hold.exit_crit_edge:         ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_hold.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %list_add_tail.exit.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %list_add_tail.exit.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #17
  br label %sock_hold.exit

sock_hold.exit:                                   ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.sock_hold.exit_crit_edge
  br i1 %cmp.i13.not, label %if.then97, label %sock_hold.exit.cleanup_crit_edge

sock_hold.exit.cleanup_crit_edge:                 ; preds = %sock_hold.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then97:                                        ; preds = %sock_hold.exit
  %call.i = tail call zeroext i1 @napi_schedule_prep(ptr noundef %38) #17
  br i1 %call.i, label %if.then.i, label %if.then97.cleanup_crit_edge

if.then97.cleanup_crit_edge:                      ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then.i:                                        ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__napi_schedule(ptr noundef %38) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.then97.cleanup_crit_edge, %sock_hold.exit.cleanup_crit_edge, %if.then74.cleanup_crit_edge, %if.end62.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_subflow_process_delegated(ptr noundef %ssk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 13
  %0 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %icsk_ulp_data.i, align 8
  %conn = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %conn, align 4
  %delegated_status = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 1, i32 0, i32 24
  %4 = ptrtoint ptr %delegated_status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %delegated_status, align 4
  %and1.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then:                                          ; preds = %entry
  %sk_lock = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %if.then.sock_owned_by_user.exit_crit_edge

if.then.sock_owned_by_user.exit_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %if.then
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !340

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %if.then.sock_owned_by_user.exit_crit_edge
  %owned.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 4, i32 1
  %7 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.then3, label %if.else

if.then3:                                         ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @__mptcp_subflow_push_pending(ptr noundef %3, ptr noundef %ssk)
  br label %if.end

if.else:                                          ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  %cb_flags = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 19
  %9 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cb_flags, align 4
  %or.i = or i32 %10, 2
  store i32 %or.i, ptr %cb_flags, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !360
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %delegated_status) #17
  br label %if.end7

if.end7:                                          ; preds = %if.end, %entry.if.end7_crit_edge
  %11 = ptrtoint ptr %delegated_status to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %delegated_status, align 4
  %13 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool10.not = icmp eq i32 %13, 0
  br i1 %tobool10.not, label %if.end7.if.end12_crit_edge, label %if.then11

if.end7.if.end12_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then11:                                        ; preds = %if.end7
  %14 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %icsk_ulp_data.i, align 8
  %fully_established.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %15, i32 0, i32 1, i32 0, i32 13
  %16 = ptrtoint ptr %fully_established.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %bf.load.i = load i32, ptr %fully_established.i, align 8
  %17 = and i32 %bf.load.i, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i = icmp eq i32 %17, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then11.schedule_3rdack_retransmission.exit_crit_edge

if.then11.schedule_3rdack_retransmission.exit_crit_edge: ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #19
  br label %schedule_3rdack_retransmission.exit

if.end.i:                                         ; preds = %if.then11
  %srtt_us.i = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 45
  %18 = ptrtoint ptr %srtt_us.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %srtt_us.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool3.not.i = icmp eq i32 %19, 0
  br i1 %tobool3.not.i, label %if.end.i.if.end7.i_crit_edge, label %if.else.i.i

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7.i

if.else.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %shr.i24 = lshr i32 %19, 2
  %call3.i.i = tail call i32 @__usecs_to_jiffies(i32 noundef %shr.i24) #17
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.else.i.i, %if.end.i.if.end7.i_crit_edge
  %timeout.0.i = phi i32 [ 100, %if.end.i.if.end7.i_crit_edge ], [ %call3.i.i, %if.else.i.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %20 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %20, %timeout.0.i
  %icsk_ack.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 24
  %21 = ptrtoint ptr %icsk_ack.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %icsk_ack.i, align 4
  %23 = and i8 %22, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool8.not.i = icmp eq i8 %23, 0
  br i1 %tobool8.not.i, label %if.end7.i.if.end39.i_crit_edge, label %land.rhs.i

if.end7.i.if.end39.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end39.i

land.rhs.i:                                       ; preds = %if.end7.i
  %.b66.i = load i1, ptr @schedule_3rdack_retransmission.__already_done, align 1
  br i1 %.b66.i, label %land.rhs.i.if.end39.i_crit_edge, label %if.then17.i, !prof !340

land.rhs.i.if.end39.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end39.i

if.then17.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @schedule_3rdack_retransmission.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 3123, i32 noundef 9, ptr noundef null) #17
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then17.i, %land.rhs.i.if.end39.i_crit_edge, %if.end7.i.if.end39.i_crit_edge
  %24 = ptrtoint ptr %icsk_ack.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %icsk_ack.i, align 4
  %26 = or i8 %25, 3
  store i8 %26, ptr %icsk_ack.i, align 4
  %timeout52.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 24, i32 5
  %27 = ptrtoint ptr %timeout52.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %add.i, ptr %timeout52.i, align 4
  %icsk_delack_timer.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 5
  tail call void @sk_reset_timer(ptr noundef %ssk, ptr noundef %icsk_delack_timer.i, i32 noundef %add.i) #17
  br label %schedule_3rdack_retransmission.exit

schedule_3rdack_retransmission.exit:              ; preds = %if.end39.i, %if.then11.schedule_3rdack_retransmission.exit_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !360
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %delegated_status) #17
  br label %if.end12

if.end12:                                         ; preds = %schedule_3rdack_retransmission.exit, %if.end7.if.end12_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_finish_connect(ptr noundef %ssk) local_unnamed_addr #0 align 64 {
entry:
  %ack_seq = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ack_seq) #17
  %0 = ptrtoint ptr %ack_seq to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %ack_seq, align 8, !annotation !343
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 13
  %1 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %icsk_ulp_data.i, align 8
  %conn = getelementptr inbounds %struct.mptcp_subflow_context, ptr %2, i32 0, i32 6
  %3 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %conn, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_finish_connect.__UNIQUE_ID_ddebug773, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_finish_connect, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %token = getelementptr inbounds %struct.mptcp_subflow_context, ptr %2, i32 0, i32 1, i32 0, i32 6
  %5 = ptrtoint ptr %token to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %token, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_finish_connect.__UNIQUE_ID_ddebug773, ptr noundef nonnull @.str.9, ptr noundef %4, i32 noundef %6) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %remote_key = getelementptr inbounds %struct.mptcp_subflow_context, ptr %2, i32 0, i32 1, i32 0, i32 2
  %7 = ptrtoint ptr %remote_key to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %remote_key, align 8
  call void @mptcp_crypto_key_sha(i64 noundef %8, ptr noundef null, ptr noundef nonnull %ack_seq) #17
  %9 = ptrtoint ptr %ack_seq to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %ack_seq, align 8
  %inc = add i64 %10, 1
  store i64 %inc, ptr %ack_seq, align 8
  %map_seq = getelementptr inbounds %struct.mptcp_subflow_context, ptr %2, i32 0, i32 1, i32 0, i32 4
  %11 = ptrtoint ptr %map_seq to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %inc, ptr %map_seq, align 8
  %map_subflow_seq = getelementptr inbounds %struct.mptcp_subflow_context, ptr %2, i32 0, i32 1, i32 0, i32 8
  %12 = ptrtoint ptr %map_subflow_seq to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %map_subflow_seq, align 4
  %13 = ptrtoint ptr %remote_key to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %remote_key, align 8
  %remote_key11 = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 2
  %15 = ptrtoint ptr %remote_key11 to i32
  call void @__asan_store8_noabort(i32 %15)
  store volatile i64 %14, ptr %remote_key11, align 8
  %local_key = getelementptr inbounds %struct.mptcp_subflow_context, ptr %2, i32 0, i32 1, i32 0, i32 1
  %16 = ptrtoint ptr %local_key to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %local_key, align 8
  %local_key21 = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 1
  %18 = ptrtoint ptr %local_key21 to i32
  call void @__asan_store8_noabort(i32 %18)
  store volatile i64 %17, ptr %local_key21, align 8
  %idsn = getelementptr inbounds %struct.mptcp_subflow_context, ptr %2, i32 0, i32 1, i32 0, i32 3
  %19 = ptrtoint ptr %idsn to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %idsn, align 8
  %add = add i64 %20, 1
  %write_seq = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 3
  %21 = ptrtoint ptr %write_seq to i32
  call void @__asan_store8_noabort(i32 %21)
  store volatile i64 %add, ptr %write_seq, align 8
  %snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 4
  %22 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_store8_noabort(i32 %22)
  store volatile i64 %add, ptr %snd_nxt, align 8
  %ack_seq50 = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 5
  %23 = ptrtoint ptr %ack_seq50 to i32
  call void @__asan_store8_noabort(i32 %23)
  store volatile i64 %inc, ptr %ack_seq50, align 8
  %rcv_wnd_sent = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 6
  %24 = ptrtoint ptr %rcv_wnd_sent to i32
  call void @__asan_store8_noabort(i32 %24)
  store volatile i64 %inc, ptr %rcv_wnd_sent, align 8
  %can_ack = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 22
  %25 = ptrtoint ptr %can_ack to i32
  call void @__asan_store1_noabort(i32 %25)
  store volatile i8 1, ptr %can_ack, align 1
  %snd_una = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 13
  %26 = ptrtoint ptr %snd_una to i32
  call void @__asan_store8_noabort(i32 %26)
  store volatile i64 %add, ptr %snd_una, align 8
  call void @mptcp_pm_new_connection(ptr noundef %4, ptr noundef %ssk, i32 noundef 0) #17
  %copied.i = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 41, i32 1
  %27 = ptrtoint ptr %copied.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %copied.i, align 4
  %rtt_us.i = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 41, i32 3
  %28 = ptrtoint ptr %rtt_us.i to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 0, ptr %rtt_us.i, align 8
  %tcp_mstamp.i = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 44
  %29 = ptrtoint ptr %tcp_mstamp.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %tcp_mstamp.i, align 8
  %time.i = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 41, i32 2
  %31 = ptrtoint ptr %time.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %time.i, align 8
  %rcv_wnd.i = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 79
  %32 = ptrtoint ptr %rcv_wnd.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rcv_wnd.i, align 8
  %advmss.i = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 32
  %34 = ptrtoint ptr %advmss.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %advmss.i, align 8
  %conv.i = zext i16 %35 to i32
  %mul.i = mul nuw nsw i32 %conv.i, 10
  %36 = call i32 @llvm.umin.i32(i32 %33, i32 %mul.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp7.i = icmp eq i32 %36, 0
  %storemerge.i = select i1 %cmp7.i, i32 5360, i32 %36
  %rcvq_space.i = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 41
  %37 = ptrtoint ptr %rcvq_space.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %storemerge.i, ptr %rcvq_space.i, align 8
  %38 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %snd_nxt, align 8
  %snd_wnd.i = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 26
  %40 = ptrtoint ptr %snd_wnd.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %snd_wnd.i, align 4
  %conv14.i = zext i32 %41 to i64
  %add.i = add i64 %39, %conv14.i
  %wnd_end.i = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 14
  %42 = ptrtoint ptr %wnd_end.i to i32
  call void @__asan_store8_noabort(i32 %42)
  store volatile i64 %add.i, ptr %wnd_end.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ack_seq) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_pm_new_connection(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_sock_graft(ptr noundef %sk, ptr noundef %parent) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_callback_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock) #17
  %wq = getelementptr inbounds %struct.socket, ptr %parent, i32 0, i32 7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !361
  %0 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %wq, ptr %0, align 8
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %2 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %parent, ptr %sk_socket.i, align 8
  %sk_uid = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 55
  %i_uid = getelementptr inbounds %struct.socket_alloc, ptr %parent, i32 0, i32 1, i32 2
  %3 = ptrtoint ptr %i_uid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %i_uid, align 4
  %5 = ptrtoint ptr %sk_uid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %sk_uid, align 4
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @mptcp_finish_join(ptr noundef %ssk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 13
  %0 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %icsk_ulp_data.i, align 8
  %conn = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %conn, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_finish_join.__UNIQUE_ID_ddebug785, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_finish_join, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_finish_join.__UNIQUE_ID_ddebug785, ptr noundef nonnull @.str.12, ptr noundef %3, ptr noundef %1) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %5)
  %cmp.i = icmp eq i8 %5, 1
  br i1 %cmp.i, label %mptcp_is_fully_established.exit, label %do.end.if.then6_crit_edge

do.end.if.then6_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then6

mptcp_is_fully_established.exit:                  ; preds = %do.end
  %fully_established.i = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 23
  %6 = ptrtoint ptr %fully_established.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load volatile i8, ptr %fully_established.i, align 2, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.i.not = icmp eq i8 %7, 0
  br i1 %tobool.i.not, label %mptcp_is_fully_established.exit.if.then6_crit_edge, label %if.end7

mptcp_is_fully_established.exit.if.then6_crit_edge: ; preds = %mptcp_is_fully_established.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then6

if.then6:                                         ; preds = %mptcp_is_fully_established.exit.if.then6_crit_edge, %do.end.if.then6_crit_edge
  %reset_reason = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 1, i32 0, i32 22
  %8 = ptrtoint ptr %reset_reason to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load = load i8, ptr %reset_reason, align 2
  %bf.clear = and i8 %bf.load, -61
  %bf.set = or i8 %bf.clear, 4
  store i8 %bf.set, ptr %reset_reason, align 2
  br label %cleanup

if.end7:                                          ; preds = %mptcp_is_fully_established.exit
  %server_side = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 40, i32 5
  %9 = ptrtoint ptr %server_side to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %server_side, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool8.not = icmp eq i8 %10, 0
  br i1 %tobool8.not, label %if.end7.out_crit_edge, label %if.end10

if.end7.out_crit_edge:                            ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end10:                                         ; preds = %if.end7
  %call11 = tail call zeroext i1 @mptcp_pm_allow_new_subflow(ptr noundef %3) #17
  br i1 %call11, label %if.end13, label %if.end10.err_prohibited_crit_edge

if.end10.err_prohibited_crit_edge:                ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_prohibited

if.end13:                                         ; preds = %if.end10
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %1, align 4
  %cmp.i136.not = icmp eq ptr %12, %1
  br i1 %cmp.i136.not, label %if.end69.critedge, label %land.rhs

land.rhs:                                         ; preds = %if.end13
  %.b122 = load i1, ptr @mptcp_finish_join.__already_done, align 1
  br i1 %.b122, label %land.rhs.err_prohibited_crit_edge, label %if.then33, !prof !340

land.rhs.err_prohibited_crit_edge:                ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %err_prohibited

if.then33:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_finish_join.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 3241, i32 noundef 9, ptr noundef null) #17
  br label %err_prohibited

if.end69.critedge:                                ; preds = %if.end13
  %sk_lock = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %if.end69.critedge.sock_owned_by_user.exit_crit_edge

if.end69.critedge.sock_owned_by_user.exit_crit_edge: ; preds = %if.end69.critedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %if.end69.critedge
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %13 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !340

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %if.end69.critedge.sock_owned_by_user.exit_crit_edge
  %owned.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 4, i32 1
  %14 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i137.not = icmp eq i32 %15, 0
  br i1 %tobool.i137.not, label %if.then71, label %if.else

if.then71:                                        ; preds = %sock_owned_by_user.exit
  %16 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load volatile i8, ptr %skc_state.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %17)
  %cmp.not.i = icmp eq i8 %17, 1
  br i1 %cmp.not.i, label %if.end.i, label %err_prohibited.critedge124

if.end.i:                                         ; preds = %if.then71
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 71
  %18 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sk_socket.i, align 8
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %if.end.i.if.end6.i_crit_edge, label %land.lhs.true.i

if.end.i.if.end6.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %sk_socket2.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 71
  %20 = ptrtoint ptr %sk_socket2.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %sk_socket2.i, align 8
  %tobool3.not.i = icmp eq ptr %21, null
  br i1 %tobool3.not.i, label %if.then4.i, label %land.lhs.true.i.if.end6.i_crit_edge

land.lhs.true.i.if.end6.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i

if.then4.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_callback_lock.i.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i.i) #17
  %wq.i.i = getelementptr inbounds %struct.socket, ptr %19, i32 0, i32 7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !361
  %22 = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 17
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %wq.i.i, ptr %22, align 8
  %24 = ptrtoint ptr %sk_socket2.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %19, ptr %sk_socket2.i, align 8
  %sk_uid.i.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 55
  %i_uid.i.i = getelementptr inbounds %struct.socket_alloc, ptr %19, i32 0, i32 1, i32 2
  %25 = ptrtoint ptr %i_uid.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %i_uid.i.i, align 4
  %27 = ptrtoint ptr %sk_uid.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %sk_uid.i.i, align 4
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i.i) #17
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %land.lhs.true.i.if.end6.i_crit_edge, %if.end.i.if.end6.i_crit_edge
  %sk_userlocks.i.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 43
  %28 = ptrtoint ptr %sk_userlocks.i.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load.i.i = load i8, ptr %sk_userlocks.i.i, align 8
  %29 = and i8 %bf.load.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool.not.i.i138 = icmp eq i8 %29, 0
  br i1 %tobool.not.i.i138, label %lor.lhs.false.i.i, label %if.end6.i.if.then75_crit_edge

if.end6.i.if.then75_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then75

lor.lhs.false.i.i:                                ; preds = %if.end6.i
  %sk_sndbuf.i.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 21
  %30 = ptrtoint ptr %sk_sndbuf.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sk_sndbuf.i.i, align 4
  %sk_sndbuf1.i.i = getelementptr inbounds %struct.sock, ptr %3, i32 0, i32 21
  %32 = ptrtoint ptr %sk_sndbuf1.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %sk_sndbuf1.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %33)
  %cmp.not.i.i = icmp sgt i32 %31, %33
  br i1 %cmp.not.i.i, label %do.body6.i.i, label %lor.lhs.false.i.i.if.then75_crit_edge

lor.lhs.false.i.i.if.then75_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then75

do.body6.i.i:                                     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %34 = ptrtoint ptr %sk_sndbuf1.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile i32 %31, ptr %sk_sndbuf1.i.i, align 4
  br label %if.then75

if.then75:                                        ; preds = %do.body6.i.i, %lor.lhs.false.i.i.if.then75_crit_edge, %if.end6.i.if.then75_crit_edge
  tail call void @mptcp_sockopt_sync_locked(ptr noundef %3, ptr noundef %ssk) #17
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %35 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %35, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then75.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !341

if.then75.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then75
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %36 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %36)
  %.not.i.i.i.i = icmp sgt i32 %36, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.sock_hold.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.sock_hold.exit_crit_edge:         ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_hold.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then75.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then75.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #17
  br label %sock_hold.exit

sock_hold.exit:                                   ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.sock_hold.exit_crit_edge
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 34
  %prev.i = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 34, i32 1
  %37 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %1, ptr noundef %38, ptr noundef %conn_list) #17
  br i1 %call.i.i, label %if.end.i.i, label %sock_hold.exit.do.end91_crit_edge

sock_hold.exit.do.end91_crit_edge:                ; preds = %sock_hold.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end91

if.end.i.i:                                       ; preds = %sock_hold.exit
  call void @__sanitizer_cov_trace_pc() #19
  %39 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %1, ptr %prev.i, align 4
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %conn_list, ptr %1, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %41 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %38, ptr %prev3.i.i, align 4
  %42 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %1, ptr %38, align 4
  br label %do.end91

if.else:                                          ; preds = %sock_owned_by_user.exit
  %skc_refcnt.i126 = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 19
  %call.i.i.i.i.i.i127 = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i126, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i126, i32 1, i32 3, i32 1) #17
  %43 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i126, ptr %skc_refcnt.i126, i32 1, ptr elementtype(i32) %skc_refcnt.i126) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i128 = extractvalue { i32, i32, i32 } %43, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i128)
  %tobool1.not.i.i.i.i129 = icmp eq i32 %asmresult.i.i.i.i.i.i128, 0
  br i1 %tobool1.not.i.i.i.i129, label %if.else.if.end15.sink.split.i.i.i.i134_crit_edge, label %if.else.i.i.i.i132, !prof !341

if.else.if.end15.sink.split.i.i.i.i134_crit_edge: ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i134

if.else.i.i.i.i132:                               ; preds = %if.else
  %add.i.i.i.i130 = add i32 %asmresult.i.i.i.i.i.i128, 1
  %44 = or i32 %add.i.i.i.i130, %asmresult.i.i.i.i.i.i128
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %44)
  %.not.i.i.i.i131 = icmp sgt i32 %44, -1
  br i1 %.not.i.i.i.i131, label %if.else.i.i.i.i132.sock_hold.exit135_crit_edge, label %if.else.i.i.i.i132.if.end15.sink.split.i.i.i.i134_crit_edge, !prof !340

if.else.i.i.i.i132.if.end15.sink.split.i.i.i.i134_crit_edge: ; preds = %if.else.i.i.i.i132
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i134

if.else.i.i.i.i132.sock_hold.exit135_crit_edge:   ; preds = %if.else.i.i.i.i132
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_hold.exit135

if.end15.sink.split.i.i.i.i134:                   ; preds = %if.else.i.i.i.i132.if.end15.sink.split.i.i.i.i134_crit_edge, %if.else.if.end15.sink.split.i.i.i.i134_crit_edge
  %.sink.i.i.i.i133 = phi i32 [ 2, %if.else.if.end15.sink.split.i.i.i.i134_crit_edge ], [ 1, %if.else.i.i.i.i132.if.end15.sink.split.i.i.i.i134_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i126, i32 noundef %.sink.i.i.i.i133) #17
  br label %sock_hold.exit135

sock_hold.exit135:                                ; preds = %if.end15.sink.split.i.i.i.i134, %if.else.i.i.i.i132.sock_hold.exit135_crit_edge
  %join_list = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 37
  %prev.i139 = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 37, i32 1
  %45 = ptrtoint ptr %prev.i139 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %prev.i139, align 4
  %call.i.i140 = tail call zeroext i1 @__list_add_valid(ptr noundef %1, ptr noundef %46, ptr noundef %join_list) #17
  br i1 %call.i.i140, label %if.end.i.i142, label %sock_hold.exit135.list_add_tail.exit143_crit_edge

sock_hold.exit135.list_add_tail.exit143_crit_edge: ; preds = %sock_hold.exit135
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add_tail.exit143

if.end.i.i142:                                    ; preds = %sock_hold.exit135
  call void @__sanitizer_cov_trace_pc() #19
  %47 = ptrtoint ptr %prev.i139 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %1, ptr %prev.i139, align 4
  %48 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %join_list, ptr %1, align 4
  %prev3.i.i141 = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %49 = ptrtoint ptr %prev3.i.i141 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %46, ptr %prev3.i.i141, align 4
  %50 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %1, ptr %46, align 4
  br label %list_add_tail.exit143

list_add_tail.exit143:                            ; preds = %if.end.i.i142, %sock_hold.exit135.list_add_tail.exit143_crit_edge
  %cb_flags = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 19
  %51 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cb_flags, align 4
  %or.i = or i32 %52, 32
  store i32 %or.i, ptr %cb_flags, align 4
  br label %do.end91

err_prohibited.critedge124:                       ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  br label %err_prohibited

err_prohibited:                                   ; preds = %err_prohibited.critedge124, %if.then33, %land.rhs.err_prohibited_crit_edge, %if.end10.err_prohibited_crit_edge
  %reset_reason84 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 1, i32 0, i32 22
  %53 = ptrtoint ptr %reset_reason84 to i32
  call void @__asan_load1_noabort(i32 %53)
  %bf.load85 = load i8, ptr %reset_reason84, align 2
  %bf.clear86 = and i8 %bf.load85, -61
  %bf.set87 = or i8 %bf.clear86, 12
  store i8 %bf.set87, ptr %reset_reason84, align 2
  br label %cleanup

do.end91:                                         ; preds = %list_add_tail.exit143, %if.end.i.i, %sock_hold.exit.do.end91_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  %ack_seq = getelementptr inbounds %struct.mptcp_sock, ptr %3, i32 0, i32 5
  %54 = ptrtoint ptr %ack_seq to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load volatile i64, ptr %ack_seq, align 8
  %map_seq = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 1, i32 0, i32 4
  %56 = ptrtoint ptr %map_seq to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %55, ptr %map_seq, align 8
  br label %out

out:                                              ; preds = %do.end91, %if.end7.out_crit_edge
  tail call void @mptcp_event(i32 noundef 10, ptr noundef %3, ptr noundef %ssk, i32 noundef 2592) #17
  br label %cleanup

cleanup:                                          ; preds = %out, %err_prohibited, %if.then6
  %retval.0 = phi i1 [ false, %err_prohibited ], [ true, %out ], [ false, %if.then6 ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mptcp_pm_allow_new_subflow(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @mptcp_proto_init() local_unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.proto, ptr @tcp_prot, i32 0, i32 50) to i32))
  %0 = load ptr, ptr getelementptr inbounds (%struct.proto, ptr @tcp_prot, i32 0, i32 50), align 4
  store ptr %0, ptr getelementptr inbounds (%struct.proto, ptr @mptcp_prot, i32 0, i32 50), align 4
  %call = tail call i32 @__percpu_counter_init(ptr noundef nonnull @mptcp_sockets_allocated, i64 noundef 0, i32 noundef 3264, ptr noundef nonnull @mptcp_proto_init.__key) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.13) #21
  unreachable

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @init_dummy_netdev(ptr noundef nonnull @mptcp_napi_dev) #17
  %call217 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %1 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call217, i32 %1)
  %cmp18 = icmp ult i32 %call217, %1
  br i1 %cmp18, label %if.end.do.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.end.do.body_crit_edge:                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %do.body.do.body_crit_edge, %if.end.do.body_crit_edge
  %call219 = phi i32 [ %call2, %do.body.do.body_crit_edge ], [ %call217, %if.end.do.body_crit_edge ]
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call219
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx, align 4
  %add = add i32 %3, ptrtoint (ptr @mptcp_delegated_actions to i32)
  %4 = inttoptr i32 %add to ptr
  %head = getelementptr inbounds %struct.mptcp_delegated_action, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %head, ptr %head, align 4
  %prev.i = getelementptr inbounds %struct.mptcp_delegated_action, ptr %4, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %head, ptr %prev.i, align 4
  %state.i = getelementptr inbounds %struct.napi_struct, ptr %4, i32 0, i32 1
  tail call void @_set_bit(i32 noundef 5, ptr noundef %state.i) #17
  tail call void @netif_napi_add(ptr noundef nonnull @mptcp_napi_dev, ptr noundef %4, ptr noundef nonnull @mptcp_napi_poll, i32 noundef 64) #17
  tail call void @napi_enable(ptr noundef %4) #17
  %call2 = tail call i32 @cpumask_next(i32 noundef %call219, ptr noundef nonnull @__cpu_possible_mask) #22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %7 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call2, %7
  br i1 %cmp, label %do.body.do.body_crit_edge, label %do.body.for.end_crit_edge

do.body.for.end_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

do.body.do.body_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

for.end:                                          ; preds = %do.body.for.end_crit_edge, %if.end.for.end_crit_edge
  tail call void @mptcp_subflow_init() #23
  tail call void @mptcp_pm_init() #23
  tail call void @mptcp_token_init() #23
  %call6 = tail call i32 @proto_register(ptr noundef nonnull @mptcp_prot, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp7.not = icmp eq i32 %call6, 0
  br i1 %cmp7.not, label %if.end9, label %if.then8

if.then8:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.14) #21
  unreachable

if.end9:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @inet_register_protosw(ptr noundef nonnull @mptcp_protosw) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__percpu_counter_init(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @init_dummy_netdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_napi_poll(ptr noundef %napi, i32 noundef %budget) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %head.i = getelementptr inbounds %struct.mptcp_delegated_action, ptr %napi, i32 0, i32 1
  br label %while.cond

while.cond:                                       ; preds = %sock_put.exit.while.cond_crit_edge, %entry
  %work_done.0 = phi i32 [ 0, %entry ], [ %inc, %sock_put.exit.while.cond_crit_edge ]
  %0 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.not.i = icmp eq ptr %1, %head.i
  br i1 %cmp.i.not.i, label %while.cond.while.end_crit_edge, label %if.end.i

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

if.end.i:                                         ; preds = %while.cond
  %add.ptr.i = getelementptr i8, ptr %1, i32 -144
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %1) #17
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.i.mptcp_subflow_delegated_next.exit_crit_edge

if.end.i.mptcp_subflow_delegated_next.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_subflow_delegated_next.exit

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i.i, align 4
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %mptcp_subflow_delegated_next.exit

mptcp_subflow_delegated_next.exit:                ; preds = %if.end.i.i.i, %if.end.i.mptcp_subflow_delegated_next.exit_crit_edge
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %1, ptr %1, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %1, ptr %prev.i3.i.i, align 4
  %cmp.not = icmp eq ptr %add.ptr.i, null
  br i1 %cmp.not, label %mptcp_subflow_delegated_next.exit.while.end_crit_edge, label %while.body

mptcp_subflow_delegated_next.exit.while.end_crit_edge: ; preds = %mptcp_subflow_delegated_next.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

while.body:                                       ; preds = %mptcp_subflow_delegated_next.exit
  %tcp_sock.i = getelementptr i8, ptr %1, i32 16
  %10 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tcp_sock.i, align 8
  %sk_lock = getelementptr inbounds %struct.sock, ptr %11, i32 0, i32 4
  tail call void @_raw_spin_lock_nested(ptr noundef %sk_lock, i32 noundef 1) #17
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %11, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %while.body.sock_owned_by_user.exit_crit_edge

while.body.sock_owned_by_user.exit_crit_edge:     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %while.body
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %11, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %12 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !340

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %while.body.sock_owned_by_user.exit_crit_edge
  %owned.i = getelementptr inbounds %struct.sock, ptr %11, i32 0, i32 4, i32 1
  %13 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.i.not = icmp eq i32 %14, 0
  br i1 %tobool.i.not, label %land.lhs.true, label %sock_owned_by_user.exit.if.end_crit_edge

sock_owned_by_user.exit.if.end_crit_edge:         ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

land.lhs.true:                                    ; preds = %sock_owned_by_user.exit
  %delegated_status.i = getelementptr i8, ptr %1, i32 -8
  %15 = ptrtoint ptr %delegated_status.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %delegated_status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i22.not = icmp eq i32 %16, 0
  br i1 %tobool.i22.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_subflow_process_delegated(ptr noundef %11)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %sock_owned_by_user.exit.if.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %sk_lock) #17
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %17 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !340

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !357
  tail call void @sk_free(ptr noundef %11) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  %inc = add i32 %work_done.0, 1
  %cmp7 = icmp eq i32 %inc, %budget
  br i1 %cmp7, label %sock_put.exit.cleanup11_crit_edge, label %sock_put.exit.while.cond_crit_edge

sock_put.exit.while.cond_crit_edge:               ; preds = %sock_put.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond

sock_put.exit.cleanup11_crit_edge:                ; preds = %sock_put.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup11

while.end:                                        ; preds = %mptcp_subflow_delegated_next.exit.while.end_crit_edge, %while.cond.while.end_crit_edge
  %call10 = tail call zeroext i1 @napi_complete_done(ptr noundef %napi, i32 noundef 0) #17
  br label %cleanup11

cleanup11:                                        ; preds = %while.end, %sock_put.exit.cleanup11_crit_edge
  %retval.2 = phi i32 [ %work_done.0, %while.end ], [ %budget, %sock_put.exit.cleanup11_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @mptcp_subflow_init() local_unnamed_addr #9 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @mptcp_pm_init() local_unnamed_addr #9 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @mptcp_token_init() local_unnamed_addr #9 section ".init.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proto_register(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @inet_register_protosw(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mptcp_proto_v6_init() local_unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = call ptr @memcpy(ptr @mptcp_v6_prot, ptr @mptcp_prot, i32 252)
  store i64 5571045387146769920, ptr getelementptr inbounds (%struct.proto, ptr @mptcp_v6_prot, i32 0, i32 52), align 4
  store ptr null, ptr getelementptr inbounds (%struct.proto, ptr @mptcp_v6_prot, i32 0, i32 42), align 4
  store ptr @mptcp_v6_destroy, ptr getelementptr inbounds (%struct.proto, ptr @mptcp_v6_prot, i32 0, i32 7), align 4
  store i32 2184, ptr getelementptr inbounds (%struct.proto, ptr @mptcp_v6_prot, i32 0, i32 43), align 4
  %call1 = tail call i32 @proto_register(ptr noundef nonnull @mptcp_v6_prot, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @inet6_register_protosw(ptr noundef nonnull @mptcp_v6_protosw) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.then4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @proto_unregister(ptr noundef nonnull @mptcp_v6_prot) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %entry.cleanup_crit_edge ], [ %call2, %if.then4 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_v6_destroy(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mptcp_destroy_common(ptr noundef %sk) #17
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %0 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_prot.i.i, align 8
  %sockets_allocated.i.i = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %sockets_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sockets_allocated.i.i, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %3, i64 noundef -1, i32 noundef 16) #17
  tail call void @inet6_destroy_sock(ptr noundef %sk) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet6_register_protosw(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @proto_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mptcp_subflow_get_send(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %active = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %active to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %active, align 8, !range !344
  %4 = zext i8 %3 to i32
  %free = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %1, i32 0, i32 2
  %5 = ptrtoint ptr %free to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %free, align 1, !range !344
  %7 = zext i8 %6 to i32
  %snd_wnd = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %snd_wnd to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %snd_wnd, align 4
  %pace = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %pace to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %pace, align 8
  %backup = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %backup to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %backup, align 4
  %conv3 = zext i8 %13 to i32
  %ratio = getelementptr inbounds %struct.trace_event_raw_mptcp_subflow_get_send, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %ratio to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %ratio, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.26, i32 noundef %4, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %conv3, i64 noundef %15) #17
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_mptcp_dump_mpext(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %data_ack = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %data_ack to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %data_ack, align 8
  %data_seq = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %data_seq to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %data_seq, align 8
  %subflow_seq = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %subflow_seq to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %subflow_seq, align 8
  %data_len = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %data_len, align 4
  %conv = zext i16 %9 to i32
  %csum = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %csum to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %csum, align 2
  %conv1 = zext i16 %11 to i32
  %use_map = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %use_map to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %use_map, align 8
  %conv2 = zext i8 %13 to i32
  %dsn64 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %dsn64 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %dsn64, align 1
  %conv3 = zext i8 %15 to i32
  %data_fin = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %data_fin to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %data_fin, align 2
  %conv4 = zext i8 %17 to i32
  %use_ack = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %use_ack to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %use_ack, align 1
  %conv5 = zext i8 %19 to i32
  %ack64 = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %ack64 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %ack64, align 4
  %conv6 = zext i8 %21 to i32
  %mpc_map = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 11
  %22 = ptrtoint ptr %mpc_map to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %mpc_map, align 1
  %conv7 = zext i8 %23 to i32
  %frozen = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 12
  %24 = ptrtoint ptr %frozen to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %frozen, align 2
  %conv8 = zext i8 %25 to i32
  %reset_transient = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 13
  %26 = ptrtoint ptr %reset_transient to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %reset_transient, align 1
  %conv9 = zext i8 %27 to i32
  %reset_reason = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 14
  %28 = ptrtoint ptr %reset_reason to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %reset_reason, align 8
  %conv10 = zext i8 %29 to i32
  %csum_reqd = getelementptr inbounds %struct.trace_event_raw_mptcp_dump_mpext, ptr %1, i32 0, i32 15
  %30 = ptrtoint ptr %csum_reqd to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %csum_reqd, align 1
  %conv11 = zext i8 %31 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.43, i64 noundef %3, i64 noundef %5, i32 noundef %7, i32 noundef %conv, i32 noundef %conv1, i32 noundef %conv2, i32 noundef %conv3, i32 noundef %conv4, i32 noundef %conv5, i32 noundef %conv6, i32 noundef %conv7, i32 noundef %conv8, i32 noundef %conv9, i32 noundef %conv10, i32 noundef %conv11) #17
  %call12 = tail call i32 @trace_handle_return(ptr noundef %seq) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ack_update_msk(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %data_ack = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %data_ack to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %data_ack, align 8
  %old_snd_una = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %old_snd_una to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %old_snd_una, align 8
  %new_snd_una = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %new_snd_una to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %new_snd_una, align 8
  %new_wnd_end = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %new_wnd_end to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %new_wnd_end, align 8
  %msk_wnd_end = getelementptr inbounds %struct.trace_event_raw_ack_update_msk, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %msk_wnd_end to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %msk_wnd_end, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.48, i64 noundef %3, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11) #17
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_subflow_check_data_avail(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %status = getelementptr inbounds %struct.trace_event_raw_subflow_check_data_avail, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %status, align 4
  %conv = zext i8 %3 to i32
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_subflow_check_data_avail.symbols) #17
  %skb = getelementptr inbounds %struct.trace_event_raw_subflow_check_data_avail, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %skb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %skb, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.52, ptr noundef %call1, ptr noundef %5) #17
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #11

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #12

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__lock_sock_fast(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__mptcp_move_skbs_from_subflow(ptr noundef %msk, ptr noundef %ssk, ptr nocapture noundef %bytes) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %ssk, i32 0, i32 13
  %0 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %icsk_ulp_data.i, align 8
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 15
  %2 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %sk_rcvbuf, align 8
  %sk_userlocks = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 43
  %4 = ptrtoint ptr %sk_userlocks to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %sk_userlocks, align 8
  %5 = and i8 %bf.load, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %if.then, label %entry.do.body21_crit_edge

entry.do.body21_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body21

if.then:                                          ; preds = %entry
  %sk_rcvbuf5 = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 15
  %6 = ptrtoint ptr %sk_rcvbuf5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %sk_rcvbuf5, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %3)
  %cmp = icmp sgt i32 %7, %3
  br i1 %cmp, label %do.body14, label %if.then.do.body21_crit_edge, !prof !341

if.then.do.body21_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body21

do.body14:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  %8 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile i32 %7, ptr %sk_rcvbuf, align 8
  br label %do.body21

do.body21:                                        ; preds = %do.body14, %if.then.do.body21_crit_edge, %entry.do.body21_crit_edge
  %sk_rbuf.1 = phi i32 [ %3, %entry.do.body21_crit_edge ], [ %7, %do.body14 ], [ %3, %if.then.do.body21_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_move_skbs_from_subflow.__UNIQUE_ID_ddebug684, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__mptcp_move_skbs_from_subflow, %if.then31)) #17
          to label %do.end34 [label %if.then31], !srcloc !350

if.then31:                                        ; preds = %do.body21
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_move_skbs_from_subflow.__UNIQUE_ID_ddebug684, ptr noundef nonnull @.str.60, ptr noundef %msk, ptr noundef %ssk) #17
  br label %do.end34

do.end34:                                         ; preds = %if.then31, %do.body21
  %copied_seq = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 8
  %map_data_len = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 1, i32 0, i32 10
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 8
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 5
  %ssn_offset.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 1, i32 0, i32 9
  %map_subflow_seq.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %1, i32 0, i32 1, i32 0, i32 8
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 18
  %qlen.i.i293 = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 8, i32 1
  %urg_data = getelementptr inbounds %struct.tcp_sock, ptr %ssk, i32 0, i32 55
  %rmem_fwd_alloc.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 8
  %sk_forward_alloc.i.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 11
  %ack_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 5
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %msk, i32 0, i32 9
  %sk_drops.i.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 5
  %sk_receive_queue36.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8
  %prev.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 0, i32 0, i32 1
  %sk_backlog.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 9
  %qlen.i.i.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 1
  br label %do.body36

do.body36:                                        ; preds = %cleanup207.do.body36_crit_edge, %do.end34
  %done.0.off0 = phi i1 [ false, %do.end34 ], [ %.done.4.off0, %cleanup207.do.body36_crit_edge ]
  %moved.0 = phi i32 [ 0, %do.end34 ], [ %moved.2, %cleanup207.do.body36_crit_edge ]
  %9 = ptrtoint ptr %copied_seq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %copied_seq, align 4
  %11 = ptrtoint ptr %sk_receive_queue to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sk_receive_queue, align 4
  %cmp.i = icmp eq ptr %12, %sk_receive_queue
  %tobool41.not312 = icmp eq ptr %12, null
  %tobool41.not = or i1 %cmp.i, %tobool41.not312
  br i1 %tobool41.not, label %cleanup207.thread, label %if.end46

cleanup207.thread:                                ; preds = %do.body36
  call void @__sanitizer_cov_trace_pc() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %moved.0)
  %tobool43.not = icmp eq i32 %moved.0, 0
  %spec.select = select i1 %tobool43.not, i1 true, i1 %done.0.off0
  br label %do.end216

if.end46:                                         ; preds = %do.body36
  %13 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tcp_sock.i.i, align 8
  %copied_seq.i = getelementptr inbounds %struct.tcp_sock, ptr %14, i32 0, i32 8
  %15 = ptrtoint ptr %copied_seq.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %copied_seq.i, align 4
  %17 = ptrtoint ptr %ssn_offset.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %ssn_offset.i, align 8
  %19 = ptrtoint ptr %map_subflow_seq.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %map_subflow_seq.i, align 4
  %21 = ptrtoint ptr %map_data_len to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %map_data_len, align 4
  %23 = sub i32 %18, %16
  %sub2.i.neg = add i32 %23, %20
  %conv39 = add i32 %sub2.i.neg, %22
  %24 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %flags.i, align 4
  %26 = and i32 %25, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.i.not = icmp eq i32 %26, 0
  br i1 %tobool.i.not, label %if.end46.if.end51_crit_edge, label %if.then48

if.end46.if.end51_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end51

if.then48:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #19
  %len = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 6
  %27 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %len, align 4
  %29 = ptrtoint ptr %map_data_len to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %map_data_len, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then48, %if.end46.if.end51_crit_edge
  %map_remaining.0 = phi i32 [ %28, %if.then48 ], [ %conv39, %if.end46.if.end51_crit_edge ]
  %cb = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3
  %30 = ptrtoint ptr %cb to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cb, align 8
  %sub53 = sub i32 %10, %31
  %tcp_flags = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 12
  %32 = ptrtoint ptr %tcp_flags to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %tcp_flags, align 4
  %34 = and i8 %33, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool58.not = icmp eq i8 %34, 0
  %not.tobool58.not313 = xor i1 %tobool58.not, true
  %inc = zext i1 %not.tobool58.not313 to i32
  %spec.select287 = add i32 %10, %inc
  %len63 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 6
  %35 = ptrtoint ptr %len63 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %len63, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %36, i32 %sub53)
  %cmp64 = icmp ugt i32 %36, %sub53
  br i1 %cmp64, label %if.then66, label %if.else

if.then66:                                        ; preds = %if.end51
  %sub69 = sub i32 %36, %sub53
  %37 = ptrtoint ptr %urg_data to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %urg_data, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %38)
  %tobool70.not = icmp ne i16 %38, 0
  %39 = select i1 %tobool70.not, i1 true, i1 %not.tobool58.not313
  %spec.select288 = select i1 %39, i1 true, i1 %done.0.off0
  %40 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %icsk_ulp_data.i, align 8
  %42 = ptrtoint ptr %qlen.i.i293 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %qlen.i.i293, align 4
  %sub.i.i = add i32 %43, -1
  store volatile i32 %sub.i.i, ptr %qlen.i.i293, align 4
  %44 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %12, align 8
  %prev9.i.i = getelementptr inbounds %struct.anon.50, ptr %12, i32 0, i32 1
  %46 = ptrtoint ptr %prev9.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %prev9.i.i, align 4
  store ptr null, ptr %prev9.i.i, align 4
  store ptr null, ptr %12, align 8
  %prev17.i.i = getelementptr inbounds %struct.anon.50, ptr %45, i32 0, i32 1
  %48 = ptrtoint ptr %prev17.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store volatile ptr %47, ptr %prev17.i.i, align 4
  %49 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %45, ptr %47, align 8
  %active_extensions.i.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 13
  %50 = ptrtoint ptr %active_extensions.i.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %active_extensions.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool.not.i.i = icmp eq i8 %51, 0
  br i1 %tobool.not.i.i, label %if.then66.skb_ext_reset.exit.i_crit_edge, label %if.then.i.i, !prof !340

if.then66.skb_ext_reset.exit.i_crit_edge:         ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_ext_reset.exit.i

if.then.i.i:                                      ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #19
  %extensions.i.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 22
  %52 = ptrtoint ptr %extensions.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %extensions.i.i, align 8
  tail call void @__skb_ext_put(ptr noundef %53) #17
  %54 = ptrtoint ptr %active_extensions.i.i to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 0, ptr %active_extensions.i.i, align 1
  br label %skb_ext_reset.exit.i

skb_ext_reset.exit.i:                             ; preds = %if.then.i.i, %if.then66.skb_ext_reset.exit.i_crit_edge
  %destructor.i.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 4, i32 0, i32 1
  %55 = ptrtoint ptr %destructor.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %destructor.i.i, align 4
  %tobool.not.i88.i = icmp eq ptr %56, null
  br i1 %tobool.not.i88.i, label %do.body.i.i, label %if.then.i89.i

if.then.i89.i:                                    ; preds = %skb_ext_reset.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %56(ptr noundef nonnull %12) #17
  %57 = ptrtoint ptr %destructor.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr null, ptr %destructor.i.i, align 4
  %58 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 1
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr null, ptr %58, align 4
  br label %skb_orphan.exit.i

do.body.i.i:                                      ; preds = %skb_ext_reset.exit.i
  %60 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 1
  %61 = ptrtoint ptr %60 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %60, align 4
  %tobool3.not.i.i = icmp eq ptr %62, null
  br i1 %tobool3.not.i.i, label %do.body.i.i.skb_orphan.exit.i_crit_edge, label %do.body7.i.i, !prof !340

do.body.i.i.skb_orphan.exit.i_crit_edge:          ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %skb_orphan.exit.i

do.body7.i.i:                                     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #17, !srcloc !362
  unreachable

skb_orphan.exit.i:                                ; preds = %do.body.i.i.skb_orphan.exit.i_crit_edge, %if.then.i89.i
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 20
  %63 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %truesize.i, align 8
  %65 = ptrtoint ptr %rmem_fwd_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %rmem_fwd_alloc.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %66, i32 %64)
  %cmp.i.i = icmp sgt i32 %66, %64
  br i1 %cmp.i.i, label %skb_orphan.exit.i.if.end.i_crit_edge, label %if.end.i.i

skb_orphan.exit.i.if.end.i_crit_edge:             ; preds = %skb_orphan.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.end.i.i:                                       ; preds = %skb_orphan.exit.i
  %sub.i.i.i = add i32 %64, 4095
  %shr.i.i.i = ashr i32 %sub.i.i.i, 12
  %shl.i.i = and i32 %sub.i.i.i, -4096
  %add.i.i = add i32 %shl.i.i, %66
  %67 = ptrtoint ptr %rmem_fwd_alloc.i.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %add.i.i, ptr %rmem_fwd_alloc.i.i, align 8
  %call3.i.i = tail call i32 @__sk_mem_raise_allocated(ptr noundef %msk, i32 noundef %64, i32 noundef %shr.i.i.i, i32 noundef 1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool.not.i90.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool.not.i90.i, label %if.then4.i.i, label %if.end.i.i.if.end.i_crit_edge

if.end.i.i.if.end.i_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  %68 = ptrtoint ptr %sk_forward_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %sk_forward_alloc.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %69, i32 %shl.i.i)
  %cmp5.i.i = icmp slt i32 %69, %shl.i.i
  br i1 %cmp5.i.i, label %mptcp_rmem_schedule.exit.i, label %mptcp_rmem_schedule.exit.thread99.i

mptcp_rmem_schedule.exit.thread99.i:              ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %sub10.i102.i = sub i32 %69, %shl.i.i
  %70 = ptrtoint ptr %sk_forward_alloc.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %sub10.i102.i, ptr %sk_forward_alloc.i.i, align 8
  br label %if.end.i

mptcp_rmem_schedule.exit.i:                       ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %71 = ptrtoint ptr %rmem_fwd_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %rmem_fwd_alloc.i.i, align 8
  %sub10.i.i = sub i32 %72, %shl.i.i
  store i32 %sub10.i.i, ptr %rmem_fwd_alloc.i.i, align 8
  br label %drop.i

if.end.i:                                         ; preds = %mptcp_rmem_schedule.exit.thread99.i, %if.end.i.i.if.end.i_crit_edge, %skb_orphan.exit.i.if.end.i_crit_edge
  %has_rxtstamp2.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 15
  %73 = ptrtoint ptr %has_rxtstamp2.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %bf.load.i = load i8, ptr %has_rxtstamp2.i, align 1
  %map_seq.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %41, i32 0, i32 1, i32 0, i32 4
  %74 = ptrtoint ptr %map_seq.i.i to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %map_seq.i.i, align 8
  %tcp_sock.i.i.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %41, i32 0, i32 5
  %76 = ptrtoint ptr %tcp_sock.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %tcp_sock.i.i.i.i, align 8
  %copied_seq.i.i.i = getelementptr inbounds %struct.tcp_sock, ptr %77, i32 0, i32 8
  %78 = ptrtoint ptr %copied_seq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %copied_seq.i.i.i, align 4
  %ssn_offset.i.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %41, i32 0, i32 1, i32 0, i32 9
  %80 = ptrtoint ptr %ssn_offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %ssn_offset.i.i.i, align 8
  %map_subflow_seq.i.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %41, i32 0, i32 1, i32 0, i32 8
  %82 = ptrtoint ptr %map_subflow_seq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %map_subflow_seq.i.i.i, align 4
  %84 = add i32 %81, %83
  %sub2.i.i.i = sub i32 %79, %84
  %conv.i.i.i = zext i32 %sub2.i.i.i to i64
  %add.i91.i = add i64 %75, %conv.i.i.i
  %85 = ptrtoint ptr %cb to i32
  call void @__asan_store8_noabort(i32 %85)
  store i64 %add.i91.i, ptr %cb, align 8
  %conv.i290 = zext i32 %sub69 to i64
  %add.i = add i64 %add.i91.i, %conv.i290
  %end_seq.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 8
  %86 = ptrtoint ptr %end_seq.i to i32
  call void @__asan_store8_noabort(i32 %86)
  store i64 %add.i, ptr %end_seq.i, align 8
  %offset13.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 16
  %87 = ptrtoint ptr %offset13.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %sub53, ptr %offset13.i, align 8
  %has_rxtstamp18.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 20
  %88 = ptrtoint ptr %has_rxtstamp18.i to i32
  call void @__asan_load1_noabort(i32 %88)
  %bf.load19.i = load i8, ptr %has_rxtstamp18.i, align 4
  %89 = shl i8 %bf.load.i, 2
  %bf.shl.i = and i8 %89, -128
  %bf.clear20.i = and i8 %bf.load19.i, 127
  %bf.set.i = or i8 %bf.clear20.i, %bf.shl.i
  store i8 %bf.set.i, ptr %has_rxtstamp18.i, align 4
  %90 = ptrtoint ptr %ack_seq.i to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load i64, ptr %ack_seq.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %91, i64 %add.i91.i)
  %cmp.i291 = icmp eq i64 %91, %add.i91.i
  br i1 %cmp.i291, label %do.body27.i, label %if.else.i

do.body27.i:                                      ; preds = %if.end.i
  %92 = ptrtoint ptr %ack_seq.i to i32
  call void @__asan_store8_noabort(i32 %92)
  store volatile i64 %add.i, ptr %ack_seq.i, align 8
  %93 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile ptr, ptr %prev.i.i, align 4
  %cmp.i92.i = icmp eq ptr %94, %sk_receive_queue36.i
  %tobool38.not103.i = icmp eq ptr %94, null
  %tobool38.not.i = or i1 %cmp.i92.i, %tobool38.not103.i
  br i1 %tobool38.not.i, label %do.body27.i.if.end42.i_crit_edge, label %land.lhs.true.i

do.body27.i.if.end42.i_crit_edge:                 ; preds = %do.body27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end42.i

land.lhs.true.i:                                  ; preds = %do.body27.i
  %call39.i = tail call fastcc zeroext i1 @mptcp_try_coalesce(ptr noundef %msk, ptr noundef nonnull %94, ptr noundef nonnull %12) #17
  br i1 %call39.i, label %land.lhs.true.i._crit_edge, label %land.lhs.true.i.if.end42.i_crit_edge

land.lhs.true.i.if.end42.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end42.i

land.lhs.true.i._crit_edge:                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %140

if.end42.i:                                       ; preds = %land.lhs.true.i.if.end42.i_crit_edge, %do.body27.i.if.end42.i_crit_edge
  %95 = ptrtoint ptr %destructor.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %destructor.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %96, null
  br i1 %tobool.not.i.i.i, label %do.body.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %96(ptr noundef nonnull %12) #17
  br label %mptcp_set_owner_r.exit.i

do.body.i.i.i:                                    ; preds = %if.end42.i
  %97 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 1
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %97, align 4
  %tobool3.not.i.i.i = icmp eq ptr %99, null
  br i1 %tobool3.not.i.i.i, label %do.body.i.i.i.mptcp_set_owner_r.exit.i_crit_edge, label %do.body7.i.i.i, !prof !340

do.body.i.i.i.mptcp_set_owner_r.exit.i_crit_edge: ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_set_owner_r.exit.i

do.body7.i.i.i:                                   ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #17, !srcloc !362
  unreachable

mptcp_set_owner_r.exit.i:                         ; preds = %do.body.i.i.i.mptcp_set_owner_r.exit.i_crit_edge, %if.then.i.i.i
  %100 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 1
  %101 = ptrtoint ptr %100 to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %msk, ptr %100, align 4
  %102 = ptrtoint ptr %destructor.i.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr @mptcp_rfree, ptr %destructor.i.i, align 4
  %103 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %truesize.i, align 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_backlog.i.i, i32 1, i32 3, i32 1) #17
  %105 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog.i.i, ptr %sk_backlog.i.i, i32 %104, ptr elementtype(i32) %sk_backlog.i.i) #17, !srcloc !352
  %106 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %truesize.i, align 8
  %108 = ptrtoint ptr %rmem_fwd_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %rmem_fwd_alloc.i.i, align 8
  %sub.i.i93.i = sub i32 %109, %107
  store i32 %sub.i.i93.i, ptr %rmem_fwd_alloc.i.i, align 8
  %110 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %prev.i.i, align 4
  %112 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %112)
  store volatile ptr %sk_receive_queue36.i, ptr %12, align 8
  %113 = ptrtoint ptr %prev9.i.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store volatile ptr %111, ptr %prev9.i.i, align 4
  store volatile ptr %12, ptr %prev.i.i, align 4
  %114 = ptrtoint ptr %111 to i32
  call void @__asan_store4_noabort(i32 %114)
  store volatile ptr %12, ptr %111, align 4
  %115 = ptrtoint ptr %qlen.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %qlen.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %116, 1
  store volatile i32 %add.i.i.i.i, ptr %qlen.i.i.i.i, align 4
  br label %140

if.else.i:                                        ; preds = %if.end.i
  %sub.i94.i = sub i64 %91, %add.i91.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i94.i)
  %cmp.i95.i = icmp slt i64 %sub.i94.i, 0
  br i1 %cmp.i95.i, label %if.then49.i, label %if.end51.i

if.then49.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mptcp_data_queue_ofo(ptr noundef %msk, ptr noundef nonnull %12) #17
  br label %__mptcp_move_skb.exit

if.end51.i:                                       ; preds = %if.else.i
  %117 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %skc_net.i.i, align 4
  %mptcp_statistics.i.i = getelementptr inbounds %struct.net, ptr %118, i32 0, i32 30, i32 8
  %119 = ptrtoint ptr %mptcp_statistics.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %mptcp_statistics.i.i, align 4
  %tobool.not.i96.i = icmp eq ptr %120, null
  br i1 %tobool.not.i96.i, label %if.end51.i.drop.i_crit_edge, label %do.body3.i.i, !prof !341

if.end51.i.drop.i_crit_edge:                      ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %drop.i

do.body3.i.i:                                     ; preds = %if.end51.i
  %121 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %122 = ptrtoint ptr %mptcp_statistics.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %mptcp_statistics.i.i, align 4
  %arrayidx.i.i = getelementptr [43 x i32], ptr %123, i32 0, i32 23
  %124 = ptrtoint ptr %arrayidx.i.i to i32
  %125 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i = and i32 %125, -16384
  %126 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %126, i32 0, i32 3
  %127 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %cpu.i.i, align 4
  %arrayidx17.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %128
  %129 = ptrtoint ptr %arrayidx17.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %arrayidx17.i.i, align 4
  %add.i97.i = add i32 %130, %124
  %131 = inttoptr i32 %add.i97.i to ptr
  %132 = ptrtoint ptr %131 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %131, align 4
  %add18.i.i = add i32 %133, 1
  store i32 %add18.i.i, ptr %131, align 4
  %134 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i.i = and i32 %134, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool29.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool29.not.i.i, label %if.then38.i.i, label %do.body3.i.i.do.end40.i.i_crit_edge, !prof !341

do.body3.i.i.do.end40.i.i_crit_edge:              ; preds = %do.body3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i.i

if.then38.i.i:                                    ; preds = %do.body3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i.i

do.end40.i.i:                                     ; preds = %if.then38.i.i, %do.body3.i.i.do.end40.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %121) #17, !srcloc !348
  br label %drop.i

drop.i:                                           ; preds = %do.end40.i.i, %if.end51.i.drop.i_crit_edge, %mptcp_rmem_schedule.exit.i
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 17
  %135 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %end.i.i.i.i, align 4
  %gso_segs.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %136, i32 0, i32 5
  %137 = ptrtoint ptr %gso_segs.i.i.i to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %gso_segs.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %138)
  %cmp.i.i.i = icmp eq i16 %138, 0
  %narrow.i.i.i = select i1 %cmp.i.i.i, i16 1, i16 %138
  %cond.i.i.i = zext i16 %narrow.i.i.i to i32
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops.i.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_drops.i.i.i, i32 1, i32 3, i32 1) #17
  %139 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_drops.i.i.i, ptr %sk_drops.i.i.i, i32 %cond.i.i.i, ptr elementtype(i32) %sk_drops.i.i.i) #17, !srcloc !352
  tail call void @__kfree_skb(ptr noundef nonnull %12) #17
  br label %__mptcp_move_skb.exit

140:                                              ; preds = %mptcp_set_owner_r.exit.i, %land.lhs.true.i._crit_edge
  %add299 = add i32 %sub69, %moved.0
  br label %__mptcp_move_skb.exit

__mptcp_move_skb.exit:                            ; preds = %140, %drop.i, %if.then49.i
  %141 = phi i32 [ %add299, %140 ], [ %moved.0, %if.then49.i ], [ %moved.0, %drop.i ]
  %add76 = add i32 %spec.select287, %sub69
  call void @__sanitizer_cov_trace_cmp4(i32 %map_remaining.0, i32 %sub69)
  %cmp77 = icmp ult i32 %map_remaining.0, %sub69
  br i1 %cmp77, label %land.rhs, label %__mptcp_move_skb.exit.cleanup207_crit_edge

__mptcp_move_skb.exit.cleanup207_crit_edge:       ; preds = %__mptcp_move_skb.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup207

land.rhs:                                         ; preds = %__mptcp_move_skb.exit
  %.b285 = load i1, ptr @__mptcp_move_skbs_from_subflow.__already_done, align 1
  br i1 %.b285, label %land.rhs.do.end216_crit_edge, label %if.then95, !prof !340

land.rhs.do.end216_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end216

if.then95:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__mptcp_move_skbs_from_subflow.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 690, i32 noundef 9, ptr noundef null) #17
  br label %do.end216

if.else:                                          ; preds = %if.end51
  br i1 %tobool58.not, label %land.rhs143, label %if.else.if.end181_crit_edge

if.else.if.end181_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end181

land.rhs143:                                      ; preds = %if.else
  %.b272284 = load i1, ptr @__mptcp_move_skbs_from_subflow.__already_done.61, align 1
  br i1 %.b272284, label %land.rhs143.if.end181_crit_edge, label %if.then154, !prof !340

land.rhs143.if.end181_crit_edge:                  ; preds = %land.rhs143
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end181

if.then154:                                       ; preds = %land.rhs143
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__mptcp_move_skbs_from_subflow.__already_done.61, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 693, i32 noundef 9, ptr noundef null) #17
  br label %if.end181

if.end181:                                        ; preds = %if.then154, %land.rhs143.if.end181_crit_edge, %if.else.if.end181_crit_edge
  %142 = ptrtoint ptr %qlen.i.i293 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %qlen.i.i293, align 4
  %sub.i.i294 = add i32 %143, -1
  store volatile i32 %sub.i.i294, ptr %qlen.i.i293, align 4
  %144 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %12, align 8
  %prev9.i.i295 = getelementptr inbounds %struct.anon.50, ptr %12, i32 0, i32 1
  %146 = ptrtoint ptr %prev9.i.i295 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %prev9.i.i295, align 4
  store ptr null, ptr %prev9.i.i295, align 4
  store ptr null, ptr %12, align 8
  %prev17.i.i296 = getelementptr inbounds %struct.anon.50, ptr %145, i32 0, i32 1
  %148 = ptrtoint ptr %prev17.i.i296 to i32
  call void @__asan_store4_noabort(i32 %148)
  store volatile ptr %147, ptr %prev17.i.i296, align 4
  %149 = ptrtoint ptr %147 to i32
  call void @__asan_store4_noabort(i32 %149)
  store volatile ptr %145, ptr %147, align 8
  tail call void @__kfree_skb(ptr noundef nonnull %12) #17
  br label %cleanup207

cleanup207:                                       ; preds = %if.end181, %__mptcp_move_skb.exit.cleanup207_crit_edge
  %done.4.off0 = phi i1 [ true, %if.end181 ], [ %spec.select288, %__mptcp_move_skb.exit.cleanup207_crit_edge ]
  %seq.1 = phi i32 [ %spec.select287, %if.end181 ], [ %add76, %__mptcp_move_skb.exit.cleanup207_crit_edge ]
  %moved.2 = phi i32 [ %moved.0, %if.end181 ], [ %141, %__mptcp_move_skb.exit.cleanup207_crit_edge ]
  %150 = ptrtoint ptr %copied_seq to i32
  call void @__asan_store4_noabort(i32 %150)
  store volatile i32 %seq.1, ptr %copied_seq, align 4
  %call200 = tail call zeroext i1 @mptcp_subflow_data_available(ptr noundef %ssk) #17
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i, i32 noundef 4) #17
  %151 = ptrtoint ptr %sk_backlog.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %sk_backlog.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %152, i32 %sk_rbuf.1)
  %cmp203 = icmp sgt i32 %152, %sk_rbuf.1
  %.done.4.off0 = select i1 %cmp203, i1 true, i1 %done.4.off0
  %more_data_avail.1.off0.not = xor i1 %call200, true
  %brmerge = select i1 %cmp203, i1 true, i1 %more_data_avail.1.off0.not
  br i1 %brmerge, label %cleanup207.do.end216_crit_edge, label %cleanup207.do.body36_crit_edge

cleanup207.do.body36_crit_edge:                   ; preds = %cleanup207
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body36

cleanup207.do.end216_crit_edge:                   ; preds = %cleanup207
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end216

do.end216:                                        ; preds = %cleanup207.do.end216_crit_edge, %if.then95, %land.rhs.do.end216_crit_edge, %cleanup207.thread
  %moved.3311 = phi i32 [ %moved.0, %cleanup207.thread ], [ %141, %if.then95 ], [ %141, %land.rhs.do.end216_crit_edge ], [ %moved.2, %cleanup207.do.end216_crit_edge ]
  %done.5.off0310 = phi i1 [ %spec.select, %cleanup207.thread ], [ %spec.select288, %if.then95 ], [ %spec.select288, %land.rhs.do.end216_crit_edge ], [ %.done.4.off0, %cleanup207.do.end216_crit_edge ]
  %153 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %bytes, align 4
  %add217 = add i32 %154, %moved.3311
  store i32 %add217, ptr %bytes, align 4
  ret i1 %done.5.off0310
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__mptcp_ofo_queue(ptr noundef %msk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %out_of_order_queue = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 32
  %call = tail call ptr @rb_first(ptr noundef %out_of_order_queue) #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_ofo_queue.__UNIQUE_ID_ddebug686, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__mptcp_ofo_queue, %if.then)) #17
          to label %do.end8 [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %0 = ptrtoint ptr %out_of_order_queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %out_of_order_queue, align 4
  %cmp = icmp eq ptr %1, null
  %conv = zext i1 %cmp to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_ofo_queue.__UNIQUE_ID_ddebug686, ptr noundef nonnull @.str.72, ptr noundef %msk, i32 noundef %conv) #17
  br label %do.end8

do.end8:                                          ; preds = %if.then, %entry
  %ack_seq = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 5
  %tobool9.not118122 = icmp eq ptr %call, null
  br i1 %tobool9.not118122, label %do.end8.while.end_crit_edge, label %cond.end.lr.ph.lr.ph

do.end8.while.end_crit_edge:                      ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

cond.end.lr.ph.lr.ph:                             ; preds = %do.end8
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %msk, i32 0, i32 9
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8
  %prev.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 0, i32 0, i32 1
  %qlen.i.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 1
  br label %cond.end.lr.ph

cond.end.lr.ph:                                   ; preds = %if.end74.cond.end.lr.ph_crit_edge, %cond.end.lr.ph.lr.ph
  %moved.0.off0.ph124 = phi i1 [ false, %cond.end.lr.ph.lr.ph ], [ true, %if.end74.cond.end.lr.ph_crit_edge ]
  %p.0.ph123 = phi ptr [ %call, %cond.end.lr.ph.lr.ph ], [ %call16, %if.end74.cond.end.lr.ph_crit_edge ]
  br label %cond.end

cond.end:                                         ; preds = %if.then31.cond.end_crit_edge, %cond.end.lr.ph
  %p.0119 = phi ptr [ %p.0.ph123, %cond.end.lr.ph ], [ %call16, %if.then31.cond.end_crit_edge ]
  %2 = ptrtoint ptr %ack_seq to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %ack_seq, align 8
  %cb = getelementptr inbounds %struct.sk_buff, ptr %p.0119, i32 0, i32 3
  %4 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %cb, align 8
  %sub.i = sub i64 %3, %5
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i)
  %cmp.i = icmp slt i64 %sub.i, 0
  br i1 %cmp.i, label %cond.end.while.end_crit_edge, label %if.end15

cond.end.while.end_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

if.end15:                                         ; preds = %cond.end
  %call16 = tail call ptr @rb_next(ptr noundef nonnull %p.0119) #17
  tail call void @rb_erase(ptr noundef nonnull %p.0119, ptr noundef %out_of_order_queue) #17
  %6 = ptrtoint ptr %ack_seq to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ack_seq, align 8
  %end_seq21 = getelementptr inbounds %struct.sk_buff, ptr %p.0119, i32 0, i32 3, i32 8
  %8 = ptrtoint ptr %end_seq21 to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %end_seq21, align 8
  %sub.i109 = sub i64 %7, %9
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i109)
  %cmp.i110 = icmp slt i64 %sub.i109, 0
  br i1 %cmp.i110, label %if.end33, label %if.then31, !prof !340

if.then31:                                        ; preds = %if.end15
  tail call fastcc void @mptcp_drop(ptr noundef %msk, ptr noundef nonnull %p.0119)
  %10 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %skc_net.i, align 4
  tail call fastcc void @MPTCP_INC_STATS(ptr noundef %11, i32 noundef 23)
  %tobool9.not = icmp eq ptr %call16, null
  br i1 %tobool9.not, label %if.then31.while.end_crit_edge, label %if.then31.cond.end_crit_edge

if.then31.cond.end_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

if.then31.while.end_crit_edge:                    ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

if.end33:                                         ; preds = %if.end15
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prev.i, align 4
  %cmp.i111 = icmp eq ptr %13, %sk_receive_queue
  %tobool38.not116 = icmp eq ptr %13, null
  %tobool38.not = or i1 %cmp.i111, %tobool38.not116
  br i1 %tobool38.not, label %if.end33.if.then40_crit_edge, label %lor.lhs.false

if.end33.if.then40_crit_edge:                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40

lor.lhs.false:                                    ; preds = %if.end33
  %14 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %cb, align 8
  %end_seq.i = getelementptr inbounds %struct.sk_buff, ptr %13, i32 0, i32 3, i32 8
  %16 = ptrtoint ptr %end_seq.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %end_seq.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %15, i64 %17)
  %cmp.not.i = icmp eq i64 %15, %17
  br i1 %cmp.not.i, label %mptcp_ooo_try_coalesce.exit, label %lor.lhs.false.if.then40_crit_edge

lor.lhs.false.if.then40_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40

mptcp_ooo_try_coalesce.exit:                      ; preds = %lor.lhs.false
  %call.i = tail call fastcc zeroext i1 @mptcp_try_coalesce(ptr noundef %msk, ptr noundef nonnull %13, ptr noundef nonnull %p.0119) #17
  br i1 %call.i, label %mptcp_ooo_try_coalesce.exit.if.end74_crit_edge, label %mptcp_ooo_try_coalesce.exit.if.then40_crit_edge

mptcp_ooo_try_coalesce.exit.if.then40_crit_edge:  ; preds = %mptcp_ooo_try_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40

mptcp_ooo_try_coalesce.exit.if.end74_crit_edge:   ; preds = %mptcp_ooo_try_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end74

if.then40:                                        ; preds = %mptcp_ooo_try_coalesce.exit.if.then40_crit_edge, %lor.lhs.false.if.then40_crit_edge, %if.end33.if.then40_crit_edge
  %18 = ptrtoint ptr %ack_seq to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %ack_seq, align 8
  %20 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %cb, align 8
  %sub = sub i64 %19, %21
  %conv45 = trunc i64 %sub to i32
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_ofo_queue.__UNIQUE_ID_ddebug688, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__mptcp_ofo_queue, %if.then58)) #17
          to label %do.end65 [label %if.then58], !srcloc !350

if.then58:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %cb, align 8
  %24 = ptrtoint ptr %ack_seq to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %ack_seq, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_ofo_queue.__UNIQUE_ID_ddebug688, ptr noundef nonnull @.str.74, i64 noundef %23, i64 noundef %25, i32 noundef %conv45) #17
  br label %do.end65

do.end65:                                         ; preds = %if.then58, %if.then40
  %offset = getelementptr inbounds %struct.sk_buff, ptr %p.0119, i32 0, i32 3, i32 16
  %26 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %offset, align 8
  %add = add i32 %27, %conv45
  store i32 %add, ptr %offset, align 8
  %conv68 = sext i32 %conv45 to i64
  %28 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %cb, align 8
  %add72 = add i64 %29, %conv68
  store i64 %add72, ptr %cb, align 8
  %30 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev.i, align 4
  %32 = ptrtoint ptr %p.0119 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %sk_receive_queue, ptr %p.0119, align 8
  %prev10.i.i.i = getelementptr inbounds %struct.anon.50, ptr %p.0119, i32 0, i32 1
  %33 = ptrtoint ptr %prev10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %31, ptr %prev10.i.i.i, align 4
  store volatile ptr %p.0119, ptr %prev.i, align 4
  %34 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %p.0119, ptr %31, align 4
  %35 = ptrtoint ptr %qlen.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %qlen.i.i.i, align 4
  %add.i.i.i = add i32 %36, 1
  store volatile i32 %add.i.i.i, ptr %qlen.i.i.i, align 4
  br label %if.end74

if.end74:                                         ; preds = %do.end65, %mptcp_ooo_try_coalesce.exit.if.end74_crit_edge
  %37 = ptrtoint ptr %ack_seq to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %9, ptr %ack_seq, align 8
  %tobool9.not118 = icmp eq ptr %call16, null
  br i1 %tobool9.not118, label %if.end74.while.end_crit_edge, label %if.end74.cond.end.lr.ph_crit_edge

if.end74.cond.end.lr.ph_crit_edge:                ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end.lr.ph

if.end74.while.end_crit_edge:                     ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

while.end:                                        ; preds = %if.end74.while.end_crit_edge, %if.then31.while.end_crit_edge, %cond.end.while.end_crit_edge, %do.end8.while.end_crit_edge
  %moved.0.off0.ph.lcssa = phi i1 [ false, %do.end8.while.end_crit_edge ], [ %moved.0.off0.ph124, %cond.end.while.end_crit_edge ], [ %moved.0.off0.ph124, %if.then31.while.end_crit_edge ], [ true, %if.end74.while.end_crit_edge ]
  ret i1 %moved.0.off0.ph.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mptcp_error_report(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mptcp_subflow_data_available(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @mptcp_try_coalesce(ptr noundef %sk, ptr noundef %to, ptr noundef %from) unnamed_addr #0 align 64 {
entry:
  %fragstolen = alloca i8, align 1
  %delta = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %fragstolen) #17
  %0 = ptrtoint ptr %fragstolen to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %fragstolen, align 1, !annotation !343
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %delta) #17
  %1 = ptrtoint ptr %delta to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %delta, align 4, !annotation !343
  %cb = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 3
  %offset = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 3, i32 16
  %2 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %offset, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @skb_try_coalesce(ptr noundef %to, ptr noundef %from, ptr noundef nonnull %fragstolen, ptr noundef nonnull %delta) #17
  br i1 %call, label %do.body, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body:                                          ; preds = %lor.lhs.false
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_try_coalesce.__UNIQUE_ID_ddebug659, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_try_coalesce, %if.then5)) #17
          to label %do.end [label %if.then5], !srcloc !350

if.then5:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %4 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %cb, align 8
  %cb8 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 3
  %6 = ptrtoint ptr %cb8 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %cb8, align 8
  %len = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 6
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  %end_seq = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 3, i32 8
  %10 = ptrtoint ptr %end_seq to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %end_seq, align 8
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_try_coalesce.__UNIQUE_ID_ddebug659, ptr noundef nonnull @.str.64, i64 noundef %5, i64 noundef %7, i32 noundef %9, i64 noundef %11) #17
  br label %do.end

do.end:                                           ; preds = %if.then5, %do.body
  %end_seq16 = getelementptr inbounds %struct.sk_buff, ptr %from, i32 0, i32 3, i32 8
  %12 = ptrtoint ptr %end_seq16 to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %end_seq16, align 8
  %end_seq19 = getelementptr inbounds %struct.sk_buff, ptr %to, i32 0, i32 3, i32 8
  %14 = ptrtoint ptr %end_seq19 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %end_seq19, align 8
  %15 = ptrtoint ptr %fragstolen to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %fragstolen, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool20 = icmp ne i8 %16, 0
  call void @kfree_skb_partial(ptr noundef %from, i1 noundef zeroext %tobool20) #17
  %17 = ptrtoint ptr %delta to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %delta, align 4
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %sk_backlog, i32 1, i32 3, i32 1) #17
  %19 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog, ptr %sk_backlog, i32 %18, ptr elementtype(i32) %sk_backlog) #17, !srcloc !352
  %20 = ptrtoint ptr %delta to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %delta, align 4
  %rmem_fwd_alloc.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 8
  %22 = ptrtoint ptr %rmem_fwd_alloc.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %rmem_fwd_alloc.i, align 8
  %sub.i = sub i32 %23, %21
  store i32 %sub.i, ptr %rmem_fwd_alloc.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %do.end, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %do.end ], [ false, %lor.lhs.false.cleanup_crit_edge ], [ false, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %delta) #17
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %fragstolen) #17
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mptcp_data_queue_ofo(ptr noundef %msk, ptr noundef %skb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %cb = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3
  %0 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %cb, align 8
  %end_seq3 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 3, i32 8
  %2 = ptrtoint ptr %end_seq3 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %end_seq3, align 8
  %rcv_wnd_sent = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 6
  %4 = ptrtoint ptr %rcv_wnd_sent to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load volatile i64, ptr %rcv_wnd_sent, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_data_queue_ofo.__UNIQUE_ID_ddebug661, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_data_queue_ofo, %if.then)) #17
          to label %do.end13 [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %out_of_order_queue = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 32
  %6 = ptrtoint ptr %out_of_order_queue to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %out_of_order_queue, align 4
  %cmp = icmp eq ptr %7, null
  %conv = zext i1 %cmp to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_data_queue_ofo.__UNIQUE_ID_ddebug661, ptr noundef nonnull @.str.67, ptr noundef %msk, i64 noundef %1, i64 noundef %5, i32 noundef %conv) #17
  br label %do.end13

do.end13:                                         ; preds = %if.then, %entry
  %sub.i = sub i64 %5, %3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i)
  %cmp.i = icmp slt i64 %sub.i, 0
  br i1 %cmp.i, label %if.then15, label %if.end36

if.then15:                                        ; preds = %do.end13
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %8 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i.i.i, align 4
  %gso_segs.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %gso_segs.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %gso_segs.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %cmp.i.i = icmp eq i16 %11, 0
  %narrow.i.i = select i1 %cmp.i.i, i16 1, i16 %11
  %cond.i.i = zext i16 %narrow.i.i to i32
  %sk_drops.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 5
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_drops.i.i, i32 1, i32 3, i32 1) #17
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_drops.i.i, ptr %sk_drops.i.i, i32 %cond.i.i, ptr elementtype(i32) %sk_drops.i.i) #17, !srcloc !352
  tail call void @__kfree_skb(ptr noundef %skb) #17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_data_queue_ofo.__UNIQUE_ID_ddebug663, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_data_queue_ofo, %if.then28)) #17
          to label %do.end34 [label %if.then28], !srcloc !350

if.then28:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #19
  %conv30 = and i64 %5, 4294967295
  %sub = sub i64 %3, %conv30
  %13 = ptrtoint ptr %rcv_wnd_sent to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %rcv_wnd_sent, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_data_queue_ofo.__UNIQUE_ID_ddebug663, ptr noundef nonnull @.str.69, i64 noundef %sub, i64 noundef %14) #17
  br label %do.end34

do.end34:                                         ; preds = %if.then28, %if.then15
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %msk, i32 0, i32 9
  %15 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %skc_net.i, align 4
  %mptcp_statistics.i = getelementptr inbounds %struct.net, ptr %16, i32 0, i32 30, i32 8
  %17 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mptcp_statistics.i, align 4
  %tobool.not.i = icmp eq ptr %18, null
  br i1 %tobool.not.i, label %do.end34.cleanup_crit_edge, label %do.body3.i, !prof !341

do.end34.cleanup_crit_edge:                       ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body3.i:                                       ; preds = %do.end34
  %19 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %20 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %mptcp_statistics.i, align 4
  %arrayidx.i = getelementptr [43 x i32], ptr %21, i32 0, i32 22
  %22 = ptrtoint ptr %arrayidx.i to i32
  %23 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu.i, align 4
  %arrayidx17.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx17.i, align 4
  %add.i = add i32 %28, %22
  %29 = inttoptr i32 %add.i to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add18.i = add i32 %31, 1
  store i32 %add18.i, ptr %29, align 4
  %32 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i = and i32 %32, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool29.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool29.not.i, label %if.then38.i, label %do.body3.i.do.end40.i_crit_edge, !prof !341

do.body3.i.do.end40.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i

if.then38.i:                                      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i

do.end40.i:                                       ; preds = %if.then38.i, %do.body3.i.do.end40.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %19) #17, !srcloc !348
  br label %cleanup

if.end36:                                         ; preds = %do.end13
  %out_of_order_queue37 = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 32
  %skc_net.i214 = getelementptr inbounds %struct.sock_common, ptr %msk, i32 0, i32 9
  %33 = ptrtoint ptr %skc_net.i214 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %skc_net.i214, align 4
  %mptcp_statistics.i215 = getelementptr inbounds %struct.net, ptr %34, i32 0, i32 30, i32 8
  %35 = ptrtoint ptr %mptcp_statistics.i215 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %mptcp_statistics.i215, align 4
  %tobool.not.i216 = icmp eq ptr %36, null
  br i1 %tobool.not.i216, label %if.end36.MPTCP_INC_STATS.exit228_crit_edge, label %do.body3.i225, !prof !341

if.end36.MPTCP_INC_STATS.exit228_crit_edge:       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #19
  br label %MPTCP_INC_STATS.exit228

do.body3.i225:                                    ; preds = %if.end36
  %37 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %38 = ptrtoint ptr %mptcp_statistics.i215 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mptcp_statistics.i215, align 4
  %arrayidx.i217 = getelementptr [43 x i32], ptr %39, i32 0, i32 20
  %40 = ptrtoint ptr %arrayidx.i217 to i32
  %41 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i218 = and i32 %41, -16384
  %42 = inttoptr i32 %and.i.i218 to ptr
  %cpu.i219 = getelementptr inbounds %struct.thread_info, ptr %42, i32 0, i32 3
  %43 = ptrtoint ptr %cpu.i219 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %cpu.i219, align 4
  %arrayidx17.i220 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %44
  %45 = ptrtoint ptr %arrayidx17.i220 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx17.i220, align 4
  %add.i221 = add i32 %46, %40
  %47 = inttoptr i32 %add.i221 to ptr
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %47, align 4
  %add18.i222 = add i32 %49, 1
  store i32 %add18.i222, ptr %47, align 4
  %50 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i223 = and i32 %50, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i223)
  %tobool29.not.i224 = icmp eq i32 %and.i.i.i223, 0
  br i1 %tobool29.not.i224, label %if.then38.i226, label %do.body3.i225.do.end40.i227_crit_edge, !prof !341

do.body3.i225.do.end40.i227_crit_edge:            ; preds = %do.body3.i225
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i227

if.then38.i226:                                   ; preds = %do.body3.i225
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i227

do.end40.i227:                                    ; preds = %if.then38.i226, %do.body3.i225.do.end40.i227_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %37) #17, !srcloc !348
  br label %MPTCP_INC_STATS.exit228

MPTCP_INC_STATS.exit228:                          ; preds = %do.end40.i227, %if.end36.MPTCP_INC_STATS.exit228_crit_edge
  %51 = ptrtoint ptr %out_of_order_queue37 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile ptr, ptr %out_of_order_queue37, align 4
  %cmp46 = icmp eq ptr %52, null
  br i1 %cmp46, label %if.then48, label %if.end50

if.then48:                                        ; preds = %MPTCP_INC_STATS.exit228
  call void @__sanitizer_cov_trace_pc() #19
  %53 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 0, ptr %skb, align 4
  %rb_right.i = getelementptr inbounds %struct.rb_node, ptr %skb, i32 0, i32 1
  %54 = ptrtoint ptr %rb_right.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr null, ptr %rb_right.i, align 4
  %rb_left.i = getelementptr inbounds %struct.rb_node, ptr %skb, i32 0, i32 2
  %55 = ptrtoint ptr %rb_left.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr null, ptr %rb_left.i, align 4
  %56 = ptrtoint ptr %out_of_order_queue37 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %skb, ptr %out_of_order_queue37, align 4
  tail call void @rb_insert_color(ptr noundef %skb, ptr noundef %out_of_order_queue37) #17
  %ooo_last_skb = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 31
  br label %end.sink.split

if.end50:                                         ; preds = %MPTCP_INC_STATS.exit228
  %ooo_last_skb51 = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 31
  %57 = ptrtoint ptr %ooo_last_skb51 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %ooo_last_skb51, align 8
  %59 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %cb, align 8
  %end_seq.i = getelementptr inbounds %struct.sk_buff, ptr %58, i32 0, i32 3, i32 8
  %61 = ptrtoint ptr %end_seq.i to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %end_seq.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %60, i64 %62)
  %cmp.not.i = icmp eq i64 %60, %62
  br i1 %cmp.not.i, label %mptcp_ooo_try_coalesce.exit, label %if.end50.if.end56_crit_edge

if.end50.if.end56_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56

mptcp_ooo_try_coalesce.exit:                      ; preds = %if.end50
  %call.i = tail call fastcc zeroext i1 @mptcp_try_coalesce(ptr noundef %msk, ptr noundef %58, ptr noundef %skb) #17
  br i1 %call.i, label %if.then53, label %mptcp_ooo_try_coalesce.exit.if.end56_crit_edge

mptcp_ooo_try_coalesce.exit.if.end56_crit_edge:   ; preds = %mptcp_ooo_try_coalesce.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end56

if.then53:                                        ; preds = %mptcp_ooo_try_coalesce.exit
  %63 = ptrtoint ptr %skc_net.i214 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %skc_net.i214, align 4
  %mptcp_statistics.i231 = getelementptr inbounds %struct.net, ptr %64, i32 0, i32 30, i32 8
  %65 = ptrtoint ptr %mptcp_statistics.i231 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %mptcp_statistics.i231, align 4
  %tobool.not.i232 = icmp eq ptr %66, null
  br i1 %tobool.not.i232, label %if.then53.MPTCP_INC_STATS.exit244_crit_edge, label %do.body3.i241, !prof !341

if.then53.MPTCP_INC_STATS.exit244_crit_edge:      ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #19
  br label %MPTCP_INC_STATS.exit244

do.body3.i241:                                    ; preds = %if.then53
  %67 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %68 = ptrtoint ptr %mptcp_statistics.i231 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %mptcp_statistics.i231, align 4
  %arrayidx.i233 = getelementptr [43 x i32], ptr %69, i32 0, i32 21
  %70 = ptrtoint ptr %arrayidx.i233 to i32
  %71 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i234 = and i32 %71, -16384
  %72 = inttoptr i32 %and.i.i234 to ptr
  %cpu.i235 = getelementptr inbounds %struct.thread_info, ptr %72, i32 0, i32 3
  %73 = ptrtoint ptr %cpu.i235 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %cpu.i235, align 4
  %arrayidx17.i236 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx17.i236 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx17.i236, align 4
  %add.i237 = add i32 %76, %70
  %77 = inttoptr i32 %add.i237 to ptr
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %77, align 4
  %add18.i238 = add i32 %79, 1
  store i32 %add18.i238, ptr %77, align 4
  %80 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i239 = and i32 %80, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i239)
  %tobool29.not.i240 = icmp eq i32 %and.i.i.i239, 0
  br i1 %tobool29.not.i240, label %if.then38.i242, label %do.body3.i241.do.end40.i243_crit_edge, !prof !341

do.body3.i241.do.end40.i243_crit_edge:            ; preds = %do.body3.i241
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i243

if.then38.i242:                                   ; preds = %do.body3.i241
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i243

do.end40.i243:                                    ; preds = %if.then38.i242, %do.body3.i241.do.end40.i243_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %67) #17, !srcloc !348
  br label %MPTCP_INC_STATS.exit244

MPTCP_INC_STATS.exit244:                          ; preds = %do.end40.i243, %if.then53.MPTCP_INC_STATS.exit244_crit_edge
  %81 = ptrtoint ptr %skc_net.i214 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %skc_net.i214, align 4
  %mptcp_statistics.i246 = getelementptr inbounds %struct.net, ptr %82, i32 0, i32 30, i32 8
  %83 = ptrtoint ptr %mptcp_statistics.i246 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %mptcp_statistics.i246, align 4
  %tobool.not.i247 = icmp eq ptr %84, null
  br i1 %tobool.not.i247, label %MPTCP_INC_STATS.exit244.cleanup_crit_edge, label %do.body3.i256, !prof !341

MPTCP_INC_STATS.exit244.cleanup_crit_edge:        ; preds = %MPTCP_INC_STATS.exit244
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body3.i256:                                    ; preds = %MPTCP_INC_STATS.exit244
  %85 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %86 = ptrtoint ptr %mptcp_statistics.i246 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %mptcp_statistics.i246, align 4
  %arrayidx.i248 = getelementptr [43 x i32], ptr %87, i32 0, i32 19
  %88 = ptrtoint ptr %arrayidx.i248 to i32
  %89 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i249 = and i32 %89, -16384
  %90 = inttoptr i32 %and.i.i249 to ptr
  %cpu.i250 = getelementptr inbounds %struct.thread_info, ptr %90, i32 0, i32 3
  %91 = ptrtoint ptr %cpu.i250 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %cpu.i250, align 4
  %arrayidx17.i251 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %92
  %93 = ptrtoint ptr %arrayidx17.i251 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %arrayidx17.i251, align 4
  %add.i252 = add i32 %94, %88
  %95 = inttoptr i32 %add.i252 to ptr
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %95, align 4
  %add18.i253 = add i32 %97, 1
  store i32 %add18.i253, ptr %95, align 4
  %98 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i254 = and i32 %98, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i254)
  %tobool29.not.i255 = icmp eq i32 %and.i.i.i254, 0
  br i1 %tobool29.not.i255, label %if.then38.i257, label %do.body3.i256.do.end40.i258_crit_edge, !prof !341

do.body3.i256.do.end40.i258_crit_edge:            ; preds = %do.body3.i256
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i258

if.then38.i257:                                   ; preds = %do.body3.i256
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i258

do.end40.i258:                                    ; preds = %if.then38.i257, %do.body3.i256.do.end40.i258_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %85) #17, !srcloc !348
  br label %cleanup

if.end56:                                         ; preds = %mptcp_ooo_try_coalesce.exit.if.end56_crit_edge, %if.end50.if.end56_crit_edge
  %99 = ptrtoint ptr %ooo_last_skb51 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %ooo_last_skb51, align 8
  %end_seq60 = getelementptr inbounds %struct.sk_buff, ptr %100, i32 0, i32 3, i32 8
  %101 = ptrtoint ptr %end_seq60 to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %end_seq60, align 8
  %sub.i260 = sub i64 %1, %102
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i260)
  %cmp.i261 = icmp slt i64 %sub.i260, 0
  br i1 %cmp.i261, label %while.cond.preheader, label %if.then62

while.cond.preheader:                             ; preds = %if.end56
  %103 = ptrtoint ptr %out_of_order_queue37 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %out_of_order_queue37, align 4
  %tobool66.not334 = icmp eq ptr %104, null
  br i1 %tobool66.not334, label %while.cond.preheader.insert_crit_edge, label %while.cond.preheader.cond.end_crit_edge

while.cond.preheader.cond.end_crit_edge:          ; preds = %while.cond.preheader
  br label %cond.end

while.cond.preheader.insert_crit_edge:            ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #19
  br label %insert

if.then62:                                        ; preds = %if.end56
  %105 = ptrtoint ptr %skc_net.i214 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %skc_net.i214, align 4
  %mptcp_statistics.i263 = getelementptr inbounds %struct.net, ptr %106, i32 0, i32 30, i32 8
  %107 = ptrtoint ptr %mptcp_statistics.i263 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %mptcp_statistics.i263, align 4
  %tobool.not.i264 = icmp eq ptr %108, null
  br i1 %tobool.not.i264, label %if.then62.MPTCP_INC_STATS.exit276_crit_edge, label %do.body3.i273, !prof !341

if.then62.MPTCP_INC_STATS.exit276_crit_edge:      ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #19
  br label %MPTCP_INC_STATS.exit276

do.body3.i273:                                    ; preds = %if.then62
  %109 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %110 = ptrtoint ptr %mptcp_statistics.i263 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %mptcp_statistics.i263, align 4
  %arrayidx.i265 = getelementptr [43 x i32], ptr %111, i32 0, i32 19
  %112 = ptrtoint ptr %arrayidx.i265 to i32
  %113 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i266 = and i32 %113, -16384
  %114 = inttoptr i32 %and.i.i266 to ptr
  %cpu.i267 = getelementptr inbounds %struct.thread_info, ptr %114, i32 0, i32 3
  %115 = ptrtoint ptr %cpu.i267 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %cpu.i267, align 4
  %arrayidx17.i268 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %116
  %117 = ptrtoint ptr %arrayidx17.i268 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %arrayidx17.i268, align 4
  %add.i269 = add i32 %118, %112
  %119 = inttoptr i32 %add.i269 to ptr
  %120 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %119, align 4
  %add18.i270 = add i32 %121, 1
  store i32 %add18.i270, ptr %119, align 4
  %122 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i271 = and i32 %122, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i271)
  %tobool29.not.i272 = icmp eq i32 %and.i.i.i271, 0
  br i1 %tobool29.not.i272, label %if.then38.i274, label %do.body3.i273.do.end40.i275_crit_edge, !prof !341

do.body3.i273.do.end40.i275_crit_edge:            ; preds = %do.body3.i273
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i275

if.then38.i274:                                   ; preds = %do.body3.i273
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i275

do.end40.i275:                                    ; preds = %if.then38.i274, %do.body3.i273.do.end40.i275_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %109) #17, !srcloc !348
  br label %MPTCP_INC_STATS.exit276

MPTCP_INC_STATS.exit276:                          ; preds = %do.end40.i275, %if.then62.MPTCP_INC_STATS.exit276_crit_edge
  %123 = ptrtoint ptr %ooo_last_skb51 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %ooo_last_skb51, align 8
  %rb_right = getelementptr inbounds %struct.rb_node, ptr %124, i32 0, i32 1
  br label %insert

cond.end:                                         ; preds = %while.cond.backedge.cond.end_crit_edge, %while.cond.preheader.cond.end_crit_edge
  %125 = phi ptr [ %129, %while.cond.backedge.cond.end_crit_edge ], [ %104, %while.cond.preheader.cond.end_crit_edge ]
  %cb70 = getelementptr inbounds %struct.sk_buff, ptr %125, i32 0, i32 3
  %126 = ptrtoint ptr %cb70 to i32
  call void @__asan_load8_noabort(i32 %126)
  %127 = load i64, ptr %cb70, align 8
  %sub.i277 = sub i64 %1, %127
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i277)
  %cmp.i278 = icmp slt i64 %sub.i277, 0
  br i1 %cmp.i278, label %if.then74, label %if.end75

if.then74:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #19
  %rb_left = getelementptr inbounds %struct.rb_node, ptr %125, i32 0, i32 2
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end101, %if.then74
  %p.0.be = phi ptr [ %rb_left, %if.then74 ], [ %rb_right102, %if.end101 ]
  %128 = ptrtoint ptr %p.0.be to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %p.0.be, align 4
  %tobool66.not = icmp eq ptr %129, null
  br i1 %tobool66.not, label %while.cond.backedge.insert_crit_edge, label %while.cond.backedge.cond.end_crit_edge

while.cond.backedge.cond.end_crit_edge:           ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

while.cond.backedge.insert_crit_edge:             ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %insert

if.end75:                                         ; preds = %cond.end
  %end_seq78 = getelementptr inbounds %struct.sk_buff, ptr %125, i32 0, i32 3, i32 8
  %130 = ptrtoint ptr %end_seq78 to i32
  call void @__asan_load8_noabort(i32 %130)
  %131 = load i64, ptr %end_seq78, align 8
  %sub.i279 = sub i64 %1, %131
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i279)
  %cmp.i280 = icmp slt i64 %sub.i279, 0
  br i1 %cmp.i280, label %if.then80, label %if.else96

if.then80:                                        ; preds = %if.end75
  %sub.i281 = sub i64 %131, %3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i281)
  %cmp.i282 = icmp slt i64 %sub.i281, 0
  br i1 %cmp.i282, label %if.end87, label %if.then85

if.then85:                                        ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mptcp_drop(ptr noundef %msk, ptr noundef %skb)
  %132 = ptrtoint ptr %skc_net.i214 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %skc_net.i214, align 4
  tail call fastcc void @MPTCP_INC_STATS(ptr noundef %133, i32 noundef 23)
  br label %cleanup

if.end87:                                         ; preds = %if.then80
  %sub.i284 = sub i64 %127, %1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i284)
  %cmp.i285 = icmp slt i64 %sub.i284, 0
  br i1 %cmp.i285, label %if.end87.if.end101_crit_edge, label %if.else

if.end87.if.end101_crit_edge:                     ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end101

if.else:                                          ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @rb_replace_node(ptr noundef nonnull %125, ptr noundef %skb, ptr noundef %out_of_order_queue37) #17
  tail call fastcc void @mptcp_drop(ptr noundef %msk, ptr noundef nonnull %125)
  %134 = ptrtoint ptr %skc_net.i214 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %skc_net.i214, align 4
  tail call fastcc void @MPTCP_INC_STATS(ptr noundef %135, i32 noundef 23)
  br label %merge_right

if.else96:                                        ; preds = %if.end75
  %136 = ptrtoint ptr %cb to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %cb, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %137, i64 %131)
  %cmp.not.i289 = icmp eq i64 %137, %131
  br i1 %cmp.not.i289, label %mptcp_ooo_try_coalesce.exit293, label %if.else96.if.end101_crit_edge

if.else96.if.end101_crit_edge:                    ; preds = %if.else96
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end101

mptcp_ooo_try_coalesce.exit293:                   ; preds = %if.else96
  %call.i290 = tail call fastcc zeroext i1 @mptcp_try_coalesce(ptr noundef %msk, ptr noundef nonnull %125, ptr noundef %skb) #17
  br i1 %call.i290, label %if.then98, label %mptcp_ooo_try_coalesce.exit293.if.end101_crit_edge

mptcp_ooo_try_coalesce.exit293.if.end101_crit_edge: ; preds = %mptcp_ooo_try_coalesce.exit293
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end101

if.then98:                                        ; preds = %mptcp_ooo_try_coalesce.exit293
  call void @__sanitizer_cov_trace_pc() #19
  %138 = ptrtoint ptr %skc_net.i214 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %skc_net.i214, align 4
  tail call fastcc void @MPTCP_INC_STATS(ptr noundef %139, i32 noundef 21)
  br label %cleanup

if.end101:                                        ; preds = %mptcp_ooo_try_coalesce.exit293.if.end101_crit_edge, %if.else96.if.end101_crit_edge, %if.end87.if.end101_crit_edge
  %rb_right102 = getelementptr inbounds %struct.rb_node, ptr %125, i32 0, i32 1
  br label %while.cond.backedge

insert:                                           ; preds = %while.cond.backedge.insert_crit_edge, %MPTCP_INC_STATS.exit276, %while.cond.preheader.insert_crit_edge
  %parent.1 = phi ptr [ %124, %MPTCP_INC_STATS.exit276 ], [ null, %while.cond.preheader.insert_crit_edge ], [ %125, %while.cond.backedge.insert_crit_edge ]
  %p.1 = phi ptr [ %rb_right, %MPTCP_INC_STATS.exit276 ], [ %out_of_order_queue37, %while.cond.preheader.insert_crit_edge ], [ %p.0.be, %while.cond.backedge.insert_crit_edge ]
  %140 = ptrtoint ptr %parent.1 to i32
  %141 = ptrtoint ptr %skb to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 %140, ptr %skb, align 4
  %rb_right.i295 = getelementptr inbounds %struct.rb_node, ptr %skb, i32 0, i32 1
  %142 = ptrtoint ptr %rb_right.i295 to i32
  call void @__asan_store4_noabort(i32 %142)
  store ptr null, ptr %rb_right.i295, align 4
  %rb_left.i296 = getelementptr inbounds %struct.rb_node, ptr %skb, i32 0, i32 2
  %143 = ptrtoint ptr %rb_left.i296 to i32
  call void @__asan_store4_noabort(i32 %143)
  store ptr null, ptr %rb_left.i296, align 4
  %144 = ptrtoint ptr %p.1 to i32
  call void @__asan_store4_noabort(i32 %144)
  store ptr %skb, ptr %p.1, align 4
  tail call void @rb_insert_color(ptr noundef %skb, ptr noundef %out_of_order_queue37) #17
  br label %merge_right

merge_right:                                      ; preds = %insert, %if.else
  %call106336 = tail call ptr @rb_next(ptr noundef %skb) #17
  %tobool108.not337 = icmp eq ptr %call106336, null
  br i1 %tobool108.not337, label %merge_right.end.sink.split_crit_edge, label %while.body118.lr.ph

merge_right.end.sink.split_crit_edge:             ; preds = %merge_right
  call void @__sanitizer_cov_trace_pc() #19
  br label %end.sink.split

while.body118.lr.ph:                              ; preds = %merge_right
  %sk_drops.i.i304 = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 5
  br label %while.body118

while.body118:                                    ; preds = %MPTCP_INC_STATS.exit320.while.body118_crit_edge, %while.body118.lr.ph
  %call106338 = phi ptr [ %call106336, %while.body118.lr.ph ], [ %call106, %MPTCP_INC_STATS.exit320.while.body118_crit_edge ]
  %end_seq121 = getelementptr inbounds %struct.sk_buff, ptr %call106338, i32 0, i32 3, i32 8
  %145 = ptrtoint ptr %end_seq121 to i32
  call void @__asan_load8_noabort(i32 %145)
  %146 = load i64, ptr %end_seq121, align 8
  %sub.i297 = sub i64 %3, %146
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i297)
  %cmp.i298 = icmp slt i64 %sub.i297, 0
  br i1 %cmp.i298, label %while.body118.end_crit_edge, label %if.end124

while.body118.end_crit_edge:                      ; preds = %while.body118
  call void @__sanitizer_cov_trace_pc() #19
  br label %end

if.end124:                                        ; preds = %while.body118
  tail call void @rb_erase(ptr noundef nonnull %call106338, ptr noundef %out_of_order_queue37) #17
  %end.i.i.i299 = getelementptr inbounds %struct.sk_buff, ptr %call106338, i32 0, i32 17
  %147 = ptrtoint ptr %end.i.i.i299 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %end.i.i.i299, align 4
  %gso_segs.i.i300 = getelementptr inbounds %struct.skb_shared_info, ptr %148, i32 0, i32 5
  %149 = ptrtoint ptr %gso_segs.i.i300 to i32
  call void @__asan_load2_noabort(i32 %149)
  %150 = load i16, ptr %gso_segs.i.i300, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %150)
  %cmp.i.i301 = icmp eq i16 %150, 0
  %narrow.i.i302 = select i1 %cmp.i.i301, i16 1, i16 %150
  %cond.i.i303 = zext i16 %narrow.i.i302 to i32
  %call.i.i.i.i305 = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops.i.i304, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_drops.i.i304, i32 1, i32 3, i32 1) #17
  %151 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_drops.i.i304, ptr %sk_drops.i.i304, i32 %cond.i.i303, ptr elementtype(i32) %sk_drops.i.i304) #17, !srcloc !352
  tail call void @__kfree_skb(ptr noundef nonnull %call106338) #17
  %152 = ptrtoint ptr %skc_net.i214 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %skc_net.i214, align 4
  %mptcp_statistics.i307 = getelementptr inbounds %struct.net, ptr %153, i32 0, i32 30, i32 8
  %154 = ptrtoint ptr %mptcp_statistics.i307 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %mptcp_statistics.i307, align 4
  %tobool.not.i308 = icmp eq ptr %155, null
  br i1 %tobool.not.i308, label %if.end124.MPTCP_INC_STATS.exit320_crit_edge, label %do.body3.i317, !prof !341

if.end124.MPTCP_INC_STATS.exit320_crit_edge:      ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #19
  br label %MPTCP_INC_STATS.exit320

do.body3.i317:                                    ; preds = %if.end124
  %156 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %157 = ptrtoint ptr %mptcp_statistics.i307 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %mptcp_statistics.i307, align 4
  %arrayidx.i309 = getelementptr [43 x i32], ptr %158, i32 0, i32 23
  %159 = ptrtoint ptr %arrayidx.i309 to i32
  %160 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i310 = and i32 %160, -16384
  %161 = inttoptr i32 %and.i.i310 to ptr
  %cpu.i311 = getelementptr inbounds %struct.thread_info, ptr %161, i32 0, i32 3
  %162 = ptrtoint ptr %cpu.i311 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %cpu.i311, align 4
  %arrayidx17.i312 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %163
  %164 = ptrtoint ptr %arrayidx17.i312 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %arrayidx17.i312, align 4
  %add.i313 = add i32 %165, %159
  %166 = inttoptr i32 %add.i313 to ptr
  %167 = ptrtoint ptr %166 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %166, align 4
  %add18.i314 = add i32 %168, 1
  store i32 %add18.i314, ptr %166, align 4
  %169 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i315 = and i32 %169, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i315)
  %tobool29.not.i316 = icmp eq i32 %and.i.i.i315, 0
  br i1 %tobool29.not.i316, label %if.then38.i318, label %do.body3.i317.do.end40.i319_crit_edge, !prof !341

do.body3.i317.do.end40.i319_crit_edge:            ; preds = %do.body3.i317
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i319

if.then38.i318:                                   ; preds = %do.body3.i317
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i319

do.end40.i319:                                    ; preds = %if.then38.i318, %do.body3.i317.do.end40.i319_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %156) #17, !srcloc !348
  br label %MPTCP_INC_STATS.exit320

MPTCP_INC_STATS.exit320:                          ; preds = %do.end40.i319, %if.end124.MPTCP_INC_STATS.exit320_crit_edge
  %call106 = tail call ptr @rb_next(ptr noundef %skb) #17
  %tobool108.not = icmp eq ptr %call106, null
  br i1 %tobool108.not, label %MPTCP_INC_STATS.exit320.end.sink.split_crit_edge, label %MPTCP_INC_STATS.exit320.while.body118_crit_edge

MPTCP_INC_STATS.exit320.while.body118_crit_edge:  ; preds = %MPTCP_INC_STATS.exit320
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body118

MPTCP_INC_STATS.exit320.end.sink.split_crit_edge: ; preds = %MPTCP_INC_STATS.exit320
  call void @__sanitizer_cov_trace_pc() #19
  br label %end.sink.split

end.sink.split:                                   ; preds = %MPTCP_INC_STATS.exit320.end.sink.split_crit_edge, %merge_right.end.sink.split_crit_edge, %if.then48
  %ooo_last_skb51.sink = phi ptr [ %ooo_last_skb, %if.then48 ], [ %ooo_last_skb51, %merge_right.end.sink.split_crit_edge ], [ %ooo_last_skb51, %MPTCP_INC_STATS.exit320.end.sink.split_crit_edge ]
  %170 = ptrtoint ptr %ooo_last_skb51.sink to i32
  call void @__asan_store4_noabort(i32 %170)
  store ptr %skb, ptr %ooo_last_skb51.sink, align 8
  br label %end

end:                                              ; preds = %end.sink.split, %while.body118.end_crit_edge
  tail call void @skb_condense(ptr noundef %skb) #17
  %destructor.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 4, i32 0, i32 1
  %171 = ptrtoint ptr %destructor.i.i to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load ptr, ptr %destructor.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %172, null
  br i1 %tobool.not.i.i, label %do.body.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void %172(ptr noundef %skb) #17
  br label %mptcp_set_owner_r.exit

do.body.i.i:                                      ; preds = %end
  %173 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %174 = ptrtoint ptr %173 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %173, align 4
  %tobool3.not.i.i = icmp eq ptr %175, null
  br i1 %tobool3.not.i.i, label %do.body.i.i.mptcp_set_owner_r.exit_crit_edge, label %do.body7.i.i, !prof !340

do.body.i.i.mptcp_set_owner_r.exit_crit_edge:     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_set_owner_r.exit

do.body7.i.i:                                     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2859, 0\0A.popsection", ""() #17, !srcloc !362
  unreachable

mptcp_set_owner_r.exit:                           ; preds = %do.body.i.i.mptcp_set_owner_r.exit_crit_edge, %if.then.i.i
  %176 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %177 = ptrtoint ptr %176 to i32
  call void @__asan_store4_noabort(i32 %177)
  store ptr %msk, ptr %176, align 4
  %178 = ptrtoint ptr %destructor.i.i to i32
  call void @__asan_store4_noabort(i32 %178)
  store ptr @mptcp_rfree, ptr %destructor.i.i, align 4
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %179 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %truesize.i, align 8
  %sk_backlog.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 9
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_backlog.i, i32 1, i32 3, i32 1) #17
  %181 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog.i, ptr %sk_backlog.i, i32 %180, ptr elementtype(i32) %sk_backlog.i) #17, !srcloc !352
  %182 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %truesize.i, align 8
  %rmem_fwd_alloc.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 8
  %184 = ptrtoint ptr %rmem_fwd_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %rmem_fwd_alloc.i.i, align 8
  %sub.i.i = sub i32 %185, %183
  store i32 %sub.i.i, ptr %rmem_fwd_alloc.i.i, align 8
  br label %cleanup

cleanup:                                          ; preds = %mptcp_set_owner_r.exit, %if.then98, %if.then85, %do.end40.i258, %MPTCP_INC_STATS.exit244.cleanup_crit_edge, %do.end40.i, %do.end34.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mptcp_drop(ptr noundef %sk, ptr noundef %skb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %0 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %end.i.i, align 4
  %gso_segs.i = getelementptr inbounds %struct.skb_shared_info, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %gso_segs.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %gso_segs.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %cmp.i = icmp eq i16 %3, 0
  %narrow.i = select i1 %cmp.i, i16 1, i16 %3
  %cond.i = zext i16 %narrow.i to i32
  %sk_drops.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 5
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_drops.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_drops.i, i32 1, i32 3, i32 1) #17
  %4 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_drops.i, ptr %sk_drops.i, i32 %cond.i, ptr elementtype(i32) %sk_drops.i) #17, !srcloc !352
  tail call void @__kfree_skb(ptr noundef %skb) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__skb_ext_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sk_mem_raise_allocated(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @skb_try_coalesce(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_partial(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_rfree(ptr nocapture noundef readonly %skb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %truesize = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 20
  %0 = ptrtoint ptr %truesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %truesize, align 8
  %2 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 4
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %4, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_backlog, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog, ptr %sk_backlog, i32 %1, ptr elementtype(i32) %sk_backlog) #17, !srcloc !363
  %rmem_fwd_alloc.i = getelementptr inbounds %struct.mptcp_sock, ptr %4, i32 0, i32 8
  %6 = ptrtoint ptr %rmem_fwd_alloc.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rmem_fwd_alloc.i, align 8
  %add.i = add i32 %7, %1
  store i32 %add.i, ptr %rmem_fwd_alloc.i, align 8
  %sk_reserved_mem.i.i = getelementptr inbounds %struct.sock, ptr %4, i32 0, i32 12
  %8 = ptrtoint ptr %sk_reserved_mem.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sk_reserved_mem.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i.i, label %entry.sk_unused_reserved_mem.exit.i_crit_edge, label %if.end.i.i, !prof !340

entry.sk_unused_reserved_mem.exit.i_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %4, i32 0, i32 22
  %10 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #17
  %12 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %sk_backlog, align 4
  %14 = add i32 %11, %13
  %sub5.i.i = sub i32 %9, %14
  %15 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i

sk_unused_reserved_mem.exit.i:                    ; preds = %if.end.i.i, %entry.sk_unused_reserved_mem.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %15, %if.end.i.i ], [ 0, %entry.sk_unused_reserved_mem.exit.i_crit_edge ]
  %sub.i = sub i32 %add.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097151, i32 %sub.i)
  %cmp.i = icmp sgt i32 %sub.i, 2097151
  br i1 %cmp.i, label %if.then.i, label %sk_unused_reserved_mem.exit.i.mptcp_rmem_uncharge.exit_crit_edge, !prof !341

sk_unused_reserved_mem.exit.i.mptcp_rmem_uncharge.exit_crit_edge: ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_rmem_uncharge.exit

if.then.i:                                        ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %16 = ptrtoint ptr %rmem_fwd_alloc.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %rmem_fwd_alloc.i, align 8
  %sub.i.i = add i32 %17, -1048576
  store i32 %sub.i.i, ptr %rmem_fwd_alloc.i, align 8
  tail call void @__sk_mem_reduce_allocated(ptr noundef %4, i32 noundef 256) #17
  br label %mptcp_rmem_uncharge.exit

mptcp_rmem_uncharge.exit:                         ; preds = %if.then.i, %sk_unused_reserved_mem.exit.i.mptcp_rmem_uncharge.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__sk_mem_reduce_allocated(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_insert_color(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_replace_node(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_next(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_erase(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_condense(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__kfree_skb(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_first(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_mptcp_subflow_get_send(ptr noundef %subflow) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mptcp_subflow_get_send, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_mptcp_subflow_get_send, %do.body)) #17
          to label %if.end48 [label %do.body], !srcloc !350

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !340

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.78, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !364
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mptcp_subflow_get_send, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %subflow) #17
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !365
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !365
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !340

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.78, i32 noundef 108, i32 noundef 9, ptr noundef null) #17
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !366
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_mptcp_subflow_get_send, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_mptcp_subflow_get_send.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @trace_mptcp_subflow_get_send.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.76, i32 noundef 63, ptr noundef nonnull @.str.77) #17
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !367
  %38 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_push(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_sock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcp_send_mss(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_mark_push(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @mptcp_alloc_tx_skb(ptr noundef %sk, ptr noundef %ssk, i1 noundef zeroext %data_lock_held) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  br i1 %data_lock_held, label %entry.cond.end_crit_edge, label %cond.false

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %sk_allocation = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 41
  %0 = ptrtoint ptr %sk_allocation to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_allocation, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %cond = phi i32 [ %1, %cond.false ], [ 2592, %entry.cond.end_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr nonnull @memcg_sockets_enabled_key, ptr blockaddress(@mptcp_alloc_tx_skb, %land.lhs.true.i)) #17
          to label %tcp_under_memory_pressure.exit [label %land.lhs.true.i], !srcloc !350

land.lhs.true.i:                                  ; preds = %cond.end
  %sk_memcg.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 75
  %2 = ptrtoint ptr %sk_memcg.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk_memcg.i, align 8
  %tobool3.not.i = icmp eq ptr %3, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.tcp_under_memory_pressure.exit_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.tcp_under_memory_pressure.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %tcp_under_memory_pressure.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (i8, ptr @memory_cgrp_subsys_on_dfl_key, i32 1), ptr blockaddress(@mptcp_alloc_tx_skb, %land.lhs.true.i.i)) #17
          to label %do.body.i.i [label %land.lhs.true.i.i], !srcloc !350

land.lhs.true.i.i:                                ; preds = %land.lhs.true4.i
  %tcpmem_pressure.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %3, i32 0, i32 31
  %4 = ptrtoint ptr %tcpmem_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %tcpmem_pressure.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool4.not.i.i = icmp eq i32 %5, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i.do.body.i.i_crit_edge, label %land.lhs.true.i.i.if.then_crit_edge, !prof !368

land.lhs.true.i.i.if.then_crit_edge:              ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

land.lhs.true.i.i.do.body.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %land.lhs.true.i.i.do.body.i.i_crit_edge, %land.lhs.true4.i
  %memcg.addr.0.i.i = phi ptr [ %add.ptr.i.i.i, %do.cond.i.i.do.body.i.i_crit_edge ], [ %3, %land.lhs.true.i.i.do.body.i.i_crit_edge ], [ %3, %land.lhs.true4.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  %socket_pressure.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 29
  %7 = ptrtoint ptr %socket_pressure.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %socket_pressure.i.i, align 8
  %sub.i.i = sub i32 %6, %8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp slt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %do.body.i.i.if.then_crit_edge, label %do.cond.i.i, !prof !369

do.body.i.i.if.then_crit_edge:                    ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

do.cond.i.i:                                      ; preds = %do.body.i.i
  %parent.i.i.i = getelementptr inbounds %struct.mem_cgroup, ptr %memcg.addr.0.i.i, i32 0, i32 2, i32 13
  %9 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %parent.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %10, null
  %add.ptr.i.i.i = getelementptr i8, ptr %10, i32 -176
  %tobool10.not16.i.i = icmp eq ptr %add.ptr.i.i.i, null
  %tobool10.not.i.i = or i1 %tobool.not.i.i.i, %tobool10.not16.i.i
  br i1 %tobool10.not.i.i, label %do.cond.i.i.tcp_under_memory_pressure.exit_crit_edge, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body.i.i

do.cond.i.i.tcp_under_memory_pressure.exit_crit_edge: ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %tcp_under_memory_pressure.exit

tcp_under_memory_pressure.exit:                   ; preds = %do.cond.i.i.tcp_under_memory_pressure.exit_crit_edge, %land.lhs.true.i.tcp_under_memory_pressure.exit_crit_edge, %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @tcp_memory_pressure to i32))
  %11 = load volatile i32, ptr @tcp_memory_pressure, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool8.i.not = icmp eq i32 %11, 0
  br i1 %tobool8.i.not, label %tcp_under_memory_pressure.exit.if.end5_crit_edge, label %tcp_under_memory_pressure.exit.if.then_crit_edge, !prof !340

tcp_under_memory_pressure.exit.if.then_crit_edge: ; preds = %tcp_under_memory_pressure.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

tcp_under_memory_pressure.exit.if.end5_crit_edge: ; preds = %tcp_under_memory_pressure.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end5

if.then:                                          ; preds = %tcp_under_memory_pressure.exit.if.then_crit_edge, %do.body.i.i.if.then_crit_edge, %land.lhs.true.i.i.if.then_crit_edge
  br i1 %data_lock_held, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @__mptcp_mem_reclaim_partial(ptr noundef %sk)
  br label %if.end5

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mptcp_mem_reclaim_partial(ptr noundef %sk)
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4, %tcp_under_memory_pressure.exit.if.end5_crit_edge
  %call.i.i.i = tail call ptr @__alloc_skb(i32 noundef 384, i32 noundef %cond, i32 noundef 1, i32 noundef -1) #17
  %tobool.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i, !prof !341

if.then.i.i:                                      ; preds = %if.end5
  %call.i19.i.i = tail call ptr @__skb_ext_alloc(i32 noundef %cond) #17
  %tobool.not.i.i.i12 = icmp eq ptr %call.i19.i.i, null
  br i1 %tobool.not.i.i.i12, label %if.end.i.i13, label %if.end.i

if.end.i.i13:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__kfree_skb(ptr noundef nonnull %call.i.i.i) #17
  br label %__mptcp_alloc_tx_skb.exit

if.else.i.i:                                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mptcp_enter_memory_pressure(ptr noundef %sk) #17
  br label %__mptcp_alloc_tx_skb.exit

if.end.i:                                         ; preds = %if.then.i.i
  %call1.i.i.i = tail call ptr @__skb_ext_set(ptr noundef nonnull %call.i.i.i, i32 noundef 3, ptr noundef nonnull %call.i19.i.i) #17
  %data.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 19
  %12 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %data.i.i.i, align 4
  %add.ptr.i.i.i14 = getelementptr i8, ptr %13, i32 384
  store ptr %add.ptr.i.i.i14, ptr %data.i.i.i, align 4
  %tail.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 16
  %14 = ptrtoint ptr %tail.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tail.i.i.i, align 8
  %add.ptr1.i.i.i = getelementptr i8, ptr %15, i32 384
  store ptr %add.ptr1.i.i.i, ptr %tail.i.i.i, align 8
  %ip_summed.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 15
  %16 = ptrtoint ptr %ip_summed.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %bf.load.i.i = load i16, ptr %ip_summed.i.i, align 8
  %bf.set.i.i = or i16 %bf.load.i.i, 1536
  store i16 %bf.set.i.i, ptr %ip_summed.i.i, align 8
  %17 = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %17, ptr %17, align 4
  %prev.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 4, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %17, ptr %prev.i.i.i, align 4
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i.i, i32 0, i32 20
  %20 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %truesize.i, align 8
  %skc_prot.i.i.i = getelementptr inbounds %struct.sock_common, ptr %ssk, i32 0, i32 8
  %22 = ptrtoint ptr %skc_prot.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %skc_prot.i.i.i, align 8
  %memory_allocated.i.i.i = getelementptr inbounds %struct.proto, ptr %23, i32 0, i32 32
  %24 = ptrtoint ptr %memory_allocated.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %memory_allocated.i.i.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %25, null
  br i1 %tobool.i.not.i.i, label %if.end.i.if.then4.i_crit_edge, label %if.end.i11.i

if.end.i.if.then4.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4.i

if.end.i11.i:                                     ; preds = %if.end.i
  %sk_forward_alloc.i.i = getelementptr inbounds %struct.sock, ptr %ssk, i32 0, i32 11
  %26 = ptrtoint ptr %sk_forward_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sk_forward_alloc.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %21)
  %cmp.not.i.i = icmp slt i32 %27, %21
  br i1 %cmp.not.i.i, label %sk_wmem_schedule.exit.i, label %if.end.i11.i.if.then4.i_crit_edge

if.end.i11.i.if.then4.i_crit_edge:                ; preds = %if.end.i11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4.i

sk_wmem_schedule.exit.i:                          ; preds = %if.end.i11.i
  %call1.i.i = tail call i32 @__sk_mem_schedule(ptr noundef %ssk, i32 noundef %21, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.i.not.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.i.not.i, label %if.end5.i, label %sk_wmem_schedule.exit.i.if.then4.i_crit_edge, !prof !341

sk_wmem_schedule.exit.i.if.then4.i_crit_edge:     ; preds = %sk_wmem_schedule.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then4.i

if.then4.i:                                       ; preds = %sk_wmem_schedule.exit.i.if.then4.i_crit_edge, %if.end.i11.i.if.then4.i_crit_edge, %if.end.i.if.then4.i_crit_edge
  tail call void @tcp_skb_entail(ptr noundef %ssk, ptr noundef nonnull %call.i.i.i) #17
  br label %__mptcp_alloc_tx_skb.exit

if.end5.i:                                        ; preds = %sk_wmem_schedule.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @kfree_skb_reason(ptr noundef nonnull %call.i.i.i, i32 noundef 0) #17
  br label %__mptcp_alloc_tx_skb.exit

__mptcp_alloc_tx_skb.exit:                        ; preds = %if.end5.i, %if.then4.i, %if.else.i.i, %if.end.i.i13
  %retval.0.i15 = phi ptr [ %call.i.i.i, %if.then4.i ], [ null, %if.end5.i ], [ null, %if.else.i.i ], [ null, %if.end.i.i13 ]
  ret ptr %retval.0.i15
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_remove_empty_skb(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mptcp_update_data_checksum(ptr noundef %skb, i32 noundef %added) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %active_extensions.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 13
  %0 = ptrtoint ptr %active_extensions.i.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %active_extensions.i.i.i, align 1
  %2 = and i8 %1, 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.i.not.i.i = icmp eq i8 %2, 0
  br i1 %tobool.i.not.i.i, label %entry.mptcp_get_ext.exit_crit_edge, label %if.then.i.i

entry.mptcp_get_ext.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_get_ext.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %extensions.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 22
  %3 = ptrtoint ptr %extensions.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %extensions.i.i, align 8
  %arrayidx.i.i = getelementptr %struct.skb_ext, ptr %4, i32 0, i32 1, i32 3
  %5 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx.i.i, align 1
  %conv.i.i12 = zext i8 %6 to i32
  %shl.i.i = shl nuw nsw i32 %conv.i.i12, 3
  %add.ptr.i.i = getelementptr i8, ptr %4, i32 %shl.i.i
  br label %mptcp_get_ext.exit

mptcp_get_ext.exit:                               ; preds = %if.then.i.i, %entry.mptcp_get_ext.exit_crit_edge
  %retval.0.i.i13 = phi ptr [ %add.ptr.i.i, %if.then.i.i ], [ null, %entry.mptcp_get_ext.exit_crit_edge ]
  %csum1 = getelementptr inbounds %struct.mptcp_ext, ptr %retval.0.i.i13, i32 0, i32 4
  %7 = ptrtoint ptr %csum1 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %csum1, align 2
  %conv.i = zext i16 %8 to i32
  %neg = xor i32 %conv.i, -1
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %9 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len, align 4
  %sub = sub i32 %10, %added
  %call3 = tail call i32 @skb_checksum(ptr noundef %skb, i32 noundef %sub, i32 noundef %added, i32 noundef 0) #17
  %and.i.i = and i32 %sub, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  %or.i.i.i = tail call i32 @llvm.fshl.i32(i32 %call3, i32 %call3, i32 24) #17
  %retval.0.i.i = select i1 %tobool.not.i.i, i32 %call3, i32 %or.i.i.i
  %add.i.i = add i32 %retval.0.i.i, %neg
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %retval.0.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, %retval.0.i.i
  %conv.i.i = zext i1 %cmp.i.i to i32
  %add1.i.i = add i32 %add.i.i, %conv.i.i
  %11 = tail call i32 asm "add\09$0, $1, $1, ror #16\09@ csum_fold", "=r,r,~{cc}"(i32 %add1.i.i) #20, !srcloc !353
  %neg.i = xor i32 %11, -1
  %shr.i = lshr i32 %neg.i, 16
  %conv.i14 = trunc i32 %shr.i to i16
  %12 = ptrtoint ptr %csum1 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv.i14, ptr %csum1, align 2
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @tcp_push_pending_frames(ptr noundef %sk) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %sk_write_queue.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 26
  %0 = ptrtoint ptr %sk_write_queue.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk_write_queue.i, align 4
  %cmp.i.i = icmp eq ptr %1, %sk_write_queue.i
  %tobool.not6 = icmp eq ptr %1, null
  %tobool.not = or i1 %cmp.i.i, %tobool.not6
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call2 = tail call i32 @tcp_current_mss(ptr noundef %sk) #17
  %nonagle = getelementptr inbounds %struct.tcp_sock, ptr %sk, i32 0, i32 37
  %2 = ptrtoint ptr %nonagle to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load = load i16, ptr %nonagle, align 4
  %3 = lshr i16 %bf.load, 4
  %4 = and i16 %3, 15
  %conv = zext i16 %4 to i32
  tail call void @__tcp_push_pending_frames(ptr noundef %sk, i32 noundef %call2, i32 noundef %conv) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_mem_reclaim_partial(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %rmem_fwd_alloc = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 8
  %0 = ptrtoint ptr %rmem_fwd_alloc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rmem_fwd_alloc, align 8
  %sk_reserved_mem.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %2 = ptrtoint ptr %sk_reserved_mem.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sk_reserved_mem.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %entry.sk_unused_reserved_mem.exit_crit_edge, label %if.end.i, !prof !340

entry.sk_unused_reserved_mem.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %4 = ptrtoint ptr %sk_wmem_queued.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sk_wmem_queued.i, align 8
  %sk_backlog.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i, i32 noundef 4) #17
  %6 = ptrtoint ptr %sk_backlog.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %sk_backlog.i, align 4
  %8 = add i32 %5, %7
  %sub5.i = sub i32 %3, %8
  %9 = tail call i32 @llvm.smax.i32(i32 %sub5.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit

sk_unused_reserved_mem.exit:                      ; preds = %if.end.i, %entry.sk_unused_reserved_mem.exit_crit_edge
  %retval.0.i = phi i32 [ %9, %if.end.i ], [ 0, %entry.sk_unused_reserved_mem.exit_crit_edge ]
  %sub = sub i32 %1, %retval.0.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %10 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %sk_unused_reserved_mem.exit.if.end34_crit_edge, label %land.rhs

sk_unused_reserved_mem.exit.if.end34_crit_edge:   ; preds = %sk_unused_reserved_mem.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end34

land.rhs:                                         ; preds = %sk_unused_reserved_mem.exit
  %dep_map = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %land.rhs6, label %land.rhs.if.end34_crit_edge

land.rhs.if.end34_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end34

land.rhs6:                                        ; preds = %land.rhs
  %.b55 = load i1, ptr @__mptcp_mem_reclaim_partial.__already_done, align 1
  br i1 %.b55, label %land.rhs6.if.end34_crit_edge, label %if.then, !prof !340

land.rhs6.if.end34_crit_edge:                     ; preds = %land.rhs6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end34

if.then:                                          ; preds = %land.rhs6
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__mptcp_mem_reclaim_partial.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 970, i32 noundef 9, ptr noundef null) #17
  br label %if.end34

if.end34:                                         ; preds = %if.then, %land.rhs6.if.end34_crit_edge, %land.rhs.if.end34_crit_edge, %sk_unused_reserved_mem.exit.if.end34_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub)
  %cmp44 = icmp sgt i32 %sub, 4096
  br i1 %cmp44, label %if.then45, label %if.end34.if.end47_crit_edge

if.end34.if.end47_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end47

if.then45:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #19
  %sub46 = add nsw i32 %sub, -1
  %shr.i59 = lshr i32 %sub46, 12
  %shl.i = and i32 %sub46, -4096
  %11 = ptrtoint ptr %rmem_fwd_alloc to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rmem_fwd_alloc, align 8
  %sub.i = sub i32 %12, %shl.i
  store i32 %sub.i, ptr %rmem_fwd_alloc, align 8
  tail call void @__sk_mem_reduce_allocated(ptr noundef %sk, i32 noundef %shr.i59) #17
  br label %if.end47

if.end47:                                         ; preds = %if.then45, %if.end34.if.end47_crit_edge
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %13 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i = getelementptr inbounds %struct.proto, ptr %14, i32 0, i32 32
  %15 = ptrtoint ptr %memory_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %memory_allocated.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %16, null
  br i1 %tobool.i.not.i, label %if.end47.sk_mem_reclaim_partial.exit_crit_edge, label %if.end.i57

if.end47.sk_mem_reclaim_partial.exit_crit_edge:   ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_reclaim_partial.exit

if.end.i57:                                       ; preds = %if.end47
  %sk_forward_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %17 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sk_forward_alloc.i, align 8
  %19 = ptrtoint ptr %sk_reserved_mem.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sk_reserved_mem.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i.i, label %if.end.i57.sk_unused_reserved_mem.exit.i_crit_edge, label %if.end.i.i, !prof !340

if.end.i57.sk_unused_reserved_mem.exit.i_crit_edge: ; preds = %if.end.i57
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i

if.end.i.i:                                       ; preds = %if.end.i57
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %21 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %sk_backlog.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i, i32 noundef 4) #17
  %23 = ptrtoint ptr %sk_backlog.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %sk_backlog.i.i, align 4
  %25 = add i32 %22, %24
  %sub5.i.i = sub i32 %20, %25
  %26 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i

sk_unused_reserved_mem.exit.i:                    ; preds = %if.end.i.i, %if.end.i57.sk_unused_reserved_mem.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %26, %if.end.i.i ], [ 0, %if.end.i57.sk_unused_reserved_mem.exit.i_crit_edge ]
  %sub.i58 = sub i32 %18, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %sub.i58)
  %cmp.i = icmp sgt i32 %sub.i58, 4096
  br i1 %cmp.i, label %if.then2.i, label %sk_unused_reserved_mem.exit.i.sk_mem_reclaim_partial.exit_crit_edge

sk_unused_reserved_mem.exit.i.sk_mem_reclaim_partial.exit_crit_edge: ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_mem_reclaim_partial.exit

if.then2.i:                                       ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %sub3.i = add nsw i32 %sub.i58, -1
  tail call void @__sk_mem_reclaim(ptr noundef %sk, i32 noundef %sub3.i) #17
  br label %sk_mem_reclaim_partial.exit

sk_mem_reclaim_partial.exit:                      ; preds = %if.then2.i, %sk_unused_reserved_mem.exit.i.sk_mem_reclaim_partial.exit_crit_edge, %if.end47.sk_mem_reclaim_partial.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mptcp_mem_reclaim_partial(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  tail call fastcc void @__mptcp_mem_reclaim_partial(ptr noundef %sk)
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__sk_mem_reclaim(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_skb_entail(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mptcp_enter_memory_pressure(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_userlocks.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %0 = ptrtoint ptr %sk_userlocks.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i = load i8, ptr %sk_userlocks.i, align 8
  %1 = and i8 %bf.load.i, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.sk_stream_moderate_sndbuf.exit_crit_edge

entry.sk_stream_moderate_sndbuf.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_moderate_sndbuf.exit

if.end.i:                                         ; preds = %entry
  %sk_sndbuf.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %2 = ptrtoint ptr %sk_sndbuf.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sk_sndbuf.i, align 4
  %sk_wmem_queued.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %4 = ptrtoint ptr %sk_wmem_queued.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sk_wmem_queued.i, align 8
  %shr.i = ashr i32 %5, 1
  %6 = tail call i32 @llvm.smin.i32(i32 %3, i32 %shr.i) #17
  %sk_reserved_mem.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %7 = ptrtoint ptr %sk_reserved_mem.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sk_reserved_mem.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i.i, label %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge, label %if.end.i.i, !prof !340

if.end.i.sk_unused_reserved_mem.exit.i_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i

if.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_backlog.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i, i32 noundef 4) #17
  %9 = ptrtoint ptr %sk_backlog.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %sk_backlog.i.i, align 4
  %11 = add i32 %5, %10
  %sub5.i.i = sub i32 %8, %11
  %12 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i

sk_unused_reserved_mem.exit.i:                    ; preds = %if.end.i.i, %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %12, %if.end.i.i ], [ 0, %if.end.i.sk_unused_reserved_mem.exit.i_crit_edge ]
  %13 = tail call i32 @llvm.umax.i32(i32 %6, i32 %retval.0.i.i) #17
  %14 = tail call i32 @llvm.umax.i32(i32 %13, i32 4608) #17
  %15 = ptrtoint ptr %sk_sndbuf.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile i32 %14, ptr %sk_sndbuf.i, align 4
  br label %sk_stream_moderate_sndbuf.exit

sk_stream_moderate_sndbuf.exit:                   ; preds = %sk_unused_reserved_mem.exit.i, %entry.sk_stream_moderate_sndbuf.exit_crit_edge
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %16 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %16)
  %subflow.034 = load ptr, ptr %conn_list, align 8
  %cmp.not35 = icmp eq ptr %subflow.034, %conn_list
  br i1 %cmp.not35, label %sk_stream_moderate_sndbuf.exit.for.end_crit_edge, label %if.end.peel

sk_stream_moderate_sndbuf.exit.for.end_crit_edge: ; preds = %sk_stream_moderate_sndbuf.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.end.peel:                                      ; preds = %sk_stream_moderate_sndbuf.exit
  %tcp_sock.i.peel = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.034, i32 0, i32 5
  %17 = ptrtoint ptr %tcp_sock.i.peel to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tcp_sock.i.peel, align 8
  tail call void @tcp_enter_memory_pressure(ptr noundef %18) #17
  %sk_userlocks.i13.peel = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 43
  %19 = ptrtoint ptr %sk_userlocks.i13.peel to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load.i14.peel = load i8, ptr %sk_userlocks.i13.peel, align 8
  %20 = and i8 %bf.load.i14.peel, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i15.peel = icmp eq i8 %20, 0
  br i1 %tobool.not.i15.peel, label %if.end.i21.peel, label %if.end.peel.sk_stream_moderate_sndbuf.exit28.peel_crit_edge

if.end.peel.sk_stream_moderate_sndbuf.exit28.peel_crit_edge: ; preds = %if.end.peel
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_moderate_sndbuf.exit28.peel

if.end.i21.peel:                                  ; preds = %if.end.peel
  %sk_sndbuf.i16.peel = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 21
  %21 = ptrtoint ptr %sk_sndbuf.i16.peel to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sk_sndbuf.i16.peel, align 4
  %sk_wmem_queued.i17.peel = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 22
  %23 = ptrtoint ptr %sk_wmem_queued.i17.peel to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sk_wmem_queued.i17.peel, align 8
  %shr.i18.peel = ashr i32 %24, 1
  %25 = tail call i32 @llvm.smin.i32(i32 %22, i32 %shr.i18.peel) #17
  %sk_reserved_mem.i.i19.peel = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 12
  %26 = ptrtoint ptr %sk_reserved_mem.i.i19.peel to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sk_reserved_mem.i.i19.peel, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i.i20.peel = icmp eq i32 %27, 0
  br i1 %tobool.not.i.i20.peel, label %if.end.i21.peel.sk_unused_reserved_mem.exit.i27.peel_crit_edge, label %if.end.i.i25.peel, !prof !340

if.end.i21.peel.sk_unused_reserved_mem.exit.i27.peel_crit_edge: ; preds = %if.end.i21.peel
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i27.peel

if.end.i.i25.peel:                                ; preds = %if.end.i21.peel
  call void @__sanitizer_cov_trace_pc() #19
  %sk_backlog.i.i22.peel = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 9
  %call.i.i.i.i23.peel = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i22.peel, i32 noundef 4) #17
  %28 = ptrtoint ptr %sk_backlog.i.i22.peel to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %sk_backlog.i.i22.peel, align 4
  %30 = add i32 %24, %29
  %sub5.i.i24.peel = sub i32 %27, %30
  %31 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i24.peel, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i27.peel

sk_unused_reserved_mem.exit.i27.peel:             ; preds = %if.end.i.i25.peel, %if.end.i21.peel.sk_unused_reserved_mem.exit.i27.peel_crit_edge
  %retval.0.i.i26.peel = phi i32 [ %31, %if.end.i.i25.peel ], [ 0, %if.end.i21.peel.sk_unused_reserved_mem.exit.i27.peel_crit_edge ]
  %32 = tail call i32 @llvm.umax.i32(i32 %25, i32 %retval.0.i.i26.peel) #17
  %33 = tail call i32 @llvm.umax.i32(i32 %32, i32 4608) #17
  %34 = ptrtoint ptr %sk_sndbuf.i16.peel to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile i32 %33, ptr %sk_sndbuf.i16.peel, align 4
  br label %sk_stream_moderate_sndbuf.exit28.peel

sk_stream_moderate_sndbuf.exit28.peel:            ; preds = %sk_unused_reserved_mem.exit.i27.peel, %if.end.peel.sk_stream_moderate_sndbuf.exit28.peel_crit_edge
  %35 = ptrtoint ptr %subflow.034 to i32
  call void @__asan_load4_noabort(i32 %35)
  %subflow.0.peel = load ptr, ptr %subflow.034, align 8
  %cmp.not.peel = icmp eq ptr %subflow.0.peel, %conn_list
  br i1 %cmp.not.peel, label %sk_stream_moderate_sndbuf.exit28.peel.for.end_crit_edge, label %sk_stream_moderate_sndbuf.exit28.peel.if.end_crit_edge

sk_stream_moderate_sndbuf.exit28.peel.if.end_crit_edge: ; preds = %sk_stream_moderate_sndbuf.exit28.peel
  br label %if.end

sk_stream_moderate_sndbuf.exit28.peel.for.end_crit_edge: ; preds = %sk_stream_moderate_sndbuf.exit28.peel
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.end:                                           ; preds = %sk_stream_moderate_sndbuf.exit28.if.end_crit_edge, %sk_stream_moderate_sndbuf.exit28.peel.if.end_crit_edge
  %subflow.037 = phi ptr [ %subflow.0, %sk_stream_moderate_sndbuf.exit28.if.end_crit_edge ], [ %subflow.0.peel, %sk_stream_moderate_sndbuf.exit28.peel.if.end_crit_edge ]
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.037, i32 0, i32 5
  %36 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tcp_sock.i, align 8
  %sk_userlocks.i13 = getelementptr inbounds %struct.sock, ptr %37, i32 0, i32 43
  %38 = ptrtoint ptr %sk_userlocks.i13 to i32
  call void @__asan_load1_noabort(i32 %38)
  %bf.load.i14 = load i8, ptr %sk_userlocks.i13, align 8
  %39 = and i8 %bf.load.i14, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool.not.i15 = icmp eq i8 %39, 0
  br i1 %tobool.not.i15, label %if.end.i21, label %if.end.sk_stream_moderate_sndbuf.exit28_crit_edge

if.end.sk_stream_moderate_sndbuf.exit28_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_moderate_sndbuf.exit28

if.end.i21:                                       ; preds = %if.end
  %sk_sndbuf.i16 = getelementptr inbounds %struct.sock, ptr %37, i32 0, i32 21
  %40 = ptrtoint ptr %sk_sndbuf.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %sk_sndbuf.i16, align 4
  %sk_wmem_queued.i17 = getelementptr inbounds %struct.sock, ptr %37, i32 0, i32 22
  %42 = ptrtoint ptr %sk_wmem_queued.i17 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %sk_wmem_queued.i17, align 8
  %shr.i18 = ashr i32 %43, 1
  %44 = tail call i32 @llvm.smin.i32(i32 %41, i32 %shr.i18) #17
  %sk_reserved_mem.i.i19 = getelementptr inbounds %struct.sock, ptr %37, i32 0, i32 12
  %45 = ptrtoint ptr %sk_reserved_mem.i.i19 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sk_reserved_mem.i.i19, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i.i20 = icmp eq i32 %46, 0
  br i1 %tobool.not.i.i20, label %if.end.i21.sk_unused_reserved_mem.exit.i27_crit_edge, label %if.end.i.i25, !prof !340

if.end.i21.sk_unused_reserved_mem.exit.i27_crit_edge: ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i27

if.end.i.i25:                                     ; preds = %if.end.i21
  call void @__sanitizer_cov_trace_pc() #19
  %sk_backlog.i.i22 = getelementptr inbounds %struct.sock, ptr %37, i32 0, i32 9
  %call.i.i.i.i23 = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i22, i32 noundef 4) #17
  %47 = ptrtoint ptr %sk_backlog.i.i22 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %sk_backlog.i.i22, align 4
  %49 = add i32 %43, %48
  %sub5.i.i24 = sub i32 %46, %49
  %50 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i24, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i27

sk_unused_reserved_mem.exit.i27:                  ; preds = %if.end.i.i25, %if.end.i21.sk_unused_reserved_mem.exit.i27_crit_edge
  %retval.0.i.i26 = phi i32 [ %50, %if.end.i.i25 ], [ 0, %if.end.i21.sk_unused_reserved_mem.exit.i27_crit_edge ]
  %51 = tail call i32 @llvm.umax.i32(i32 %44, i32 %retval.0.i.i26) #17
  %52 = tail call i32 @llvm.umax.i32(i32 %51, i32 4608) #17
  %53 = ptrtoint ptr %sk_sndbuf.i16 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile i32 %52, ptr %sk_sndbuf.i16, align 4
  br label %sk_stream_moderate_sndbuf.exit28

sk_stream_moderate_sndbuf.exit28:                 ; preds = %sk_unused_reserved_mem.exit.i27, %if.end.sk_stream_moderate_sndbuf.exit28_crit_edge
  %54 = ptrtoint ptr %subflow.037 to i32
  call void @__asan_load4_noabort(i32 %54)
  %subflow.0 = load ptr, ptr %subflow.037, align 8
  %cmp.not = icmp eq ptr %subflow.0, %conn_list
  br i1 %cmp.not, label %sk_stream_moderate_sndbuf.exit28.for.end_crit_edge, label %sk_stream_moderate_sndbuf.exit28.if.end_crit_edge, !llvm.loop !370

sk_stream_moderate_sndbuf.exit28.if.end_crit_edge: ; preds = %sk_stream_moderate_sndbuf.exit28
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

sk_stream_moderate_sndbuf.exit28.for.end_crit_edge: ; preds = %sk_stream_moderate_sndbuf.exit28
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %sk_stream_moderate_sndbuf.exit28.for.end_crit_edge, %sk_stream_moderate_sndbuf.exit28.peel.for.end_crit_edge, %sk_stream_moderate_sndbuf.exit.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_skb(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__skb_ext_alloc(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__skb_ext_set(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_enter_memory_pressure(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sk_mem_schedule(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_checksum(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__tcp_push_pending_frames(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tcp_current_mss(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_reset_timer(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_stream_write_space(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__tcp_close(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @sk_wake_async(ptr noundef %sk, i32 noundef %band) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  %0 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %3 = and i32 %2, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.not = icmp eq i32 %3, 0
  br i1 %tobool.i.not, label %entry.if.end12_crit_edge, label %if.then

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.then:                                          ; preds = %entry
  %4 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !372
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #17
  %call.i = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i, label %if.then.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then.rcu_read_lock.exit_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 696, ptr noundef nonnull @.str.91) #17
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then.rcu_read_lock.exit_crit_edge
  %8 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %8, align 8
  %call2 = tail call i32 @rcu_read_lock_held() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end9_crit_edge

rcu_read_lock.exit.do.end9_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call3 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.lhs.true.do.end9_crit_edge, label %land.lhs.true5

land.lhs.true.do.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9

land.lhs.true5:                                   ; preds = %land.lhs.true
  %.b1 = load i1, ptr @sk_wake_async.__warned, align 1
  br i1 %.b1, label %land.lhs.true5.do.end9_crit_edge, label %if.then7

land.lhs.true5.do.end9_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end9

if.then7:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sk_wake_async.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.75, i32 noundef 2444, ptr noundef nonnull @.str.77) #17
  br label %do.end9

do.end9:                                          ; preds = %if.then7, %land.lhs.true5.do.end9_crit_edge, %land.lhs.true.do.end9_crit_edge, %rcu_read_lock.exit.do.end9_crit_edge
  %call11 = tail call i32 @sock_wake_async(ptr noundef %10, i32 noundef 1, i32 noundef %band) #17
  %call.i2 = tail call zeroext i1 @rcu_is_watching() #17
  br i1 %call.i2, label %do.end9.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i5

do.end9.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true.i5:                                 ; preds = %do.end9
  %call1.i3 = tail call i32 @debug_lockdep_rcu_enabled() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i3)
  %tobool.not.i4 = icmp eq i32 %call1.i3, 0
  br i1 %tobool.not.i4, label %land.lhs.true.i5.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i7

land.lhs.true.i5.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i5
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

land.lhs.true2.i7:                                ; preds = %land.lhs.true.i5
  %.b4.i6 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i6, label %land.lhs.true2.i7.rcu_read_unlock.exit_crit_edge, label %if.then.i8

land.lhs.true2.i7.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i7
  call void @__sanitizer_cov_trace_pc() #19
  br label %rcu_read_unlock.exit

if.then.i8:                                       ; preds = %land.lhs.true2.i7
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.90, i32 noundef 724, ptr noundef nonnull @.str.92) #17
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i8, %land.lhs.true2.i7.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i5.rcu_read_unlock.exit_crit_edge, %do.end9.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #17, !srcloc !373
  %11 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i.i.i9 = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i.i.i9 to ptr
  %preempt_count.i.i.i.i10 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i.i.i10 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i.i.i10, align 4
  %sub.i.i.i = add i32 %14, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i10, align 4
  tail call void @rcu_read_unlock_strict() #17
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #17
  br label %if.end12

if.end12:                                         ; preds = %rcu_read_unlock.exit, %entry.if.end12_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_wake_async(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_worker(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -1716
  tail call void @lock_sock_nested(ptr noundef %add.ptr, i32 noundef 0) #17
  %skc_state = getelementptr i8, ptr %work, i32 -1698
  %0 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %1)
  %cmp = icmp eq i8 %1, 7
  br i1 %cmp, label %entry.unlock_crit_edge, label %if.end, !prof !341

entry.unlock_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

if.end:                                           ; preds = %entry
  %flags.i.i.i = getelementptr i8, ptr %work, i32 -24
  %2 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags.i.i.i, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not.i.i = icmp eq i32 %4, 0
  br i1 %tobool.i.not.i.i, label %land.lhs.true.i.i, label %if.end.mptcp_check_data_fin_ack.exit_crit_edge

if.end.mptcp_check_data_fin_ack.exit_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_data_fin_ack.exit

land.lhs.true.i.i:                                ; preds = %if.end
  %5 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load volatile i8, ptr %skc_state, align 2
  %conv.i.i = zext i8 %6 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, 2576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.mptcp_check_data_fin_ack.exit_crit_edge, label %mptcp_pending_data_fin_ack.exit.i

land.lhs.true.i.i.mptcp_check_data_fin_ack.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_data_fin_ack.exit

mptcp_pending_data_fin_ack.exit.i:                ; preds = %land.lhs.true.i.i
  %write_seq.i.i = getelementptr i8, ptr %work, i32 -116
  %7 = ptrtoint ptr %write_seq.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %write_seq.i.i, align 8
  %snd_una.i.i = getelementptr i8, ptr %work, i32 -52
  %9 = ptrtoint ptr %snd_una.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load volatile i64, ptr %snd_una.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %10)
  %cmp.i.i = icmp eq i64 %8, %10
  br i1 %cmp.i.i, label %do.body3.i, label %mptcp_pending_data_fin_ack.exit.i.mptcp_check_data_fin_ack.exit_crit_edge

mptcp_pending_data_fin_ack.exit.i.mptcp_check_data_fin_ack.exit_crit_edge: ; preds = %mptcp_pending_data_fin_ack.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_data_fin_ack.exit

do.body3.i:                                       ; preds = %mptcp_pending_data_fin_ack.exit.i
  %snd_data_fin_enable.i = getelementptr i8, ptr %work, i32 -8
  %11 = ptrtoint ptr %snd_data_fin_enable.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store volatile i8 0, ptr %snd_data_fin_enable.i, align 4
  %12 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %skc_state, align 2
  %14 = zext i8 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.139)
  switch i8 %13, label %do.body3.i.sw.epilog.i_crit_edge [
    i8 4, label %do.body3.i.sw.epilog.sink.split.i_crit_edge
    i8 11, label %do.body3.i.sw.bb8.i_crit_edge
    i8 9, label %do.body3.i.sw.bb8.i_crit_edge72
  ]

do.body3.i.sw.bb8.i_crit_edge72:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8.i

do.body3.i.sw.bb8.i_crit_edge:                    ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.bb8.i

do.body3.i.sw.epilog.sink.split.i_crit_edge:      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.sink.split.i

do.body3.i.sw.epilog.i_crit_edge:                 ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %do.body3.i.sw.bb8.i_crit_edge, %do.body3.i.sw.bb8.i_crit_edge72
  br label %sw.epilog.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %sw.bb8.i, %do.body3.i.sw.epilog.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 7, %sw.bb8.i ], [ 5, %do.body3.i.sw.epilog.sink.split.i_crit_edge ]
  tail call void @inet_sk_state_store(ptr noundef %add.ptr, i32 noundef %.sink.i) #17
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.epilog.sink.split.i, %do.body3.i.sw.epilog.i_crit_edge
  %15 = getelementptr i8, ptr %work, i32 -1636
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %18 = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.i.not.i14.i = icmp eq i32 %18, 0
  br i1 %tobool.i.not.i14.i, label %if.end.i.i, label %sw.epilog.i.mptcp_check_data_fin_ack.exit_crit_edge

sw.epilog.i.mptcp_check_data_fin_ack.exit_crit_edge: ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_data_fin_ack.exit

if.end.i.i:                                       ; preds = %sw.epilog.i
  %sk_state_change.i.i = getelementptr i8, ptr %work, i32 -808
  %19 = ptrtoint ptr %sk_state_change.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sk_state_change.i.i, align 4
  tail call void %20(ptr noundef %add.ptr) #17
  %sk_shutdown.i.i = getelementptr i8, ptr %work, i32 -850
  %21 = ptrtoint ptr %sk_shutdown.i.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %sk_shutdown.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %22)
  %cmp.i15.i = icmp eq i8 %22, 3
  br i1 %cmp.i15.i, label %if.end.i.i.if.end6.sink.split.i.i_crit_edge, label %lor.lhs.false.i.i

if.end.i.i.if.end6.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.sink.split.i.i

lor.lhs.false.i.i:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %23 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %24)
  %cmp3.i.i = icmp eq i8 %24, 7
  %spec.select.i.i = select i1 %cmp3.i.i, i32 6, i32 1
  br label %if.end6.sink.split.i.i

if.end6.sink.split.i.i:                           ; preds = %lor.lhs.false.i.i, %if.end.i.i.if.end6.sink.split.i.i_crit_edge
  %.sink.i.i = phi i32 [ 6, %if.end.i.i.if.end6.sink.split.i.i_crit_edge ], [ %spec.select.i.i, %lor.lhs.false.i.i ]
  tail call fastcc void @sk_wake_async(ptr noundef %add.ptr, i32 noundef %.sink.i.i) #17
  br label %mptcp_check_data_fin_ack.exit

mptcp_check_data_fin_ack.exit:                    ; preds = %if.end6.sink.split.i.i, %sw.epilog.i.mptcp_check_data_fin_ack.exit_crit_edge, %mptcp_pending_data_fin_ack.exit.i.mptcp_check_data_fin_ack.exit_crit_edge, %land.lhs.true.i.i.mptcp_check_data_fin_ack.exit_crit_edge, %if.end.mptcp_check_data_fin_ack.exit_crit_edge
  %rcv_fastclose.i = getelementptr i8, ptr %work, i32 -7
  %25 = ptrtoint ptr %rcv_fastclose.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load volatile i8, ptr %rcv_fastclose.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.not.i = icmp eq i8 %26, 0
  br i1 %tobool.not.i, label %mptcp_check_data_fin_ack.exit.mptcp_check_fastclose.exit_crit_edge, label %if.end.i, !prof !340

mptcp_check_data_fin_ack.exit.mptcp_check_fastclose.exit_crit_edge: ; preds = %mptcp_check_data_fin_ack.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_fastclose.exit

if.end.i:                                         ; preds = %mptcp_check_data_fin_ack.exit
  tail call void @mptcp_token_destroy(ptr noundef %add.ptr) #17
  %conn_list.i = getelementptr i8, ptr %work, i32 108
  %27 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %conn_list.i, align 8
  %cmp.not52.i = icmp eq ptr %28, %conn_list.i
  br i1 %cmp.not52.i, label %if.end.i.for.end.i_crit_edge, label %for.body.i.preheader

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.body.i.preheader:                             ; preds = %if.end.i
  %29 = tail call ptr @llvm.returnaddress(i32 0) #17
  %30 = ptrtoint ptr %29 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %unlock_sock_fast.exit.for.body.i_crit_edge, %for.body.i.preheader
  %subflow.053.i = phi ptr [ %tmp.054.i, %unlock_sock_fast.exit.for.body.i_crit_edge ], [ %28, %for.body.i.preheader ]
  %31 = ptrtoint ptr %subflow.053.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %tmp.054.i = load ptr, ptr %subflow.053.i, align 8
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.053.i, i32 0, i32 5
  %32 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %tcp_sock.i.i, align 8
  %dep_map.i70 = getelementptr inbounds %struct.sock, ptr %33, i32 0, i32 4, i32 3
  tail call void @lock_acquire(ptr noundef %dep_map.i70, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %30) #17
  %call.i = tail call zeroext i1 @__lock_sock_fast(ptr noundef %33) #17
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %33, i32 0, i32 4
  %34 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load volatile i8, ptr %skc_state.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %35)
  %cmp19.not.i = icmp eq i8 %35, 7
  br i1 %cmp19.not.i, label %for.body.i.if.end22.i_crit_edge, label %if.then21.i

for.body.i.if.end22.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end22.i

if.then21.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @tcp_send_active_reset(ptr noundef %33, i32 noundef 2592) #17
  tail call void @tcp_set_state(ptr noundef %33, i32 noundef 7) #17
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then21.i, %for.body.i.if.end22.i_crit_edge
  br i1 %call.i, label %if.then.i68, label %if.else.i

if.then.i68:                                      ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @release_sock(ptr noundef %33) #17
  br label %unlock_sock_fast.exit

if.else.i:                                        ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock.i = getelementptr inbounds %struct.sock, ptr %33, i32 0, i32 4
  tail call void @lock_release(ptr noundef %dep_map.i70, i32 noundef %30) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i) #17
  br label %unlock_sock_fast.exit

unlock_sock_fast.exit:                            ; preds = %if.else.i, %if.then.i68
  %cmp.not.i = icmp eq ptr %tmp.054.i, %conn_list.i
  br i1 %cmp.not.i, label %unlock_sock_fast.exit.for.end.i_crit_edge, label %unlock_sock_fast.exit.for.body.i_crit_edge

unlock_sock_fast.exit.for.body.i_crit_edge:       ; preds = %unlock_sock_fast.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

unlock_sock_fast.exit.for.end.i_crit_edge:        ; preds = %unlock_sock_fast.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end.i

for.end.i:                                        ; preds = %unlock_sock_fast.exit.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  tail call void @inet_sk_state_store(ptr noundef %add.ptr, i32 noundef 7) #17
  %sk_shutdown.i = getelementptr i8, ptr %work, i32 -850
  %36 = ptrtoint ptr %sk_shutdown.i to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 3, ptr %sk_shutdown.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !374
  tail call void @_set_bit(i32 noundef 5, ptr noundef %flags.i.i.i) #17
  %37 = getelementptr i8, ptr %work, i32 -1636
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %37, align 4
  %40 = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.i.not.i = icmp eq i32 %40, 0
  br i1 %tobool.i.not.i, label %if.end.i65, label %for.end.i.mptcp_check_fastclose.exit_crit_edge

for.end.i.mptcp_check_fastclose.exit_crit_edge:   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_fastclose.exit

if.end.i65:                                       ; preds = %for.end.i
  %sk_state_change.i = getelementptr i8, ptr %work, i32 -808
  %41 = ptrtoint ptr %sk_state_change.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sk_state_change.i, align 4
  tail call void %42(ptr noundef %add.ptr) #17
  %43 = ptrtoint ptr %sk_shutdown.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %sk_shutdown.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %44)
  %cmp.i64 = icmp eq i8 %44, 3
  br i1 %cmp.i64, label %if.end.i65.if.end6.sink.split.i_crit_edge, label %lor.lhs.false.i

if.end.i65.if.end6.sink.split.i_crit_edge:        ; preds = %if.end.i65
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.sink.split.i

lor.lhs.false.i:                                  ; preds = %if.end.i65
  call void @__sanitizer_cov_trace_pc() #19
  %45 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %46)
  %cmp3.i = icmp eq i8 %46, 7
  %spec.select.i = select i1 %cmp3.i, i32 6, i32 1
  br label %if.end6.sink.split.i

if.end6.sink.split.i:                             ; preds = %lor.lhs.false.i, %if.end.i65.if.end6.sink.split.i_crit_edge
  %.sink.i67 = phi i32 [ 6, %if.end.i65.if.end6.sink.split.i_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  tail call fastcc void @sk_wake_async(ptr noundef %add.ptr, i32 noundef %.sink.i67) #17
  br label %mptcp_check_fastclose.exit

mptcp_check_fastclose.exit:                       ; preds = %if.end6.sink.split.i, %for.end.i.mptcp_check_fastclose.exit_crit_edge, %mptcp_check_data_fin_ack.exit.mptcp_check_fastclose.exit_crit_edge
  tail call void @mptcp_pm_nl_work(ptr noundef %add.ptr) #17
  %call = tail call i32 @_test_and_clear_bit(i32 noundef 3, ptr noundef %flags.i.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool5.not = icmp eq i32 %call, 0
  br i1 %tobool5.not, label %mptcp_check_fastclose.exit.if.end7_crit_edge, label %if.then6

mptcp_check_fastclose.exit.if.end7_crit_edge:     ; preds = %mptcp_check_fastclose.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then6:                                         ; preds = %mptcp_check_fastclose.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @mptcp_check_for_eof(ptr noundef %add.ptr)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %mptcp_check_fastclose.exit.if.end7_crit_edge
  tail call fastcc void @__mptcp_check_send_data_fin(ptr noundef %add.ptr)
  tail call fastcc void @mptcp_check_data_fin(ptr noundef %add.ptr)
  %47 = getelementptr i8, ptr %work, i32 -1636
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %47, align 4
  %50 = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.i.not = icmp eq i32 %50, 0
  br i1 %tobool.i.not, label %if.end7.if.end19_crit_edge, label %land.lhs.true

if.end7.if.end19_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19

land.lhs.true:                                    ; preds = %if.end7
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %51 = load volatile i32, ptr @jiffies, align 128
  %probe_timestamp.i = getelementptr i8, ptr %work, i32 -248
  %52 = ptrtoint ptr %probe_timestamp.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %probe_timestamp.i, align 4
  %sub.i = sub i32 %51, %53
  call void @__sanitizer_cov_trace_const_cmp4(i32 5999, i32 %sub.i)
  %cmp.i = icmp sgt i32 %sub.i, 5999
  br i1 %cmp.i, label %land.lhs.true.if.then18_crit_edge, label %if.end.i50

land.lhs.true.if.then18_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then18

if.end.i50:                                       ; preds = %land.lhs.true
  %conn_list.i49 = getelementptr i8, ptr %work, i32 108
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i53.for.cond.i_crit_edge, %if.end.i50
  %subflow.0.in.i = phi ptr [ %conn_list.i49, %if.end.i50 ], [ %subflow.0.i, %for.body.i53.for.cond.i_crit_edge ]
  %54 = ptrtoint ptr %subflow.0.in.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %subflow.0.i = load ptr, ptr %subflow.0.in.i, align 8
  %cmp4.not.i = icmp eq ptr %subflow.0.i, %conn_list.i49
  br i1 %cmp4.not.i, label %for.cond.i.if.then18_crit_edge, label %for.body.i53

for.cond.i.if.then18_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then18

for.body.i53:                                     ; preds = %for.cond.i
  %tcp_sock.i.i51 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0.i, i32 0, i32 5
  %55 = ptrtoint ptr %tcp_sock.i.i51 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %tcp_sock.i.i51, align 8
  %skc_state.i.i52 = getelementptr inbounds %struct.sock_common, ptr %56, i32 0, i32 4
  %57 = ptrtoint ptr %skc_state.i.i52 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load volatile i8, ptr %skc_state.i.i52, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  %cmp7.not.i = icmp eq i8 %58, 7
  br i1 %cmp7.not.i, label %for.body.i53.for.cond.i_crit_edge, label %lor.lhs.false

for.body.i53.for.cond.i_crit_edge:                ; preds = %for.body.i53
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i

lor.lhs.false:                                    ; preds = %for.body.i53
  %59 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %60)
  %cmp16 = icmp eq i8 %60, 7
  br i1 %cmp16, label %lor.lhs.false.if.then18_crit_edge, label %lor.lhs.false.if.end19_crit_edge

lor.lhs.false.if.end19_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end19

lor.lhs.false.if.then18_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then18

if.then18:                                        ; preds = %lor.lhs.false.if.then18_crit_edge, %for.cond.i.if.then18_crit_edge, %land.lhs.true.if.then18_crit_edge
  tail call void @inet_sk_state_store(ptr noundef %add.ptr, i32 noundef 7) #17
  tail call fastcc void @__mptcp_destroy_sock(ptr noundef %add.ptr)
  br label %unlock

if.end19:                                         ; preds = %lor.lhs.false.if.end19_crit_edge, %if.end7.if.end19_crit_edge
  %call21 = tail call i32 @_test_and_clear_bit(i32 noundef 5, ptr noundef %flags.i.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end19.if.end24_crit_edge, label %if.then23

if.end19.if.end24_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24

if.then23:                                        ; preds = %if.end19
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 2346) #17
  %conn_list.i54 = getelementptr i8, ptr %work, i32 108
  %61 = ptrtoint ptr %conn_list.i54 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %conn_list.i54, align 8
  %cmp.not32.i = icmp eq ptr %62, %conn_list.i54
  br i1 %cmp.not32.i, label %if.then23.if.end24_crit_edge, label %if.then23.for.body.i57_crit_edge

if.then23.for.body.i57_crit_edge:                 ; preds = %if.then23
  br label %for.body.i57

if.then23.if.end24_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24

for.body.i57:                                     ; preds = %cleanup.i.for.body.i57_crit_edge, %if.then23.for.body.i57_crit_edge
  %subflow.033.i = phi ptr [ %tmp.034.i, %cleanup.i.for.body.i57_crit_edge ], [ %62, %if.then23.for.body.i57_crit_edge ]
  %63 = ptrtoint ptr %subflow.033.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %tmp.034.i = load ptr, ptr %subflow.033.i, align 8
  %tcp_sock.i.i55 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.033.i, i32 0, i32 5
  %64 = ptrtoint ptr %tcp_sock.i.i55 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %tcp_sock.i.i55, align 8
  %skc_state.i.i56 = getelementptr inbounds %struct.sock_common, ptr %65, i32 0, i32 4
  %66 = ptrtoint ptr %skc_state.i.i56 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load volatile i8, ptr %skc_state.i.i56, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %67)
  %cmp12.not.i = icmp eq i8 %67, 7
  br i1 %cmp12.not.i, label %if.end.i59, label %for.body.i57.cleanup.i_crit_edge

for.body.i57.cleanup.i_crit_edge:                 ; preds = %for.body.i57
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

if.end.i59:                                       ; preds = %for.body.i57
  %sk_receive_queue.i = getelementptr inbounds %struct.sock, ptr %65, i32 0, i32 8
  %68 = ptrtoint ptr %sk_receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile ptr, ptr %sk_receive_queue.i, align 4
  %cmp.i.i58 = icmp eq ptr %69, %sk_receive_queue.i
  br i1 %cmp.i.i58, label %if.end15.i, label %if.end.i59.cleanup.i_crit_edge

if.end.i59.cleanup.i_crit_edge:                   ; preds = %if.end.i59
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

if.end15.i:                                       ; preds = %if.end.i59
  %70 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %71)
  %cmp.i30.i = icmp eq i8 %71, 1
  br i1 %cmp.i30.i, label %if.then.i.i, label %if.end15.i.mptcp_close_ssk.exit.i_crit_edge

if.end15.i.mptcp_close_ssk.exit.i_crit_edge:      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_close_ssk.exit.i

if.then.i.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_event(i32 noundef 11, ptr noundef %add.ptr, ptr noundef %65, i32 noundef 3264) #17
  br label %mptcp_close_ssk.exit.i

mptcp_close_ssk.exit.i:                           ; preds = %if.then.i.i, %if.end15.i.mptcp_close_ssk.exit.i_crit_edge
  tail call void @mptcp_pm_subflow_check_next(ptr noundef %add.ptr, ptr noundef %65, ptr noundef %subflow.033.i) #17
  tail call fastcc void @__mptcp_close_ssk(ptr noundef %add.ptr, ptr noundef %65, ptr noundef %subflow.033.i, i32 noundef 2) #17
  br label %cleanup.i

cleanup.i:                                        ; preds = %mptcp_close_ssk.exit.i, %if.end.i59.cleanup.i_crit_edge, %for.body.i57.cleanup.i_crit_edge
  %cmp.not.i60 = icmp eq ptr %tmp.034.i, %conn_list.i54
  br i1 %cmp.not.i60, label %cleanup.i.if.end24_crit_edge, label %cleanup.i.for.body.i57_crit_edge

cleanup.i.for.body.i57_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i57

cleanup.i.if.end24_crit_edge:                     ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24

if.end24:                                         ; preds = %cleanup.i.if.end24_crit_edge, %if.then23.if.end24_crit_edge, %if.end19.if.end24_crit_edge
  %call26 = tail call i32 @_test_and_clear_bit(i32 noundef 2, ptr noundef %flags.i.i.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end24.unlock_crit_edge, label %if.then28

if.end24.unlock_crit_edge:                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

if.then28:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @__mptcp_retrans(ptr noundef %add.ptr)
  br label %unlock

unlock:                                           ; preds = %if.then28, %if.end24.unlock_crit_edge, %if.then18, %entry.unlock_crit_edge
  tail call void @release_sock(ptr noundef %add.ptr) #17
  %skc_refcnt.i = getelementptr i8, ptr %work, i32 -1616
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %72 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %72, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %unlock
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !340

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i:                                        ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !357
  tail call void @sk_free(ptr noundef %add.ptr) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mptcp_sync_mss(ptr nocapture noundef readnone %sk, i32 noundef %pmtu) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mptcp_is_checksum_enabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_pm_data_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_retransmit_timer(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -1284
  %sk_lock = getelementptr i8, ptr %t, i32 -1160
  tail call void @_raw_spin_lock(ptr noundef %sk_lock) #17
  %dep_map.i.i.i = getelementptr i8, ptr %t, i32 -1060
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %entry.sock_owned_by_user.exit_crit_edge

entry.sock_owned_by_user.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

lockdep_sock_is_held.exit.i.i:                    ; preds = %entry
  %dep_map2.i.i.i = getelementptr i8, ptr %t, i32 -1144
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_user.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, label %if.then.i.i, !prof !340

land.rhs3.i.i.sock_owned_by_user.exit_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_user.exit

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_user.exit

sock_owned_by_user.exit:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_user.exit_crit_edge, %land.rhs.i.i.sock_owned_by_user.exit_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_user.exit_crit_edge, %entry.sock_owned_by_user.exit_crit_edge
  %owned.i = getelementptr i8, ptr %t, i32 -1116
  %1 = ptrtoint ptr %owned.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %owned.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %if.then, label %if.else

if.then:                                          ; preds = %sock_owned_by_user.exit
  %flags = getelementptr i8, ptr %t, i32 408
  %call3 = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %flags) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.then4, label %if.then.if.end6_crit_edge

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.then4:                                         ; preds = %if.then
  %skc_state.i.i = getelementptr i8, ptr %t, i32 -1266
  %3 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %4)
  %cmp.not.i = icmp eq i8 %4, 7
  br i1 %cmp.not.i, label %if.then4.if.end6_crit_edge, label %land.lhs.true.i

if.then4.if.end6_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

land.lhs.true.i:                                  ; preds = %if.then4
  %work.i = getelementptr i8, ptr %t, i32 432
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %5 = load ptr, ptr @system_wq, align 4
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %5, ptr noundef %work.i) #17
  br i1 %call.i.i.i, label %if.then.i, label %land.lhs.true.i.if.end6_crit_edge

land.lhs.true.i.if.end6_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.then.i:                                        ; preds = %land.lhs.true.i
  %skc_refcnt.i.i = getelementptr i8, ptr %t, i32 -1184
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i, i32 1, i32 3, i32 1) #17
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i, ptr %skc_refcnt.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !341

if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %7 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %.not.i.i.i.i.i = icmp sgt i32 %7, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.if.end6_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.if.end6_crit_edge:              ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %if.end6

if.else:                                          ; preds = %sock_owned_by_user.exit
  call void @__sanitizer_cov_trace_pc() #19
  %cb_flags = getelementptr i8, ptr %t, i32 412
  %8 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cb_flags, align 4
  %or.i = or i32 %9, 16
  store i32 %or.i, ptr %cb_flags, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.if.end6_crit_edge, %land.lhs.true.i.if.end6_crit_edge, %if.then4.if.end6_crit_edge, %if.then.if.end6_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %sk_lock) #17
  %skc_refcnt.i = getelementptr i8, ptr %t, i32 -1184
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i.i15 = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i15)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i15, 1
  br i1 %cmp.i.i.i.i, label %if.then.i16, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i15)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i15, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !340

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i16:                                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !357
  tail call void @sk_free(ptr noundef %add.ptr) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i16, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_timeout_timer(ptr noundef %t) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -532
  %skc_state.i.i = getelementptr i8, ptr %t, i32 -514
  %0 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %1)
  %cmp.not.i = icmp eq i8 %1, 7
  br i1 %cmp.not.i, label %entry.mptcp_schedule_work.exit_crit_edge, label %land.lhs.true.i

entry.mptcp_schedule_work.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_schedule_work.exit

land.lhs.true.i:                                  ; preds = %entry
  %work.i = getelementptr i8, ptr %t, i32 1184
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %2 = load ptr, ptr @system_wq, align 4
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %2, ptr noundef %work.i) #17
  br i1 %call.i.i.i, label %if.then.i, label %land.lhs.true.i.mptcp_schedule_work.exit_crit_edge

land.lhs.true.i.mptcp_schedule_work.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_schedule_work.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %skc_refcnt.i.i = getelementptr i8, ptr %t, i32 -432
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i, i32 1, i32 3, i32 1) #17
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i, ptr %skc_refcnt.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !341

if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %4 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %4)
  %.not.i.i.i.i.i = icmp sgt i32 %4, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.mptcp_schedule_work.exit_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.mptcp_schedule_work.exit_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_schedule_work.exit

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %mptcp_schedule_work.exit

mptcp_schedule_work.exit:                         ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.mptcp_schedule_work.exit_crit_edge, %land.lhs.true.i.mptcp_schedule_work.exit_crit_edge, %entry.mptcp_schedule_work.exit_crit_edge
  %skc_refcnt.i = getelementptr i8, ptr %t, i32 -432
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i.i2 = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i2)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i2, 1
  br i1 %cmp.i.i.i.i, label %if.then.i3, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %mptcp_schedule_work.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i2)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i2, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !340

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i3:                                       ; preds = %mptcp_schedule_work.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !357
  tail call void @sk_free(ptr noundef %add.ptr) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i3, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_pm_nl_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mptcp_check_for_eof(ptr noundef %msk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 34
  %0 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %subflow.036 = load ptr, ptr %conn_list, align 8
  %cmp.not37 = icmp eq ptr %subflow.036, %conn_list
  br i1 %cmp.not37, label %entry.if.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %subflow.039 = phi ptr [ %subflow.0, %for.body.for.body_crit_edge ], [ %subflow.036, %entry.for.body_crit_edge ]
  %receivers.038 = phi i32 [ %add, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %rx_eof = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.039, i32 0, i32 1, i32 0, i32 13
  %1 = ptrtoint ptr %rx_eof to i32
  call void @__asan_load4_noabort(i32 %1)
  %bf.load = load i32, ptr %rx_eof, align 8
  %2 = lshr i32 %bf.load, 15
  %.lobit = and i32 %2, 1
  %3 = xor i32 %.lobit, 1
  %add = add i32 %3, %receivers.038
  %4 = ptrtoint ptr %subflow.039 to i32
  call void @__asan_load4_noabort(i32 %4)
  %subflow.0 = load ptr, ptr %subflow.039, align 8
  %cmp.not = icmp eq ptr %subflow.0, %conn_list
  br i1 %cmp.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %phi.cmp = icmp eq i32 %add, 0
  br i1 %phi.cmp, label %for.end.if.end_crit_edge, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.end:                                           ; preds = %for.end.if.end_crit_edge, %entry.if.end_crit_edge
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 66
  %5 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %sk_shutdown, align 2
  %7 = and i8 %6, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool9.not = icmp eq i8 %7, 0
  br i1 %tobool9.not, label %if.then10, label %if.end.if.end17_crit_edge

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.then10:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %or = or i8 %6, 1
  %8 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %or, ptr %sk_shutdown, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !375
  %sk_data_ready = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 77
  %9 = ptrtoint ptr %sk_data_ready to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %sk_data_ready, align 8
  tail call void %10(ptr noundef %msk) #17
  br label %if.end17

if.end17:                                         ; preds = %if.then10, %if.end.if.end17_crit_edge
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %msk, i32 0, i32 4
  %11 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load volatile i8, ptr %skc_state, align 2
  %13 = zext i8 %12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.140)
  switch i8 %12, label %if.end17.cleanup_crit_edge [
    i8 1, label %if.end17.sw.epilog_crit_edge
    i8 4, label %sw.bb19
    i8 5, label %sw.bb20
  ]

if.end17.sw.epilog_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb19:                                          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sw.bb20:                                          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb20, %sw.bb19, %if.end17.sw.epilog_crit_edge
  %.sink = phi i32 [ 7, %sw.bb20 ], [ 11, %sw.bb19 ], [ 8, %if.end17.sw.epilog_crit_edge ]
  tail call void @inet_sk_state_store(ptr noundef %msk, i32 noundef %.sink) #17
  %14 = getelementptr inbounds %struct.sock_common, ptr %msk, i32 0, i32 13
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %17 = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i.not.i = icmp eq i32 %17, 0
  br i1 %tobool.i.not.i, label %if.end.i, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i:                                         ; preds = %sw.epilog
  %sk_state_change.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 76
  %18 = ptrtoint ptr %sk_state_change.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sk_state_change.i, align 4
  tail call void %19(ptr noundef %msk) #17
  %20 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %sk_shutdown, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %21)
  %cmp.i = icmp eq i8 %21, 3
  br i1 %cmp.i, label %if.end.i.if.end6.sink.split.i_crit_edge, label %lor.lhs.false.i

if.end.i.if.end6.sink.split.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.sink.split.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %23)
  %cmp3.i = icmp eq i8 %23, 7
  %spec.select.i = select i1 %cmp3.i, i32 6, i32 1
  br label %if.end6.sink.split.i

if.end6.sink.split.i:                             ; preds = %lor.lhs.false.i, %if.end.i.if.end6.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 6, %if.end.i.if.end6.sink.split.i_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  tail call fastcc void @sk_wake_async(ptr noundef %msk, i32 noundef %.sink.i) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end6.sink.split.i, %sw.epilog.cleanup_crit_edge, %if.end17.cleanup_crit_edge, %for.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mptcp_check_data_fin(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %flags.i, align 4
  %2 = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %rcv_data_fin.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 24
  %3 = ptrtoint ptr %rcv_data_fin.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load volatile i8, ptr %rcv_data_fin.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %land.lhs.true.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %5 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load volatile i8, ptr %skc_state.i, align 2
  %conv.i = zext i8 %6 to i32
  %shl.i = shl nuw i32 1, %conv.i
  %and.i = and i32 %shl.i, 50
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %if.then.i

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then.i:                                        ; preds = %land.lhs.true.i
  %rcv_data_fin_seq7.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 7
  %7 = ptrtoint ptr %rcv_data_fin_seq7.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load volatile i64, ptr %rcv_data_fin_seq7.i, align 8
  %ack_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 5
  %9 = ptrtoint ptr %ack_seq.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %ack_seq.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %8)
  %cmp.i = icmp eq i64 %10, %8
  br i1 %cmp.i, label %do.body5, label %if.then.i.cleanup_crit_edge

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.body5:                                         ; preds = %if.then.i
  %11 = ptrtoint ptr %ack_seq.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %ack_seq.i, align 8
  %add = add i64 %12, 1
  store volatile i64 %add, ptr %ack_seq.i, align 8
  %13 = ptrtoint ptr %rcv_data_fin.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store volatile i8 0, ptr %rcv_data_fin.i, align 1
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %14 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %sk_shutdown, align 2
  %16 = or i8 %15, 1
  store i8 %16, ptr %sk_shutdown, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !376
  %17 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load volatile i8, ptr %skc_state.i, align 2
  %19 = zext i8 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.141)
  switch i8 %18, label %land.end [
    i8 1, label %sw.bb
    i8 4, label %sw.bb28
    i8 5, label %sw.bb29
  ]

sw.bb:                                            ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef 8) #17
  br label %sw.epilog

sw.bb28:                                          ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef 11) #17
  br label %sw.epilog

sw.bb29:                                          ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef 7) #17
  br label %sw.epilog

land.end:                                         ; preds = %do.body5
  %.b1 = load i1, ptr @mptcp_check_data_fin.__already_done, align 1
  br i1 %.b1, label %land.end.sw.epilog_crit_edge, label %if.then36, !prof !340

land.end.sw.epilog_crit_edge:                     ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sw.epilog

if.then36:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_check_data_fin.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 607, i32 noundef 9, ptr noundef null) #17
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then36, %land.end.sw.epilog_crit_edge, %sw.bb29, %sw.bb28, %sw.bb
  %conn_list.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %20 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %subflow.010.i = load ptr, ptr %conn_list.i, align 8
  %cmp.not11.i = icmp eq ptr %subflow.010.i, %conn_list.i
  br i1 %cmp.not11.i, label %sw.epilog.mptcp_send_ack.exit_crit_edge, label %sw.epilog.for.body.i_crit_edge

sw.epilog.for.body.i_crit_edge:                   ; preds = %sw.epilog
  br label %for.body.i

sw.epilog.mptcp_send_ack.exit_crit_edge:          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_send_ack.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %sw.epilog.for.body.i_crit_edge
  %subflow.012.i = phi ptr [ %subflow.0.i, %for.body.i.for.body.i_crit_edge ], [ %subflow.010.i, %sw.epilog.for.body.i_crit_edge ]
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.012.i, i32 0, i32 5
  %21 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %tcp_sock.i.i, align 8
  tail call void @mptcp_subflow_send_ack(ptr noundef %22) #17
  %23 = ptrtoint ptr %subflow.012.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %subflow.0.i = load ptr, ptr %subflow.012.i, align 8
  %cmp.not.i = icmp eq ptr %subflow.0.i, %conn_list.i
  br i1 %cmp.not.i, label %for.body.i.mptcp_send_ack.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.body.i.mptcp_send_ack.exit_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_send_ack.exit

mptcp_send_ack.exit:                              ; preds = %for.body.i.mptcp_send_ack.exit_crit_edge, %sw.epilog.mptcp_send_ack.exit_crit_edge
  %24 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  %27 = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i.not.i = icmp eq i32 %27, 0
  br i1 %tobool.i.not.i, label %if.end.i, label %mptcp_send_ack.exit.cleanup_crit_edge

mptcp_send_ack.exit.cleanup_crit_edge:            ; preds = %mptcp_send_ack.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i:                                         ; preds = %mptcp_send_ack.exit
  %sk_state_change.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 76
  %28 = ptrtoint ptr %sk_state_change.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sk_state_change.i, align 4
  tail call void %29(ptr noundef %sk) #17
  %30 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %sk_shutdown, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %31)
  %cmp.i2 = icmp eq i8 %31, 3
  br i1 %cmp.i2, label %if.end.i.if.end6.sink.split.i_crit_edge, label %lor.lhs.false.i

if.end.i.if.end6.sink.split.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.sink.split.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %32 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load volatile i8, ptr %skc_state.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %33)
  %cmp3.i = icmp eq i8 %33, 7
  %spec.select.i = select i1 %cmp3.i, i32 6, i32 1
  br label %if.end6.sink.split.i

if.end6.sink.split.i:                             ; preds = %lor.lhs.false.i, %if.end.i.if.end6.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 6, %if.end.i.if.end6.sink.split.i_crit_edge ], [ %spec.select.i, %lor.lhs.false.i ]
  tail call fastcc void @sk_wake_async(ptr noundef %sk, i32 noundef %.sink.i) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end6.sink.split.i, %mptcp_send_ack.exit.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_destroy_sock(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  %conn_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %conn_list) #17
  %0 = getelementptr inbounds %struct.list_head, ptr %conn_list, i32 0, i32 1
  %1 = ptrtoint ptr %conn_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %conn_list, ptr %conn_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %conn_list, ptr %0, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_destroy_sock.__UNIQUE_ID_ddebug759, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__mptcp_destroy_sock, %if.then)) #17
          to label %do.body5 [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_destroy_sock.__UNIQUE_ID_ddebug759, ptr noundef nonnull @.str.100, ptr noundef %sk) #17
  br label %do.body5

do.body5:                                         ; preds = %if.then, %entry
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 2726) #17
  %conn_list11 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %3 = ptrtoint ptr %conn_list11 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %conn_list11, align 4
  %cmp.i.not.i = icmp eq ptr %4, %conn_list11
  br i1 %cmp.i.not.i, label %do.body5.list_splice_init.exit_crit_edge, label %if.then.i

do.body5.list_splice_init.exit_crit_edge:         ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_splice_init.exit

if.then.i:                                        ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #19
  %5 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %conn_list, align 4
  %prev2.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34, i32 1
  %7 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %9 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %conn_list, ptr %prev3.i.i, align 4
  store ptr %4, ptr %conn_list, align 4
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %6, ptr %8, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %11 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev6.i.i, align 4
  %12 = ptrtoint ptr %conn_list11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %conn_list11, ptr %conn_list11, align 4
  store ptr %conn_list11, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i, %do.body5.list_splice_init.exit_crit_edge
  %icsk_retransmit_timer = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  call void @sk_stop_timer(ptr noundef %sk, ptr noundef %icsk_retransmit_timer) #17
  %sk_timer = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 32
  call void @sk_stop_timer(ptr noundef %sk, ptr noundef %sk_timer) #17
  %status = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 40, i32 14
  %13 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %status, align 2
  %subflow.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 38
  %14 = ptrtoint ptr %subflow.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %subflow.i, align 4
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %list_splice_init.exit.mptcp_dispose_initial_subflow.exit_crit_edge, label %if.then.i161

list_splice_init.exit.mptcp_dispose_initial_subflow.exit_crit_edge: ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_dispose_initial_subflow.exit

if.then.i161:                                     ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #19
  %vfs_inode.i.i = getelementptr inbounds %struct.socket_alloc, ptr %15, i32 0, i32 1
  call void @iput(ptr noundef %vfs_inode.i.i) #17
  %16 = ptrtoint ptr %subflow.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %subflow.i, align 4
  br label %mptcp_dispose_initial_subflow.exit

mptcp_dispose_initial_subflow.exit:               ; preds = %if.then.i161, %list_splice_init.exit.mptcp_dispose_initial_subflow.exit_crit_edge
  %17 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %conn_list, align 4
  %cmp.not165 = icmp eq ptr %18, %conn_list
  br i1 %cmp.not165, label %mptcp_dispose_initial_subflow.exit.for.end_crit_edge, label %mptcp_dispose_initial_subflow.exit.for.body_crit_edge

mptcp_dispose_initial_subflow.exit.for.body_crit_edge: ; preds = %mptcp_dispose_initial_subflow.exit
  br label %for.body

mptcp_dispose_initial_subflow.exit.for.end_crit_edge: ; preds = %mptcp_dispose_initial_subflow.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %mptcp_dispose_initial_subflow.exit.for.body_crit_edge
  %subflow.0166 = phi ptr [ %tmp.0, %for.body.for.body_crit_edge ], [ %18, %mptcp_dispose_initial_subflow.exit.for.body_crit_edge ]
  %19 = ptrtoint ptr %subflow.0166 to i32
  call void @__asan_load4_noabort(i32 %19)
  %tmp.0 = load ptr, ptr %subflow.0166, align 8
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0166, i32 0, i32 5
  %20 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %tcp_sock.i, align 8
  call fastcc void @__mptcp_close_ssk(ptr noundef %sk, ptr noundef %21, ptr noundef %subflow.0166, i32 noundef 0)
  %cmp.not = icmp eq ptr %tmp.0, %conn_list
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %mptcp_dispose_initial_subflow.exit.for.end_crit_edge
  %skc_prot = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %22 = ptrtoint ptr %skc_prot to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %skc_prot, align 8
  %destroy = getelementptr inbounds %struct.proto, ptr %23, i32 0, i32 7
  %24 = ptrtoint ptr %destroy to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %destroy, align 4
  call void %25(ptr noundef %sk) #17
  %rmem_fwd_alloc = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 8
  %26 = ptrtoint ptr %rmem_fwd_alloc to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rmem_fwd_alloc, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool28.not = icmp eq i32 %27, 0
  br i1 %tobool28.not, label %for.end.if.end70_crit_edge, label %land.rhs

for.end.if.end70_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end70

land.rhs:                                         ; preds = %for.end
  %.b160 = load i1, ptr @__mptcp_destroy_sock.__already_done, align 1
  br i1 %.b160, label %land.rhs.if.end70_crit_edge, label %if.then44, !prof !340

land.rhs.if.end70_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end70

if.then44:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__mptcp_destroy_sock.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2746, i32 noundef 9, ptr noundef null) #17
  br label %if.end70

if.end70:                                         ; preds = %if.then44, %land.rhs.if.end70_crit_edge, %for.end.if.end70_crit_edge
  %rmem_released = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 17
  %28 = ptrtoint ptr %rmem_released to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rmem_released, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool79.not = icmp eq i32 %29, 0
  br i1 %tobool79.not, label %if.end70.if.end124_crit_edge, label %land.rhs86

if.end70.if.end124_crit_edge:                     ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end124

land.rhs86:                                       ; preds = %if.end70
  %.b158159 = load i1, ptr @__mptcp_destroy_sock.__already_done.101, align 1
  br i1 %.b158159, label %land.rhs86.if.end124_crit_edge, label %if.then97, !prof !340

land.rhs86.if.end124_crit_edge:                   ; preds = %land.rhs86
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end124

if.then97:                                        ; preds = %land.rhs86
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @__mptcp_destroy_sock.__already_done.101, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2747, i32 noundef 9, ptr noundef null) #17
  br label %if.end124

if.end124:                                        ; preds = %if.then97, %land.rhs86.if.end124_crit_edge, %if.end70.if.end124_crit_edge
  call void @sk_stream_kill_queues(ptr noundef %sk) #17
  %sk_policy.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 18
  %30 = ptrtoint ptr %sk_policy.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sk_policy.i, align 4
  %cmp.not.i = icmp eq ptr %31, null
  br i1 %cmp.not.i, label %if.end124.do.end6.i_crit_edge, label %if.then.i162, !prof !340

if.end124.do.end6.i_crit_edge:                    ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end6.i

if.then.i162:                                     ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #19
  %call.i = call i32 @xfrm_policy_delete(ptr noundef nonnull %31, i32 noundef 3) #17
  %32 = ptrtoint ptr %sk_policy.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %sk_policy.i, align 4
  br label %do.end6.i

do.end6.i:                                        ; preds = %if.then.i162, %if.end124.do.end6.i_crit_edge
  %arrayidx9.i = getelementptr %struct.sock, ptr %sk, i32 0, i32 18, i32 1
  %33 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx9.i, align 4
  %cmp10.not.i = icmp eq ptr %34, null
  br i1 %cmp10.not.i, label %do.end6.i.xfrm_sk_free_policy.exit_crit_edge, label %if.then17.i, !prof !340

do.end6.i.xfrm_sk_free_policy.exit_crit_edge:     ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %xfrm_sk_free_policy.exit

if.then17.i:                                      ; preds = %do.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  %call18.i = call i32 @xfrm_policy_delete(ptr noundef nonnull %34, i32 noundef 4) #17
  %35 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %arrayidx9.i, align 4
  br label %xfrm_sk_free_policy.exit

xfrm_sk_free_policy.exit:                         ; preds = %if.then17.i, %do.end6.i.xfrm_sk_free_policy.exit_crit_edge
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %36 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %36, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i163, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %xfrm_sk_free_policy.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !340

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i163:                                     ; preds = %xfrm_sk_free_policy.exit
  call void @__sanitizer_cov_trace_pc() #19
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !357
  call void @sk_free(ptr noundef %sk) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i163, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %conn_list) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_retrans(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  %info = alloca %struct.mptcp_sendmsg_info, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %info) #17
  %0 = call ptr @memset(ptr %info, i32 0, i32 20)
  %sk_lock.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock.i) #17
  tail call fastcc void @__mptcp_clean_una_wakeup(ptr noundef %sk) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i) #17
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %entry.sock_owned_by_me.exit.i_crit_edge

entry.sock_owned_by_me.exit.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit.i

lockdep_sock_is_held.exit.i.i:                    ; preds = %entry
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_me.exit.i_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_me.exit.i_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit.i

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.sock_owned_by_me.exit.i_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_me.exit.i_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit.i

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_me.exit.i_crit_edge, label %if.then.i.i, !prof !340

land.rhs3.i.i.sock_owned_by_me.exit.i_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit.i

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_me.exit.i

sock_owned_by_me.exit.i:                          ; preds = %if.then.i.i, %land.rhs3.i.i.sock_owned_by_me.exit.i_crit_edge, %land.rhs.i.i.sock_owned_by_me.exit.i_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_me.exit.i_crit_edge, %entry.sock_owned_by_me.exit.i_crit_edge
  %flags.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %2 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags.i.i, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not.i = icmp eq i32 %4, 0
  br i1 %tobool.i.not.i, label %if.end.i, label %sock_owned_by_me.exit.i.mptcp_subflow_get_retrans.exit_crit_edge

sock_owned_by_me.exit.i.mptcp_subflow_get_retrans.exit_crit_edge: ; preds = %sock_owned_by_me.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_subflow_get_retrans.exit

if.end.i:                                         ; preds = %sock_owned_by_me.exit.i
  %conn_list.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %5 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %subflow.061.i = load ptr, ptr %conn_list.i, align 8
  %cmp.not62.i = icmp eq ptr %subflow.061.i, %conn_list.i
  br i1 %cmp.not62.i, label %if.end.i.if.end28.thread.i_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.if.end28.thread.i_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28.thread.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %subflow.066.i = phi ptr [ %subflow.0.i, %cleanup.i.for.body.i_crit_edge ], [ %subflow.061.i, %if.end.i.for.body.i_crit_edge ]
  %backup.065.i = phi ptr [ %backup.2.i, %cleanup.i.for.body.i_crit_edge ], [ null, %if.end.i.for.body.i_crit_edge ]
  %pick.064.i = phi ptr [ %pick.2.i, %cleanup.i.for.body.i_crit_edge ], [ null, %if.end.i.for.body.i_crit_edge ]
  %min_stale_count.063.i = phi i32 [ %min_stale_count.1.i, %cleanup.i.for.body.i_crit_edge ], [ 2147483647, %if.end.i.for.body.i_crit_edge ]
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.066.i, i32 0, i32 5
  %6 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tcp_sock.i.i, align 8
  %request_join.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.066.i, i32 0, i32 1, i32 0, i32 13
  %8 = ptrtoint ptr %request_join.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %bf.load.i.i = load i32, ptr %request_join.i.i, align 8
  %9 = and i32 %bf.load.i.i, 1140850688
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %9)
  %10 = icmp eq i32 %9, 1073741824
  br i1 %10, label %for.body.i.cleanup.i_crit_edge, label %__mptcp_subflow_active.exit.i

for.body.i.cleanup.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

__mptcp_subflow_active.exit.i:                    ; preds = %for.body.i
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %7, i32 0, i32 4
  %11 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i = zext i8 %12 to i32
  %shl.i.i = shl nuw i32 1, %conv.i.i
  %and.i.i = and i32 %shl.i.i, 258
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool5.i.not.i, label %__mptcp_subflow_active.exit.i.cleanup.i_crit_edge, label %if.end5.i

__mptcp_subflow_active.exit.i.cleanup.i_crit_edge: ; preds = %__mptcp_subflow_active.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup.i

if.end5.i:                                        ; preds = %__mptcp_subflow_active.exit.i
  %13 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 25
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %13, align 4
  %cmp.i.i.i = icmp eq ptr %15, null
  br i1 %cmp.i.i.i, label %tcp_rtx_and_write_queues_empty.exit.i, label %if.end5.i.if.then7.i_crit_edge

if.end5.i.if.then7.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then7.i

tcp_rtx_and_write_queues_empty.exit.i:            ; preds = %if.end5.i
  %write_seq.i.i.i = getelementptr inbounds %struct.tcp_sock, ptr %7, i32 0, i32 80
  %16 = ptrtoint ptr %write_seq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %write_seq.i.i.i, align 4
  %snd_nxt.i.i.i = getelementptr inbounds %struct.tcp_sock, ptr %7, i32 0, i32 10
  %18 = ptrtoint ptr %snd_nxt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %snd_nxt.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %19)
  %cmp.i3.i.i = icmp eq i32 %17, %19
  br i1 %cmp.i3.i.i, label %if.end11.i, label %tcp_rtx_and_write_queues_empty.exit.i.if.then7.i_crit_edge

tcp_rtx_and_write_queues_empty.exit.i.if.then7.i_crit_edge: ; preds = %tcp_rtx_and_write_queues_empty.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then7.i

if.then7.i:                                       ; preds = %tcp_rtx_and_write_queues_empty.exit.i.if.then7.i_crit_edge, %if.end5.i.if.then7.i_crit_edge
  tail call void @mptcp_pm_subflow_chk_stale(ptr noundef %sk, ptr noundef %7) #17
  %stale_count.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.066.i, i32 0, i32 1, i32 0, i32 23
  %20 = ptrtoint ptr %stale_count.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %stale_count.i, align 1
  %conv.i = zext i8 %21 to i32
  %22 = tail call i32 @llvm.smin.i32(i32 %min_stale_count.063.i, i32 %conv.i) #17
  br label %cleanup.i

if.end11.i:                                       ; preds = %tcp_rtx_and_write_queues_empty.exit.i
  %23 = and i32 %bf.load.i.i, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i = icmp eq i32 %23, 0
  br i1 %tobool.not.i, label %if.end17.i, label %if.then13.i

if.then13.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #19
  %tobool14.not.i = icmp eq ptr %backup.065.i, null
  %spec.select.i = select i1 %tobool14.not.i, ptr %7, ptr %backup.065.i
  br label %cleanup.i

if.end17.i:                                       ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #19
  %tobool18.not.i = icmp eq ptr %pick.064.i, null
  %spec.select57.i = select i1 %tobool18.not.i, ptr %7, ptr %pick.064.i
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end17.i, %if.then13.i, %if.then7.i, %__mptcp_subflow_active.exit.i.cleanup.i_crit_edge, %for.body.i.cleanup.i_crit_edge
  %min_stale_count.1.i = phi i32 [ %min_stale_count.063.i, %if.then13.i ], [ %min_stale_count.063.i, %if.end17.i ], [ %22, %if.then7.i ], [ %min_stale_count.063.i, %__mptcp_subflow_active.exit.i.cleanup.i_crit_edge ], [ %min_stale_count.063.i, %for.body.i.cleanup.i_crit_edge ]
  %pick.2.i = phi ptr [ %pick.064.i, %if.then13.i ], [ %spec.select57.i, %if.end17.i ], [ %pick.064.i, %if.then7.i ], [ %pick.064.i, %__mptcp_subflow_active.exit.i.cleanup.i_crit_edge ], [ %pick.064.i, %for.body.i.cleanup.i_crit_edge ]
  %backup.2.i = phi ptr [ %spec.select.i, %if.then13.i ], [ %backup.065.i, %if.end17.i ], [ %backup.065.i, %if.then7.i ], [ %backup.065.i, %__mptcp_subflow_active.exit.i.cleanup.i_crit_edge ], [ %backup.065.i, %for.body.i.cleanup.i_crit_edge ]
  %24 = ptrtoint ptr %subflow.066.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %subflow.0.i = load ptr, ptr %subflow.066.i, align 8
  %cmp.not.i = icmp eq ptr %subflow.0.i, %conn_list.i
  br i1 %cmp.not.i, label %for.end.i, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

for.end.i:                                        ; preds = %cleanup.i
  %tobool26.not.i = icmp eq ptr %pick.2.i, null
  br i1 %tobool26.not.i, label %if.end28.i, label %for.end.i.mptcp_subflow_get_retrans.exit_crit_edge

for.end.i.mptcp_subflow_get_retrans.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_subflow_get_retrans.exit

if.end28.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %min_stale_count.1.i)
  %cmp29.i = icmp sgt i32 %min_stale_count.1.i, 1
  br i1 %cmp29.i, label %if.end28.i.if.end28.thread.i_crit_edge, label %if.end28.i.mptcp_subflow_get_retrans.exit_crit_edge

if.end28.i.mptcp_subflow_get_retrans.exit_crit_edge: ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_subflow_get_retrans.exit

if.end28.i.if.end28.thread.i_crit_edge:           ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28.thread.i

if.end28.thread.i:                                ; preds = %if.end28.i.if.end28.thread.i_crit_edge, %if.end.i.if.end28.thread.i_crit_edge
  %backup.0.lcssa7478.i = phi ptr [ %backup.2.i, %if.end28.i.if.end28.thread.i_crit_edge ], [ null, %if.end.i.if.end28.thread.i_crit_edge ]
  br label %mptcp_subflow_get_retrans.exit

mptcp_subflow_get_retrans.exit:                   ; preds = %if.end28.thread.i, %if.end28.i.mptcp_subflow_get_retrans.exit_crit_edge, %for.end.i.mptcp_subflow_get_retrans.exit_crit_edge, %sock_owned_by_me.exit.i.mptcp_subflow_get_retrans.exit_crit_edge
  %retval.0.i = phi ptr [ null, %sock_owned_by_me.exit.i.mptcp_subflow_get_retrans.exit_crit_edge ], [ %pick.2.i, %for.end.i.mptcp_subflow_get_retrans.exit_crit_edge ], [ %backup.0.lcssa7478.i, %if.end28.thread.i ], [ null, %if.end28.i.mptcp_subflow_get_retrans.exit_crit_edge ]
  %snd_una.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 13
  %25 = ptrtoint ptr %snd_una.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %snd_una.i, align 8
  %snd_nxt.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %27 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load volatile i64, ptr %snd_nxt.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %26, i64 %28)
  %cmp.i = icmp eq i64 %26, %28
  br i1 %cmp.i, label %mptcp_subflow_get_retrans.exit.if.then_crit_edge, label %if.end.i93

mptcp_subflow_get_retrans.exit.if.then_crit_edge: ; preds = %mptcp_subflow_get_retrans.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

if.end.i93:                                       ; preds = %mptcp_subflow_get_retrans.exit
  %rtx_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35
  %29 = ptrtoint ptr %rtx_queue.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %rtx_queue.i, align 4
  %cmp6.not.i = icmp eq ptr %30, %rtx_queue.i
  %tobool.not = icmp eq ptr %30, null
  %or.cond = or i1 %cmp6.not.i, %tobool.not
  br i1 %or.cond, label %if.end.i93.if.then_crit_edge, label %if.end10

if.end.i93.if.then_crit_edge:                     ; preds = %if.end.i93
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then

if.then:                                          ; preds = %if.end.i93.if.then_crit_edge, %mptcp_subflow_get_retrans.exit.if.then_crit_edge
  %snd_data_fin_enable.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %31 = ptrtoint ptr %snd_data_fin_enable.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load volatile i8, ptr %snd_data_fin_enable.i, align 4, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.not.i96 = icmp eq i8 %32, 0
  br i1 %tobool.not.i96, label %if.then.if.end_crit_edge, label %mptcp_data_fin_enabled.exit

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

mptcp_data_fin_enabled.exit:                      ; preds = %if.then
  %write_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %33 = ptrtoint ptr %write_seq.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load volatile i64, ptr %write_seq.i, align 8
  %35 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load volatile i64, ptr %snd_nxt.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %34, i64 %36)
  %cmp.i98 = icmp eq i64 %34, %36
  br i1 %cmp.i98, label %if.then4, label %mptcp_data_fin_enabled.exit.if.end_crit_edge

mptcp_data_fin_enabled.exit.if.end_crit_edge:     ; preds = %mptcp_data_fin_enabled.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then4:                                         ; preds = %mptcp_data_fin_enabled.exit
  %icsk_retransmits = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 18
  %37 = ptrtoint ptr %icsk_retransmits to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %icsk_retransmits, align 1
  %inc = add i8 %38, 1
  store i8 %inc, ptr %icsk_retransmits, align 1
  %39 = tail call i8 @llvm.umin.i8(i8 %inc, i8 9) #17
  %cond.i = zext i8 %39 to i32
  %shl.i = shl nuw nsw i32 20, %cond.i
  %timer_ival.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 15
  %40 = ptrtoint ptr %timer_ival.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %shl.i, ptr %timer_ival.i, align 8
  %conn_list.i99 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %41 = ptrtoint ptr %conn_list.i99 to i32
  call void @__asan_load4_noabort(i32 %41)
  %subflow.010.i = load ptr, ptr %conn_list.i99, align 8
  %cmp.not11.i = icmp eq ptr %subflow.010.i, %conn_list.i99
  br i1 %cmp.not11.i, label %if.then4.reset_timer_crit_edge, label %if.then4.for.body.i103_crit_edge

if.then4.for.body.i103_crit_edge:                 ; preds = %if.then4
  br label %for.body.i103

if.then4.reset_timer_crit_edge:                   ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #19
  br label %reset_timer

for.body.i103:                                    ; preds = %for.body.i103.for.body.i103_crit_edge, %if.then4.for.body.i103_crit_edge
  %subflow.012.i = phi ptr [ %subflow.0.i101, %for.body.i103.for.body.i103_crit_edge ], [ %subflow.010.i, %if.then4.for.body.i103_crit_edge ]
  %tcp_sock.i.i100 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.012.i, i32 0, i32 5
  %42 = ptrtoint ptr %tcp_sock.i.i100 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %tcp_sock.i.i100, align 8
  tail call void @mptcp_subflow_send_ack(ptr noundef %43) #17
  %44 = ptrtoint ptr %subflow.012.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %subflow.0.i101 = load ptr, ptr %subflow.012.i, align 8
  %cmp.not.i102 = icmp eq ptr %subflow.0.i101, %conn_list.i99
  br i1 %cmp.not.i102, label %for.body.i103.reset_timer_crit_edge, label %for.body.i103.for.body.i103_crit_edge

for.body.i103.for.body.i103_crit_edge:            ; preds = %for.body.i103
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i103

for.body.i103.reset_timer_crit_edge:              ; preds = %for.body.i103
  call void @__sanitizer_cov_trace_pc() #19
  br label %reset_timer

if.end:                                           ; preds = %mptcp_data_fin_enabled.exit.if.end_crit_edge, %if.then.if.end_crit_edge
  %first_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %45 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile ptr, ptr %first_pending.i, align 8
  %tobool7.not = icmp eq ptr %46, null
  br i1 %tobool7.not, label %if.end.cleanup_crit_edge, label %if.end.reset_timer_crit_edge

if.end.reset_timer_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %reset_timer

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end10:                                         ; preds = %if.end.i93
  %tobool11.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool11.not, label %if.end10.reset_timer_crit_edge, label %if.end13

if.end10.reset_timer_crit_edge:                   ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %reset_timer

if.end13:                                         ; preds = %if.end10
  tail call void @lock_sock_nested(ptr noundef nonnull %retval.0.i, i32 noundef 0) #17
  %sent = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 3
  %47 = ptrtoint ptr %sent to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 0, ptr %sent, align 2
  %csum_enabled = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 28
  %48 = ptrtoint ptr %csum_enabled to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load volatile i8, ptr %csum_enabled, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool14.not = icmp eq i8 %49, 0
  %data_len = getelementptr inbounds %struct.mptcp_data_frag, ptr %30, i32 0, i32 2
  %already_sent = getelementptr inbounds %struct.mptcp_data_frag, ptr %30, i32 0, i32 5
  %cond.in.in = select i1 %tobool14.not, ptr %already_sent, ptr %data_len
  %50 = ptrtoint ptr %cond.in.in to i32
  call void @__asan_load2_noabort(i32 %50)
  %cond.in91 = load i16, ptr %cond.in.in, align 2
  %limit = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 2
  %51 = ptrtoint ptr %limit to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %cond.in91, ptr %limit, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %cond.in91)
  %cmp118.not = icmp eq i16 %cond.in91, 0
  br i1 %cmp118.not, label %if.end13.if.end52_crit_edge, label %while.body.lr.ph

if.end13.if.end52_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end52

while.body.lr.ph:                                 ; preds = %if.end13
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  br label %while.body

while.body:                                       ; preds = %MPTCP_INC_STATS.exit.while.body_crit_edge, %while.body.lr.ph
  %copied.0119 = phi i32 [ 0, %while.body.lr.ph ], [ %add, %MPTCP_INC_STATS.exit.while.body_crit_edge ]
  %call23 = call fastcc i32 @mptcp_sendmsg_frag(ptr noundef %sk, ptr noundef nonnull %retval.0.i, ptr noundef nonnull %30, ptr noundef nonnull %info)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call23)
  %cmp24 = icmp slt i32 %call23, 1
  br i1 %cmp24, label %while.body.while.end_crit_edge, label %if.end27

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

if.end27:                                         ; preds = %while.body
  %52 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %skc_net.i, align 4
  %mptcp_statistics.i = getelementptr inbounds %struct.net, ptr %53, i32 0, i32 30, i32 8
  %54 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %mptcp_statistics.i, align 4
  %tobool.not.i105 = icmp eq ptr %55, null
  br i1 %tobool.not.i105, label %if.end27.MPTCP_INC_STATS.exit_crit_edge, label %do.body3.i, !prof !341

if.end27.MPTCP_INC_STATS.exit_crit_edge:          ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #19
  br label %MPTCP_INC_STATS.exit

do.body3.i:                                       ; preds = %if.end27
  %56 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %57 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %mptcp_statistics.i, align 4
  %arrayidx.i = getelementptr [43 x i32], ptr %58, i32 0, i32 8
  %59 = ptrtoint ptr %arrayidx.i to i32
  %60 = call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i106 = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i106 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 3
  %62 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %cpu.i, align 4
  %arrayidx17.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %63
  %64 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx17.i, align 4
  %add.i = add i32 %65, %59
  %66 = inttoptr i32 %add.i to ptr
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %66, align 4
  %add18.i = add i32 %68, 1
  store i32 %add18.i, ptr %66, align 4
  %69 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i = and i32 %69, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool29.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool29.not.i, label %if.then38.i, label %do.body3.i.do.end40.i_crit_edge, !prof !341

do.body3.i.do.end40.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i

if.then38.i:                                      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @warn_bogus_irq_restore() #17
  br label %do.end40.i

do.end40.i:                                       ; preds = %if.then38.i, %do.body3.i.do.end40.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %56) #17, !srcloc !348
  br label %MPTCP_INC_STATS.exit

MPTCP_INC_STATS.exit:                             ; preds = %do.end40.i, %if.end27.MPTCP_INC_STATS.exit_crit_edge
  %add = add i32 %call23, %copied.0119
  %70 = ptrtoint ptr %sent to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %sent, align 2
  %72 = trunc i32 %call23 to i16
  %conv32 = add i16 %71, %72
  store i16 %conv32, ptr %sent, align 2
  %73 = ptrtoint ptr %limit to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %limit, align 4
  %cmp = icmp ult i16 %conv32, %74
  br i1 %cmp, label %MPTCP_INC_STATS.exit.while.body_crit_edge, label %MPTCP_INC_STATS.exit.while.end_crit_edge

MPTCP_INC_STATS.exit.while.end_crit_edge:         ; preds = %MPTCP_INC_STATS.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.end

MPTCP_INC_STATS.exit.while.body_crit_edge:        ; preds = %MPTCP_INC_STATS.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body

while.end:                                        ; preds = %MPTCP_INC_STATS.exit.while.end_crit_edge, %while.body.while.end_crit_edge
  %copied.0.lcssa = phi i32 [ %add, %MPTCP_INC_STATS.exit.while.end_crit_edge ], [ %copied.0119, %while.body.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %copied.0.lcssa)
  %tobool33.not = icmp eq i32 %copied.0.lcssa, 0
  br i1 %tobool33.not, label %while.end.if.end52_crit_edge, label %if.then34

while.end.if.end52_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end52

if.then34:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #19
  %75 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %already_sent, align 2
  %77 = ptrtoint ptr %sent to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %sent, align 2
  %79 = call i16 @llvm.umax.i16(i16 %76, i16 %78)
  %80 = ptrtoint ptr %already_sent to i32
  call void @__asan_store2_noabort(i32 %80)
  store i16 %79, ptr %already_sent, align 2
  %81 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %info, align 4
  %nonagle = getelementptr inbounds %struct.tcp_sock, ptr %retval.0.i, i32 0, i32 37
  %83 = ptrtoint ptr %nonagle to i32
  call void @__asan_load2_noabort(i32 %83)
  %bf.load = load i16, ptr %nonagle, align 4
  %84 = lshr i16 %bf.load, 4
  %85 = and i16 %84, 15
  %conv51 = zext i16 %85 to i32
  %size_goal = getelementptr inbounds %struct.mptcp_sendmsg_info, ptr %info, i32 0, i32 1
  %86 = ptrtoint ptr %size_goal to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %size_goal, align 4
  call void @tcp_push(ptr noundef nonnull %retval.0.i, i32 noundef 0, i32 noundef %82, i32 noundef %conv51, i32 noundef %87) #17
  br label %if.end52

if.end52:                                         ; preds = %if.then34, %while.end.if.end52_crit_edge, %if.end13.if.end52_crit_edge
  call void @release_sock(ptr noundef nonnull %retval.0.i) #17
  br label %reset_timer

reset_timer:                                      ; preds = %if.end52, %if.end10.reset_timer_crit_edge, %if.end.reset_timer_crit_edge, %for.body.i103.reset_timer_crit_edge, %if.then4.reset_timer_crit_edge
  %first_pending.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %88 = ptrtoint ptr %first_pending.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile ptr, ptr %first_pending.i.i, align 8
  %tobool.not.i107 = icmp eq ptr %89, null
  br i1 %tobool.not.i107, label %reset_timer.mptcp_check_and_set_pending.exit_crit_edge, label %if.then.i

reset_timer.mptcp_check_and_set_pending.exit_crit_edge: ; preds = %reset_timer
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_and_set_pending.exit

if.then.i:                                        ; preds = %reset_timer
  call void @__sanitizer_cov_trace_pc() #19
  %push_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 20
  %90 = ptrtoint ptr %push_pending.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %push_pending.i, align 4
  %or.i = or i32 %91, 2
  store i32 %or.i, ptr %push_pending.i, align 4
  br label %mptcp_check_and_set_pending.exit

mptcp_check_and_set_pending.exit:                 ; preds = %if.then.i, %reset_timer.mptcp_check_and_set_pending.exit_crit_edge
  %pprev.i.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4, i32 0, i32 1
  %92 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load volatile ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.i.i109.not = icmp eq ptr %93, null
  br i1 %tobool.not.i.i.i109.not, label %if.then54, label %mptcp_check_and_set_pending.exit.cleanup_crit_edge

mptcp_check_and_set_pending.exit.cleanup_crit_edge: ; preds = %mptcp_check_and_set_pending.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then54:                                        ; preds = %mptcp_check_and_set_pending.exit
  %skc_state.i.i110 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %94 = ptrtoint ptr %skc_state.i.i110 to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load volatile i8, ptr %skc_state.i.i110, align 2
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %95)
  %cmp.i111 = icmp eq i8 %95, 7
  br i1 %cmp.i111, label %if.then54.cleanup_crit_edge, label %if.end.i114, !prof !341

if.then54.cleanup_crit_edge:                      ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end.i114:                                      ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #19
  %timer_ival.i112 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 15
  %96 = ptrtoint ptr %timer_ival.i112 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %timer_ival.i112, align 8
  %icsk_retransmit_timer.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %98 = load volatile i32, ptr @jiffies, align 128
  %add.i113 = add i32 %98, %97
  call void @sk_reset_timer(ptr noundef %sk, ptr noundef %icsk_retransmit_timer.i, i32 noundef %add.i113) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end.i114, %if.then54.cleanup_crit_edge, %mptcp_check_and_set_pending.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %info) #17
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_send_active_reset(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_set_state(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_stop_timer(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_stream_kill_queues(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xfrm_policy_delete(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_pm_subflow_chk_stale(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @dfrag_clear(ptr noundef %sk, ptr noundef %dfrag) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %data_len = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 2
  %0 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %data_len, align 8
  %conv = zext i16 %1 to i32
  %overhead = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 4
  %2 = ptrtoint ptr %overhead to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %overhead, align 4
  %conv1 = zext i16 %3 to i32
  %add = add nuw nsw i32 %conv1, %conv
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %dfrag) #17
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del.exit_crit_edge

entry.list_del.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_del.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %dfrag, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %dfrag to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dfrag, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %entry.list_del.exit_crit_edge
  %10 = ptrtoint ptr %dfrag to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 256 to ptr), ptr %dfrag, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %dfrag, i32 0, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %skc_prot.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %12 = ptrtoint ptr %skc_prot.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %skc_prot.i.i.i, align 8
  %memory_allocated.i.i.i = getelementptr inbounds %struct.proto, ptr %13, i32 0, i32 32
  %14 = ptrtoint ptr %memory_allocated.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %memory_allocated.i.i.i, align 4
  %tobool.i.not.i.i = icmp eq ptr %15, null
  br i1 %tobool.i.not.i.i, label %list_del.exit.dfrag_uncharge.exit_crit_edge, label %if.end.i.i5

list_del.exit.dfrag_uncharge.exit_crit_edge:      ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %dfrag_uncharge.exit

if.end.i.i5:                                      ; preds = %list_del.exit
  %sk_forward_alloc.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %16 = ptrtoint ptr %sk_forward_alloc.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sk_forward_alloc.i.i, align 8
  %add.i.i = add i32 %17, %add
  store i32 %add.i.i, ptr %sk_forward_alloc.i.i, align 8
  %sk_reserved_mem.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %18 = ptrtoint ptr %sk_reserved_mem.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sk_reserved_mem.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i.i.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i5.sk_unused_reserved_mem.exit.i.i_crit_edge, label %if.end.i.i.i, !prof !340

if.end.i.i5.sk_unused_reserved_mem.exit.i.i_crit_edge: ; preds = %if.end.i.i5
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end.i.i5
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %20 = ptrtoint ptr %sk_wmem_queued.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sk_wmem_queued.i.i.i, align 8
  %sk_backlog.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i.i, i32 noundef 4) #17
  %22 = ptrtoint ptr %sk_backlog.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %sk_backlog.i.i.i, align 4
  %24 = add i32 %21, %23
  %sub5.i.i.i = sub i32 %19, %24
  %25 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i.i

sk_unused_reserved_mem.exit.i.i:                  ; preds = %if.end.i.i.i, %if.end.i.i5.sk_unused_reserved_mem.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %25, %if.end.i.i.i ], [ 0, %if.end.i.i5.sk_unused_reserved_mem.exit.i.i_crit_edge ]
  %sub.i.i = sub i32 %add.i.i, %retval.0.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097151, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 2097151
  br i1 %cmp.i.i, label %if.then4.i.i, label %sk_unused_reserved_mem.exit.i.i.dfrag_uncharge.exit_crit_edge, !prof !341

sk_unused_reserved_mem.exit.i.i.dfrag_uncharge.exit_crit_edge: ; preds = %sk_unused_reserved_mem.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %dfrag_uncharge.exit

if.then4.i.i:                                     ; preds = %sk_unused_reserved_mem.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__sk_mem_reclaim(ptr noundef %sk, i32 noundef 1048576) #17
  br label %dfrag_uncharge.exit

dfrag_uncharge.exit:                              ; preds = %if.then4.i.i, %sk_unused_reserved_mem.exit.i.i.dfrag_uncharge.exit_crit_edge, %list_del.exit.dfrag_uncharge.exit_crit_edge
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %26 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %add.i3.i = sub i32 %27, %add
  store volatile i32 %add.i3.i, ptr %sk_wmem_queued.i.i, align 8
  %page = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag, i32 0, i32 6
  %28 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %page, align 8
  %30 = getelementptr inbounds %struct.page, ptr %29, i32 0, i32 1
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %30, align 4
  %and.i.i = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i7, label %if.then.i.i, !prof !340

if.then.i.i:                                      ; preds = %dfrag_uncharge.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i6 = add i32 %32, -1
  br label %_compound_head.exit.i

if.end.i.i7:                                      ; preds = %dfrag_uncharge.exit
  call void @__sanitizer_cov_trace_pc() #19
  %33 = ptrtoint ptr %29 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i7, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i6, %if.then.i.i ], [ %33, %if.end.i.i7 ]
  %34 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %34, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #17
  %35 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp.i.i.i.i = icmp eq i32 %36, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !341

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @dump_page(ptr noundef %34, ptr noundef nonnull @.str.103) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #17, !srcloc !377
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !378
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #17
  %37 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #17, !srcloc !379
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %37, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !380
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@dfrag_clear, %if.then.i.i.i.i.i)) #17
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !350

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %34, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #17
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__put_page(ptr noundef %34) #17
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_schedule_prep(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__napi_schedule(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__usecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_sockopt_sync_locked(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_close(ptr noundef %sk, i32 noundef %timeout) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @lock_sock_nested(ptr noundef %sk, i32 noundef 0) #17
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %0 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 3, ptr %sk_shutdown, align 2
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %1 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load volatile i8, ptr %skc_state, align 2
  %conv = zext i8 %2 to i32
  %shl = shl nuw i32 1, %conv
  %and = and i32 %shl, 1152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef 7) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load volatile i8, ptr %skc_state, align 2
  %idxprom.i = zext i8 %4 to i32
  %arrayidx.i = getelementptr [16 x i8], ptr @new_state, i32 0, i32 %idxprom.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %6 to i32
  %and.i = and i32 %conv.i, 15
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef %and.i) #17
  %and1.i = and i32 %conv.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool1.not = icmp eq i32 %and1.i, 0
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %if.then2

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end3

if.then2:                                         ; preds = %if.end
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_wr_shutdown.__UNIQUE_ID_ddebug756, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_close, %if.then.i)) #17
          to label %__mptcp_wr_shutdown.exit [label %if.then.i], !srcloc !350

if.then.i:                                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #19
  %snd_data_fin_enable.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %7 = ptrtoint ptr %snd_data_fin_enable.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %snd_data_fin_enable.i, align 4, !range !344
  %9 = zext i8 %8 to i32
  %10 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %sk_shutdown, align 2
  %conv5.i = zext i8 %11 to i32
  %12 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %skc_state, align 2
  %conv6.i = zext i8 %13 to i32
  %first_pending.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %14 = ptrtoint ptr %first_pending.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %first_pending.i.i, align 8
  %tobool8.i = icmp ne ptr %15, null
  %lnot.ext12.i = zext i1 %tobool8.i to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_wr_shutdown.__UNIQUE_ID_ddebug756, ptr noundef nonnull @.str.112, ptr noundef %sk, i32 noundef %9, i32 noundef %conv5.i, i32 noundef %conv6.i, i32 noundef %lnot.ext12.i) #17
  br label %__mptcp_wr_shutdown.exit

__mptcp_wr_shutdown.exit:                         ; preds = %if.then.i, %if.then2
  %write_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %16 = ptrtoint ptr %write_seq.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %write_seq.i, align 8
  %add.i = add i64 %17, 1
  store volatile i64 %add.i, ptr %write_seq.i, align 8
  %snd_data_fin_enable28.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %18 = ptrtoint ptr %snd_data_fin_enable28.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store volatile i8 1, ptr %snd_data_fin_enable28.i, align 4
  tail call fastcc void @__mptcp_check_send_data_fin(ptr noundef %sk) #17
  br label %if.end3

if.end3:                                          ; preds = %__mptcp_wr_shutdown.exit, %if.end.if.end3_crit_edge
  tail call void @sk_stream_wait_close(ptr noundef %sk, i32 noundef %timeout) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.then
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %19 = load volatile i32, ptr @jiffies, align 128
  %probe_timestamp = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 25, i32 3
  %20 = ptrtoint ptr %probe_timestamp to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %probe_timestamp, align 4
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %21 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %21)
  %subflow.085 = load ptr, ptr %conn_list, align 8
  %cmp.not86 = icmp eq ptr %subflow.085, %conn_list
  br i1 %cmp.not86, label %cleanup.for.end_crit_edge, label %for.body.lr.ph

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %cleanup
  %22 = tail call ptr @llvm.returnaddress(i32 0) #17
  %23 = ptrtoint ptr %22 to i32
  br label %for.body

for.body:                                         ; preds = %unlock_sock_fast.exit.for.body_crit_edge, %for.body.lr.ph
  %subflow.087 = phi ptr [ %subflow.085, %for.body.lr.ph ], [ %subflow.0, %unlock_sock_fast.exit.for.body_crit_edge ]
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.087, i32 0, i32 5
  %24 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %tcp_sock.i, align 8
  %dep_map.i = getelementptr inbounds %struct.sock, ptr %25, i32 0, i32 4, i32 3
  tail call void @lock_acquire(ptr noundef %dep_map.i, i32 noundef 1, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %23) #17
  %call.i = tail call zeroext i1 @__lock_sock_fast(ptr noundef %25) #17
  %sk_callback_lock.i = getelementptr inbounds %struct.sock, ptr %25, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i) #17
  %26 = getelementptr inbounds %struct.sock_common, ptr %25, i32 0, i32 13
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %26, align 4
  %or.i.i.i = or i32 %28, 1
  store i32 %or.i.i.i, ptr %26, align 4
  %sk_socket.i.i = getelementptr inbounds %struct.sock, ptr %25, i32 0, i32 71
  %29 = ptrtoint ptr %sk_socket.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %sk_socket.i.i, align 8
  %30 = getelementptr inbounds %struct.sock, ptr %25, i32 0, i32 17
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %30, align 8
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i) #17
  br i1 %call.i, label %if.then.i71, label %if.else.i

if.then.i71:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @release_sock(ptr noundef %25) #17
  br label %unlock_sock_fast.exit

if.else.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock.i = getelementptr inbounds %struct.sock, ptr %25, i32 0, i32 4
  tail call void @lock_release(ptr noundef %dep_map.i, i32 noundef %23) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i) #17
  br label %unlock_sock_fast.exit

unlock_sock_fast.exit:                            ; preds = %if.else.i, %if.then.i71
  %32 = ptrtoint ptr %subflow.087 to i32
  call void @__asan_load4_noabort(i32 %32)
  %subflow.0 = load ptr, ptr %subflow.087, align 8
  %cmp.not = icmp eq ptr %subflow.0, %conn_list
  br i1 %cmp.not, label %unlock_sock_fast.exit.for.end_crit_edge, label %unlock_sock_fast.exit.for.body_crit_edge

unlock_sock_fast.exit.for.body_crit_edge:         ; preds = %unlock_sock_fast.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

unlock_sock_fast.exit.for.end_crit_edge:          ; preds = %unlock_sock_fast.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %unlock_sock_fast.exit.for.end_crit_edge, %cleanup.for.end_crit_edge
  %sk_callback_lock.i73 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i73) #17
  %33 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 13
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %or.i.i.i74 = or i32 %35, 1
  store i32 %or.i.i.i74, ptr %33, align 4
  %sk_socket.i.i75 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %36 = ptrtoint ptr %sk_socket.i.i75 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %sk_socket.i.i75, align 8
  %37 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 17
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %37, align 8
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i73) #17
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %39 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %39, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %for.end.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !341

for.end.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %for.end
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %40 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %40)
  %.not.i.i.i.i = icmp sgt i32 %40, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.sock_hold.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.sock_hold.exit_crit_edge:         ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_hold.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %for.end.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %for.end.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #17
  br label %sock_hold.exit

sock_hold.exit:                                   ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.sock_hold.exit_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_close.__UNIQUE_ID_ddebug760, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_close, %if.then24)) #17
          to label %do.end [label %if.then24], !srcloc !350

if.then24:                                        ; preds = %sock_hold.exit
  call void @__sanitizer_cov_trace_pc() #19
  %41 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load volatile i8, ptr %skc_state, align 2
  %conv27 = zext i8 %42 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_close.__UNIQUE_ID_ddebug760, ptr noundef nonnull @.str.109, ptr noundef %sk, i32 noundef %conv27) #17
  br label %do.end

do.end:                                           ; preds = %if.then24, %sock_hold.exit
  %token = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 16
  %43 = ptrtoint ptr %token to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %token, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool30.not = icmp eq i32 %44, 0
  br i1 %tobool30.not, label %do.end.if.end33_crit_edge, label %if.then31

do.end.if.end33_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.then31:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_event(i32 noundef 3, ptr noundef %sk, ptr noundef null, i32 noundef 3264) #17
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %do.end.if.end33_crit_edge
  %45 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %46)
  %cmp37 = icmp eq i8 %46, 7
  br i1 %cmp37, label %if.then39, label %if.else

if.then39:                                        ; preds = %if.end33
  tail call fastcc void @__mptcp_destroy_sock(ptr noundef %sk)
  tail call void @release_sock(ptr noundef %sk) #17
  %work.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 30
  %call1.i = tail call zeroext i1 @cancel_work_sync(ptr noundef %work.i) #17
  br i1 %call1.i, label %if.then.i77, label %if.then39.if.end43_crit_edge

if.then39.if.end43_crit_edge:                     ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

if.then.i77:                                      ; preds = %if.then39
  %call.i.i.i.i.i.i76 = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %47 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %47, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i.i, label %if.then3.i.i.i.i, label %if.then.i77.if.end43_crit_edge, !prof !341

if.then.i77.if.end43_crit_edge:                   ; preds = %if.then.i77
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

if.then3.i.i.i.i:                                 ; preds = %if.then.i77
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  br label %if.end43

if.else:                                          ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #19
  %sk_timer = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %48 = load volatile i32, ptr @jiffies, align 128
  %add = add i32 %48, 6000
  tail call void @sk_reset_timer(ptr noundef %sk, ptr noundef %sk_timer, i32 noundef %add) #17
  tail call void @release_sock(ptr noundef %sk) #17
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then3.i.i.i.i, %if.then.i77.if.end43_crit_edge, %if.then39.if.end43_crit_edge
  %call.i.i.i.i.i.i79 = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !355
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %49 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !356
  %asmresult.i.i.i.i.i.i.i80 = extractvalue { i32, i32, i32 } %49, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i80)
  %cmp.i.i.i.i81 = icmp eq i32 %asmresult.i.i.i.i.i.i.i80, 1
  br i1 %cmp.i.i.i.i81, label %if.then.i83, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end43
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i80)
  %.not.i.i.i.i82 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i80, 0
  br i1 %.not.i.i.i.i82, label %if.end5.i.i.i.i.sock_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !340

if.end5.i.i.i.i.sock_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef 3) #17
  br label %sock_put.exit

if.then.i83:                                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !357
  tail call void @sk_free(ptr noundef %sk) #17
  br label %sock_put.exit

sock_put.exit:                                    ; preds = %if.then.i83, %if.then10.i.i.i.i, %if.end5.i.i.i.i.sock_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_disconnect(ptr noundef %sk, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef 7) #17
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %0 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %subflow.060 = load ptr, ptr %conn_list, align 8
  %cmp.not61 = icmp eq ptr %subflow.060, %conn_list
  br i1 %cmp.not61, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %subflow.062 = phi ptr [ %subflow.0, %for.body.for.body_crit_edge ], [ %subflow.060, %entry.for.body_crit_edge ]
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.062, i32 0, i32 5
  %1 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %tcp_sock.i, align 8
  tail call fastcc void @__mptcp_close_ssk(ptr noundef %sk, ptr noundef %2, ptr noundef %subflow.062, i32 noundef 4)
  %3 = ptrtoint ptr %subflow.062 to i32
  call void @__asan_load4_noabort(i32 %3)
  %subflow.0 = load ptr, ptr %subflow.062, align 8
  %cmp.not = icmp eq ptr %subflow.0, %conn_list
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %icsk_retransmit_timer = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 4
  tail call void @sk_stop_timer(ptr noundef %sk, ptr noundef %icsk_retransmit_timer) #17
  %sk_timer = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 32
  tail call void @sk_stop_timer(ptr noundef %sk, ptr noundef %sk_timer) #17
  %token = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 16
  %4 = ptrtoint ptr %token to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %token, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %for.end.if.end_crit_edge, label %if.then

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

if.then:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_event(i32 noundef 3, ptr noundef %sk, ptr noundef null, i32 noundef 3264) #17
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end.if.end_crit_edge
  tail call void @mptcp_destroy_common(ptr noundef %sk)
  %last_snd = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 9
  %6 = ptrtoint ptr %last_snd to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %last_snd, align 4
  %flags13 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %7 = ptrtoint ptr %flags13 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 0, ptr %flags13, align 4
  %cb_flags = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 19
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %8 = call ptr @memset(ptr %cb_flags, i32 0, i32 15)
  %9 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %skc_net.i, align 4
  %call24 = tail call i32 @mptcp_is_checksum_enabled(ptr noundef %10) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25 = icmp ne i32 %call24, 0
  %csum_enabled = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 28
  %frombool = zext i1 %tobool25 to i8
  %11 = ptrtoint ptr %csum_enabled to i32
  call void @__asan_store1_noabort(i32 %11)
  store volatile i8 %frombool, ptr %csum_enabled, align 1
  tail call void @mptcp_pm_data_reset(ptr noundef %sk) #17
  tail call void @tcp_assign_congestion_control(ptr noundef %sk) #17
  %ca_name.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 43
  %icsk_ca_ops.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 10
  %12 = ptrtoint ptr %icsk_ca_ops.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %icsk_ca_ops.i, align 4
  %name.i = getelementptr inbounds %struct.tcp_congestion_ops, ptr %13, i32 0, i32 11
  %call3.i = tail call ptr @strcpy(ptr noundef %ca_name.i, ptr noundef %name.i) #24
  tail call void @tcp_cleanup_congestion_control(ptr noundef %sk) #17
  %14 = ptrtoint ptr %icsk_ca_ops.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %icsk_ca_ops.i, align 4
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %15 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %sk_shutdown, align 2
  tail call void @sk_error_report(ptr noundef %sk) #17
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @mptcp_accept(ptr noundef %sk, i32 noundef %flags, ptr noundef %err, i1 noundef zeroext %kern) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %subflow.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 38
  %0 = ptrtoint ptr %subflow.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %subflow.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.land.rhs_crit_edge, label %do.end.i

entry.land.rhs_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs

do.end.i:                                         ; preds = %entry
  %can_ack.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 22
  %2 = ptrtoint ptr %can_ack.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load volatile i8, ptr %can_ack.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not.i = icmp eq i8 %3, 0
  br i1 %tobool1.not.i, label %do.body42, label %do.end.i.land.rhs_crit_edge

do.end.i.land.rhs_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs

land.rhs:                                         ; preds = %do.end.i.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %.b177 = load i1, ptr @mptcp_accept.__already_done, align 1
  br i1 %.b177, label %land.rhs.if.then40_crit_edge, label %if.then, !prof !340

land.rhs.if.then40_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then40

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_accept.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2955, i32 noundef 9, ptr noundef null) #17
  br label %if.then40

if.then40:                                        ; preds = %if.then, %land.rhs.if.then40_crit_edge
  %4 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -22, ptr %err, align 4
  br label %cleanup152

do.body42:                                        ; preds = %do.end.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_accept.__UNIQUE_ID_ddebug770, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_accept, %if.then53)) #17
          to label %do.end58 [label %if.then53], !srcloc !350

if.then53:                                        ; preds = %do.body42
  call void @__sanitizer_cov_trace_pc() #19
  %sk54 = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 4
  %5 = ptrtoint ptr %sk54 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sk54, align 16
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %6, i32 0, i32 13
  %7 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %icsk_ulp_data.i, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_accept.__UNIQUE_ID_ddebug770, ptr noundef nonnull @.str.115, ptr noundef %sk, ptr noundef %8) #17
  br label %do.end58

do.end58:                                         ; preds = %if.then53, %do.body42
  %sk59 = getelementptr inbounds %struct.socket, ptr %1, i32 0, i32 4
  %9 = ptrtoint ptr %sk59 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %sk59, align 16
  %call61 = tail call ptr @inet_csk_accept(ptr noundef %10, i32 noundef %flags, ptr noundef %err, i1 noundef zeroext %kern) #17
  %tobool62.not = icmp eq ptr %call61, null
  br i1 %tobool62.not, label %do.end58.cleanup152_crit_edge, label %do.body65

do.end58.cleanup152_crit_edge:                    ; preds = %do.end58
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup152

do.body65:                                        ; preds = %do.end58
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_accept.__UNIQUE_ID_ddebug771, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_accept, %if.then77)) #17
          to label %do.end81 [label %if.then77], !srcloc !350

if.then77:                                        ; preds = %do.body65
  call void @__sanitizer_cov_trace_pc() #19
  %is_mptcp.i = getelementptr inbounds %struct.tcp_sock, ptr %call61, i32 0, i32 115
  %11 = ptrtoint ptr %is_mptcp.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %is_mptcp.i, align 4, !range !344
  %13 = zext i8 %12 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_accept.__UNIQUE_ID_ddebug771, ptr noundef nonnull @.str.117, ptr noundef %sk, i32 noundef %13) #17
  br label %do.end81

do.end81:                                         ; preds = %if.then77, %do.body65
  %is_mptcp.i184 = getelementptr inbounds %struct.tcp_sock, ptr %call61, i32 0, i32 115
  %14 = ptrtoint ptr %is_mptcp.i184 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %is_mptcp.i184, align 4, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.i185.not = icmp eq i8 %15, 0
  br i1 %tobool.i185.not, label %if.else, label %if.then83

if.then83:                                        ; preds = %do.end81
  %icsk_ulp_data.i186 = getelementptr inbounds %struct.inet_connection_sock, ptr %call61, i32 0, i32 13
  %16 = ptrtoint ptr %icsk_ulp_data.i186 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %icsk_ulp_data.i186, align 8
  %conn = getelementptr inbounds %struct.mptcp_subflow_context, ptr %17, i32 0, i32 6
  %18 = ptrtoint ptr %conn to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %conn, align 4
  %tobool86.not = icmp eq ptr %19, null
  br i1 %tobool86.not, label %land.rhs96, label %if.end145

land.rhs96:                                       ; preds = %if.then83
  %.b175176 = load i1, ptr @mptcp_accept.__already_done.118, align 1
  br i1 %.b175176, label %land.rhs96.if.then143_crit_edge, label %if.then107, !prof !340

land.rhs96.if.then143_crit_edge:                  ; preds = %land.rhs96
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then143

if.then107:                                       ; preds = %land.rhs96
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_accept.__already_done.118, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2976, i32 noundef 9, ptr noundef null) #17
  br label %if.then143

if.then143:                                       ; preds = %if.then107, %land.rhs96.if.then143_crit_edge
  %20 = ptrtoint ptr %is_mptcp.i184 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %is_mptcp.i184, align 4
  br label %out

if.end145:                                        ; preds = %if.then83
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %19, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %21 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %21, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end145.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !341

if.end145.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end145
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %22 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %22)
  %.not.i.i.i.i = icmp sgt i32 %22, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.sock_hold.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.sock_hold.exit_crit_edge:         ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_hold.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end145.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end145.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #17
  br label %sock_hold.exit

sock_hold.exit:                                   ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.sock_hold.exit_crit_edge
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %23 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %skc_net.i, align 4
  %mptcp_statistics.i = getelementptr inbounds %struct.net, ptr %24, i32 0, i32 30, i32 8
  %25 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mptcp_statistics.i, align 4
  %tobool.not.i187 = icmp eq ptr %26, null
  br i1 %tobool.not.i187, label %sock_hold.exit.out_crit_edge, label %do.body3.i, !prof !341

sock_hold.exit.out_crit_edge:                     ; preds = %sock_hold.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

do.body3.i:                                       ; preds = %sock_hold.exit
  %27 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %28 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %mptcp_statistics.i, align 4
  %arrayidx.i = getelementptr [43 x i32], ptr %29, i32 0, i32 4
  %30 = ptrtoint ptr %arrayidx.i to i32
  %31 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 3
  %33 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cpu.i, align 4
  %arrayidx17.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %34
  %35 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx17.i, align 4
  %add.i = add i32 %36, %30
  %37 = inttoptr i32 %add.i to ptr
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %37, align 4
  %add18.i = add i32 %39, 1
  store i32 %add18.i, ptr %37, align 4
  %40 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i = and i32 %40, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool29.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool29.not.i, label %if.then38.i, label %do.body3.i.do.end40.i_crit_edge, !prof !341

do.body3.i.do.end40.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i

if.then38.i:                                      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i

do.end40.i:                                       ; preds = %if.then38.i, %do.body3.i.do.end40.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %27) #17, !srcloc !348
  br label %out

if.else:                                          ; preds = %do.end81
  %skc_net.i188 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %41 = ptrtoint ptr %skc_net.i188 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %skc_net.i188, align 4
  %mptcp_statistics.i189 = getelementptr inbounds %struct.net, ptr %42, i32 0, i32 30, i32 8
  %43 = ptrtoint ptr %mptcp_statistics.i189 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %mptcp_statistics.i189, align 4
  %tobool.not.i190 = icmp eq ptr %44, null
  br i1 %tobool.not.i190, label %if.else.out_crit_edge, label %do.body3.i199, !prof !341

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

do.body3.i199:                                    ; preds = %if.else
  %45 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %46 = ptrtoint ptr %mptcp_statistics.i189 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %mptcp_statistics.i189, align 4
  %arrayidx.i191 = getelementptr [43 x i32], ptr %47, i32 0, i32 5
  %48 = ptrtoint ptr %arrayidx.i191 to i32
  %49 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i192 = and i32 %49, -16384
  %50 = inttoptr i32 %and.i.i192 to ptr
  %cpu.i193 = getelementptr inbounds %struct.thread_info, ptr %50, i32 0, i32 3
  %51 = ptrtoint ptr %cpu.i193 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cpu.i193, align 4
  %arrayidx17.i194 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %52
  %53 = ptrtoint ptr %arrayidx17.i194 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx17.i194, align 4
  %add.i195 = add i32 %54, %48
  %55 = inttoptr i32 %add.i195 to ptr
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %55, align 4
  %add18.i196 = add i32 %57, 1
  store i32 %add18.i196, ptr %55, align 4
  %58 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i197 = and i32 %58, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i197)
  %tobool29.not.i198 = icmp eq i32 %and.i.i.i197, 0
  br i1 %tobool29.not.i198, label %if.then38.i200, label %do.body3.i199.do.end40.i201_crit_edge, !prof !341

do.body3.i199.do.end40.i201_crit_edge:            ; preds = %do.body3.i199
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i201

if.then38.i200:                                   ; preds = %do.body3.i199
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i201

do.end40.i201:                                    ; preds = %if.then38.i200, %do.body3.i199.do.end40.i201_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %45) #17, !srcloc !348
  br label %out

out:                                              ; preds = %do.end40.i201, %if.else.out_crit_edge, %do.end40.i, %sock_hold.exit.out_crit_edge, %if.then143
  %newsk.1 = phi ptr [ %call61, %if.then143 ], [ %19, %sock_hold.exit.out_crit_edge ], [ %19, %do.end40.i ], [ %call61, %if.else.out_crit_edge ], [ %call61, %do.end40.i201 ]
  %sk_kern_sock = getelementptr inbounds %struct.sock, ptr %newsk.1, i32 0, i32 43
  %59 = ptrtoint ptr %sk_kern_sock to i32
  call void @__asan_load1_noabort(i32 %59)
  %bf.load = load i8, ptr %sk_kern_sock, align 8
  %bf.shl = select i1 %kern, i8 64, i8 0
  %bf.clear = and i8 %bf.load, -65
  %bf.set = or i8 %bf.clear, %bf.shl
  store i8 %bf.set, ptr %sk_kern_sock, align 8
  br label %cleanup152

cleanup152:                                       ; preds = %out, %do.end58.cleanup152_crit_edge, %if.then40
  %retval.0 = phi ptr [ null, %if.then40 ], [ %newsk.1, %out ], [ null, %do.end58.cleanup152_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_ioctl(ptr noundef %sk, i32 noundef %cmd, i32 noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.142)
  switch i32 %cmd, label %entry.cleanup_crit_edge [
    i32 21531, label %sw.bb
    i32 21521, label %sw.bb4
    i32 35147, label %sw.bb7
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %1 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %2)
  %cmp = icmp eq i8 %2, 10
  br i1 %cmp, label %sw.bb.cleanup_crit_edge, label %if.end

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %sw.bb
  tail call void @lock_sock_nested(ptr noundef %sk, i32 noundef 0) #17
  %call2 = tail call fastcc zeroext i1 @__mptcp_move_skbs(ptr noundef %sk)
  %receive_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 33
  %3 = ptrtoint ptr %receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %receive_queue.i, align 4
  %cmp.i.i = icmp eq ptr %4, %receive_queue.i
  %tobool.not18.i = icmp eq ptr %4, null
  %tobool.not.i = or i1 %cmp.i.i, %tobool.not18.i
  br i1 %tobool.not.i, label %if.end3.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %ack_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 5
  %5 = ptrtoint ptr %ack_seq.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %ack_seq.i, align 8
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %4, i32 0, i32 3
  %7 = ptrtoint ptr %cb.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %cb.i, align 8
  %sub.i = sub i64 %6, %8
  call void @__sanitizer_cov_trace_const_cmp8(i64 2147483646, i64 %sub.i)
  %cmp.i = icmp ugt i64 %sub.i, 2147483646
  %conv.i = trunc i64 %sub.i to i32
  %retval.0.i = select i1 %cmp.i, i32 2147483647, i32 %conv.i
  br label %mptcp_inq_hint.exit

if.end3.i:                                        ; preds = %if.end
  %9 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %10)
  %cmp5.i = icmp eq i8 %10, 7
  br i1 %cmp5.i, label %if.end3.i.mptcp_inq_hint.exit_crit_edge, label %lor.lhs.false.i

if.end3.i.mptcp_inq_hint.exit_crit_edge:          ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_inq_hint.exit

lor.lhs.false.i:                                  ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_shutdown.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %11 = ptrtoint ptr %sk_shutdown.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %sk_shutdown.i, align 2
  %13 = and i8 %12, 1
  %14 = zext i8 %13 to i32
  br label %mptcp_inq_hint.exit

mptcp_inq_hint.exit:                              ; preds = %lor.lhs.false.i, %if.end3.i.mptcp_inq_hint.exit_crit_edge, %if.then.i
  %retval.1.i = phi i32 [ %retval.0.i, %if.then.i ], [ 1, %if.end3.i.mptcp_inq_hint.exit_crit_edge ], [ %14, %lor.lhs.false.i ]
  tail call void @release_sock(ptr noundef %sk) #17
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %dep_map.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %15 = tail call ptr @llvm.returnaddress(i32 0) #17
  %16 = ptrtoint ptr %15 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %16) #17
  %call.i = tail call zeroext i1 @__lock_sock_fast(ptr noundef %sk) #17
  %snd_una = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 13
  %17 = ptrtoint ptr %snd_una to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load volatile i64, ptr %snd_una, align 8
  %skc_state.i33 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %19 = ptrtoint ptr %skc_state.i33 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load volatile i8, ptr %skc_state.i33, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %20)
  %cmp.i34 = icmp eq i8 %20, 10
  br i1 %cmp.i34, label %sw.bb4.mptcp_ioctl_outq.exit_crit_edge, label %if.end.i

sw.bb4.mptcp_ioctl_outq.exit_crit_edge:           ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_ioctl_outq.exit

if.end.i:                                         ; preds = %sw.bb4
  %21 = ptrtoint ptr %skc_state.i33 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load volatile i8, ptr %skc_state.i33, align 2
  %conv4.i = zext i8 %22 to i32
  %shl.i = shl nuw i32 1, %conv4.i
  %and.i35 = and i32 %shl.i, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i35)
  %tobool.not.i36 = icmp eq i32 %and.i35, 0
  br i1 %tobool.not.i36, label %if.end6.i, label %if.end.i.mptcp_ioctl_outq.exit_crit_edge

if.end.i.mptcp_ioctl_outq.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_ioctl_outq.exit

if.end6.i:                                        ; preds = %if.end.i
  %write_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %23 = ptrtoint ptr %write_seq.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %write_seq.i, align 8
  %sub.i37 = sub i64 %24, %18
  %flags.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %25 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %flags.i.i, align 4
  %27 = and i32 %26, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i.not.i = icmp eq i32 %27, 0
  br i1 %tobool.i.not.i, label %if.end6.i.if.end24.i_crit_edge, label %land.lhs.true.i

if.end6.i.if.end24.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i

land.lhs.true.i:                                  ; preds = %if.end6.i
  %first.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 39
  %28 = ptrtoint ptr %first.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %first.i, align 8
  %tobool8.not.i = icmp eq ptr %29, null
  br i1 %tobool8.not.i, label %land.lhs.true.i.if.end24.i_crit_edge, label %if.then9.i

land.lhs.true.i.if.end24.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i

if.then9.i:                                       ; preds = %land.lhs.true.i
  %skc_state14.i = getelementptr inbounds %struct.sock_common, ptr %29, i32 0, i32 4
  %30 = ptrtoint ptr %skc_state14.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load volatile i8, ptr %skc_state14.i, align 2
  %conv15.i = zext i8 %31 to i32
  %shl16.i = shl nuw i32 1, %conv15.i
  %and17.i = and i32 %shl16.i, 140
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  br i1 %tobool18.not.i, label %do.end.i, label %if.then9.i.if.end24.i_crit_edge

if.then9.i.if.end24.i_crit_edge:                  ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i

do.end.i:                                         ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #19
  %write_seq20.i = getelementptr inbounds %struct.tcp_sock, ptr %29, i32 0, i32 80
  %32 = ptrtoint ptr %write_seq20.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %write_seq20.i, align 4
  %snd_una.i = getelementptr inbounds %struct.tcp_sock, ptr %29, i32 0, i32 16
  %34 = ptrtoint ptr %snd_una.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %snd_una.i, align 4
  %sub21.i = sub i32 %33, %35
  %conv22.i = zext i32 %sub21.i to i64
  %add.i = add i64 %sub.i37, %conv22.i
  br label %if.end24.i

if.end24.i:                                       ; preds = %do.end.i, %if.then9.i.if.end24.i_crit_edge, %land.lhs.true.i.if.end24.i_crit_edge, %if.end6.i.if.end24.i_crit_edge
  %delta.1.i = phi i64 [ %sub.i37, %land.lhs.true.i.if.end24.i_crit_edge ], [ %sub.i37, %if.end6.i.if.end24.i_crit_edge ], [ %sub.i37, %if.then9.i.if.end24.i_crit_edge ], [ %add.i, %do.end.i ]
  %36 = tail call i64 @llvm.umin.i64(i64 %delta.1.i, i64 2147483647) #17
  %conv29.i = trunc i64 %36 to i32
  br label %mptcp_ioctl_outq.exit

mptcp_ioctl_outq.exit:                            ; preds = %if.end24.i, %if.end.i.mptcp_ioctl_outq.exit_crit_edge, %sw.bb4.mptcp_ioctl_outq.exit_crit_edge
  %retval.0.i38 = phi i32 [ %conv29.i, %if.end24.i ], [ -22, %sw.bb4.mptcp_ioctl_outq.exit_crit_edge ], [ 0, %if.end.i.mptcp_ioctl_outq.exit_crit_edge ]
  br i1 %call.i, label %if.then.i39, label %if.else.i

if.then.i39:                                      ; preds = %mptcp_ioctl_outq.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @release_sock(ptr noundef %sk) #17
  br label %sw.epilog

if.else.i:                                        ; preds = %mptcp_ioctl_outq.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @lock_release(ptr noundef %dep_map.i, i32 noundef %16) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i) #17
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %dep_map.i42 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %37 = tail call ptr @llvm.returnaddress(i32 0) #17
  %38 = ptrtoint ptr %37 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i42, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %38) #17
  %call.i43 = tail call zeroext i1 @__lock_sock_fast(ptr noundef %sk) #17
  %snd_nxt = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 4
  %39 = ptrtoint ptr %snd_nxt to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %snd_nxt, align 8
  %skc_state.i44 = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %41 = ptrtoint ptr %skc_state.i44 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load volatile i8, ptr %skc_state.i44, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %42)
  %cmp.i45 = icmp eq i8 %42, 10
  br i1 %cmp.i45, label %sw.bb7.mptcp_ioctl_outq.exit75_crit_edge, label %if.end.i50

sw.bb7.mptcp_ioctl_outq.exit75_crit_edge:         ; preds = %sw.bb7
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_ioctl_outq.exit75

if.end.i50:                                       ; preds = %sw.bb7
  %43 = ptrtoint ptr %skc_state.i44 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load volatile i8, ptr %skc_state.i44, align 2
  %conv4.i46 = zext i8 %44 to i32
  %shl.i47 = shl nuw i32 1, %conv4.i46
  %and.i48 = and i32 %shl.i47, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i48)
  %tobool.not.i49 = icmp eq i32 %and.i48, 0
  br i1 %tobool.not.i49, label %if.end6.i55, label %if.end.i50.mptcp_ioctl_outq.exit75_crit_edge

if.end.i50.mptcp_ioctl_outq.exit75_crit_edge:     ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_ioctl_outq.exit75

if.end6.i55:                                      ; preds = %if.end.i50
  %write_seq.i51 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %45 = ptrtoint ptr %write_seq.i51 to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %write_seq.i51, align 8
  %sub.i52 = sub i64 %46, %40
  %flags.i.i53 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %47 = ptrtoint ptr %flags.i.i53 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %flags.i.i53, align 4
  %49 = and i32 %48, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.i.not.i54 = icmp eq i32 %49, 0
  br i1 %tobool.i.not.i54, label %if.end6.i55.if.end24.i73_crit_edge, label %land.lhs.true.i58

if.end6.i55.if.end24.i73_crit_edge:               ; preds = %if.end6.i55
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i73

land.lhs.true.i58:                                ; preds = %if.end6.i55
  %first.i56 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 39
  %50 = ptrtoint ptr %first.i56 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %first.i56, align 8
  %tobool8.not.i57 = icmp eq ptr %51, null
  br i1 %tobool8.not.i57, label %land.lhs.true.i58.if.end24.i73_crit_edge, label %if.then9.i64

land.lhs.true.i58.if.end24.i73_crit_edge:         ; preds = %land.lhs.true.i58
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i73

if.then9.i64:                                     ; preds = %land.lhs.true.i58
  %skc_state14.i59 = getelementptr inbounds %struct.sock_common, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %skc_state14.i59 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load volatile i8, ptr %skc_state14.i59, align 2
  %conv15.i60 = zext i8 %53 to i32
  %shl16.i61 = shl nuw i32 1, %conv15.i60
  %and17.i62 = and i32 %shl16.i61, 140
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i62)
  %tobool18.not.i63 = icmp eq i32 %and17.i62, 0
  br i1 %tobool18.not.i63, label %do.end.i70, label %if.then9.i64.if.end24.i73_crit_edge

if.then9.i64.if.end24.i73_crit_edge:              ; preds = %if.then9.i64
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end24.i73

do.end.i70:                                       ; preds = %if.then9.i64
  call void @__sanitizer_cov_trace_pc() #19
  %write_seq20.i65 = getelementptr inbounds %struct.tcp_sock, ptr %51, i32 0, i32 80
  %54 = ptrtoint ptr %write_seq20.i65 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %write_seq20.i65, align 4
  %snd_una.i66 = getelementptr inbounds %struct.tcp_sock, ptr %51, i32 0, i32 16
  %56 = ptrtoint ptr %snd_una.i66 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %snd_una.i66, align 4
  %sub21.i67 = sub i32 %55, %57
  %conv22.i68 = zext i32 %sub21.i67 to i64
  %add.i69 = add i64 %sub.i52, %conv22.i68
  br label %if.end24.i73

if.end24.i73:                                     ; preds = %do.end.i70, %if.then9.i64.if.end24.i73_crit_edge, %land.lhs.true.i58.if.end24.i73_crit_edge, %if.end6.i55.if.end24.i73_crit_edge
  %delta.1.i71 = phi i64 [ %sub.i52, %land.lhs.true.i58.if.end24.i73_crit_edge ], [ %sub.i52, %if.end6.i55.if.end24.i73_crit_edge ], [ %sub.i52, %if.then9.i64.if.end24.i73_crit_edge ], [ %add.i69, %do.end.i70 ]
  %58 = tail call i64 @llvm.umin.i64(i64 %delta.1.i71, i64 2147483647) #17
  %conv29.i72 = trunc i64 %58 to i32
  br label %mptcp_ioctl_outq.exit75

mptcp_ioctl_outq.exit75:                          ; preds = %if.end24.i73, %if.end.i50.mptcp_ioctl_outq.exit75_crit_edge, %sw.bb7.mptcp_ioctl_outq.exit75_crit_edge
  %retval.0.i74 = phi i32 [ %conv29.i72, %if.end24.i73 ], [ -22, %sw.bb7.mptcp_ioctl_outq.exit75_crit_edge ], [ 0, %if.end.i50.mptcp_ioctl_outq.exit75_crit_edge ]
  br i1 %call.i43, label %if.then.i76, label %if.else.i79

if.then.i76:                                      ; preds = %mptcp_ioctl_outq.exit75
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @release_sock(ptr noundef %sk) #17
  br label %sw.epilog

if.else.i79:                                      ; preds = %mptcp_ioctl_outq.exit75
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock.i77 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  tail call void @lock_release(ptr noundef %dep_map.i42, i32 noundef %38) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i77) #17
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.else.i79, %if.then.i76, %if.else.i, %if.then.i39, %mptcp_inq_hint.exit
  %answ.0 = phi i32 [ %retval.1.i, %mptcp_inq_hint.exit ], [ %retval.0.i38, %if.then.i39 ], [ %retval.0.i38, %if.else.i ], [ %retval.0.i74, %if.then.i76 ], [ %retval.0.i74, %if.else.i79 ]
  %59 = inttoptr i32 %arg to ptr
  tail call void @__might_fault(ptr noundef nonnull @.str.2, i32 noundef 3347) #17
  %60 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i.i = and i32 %60, -16384
  %61 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %61, i32 0, i32 4
  %62 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #11, !srcloc !381
  %and.i = and i32 %62, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #17, !srcloc !382
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !383
  %63 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %59, i32 %answ.0, i32 -1226833921) #17, !srcloc !384
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %62) #17, !srcloc !382
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #17, !srcloc !383
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %63, %sw.epilog ], [ -22, %sw.bb.cleanup_crit_edge ], [ -515, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_init_sock(ptr noundef %sk) #0 align 64 {
entry:
  %ssock.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %0 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_net.i, align 4
  tail call fastcc void @__mptcp_init_sock(ptr noundef %sk)
  %call2 = tail call i32 @mptcp_is_enabled(ptr noundef %1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %entry.cleanup_crit_edge, label %if.end5

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end5:                                          ; preds = %entry
  %mptcp_statistics = getelementptr inbounds %struct.net, ptr %1, i32 0, i32 30, i32 8
  %2 = ptrtoint ptr %mptcp_statistics to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mptcp_statistics, align 4
  %tobool6.not = icmp eq ptr %3, null
  br i1 %tobool6.not, label %land.lhs.true, label %if.end5.if.end12_crit_edge, !prof !341

if.end5.if.end12_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

land.lhs.true:                                    ; preds = %if.end5
  %call10 = tail call zeroext i1 @mptcp_mib_alloc(ptr noundef %1) #17
  br i1 %call10, label %land.lhs.true.if.end12_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end12

if.end12:                                         ; preds = %land.lhs.true.if.end12_crit_edge, %if.end5.if.end12_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ssock.i) #17
  %4 = ptrtoint ptr %ssock.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %ssock.i, align 4, !annotation !343
  %call.i = call i32 @mptcp_subflow_create_socket(ptr noundef %sk, ptr noundef nonnull %ssock.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %__mptcp_socket_create.exit

if.end.i:                                         ; preds = %if.end12
  %5 = ptrtoint ptr %ssock.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ssock.i, align 4
  %sk1.i = getelementptr inbounds %struct.socket, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %sk1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %sk1.i, align 16
  %first.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 39
  %9 = ptrtoint ptr %first.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %first.i, align 8
  %subflow2.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 38
  %10 = ptrtoint ptr %subflow2.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %6, ptr %subflow2.i, align 4
  %11 = load ptr, ptr %sk1.i, align 16
  %icsk_ulp_data.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %11, i32 0, i32 13
  %12 = ptrtoint ptr %icsk_ulp_data.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %icsk_ulp_data.i.i, align 8
  %conn_list.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %14 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %conn_list.i, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %13, ptr noundef %conn_list.i, ptr noundef %15) #17
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.i.list_add.exit.i_crit_edge

if.end.i.list_add.exit.i_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %15, ptr %13, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %18 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %conn_list.i, ptr %prev3.i.i.i, align 4
  %19 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %13, ptr %conn_list.i, align 4
  br label %list_add.exit.i

list_add.exit.i:                                  ; preds = %if.end.i.i.i, %if.end.i.list_add.exit.i_crit_edge
  %20 = ptrtoint ptr %ssock.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ssock.i, align 4
  %sk5.i = getelementptr inbounds %struct.socket, ptr %21, i32 0, i32 4
  %22 = ptrtoint ptr %sk5.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sk5.i, align 16
  %skc_refcnt.i.i = getelementptr inbounds %struct.sock_common, ptr %23, i32 0, i32 19
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i.i, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %skc_refcnt.i.i, i32 1, i32 3, i32 1) #17
  %24 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i.i, ptr %skc_refcnt.i.i, i32 1, ptr elementtype(i32) %skc_refcnt.i.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %24, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %list_add.exit.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !341

list_add.exit.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %list_add.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %list_add.exit.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %25 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %.not.i.i.i.i.i = icmp sgt i32 %25, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.if.end17_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.if.end17_crit_edge:             ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end17

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %list_add.exit.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %list_add.exit.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i.i, i32 noundef %.sink.i.i.i.i.i) #17
  br label %if.end17

__mptcp_socket_create.exit:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ssock.i) #17
  br label %cleanup

if.end17:                                         ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.if.end17_crit_edge
  %request_mptcp.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %13, i32 0, i32 1, i32 0, i32 13
  %26 = ptrtoint ptr %request_mptcp.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %bf.load.i = load i32, ptr %request_mptcp.i, align 8
  %bf.set.i = or i32 %bf.load.i, -2147483648
  store i32 %bf.set.i, ptr %request_mptcp.i, align 8
  %27 = ptrtoint ptr %first.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %first.i, align 8
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %29 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %sk_socket.i, align 8
  %sk_callback_lock.i.i = getelementptr inbounds %struct.sock, ptr %28, i32 0, i32 50
  call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i.i) #17
  %wq.i.i = getelementptr inbounds %struct.socket, ptr %30, i32 0, i32 7
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !361
  %31 = getelementptr inbounds %struct.sock, ptr %28, i32 0, i32 17
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %wq.i.i, ptr %31, align 8
  %sk_socket.i.i.i = getelementptr inbounds %struct.sock, ptr %28, i32 0, i32 71
  %33 = ptrtoint ptr %sk_socket.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %sk_socket.i.i.i, align 8
  %sk_uid.i.i = getelementptr inbounds %struct.sock, ptr %28, i32 0, i32 55
  %i_uid.i.i = getelementptr inbounds %struct.socket_alloc, ptr %30, i32 0, i32 1, i32 2
  %34 = ptrtoint ptr %i_uid.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %i_uid.i.i, align 4
  %36 = ptrtoint ptr %sk_uid.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %sk_uid.i.i, align 4
  call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i.i) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ssock.i) #17
  call void @tcp_assign_congestion_control(ptr noundef %sk) #17
  %ca_name.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 43
  %icsk_ca_ops.i = getelementptr inbounds %struct.inet_connection_sock, ptr %sk, i32 0, i32 10
  %37 = ptrtoint ptr %icsk_ca_ops.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %icsk_ca_ops.i, align 4
  %name.i = getelementptr inbounds %struct.tcp_congestion_ops, ptr %38, i32 0, i32 11
  %call3.i = call ptr @strcpy(ptr noundef %ca_name.i, ptr noundef %name.i) #24
  call void @tcp_cleanup_congestion_control(ptr noundef %sk) #17
  %39 = ptrtoint ptr %icsk_ca_ops.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %icsk_ca_ops.i, align 4
  %skc_prot.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %40 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %skc_prot.i, align 8
  %sockets_allocated.i = getelementptr inbounds %struct.proto, ptr %41, i32 0, i32 33
  %42 = ptrtoint ptr %sockets_allocated.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %sockets_allocated.i, align 4
  call void @percpu_counter_add_batch(ptr noundef %43, i64 noundef 1, i32 noundef 16) #17
  %44 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %skc_net.i, align 4
  %arrayidx = getelementptr %struct.net, ptr %45, i32 0, i32 35, i32 105, i32 1
  %46 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx, align 4
  %sk_rcvbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %48 = ptrtoint ptr %sk_rcvbuf to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %sk_rcvbuf, align 8
  %arrayidx21 = getelementptr %struct.net, ptr %45, i32 0, i32 35, i32 104, i32 1
  %49 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx21, align 4
  %sk_sndbuf = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %51 = ptrtoint ptr %sk_sndbuf to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %sk_sndbuf, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %__mptcp_socket_create.exit, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end17 ], [ -92, %entry.cleanup_crit_edge ], [ -12, %land.lhs.true.cleanup_crit_edge ], [ %call.i, %__mptcp_socket_create.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_destroy(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mptcp_destroy_common(ptr noundef %sk)
  %skc_prot.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %0 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skc_prot.i, align 8
  %sockets_allocated.i = getelementptr inbounds %struct.proto, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %sockets_allocated.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sockets_allocated.i, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %3, i64 noundef -1, i32 noundef 16) #17
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_shutdown(ptr noundef %sk, i32 noundef %how) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_shutdown.__UNIQUE_ID_ddebug787, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_shutdown, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_shutdown.__UNIQUE_ID_ddebug787, ptr noundef nonnull @.str.121, ptr noundef %sk, i32 noundef %how) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %and = and i32 %how, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %do.end.if.end7_crit_edge, label %land.lhs.true

do.end.if.end7_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

land.lhs.true:                                    ; preds = %do.end
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %0 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load volatile i8, ptr %skc_state.i, align 2
  %idxprom.i = zext i8 %1 to i32
  %arrayidx.i = getelementptr [16 x i8], ptr @new_state, i32 0, i32 %idxprom.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx.i, align 1
  %conv.i = zext i8 %3 to i32
  %and.i = and i32 %conv.i, 15
  tail call void @inet_sk_state_store(ptr noundef %sk, i32 noundef %and.i) #17
  %and1.i = and i32 %conv.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool5.not = icmp eq i32 %and1.i, 0
  br i1 %tobool5.not, label %land.lhs.true.if.end7_crit_edge, label %if.then6

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then6:                                         ; preds = %land.lhs.true
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_wr_shutdown.__UNIQUE_ID_ddebug756, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_shutdown, %if.then.i)) #17
          to label %__mptcp_wr_shutdown.exit [label %if.then.i], !srcloc !350

if.then.i:                                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  %snd_data_fin_enable.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %4 = ptrtoint ptr %snd_data_fin_enable.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %snd_data_fin_enable.i, align 4, !range !344
  %6 = zext i8 %5 to i32
  %sk_shutdown.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %7 = ptrtoint ptr %sk_shutdown.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %sk_shutdown.i, align 2
  %conv5.i = zext i8 %8 to i32
  %9 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load volatile i8, ptr %skc_state.i, align 2
  %conv6.i = zext i8 %10 to i32
  %first_pending.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %11 = ptrtoint ptr %first_pending.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %first_pending.i.i, align 8
  %tobool8.i = icmp ne ptr %12, null
  %lnot.ext12.i = zext i1 %tobool8.i to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_wr_shutdown.__UNIQUE_ID_ddebug756, ptr noundef nonnull @.str.112, ptr noundef %sk, i32 noundef %6, i32 noundef %conv5.i, i32 noundef %conv6.i, i32 noundef %lnot.ext12.i) #17
  br label %__mptcp_wr_shutdown.exit

__mptcp_wr_shutdown.exit:                         ; preds = %if.then.i, %if.then6
  %write_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %13 = ptrtoint ptr %write_seq.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %write_seq.i, align 8
  %add.i = add i64 %14, 1
  store volatile i64 %add.i, ptr %write_seq.i, align 8
  %snd_data_fin_enable28.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 25
  %15 = ptrtoint ptr %snd_data_fin_enable28.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store volatile i8 1, ptr %snd_data_fin_enable28.i, align 4
  tail call fastcc void @__mptcp_check_send_data_fin(ptr noundef %sk) #17
  br label %if.end7

if.end7:                                          ; preds = %__mptcp_wr_shutdown.exit, %land.lhs.true.if.end7_crit_edge, %do.end.if.end7_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mptcp_setsockopt(ptr noundef, i32 noundef, i32 noundef, [2 x i32], i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mptcp_getsockopt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_sendmsg(ptr noundef %sk, ptr noundef %msg, i32 noundef %len) #0 align 64 {
entry:
  %timeo = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %timeo) #17
  %msg_flags = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 6
  %0 = ptrtoint ptr %msg_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %msg_flags, align 4
  %and = and i32 %1, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup127_crit_edge

entry.cleanup127_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup127

if.end:                                           ; preds = %entry
  %and2 = and i32 %1, 49216
  %2 = ptrtoint ptr %msg_flags to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %and2, ptr %msg_flags, align 4
  tail call void @lock_sock_nested(ptr noundef %sk, i32 noundef 0) #17
  %3 = ptrtoint ptr %msg_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %msg_flags, align 4
  %and4 = and i32 %4, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %cond.false.i, label %if.end.sock_sndtimeo.exit_crit_edge

if.end.sock_sndtimeo.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_sndtimeo.exit

cond.false.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %sk_sndtimeo.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 31
  %5 = ptrtoint ptr %sk_sndtimeo.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sk_sndtimeo.i, align 8
  br label %sock_sndtimeo.exit

sock_sndtimeo.exit:                               ; preds = %cond.false.i, %if.end.sock_sndtimeo.exit_crit_edge
  %cond.i = phi i32 [ %6, %cond.false.i ], [ 0, %if.end.sock_sndtimeo.exit_crit_edge ]
  %7 = ptrtoint ptr %timeo to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %cond.i, ptr %timeo, align 4
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %8 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load volatile i8, ptr %skc_state, align 2
  %conv = zext i8 %9 to i32
  %shl = shl nuw i32 1, %conv
  %and7 = and i32 %shl, -259
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %sock_sndtimeo.exit.if.end14_crit_edge, label %if.then9

sock_sndtimeo.exit.if.end14_crit_edge:            ; preds = %sock_sndtimeo.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

if.then9:                                         ; preds = %sock_sndtimeo.exit
  %call10 = call i32 @sk_stream_wait_connect(ptr noundef %sk, ptr noundef nonnull %timeo) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.then9.if.end14_crit_edge, label %if.then9.out.thread_crit_edge

if.then9.out.thread_crit_edge:                    ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #19
  br label %out.thread

if.then9.if.end14_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end14

if.end14:                                         ; preds = %if.then9.if.end14_crit_edge, %sock_sndtimeo.exit.if.end14_crit_edge
  %sk_allocation.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 41
  %10 = ptrtoint ptr %sk_allocation.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sk_allocation.i, align 8
  %and.i = and i32 %11, 132224
  call void @__sanitizer_cov_trace_const_cmp4(i32 1152, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 1152
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  %12 = call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %task_frag.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 180
  br label %sk_page_frag.exit

if.end.i:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #19
  %sk_frag.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 37
  br label %sk_page_frag.exit

sk_page_frag.exit:                                ; preds = %if.end.i, %if.then.i
  %retval.0.i200 = phi ptr [ %task_frag.i, %if.then.i ], [ %sk_frag.i, %if.end.i ]
  %count.i.i = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 2, i32 4
  %16 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %count.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool17.not248 = icmp eq i32 %17, 0
  br i1 %tobool17.not248, label %sk_page_frag.exit.out.thread_crit_edge, label %while.body.lr.ph

sk_page_frag.exit.out.thread_crit_edge:           ; preds = %sk_page_frag.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %out.thread

while.body.lr.ph:                                 ; preds = %sk_page_frag.exit
  %sk_err = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 51
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %first_pending.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 36
  %rtx_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35
  %prev.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 35, i32 1
  %size.i = getelementptr inbounds %struct.page_frag, ptr %retval.0.i200, i32 0, i32 2
  %offset.i = getelementptr inbounds %struct.page_frag, ptr %retval.0.i200, i32 0, i32 1
  %write_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 3
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %sk_sndbuf.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  %skc_prot.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 8
  %sk_forward_alloc.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %flags1.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  %msg_iter = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 2
  br label %while.body

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %while.body.lr.ph
  %copied.0249 = phi i32 [ 0, %while.body.lr.ph ], [ %copied.1257, %while.cond.backedge.while.body_crit_edge ]
  %18 = ptrtoint ptr %sk_err to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sk_err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool18.not = icmp eq i32 %19, 0
  br i1 %tobool18.not, label %lor.lhs.false, label %while.body.out_crit_edge

while.body.out_crit_edge:                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

lor.lhs.false:                                    ; preds = %while.body
  %20 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %sk_shutdown, align 2
  %22 = and i8 %21, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool21.not = icmp eq i8 %22, 0
  br i1 %tobool21.not, label %if.end23, label %lor.lhs.false.out_crit_edge

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end23:                                         ; preds = %lor.lhs.false
  %23 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %first_pending.i, align 8
  %tobool.not.i = icmp eq ptr %24, null
  br i1 %tobool.not.i, label %if.end23.if.then27_crit_edge, label %if.end.i201

if.end23.if.then27_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27

if.end.i201:                                      ; preds = %if.end23
  %25 = ptrtoint ptr %rtx_queue.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %rtx_queue.i, align 4
  %cmp.i.not.i = icmp eq ptr %26, %rtx_queue.i
  br i1 %cmp.i.not.i, label %land.rhs.i, label %mptcp_pending_tail.exit

land.rhs.i:                                       ; preds = %if.end.i201
  %.b49.i = load i1, ptr @mptcp_pending_tail.__already_done, align 1
  br i1 %.b49.i, label %land.rhs.i.if.then27_crit_edge, label %if.then10.i, !prof !340

land.rhs.i.if.then27_crit_edge:                   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27

if.then10.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_pending_tail.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.106, i32 noundef 343, i32 noundef 9, ptr noundef null) #17
  br label %if.then27

mptcp_pending_tail.exit:                          ; preds = %if.end.i201
  %27 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %prev.i, align 4
  %tobool.not.i203 = icmp eq ptr %28, null
  br i1 %tobool.not.i203, label %mptcp_pending_tail.exit.if.then27_crit_edge, label %land.lhs.true.i

mptcp_pending_tail.exit.if.then27_crit_edge:      ; preds = %mptcp_pending_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27

land.lhs.true.i:                                  ; preds = %mptcp_pending_tail.exit
  %29 = ptrtoint ptr %retval.0.i200 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %retval.0.i200, align 4
  %page1.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 6
  %31 = ptrtoint ptr %page1.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %page1.i, align 8
  %cmp.i204 = icmp eq ptr %30, %32
  br i1 %cmp.i204, label %land.lhs.true2.i, label %land.lhs.true.i.if.then27_crit_edge

land.lhs.true.i.if.then27_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %33 = ptrtoint ptr %size.i to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %size.i, align 2
  %35 = ptrtoint ptr %offset.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %offset.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %34, i16 %36)
  %cmp4.i = icmp ugt i16 %34, %36
  br i1 %cmp4.i, label %land.lhs.true6.i, label %land.lhs.true2.i.if.then27_crit_edge

land.lhs.true2.i.if.then27_crit_edge:             ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27

land.lhs.true6.i:                                 ; preds = %land.lhs.true2.i
  %conv3.i = zext i16 %36 to i32
  %offset9.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 3
  %37 = ptrtoint ptr %offset9.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %offset9.i, align 2
  %conv10.i = zext i16 %38 to i32
  %data_len.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 2
  %39 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %data_len.i, align 8
  %conv11.i = zext i16 %40 to i32
  %add.i = add nuw nsw i32 %conv11.i, %conv10.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %conv3.i)
  %cmp12.i = icmp eq i32 %add.i, %conv3.i
  br i1 %cmp12.i, label %mptcp_frag_can_collapse_to.exit, label %land.lhs.true6.i.if.then27_crit_edge

land.lhs.true6.i.if.then27_crit_edge:             ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27

mptcp_frag_can_collapse_to.exit:                  ; preds = %land.lhs.true6.i
  %data_seq.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %28, i32 0, i32 1
  %41 = ptrtoint ptr %data_seq.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %data_seq.i, align 8
  %conv15.i = zext i16 %40 to i64
  %add16.i = add i64 %42, %conv15.i
  %43 = ptrtoint ptr %write_seq.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %write_seq.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add16.i, i64 %44)
  %cmp17.i = icmp eq i64 %add16.i, %44
  br i1 %cmp17.i, label %mptcp_frag_can_collapse_to.exit.if.end38_crit_edge, label %mptcp_frag_can_collapse_to.exit.if.then27_crit_edge

mptcp_frag_can_collapse_to.exit.if.then27_crit_edge: ; preds = %mptcp_frag_can_collapse_to.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then27

mptcp_frag_can_collapse_to.exit.if.end38_crit_edge: ; preds = %mptcp_frag_can_collapse_to.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

if.then27:                                        ; preds = %mptcp_frag_can_collapse_to.exit.if.then27_crit_edge, %land.lhs.true6.i.if.then27_crit_edge, %land.lhs.true2.i.if.then27_crit_edge, %land.lhs.true.i.if.then27_crit_edge, %mptcp_pending_tail.exit.if.then27_crit_edge, %if.then10.i, %land.rhs.i.if.then27_crit_edge, %if.end23.if.then27_crit_edge
  %45 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %sk_wmem_queued.i.i, align 8
  %47 = ptrtoint ptr %sk_sndbuf.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %sk_sndbuf.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %46, i32 %48)
  %cmp.not.i.i = icmp slt i32 %46, %48
  br i1 %cmp.not.i.i, label %if.end.i.i, label %if.then27.wait_for_memory_crit_edge

if.then27.wait_for_memory_crit_edge:              ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #19
  br label %wait_for_memory

if.end.i.i:                                       ; preds = %if.then27
  %49 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %skc_prot.i.i, align 8
  %stream_memory_free.i.i = getelementptr inbounds %struct.proto, ptr %50, i32 0, i32 28
  %51 = ptrtoint ptr %stream_memory_free.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %stream_memory_free.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %52, null
  br i1 %tobool.not.i.i, label %if.end.i.i.if.end30_crit_edge, label %sk_stream_memory_free.exit

if.end.i.i.if.end30_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30

sk_stream_memory_free.exit:                       ; preds = %if.end.i.i
  %call.i.i = call zeroext i1 %52(ptr noundef %sk, i32 noundef 0) #17
  br i1 %call.i.i, label %sk_stream_memory_free.exit.if.end30_crit_edge, label %sk_stream_memory_free.exit.wait_for_memory_crit_edge

sk_stream_memory_free.exit.wait_for_memory_crit_edge: ; preds = %sk_stream_memory_free.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %wait_for_memory

sk_stream_memory_free.exit.if.end30_crit_edge:    ; preds = %sk_stream_memory_free.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end30

if.end30:                                         ; preds = %sk_stream_memory_free.exit.if.end30_crit_edge, %if.end.i.i.if.end30_crit_edge
  %53 = ptrtoint ptr %sk_allocation.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sk_allocation.i, align 8
  %call.i = call zeroext i1 @skb_page_frag_refill(i32 noundef 64, ptr noundef %retval.0.i200, i32 noundef %54) #17
  br i1 %call.i, label %if.end33, label %mptcp_page_frag_refill.exit, !prof !340

mptcp_page_frag_refill.exit:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @mptcp_enter_memory_pressure(ptr noundef %sk) #17
  br label %wait_for_memory

if.end33:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #19
  %55 = ptrtoint ptr %offset.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %offset.i, align 4
  %conv35 = zext i16 %56 to i32
  %add.i208 = add nuw nsw i32 %conv35, 3
  %and.i209 = and i32 %add.i208, 131068
  %57 = ptrtoint ptr %retval.0.i200 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %retval.0.i200, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %59 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %58 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %59 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %60 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add1.i = add i32 %sub.ptr.div.i, %60
  %shl.i = shl i32 %add1.i, 12
  %61 = call i32 asm "@ __pv_stub\0A1:\09sub\09$0, $1, $2\0A2:\09sub\09$0, $0, $3\0A\09.pushsection .pv_table,\22a\22\0A\09.long\091b - ., 2b - .\0A\09.popsection\0A", "=r,r,I,I"(i32 %shl.i, i32 -2130706432, i32 8454144) #20, !srcloc !385
  %62 = inttoptr i32 %61 to ptr
  %add.ptr.i = getelementptr i8, ptr %62, i32 %and.i209
  %data_len.i210 = getelementptr inbounds %struct.mptcp_data_frag, ptr %add.ptr.i, i32 0, i32 2
  %63 = ptrtoint ptr %data_len.i210 to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 0, ptr %data_len.i210, align 8
  %64 = ptrtoint ptr %write_seq.i to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %write_seq.i, align 8
  %data_seq.i212 = getelementptr inbounds %struct.mptcp_data_frag, ptr %add.ptr.i, i32 0, i32 1
  %66 = ptrtoint ptr %data_seq.i212 to i32
  call void @__asan_store8_noabort(i32 %66)
  store i64 %65, ptr %data_seq.i212, align 8
  %67 = trunc i32 %and.i209 to i16
  %68 = sub i16 %67, %56
  %conv.i = add i16 %68, 32
  %overhead.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %add.ptr.i, i32 0, i32 4
  %69 = ptrtoint ptr %overhead.i to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 %conv.i, ptr %overhead.i, align 4
  %conv4.i = add i16 %67, 32
  %offset5.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %add.ptr.i, i32 0, i32 3
  %70 = ptrtoint ptr %offset5.i to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 %conv4.i, ptr %offset5.i, align 2
  %already_sent.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %add.ptr.i, i32 0, i32 5
  %71 = ptrtoint ptr %already_sent.i to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 0, ptr %already_sent.i, align 2
  %72 = ptrtoint ptr %retval.0.i200 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %retval.0.i200, align 4
  %page7.i = getelementptr inbounds %struct.mptcp_data_frag, ptr %add.ptr.i, i32 0, i32 6
  %74 = ptrtoint ptr %page7.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %73, ptr %page7.i, align 8
  %conv37 = zext i16 %conv.i to i32
  br label %if.end38

if.end38:                                         ; preds = %if.end33, %mptcp_frag_can_collapse_to.exit.if.end38_crit_edge
  %75 = phi i1 [ true, %mptcp_frag_can_collapse_to.exit.if.end38_crit_edge ], [ false, %if.end33 ]
  %frag_truesize.0 = phi i32 [ 0, %mptcp_frag_can_collapse_to.exit.if.end38_crit_edge ], [ %conv37, %if.end33 ]
  %dfrag.0 = phi ptr [ %28, %mptcp_frag_can_collapse_to.exit.if.end38_crit_edge ], [ %add.ptr.i, %if.end33 ]
  %offset39 = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag.0, i32 0, i32 3
  %76 = ptrtoint ptr %offset39 to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %offset39, align 2
  %conv40 = zext i16 %77 to i32
  %data_len = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag.0, i32 0, i32 2
  %78 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %78)
  %79 = load i16, ptr %data_len, align 8
  %conv41 = zext i16 %79 to i32
  %add = add nuw nsw i32 %conv41, %conv40
  %80 = ptrtoint ptr %size.i to i32
  call void @__asan_load2_noabort(i32 %80)
  %81 = load i16, ptr %size.i, align 2
  %conv42 = zext i16 %81 to i32
  %sub = sub nsw i32 %conv42, %add
  %82 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %count.i.i, align 8
  %84 = call i32 @llvm.umin.i32(i32 %sub, i32 %83)
  %add45 = add i32 %84, %frag_truesize.0
  %85 = ptrtoint ptr %skc_prot.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %skc_prot.i.i, align 8
  %memory_allocated.i.i = getelementptr inbounds %struct.proto, ptr %86, i32 0, i32 32
  %87 = ptrtoint ptr %memory_allocated.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %memory_allocated.i.i, align 4
  %tobool.i.not.i = icmp eq ptr %88, null
  br i1 %tobool.i.not.i, label %if.end38.if.end48_crit_edge, label %if.end.i215

if.end38.if.end48_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end48

if.end.i215:                                      ; preds = %if.end38
  %89 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %sk_forward_alloc.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %90, i32 %add45)
  %cmp.not.i = icmp slt i32 %90, %add45
  br i1 %cmp.not.i, label %sk_wmem_schedule.exit, label %if.end.i215.if.end48_crit_edge

if.end.i215.if.end48_crit_edge:                   ; preds = %if.end.i215
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end48

sk_wmem_schedule.exit:                            ; preds = %if.end.i215
  %call1.i = call i32 @__sk_mem_schedule(ptr noundef %sk, i32 noundef %add45, i32 noundef 0) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.i.not = icmp eq i32 %call1.i, 0
  br i1 %tobool.i.not, label %sk_wmem_schedule.exit.wait_for_memory_crit_edge, label %sk_wmem_schedule.exit.if.end48_crit_edge

sk_wmem_schedule.exit.if.end48_crit_edge:         ; preds = %sk_wmem_schedule.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end48

sk_wmem_schedule.exit.wait_for_memory_crit_edge:  ; preds = %sk_wmem_schedule.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %wait_for_memory

if.end48:                                         ; preds = %sk_wmem_schedule.exit.if.end48_crit_edge, %if.end.i215.if.end48_crit_edge, %if.end38.if.end48_crit_edge
  %page = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag.0, i32 0, i32 6
  %91 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %page, align 8
  %call49 = call i32 @copy_page_from_iter(ptr noundef %92, i32 noundef %add, i32 noundef %84, ptr noundef %msg_iter) #17
  call void @__sanitizer_cov_trace_cmp4(i32 %call49, i32 %84)
  %cmp50.not = icmp eq i32 %call49, %84
  br i1 %cmp50.not, label %if.end53, label %if.end48.out_crit_edge

if.end48.out_crit_edge:                           ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

if.end53:                                         ; preds = %if.end48
  %93 = ptrtoint ptr %sk_forward_alloc.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %sk_forward_alloc.i, align 8
  %sub54 = sub i32 %94, %add45
  store i32 %sub54, ptr %sk_forward_alloc.i, align 8
  %add55 = add i32 %84, %copied.0249
  %95 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %95)
  %96 = load i16, ptr %data_len, align 8
  %97 = trunc i32 %84 to i16
  %conv59 = add i16 %96, %97
  store i16 %conv59, ptr %data_len, align 8
  %98 = ptrtoint ptr %offset.i to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %offset.i, align 4
  %100 = trunc i32 %add45 to i16
  %conv64 = add i16 %99, %100
  store i16 %conv64, ptr %offset.i, align 4
  %101 = ptrtoint ptr %write_seq.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %write_seq.i, align 8
  %conv67 = zext i32 %84 to i64
  %add68 = add i64 %102, %conv67
  store volatile i64 %add68, ptr %write_seq.i, align 8
  %103 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %add.i217 = add i32 %104, %add45
  store volatile i32 %add.i217, ptr %sk_wmem_queued.i.i, align 8
  br i1 %75, label %if.end53.do.body91_crit_edge, label %if.then75

if.end53.do.body91_crit_edge:                     ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body91

if.then75:                                        ; preds = %if.end53
  %105 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %page, align 8
  %107 = getelementptr inbounds %struct.page, ptr %106, i32 0, i32 1
  %108 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %107, align 4
  %and.i.i218 = and i32 %109, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i218)
  %tobool.not.i.i219 = icmp eq i32 %and.i.i218, 0
  br i1 %tobool.not.i.i219, label %if.end.i.i220, label %if.then.i.i, !prof !340

if.then.i.i:                                      ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #19
  %sub.i.i = add i32 %109, -1
  br label %_compound_head.exit.i

if.end.i.i220:                                    ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #19
  %110 = ptrtoint ptr %106 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i220, %if.then.i.i
  %retval.0.i.i221 = phi i32 [ %sub.i.i, %if.then.i.i ], [ %110, %if.end.i.i220 ]
  %111 = inttoptr i32 %retval.0.i.i221 to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %111, i32 0, i32 3
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #17
  %112 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %113, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i1.i, label %do.end5.i.i, !prof !341

if.then.i1.i:                                     ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %114 = inttoptr i32 %retval.0.i.i221 to ptr
  call void @dump_page(ptr noundef %114, ptr noundef nonnull @.str.86) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #17, !srcloc !351
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit.i
  %call.i.i.i.i9.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #17
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #17
  %115 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #17, !srcloc !352
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@mptcp_sendmsg, %if.then.i.i.i.i)) #17
          to label %get_page.exit [label %if.then.i.i.i.i], !srcloc !350

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @__page_ref_mod(ptr noundef %111, i32 noundef 1) #17
  br label %get_page.exit

get_page.exit:                                    ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %116 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %prev.i, align 4
  %call.i.i223 = call zeroext i1 @__list_add_valid(ptr noundef %dfrag.0, ptr noundef %117, ptr noundef %rtx_queue.i) #17
  br i1 %call.i.i223, label %if.end.i.i224, label %get_page.exit.list_add_tail.exit_crit_edge

get_page.exit.list_add_tail.exit_crit_edge:       ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add_tail.exit

if.end.i.i224:                                    ; preds = %get_page.exit
  call void @__sanitizer_cov_trace_pc() #19
  %118 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %dfrag.0, ptr %prev.i, align 4
  %119 = ptrtoint ptr %dfrag.0 to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr %rtx_queue.i, ptr %dfrag.0, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %dfrag.0, i32 0, i32 1
  %120 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr %117, ptr %prev3.i.i, align 4
  %121 = ptrtoint ptr %117 to i32
  call void @__asan_store4_noabort(i32 %121)
  store volatile ptr %dfrag.0, ptr %117, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i224, %get_page.exit.list_add_tail.exit_crit_edge
  %122 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %first_pending.i, align 8
  %tobool77.not = icmp eq ptr %123, null
  br i1 %tobool77.not, label %do.body83, label %list_add_tail.exit.do.body91_crit_edge

list_add_tail.exit.do.body91_crit_edge:           ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body91

do.body83:                                        ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #19
  %124 = ptrtoint ptr %first_pending.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store volatile ptr %dfrag.0, ptr %first_pending.i, align 8
  br label %do.body91

do.body91:                                        ; preds = %do.body83, %list_add_tail.exit.do.body91_crit_edge, %if.end53.do.body91_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_sendmsg.__UNIQUE_ID_ddebug721, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_sendmsg, %if.then98)) #17
          to label %while.cond.backedge [label %if.then98], !srcloc !350

if.then98:                                        ; preds = %do.body91
  call void @__sanitizer_cov_trace_pc() #19
  %data_seq = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag.0, i32 0, i32 1
  %125 = ptrtoint ptr %data_seq to i32
  call void @__asan_load8_noabort(i32 %125)
  %126 = load i64, ptr %data_seq, align 8
  %127 = ptrtoint ptr %data_len to i32
  call void @__asan_load2_noabort(i32 %127)
  %128 = load i16, ptr %data_len, align 8
  %conv100 = zext i16 %128 to i32
  %already_sent = getelementptr inbounds %struct.mptcp_data_frag, ptr %dfrag.0, i32 0, i32 5
  %129 = ptrtoint ptr %already_sent to i32
  call void @__asan_load2_noabort(i32 %129)
  %130 = load i16, ptr %already_sent, align 2
  %conv101 = zext i16 %130 to i32
  %lnot103 = xor i1 %75, true
  %lnot.ext104 = zext i1 %lnot103 to i32
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_sendmsg.__UNIQUE_ID_ddebug721, ptr noundef nonnull @.str.124, ptr noundef %sk, i64 noundef %126, i32 noundef %conv100, i32 noundef %conv101, i32 noundef %lnot.ext104) #17
  br label %while.cond.backedge

wait_for_memory:                                  ; preds = %sk_wmem_schedule.exit.wait_for_memory_crit_edge, %mptcp_page_frag_refill.exit, %sk_stream_memory_free.exit.wait_for_memory_crit_edge, %if.then27.wait_for_memory_crit_edge
  %131 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %sk_socket.i, align 8
  %flags.i = getelementptr inbounds %struct.socket, ptr %132, i32 0, i32 2
  call void @_set_bit(i32 noundef 2, ptr noundef %flags.i) #17
  call void @_set_bit(i32 noundef 1, ptr noundef %flags1.i) #17
  %133 = ptrtoint ptr %msg_flags to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %msg_flags, align 4
  call void @__mptcp_push_pending(ptr noundef %sk, i32 noundef %134)
  %call109 = call i32 @sk_stream_wait_memory(ptr noundef %sk, ptr noundef nonnull %timeo) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call109)
  %tobool110.not = icmp eq i32 %call109, 0
  br i1 %tobool110.not, label %wait_for_memory.while.cond.backedge_crit_edge, label %wait_for_memory.out_crit_edge

wait_for_memory.out_crit_edge:                    ; preds = %wait_for_memory
  call void @__sanitizer_cov_trace_pc() #19
  br label %out

wait_for_memory.while.cond.backedge_crit_edge:    ; preds = %wait_for_memory
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %wait_for_memory.while.cond.backedge_crit_edge, %if.then98, %do.body91
  %copied.1257 = phi i32 [ %add55, %do.body91 ], [ %copied.0249, %wait_for_memory.while.cond.backedge_crit_edge ], [ %add55, %if.then98 ]
  %135 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %count.i.i, align 8
  %tobool17.not = icmp eq i32 %136, 0
  br i1 %tobool17.not, label %while.end, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body

while.end:                                        ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %copied.1257)
  %tobool118.not = icmp eq i32 %copied.1257, 0
  br i1 %tobool118.not, label %while.end.out.thread_crit_edge, label %out.thread241

while.end.out.thread_crit_edge:                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %out.thread

out.thread241:                                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #19
  %137 = ptrtoint ptr %msg_flags to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %msg_flags, align 4
  call void @__mptcp_push_pending(ptr noundef %sk, i32 noundef %138)
  call void @release_sock(ptr noundef %sk) #17
  br label %cleanup127

out.thread:                                       ; preds = %while.end.out.thread_crit_edge, %sk_page_frag.exit.out.thread_crit_edge, %if.then9.out.thread_crit_edge
  %ret.3.ph = phi i32 [ 0, %while.end.out.thread_crit_edge ], [ %call10, %if.then9.out.thread_crit_edge ], [ 0, %sk_page_frag.exit.out.thread_crit_edge ]
  call void @release_sock(ptr noundef %sk) #17
  br label %139

out:                                              ; preds = %wait_for_memory.out_crit_edge, %if.end48.out_crit_edge, %lor.lhs.false.out_crit_edge, %while.body.out_crit_edge
  %ret.3 = phi i32 [ %call109, %wait_for_memory.out_crit_edge ], [ -14, %if.end48.out_crit_edge ], [ -32, %while.body.out_crit_edge ], [ -32, %lor.lhs.false.out_crit_edge ]
  call void @release_sock(ptr noundef %sk) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %copied.0249)
  %tobool122.not = icmp eq i32 %copied.0249, 0
  br i1 %tobool122.not, label %out._crit_edge, label %out.cleanup127_crit_edge

out.cleanup127_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup127

out._crit_edge:                                   ; preds = %out
  call void @__sanitizer_cov_trace_pc() #19
  br label %139

139:                                              ; preds = %out._crit_edge, %out.thread
  %ret.3240 = phi i32 [ %ret.3.ph, %out.thread ], [ %ret.3, %out._crit_edge ]
  br label %cleanup127

cleanup127:                                       ; preds = %139, %out.cleanup127_crit_edge, %out.thread241, %entry.cleanup127_crit_edge
  %retval.0 = phi i32 [ -95, %entry.cleanup127_crit_edge ], [ %ret.3240, %139 ], [ %copied.0249, %out.cleanup127_crit_edge ], [ %copied.1257, %out.thread241 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %timeo) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_recvmsg(ptr noundef %sk, ptr noundef %msg, i32 noundef %len, i32 noundef %nonblock, i32 noundef %flags, ptr noundef %addr_len) #0 align 64 {
entry:
  %tss = alloca %struct.scm_timestamping_internal, align 8
  %timeo = alloca i32, align 4
  %inq = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %tss) #17
  %0 = call ptr @memset(ptr %tss, i32 255, i32 48)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %timeo) #17
  %1 = ptrtoint ptr %timeo to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %timeo, align 4, !annotation !343
  %and = and i32 %flags, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then, !prof !340

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %call3 = tail call i32 @inet_recv_error(ptr noundef %sk, ptr noundef %msg, i32 noundef %len, ptr noundef %addr_len) #17
  br label %cleanup163

if.end:                                           ; preds = %entry
  tail call void @lock_sock_nested(ptr noundef %sk, i32 noundef 0) #17
  %skc_state = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %2 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %3)
  %cmp = icmp eq i8 %3, 10
  br i1 %cmp, label %if.end.do.body139_crit_edge, label %if.end12, !prof !341

if.end.do.body139_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body139

if.end12:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nonblock)
  %tobool13.not = icmp eq i32 %nonblock, 0
  br i1 %tobool13.not, label %cond.false.i, label %if.end12.sock_rcvtimeo.exit_crit_edge

if.end12.sock_rcvtimeo.exit_crit_edge:            ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_rcvtimeo.exit

cond.false.i:                                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #19
  %sk_rcvtimeo.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 62
  %4 = ptrtoint ptr %sk_rcvtimeo.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sk_rcvtimeo.i, align 4
  br label %sock_rcvtimeo.exit

sock_rcvtimeo.exit:                               ; preds = %cond.false.i, %if.end12.sock_rcvtimeo.exit_crit_edge
  %cond.i = phi i32 [ %5, %cond.false.i ], [ 0, %if.end12.sock_rcvtimeo.exit_crit_edge ]
  %6 = ptrtoint ptr %timeo to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %cond.i, ptr %timeo, align 4
  %7 = tail call i32 @llvm.umin.i32(i32 %len, i32 2147483647)
  %and17 = and i32 %flags, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %tobool.not.i = icmp eq i32 %and17, 0
  br i1 %tobool.not.i, label %cond.false.i222, label %sock_rcvtimeo.exit.sock_rcvlowat.exit_crit_edge

sock_rcvtimeo.exit.sock_rcvlowat.exit_crit_edge:  ; preds = %sock_rcvtimeo.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_rcvlowat.exit

cond.false.i222:                                  ; preds = %sock_rcvtimeo.exit
  call void @__sanitizer_cov_trace_pc() #19
  %sk_rcvlowat.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 6
  %8 = ptrtoint ptr %sk_rcvlowat.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %sk_rcvlowat.i, align 8
  %10 = tail call i32 @llvm.smin.i32(i32 %9, i32 %7) #17
  br label %sock_rcvlowat.exit

sock_rcvlowat.exit:                               ; preds = %cond.false.i222, %sock_rcvtimeo.exit.sock_rcvlowat.exit_crit_edge
  %cond5.i = phi i32 [ %10, %cond.false.i222 ], [ %7, %sock_rcvtimeo.exit.sock_rcvlowat.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond5.i)
  %tobool6.not.i = icmp eq i32 %cond5.i, 0
  %..i = select i1 %tobool6.not.i, i32 1, i32 %cond5.i
  %recvmsg_inq = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 29
  %11 = ptrtoint ptr %recvmsg_inq to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load = load i8, ptr %recvmsg_inq, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool19.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool19.not, label %sock_rcvlowat.exit.if.end27_crit_edge, label %if.then26, !prof !340

sock_rcvlowat.exit.if.end27_crit_edge:            ; preds = %sock_rcvlowat.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end27

if.then26:                                        ; preds = %sock_rcvlowat.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %sock_rcvlowat.exit.if.end27_crit_edge
  %cmsg_flags.0 = phi i32 [ 0, %sock_rcvlowat.exit.if.end27_crit_edge ], [ 2, %if.then26 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp28331.not = icmp eq i32 %7, 0
  br i1 %cmp28331.not, label %if.end27.out_err_crit_edge, label %while.body.lr.ph

if.end27.out_err_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

while.body.lr.ph:                                 ; preds = %if.end27
  %receive_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 33
  %and.i = and i32 %flags, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i223 = icmp eq i32 %and.i, 0
  %msg_iter.i.i = getelementptr inbounds %struct.msghdr, ptr %msg, i32 0, i32 2
  %and35.i = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and35.i)
  %tobool36.not.i = icmp eq i32 %and35.i, 0
  %rmem_released.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 17
  %qlen.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 33, i32 1
  %old_wspace.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 11
  %sk_rcvbuf.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %sk_backlog.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %skc_net.i.i.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %conn_list.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %sk_err = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 51
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %flags79 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 18
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %copied.0333 = phi i32 [ 0, %while.body.lr.ph ], [ %add, %cleanup.while.body_crit_edge ]
  %cmsg_flags.1332 = phi i32 [ %cmsg_flags.0, %while.body.lr.ph ], [ %cmsg_flags.5, %cleanup.while.body_crit_edge ]
  %sub = sub i32 %7, %copied.0333
  %12 = ptrtoint ptr %receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %receive_queue.i, align 8
  br label %for.cond.i

for.cond.i:                                       ; preds = %if.end47.i.for.cond.i_crit_edge, %while.body
  %cmsg_flags.2 = phi i32 [ %cmsg_flags.1332, %while.body ], [ %cmsg_flags.3, %if.end47.i.for.cond.i_crit_edge ]
  %skb.0.i = phi ptr [ %13, %while.body ], [ %tmp.0.i, %if.end47.i.for.cond.i_crit_edge ]
  %copied.0.i = phi i32 [ 0, %while.body ], [ %add.i, %if.end47.i.for.cond.i_crit_edge ]
  %14 = ptrtoint ptr %skb.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %tmp.0.i = load ptr, ptr %skb.0.i, align 8
  %cmp.not.i = icmp eq ptr %skb.0.i, %receive_queue.i
  br i1 %cmp.not.i, label %for.cond.i.__mptcp_recvmsg_mskq.exit_crit_edge, label %for.body.i

for.cond.i.__mptcp_recvmsg_mskq.exit_crit_edge:   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_recvmsg_mskq.exit

for.body.i:                                       ; preds = %for.cond.i
  %offset3.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0.i, i32 0, i32 3, i32 16
  %15 = ptrtoint ptr %offset3.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %offset3.i, align 8
  %len4.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0.i, i32 0, i32 6
  %17 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %len4.i, align 4
  %sub.i = sub i32 %18, %16
  %sub5.i = sub i32 %sub, %copied.0.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub5.i, i32 %sub.i)
  %cmp7.i = icmp ult i32 %sub5.i, %sub.i
  %19 = call i32 @llvm.umin.i32(i32 %sub5.i, i32 %sub.i) #17
  br i1 %tobool.not.i223, label %if.then.i, label %for.body.i.if.end15.i_crit_edge

for.body.i.if.end15.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.i

if.then.i:                                        ; preds = %for.body.i
  %call.i.i = call i32 @skb_copy_datagram_iter(ptr noundef %skb.0.i, i32 noundef %16, ptr noundef %msg_iter.i.i, i32 noundef %19) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp8.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp8.i, label %if.then11.i, label %if.then.i.if.end15.i_crit_edge, !prof !341

if.then.i.if.end15.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.i

if.then11.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %copied.0.i)
  %tobool12.not.i = icmp eq i32 %copied.0.i, 0
  br i1 %tobool12.not.i, label %if.then11.i.if.then39_crit_edge, label %if.then11.i.__mptcp_recvmsg_mskq.exit_crit_edge

if.then11.i.__mptcp_recvmsg_mskq.exit_crit_edge:  ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_recvmsg_mskq.exit

if.then11.i.if.then39_crit_edge:                  ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then39

if.end15.i:                                       ; preds = %if.then.i.if.end15.i_crit_edge, %for.body.i.if.end15.i_crit_edge
  %has_rxtstamp.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0.i, i32 0, i32 3, i32 20
  %20 = ptrtoint ptr %has_rxtstamp.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %bf.load.i = load i8, ptr %has_rxtstamp.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool18.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool18.not.i, label %if.end15.i.if.end20.i_crit_edge, label %if.then19.i

if.end15.i.if.end20.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end20.i

if.then19.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @tcp_update_recv_tstamps(ptr noundef %skb.0.i, ptr noundef nonnull %tss) #17
  %or.i = or i32 %cmsg_flags.2, 1
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then19.i, %if.end15.i.if.end20.i_crit_edge
  %cmsg_flags.3 = phi i32 [ %cmsg_flags.2, %if.end15.i.if.end20.i_crit_edge ], [ %or.i, %if.then19.i ]
  %add.i = add i32 %19, %copied.0.i
  br i1 %cmp7.i, label %if.then22.i, label %if.end34.i

if.then22.i:                                      ; preds = %if.end20.i
  br i1 %tobool36.not.i, label %if.then25.i, label %if.then22.i.__mptcp_recvmsg_mskq.exit_crit_edge

if.then22.i.__mptcp_recvmsg_mskq.exit_crit_edge:  ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_recvmsg_mskq.exit

if.then25.i:                                      ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #19
  %offset3.i.le = getelementptr inbounds %struct.sk_buff, ptr %skb.0.i, i32 0, i32 3, i32 16
  %cb.le.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0.i, i32 0, i32 3
  %21 = ptrtoint ptr %offset3.i.le to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %offset3.i.le, align 8
  %add29.i = add i32 %22, %19
  store i32 %add29.i, ptr %offset3.i.le, align 8
  %conv.i = zext i32 %19 to i64
  %23 = ptrtoint ptr %cb.le.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %cb.le.i, align 8
  %add32.i = add i64 %24, %conv.i
  store i64 %add32.i, ptr %cb.le.i, align 8
  br label %__mptcp_recvmsg_mskq.exit

if.end34.i:                                       ; preds = %if.end20.i
  br i1 %tobool36.not.i, label %if.then37.i, label %if.end34.i.if.end47.i_crit_edge

if.end34.i.if.end47.i_crit_edge:                  ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end47.i

if.then37.i:                                      ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #19
  %destructor.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0.i, i32 0, i32 4, i32 0, i32 1
  %25 = ptrtoint ptr %destructor.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %destructor.i, align 4
  %26 = ptrtoint ptr %rmem_released.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rmem_released.i, align 8
  %truesize.i = getelementptr inbounds %struct.sk_buff, ptr %skb.0.i, i32 0, i32 20
  %28 = ptrtoint ptr %truesize.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %truesize.i, align 8
  %add40.i = add i32 %29, %27
  store volatile i32 %add40.i, ptr %rmem_released.i, align 8
  %30 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %qlen.i.i, align 4
  %sub.i.i = add i32 %31, -1
  store volatile i32 %sub.i.i, ptr %qlen.i.i, align 4
  %32 = ptrtoint ptr %skb.0.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %skb.0.i, align 8
  %prev9.i.i = getelementptr inbounds %struct.anon.50, ptr %skb.0.i, i32 0, i32 1
  %34 = ptrtoint ptr %prev9.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev9.i.i, align 4
  store ptr null, ptr %prev9.i.i, align 4
  store ptr null, ptr %skb.0.i, align 8
  %prev17.i.i = getelementptr inbounds %struct.anon.50, ptr %33, i32 0, i32 1
  %36 = ptrtoint ptr %prev17.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %35, ptr %prev17.i.i, align 4
  %37 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %33, ptr %35, align 8
  call void @__kfree_skb(ptr noundef %skb.0.i) #17
  br label %if.end47.i

if.end47.i:                                       ; preds = %if.then37.i, %if.end34.i.if.end47.i_crit_edge
  %cmp48.not.i = icmp ult i32 %add.i, %sub
  br i1 %cmp48.not.i, label %if.end47.i.for.cond.i_crit_edge, label %if.end47.i.__mptcp_recvmsg_mskq.exit_crit_edge

if.end47.i.__mptcp_recvmsg_mskq.exit_crit_edge:   ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_recvmsg_mskq.exit

if.end47.i.for.cond.i_crit_edge:                  ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i

__mptcp_recvmsg_mskq.exit:                        ; preds = %if.end47.i.__mptcp_recvmsg_mskq.exit_crit_edge, %if.then25.i, %if.then22.i.__mptcp_recvmsg_mskq.exit_crit_edge, %if.then11.i.__mptcp_recvmsg_mskq.exit_crit_edge, %for.cond.i.__mptcp_recvmsg_mskq.exit_crit_edge
  %cmsg_flags.5 = phi i32 [ %cmsg_flags.2, %if.then11.i.__mptcp_recvmsg_mskq.exit_crit_edge ], [ %cmsg_flags.3, %if.then25.i ], [ %cmsg_flags.3, %if.then22.i.__mptcp_recvmsg_mskq.exit_crit_edge ], [ %cmsg_flags.3, %if.end47.i.__mptcp_recvmsg_mskq.exit_crit_edge ], [ %cmsg_flags.2, %for.cond.i.__mptcp_recvmsg_mskq.exit_crit_edge ]
  %retval.2.i = phi i32 [ %copied.0.i, %if.then11.i.__mptcp_recvmsg_mskq.exit_crit_edge ], [ %add.i, %if.then25.i ], [ %add.i, %if.then22.i.__mptcp_recvmsg_mskq.exit_crit_edge ], [ %add.i, %if.end47.i.__mptcp_recvmsg_mskq.exit_crit_edge ], [ %copied.0.i, %for.cond.i.__mptcp_recvmsg_mskq.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.2.i)
  %cmp31 = icmp slt i32 %retval.2.i, 0
  br i1 %cmp31, label %__mptcp_recvmsg_mskq.exit.if.then39_crit_edge, label %if.end43, !prof !341

__mptcp_recvmsg_mskq.exit.if.then39_crit_edge:    ; preds = %__mptcp_recvmsg_mskq.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then39

if.then39:                                        ; preds = %__mptcp_recvmsg_mskq.exit.if.then39_crit_edge, %if.then11.i.if.then39_crit_edge
  %retval.2.i289 = phi i32 [ %retval.2.i, %__mptcp_recvmsg_mskq.exit.if.then39_crit_edge ], [ %call.i.i, %if.then11.i.if.then39_crit_edge ]
  %cmsg_flags.5288 = phi i32 [ %cmsg_flags.5, %__mptcp_recvmsg_mskq.exit.if.then39_crit_edge ], [ %cmsg_flags.2, %if.then11.i.if.then39_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %copied.0333)
  %tobool40.not = icmp eq i32 %copied.0333, 0
  %spec.select = select i1 %tobool40.not, i32 %retval.2.i289, i32 %copied.0333
  br label %out_err

if.end43:                                         ; preds = %__mptcp_recvmsg_mskq.exit
  %add = add i32 %retval.2.i, %copied.0333
  %38 = ptrtoint ptr %old_wspace.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %old_wspace.i, align 4
  %40 = ptrtoint ptr %sk_rcvbuf.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %sk_rcvbuf.i.i, align 8
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i.i, i32 noundef 4) #17
  %42 = ptrtoint ptr %sk_backlog.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %sk_backlog.i.i.i, align 4
  %44 = ptrtoint ptr %rmem_released.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %rmem_released.i, align 8
  %sub.i.neg.i.i = sub i32 %45, %43
  %sub.i.i224 = add i32 %sub.i.neg.i.i, %41
  %46 = ptrtoint ptr %skc_net.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %skc_net.i.i.i.i, align 4
  %sysctl_tcp_adv_win_scale.i.i.i = getelementptr inbounds %struct.net, ptr %47, i32 0, i32 35, i32 85
  %48 = ptrtoint ptr %sysctl_tcp_adv_win_scale.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %sysctl_tcp_adv_win_scale.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %49)
  %cmp.i.i.i = icmp slt i32 %49, 1
  %sub.i4.i.i = sub i32 0, %49
  %shr.i.i.i = ashr i32 %sub.i.i224, %sub.i4.i.i
  %shr1.i.i.i = ashr i32 %sub.i.i224, %49
  %sub2.i.i.i = sub i32 %sub.i.i224, %shr1.i.i.i
  %cond.i.i.i = select i1 %cmp.i.i.i, i32 %shr.i.i.i, i32 %sub2.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond.i.i.i)
  %cmp.i = icmp sgt i32 %cond.i.i.i, 0
  %shl.i = shl i32 %39, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %cond.i.i.i, i32 %shl.i)
  %cmp1.i = icmp sge i32 %cond.i.i.i, %shl.i
  %50 = select i1 %cmp.i, i1 %cmp1.i, i1 false
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog.i.i.i, i32 noundef 4) #17
  %51 = ptrtoint ptr %sk_backlog.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %sk_backlog.i.i.i, align 4
  %53 = ptrtoint ptr %rmem_released.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %rmem_released.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %54)
  %tobool.not.i225 = icmp ne i32 %52, %54
  %55 = ptrtoint ptr %conn_list.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %subflow.027.i = load ptr, ptr %conn_list.i, align 8
  %cmp6.not28.i = icmp eq ptr %subflow.027.i, %conn_list.i
  br i1 %cmp6.not28.i, label %if.end43.mptcp_cleanup_rbuf.exit_crit_edge, label %if.end43.for.body.i226_crit_edge

if.end43.for.body.i226_crit_edge:                 ; preds = %if.end43
  br label %for.body.i226

if.end43.mptcp_cleanup_rbuf.exit_crit_edge:       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_cleanup_rbuf.exit

for.body.i226:                                    ; preds = %if.end.i.for.body.i226_crit_edge, %if.end43.for.body.i226_crit_edge
  %subflow.029.i = phi ptr [ %subflow.0.i, %if.end.i.for.body.i226_crit_edge ], [ %subflow.027.i, %if.end43.for.body.i226_crit_edge ]
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.029.i, i32 0, i32 5
  %56 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %tcp_sock.i.i, align 8
  br i1 %50, label %for.body.i226.if.then.i227_crit_edge, label %lor.lhs.false.i

for.body.i226.if.then.i227_crit_edge:             ; preds = %for.body.i226
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i227

lor.lhs.false.i:                                  ; preds = %for.body.i226
  %icsk_ack.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %57, i32 0, i32 24
  %58 = ptrtoint ptr %icsk_ack.i.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load volatile i8, ptr %icsk_ack.i.i, align 4
  %conv.i.i = zext i8 %59 to i32
  %and.i.i = and i32 %conv.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.if.end.i_crit_edge, label %do.end4.i.i

lor.lhs.false.i.if.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

do.end4.i.i:                                      ; preds = %lor.lhs.false.i
  %rcv_nxt.i.i = getelementptr inbounds %struct.tcp_sock, ptr %57, i32 0, i32 7
  %60 = ptrtoint ptr %rcv_nxt.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %rcv_nxt.i.i, align 8
  %rcv_wup.i.i = getelementptr inbounds %struct.tcp_sock, ptr %57, i32 0, i32 9
  %62 = ptrtoint ptr %rcv_wup.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %rcv_wup.i.i, align 8
  %sub.i26.i = sub i32 %61, %63
  %rcv_mss.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %57, i32 0, i32 24, i32 8
  %64 = ptrtoint ptr %rcv_mss.i.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load volatile i16, ptr %rcv_mss.i.i, align 2
  %conv15.i.i = zext i16 %65 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i26.i, i32 %conv15.i.i)
  %cmp.i.i = icmp ugt i32 %sub.i26.i, %conv15.i.i
  %brmerge.i.i = or i1 %tobool.not.i225, %cmp.i.i
  br i1 %brmerge.i.i, label %mptcp_subflow_could_cleanup.exit.i, label %land.rhs19.i.i

land.rhs19.i.i:                                   ; preds = %do.end4.i.i
  %and21.i.i = and i32 %conv.i.i, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i)
  %tobool22.i.not.i = icmp eq i32 %and21.i.i, 0
  br i1 %tobool22.i.not.i, label %land.rhs19.i.i.if.end.i_crit_edge, label %land.rhs19.i.i.if.then.i227_crit_edge

land.rhs19.i.i.if.then.i227_crit_edge:            ; preds = %land.rhs19.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i227

land.rhs19.i.i.if.end.i_crit_edge:                ; preds = %land.rhs19.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

mptcp_subflow_could_cleanup.exit.i:               ; preds = %do.end4.i.i
  br i1 %cmp.i.i, label %mptcp_subflow_could_cleanup.exit.i.if.then.i227_crit_edge, label %mptcp_subflow_could_cleanup.exit.i.if.end.i_crit_edge

mptcp_subflow_could_cleanup.exit.i.if.end.i_crit_edge: ; preds = %mptcp_subflow_could_cleanup.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

mptcp_subflow_could_cleanup.exit.i.if.then.i227_crit_edge: ; preds = %mptcp_subflow_could_cleanup.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then.i227

if.then.i227:                                     ; preds = %mptcp_subflow_could_cleanup.exit.i.if.then.i227_crit_edge, %land.rhs19.i.i.if.then.i227_crit_edge, %for.body.i226.if.then.i227_crit_edge
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %57, i32 0, i32 4, i32 3
  %66 = call ptr @llvm.returnaddress(i32 0) #17
  %67 = ptrtoint ptr %66 to i32
  call void @lock_acquire(ptr noundef %dep_map.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %67) #17
  %call.i.i.i = call zeroext i1 @__lock_sock_fast(ptr noundef %57) #17
  %skc_state.i.i.i.i = getelementptr inbounds %struct.sock_common, ptr %57, i32 0, i32 4
  %68 = ptrtoint ptr %skc_state.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load volatile i8, ptr %skc_state.i.i.i.i, align 2
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  %conv.i.i.i.i = zext i8 %69 to i32
  %shl.i.i.i = shl nuw i32 1, %conv.i.i.i.i
  %and.i.i.i = and i32 %shl.i.i.i, 1228
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i, label %if.then.i227.if.end.i.i_crit_edge

if.then.i227.if.end.i.i_crit_edge:                ; preds = %if.then.i227
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %if.then.i227
  call void @__sanitizer_cov_trace_pc() #19
  call void @tcp_cleanup_rbuf(ptr noundef %57, i32 noundef 1) #17
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %if.then.i227.if.end.i.i_crit_edge
  br i1 %call.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @release_sock(ptr noundef %57) #17
  br label %if.end.i

if.else.i.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock.i.i.i = getelementptr inbounds %struct.sock, ptr %57, i32 0, i32 4
  call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %67) #17
  call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i.i) #17
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i.i.i, %if.then.i.i.i, %mptcp_subflow_could_cleanup.exit.i.if.end.i_crit_edge, %land.rhs19.i.i.if.end.i_crit_edge, %lor.lhs.false.i.if.end.i_crit_edge
  %70 = ptrtoint ptr %subflow.029.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %subflow.0.i = load ptr, ptr %subflow.029.i, align 8
  %cmp6.not.i = icmp eq ptr %subflow.0.i, %conn_list.i
  br i1 %cmp6.not.i, label %if.end.i.mptcp_cleanup_rbuf.exit_crit_edge, label %if.end.i.for.body.i226_crit_edge

if.end.i.for.body.i226_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i226

if.end.i.mptcp_cleanup_rbuf.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_cleanup_rbuf.exit

mptcp_cleanup_rbuf.exit:                          ; preds = %if.end.i.mptcp_cleanup_rbuf.exit_crit_edge, %if.end43.mptcp_cleanup_rbuf.exit_crit_edge
  %71 = ptrtoint ptr %receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %receive_queue.i, align 4
  %cmp.i228.not = icmp eq ptr %72, %receive_queue.i
  br i1 %cmp.i228.not, label %land.lhs.true, label %mptcp_cleanup_rbuf.exit.if.end49_crit_edge

mptcp_cleanup_rbuf.exit.if.end49_crit_edge:       ; preds = %mptcp_cleanup_rbuf.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

land.lhs.true:                                    ; preds = %mptcp_cleanup_rbuf.exit
  %call46 = call fastcc zeroext i1 @__mptcp_move_skbs(ptr noundef %sk)
  br i1 %call46, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end49_crit_edge

land.lhs.true.if.end49_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end49

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end49:                                         ; preds = %land.lhs.true.if.end49_crit_edge, %mptcp_cleanup_rbuf.exit.if.end49_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %..i)
  %cmp50.not = icmp slt i32 %add, %..i
  br i1 %cmp50.not, label %if.end53, label %if.end49.out_err_crit_edge

if.end49.out_err_crit_edge:                       ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

if.end53:                                         ; preds = %if.end49
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %tobool54.not = icmp eq i32 %add, 0
  %73 = ptrtoint ptr %sk_err to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %sk_err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool75.not = icmp eq i32 %74, 0
  br i1 %tobool54.not, label %if.else, label %if.then55

if.then55:                                        ; preds = %if.end53
  br i1 %tobool75.not, label %lor.lhs.false, label %if.then55.out_err_crit_edge

if.then55.out_err_crit_edge:                      ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

lor.lhs.false:                                    ; preds = %if.then55
  %75 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %76)
  %cmp60 = icmp eq i8 %76, 7
  br i1 %cmp60, label %lor.lhs.false.out_err_crit_edge, label %lor.lhs.false62

lor.lhs.false.out_err_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

lor.lhs.false62:                                  ; preds = %lor.lhs.false
  %77 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %sk_shutdown, align 2
  %79 = and i8 %78, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %79)
  %tobool65.not = icmp eq i8 %79, 0
  br i1 %tobool65.not, label %lor.lhs.false66, label %lor.lhs.false62.out_err_crit_edge

lor.lhs.false62.out_err_crit_edge:                ; preds = %lor.lhs.false62
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

lor.lhs.false66:                                  ; preds = %lor.lhs.false62
  %80 = ptrtoint ptr %timeo to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %timeo, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool67.not = icmp eq i32 %81, 0
  br i1 %tobool67.not, label %lor.lhs.false66.out_err_crit_edge, label %lor.lhs.false68

lor.lhs.false66.out_err_crit_edge:                ; preds = %lor.lhs.false66
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

lor.lhs.false68:                                  ; preds = %lor.lhs.false66
  %82 = call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i230 = and i32 %82, -16384
  %83 = inttoptr i32 %and.i230 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 2
  %84 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %task, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %stack.i.i, align 4
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %87, align 4
  %90 = and i32 %89, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool.not.i231 = icmp eq i32 %90, 0
  br i1 %tobool.not.i231, label %signal_pending.exit, label %lor.lhs.false68.out_err_crit_edge, !prof !340

lor.lhs.false68.out_err_crit_edge:                ; preds = %lor.lhs.false68
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

signal_pending.exit:                              ; preds = %lor.lhs.false68
  %91 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %87, align 4
  %and1.i.i.i.i.i = and i32 %92, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool71.not = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool71.not, label %signal_pending.exit.do.body_crit_edge, label %signal_pending.exit.out_err_crit_edge

signal_pending.exit.out_err_crit_edge:            ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

signal_pending.exit.do.body_crit_edge:            ; preds = %signal_pending.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

if.else:                                          ; preds = %if.end53
  br i1 %tobool75.not, label %if.end78, label %sock_error.exit

sock_error.exit:                                  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #19
  %call.i.i235 = call zeroext i1 @__kasan_check_write(ptr noundef %sk_err, i32 noundef 4) #17
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !386
  call void @llvm.prefetch.p0(ptr %sk_err, i32 1, i32 3, i32 1) #17
  %93 = call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %sk_err) #17, !srcloc !387
  %asmresult.i.i = extractvalue { i32, i32 } %93, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !388
  %sub.i236 = sub i32 0, %asmresult.i.i
  br label %out_err

if.end78:                                         ; preds = %if.else
  %call80 = call i32 @_test_and_clear_bit(i32 noundef 3, ptr noundef %flags79) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80)
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %if.end78.if.end83_crit_edge, label %if.then82

if.end78.if.end83_crit_edge:                      ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end83

if.then82:                                        ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #19
  call fastcc void @mptcp_check_for_eof(ptr noundef %sk)
  br label %if.end83

if.end83:                                         ; preds = %if.then82, %if.end78.if.end83_crit_edge
  %94 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %sk_shutdown, align 2
  %96 = and i8 %95, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %96)
  %tobool87.not = icmp eq i8 %96, 0
  br i1 %tobool87.not, label %if.end92, label %if.then88

if.then88:                                        ; preds = %if.end83
  %call89 = call fastcc zeroext i1 @__mptcp_move_skbs(ptr noundef %sk)
  br i1 %call89, label %if.then88.cleanup_crit_edge, label %if.then88.out_err_crit_edge

if.then88.out_err_crit_edge:                      ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

if.then88.cleanup_crit_edge:                      ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end92:                                         ; preds = %if.end83
  %97 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %98)
  %cmp96 = icmp eq i8 %98, 7
  br i1 %cmp96, label %if.end92.do.body139_crit_edge, label %if.end99

if.end92.do.body139_crit_edge:                    ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body139

if.end99:                                         ; preds = %if.end92
  %99 = ptrtoint ptr %timeo to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %timeo, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %100)
  %tobool100.not = icmp eq i32 %100, 0
  br i1 %tobool100.not, label %if.end99.do.body139_crit_edge, label %if.end102

if.end99.do.body139_crit_edge:                    ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body139

if.end102:                                        ; preds = %if.end99
  %101 = call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i239 = and i32 %101, -16384
  %102 = inttoptr i32 %and.i239 to ptr
  %task104 = getelementptr inbounds %struct.thread_info, ptr %102, i32 0, i32 2
  %103 = ptrtoint ptr %task104 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %task104, align 8
  %stack.i.i240 = getelementptr inbounds %struct.task_struct, ptr %104, i32 0, i32 1
  %105 = ptrtoint ptr %stack.i.i240 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %stack.i.i240, align 4
  %107 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load volatile i32, ptr %106, align 4
  %109 = and i32 %108, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %109)
  %tobool.not.i241 = icmp eq i32 %109, 0
  br i1 %tobool.not.i241, label %signal_pending.exit245, label %if.end102.if.then107_crit_edge, !prof !340

if.end102.if.then107_crit_edge:                   ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then107

signal_pending.exit245:                           ; preds = %if.end102
  %110 = ptrtoint ptr %106 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load volatile i32, ptr %106, align 4
  %and1.i.i.i.i.i242 = and i32 %111, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i242)
  %tobool106.not = icmp eq i32 %and1.i.i.i.i.i242, 0
  br i1 %tobool106.not, label %signal_pending.exit245.do.body_crit_edge, label %signal_pending.exit245.if.then107_crit_edge

signal_pending.exit245.if.then107_crit_edge:      ; preds = %signal_pending.exit245
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then107

signal_pending.exit245.do.body_crit_edge:         ; preds = %signal_pending.exit245
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

if.then107:                                       ; preds = %signal_pending.exit245.if.then107_crit_edge, %if.end102.if.then107_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %100)
  %cmp.i246 = icmp eq i32 %100, 2147483647
  %cond.i247 = select i1 %cmp.i246, i32 -512, i32 -4
  br label %do.body139

do.body:                                          ; preds = %signal_pending.exit245.do.body_crit_edge, %signal_pending.exit.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_recvmsg.__UNIQUE_ID_ddebug739, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_recvmsg, %if.then120)) #17
          to label %do.end [label %if.then120], !srcloc !350

if.then120:                                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  %112 = ptrtoint ptr %timeo to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %timeo, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_recvmsg.__UNIQUE_ID_ddebug739, ptr noundef nonnull @.str.127, i32 noundef %113) #17
  br label %do.end

do.end:                                           ; preds = %if.then120, %do.body
  %call122 = call i32 @sk_wait_data(ptr noundef %sk, ptr noundef nonnull %timeo, ptr noundef null) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then88.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %cmp28 = icmp ugt i32 %7, %add
  br i1 %cmp28, label %cleanup.while.body_crit_edge, label %cleanup.out_err_crit_edge

cleanup.out_err_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %out_err

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.body

out_err:                                          ; preds = %cleanup.out_err_crit_edge, %if.then88.out_err_crit_edge, %sock_error.exit, %signal_pending.exit.out_err_crit_edge, %lor.lhs.false68.out_err_crit_edge, %lor.lhs.false66.out_err_crit_edge, %lor.lhs.false62.out_err_crit_edge, %lor.lhs.false.out_err_crit_edge, %if.then55.out_err_crit_edge, %if.end49.out_err_crit_edge, %if.then39, %if.end27.out_err_crit_edge
  %cmsg_flags.6 = phi i32 [ %cmsg_flags.5, %sock_error.exit ], [ %cmsg_flags.5288, %if.then39 ], [ %cmsg_flags.0, %if.end27.out_err_crit_edge ], [ %cmsg_flags.5, %lor.lhs.false68.out_err_crit_edge ], [ %cmsg_flags.5, %if.then88.out_err_crit_edge ], [ %cmsg_flags.5, %if.then55.out_err_crit_edge ], [ %cmsg_flags.5, %lor.lhs.false.out_err_crit_edge ], [ %cmsg_flags.5, %lor.lhs.false62.out_err_crit_edge ], [ %cmsg_flags.5, %lor.lhs.false66.out_err_crit_edge ], [ %cmsg_flags.5, %signal_pending.exit.out_err_crit_edge ], [ %cmsg_flags.5, %if.end49.out_err_crit_edge ], [ %cmsg_flags.5, %cleanup.out_err_crit_edge ]
  %copied.3 = phi i32 [ %sub.i236, %sock_error.exit ], [ %spec.select, %if.then39 ], [ 0, %if.end27.out_err_crit_edge ], [ %add, %cleanup.out_err_crit_edge ], [ %add, %if.end49.out_err_crit_edge ], [ %add, %signal_pending.exit.out_err_crit_edge ], [ %add, %lor.lhs.false66.out_err_crit_edge ], [ %add, %lor.lhs.false62.out_err_crit_edge ], [ %add, %lor.lhs.false.out_err_crit_edge ], [ %add, %if.then55.out_err_crit_edge ], [ 0, %if.then88.out_err_crit_edge ], [ %add, %lor.lhs.false68.out_err_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cmsg_flags.6)
  %tobool123.not = icmp ne i32 %cmsg_flags.6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %copied.3)
  %cmp125 = icmp sgt i32 %copied.3, -1
  %or.cond = select i1 %tobool123.not, i1 %cmp125, i1 false
  br i1 %or.cond, label %if.then127, label %out_err.do.body139_crit_edge

out_err.do.body139_crit_edge:                     ; preds = %out_err
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body139

if.then127:                                       ; preds = %out_err
  %and128 = and i32 %cmsg_flags.6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and128)
  %tobool129.not = icmp eq i32 %and128, 0
  br i1 %tobool129.not, label %if.then127.if.end131_crit_edge, label %if.then130

if.then127.if.end131_crit_edge:                   ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end131

if.then130:                                       ; preds = %if.then127
  call void @__sanitizer_cov_trace_pc() #19
  call void @tcp_recv_timestamp(ptr noundef %msg, ptr noundef %sk, ptr noundef nonnull %tss) #17
  br label %if.end131

if.end131:                                        ; preds = %if.then130, %if.then127.if.end131_crit_edge
  %and132 = and i32 %cmsg_flags.6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and132)
  %tobool133.not = icmp eq i32 %and132, 0
  br i1 %tobool133.not, label %if.end131.do.body139_crit_edge, label %if.then134

if.end131.do.body139_crit_edge:                   ; preds = %if.end131
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body139

if.then134:                                       ; preds = %if.end131
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %inq) #17
  %receive_queue.i248 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 33
  %114 = ptrtoint ptr %receive_queue.i248 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %receive_queue.i248, align 4
  %cmp.i.i249 = icmp eq ptr %115, %receive_queue.i248
  %tobool.not18.i = icmp eq ptr %115, null
  %tobool.not.i250 = or i1 %cmp.i.i249, %tobool.not18.i
  br i1 %tobool.not.i250, label %if.end3.i, label %if.then.i255

if.then.i255:                                     ; preds = %if.then134
  call void @__sanitizer_cov_trace_pc() #19
  %ack_seq.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 5
  %116 = ptrtoint ptr %ack_seq.i to i32
  call void @__asan_load8_noabort(i32 %116)
  %117 = load i64, ptr %ack_seq.i, align 8
  %cb.i = getelementptr inbounds %struct.sk_buff, ptr %115, i32 0, i32 3
  %118 = ptrtoint ptr %cb.i to i32
  call void @__asan_load8_noabort(i32 %118)
  %119 = load i64, ptr %cb.i, align 8
  %sub.i251 = sub i64 %117, %119
  call void @__sanitizer_cov_trace_const_cmp8(i64 2147483646, i64 %sub.i251)
  %cmp.i252 = icmp ugt i64 %sub.i251, 2147483646
  %conv.i253 = trunc i64 %sub.i251 to i32
  %retval.0.i254 = select i1 %cmp.i252, i32 2147483647, i32 %conv.i253
  br label %mptcp_inq_hint.exit

if.end3.i:                                        ; preds = %if.then134
  %120 = ptrtoint ptr %skc_state to i32
  call void @__asan_load1_noabort(i32 %120)
  %121 = load volatile i8, ptr %skc_state, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %121)
  %cmp5.i = icmp eq i8 %121, 7
  br i1 %cmp5.i, label %if.end3.i.mptcp_inq_hint.exit_crit_edge, label %lor.lhs.false.i256

if.end3.i.mptcp_inq_hint.exit_crit_edge:          ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_inq_hint.exit

lor.lhs.false.i256:                               ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_shutdown.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 66
  %122 = ptrtoint ptr %sk_shutdown.i to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %sk_shutdown.i, align 2
  %124 = and i8 %123, 1
  %125 = zext i8 %124 to i32
  br label %mptcp_inq_hint.exit

mptcp_inq_hint.exit:                              ; preds = %lor.lhs.false.i256, %if.end3.i.mptcp_inq_hint.exit_crit_edge, %if.then.i255
  %retval.1.i = phi i32 [ %retval.0.i254, %if.then.i255 ], [ 1, %if.end3.i.mptcp_inq_hint.exit_crit_edge ], [ %125, %lor.lhs.false.i256 ]
  %126 = ptrtoint ptr %inq to i32
  call void @__asan_store4_noabort(i32 %126)
  store i32 %retval.1.i, ptr %inq, align 4
  %call136 = call i32 @put_cmsg(ptr noundef %msg, i32 noundef 6, i32 noundef 36, i32 noundef 4, ptr noundef nonnull %inq) #17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %inq) #17
  br label %do.body139

do.body139:                                       ; preds = %mptcp_inq_hint.exit, %if.end131.do.body139_crit_edge, %out_err.do.body139_crit_edge, %if.then107, %if.end99.do.body139_crit_edge, %if.end92.do.body139_crit_edge, %if.end.do.body139_crit_edge
  %copied.3303 = phi i32 [ %copied.3, %out_err.do.body139_crit_edge ], [ %copied.3, %mptcp_inq_hint.exit ], [ %copied.3, %if.end131.do.body139_crit_edge ], [ -107, %if.end.do.body139_crit_edge ], [ %cond.i247, %if.then107 ], [ -11, %if.end99.do.body139_crit_edge ], [ -107, %if.end92.do.body139_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_recvmsg.__UNIQUE_ID_ddebug740, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_recvmsg, %if.then151)) #17
          to label %do.end158 [label %if.then151], !srcloc !350

if.then151:                                       ; preds = %do.body139
  call void @__sanitizer_cov_trace_pc() #19
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 8
  %127 = ptrtoint ptr %sk_receive_queue to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load volatile ptr, ptr %sk_receive_queue, align 4
  %cmp.i257 = icmp eq ptr %128, %sk_receive_queue
  %conv153 = zext i1 %cmp.i257 to i32
  %receive_queue154 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 33
  %129 = ptrtoint ptr %receive_queue154 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %receive_queue154, align 4
  %cmp.i258 = icmp eq ptr %130, %receive_queue154
  %conv.i259 = zext i1 %cmp.i258 to i32
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_recvmsg.__UNIQUE_ID_ddebug740, ptr noundef nonnull @.str.129, ptr noundef %sk, i32 noundef %conv153, i32 noundef %conv.i259, i32 noundef %copied.3303) #17
  br label %do.end158

do.end158:                                        ; preds = %if.then151, %do.body139
  %and159 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and159)
  %tobool160.not = icmp eq i32 %and159, 0
  br i1 %tobool160.not, label %if.then161, label %do.end158.if.end162_crit_edge

do.end158.if.end162_crit_edge:                    ; preds = %do.end158
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end162

if.then161:                                       ; preds = %do.end158
  %dep_map.i.i.i260 = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 3
  %call.i.i.i.i261 = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i260, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i261)
  %tobool.not.i.i.i262 = icmp eq i32 %call.i.i.i.i261, 0
  br i1 %tobool.not.i.i.i262, label %lockdep_sock_is_held.exit.i.i, label %if.then161.sock_owned_by_me.exit.i_crit_edge

if.then161.sock_owned_by_me.exit.i_crit_edge:     ; preds = %if.then161
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit.i

lockdep_sock_is_held.exit.i.i:                    ; preds = %if.then161
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %call.i6.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.sock_owned_by_me.exit.i_crit_edge

lockdep_sock_is_held.exit.i.i.sock_owned_by_me.exit.i_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit.i

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %131 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %tobool.not.i.i263 = icmp eq i32 %131, 0
  br i1 %tobool.not.i.i263, label %land.rhs.i.i.sock_owned_by_me.exit.i_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.sock_owned_by_me.exit.i_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit.i

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.sock_owned_by_me.exit.i_crit_edge, label %if.then.i.i264, !prof !340

land.rhs3.i.i.sock_owned_by_me.exit.i_crit_edge:  ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_owned_by_me.exit.i

if.then.i.i264:                                   ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %sock_owned_by_me.exit.i

sock_owned_by_me.exit.i:                          ; preds = %if.then.i.i264, %land.rhs3.i.i.sock_owned_by_me.exit.i_crit_edge, %land.rhs.i.i.sock_owned_by_me.exit.i_crit_edge, %lockdep_sock_is_held.exit.i.i.sock_owned_by_me.exit.i_crit_edge, %if.then161.sock_owned_by_me.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %copied.3303)
  %cmp.i265 = icmp slt i32 %copied.3303, 1
  br i1 %cmp.i265, label %sock_owned_by_me.exit.i.if.end162_crit_edge, label %if.end.i272

sock_owned_by_me.exit.i.if.end162_crit_edge:      ; preds = %sock_owned_by_me.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end162

if.end.i272:                                      ; preds = %sock_owned_by_me.exit.i
  %rcvq_space.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 41
  %copied1.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 41, i32 1
  %132 = ptrtoint ptr %copied1.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %copied1.i, align 4
  %add.i266 = add i32 %133, %copied.3303
  store i32 %add.i266, ptr %copied1.i, align 4
  %call.i.i.i267 = call i64 @ktime_get() #17
  %134 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %call.i.i.i267, i32 0) #20, !srcloc !389
  %asmresult.i.i.i.i = extractvalue { i64, i32 } %134, 0
  %asmresult4.i.i.i.i = extractvalue { i64, i32 } %134, 1
  %135 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %call.i.i.i267, i64 %asmresult.i.i.i.i, i32 %asmresult4.i.i.i.i) #20, !srcloc !390
  %asmresult10.i.i.i.i = extractvalue { i64, i32 } %135, 0
  %div158.i.i851.i = lshr i64 %asmresult10.i.i.i.i, 9
  %time4.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 41, i32 2
  %136 = ptrtoint ptr %time4.i to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %time4.i, align 8
  %sub.i.i268 = sub i64 %div158.i.i851.i, %137
  %138 = call i64 @llvm.smax.i64(i64 %sub.i.i268, i64 0) #17
  %rtt_us7.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 41, i32 3
  %139 = ptrtoint ptr %rtt_us7.i to i32
  call void @__asan_load8_noabort(i32 %139)
  %140 = load i64, ptr %rtt_us7.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %140)
  %tobool.not.i269 = icmp ne i64 %140, 0
  %conv.i270 = and i64 %138, 4294967295
  %shr.i = lshr i64 %140, 3
  call void @__sanitizer_cov_trace_cmp8(i64 %shr.i, i64 %conv.i270)
  %cmp8.i271 = icmp ugt i64 %shr.i, %conv.i270
  %or.cond.i = select i1 %tobool.not.i269, i1 %cmp8.i271, i1 false
  br i1 %or.cond.i, label %if.end.i272.if.end162_crit_edge, label %if.end11.i

if.end.i272.if.end162_crit_edge:                  ; preds = %if.end.i272
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end162

if.end11.i:                                       ; preds = %if.end.i272
  %conn_list.i273 = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %141 = ptrtoint ptr %conn_list.i273 to i32
  call void @__asan_load4_noabort(i32 %141)
  %subflow.0852.i = load ptr, ptr %conn_list.i273, align 8
  %cmp13.not853.i = icmp eq ptr %subflow.0852.i, %conn_list.i273
  br i1 %cmp13.not853.i, label %for.end.thread.i, label %if.end11.i.for.body.i276_crit_edge

if.end11.i.for.body.i276_crit_edge:               ; preds = %if.end11.i
  br label %for.body.i276

for.end.thread.i:                                 ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #19
  %142 = ptrtoint ptr %rtt_us7.i to i32
  call void @__asan_store8_noabort(i32 %142)
  store i64 0, ptr %rtt_us7.i, align 8
  br label %if.end162

for.body.i276:                                    ; preds = %for.body.i276.for.body.i276_crit_edge, %if.end11.i.for.body.i276_crit_edge
  %subflow.0856.i = phi ptr [ %subflow.0.i275, %for.body.i276.for.body.i276_crit_edge ], [ %subflow.0852.i, %if.end11.i.for.body.i276_crit_edge ]
  %advmss.0855.i = phi i32 [ %150, %for.body.i276.for.body.i276_crit_edge ], [ 1, %if.end11.i.for.body.i276_crit_edge ]
  %rtt_us.0854.i = phi i64 [ %149, %for.body.i276.for.body.i276_crit_edge ], [ 0, %if.end11.i.for.body.i276_crit_edge ]
  %tcp_sock.i.i274 = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0856.i, i32 0, i32 5
  %143 = ptrtoint ptr %tcp_sock.i.i274 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %tcp_sock.i.i274, align 8
  %rcv_rtt_est.i = getelementptr inbounds %struct.tcp_sock, ptr %144, i32 0, i32 111
  %145 = ptrtoint ptr %rcv_rtt_est.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load volatile i32, ptr %rcv_rtt_est.i, align 8
  %conv19.i = zext i32 %146 to i64
  %advmss24.i = getelementptr inbounds %struct.tcp_sock, ptr %144, i32 0, i32 32
  %147 = ptrtoint ptr %advmss24.i to i32
  call void @__asan_load2_noabort(i32 %147)
  %148 = load volatile i16, ptr %advmss24.i, align 8
  %conv25.i = zext i16 %148 to i32
  %149 = call i64 @llvm.umax.i64(i64 %rtt_us.0854.i, i64 %conv19.i) #17
  %150 = call i32 @llvm.umax.i32(i32 %advmss.0855.i, i32 %conv25.i) #17
  %151 = ptrtoint ptr %subflow.0856.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %subflow.0.i275 = load ptr, ptr %subflow.0856.i, align 8
  %cmp13.not.i = icmp eq ptr %subflow.0.i275, %conn_list.i273
  br i1 %cmp13.not.i, label %for.end.i, label %for.body.i276.for.body.i276_crit_edge

for.body.i276.for.body.i276_crit_edge:            ; preds = %for.body.i276
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i276

for.end.i:                                        ; preds = %for.body.i276
  %152 = ptrtoint ptr %rtt_us7.i to i32
  call void @__asan_store8_noabort(i32 %152)
  store i64 %149, ptr %rtt_us7.i, align 8
  %shr44.i = lshr i64 %149, 3
  call void @__sanitizer_cov_trace_cmp8(i64 %shr44.i, i64 %conv.i270)
  %cmp45.i = icmp ugt i64 %shr44.i, %conv.i270
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %149)
  %cmp47.i = icmp eq i64 %149, 0
  %or.cond804.i = or i1 %cmp47.i, %cmp45.i
  br i1 %or.cond804.i, label %for.end.i.if.end162_crit_edge, label %if.end50.i

for.end.i.if.end162_crit_edge:                    ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end162

if.end50.i:                                       ; preds = %for.end.i
  %153 = ptrtoint ptr %copied1.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %copied1.i, align 4
  %155 = ptrtoint ptr %rcvq_space.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %rcvq_space.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %154, i32 %156)
  %cmp54.not.i = icmp ugt i32 %154, %156
  br i1 %cmp54.not.i, label %if.end57.i, label %if.end50.i.new_measure.i_crit_edge

if.end50.i.new_measure.i_crit_edge:               ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %new_measure.i

if.end57.i:                                       ; preds = %if.end50.i
  %skc_net.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 9
  %157 = ptrtoint ptr %skc_net.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %skc_net.i.i, align 4
  %sysctl_tcp_moderate_rcvbuf.i = getelementptr inbounds %struct.net, ptr %158, i32 0, i32 35, i32 91
  %159 = ptrtoint ptr %sysctl_tcp_moderate_rcvbuf.i to i32
  call void @__asan_load1_noabort(i32 %159)
  %160 = load i8, ptr %sysctl_tcp_moderate_rcvbuf.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %160)
  %tobool60.not.i = icmp eq i8 %160, 0
  br i1 %tobool60.not.i, label %if.end57.i.if.end570.i_crit_edge, label %land.lhs.true61.i

if.end57.i.if.end570.i_crit_edge:                 ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end570.i

land.lhs.true61.i:                                ; preds = %if.end57.i
  %sk_userlocks.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %161 = ptrtoint ptr %sk_userlocks.i to i32
  call void @__asan_load1_noabort(i32 %161)
  %bf.load.i277 = load i8, ptr %sk_userlocks.i, align 8
  %162 = and i8 %bf.load.i277, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %162)
  %tobool63.not.i = icmp eq i8 %162, 0
  br i1 %tobool63.not.i, label %if.then64.i, label %land.lhs.true61.i.if.end570.i_crit_edge

land.lhs.true61.i.if.end570.i_crit_edge:          ; preds = %land.lhs.true61.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end570.i

if.then64.i:                                      ; preds = %land.lhs.true61.i
  %conv67.i = zext i32 %154 to i64
  %shl.i278 = shl nuw nsw i64 %conv67.i, 1
  %mul.i = shl i32 %150, 4
  %conv68.i = zext i32 %mul.i to i64
  %add69.i = add nuw nsw i64 %shl.i278, %conv68.i
  %sub.i279 = sub i32 %154, %156
  %conv74.i = zext i32 %sub.i279 to i64
  %mul75.i = mul i64 %add69.i, %conv74.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %mul75.i)
  %cmp260.i = icmp ult i64 %mul75.i, 4294967296
  br i1 %cmp260.i, label %if.then265.i, label %if.else271.i, !prof !340

if.then265.i:                                     ; preds = %if.then64.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv266.i = trunc i64 %mul75.i to i32
  %div269.i = udiv i32 %conv266.i, %156
  %conv270.i = zext i32 %div269.i to i64
  br label %if.end275.i

if.else271.i:                                     ; preds = %if.then64.i
  call void @__sanitizer_cov_trace_pc() #19
  %163 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %156, i64 %mul75.i) #20, !srcloc !342
  %asmresult1.i.i = extractvalue { i64, i64 } %163, 1
  br label %if.end275.i

if.end275.i:                                      ; preds = %if.else271.i, %if.then265.i
  %grow.0.i = phi i64 [ %conv270.i, %if.then265.i ], [ %asmresult1.i.i, %if.else271.i ]
  %add281.i = add i32 %150, 896
  %sysctl_tcp_adv_win_scale.i.i = getelementptr inbounds %struct.net, ptr %158, i32 0, i32 35, i32 85
  %164 = ptrtoint ptr %sysctl_tcp_adv_win_scale.i.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %sysctl_tcp_adv_win_scale.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %165)
  %cmp.i.i280 = icmp slt i32 %165, 1
  %sub.i808.i = sub i32 0, %165
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.while.cond.i_crit_edge, %if.end275.i
  %rcvmem.0.i = phi i32 [ %add281.i, %if.end275.i ], [ %add285.i, %while.cond.i.while.cond.i_crit_edge ]
  %shr.i809.i = ashr i32 %rcvmem.0.i, %sub.i808.i
  %shr1.i.i = ashr i32 %rcvmem.0.i, %165
  %sub2.i.i = sub i32 %rcvmem.0.i, %shr1.i.i
  %cond.i.i = select i1 %cmp.i.i280, i32 %shr.i809.i, i32 %sub2.i.i
  %cmp283.i = icmp ult i32 %cond.i.i, %150
  %add285.i = add i32 %rcvmem.0.i, 128
  br i1 %cmp283.i, label %while.cond.i.while.cond.i_crit_edge, label %while.end.i

while.cond.i.while.cond.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %while.cond.i

while.end.i:                                      ; preds = %while.cond.i
  %shl277.i = shl i64 %grow.0.i, 1
  %add278.i = add i64 %shl277.i, %add69.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %add278.i)
  %cmp487.i = icmp ult i64 %add278.i, 4294967296
  br i1 %cmp487.i, label %if.then495.i, label %if.else501.i, !prof !340

if.then495.i:                                     ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %conv496.i = trunc i64 %add278.i to i32
  %div499.i = udiv i32 %conv496.i, %150
  %conv500.i = zext i32 %div499.i to i64
  br label %if.end505.i

if.else501.i:                                     ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %166 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %150, i64 %add278.i) #20, !srcloc !342
  %asmresult1.i817.i = extractvalue { i64, i64 } %166, 1
  br label %if.end505.i

if.end505.i:                                      ; preds = %if.else501.i, %if.then495.i
  %rcvwin.0.i = phi i64 [ %conv500.i, %if.then495.i ], [ %asmresult1.i817.i, %if.else501.i ]
  %conv507.i = sext i32 %rcvmem.0.i to i64
  %mul508.i = mul i64 %rcvwin.0.i, %conv507.i
  %arrayidx.i = getelementptr %struct.net, ptr %158, i32 0, i32 35, i32 105, i32 2
  %167 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %arrayidx.i, align 8
  %conv511.i = sext i32 %168 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %mul508.i, i64 %conv511.i)
  %cmp513.i = icmp ult i64 %mul508.i, %conv511.i
  %extract.t.i = trunc i64 %mul508.i to i32
  %cond518.off0.i = select i1 %cmp513.i, i32 %extract.t.i, i32 %168
  %sk_rcvbuf.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 15
  %169 = ptrtoint ptr %sk_rcvbuf.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %sk_rcvbuf.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %cond518.off0.i, i32 %170)
  %cmp520.i = icmp sgt i32 %cond518.off0.i, %170
  br i1 %cmp520.i, label %for.body546.lr.ph.i, label %if.end505.i.if.end570.i_crit_edge

if.end505.i.if.end570.i_crit_edge:                ; preds = %if.end505.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end570.i

for.body546.lr.ph.i:                              ; preds = %if.end505.i
  %shr.i825.i = ashr i32 %cond518.off0.i, %sub.i808.i
  %shr1.i826.i = ashr i32 %cond518.off0.i, %165
  %sub2.i827.i = sub i32 %cond518.off0.i, %shr1.i826.i
  %cond.i828.i = select i1 %cmp.i.i280, i32 %shr.i825.i, i32 %sub2.i827.i
  %171 = ptrtoint ptr %sk_rcvbuf.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store volatile i32 %cond518.off0.i, ptr %sk_rcvbuf.i, align 8
  %172 = call ptr @llvm.returnaddress(i32 0) #17
  %173 = ptrtoint ptr %172 to i32
  br label %for.body546.i

for.body546.i:                                    ; preds = %unlock_sock_fast.exit.i.for.body546.i_crit_edge, %for.body546.lr.ph.i
  %subflow.1860.i = phi ptr [ %subflow.0852.i, %for.body546.lr.ph.i ], [ %subflow.1.i, %unlock_sock_fast.exit.i.for.body546.i_crit_edge ]
  %tcp_sock.i829.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.1860.i, i32 0, i32 5
  %174 = ptrtoint ptr %tcp_sock.i829.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %tcp_sock.i829.i, align 8
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %175, i32 0, i32 4, i32 3
  call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %173) #17
  %call.i.i281 = call zeroext i1 @__lock_sock_fast(ptr noundef %175) #17
  %sk_rcvbuf554.i = getelementptr inbounds %struct.sock, ptr %175, i32 0, i32 15
  %176 = ptrtoint ptr %sk_rcvbuf554.i to i32
  call void @__asan_store4_noabort(i32 %176)
  store volatile i32 %cond518.off0.i, ptr %sk_rcvbuf554.i, align 8
  %window_clamp560.i = getelementptr inbounds %struct.tcp_sock, ptr %175, i32 0, i32 29
  %177 = ptrtoint ptr %window_clamp560.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 %cond.i828.i, ptr %window_clamp560.i, align 8
  call void @tcp_cleanup_rbuf(ptr noundef %175, i32 noundef 1) #17
  br i1 %call.i.i281, label %if.then.i830.i, label %if.else.i.i

if.then.i830.i:                                   ; preds = %for.body546.i
  call void @__sanitizer_cov_trace_pc() #19
  call void @release_sock(ptr noundef %175) #17
  br label %unlock_sock_fast.exit.i

if.else.i.i:                                      ; preds = %for.body546.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %175, i32 0, i32 4
  call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %173) #17
  call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  br label %unlock_sock_fast.exit.i

unlock_sock_fast.exit.i:                          ; preds = %if.else.i.i, %if.then.i830.i
  %178 = ptrtoint ptr %subflow.1860.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %subflow.1.i = load ptr, ptr %subflow.1860.i, align 8
  %cmp542.not.i = icmp eq ptr %subflow.1.i, %conn_list.i273
  br i1 %cmp542.not.i, label %unlock_sock_fast.exit.i.if.end570.i_crit_edge, label %unlock_sock_fast.exit.i.for.body546.i_crit_edge

unlock_sock_fast.exit.i.for.body546.i_crit_edge:  ; preds = %unlock_sock_fast.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body546.i

unlock_sock_fast.exit.i.if.end570.i_crit_edge:    ; preds = %unlock_sock_fast.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end570.i

if.end570.i:                                      ; preds = %unlock_sock_fast.exit.i.if.end570.i_crit_edge, %if.end505.i.if.end570.i_crit_edge, %land.lhs.true61.i.if.end570.i_crit_edge, %if.end57.i.if.end570.i_crit_edge
  %179 = ptrtoint ptr %copied1.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load i32, ptr %copied1.i, align 4
  %181 = ptrtoint ptr %rcvq_space.i to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 %180, ptr %rcvq_space.i, align 8
  br label %new_measure.i

new_measure.i:                                    ; preds = %if.end570.i, %if.end50.i.new_measure.i_crit_edge
  %182 = ptrtoint ptr %copied1.i to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 0, ptr %copied1.i, align 4
  %183 = ptrtoint ptr %time4.i to i32
  call void @__asan_store8_noabort(i32 %183)
  store i64 %div158.i.i851.i, ptr %time4.i, align 8
  br label %if.end162

if.end162:                                        ; preds = %new_measure.i, %for.end.i.if.end162_crit_edge, %for.end.thread.i, %if.end.i272.if.end162_crit_edge, %sock_owned_by_me.exit.i.if.end162_crit_edge, %do.end158.if.end162_crit_edge
  call void @release_sock(ptr noundef %sk) #17
  br label %cleanup163

cleanup163:                                       ; preds = %if.end162, %if.then
  %retval.0 = phi i32 [ %call3, %if.then ], [ %copied.3303, %if.end162 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %timeo) #17
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %tss) #17
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mptcp_release_cb(ptr noundef %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %cb_flags = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 19
  %push_pending = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 20
  %0 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cb_flags, align 8
  %and57 = and i32 %1, 50
  %2 = ptrtoint ptr %push_pending to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %push_pending, align 4
  %or58 = or i32 %and57, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or58)
  %tobool.not59 = icmp eq i32 %or58, 0
  br i1 %tobool.not59, label %entry.for.end_crit_edge, label %if.end.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

if.end.lr.ph:                                     ; preds = %entry
  %sk_lock = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 4
  %join_list.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 37
  %conn_list.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34
  %prev.i2.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 34, i32 1
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %sk, i32 0, i32 4
  %sk_socket.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 71
  %sk_userlocks.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 43
  %sk_sndbuf1.i.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 21
  br label %if.end

if.end:                                           ; preds = %cleanup.if.end_crit_edge, %if.end.lr.ph
  %or60 = phi i32 [ %or58, %if.end.lr.ph ], [ %or, %cleanup.if.end_crit_edge ]
  %4 = phi i32 [ %1, %if.end.lr.ph ], [ %46, %cleanup.if.end_crit_edge ]
  %5 = ptrtoint ptr %push_pending to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %push_pending, align 4
  %neg = xor i32 %or60, -1
  %and3 = and i32 %4, %neg
  %6 = ptrtoint ptr %cb_flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %and3, ptr %cb_flags, align 8
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  %and4 = and i32 %or60, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %if.end.if.end7_crit_edge, label %if.then6

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.then6:                                         ; preds = %if.end
  %7 = ptrtoint ptr %join_list.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %join_list.i, align 4
  %cmp.not30.i = icmp eq ptr %8, %join_list.i
  br i1 %cmp.not30.i, label %if.then6.if.end7_crit_edge, label %for.body.lr.ph.i

if.then6.if.end7_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

for.body.lr.ph.i:                                 ; preds = %if.then6
  %9 = tail call ptr @llvm.returnaddress(i32 0) #17
  %10 = ptrtoint ptr %9 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %unlock_sock_fast.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %subflow.031.i = phi ptr [ %8, %for.body.lr.ph.i ], [ %tmp.033.i, %unlock_sock_fast.exit.i.for.body.i_crit_edge ]
  %11 = ptrtoint ptr %subflow.031.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %tmp.033.i = load ptr, ptr %subflow.031.i, align 8
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.031.i, i32 0, i32 5
  %12 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tcp_sock.i.i, align 8
  %dep_map.i.i = getelementptr inbounds %struct.sock, ptr %13, i32 0, i32 4, i32 3
  tail call void @lock_acquire(ptr noundef %dep_map.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %10) #17
  %call.i.i = tail call zeroext i1 @__lock_sock_fast(ptr noundef %13) #17
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %subflow.031.i) #17
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.__list_del_entry.exit.i.i_crit_edge

for.body.i.__list_del_entry.exit.i.i_crit_edge:   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #19
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %subflow.031.i, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i.i, align 4
  %16 = ptrtoint ptr %subflow.031.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %subflow.031.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %15, ptr %prev1.i.i.i.i, align 4
  %19 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %17, ptr %15, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %for.body.i.__list_del_entry.exit.i.i_crit_edge
  %20 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i2.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %subflow.031.i, ptr noundef %21, ptr noundef %conn_list.i) #17
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge

__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge: ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_move_tail.exit.i

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %22 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %subflow.031.i, ptr %prev.i2.i.i, align 4
  %23 = ptrtoint ptr %subflow.031.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %conn_list.i, ptr %subflow.031.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %subflow.031.i, i32 0, i32 1
  %24 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev3.i.i.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %subflow.031.i, ptr %21, align 4
  br label %list_move_tail.exit.i

list_move_tail.exit.i:                            ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.list_move_tail.exit.i_crit_edge
  %26 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load volatile i8, ptr %skc_state.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %27)
  %cmp.not.i.i = icmp eq i8 %27, 1
  br i1 %cmp.not.i.i, label %if.end.i.i, label %if.then.i

if.end.i.i:                                       ; preds = %list_move_tail.exit.i
  %28 = ptrtoint ptr %sk_socket.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sk_socket.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %29, null
  br i1 %tobool.not.i.i, label %if.end.i.i.if.end6.i.i_crit_edge, label %land.lhs.true.i.i

if.end.i.i.if.end6.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %sk_socket2.i.i = getelementptr inbounds %struct.sock, ptr %13, i32 0, i32 71
  %30 = ptrtoint ptr %sk_socket2.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sk_socket2.i.i, align 8
  %tobool3.not.i.i = icmp eq ptr %31, null
  br i1 %tobool3.not.i.i, label %if.then4.i.i, label %land.lhs.true.i.i.if.end6.i.i_crit_edge

land.lhs.true.i.i.if.end6.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end6.i.i

if.then4.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_callback_lock.i.i.i = getelementptr inbounds %struct.sock, ptr %13, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i.i.i) #17
  %wq.i.i.i = getelementptr inbounds %struct.socket, ptr %29, i32 0, i32 7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !361
  %32 = getelementptr inbounds %struct.sock, ptr %13, i32 0, i32 17
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %wq.i.i.i, ptr %32, align 8
  %34 = ptrtoint ptr %sk_socket2.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %29, ptr %sk_socket2.i.i, align 8
  %sk_uid.i.i.i = getelementptr inbounds %struct.sock, ptr %13, i32 0, i32 55
  %i_uid.i.i.i = getelementptr inbounds %struct.socket_alloc, ptr %29, i32 0, i32 1, i32 2
  %35 = ptrtoint ptr %i_uid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %i_uid.i.i.i, align 4
  %37 = ptrtoint ptr %sk_uid.i.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %sk_uid.i.i.i, align 4
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i.i.i) #17
  br label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.then4.i.i, %land.lhs.true.i.i.if.end6.i.i_crit_edge, %if.end.i.i.if.end6.i.i_crit_edge
  %38 = ptrtoint ptr %sk_userlocks.i.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %bf.load.i.i.i = load i8, ptr %sk_userlocks.i.i.i, align 8
  %39 = and i8 %bf.load.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool.not.i.i.i = icmp eq i8 %39, 0
  br i1 %tobool.not.i.i.i, label %lor.lhs.false.i.i.i, label %if.end6.i.i.__mptcp_finish_join.exit.thread.i_crit_edge

if.end6.i.i.__mptcp_finish_join.exit.thread.i_crit_edge: ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_finish_join.exit.thread.i

lor.lhs.false.i.i.i:                              ; preds = %if.end6.i.i
  %sk_sndbuf.i.i.i = getelementptr inbounds %struct.sock, ptr %13, i32 0, i32 21
  %40 = ptrtoint ptr %sk_sndbuf.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %sk_sndbuf.i.i.i, align 4
  %42 = ptrtoint ptr %sk_sndbuf1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %sk_sndbuf1.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %41, i32 %43)
  %cmp.not.i.i.i = icmp sgt i32 %41, %43
  br i1 %cmp.not.i.i.i, label %do.body6.i.i.i, label %lor.lhs.false.i.i.i.__mptcp_finish_join.exit.thread.i_crit_edge

lor.lhs.false.i.i.i.__mptcp_finish_join.exit.thread.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_finish_join.exit.thread.i

do.body6.i.i.i:                                   ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  %44 = ptrtoint ptr %sk_sndbuf1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile i32 %41, ptr %sk_sndbuf1.i.i.i, align 4
  br label %__mptcp_finish_join.exit.thread.i

__mptcp_finish_join.exit.thread.i:                ; preds = %do.body6.i.i.i, %lor.lhs.false.i.i.i.__mptcp_finish_join.exit.thread.i_crit_edge, %if.end6.i.i.__mptcp_finish_join.exit.thread.i_crit_edge
  tail call void @mptcp_sockopt_sync_locked(ptr noundef %sk, ptr noundef %13) #17
  br label %if.end.i

if.then.i:                                        ; preds = %list_move_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @mptcp_subflow_reset(ptr noundef %13) #17
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %__mptcp_finish_join.exit.thread.i
  br i1 %call.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @release_sock(ptr noundef %13) #17
  br label %unlock_sock_fast.exit.i

if.else.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #19
  %sk_lock.i.i = getelementptr inbounds %struct.sock, ptr %13, i32 0, i32 4
  tail call void @lock_release(ptr noundef %dep_map.i.i, i32 noundef %10) #17
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock.i.i) #17
  br label %unlock_sock_fast.exit.i

unlock_sock_fast.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %cmp.not.i = icmp eq ptr %tmp.033.i, %join_list.i
  br i1 %cmp.not.i, label %unlock_sock_fast.exit.i.if.end7_crit_edge, label %unlock_sock_fast.exit.i.for.body.i_crit_edge

unlock_sock_fast.exit.i.for.body.i_crit_edge:     ; preds = %unlock_sock_fast.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body.i

unlock_sock_fast.exit.i.if.end7_crit_edge:        ; preds = %unlock_sock_fast.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end7

if.end7:                                          ; preds = %unlock_sock_fast.exit.i.if.end7_crit_edge, %if.then6.if.end7_crit_edge, %if.end.if.end7_crit_edge
  %and8 = and i32 %or60, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end7.if.end11_crit_edge, label %if.then10

if.end7.if.end11_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end11

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mptcp_push_pending(ptr noundef %sk, i32 noundef 0)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7.if.end11_crit_edge
  %and12 = and i32 %or60, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %if.end11.cleanup_crit_edge, label %if.then14

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @__mptcp_retrans(ptr noundef %sk)
  br label %cleanup

cleanup:                                          ; preds = %if.then14, %if.end11.cleanup_crit_edge
  tail call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 3086, i32 noundef 0) #17
  %call.i = tail call i32 @__cond_resched() #17
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  %45 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cb_flags, align 8
  %and = and i32 %46, 50
  %47 = ptrtoint ptr %push_pending to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %push_pending, align 4
  %or = or i32 %and, %48
  %tobool.not = icmp eq i32 %or, 0
  br i1 %tobool.not, label %cleanup.for.end_crit_edge, label %cleanup.if.end_crit_edge

cleanup.if.end_crit_edge:                         ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %entry.for.end_crit_edge
  %49 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cb_flags, align 4
  %and.i = and i32 %50, -65
  store i32 %and.i, ptr %cb_flags, align 4
  %51 = and i32 %50, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool21.not = icmp eq i32 %51, 0
  br i1 %tobool21.not, label %for.end.if.end23_crit_edge, label %if.then22

for.end.if.end23_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end23

if.then22:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mptcp_set_connected(ptr noundef %sk) #17
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %for.end.if.end23_crit_edge
  %52 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %cb_flags, align 4
  %and.i53 = and i32 %53, -5
  store i32 %and.i53, ptr %cb_flags, align 4
  %54 = and i32 %53, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool26.not = icmp eq i32 %54, 0
  br i1 %tobool26.not, label %if.end23.if.end28_crit_edge, label %if.then27

if.end23.if.end28_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end28

if.then27:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  tail call fastcc void @__mptcp_clean_una_wakeup(ptr noundef %sk)
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end23.if.end28_crit_edge
  %55 = ptrtoint ptr %cb_flags to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %cb_flags, align 4
  %and.i54 = and i32 %56, -9
  store i32 %and.i54, ptr %cb_flags, align 4
  %57 = and i32 %56, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool31.not = icmp eq i32 %57, 0
  br i1 %tobool31.not, label %if.end28.if.end33_crit_edge, label %if.then32

if.end28.if.end33_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end33

if.then32:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mptcp_error_report(ptr noundef %sk) #17
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %if.end28.if.end33_crit_edge
  tail call fastcc void @__mptcp_update_rmem(ptr noundef %sk)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_hash(ptr nocapture noundef readnone %sk) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %.b35 = load i1, ptr @mptcp_hash.__already_done, align 1
  br i1 %.b35, label %entry.if.end25_crit_edge, label %if.then, !prof !340

entry.if.end25_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end25

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_hash.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 3154, i32 noundef 9, ptr noundef null) #17
  br label %if.end25

if.end25:                                         ; preds = %if.then, %entry.if.end25_crit_edge
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mptcp_unhash(ptr nocapture noundef %sk) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_get_port(ptr noundef %sk, i16 noundef zeroext %snum) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %subflow.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 38
  %0 = ptrtoint ptr %subflow.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %subflow.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.__mptcp_nmpc_socket.exit_crit_edge, label %do.end.i

entry.__mptcp_nmpc_socket.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_nmpc_socket.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  %can_ack.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 22
  %2 = ptrtoint ptr %can_ack.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load volatile i8, ptr %can_ack.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not.i = icmp eq i8 %3, 0
  %spec.select.i = select i1 %tobool1.not.i, ptr %1, ptr null
  br label %__mptcp_nmpc_socket.exit

__mptcp_nmpc_socket.exit:                         ; preds = %do.end.i, %entry.__mptcp_nmpc_socket.exit_crit_edge
  %retval.0.i70 = phi ptr [ null, %entry.__mptcp_nmpc_socket.exit_crit_edge ], [ %spec.select.i, %do.end.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_get_port.__UNIQUE_ID_ddebug772, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_get_port, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %__mptcp_nmpc_socket.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_get_port.__UNIQUE_ID_ddebug772, ptr noundef nonnull @.str.12, ptr noundef %sk, ptr noundef %retval.0.i70) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %__mptcp_nmpc_socket.exit
  %tobool5.not = icmp eq ptr %retval.0.i70, null
  br i1 %tobool5.not, label %land.rhs, label %if.end59

land.rhs:                                         ; preds = %do.end
  %.b68 = load i1, ptr @mptcp_get_port.__already_done, align 1
  br i1 %.b68, label %land.rhs.cleanup_crit_edge, label %if.then23, !prof !340

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then23:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_get_port.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 3170, i32 noundef 9, ptr noundef null) #17
  br label %cleanup

if.end59:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  %sk60 = getelementptr inbounds %struct.socket, ptr %retval.0.i70, i32 0, i32 4
  %4 = ptrtoint ptr %sk60 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk60, align 16
  %call61 = tail call i32 @inet_csk_get_port(ptr noundef %5, i16 noundef zeroext %snum) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end59, %if.then23, %land.rhs.cleanup_crit_edge
  %retval.0 = phi i32 [ %call61, %if.end59 ], [ -22, %if.then23 ], [ -22, %land.rhs.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mptcp_forward_alloc_get(ptr nocapture noundef readonly %sk) #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk_forward_alloc = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 11
  %0 = ptrtoint ptr %sk_forward_alloc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sk_forward_alloc, align 8
  %rmem_fwd_alloc = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 8
  %2 = ptrtoint ptr %rmem_fwd_alloc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rmem_fwd_alloc, align 8
  %add = add i32 %3, %1
  ret i32 %add
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_stream_wait_close(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_pm_data_reset(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sk_error_report(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_assign_congestion_control(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_cleanup_congestion_control(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @inet_csk_accept(ptr noundef, i32 noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__mptcp_move_skbs(ptr noundef %msk) unnamed_addr #0 align 64 {
entry:
  %moved = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %moved) #17
  %0 = ptrtoint ptr %moved to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %moved, align 4
  %dep_map.i.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 4, i32 3
  %dep_map2.i.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 4, i32 0, i32 0, i32 0, i32 4
  %conn_list.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 34
  %sk_lock = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 4
  br label %do.body

do.body:                                          ; preds = %cleanup.do.body_crit_edge, %entry
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %lockdep_sock_is_held.exit.i.i, label %do.body.for.cond.i.preheader_crit_edge

do.body.for.cond.i.preheader_crit_edge:           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i.preheader

lockdep_sock_is_held.exit.i.i:                    ; preds = %do.body
  %call.i6.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map2.i.i.i, i32 noundef -1) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i6.i.i.i)
  %tobool4.i.not.i.i = icmp eq i32 %call.i6.i.i.i, 0
  br i1 %tobool4.i.not.i.i, label %land.rhs.i.i, label %lockdep_sock_is_held.exit.i.i.for.cond.i.preheader_crit_edge

lockdep_sock_is_held.exit.i.i.for.cond.i.preheader_crit_edge: ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i.preheader

land.rhs.i.i:                                     ; preds = %lockdep_sock_is_held.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i.i, label %land.rhs.i.i.for.cond.i.preheader_crit_edge, label %land.rhs3.i.i

land.rhs.i.i.for.cond.i.preheader_crit_edge:      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i.preheader

land.rhs3.i.i:                                    ; preds = %land.rhs.i.i
  %.b40.i.i = load i1, ptr @sock_owned_by_me.__already_done, align 1
  br i1 %.b40.i.i, label %land.rhs3.i.i.for.cond.i.preheader_crit_edge, label %if.then.i.i, !prof !340

land.rhs3.i.i.for.cond.i.preheader_crit_edge:     ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i.preheader

if.then.i.i:                                      ; preds = %land.rhs3.i.i
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @sock_owned_by_me.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.75, i32 noundef 1750, i32 noundef 9, ptr noundef null) #17
  br label %for.cond.i.preheader

for.cond.i.preheader:                             ; preds = %if.then.i.i, %land.rhs3.i.i.for.cond.i.preheader_crit_edge, %land.rhs.i.i.for.cond.i.preheader_crit_edge, %lockdep_sock_is_held.exit.i.i.for.cond.i.preheader_crit_edge, %do.body.for.cond.i.preheader_crit_edge
  br label %for.cond.i

for.cond.i:                                       ; preds = %do.end.i.for.cond.i_crit_edge, %for.cond.i.preheader
  %subflow.0.in.i = phi ptr [ %subflow.0.i, %do.end.i.for.cond.i_crit_edge ], [ %conn_list.i, %for.cond.i.preheader ]
  %2 = ptrtoint ptr %subflow.0.in.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %subflow.0.i = load ptr, ptr %subflow.0.in.i, align 8
  %cmp.not.i = icmp eq ptr %subflow.0.i, %conn_list.i
  br i1 %cmp.not.i, label %for.cond.i.do.end_crit_edge, label %do.end.i

for.cond.i.do.end_crit_edge:                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

do.end.i:                                         ; preds = %for.cond.i
  %data_avail.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0.i, i32 0, i32 1, i32 0, i32 14
  %3 = ptrtoint ptr %data_avail.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %data_avail.i, align 4
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %do.end.i.for.cond.i_crit_edge, label %mptcp_subflow_recv_lookup.exit

do.end.i.for.cond.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.cond.i

mptcp_subflow_recv_lookup.exit:                   ; preds = %do.end.i
  %tcp_sock.i.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.0.i, i32 0, i32 5
  %5 = ptrtoint ptr %tcp_sock.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tcp_sock.i.i, align 8
  %tobool.not = icmp eq ptr %6, null
  br i1 %tobool.not, label %mptcp_subflow_recv_lookup.exit.do.end_crit_edge, label %if.end, !prof !340

mptcp_subflow_recv_lookup.exit.do.end_crit_edge:  ; preds = %mptcp_subflow_recv_lookup.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

if.end:                                           ; preds = %mptcp_subflow_recv_lookup.exit
  %call4 = tail call fastcc zeroext i1 @lock_sock_fast(ptr noundef nonnull %6)
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  tail call fastcc void @__mptcp_update_rmem(ptr noundef %msk)
  %call5 = call fastcc zeroext i1 @__mptcp_move_skbs_from_subflow(ptr noundef %msk, ptr noundef nonnull %6, ptr noundef nonnull %moved)
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  %sk_err = getelementptr inbounds %struct.sock, ptr %6, i32 0, i32 51
  %7 = ptrtoint ptr %sk_err to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sk_err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool9.not = icmp eq i32 %8, 0
  br i1 %tobool9.not, label %if.end.cleanup_crit_edge, label %if.then16, !prof !340

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then16:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @__mptcp_error_report(ptr noundef %msk) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then16, %if.end.cleanup_crit_edge
  tail call fastcc void @unlock_sock_fast(ptr noundef nonnull %6, i1 noundef zeroext %call4)
  br i1 %call5, label %cleanup.do.end_crit_edge, label %cleanup.do.body_crit_edge

cleanup.do.body_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.body

cleanup.do.end_crit_edge:                         ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end

do.end:                                           ; preds = %cleanup.do.end_crit_edge, %mptcp_subflow_recv_lookup.exit.do.end_crit_edge, %for.cond.i.do.end_crit_edge
  %9 = ptrtoint ptr %moved to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %moved, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp = icmp ne i32 %10, 0
  %out_of_order_queue = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 32
  %11 = ptrtoint ptr %out_of_order_queue to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %out_of_order_queue, align 4
  %cmp27 = icmp eq ptr %12, null
  br i1 %cmp27, label %lor.lhs.false, label %do.end.if.then29_crit_edge

do.end.if.then29_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29

lor.lhs.false:                                    ; preds = %do.end
  %sk_receive_queue = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8
  %13 = ptrtoint ptr %sk_receive_queue to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %sk_receive_queue, align 4
  %cmp.i = icmp eq ptr %14, %sk_receive_queue
  br i1 %cmp.i, label %if.end39, label %lor.lhs.false.if.then29_crit_edge

lor.lhs.false.if.then29_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then29

if.then29:                                        ; preds = %lor.lhs.false.if.then29_crit_edge, %do.end.if.then29_crit_edge
  tail call void @_raw_spin_lock_bh(ptr noundef %sk_lock) #17
  tail call fastcc void @__mptcp_update_rmem(ptr noundef %msk)
  %call32 = tail call fastcc zeroext i1 @__mptcp_ofo_queue(ptr noundef %msk)
  %or73 = or i1 %cmp, %call32
  %sk_receive_queue.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8
  %15 = ptrtoint ptr %sk_receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sk_receive_queue.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %16, %sk_receive_queue.i
  br i1 %cmp.i.not.i.i, label %if.then29.__mptcp_splice_receive_queue.exit_crit_edge, label %if.then.i.i74

if.then29.__mptcp_splice_receive_queue.exit_crit_edge: ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #19
  br label %__mptcp_splice_receive_queue.exit

if.then.i.i74:                                    ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #19
  %receive_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 33
  %prev.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 33, i32 0, i32 0, i32 1
  %17 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %prev.i.i, align 4
  %prev2.i.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 0, i32 0, i32 1
  %19 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev2.i.i.i, align 4
  %prev5.i.i.i = getelementptr inbounds %struct.anon.50, ptr %16, i32 0, i32 1
  %21 = ptrtoint ptr %prev5.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %18, ptr %prev5.i.i.i, align 4
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %16, ptr %18, align 8
  %23 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %receive_queue.i, ptr %20, align 8
  store volatile ptr %20, ptr %prev.i.i, align 4
  %qlen.i.i = getelementptr inbounds %struct.sock, ptr %msk, i32 0, i32 8, i32 1
  %24 = ptrtoint ptr %qlen.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %qlen.i.i, align 4
  %qlen1.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 33, i32 1
  %26 = ptrtoint ptr %qlen1.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %qlen1.i.i, align 4
  %add.i.i = add i32 %27, %25
  store i32 %add.i.i, ptr %qlen1.i.i, align 4
  %28 = ptrtoint ptr %sk_receive_queue.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %sk_receive_queue.i, ptr %sk_receive_queue.i, align 4
  store ptr %sk_receive_queue.i, ptr %prev2.i.i.i, align 4
  store i32 0, ptr %qlen.i.i, align 4
  br label %__mptcp_splice_receive_queue.exit

__mptcp_splice_receive_queue.exit:                ; preds = %if.then.i.i74, %if.then29.__mptcp_splice_receive_queue.exit_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef %sk_lock) #17
  br i1 %or73, label %__mptcp_splice_receive_queue.exit.if.then41_crit_edge, label %__mptcp_splice_receive_queue.exit.if.end43_crit_edge

__mptcp_splice_receive_queue.exit.if.end43_crit_edge: ; preds = %__mptcp_splice_receive_queue.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

__mptcp_splice_receive_queue.exit.if.then41_crit_edge: ; preds = %__mptcp_splice_receive_queue.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then41

if.end39:                                         ; preds = %lor.lhs.false
  br i1 %cmp, label %if.end39.if.then41_crit_edge, label %if.end39.if.end43_crit_edge

if.end39.if.end43_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end43

if.end39.if.then41_crit_edge:                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then41

if.then41:                                        ; preds = %if.end39.if.then41_crit_edge, %__mptcp_splice_receive_queue.exit.if.then41_crit_edge
  tail call fastcc void @mptcp_check_data_fin(ptr noundef %msk)
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.end39.if.end43_crit_edge, %__mptcp_splice_receive_queue.exit.if.end43_crit_edge
  %receive_queue = getelementptr inbounds %struct.mptcp_sock, ptr %msk, i32 0, i32 33
  %29 = ptrtoint ptr %receive_queue to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %receive_queue, align 4
  %cmp.i75 = icmp ne ptr %30, %receive_queue
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %moved) #17
  ret i1 %cmp.i75
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__mptcp_update_rmem(ptr noundef %sk) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %rmem_released = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 17
  %0 = ptrtoint ptr %rmem_released to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rmem_released, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %sk_backlog = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %sk_backlog, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %sk_backlog, i32 1, i32 3, i32 1) #17
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %sk_backlog, ptr %sk_backlog, i32 %1, ptr elementtype(i32) %sk_backlog) #17, !srcloc !363
  %3 = ptrtoint ptr %rmem_released to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rmem_released, align 8
  %rmem_fwd_alloc.i = getelementptr inbounds %struct.mptcp_sock, ptr %sk, i32 0, i32 8
  %5 = ptrtoint ptr %rmem_fwd_alloc.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %rmem_fwd_alloc.i, align 8
  %add.i = add i32 %6, %4
  store i32 %add.i, ptr %rmem_fwd_alloc.i, align 8
  %sk_reserved_mem.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 12
  %7 = ptrtoint ptr %sk_reserved_mem.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sk_reserved_mem.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i.i, label %if.end.sk_unused_reserved_mem.exit.i_crit_edge, label %if.end.i.i, !prof !340

if.end.sk_unused_reserved_mem.exit.i_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_unused_reserved_mem.exit.i

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %sk_wmem_queued.i.i = getelementptr inbounds %struct.sock, ptr %sk, i32 0, i32 22
  %9 = ptrtoint ptr %sk_wmem_queued.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sk_wmem_queued.i.i, align 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %sk_backlog, i32 noundef 4) #17
  %11 = ptrtoint ptr %sk_backlog to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %sk_backlog, align 4
  %13 = add i32 %10, %12
  %sub5.i.i = sub i32 %8, %13
  %14 = tail call i32 @llvm.smax.i32(i32 %sub5.i.i, i32 0) #17
  br label %sk_unused_reserved_mem.exit.i

sk_unused_reserved_mem.exit.i:                    ; preds = %if.end.i.i, %if.end.sk_unused_reserved_mem.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %14, %if.end.i.i ], [ 0, %if.end.sk_unused_reserved_mem.exit.i_crit_edge ]
  %sub.i = sub i32 %add.i, %retval.0.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097151, i32 %sub.i)
  %cmp.i = icmp sgt i32 %sub.i, 2097151
  br i1 %cmp.i, label %if.then.i, label %sk_unused_reserved_mem.exit.i.mptcp_rmem_uncharge.exit_crit_edge, !prof !341

sk_unused_reserved_mem.exit.i.mptcp_rmem_uncharge.exit_crit_edge: ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_rmem_uncharge.exit

if.then.i:                                        ; preds = %sk_unused_reserved_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %15 = ptrtoint ptr %rmem_fwd_alloc.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %rmem_fwd_alloc.i, align 8
  %sub.i.i = add i32 %16, -1048576
  store i32 %sub.i.i, ptr %rmem_fwd_alloc.i, align 8
  tail call void @__sk_mem_reduce_allocated(ptr noundef %sk, i32 noundef 256) #17
  br label %mptcp_rmem_uncharge.exit

mptcp_rmem_uncharge.exit:                         ; preds = %if.then.i, %sk_unused_reserved_mem.exit.i.mptcp_rmem_uncharge.exit_crit_edge
  %17 = ptrtoint ptr %rmem_released to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 0, ptr %rmem_released, align 8
  br label %cleanup

cleanup:                                          ; preds = %mptcp_rmem_uncharge.exit, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mptcp_is_enabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mptcp_mib_alloc(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mptcp_subflow_create_socket(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_add_batch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_stream_wait_connect(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @copy_page_from_iter(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_stream_wait_memory(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @skb_page_frag_refill(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_recv_error(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sk_wait_data(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_recv_timestamp(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @put_cmsg(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_update_recv_tstamps(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @skb_copy_datagram_iter(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tcp_cleanup_rbuf(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mptcp_set_connected(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_subflow_reset(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_csk_get_port(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_napi_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_complete_done(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_release(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_bind(ptr nocapture noundef readonly %sock, ptr noundef %uaddr, i32 noundef %addr_len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  tail call void @lock_sock_nested(ptr noundef %1, i32 noundef 0) #17
  %subflow.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 38
  %2 = ptrtoint ptr %subflow.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %subflow.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.unlock_crit_edge, label %do.end.i

entry.unlock_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

do.end.i:                                         ; preds = %entry
  %can_ack.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 22
  %4 = ptrtoint ptr %can_ack.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load volatile i8, ptr %can_ack.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not.i = icmp eq i8 %5, 0
  br i1 %tobool1.not.i, label %if.end, label %do.end.i.unlock_crit_edge

do.end.i.unlock_crit_edge:                        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

if.end:                                           ; preds = %do.end.i
  %ops = getelementptr inbounds %struct.socket, ptr %3, i32 0, i32 5
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %bind = getelementptr inbounds %struct.proto_ops, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %bind to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bind, align 4
  %call3 = tail call i32 %9(ptr noundef nonnull %3, ptr noundef %uaddr, i32 noundef %addr_len) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.then5, label %if.end.unlock_crit_edge

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

if.then5:                                         ; preds = %if.end
  %10 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sk, align 16
  %sk7 = getelementptr inbounds %struct.socket, ptr %3, i32 0, i32 4
  %12 = ptrtoint ptr %sk7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sk7, align 16
  %skc_state.i.i.i = getelementptr inbounds %struct.sock_common, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %skc_state.i.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load volatile i8, ptr %skc_state.i.i.i, align 2
  %conv.i.i.i = zext i8 %15 to i32
  %shl.i.i.i = shl nuw i32 1, %conv.i.i.i
  %and.i.i.i = and i32 %shl.i.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.then5.inet6_sk.exit.i_crit_edge, label %cond.true.i.i

if.then5.inet6_sk.exit.i_crit_edge:               ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit.i

cond.true.i.i:                                    ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i.i = getelementptr inbounds %struct.inet_sock, ptr %13, i32 0, i32 1
  %16 = ptrtoint ptr %pinet6.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pinet6.i.i, align 8
  br label %inet6_sk.exit.i

inet6_sk.exit.i:                                  ; preds = %cond.true.i.i, %if.then5.inet6_sk.exit.i_crit_edge
  %cond.i.i = phi ptr [ %17, %cond.true.i.i ], [ null, %if.then5.inet6_sk.exit.i_crit_edge ]
  %skc_state.i.i63.i = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 4
  %18 = ptrtoint ptr %skc_state.i.i63.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load volatile i8, ptr %skc_state.i.i63.i, align 2
  %conv.i.i64.i = zext i8 %19 to i32
  %shl.i.i65.i = shl nuw i32 1, %conv.i.i64.i
  %and.i.i66.i = and i32 %shl.i.i65.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i66.i)
  %tobool.i.not.i67.i = icmp eq i32 %and.i.i66.i, 0
  br i1 %tobool.i.not.i67.i, label %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge, label %cond.true.i69.i

inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge:      ; preds = %inet6_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit71.i

cond.true.i69.i:                                  ; preds = %inet6_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i68.i = getelementptr inbounds %struct.inet_sock, ptr %11, i32 0, i32 1
  %20 = ptrtoint ptr %pinet6.i68.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pinet6.i68.i, align 8
  br label %inet6_sk.exit71.i

inet6_sk.exit71.i:                                ; preds = %cond.true.i69.i, %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge
  %cond.i70.i = phi ptr [ %21, %cond.true.i69.i ], [ null, %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge ]
  %skc_v6_daddr.i = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 10
  %skc_v6_daddr3.i = getelementptr inbounds %struct.sock_common, ptr %13, i32 0, i32 10
  %22 = call ptr @memcpy(ptr %skc_v6_daddr.i, ptr %skc_v6_daddr3.i, i32 16)
  %skc_v6_rcv_saddr.i = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 11
  %skc_v6_rcv_saddr6.i = getelementptr inbounds %struct.sock_common, ptr %13, i32 0, i32 11
  %23 = call ptr @memcpy(ptr %skc_v6_rcv_saddr.i, ptr %skc_v6_rcv_saddr6.i, i32 16)
  %tobool.not.i17 = icmp eq ptr %cond.i70.i, null
  %tobool7.not.i = icmp eq ptr %cond.i.i, null
  %or.cond.i = select i1 %tobool.not.i17, i1 true, i1 %tobool7.not.i
  br i1 %or.cond.i, label %inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge, label %if.then.i

inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge: ; preds = %inet6_sk.exit71.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_copy_inaddrs.exit

if.then.i:                                        ; preds = %inet6_sk.exit71.i
  call void @__sanitizer_cov_trace_pc() #19
  %24 = call ptr @memcpy(ptr %cond.i70.i, ptr %cond.i.i, i32 16)
  %flow_label.i = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i.i, i32 0, i32 4
  %25 = ptrtoint ptr %flow_label.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %flow_label.i, align 4
  %flow_label9.i = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i70.i, i32 0, i32 4
  %27 = ptrtoint ptr %flow_label9.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %flow_label9.i, align 4
  br label %mptcp_copy_inaddrs.exit

mptcp_copy_inaddrs.exit:                          ; preds = %if.then.i, %inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge
  %28 = getelementptr inbounds %struct.sock_common, ptr %13, i32 0, i32 2
  %skc_num.i = getelementptr inbounds %struct.anon.6, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %skc_num.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %skc_num.i, align 2
  %31 = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 2
  %skc_num15.i = getelementptr inbounds %struct.anon.6, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %skc_num15.i to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %30, ptr %skc_num15.i, align 2
  %33 = ptrtoint ptr %28 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %28, align 4
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %34, ptr %31, align 4
  %inet_sport.i = getelementptr inbounds %struct.inet_sock, ptr %13, i32 0, i32 6
  %36 = ptrtoint ptr %inet_sport.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %inet_sport.i, align 8
  %inet_sport25.i = getelementptr inbounds %struct.inet_sock, ptr %11, i32 0, i32 6
  %38 = ptrtoint ptr %inet_sport25.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %inet_sport25.i, align 8
  %39 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %13, align 8
  %41 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %11, align 8
  %inet_saddr.i = getelementptr inbounds %struct.inet_sock, ptr %13, i32 0, i32 2
  %42 = ptrtoint ptr %inet_saddr.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %inet_saddr.i, align 4
  %inet_saddr35.i = getelementptr inbounds %struct.inet_sock, ptr %11, i32 0, i32 2
  %44 = ptrtoint ptr %inet_saddr35.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %inet_saddr35.i, align 4
  %skc_rcv_saddr.i = getelementptr inbounds %struct.anon.3, ptr %13, i32 0, i32 1
  %45 = ptrtoint ptr %skc_rcv_saddr.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %skc_rcv_saddr.i, align 4
  %skc_rcv_saddr42.i = getelementptr inbounds %struct.anon.3, ptr %11, i32 0, i32 1
  %47 = ptrtoint ptr %skc_rcv_saddr42.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %skc_rcv_saddr42.i, align 4
  br label %unlock

unlock:                                           ; preds = %mptcp_copy_inaddrs.exit, %if.end.unlock_crit_edge, %do.end.i.unlock_crit_edge, %entry.unlock_crit_edge
  %err.0 = phi i32 [ %call3, %if.end.unlock_crit_edge ], [ 0, %mptcp_copy_inaddrs.exit ], [ -22, %entry.unlock_crit_edge ], [ -22, %do.end.i.unlock_crit_edge ]
  %48 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %sk, align 16
  tail call void @release_sock(ptr noundef %49) #17
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_stream_connect(ptr nocapture noundef %sock, ptr noundef %uaddr, i32 noundef %addr_len, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  tail call void @lock_sock_nested(ptr noundef %1, i32 noundef 0) #17
  %tobool.not = icmp eq ptr %uaddr, null
  br i1 %tobool.not, label %entry.if.end10_crit_edge, label %if.then

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %addr_len)
  %cmp = icmp ult i32 %addr_len, 2
  br i1 %cmp, label %if.then.unlock_crit_edge, label %if.end

if.then.unlock_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

if.end:                                           ; preds = %if.then
  %2 = ptrtoint ptr %uaddr to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %uaddr, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %cmp3 = icmp eq i16 %3, 0
  br i1 %cmp3, label %if.then5, label %if.end.if.end10_crit_edge

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end10

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #19
  %4 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sk, align 16
  %call7 = tail call i32 @mptcp_disconnect(ptr noundef %5, i32 noundef %flags)
  %6 = ptrtoint ptr %sock to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1, ptr %sock, align 128
  br label %unlock

if.end10:                                         ; preds = %if.end.if.end10_crit_edge, %entry.if.end10_crit_edge
  %7 = ptrtoint ptr %sock to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sock, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp12.not = icmp eq i32 %8, 1
  br i1 %cmp12.not, label %if.end10.if.end18_crit_edge, label %land.lhs.true

if.end10.if.end18_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

land.lhs.true:                                    ; preds = %if.end10
  %subflow14 = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 38
  %9 = ptrtoint ptr %subflow14 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %subflow14, align 4
  %tobool15.not = icmp eq ptr %10, null
  br i1 %tobool15.not, label %land.lhs.true.if.end18_crit_edge, label %land.lhs.true.do_connect_crit_edge

land.lhs.true.do_connect_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %do_connect

land.lhs.true.if.end18_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end18

if.end18:                                         ; preds = %land.lhs.true.if.end18_crit_edge, %if.end10.if.end18_crit_edge
  %subflow.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 38
  %11 = ptrtoint ptr %subflow.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %subflow.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.end18.unlock_crit_edge, label %do.end.i

if.end18.unlock_crit_edge:                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

do.end.i:                                         ; preds = %if.end18
  %can_ack.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 22
  %13 = ptrtoint ptr %can_ack.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load volatile i8, ptr %can_ack.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool1.not.i = icmp eq i8 %14, 0
  br i1 %tobool1.not.i, label %if.end22, label %do.end.i.unlock_crit_edge

do.end.i.unlock_crit_edge:                        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

if.end22:                                         ; preds = %do.end.i
  tail call void @mptcp_token_destroy(ptr noundef %1) #17
  %15 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sk, align 16
  tail call void @inet_sk_state_store(ptr noundef %16, i32 noundef 2) #17
  %sk24 = getelementptr inbounds %struct.socket, ptr %12, i32 0, i32 4
  %17 = ptrtoint ptr %sk24 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sk24, align 16
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %18, i32 0, i32 13
  %19 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %icsk_ulp_data.i, align 8
  %md5sig_info = getelementptr inbounds %struct.tcp_sock, ptr %18, i32 0, i32 118
  %21 = ptrtoint ptr %md5sig_info to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %md5sig_info, align 4
  %tobool29.not = icmp eq ptr %22, null
  br i1 %tobool29.not, label %if.end22.if.end31_crit_edge, label %if.then30

if.end22.if.end31_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end31

if.then30:                                        ; preds = %if.end22
  %request_mptcp.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %20, i32 0, i32 1, i32 0, i32 13
  %23 = ptrtoint ptr %request_mptcp.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %bf.load.i = load i32, ptr %request_mptcp.i, align 8
  %bf.clear.i = and i32 %bf.load.i, 2147483647
  store i32 %bf.clear.i, ptr %request_mptcp.i, align 8
  %flags.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 18
  %24 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %flags.i.i, align 4
  %26 = and i32 %25, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i.i = icmp eq i32 %26, 0
  br i1 %tobool.not.i.i, label %if.end6.i.i, label %do.body.i.i

do.body.i.i:                                      ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_do_fallback.__UNIQUE_ID_ddebug629, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_stream_connect, %if.then5.i.i)) #17
          to label %if.end31 [label %if.then5.i.i], !srcloc !350

if.then5.i.i:                                     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_do_fallback.__UNIQUE_ID_ddebug629, ptr noundef nonnull @.str.133, ptr noundef %1) #17
  br label %if.end31

if.end6.i.i:                                      ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @_set_bit(i32 noundef 4, ptr noundef %flags.i.i) #17
  br label %if.end31

if.end31:                                         ; preds = %if.end6.i.i, %if.then5.i.i, %do.body.i.i, %if.end22.if.end31_crit_edge
  %request_mptcp = getelementptr inbounds %struct.mptcp_subflow_context, ptr %20, i32 0, i32 1, i32 0, i32 13
  %27 = ptrtoint ptr %request_mptcp to i32
  call void @__asan_load4_noabort(i32 %27)
  %bf.load = load i32, ptr %request_mptcp, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bf.load)
  %tobool32.not = icmp sgt i32 %bf.load, -1
  br i1 %tobool32.not, label %if.end31.if.end40_crit_edge, label %land.lhs.true33

if.end31.if.end40_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

land.lhs.true33:                                  ; preds = %if.end31
  %28 = ptrtoint ptr %sk24 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %sk24, align 16
  %call35 = tail call i32 @mptcp_token_new_connect(ptr noundef %29) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %land.lhs.true33.if.end40_crit_edge, label %if.then37

land.lhs.true33.if.end40_crit_edge:               ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end40

if.then37:                                        ; preds = %land.lhs.true33
  %30 = ptrtoint ptr %sk24 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sk24, align 16
  %skc_net.i = getelementptr inbounds %struct.sock_common, ptr %31, i32 0, i32 9
  %32 = ptrtoint ptr %skc_net.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %skc_net.i, align 4
  %mptcp_statistics.i = getelementptr inbounds %struct.net, ptr %33, i32 0, i32 30, i32 8
  %34 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mptcp_statistics.i, align 4
  %tobool.not.i97 = icmp eq ptr %35, null
  br i1 %tobool.not.i97, label %if.then37.MPTCP_INC_STATS.exit_crit_edge, label %do.body3.i, !prof !341

if.then37.MPTCP_INC_STATS.exit_crit_edge:         ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #19
  br label %MPTCP_INC_STATS.exit

do.body3.i:                                       ; preds = %if.then37
  %36 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %37 = ptrtoint ptr %mptcp_statistics.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %mptcp_statistics.i, align 4
  %arrayidx.i = getelementptr [43 x i32], ptr %38, i32 0, i32 7
  %39 = ptrtoint ptr %arrayidx.i to i32
  %40 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 3
  %42 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpu.i, align 4
  %arrayidx17.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %43
  %44 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %arrayidx17.i, align 4
  %add.i = add i32 %45, %39
  %46 = inttoptr i32 %add.i to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %46, align 4
  %add18.i = add i32 %48, 1
  store i32 %add18.i, ptr %46, align 4
  %49 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i = and i32 %49, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool29.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool29.not.i, label %if.then38.i, label %do.body3.i.do.end40.i_crit_edge, !prof !341

do.body3.i.do.end40.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i

if.then38.i:                                      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i

do.end40.i:                                       ; preds = %if.then38.i, %do.body3.i.do.end40.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %36) #17, !srcloc !348
  br label %MPTCP_INC_STATS.exit

MPTCP_INC_STATS.exit:                             ; preds = %do.end40.i, %if.then37.MPTCP_INC_STATS.exit_crit_edge
  %50 = ptrtoint ptr %request_mptcp to i32
  call void @__asan_load4_noabort(i32 %50)
  %bf.load.i99 = load i32, ptr %request_mptcp, align 8
  %bf.clear.i100 = and i32 %bf.load.i99, 2147483647
  store i32 %bf.clear.i100, ptr %request_mptcp, align 8
  %flags.i.i101 = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 18
  %51 = ptrtoint ptr %flags.i.i101 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %flags.i.i101, align 4
  %53 = and i32 %52, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool.not.i.i102 = icmp eq i32 %53, 0
  br i1 %tobool.not.i.i102, label %if.end6.i.i105, label %do.body.i.i103

do.body.i.i103:                                   ; preds = %MPTCP_INC_STATS.exit
  call void @__sanitizer_cov_trace_pc() #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__mptcp_do_fallback.__UNIQUE_ID_ddebug629, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_stream_connect, %if.then5.i.i104)) #17
          to label %if.end40 [label %if.then5.i.i104], !srcloc !350

if.then5.i.i104:                                  ; preds = %do.body.i.i103
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__mptcp_do_fallback.__UNIQUE_ID_ddebug629, ptr noundef nonnull @.str.133, ptr noundef %1) #17
  br label %if.end40

if.end6.i.i105:                                   ; preds = %MPTCP_INC_STATS.exit
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @_set_bit(i32 noundef 4, ptr noundef %flags.i.i101) #17
  br label %if.end40

if.end40:                                         ; preds = %if.end6.i.i105, %if.then5.i.i104, %do.body.i.i103, %land.lhs.true33.if.end40_crit_edge, %if.end31.if.end40_crit_edge
  %flags.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 18
  %54 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %flags.i, align 4
  %56 = and i32 %55, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.i.not = icmp eq i32 %56, 0
  br i1 %tobool.i.not, label %if.then45, label %if.end40.do_connect_crit_edge, !prof !340

if.end40.do_connect_crit_edge:                    ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #19
  br label %do_connect

if.then45:                                        ; preds = %if.end40
  %57 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %sk, align 16
  %skc_net.i107 = getelementptr inbounds %struct.sock_common, ptr %58, i32 0, i32 9
  %59 = ptrtoint ptr %skc_net.i107 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %skc_net.i107, align 4
  %mptcp_statistics.i108 = getelementptr inbounds %struct.net, ptr %60, i32 0, i32 30, i32 8
  %61 = ptrtoint ptr %mptcp_statistics.i108 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %mptcp_statistics.i108, align 4
  %tobool.not.i109 = icmp eq ptr %62, null
  br i1 %tobool.not.i109, label %if.then45.do_connect_crit_edge, label %do.body3.i118, !prof !341

if.then45.do_connect_crit_edge:                   ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #19
  br label %do_connect

do.body3.i118:                                    ; preds = %if.then45
  %63 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #17, !srcloc !346
  %64 = ptrtoint ptr %mptcp_statistics.i108 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %mptcp_statistics.i108, align 4
  %arrayidx.i110 = getelementptr [43 x i32], ptr %65, i32 0, i32 2
  %66 = ptrtoint ptr %arrayidx.i110 to i32
  %67 = tail call i32 @llvm.read_register.i32(metadata !330) #17
  %and.i.i111 = and i32 %67, -16384
  %68 = inttoptr i32 %and.i.i111 to ptr
  %cpu.i112 = getelementptr inbounds %struct.thread_info, ptr %68, i32 0, i32 3
  %69 = ptrtoint ptr %cpu.i112 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %cpu.i112, align 4
  %arrayidx17.i113 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %70
  %71 = ptrtoint ptr %arrayidx17.i113 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %arrayidx17.i113, align 4
  %add.i114 = add i32 %72, %66
  %73 = inttoptr i32 %add.i114 to ptr
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %73, align 4
  %add18.i115 = add i32 %75, 1
  store i32 %add18.i115, ptr %73, align 4
  %76 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #17, !srcloc !347
  %and.i.i.i116 = and i32 %76, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i116)
  %tobool29.not.i117 = icmp eq i32 %and.i.i.i116, 0
  br i1 %tobool29.not.i117, label %if.then38.i119, label %do.body3.i118.do.end40.i120_crit_edge, !prof !341

do.body3.i118.do.end40.i120_crit_edge:            ; preds = %do.body3.i118
  call void @__sanitizer_cov_trace_pc() #19
  br label %do.end40.i120

if.then38.i119:                                   ; preds = %do.body3.i118
  call void @__sanitizer_cov_trace_pc() #19
  tail call void @warn_bogus_irq_restore() #17
  br label %do.end40.i120

do.end40.i120:                                    ; preds = %if.then38.i119, %do.body3.i118.do.end40.i120_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %63) #17, !srcloc !348
  br label %do_connect

do_connect:                                       ; preds = %do.end40.i120, %if.then45.do_connect_crit_edge, %if.end40.do_connect_crit_edge, %land.lhs.true.do_connect_crit_edge
  %ssock.0 = phi ptr [ %12, %if.end40.do_connect_crit_edge ], [ %10, %land.lhs.true.do_connect_crit_edge ], [ %12, %if.then45.do_connect_crit_edge ], [ %12, %do.end40.i120 ]
  %ops = getelementptr inbounds %struct.socket, ptr %ssock.0, i32 0, i32 5
  %77 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %ops, align 4
  %connect = getelementptr inbounds %struct.proto_ops, ptr %78, i32 0, i32 4
  %79 = ptrtoint ptr %connect to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %connect, align 4
  %call49 = tail call i32 %80(ptr noundef nonnull %ssock.0, ptr noundef %uaddr, i32 noundef %addr_len, i32 noundef %flags) #17
  %81 = ptrtoint ptr %ssock.0 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %ssock.0, align 128
  %83 = ptrtoint ptr %sock to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %82, ptr %sock, align 128
  %84 = zext i32 %call49 to i64
  call void @__sanitizer_cov_trace_switch(i64 %84, ptr @__sancov_gen_cov_switch_values.143)
  switch i32 %call49, label %if.else [
    i32 0, label %do_connect.if.then55_crit_edge
    i32 -115, label %do_connect.if.then55_crit_edge126
  ]

do_connect.if.then55_crit_edge126:                ; preds = %do_connect
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then55

do_connect.if.then55_crit_edge:                   ; preds = %do_connect
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.then55

if.then55:                                        ; preds = %do_connect.if.then55_crit_edge, %do_connect.if.then55_crit_edge126
  %85 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %sk, align 16
  %sk57 = getelementptr inbounds %struct.socket, ptr %ssock.0, i32 0, i32 4
  %87 = ptrtoint ptr %sk57 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %sk57, align 16
  %skc_state.i.i.i = getelementptr inbounds %struct.sock_common, ptr %88, i32 0, i32 4
  %89 = ptrtoint ptr %skc_state.i.i.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load volatile i8, ptr %skc_state.i.i.i, align 2
  %conv.i.i.i = zext i8 %90 to i32
  %shl.i.i.i = shl nuw i32 1, %conv.i.i.i
  %and.i.i.i122 = and i32 %shl.i.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i122)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i122, 0
  br i1 %tobool.i.not.i.i, label %if.then55.inet6_sk.exit.i_crit_edge, label %cond.true.i.i

if.then55.inet6_sk.exit.i_crit_edge:              ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit.i

cond.true.i.i:                                    ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i.i = getelementptr inbounds %struct.inet_sock, ptr %88, i32 0, i32 1
  %91 = ptrtoint ptr %pinet6.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %pinet6.i.i, align 8
  br label %inet6_sk.exit.i

inet6_sk.exit.i:                                  ; preds = %cond.true.i.i, %if.then55.inet6_sk.exit.i_crit_edge
  %cond.i.i = phi ptr [ %92, %cond.true.i.i ], [ null, %if.then55.inet6_sk.exit.i_crit_edge ]
  %skc_state.i.i63.i = getelementptr inbounds %struct.sock_common, ptr %86, i32 0, i32 4
  %93 = ptrtoint ptr %skc_state.i.i63.i to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load volatile i8, ptr %skc_state.i.i63.i, align 2
  %conv.i.i64.i = zext i8 %94 to i32
  %shl.i.i65.i = shl nuw i32 1, %conv.i.i64.i
  %and.i.i66.i = and i32 %shl.i.i65.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i66.i)
  %tobool.i.not.i67.i = icmp eq i32 %and.i.i66.i, 0
  br i1 %tobool.i.not.i67.i, label %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge, label %cond.true.i69.i

inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge:      ; preds = %inet6_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit71.i

cond.true.i69.i:                                  ; preds = %inet6_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i68.i = getelementptr inbounds %struct.inet_sock, ptr %86, i32 0, i32 1
  %95 = ptrtoint ptr %pinet6.i68.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %pinet6.i68.i, align 8
  br label %inet6_sk.exit71.i

inet6_sk.exit71.i:                                ; preds = %cond.true.i69.i, %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge
  %cond.i70.i = phi ptr [ %96, %cond.true.i69.i ], [ null, %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge ]
  %skc_v6_daddr.i = getelementptr inbounds %struct.sock_common, ptr %86, i32 0, i32 10
  %skc_v6_daddr3.i = getelementptr inbounds %struct.sock_common, ptr %88, i32 0, i32 10
  %97 = call ptr @memcpy(ptr %skc_v6_daddr.i, ptr %skc_v6_daddr3.i, i32 16)
  %skc_v6_rcv_saddr.i = getelementptr inbounds %struct.sock_common, ptr %86, i32 0, i32 11
  %skc_v6_rcv_saddr6.i = getelementptr inbounds %struct.sock_common, ptr %88, i32 0, i32 11
  %98 = call ptr @memcpy(ptr %skc_v6_rcv_saddr.i, ptr %skc_v6_rcv_saddr6.i, i32 16)
  %tobool.not.i123 = icmp eq ptr %cond.i70.i, null
  %tobool7.not.i = icmp eq ptr %cond.i.i, null
  %or.cond.i = select i1 %tobool.not.i123, i1 true, i1 %tobool7.not.i
  br i1 %or.cond.i, label %inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge, label %if.then.i

inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge: ; preds = %inet6_sk.exit71.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_copy_inaddrs.exit

if.then.i:                                        ; preds = %inet6_sk.exit71.i
  call void @__sanitizer_cov_trace_pc() #19
  %99 = call ptr @memcpy(ptr %cond.i70.i, ptr %cond.i.i, i32 16)
  %flow_label.i = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i.i, i32 0, i32 4
  %100 = ptrtoint ptr %flow_label.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %flow_label.i, align 4
  %flow_label9.i = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i70.i, i32 0, i32 4
  %102 = ptrtoint ptr %flow_label9.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %101, ptr %flow_label9.i, align 4
  br label %mptcp_copy_inaddrs.exit

mptcp_copy_inaddrs.exit:                          ; preds = %if.then.i, %inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge
  %103 = getelementptr inbounds %struct.sock_common, ptr %88, i32 0, i32 2
  %skc_num.i = getelementptr inbounds %struct.anon.6, ptr %103, i32 0, i32 1
  %104 = ptrtoint ptr %skc_num.i to i32
  call void @__asan_load2_noabort(i32 %104)
  %105 = load i16, ptr %skc_num.i, align 2
  %106 = getelementptr inbounds %struct.sock_common, ptr %86, i32 0, i32 2
  %skc_num15.i = getelementptr inbounds %struct.anon.6, ptr %106, i32 0, i32 1
  %107 = ptrtoint ptr %skc_num15.i to i32
  call void @__asan_store2_noabort(i32 %107)
  store i16 %105, ptr %skc_num15.i, align 2
  %108 = ptrtoint ptr %103 to i32
  call void @__asan_load2_noabort(i32 %108)
  %109 = load i16, ptr %103, align 4
  %110 = ptrtoint ptr %106 to i32
  call void @__asan_store2_noabort(i32 %110)
  store i16 %109, ptr %106, align 4
  %inet_sport.i = getelementptr inbounds %struct.inet_sock, ptr %88, i32 0, i32 6
  %111 = ptrtoint ptr %inet_sport.i to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %inet_sport.i, align 8
  %inet_sport25.i = getelementptr inbounds %struct.inet_sock, ptr %86, i32 0, i32 6
  %113 = ptrtoint ptr %inet_sport25.i to i32
  call void @__asan_store2_noabort(i32 %113)
  store i16 %112, ptr %inet_sport25.i, align 8
  %114 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %88, align 8
  %116 = ptrtoint ptr %86 to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %115, ptr %86, align 8
  %inet_saddr.i = getelementptr inbounds %struct.inet_sock, ptr %88, i32 0, i32 2
  %117 = ptrtoint ptr %inet_saddr.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %inet_saddr.i, align 4
  %inet_saddr35.i = getelementptr inbounds %struct.inet_sock, ptr %86, i32 0, i32 2
  %119 = ptrtoint ptr %inet_saddr35.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 %118, ptr %inet_saddr35.i, align 4
  %skc_rcv_saddr.i = getelementptr inbounds %struct.anon.3, ptr %88, i32 0, i32 1
  %120 = ptrtoint ptr %skc_rcv_saddr.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %skc_rcv_saddr.i, align 4
  %skc_rcv_saddr42.i = getelementptr inbounds %struct.anon.3, ptr %86, i32 0, i32 1
  %122 = ptrtoint ptr %skc_rcv_saddr42.i to i32
  call void @__asan_store4_noabort(i32 %122)
  store i32 %121, ptr %skc_rcv_saddr42.i, align 4
  br label %unlock

if.else:                                          ; preds = %do_connect
  call void @__sanitizer_cov_trace_pc() #19
  %123 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %sk, align 16
  %sk59 = getelementptr inbounds %struct.socket, ptr %ssock.0, i32 0, i32 4
  %125 = ptrtoint ptr %sk59 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %sk59, align 16
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %126, i32 0, i32 4
  %127 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load volatile i8, ptr %skc_state.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  %conv.i = zext i8 %128 to i32
  tail call void @inet_sk_state_store(ptr noundef %124, i32 noundef %conv.i) #17
  br label %unlock

unlock:                                           ; preds = %if.else, %mptcp_copy_inaddrs.exit, %do.end.i.unlock_crit_edge, %if.end18.unlock_crit_edge, %if.then5, %if.then.unlock_crit_edge
  %err.0 = phi i32 [ -22, %if.then.unlock_crit_edge ], [ 0, %if.then5 ], [ %call49, %mptcp_copy_inaddrs.exit ], [ %call49, %if.else ], [ -22, %if.end18.unlock_crit_edge ], [ -22, %do.end.i.unlock_crit_edge ]
  %129 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %sk, align 16
  tail call void @release_sock(ptr noundef %130) #17
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_no_socketpair(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_stream_accept(ptr noundef %sock, ptr noundef %newsock, i32 noundef %flags, i1 noundef zeroext %kern) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_stream_accept.__UNIQUE_ID_ddebug793, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_stream_accept, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_stream_accept.__UNIQUE_ID_ddebug793, ptr noundef nonnull @.str.100, ptr noundef %1) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %subflow.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 38
  %2 = ptrtoint ptr %subflow.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %subflow.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %do.end.cleanup_crit_edge, label %do.end.i

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

do.end.i:                                         ; preds = %do.end
  %can_ack.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 22
  %4 = ptrtoint ptr %can_ack.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load volatile i8, ptr %can_ack.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not.i = icmp eq i8 %5, 0
  br i1 %tobool1.not.i, label %if.end8, label %do.end.i.cleanup_crit_edge

do.end.i.cleanup_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.end8:                                          ; preds = %do.end.i
  %ops = getelementptr inbounds %struct.socket, ptr %3, i32 0, i32 5
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %accept = getelementptr inbounds %struct.proto_ops, ptr %7, i32 0, i32 6
  %8 = ptrtoint ptr %accept to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %accept, align 4
  %call10 = tail call i32 %9(ptr noundef %sock, ptr noundef %newsock, i32 noundef %flags, i1 noundef zeroext %kern) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %cmp = icmp eq i32 %call10, 0
  br i1 %cmp, label %land.lhs.true, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end8
  %sk11 = getelementptr inbounds %struct.socket, ptr %newsock, i32 0, i32 4
  %10 = ptrtoint ptr %sk11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sk11, align 16
  %sk_socket.i = getelementptr inbounds %struct.sock, ptr %11, i32 0, i32 71
  %12 = ptrtoint ptr %sk_socket.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sk_socket.i, align 8
  %skc_prot.i = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 8
  %14 = ptrtoint ptr %skc_prot.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %skc_prot.i, align 8
  %cmp.i = icmp eq ptr %15, @tcp_prot
  br i1 %cmp.i, label %land.lhs.true.mptcp_is_tcpsk.exit.thread_crit_edge, label %if.else.i, !prof !341

land.lhs.true.mptcp_is_tcpsk.exit.thread_crit_edge: ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_is_tcpsk.exit.thread

if.else.i:                                        ; preds = %land.lhs.true
  %cmp4.i = icmp eq ptr %15, @tcpv6_prot
  br i1 %cmp4.i, label %if.else.i.mptcp_is_tcpsk.exit.thread_crit_edge, label %if.then13, !prof !341

if.else.i.mptcp_is_tcpsk.exit.thread_crit_edge:   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_is_tcpsk.exit.thread

mptcp_is_tcpsk.exit.thread:                       ; preds = %if.else.i.mptcp_is_tcpsk.exit.thread_crit_edge, %land.lhs.true.mptcp_is_tcpsk.exit.thread_crit_edge
  %inet6_stream_ops.sink.i = phi ptr [ @inet_stream_ops, %land.lhs.true.mptcp_is_tcpsk.exit.thread_crit_edge ], [ @inet6_stream_ops, %if.else.i.mptcp_is_tcpsk.exit.thread_crit_edge ]
  %ops12.i = getelementptr inbounds %struct.socket, ptr %13, i32 0, i32 5
  %16 = ptrtoint ptr %ops12.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %inet6_stream_ops.sink.i, ptr %ops12.i, align 4
  br label %cleanup

if.then13:                                        ; preds = %if.else.i
  %17 = ptrtoint ptr %sk11 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sk11, align 16
  tail call void @lock_sock_nested(ptr noundef %18, i32 noundef 0) #17
  %first = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 39
  %19 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %first, align 8
  %icsk_ulp_data.i = getelementptr inbounds %struct.inet_connection_sock, ptr %20, i32 0, i32 13
  %21 = ptrtoint ptr %icsk_ulp_data.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %icsk_ulp_data.i, align 8
  %conn_list = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 34
  %23 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %conn_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %22, ptr noundef %conn_list, ptr noundef %24) #17
  br i1 %call.i.i, label %if.end.i.i, label %if.then13.list_add.exit_crit_edge

if.then13.list_add.exit_crit_edge:                ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #19
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #19
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %24, ptr %22, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  %27 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %conn_list, ptr %prev3.i.i, align 4
  %28 = ptrtoint ptr %conn_list to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %22, ptr %conn_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.then13.list_add.exit_crit_edge
  %29 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %first, align 8
  %skc_refcnt.i = getelementptr inbounds %struct.sock_common, ptr %30, i32 0, i32 19
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %skc_refcnt.i, i32 noundef 4) #17
  tail call void @llvm.prefetch.p0(ptr %skc_refcnt.i, i32 1, i32 3, i32 1) #17
  %31 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %skc_refcnt.i, ptr %skc_refcnt.i, i32 1, ptr elementtype(i32) %skc_refcnt.i) #17, !srcloc !349
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %31, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %list_add.exit.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !341

list_add.exit.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %list_add.exit
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %32 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %32)
  %.not.i.i.i.i = icmp sgt i32 %32, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.sock_hold.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !340

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.sock_hold.exit_crit_edge:         ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_hold.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %list_add.exit.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %list_add.exit.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %skc_refcnt.i, i32 noundef %.sink.i.i.i.i) #17
  br label %sock_hold.exit

sock_hold.exit:                                   ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.sock_hold.exit_crit_edge
  %skc_state.i.i = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 4
  %33 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load volatile i8, ptr %skc_state.i.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %34)
  %cmp.i75 = icmp eq i8 %34, 1
  br i1 %cmp.i75, label %mptcp_is_fully_established.exit, label %sock_hold.exit.if.end23_crit_edge

sock_hold.exit.if.end23_crit_edge:                ; preds = %sock_hold.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end23

mptcp_is_fully_established.exit:                  ; preds = %sock_hold.exit
  %fully_established.i = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 23
  %35 = ptrtoint ptr %fully_established.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load volatile i8, ptr %fully_established.i, align 2, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool.i.not = icmp eq i8 %36, 0
  br i1 %tobool.i.not, label %mptcp_is_fully_established.exit.if.end23_crit_edge, label %if.then21

mptcp_is_fully_established.exit.if.end23_crit_edge: ; preds = %mptcp_is_fully_established.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end23

if.then21:                                        ; preds = %mptcp_is_fully_established.exit
  call void @__sanitizer_cov_trace_pc() #19
  %37 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %first, align 8
  tail call void @mptcp_pm_fully_established(ptr noundef %18, ptr noundef %38, i32 noundef 3264) #17
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %mptcp_is_fully_established.exit.if.end23_crit_edge, %sock_hold.exit.if.end23_crit_edge
  %39 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %first, align 8
  %skc_state.i.i.i = getelementptr inbounds %struct.sock_common, ptr %40, i32 0, i32 4
  %41 = ptrtoint ptr %skc_state.i.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load volatile i8, ptr %skc_state.i.i.i, align 2
  %conv.i.i.i = zext i8 %42 to i32
  %shl.i.i.i = shl nuw i32 1, %conv.i.i.i
  %and.i.i.i = and i32 %shl.i.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end23.inet6_sk.exit.i_crit_edge, label %cond.true.i.i

if.end23.inet6_sk.exit.i_crit_edge:               ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit.i

cond.true.i.i:                                    ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i.i = getelementptr inbounds %struct.inet_sock, ptr %40, i32 0, i32 1
  %43 = ptrtoint ptr %pinet6.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pinet6.i.i, align 8
  br label %inet6_sk.exit.i

inet6_sk.exit.i:                                  ; preds = %cond.true.i.i, %if.end23.inet6_sk.exit.i_crit_edge
  %cond.i.i = phi ptr [ %44, %cond.true.i.i ], [ null, %if.end23.inet6_sk.exit.i_crit_edge ]
  %45 = ptrtoint ptr %skc_state.i.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load volatile i8, ptr %skc_state.i.i, align 2
  %conv.i.i64.i = zext i8 %46 to i32
  %shl.i.i65.i = shl nuw i32 1, %conv.i.i64.i
  %and.i.i66.i = and i32 %shl.i.i65.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i66.i)
  %tobool.i.not.i67.i = icmp eq i32 %and.i.i66.i, 0
  br i1 %tobool.i.not.i67.i, label %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge, label %cond.true.i69.i

inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge:      ; preds = %inet6_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit71.i

cond.true.i69.i:                                  ; preds = %inet6_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i68.i = getelementptr inbounds %struct.inet_sock, ptr %18, i32 0, i32 1
  %47 = ptrtoint ptr %pinet6.i68.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pinet6.i68.i, align 8
  br label %inet6_sk.exit71.i

inet6_sk.exit71.i:                                ; preds = %cond.true.i69.i, %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge
  %cond.i70.i = phi ptr [ %48, %cond.true.i69.i ], [ null, %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge ]
  %skc_v6_daddr.i = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 10
  %skc_v6_daddr3.i = getelementptr inbounds %struct.sock_common, ptr %40, i32 0, i32 10
  %49 = call ptr @memcpy(ptr %skc_v6_daddr.i, ptr %skc_v6_daddr3.i, i32 16)
  %skc_v6_rcv_saddr.i = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 11
  %skc_v6_rcv_saddr6.i = getelementptr inbounds %struct.sock_common, ptr %40, i32 0, i32 11
  %50 = call ptr @memcpy(ptr %skc_v6_rcv_saddr.i, ptr %skc_v6_rcv_saddr6.i, i32 16)
  %tobool.not.i77 = icmp eq ptr %cond.i70.i, null
  %tobool7.not.i = icmp eq ptr %cond.i.i, null
  %or.cond.i = select i1 %tobool.not.i77, i1 true, i1 %tobool7.not.i
  br i1 %or.cond.i, label %inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge, label %if.then.i

inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge: ; preds = %inet6_sk.exit71.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_copy_inaddrs.exit

if.then.i:                                        ; preds = %inet6_sk.exit71.i
  call void @__sanitizer_cov_trace_pc() #19
  %51 = call ptr @memcpy(ptr %cond.i70.i, ptr %cond.i.i, i32 16)
  %flow_label.i = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i.i, i32 0, i32 4
  %52 = ptrtoint ptr %flow_label.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %flow_label.i, align 4
  %flow_label9.i = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i70.i, i32 0, i32 4
  %54 = ptrtoint ptr %flow_label9.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %flow_label9.i, align 4
  br label %mptcp_copy_inaddrs.exit

mptcp_copy_inaddrs.exit:                          ; preds = %if.then.i, %inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge
  %55 = getelementptr inbounds %struct.sock_common, ptr %40, i32 0, i32 2
  %skc_num.i = getelementptr inbounds %struct.anon.6, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %skc_num.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %skc_num.i, align 2
  %58 = getelementptr inbounds %struct.sock_common, ptr %18, i32 0, i32 2
  %skc_num15.i = getelementptr inbounds %struct.anon.6, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %skc_num15.i to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 %57, ptr %skc_num15.i, align 2
  %60 = ptrtoint ptr %55 to i32
  call void @__asan_load2_noabort(i32 %60)
  %61 = load i16, ptr %55, align 4
  %62 = ptrtoint ptr %58 to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %61, ptr %58, align 4
  %inet_sport.i = getelementptr inbounds %struct.inet_sock, ptr %40, i32 0, i32 6
  %63 = ptrtoint ptr %inet_sport.i to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %inet_sport.i, align 8
  %inet_sport25.i = getelementptr inbounds %struct.inet_sock, ptr %18, i32 0, i32 6
  %65 = ptrtoint ptr %inet_sport25.i to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %64, ptr %inet_sport25.i, align 8
  %66 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %40, align 8
  %68 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %67, ptr %18, align 8
  %inet_saddr.i = getelementptr inbounds %struct.inet_sock, ptr %40, i32 0, i32 2
  %69 = ptrtoint ptr %inet_saddr.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %inet_saddr.i, align 4
  %inet_saddr35.i = getelementptr inbounds %struct.inet_sock, ptr %18, i32 0, i32 2
  %71 = ptrtoint ptr %inet_saddr35.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %inet_saddr35.i, align 4
  %skc_rcv_saddr.i = getelementptr inbounds %struct.anon.3, ptr %40, i32 0, i32 1
  %72 = ptrtoint ptr %skc_rcv_saddr.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %skc_rcv_saddr.i, align 4
  %skc_rcv_saddr42.i = getelementptr inbounds %struct.anon.3, ptr %18, i32 0, i32 1
  %74 = ptrtoint ptr %skc_rcv_saddr42.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %skc_rcv_saddr42.i, align 4
  %75 = ptrtoint ptr %first to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %first, align 8
  %copied.i = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 41, i32 1
  %77 = ptrtoint ptr %copied.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 0, ptr %copied.i, align 4
  %rtt_us.i = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 41, i32 3
  %78 = ptrtoint ptr %rtt_us.i to i32
  call void @__asan_store8_noabort(i32 %78)
  store i64 0, ptr %rtt_us.i, align 8
  %tcp_mstamp.i = getelementptr inbounds %struct.tcp_sock, ptr %76, i32 0, i32 44
  %79 = ptrtoint ptr %tcp_mstamp.i to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %tcp_mstamp.i, align 8
  %time.i = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 41, i32 2
  %81 = ptrtoint ptr %time.i to i32
  call void @__asan_store8_noabort(i32 %81)
  store i64 %80, ptr %time.i, align 8
  %rcv_wnd.i = getelementptr inbounds %struct.tcp_sock, ptr %76, i32 0, i32 79
  %82 = ptrtoint ptr %rcv_wnd.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %rcv_wnd.i, align 8
  %advmss.i = getelementptr inbounds %struct.tcp_sock, ptr %76, i32 0, i32 32
  %84 = ptrtoint ptr %advmss.i to i32
  call void @__asan_load2_noabort(i32 %84)
  %85 = load i16, ptr %advmss.i, align 8
  %conv.i = zext i16 %85 to i32
  %mul.i = mul nuw nsw i32 %conv.i, 10
  %86 = tail call i32 @llvm.umin.i32(i32 %83, i32 %mul.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %cmp7.i = icmp eq i32 %86, 0
  %storemerge.i = select i1 %cmp7.i, i32 5360, i32 %86
  %rcvq_space.i = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 41
  %87 = ptrtoint ptr %rcvq_space.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %storemerge.i, ptr %rcvq_space.i, align 8
  %snd_nxt.i = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 4
  %88 = ptrtoint ptr %snd_nxt.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %snd_nxt.i, align 8
  %snd_wnd.i = getelementptr inbounds %struct.tcp_sock, ptr %76, i32 0, i32 26
  %90 = ptrtoint ptr %snd_wnd.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %snd_wnd.i, align 4
  %conv14.i = zext i32 %91 to i64
  %add.i = add i64 %89, %conv14.i
  %wnd_end.i = getelementptr inbounds %struct.mptcp_sock, ptr %18, i32 0, i32 14
  %92 = ptrtoint ptr %wnd_end.i to i32
  call void @__asan_store8_noabort(i32 %92)
  store volatile i64 %add.i, ptr %wnd_end.i, align 8
  %sk_userlocks.i = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 43
  %93 = ptrtoint ptr %sk_userlocks.i to i32
  call void @__asan_load1_noabort(i32 %93)
  %bf.load.i = load i8, ptr %sk_userlocks.i, align 8
  %94 = and i8 %bf.load.i, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %94)
  %tobool.not.i78 = icmp eq i8 %94, 0
  br i1 %tobool.not.i78, label %lor.lhs.false.i, label %mptcp_copy_inaddrs.exit.mptcp_propagate_sndbuf.exit_crit_edge

mptcp_copy_inaddrs.exit.mptcp_propagate_sndbuf.exit_crit_edge: ; preds = %mptcp_copy_inaddrs.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_propagate_sndbuf.exit

lor.lhs.false.i:                                  ; preds = %mptcp_copy_inaddrs.exit
  %sk_sndbuf.i = getelementptr inbounds %struct.sock, ptr %76, i32 0, i32 21
  %95 = ptrtoint ptr %sk_sndbuf.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %sk_sndbuf.i, align 4
  %sk_sndbuf1.i = getelementptr inbounds %struct.sock, ptr %18, i32 0, i32 21
  %97 = ptrtoint ptr %sk_sndbuf1.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %sk_sndbuf1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %96, i32 %98)
  %cmp.not.i = icmp sgt i32 %96, %98
  br i1 %cmp.not.i, label %do.body6.i, label %lor.lhs.false.i.mptcp_propagate_sndbuf.exit_crit_edge

lor.lhs.false.i.mptcp_propagate_sndbuf.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_propagate_sndbuf.exit

do.body6.i:                                       ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #19
  %99 = ptrtoint ptr %sk_sndbuf1.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store volatile i32 %96, ptr %sk_sndbuf1.i, align 4
  br label %mptcp_propagate_sndbuf.exit

mptcp_propagate_sndbuf.exit:                      ; preds = %do.body6.i, %lor.lhs.false.i.mptcp_propagate_sndbuf.exit_crit_edge, %mptcp_copy_inaddrs.exit.mptcp_propagate_sndbuf.exit_crit_edge
  %100 = ptrtoint ptr %conn_list to i32
  call void @__asan_load4_noabort(i32 %100)
  %subflow.083 = load ptr, ptr %conn_list, align 8
  %cmp32.not84 = icmp eq ptr %subflow.083, %conn_list
  br i1 %cmp32.not84, label %mptcp_propagate_sndbuf.exit.for.end_crit_edge, label %for.body.lr.ph

mptcp_propagate_sndbuf.exit.for.end_crit_edge:    ; preds = %mptcp_propagate_sndbuf.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.body.lr.ph:                                   ; preds = %mptcp_propagate_sndbuf.exit
  %wq.i = getelementptr inbounds %struct.socket, ptr %newsock, i32 0, i32 7
  %i_uid.i = getelementptr inbounds %struct.socket_alloc, ptr %newsock, i32 0, i32 1, i32 2
  br label %for.body

for.body:                                         ; preds = %if.end38.for.body_crit_edge, %for.body.lr.ph
  %subflow.085 = phi ptr [ %subflow.083, %for.body.lr.ph ], [ %subflow.0, %if.end38.for.body_crit_edge ]
  %tcp_sock.i = getelementptr inbounds %struct.mptcp_subflow_context, ptr %subflow.085, i32 0, i32 5
  %101 = ptrtoint ptr %tcp_sock.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %tcp_sock.i, align 8
  %sk_socket = getelementptr inbounds %struct.sock, ptr %102, i32 0, i32 71
  %103 = ptrtoint ptr %sk_socket to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %sk_socket, align 8
  %tobool36.not = icmp eq ptr %104, null
  br i1 %tobool36.not, label %if.then37, label %for.body.if.end38_crit_edge

for.body.if.end38_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end38

if.then37:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #19
  %sk_callback_lock.i = getelementptr inbounds %struct.sock, ptr %102, i32 0, i32 50
  tail call void @_raw_write_lock_bh(ptr noundef %sk_callback_lock.i) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !361
  %105 = getelementptr inbounds %struct.sock, ptr %102, i32 0, i32 17
  %106 = ptrtoint ptr %105 to i32
  call void @__asan_store4_noabort(i32 %106)
  store volatile ptr %wq.i, ptr %105, align 8
  %107 = ptrtoint ptr %sk_socket to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %newsock, ptr %sk_socket, align 8
  %sk_uid.i = getelementptr inbounds %struct.sock, ptr %102, i32 0, i32 55
  %108 = ptrtoint ptr %i_uid.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %i_uid.i, align 4
  %110 = ptrtoint ptr %sk_uid.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %109, ptr %sk_uid.i, align 4
  tail call void @_raw_write_unlock_bh(ptr noundef %sk_callback_lock.i) #17
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %for.body.if.end38_crit_edge
  %111 = ptrtoint ptr %subflow.085 to i32
  call void @__asan_load4_noabort(i32 %111)
  %subflow.0 = load ptr, ptr %subflow.085, align 8
  %cmp32.not = icmp eq ptr %subflow.0, %conn_list
  br i1 %cmp32.not, label %if.end38.for.end_crit_edge, label %if.end38.for.body_crit_edge

if.end38.for.body_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.body

if.end38.for.end_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #19
  br label %for.end

for.end:                                          ; preds = %if.end38.for.end_crit_edge, %mptcp_propagate_sndbuf.exit.for.end_crit_edge
  tail call void @release_sock(ptr noundef %18) #17
  br label %cleanup

cleanup:                                          ; preds = %for.end, %mptcp_is_tcpsk.exit.thread, %if.end8.cleanup_crit_edge, %do.end.i.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.end ], [ %call10, %if.end8.cleanup_crit_edge ], [ 0, %mptcp_is_tcpsk.exit.thread ], [ -22, %do.end.cleanup_crit_edge ], [ -22, %do.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_getname(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_poll(ptr noundef %file, ptr noundef %sock, ptr noundef %wait) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk1 = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk1, align 16
  %cmp.i.i = icmp eq ptr %wait, null
  br i1 %cmp.i.i, label %entry.sock_poll_wait.exit_crit_edge, label %poll_does_not_wait.exit.i

entry.sock_poll_wait.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_poll_wait.exit

poll_does_not_wait.exit.i:                        ; preds = %entry
  %2 = ptrtoint ptr %wait to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wait, align 4
  %cmp1.i.i = icmp eq ptr %3, null
  br i1 %cmp1.i.i, label %poll_does_not_wait.exit.i.sock_poll_wait.exit_crit_edge, label %poll_wait.exit.i

poll_does_not_wait.exit.i.sock_poll_wait.exit_crit_edge: ; preds = %poll_does_not_wait.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sock_poll_wait.exit

poll_wait.exit.i:                                 ; preds = %poll_does_not_wait.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %wq.i = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 7
  tail call void %3(ptr noundef %file, ptr noundef nonnull %wq.i, ptr noundef nonnull %wait) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !391
  br label %sock_poll_wait.exit

sock_poll_wait.exit:                              ; preds = %poll_wait.exit.i, %poll_does_not_wait.exit.i.sock_poll_wait.exit_crit_edge, %entry.sock_poll_wait.exit_crit_edge
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load volatile i8, ptr %skc_state.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_poll.__UNIQUE_ID_ddebug794, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_poll, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %sock_poll_wait.exit
  call void @__sanitizer_cov_trace_pc() #19
  %conv.i = zext i8 %5 to i32
  %flags = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 18
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_poll.__UNIQUE_ID_ddebug794, ptr noundef nonnull @.str.137, ptr noundef %1, i32 noundef %conv.i, i32 noundef %7) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %sock_poll_wait.exit
  %8 = zext i8 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.144)
  switch i8 %5, label %if.then71 [
    i8 10, label %if.then6
    i8 2, label %do.end.if.end75_crit_edge
    i8 3, label %do.end.if.end75_crit_edge132
  ]

do.end.if.end75_crit_edge132:                     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end75

do.end.if.end75_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end75

if.then6:                                         ; preds = %do.end
  %subflow = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 38
  %9 = ptrtoint ptr %subflow to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %subflow, align 4
  %tobool7.not = icmp eq ptr %10, null
  br i1 %tobool7.not, label %if.then6.land.rhs_crit_edge, label %lor.rhs

if.then6.land.rhs_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs

lor.rhs:                                          ; preds = %if.then6
  %sk9 = getelementptr inbounds %struct.socket, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %sk9 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sk9, align 16
  %tobool10.not = icmp eq ptr %12, null
  br i1 %tobool10.not, label %lor.rhs.land.rhs_crit_edge, label %if.end64

lor.rhs.land.rhs_crit_edge:                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %land.rhs

land.rhs:                                         ; preds = %lor.rhs.land.rhs_crit_edge, %if.then6.land.rhs_crit_edge
  %.b124 = load i1, ptr @mptcp_poll.__already_done, align 1
  br i1 %.b124, label %land.rhs.cleanup_crit_edge, label %if.then28, !prof !340

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  br label %cleanup

if.then28:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #19
  store i1 true, ptr @mptcp_poll.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 3601, i32 noundef 9, ptr noundef null) #17
  br label %cleanup

if.end64:                                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #19
  %rskq_accept_head.i.i = getelementptr inbounds %struct.inet_connection_sock, ptr %12, i32 0, i32 1, i32 5
  %13 = ptrtoint ptr %rskq_accept_head.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %rskq_accept_head.i.i, align 4
  %cmp.i.i126 = icmp eq ptr %14, null
  %cond.i = select i1 %cmp.i.i126, i32 0, i32 65
  br label %cleanup

if.then71:                                        ; preds = %do.end
  %sk_receive_queue.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 8
  %15 = ptrtoint ptr %sk_receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %sk_receive_queue.i, align 4
  %cmp.i.i127 = icmp eq ptr %16, %sk_receive_queue.i
  br i1 %cmp.i.i127, label %land.lhs.true.i, label %if.then71.if.end.i_crit_edge

if.then71.if.end.i_crit_edge:                     ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then71
  %receive_queue.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 33
  %17 = ptrtoint ptr %receive_queue.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %receive_queue.i, align 4
  %cmp.i3.i = icmp eq ptr %18, %receive_queue.i
  br i1 %cmp.i3.i, label %land.lhs.true.i.mptcp_check_readable.exit_crit_edge, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end.i

land.lhs.true.i.mptcp_check_readable.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_readable.exit

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.then71.if.end.i_crit_edge
  br label %mptcp_check_readable.exit

mptcp_check_readable.exit:                        ; preds = %if.end.i, %land.lhs.true.i.mptcp_check_readable.exit_crit_edge
  %retval.0.i128 = phi i32 [ 65, %if.end.i ], [ 0, %land.lhs.true.i.mptcp_check_readable.exit_crit_edge ]
  %sk_shutdown.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 66
  %19 = ptrtoint ptr %sk_shutdown.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %sk_shutdown.i, align 2
  %21 = and i8 %20, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not.i = icmp eq i8 %21, 0
  br i1 %tobool.not.i, label %if.end.i129, label %mptcp_check_readable.exit.mptcp_check_writeable.exit_crit_edge, !prof !340

mptcp_check_readable.exit.mptcp_check_writeable.exit_crit_edge: ; preds = %mptcp_check_readable.exit
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_writeable.exit

if.end.i129:                                      ; preds = %mptcp_check_readable.exit
  %sk_sndbuf.i.i.i.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 21
  %22 = ptrtoint ptr %sk_sndbuf.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %sk_sndbuf.i.i.i.i, align 4
  %sk_wmem_queued.i.i.i.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 22
  %24 = ptrtoint ptr %sk_wmem_queued.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %sub.i.i.i.i = sub i32 %23, %25
  %26 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %shr.i.i.i.i = ashr i32 %26, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i.i, i32 %shr.i.i.i.i)
  %cmp.not.i.i.i = icmp slt i32 %sub.i.i.i.i, %shr.i.i.i.i
  br i1 %cmp.not.i.i.i, label %if.end.i129.if.end4.i_crit_edge, label %land.rhs.i.i.i

if.end.i129.if.end4.i_crit_edge:                  ; preds = %if.end.i129
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

land.rhs.i.i.i:                                   ; preds = %if.end.i129
  %27 = ptrtoint ptr %sk_wmem_queued.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %29 = ptrtoint ptr %sk_sndbuf.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %sk_sndbuf.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %30)
  %cmp.not.i.i.i.i = icmp slt i32 %28, %30
  br i1 %cmp.not.i.i.i.i, label %if.end.i.i.i.i, label %land.rhs.i.i.i.if.end4.i_crit_edge

land.rhs.i.i.i.if.end4.i_crit_edge:               ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

if.end.i.i.i.i:                                   ; preds = %land.rhs.i.i.i
  %skc_prot.i.i.i.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 8
  %31 = ptrtoint ptr %skc_prot.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %skc_prot.i.i.i.i, align 8
  %stream_memory_free.i.i.i.i = getelementptr inbounds %struct.proto, ptr %32, i32 0, i32 28
  %33 = ptrtoint ptr %stream_memory_free.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %stream_memory_free.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %34, null
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.i.i.mptcp_check_writeable.exit_crit_edge, label %sk_stream_is_writeable.exit.i

if.end.i.i.i.i.mptcp_check_writeable.exit_crit_edge: ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_writeable.exit

sk_stream_is_writeable.exit.i:                    ; preds = %if.end.i.i.i.i
  %call.i.i.i.i = tail call zeroext i1 %34(ptr noundef %1, i32 noundef 0) #17
  br i1 %call.i.i.i.i, label %sk_stream_is_writeable.exit.i.mptcp_check_writeable.exit_crit_edge, label %sk_stream_is_writeable.exit.i.if.end4.i_crit_edge

sk_stream_is_writeable.exit.i.if.end4.i_crit_edge: ; preds = %sk_stream_is_writeable.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %if.end4.i

sk_stream_is_writeable.exit.i.mptcp_check_writeable.exit_crit_edge: ; preds = %sk_stream_is_writeable.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_writeable.exit

if.end4.i:                                        ; preds = %sk_stream_is_writeable.exit.i.if.end4.i_crit_edge, %land.rhs.i.i.i.if.end4.i_crit_edge, %if.end.i129.if.end4.i_crit_edge
  %sk_socket.i.i = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 71
  %35 = ptrtoint ptr %sk_socket.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sk_socket.i.i, align 8
  %flags.i.i = getelementptr inbounds %struct.socket, ptr %36, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 2, ptr noundef %flags.i.i) #17
  %flags1.i.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 18
  tail call void @_set_bit(i32 noundef 1, ptr noundef %flags1.i.i) #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !392
  %37 = ptrtoint ptr %sk_sndbuf.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %sk_sndbuf.i.i.i.i, align 4
  %39 = ptrtoint ptr %sk_wmem_queued.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %sub.i.i.i16.i = sub i32 %38, %40
  %41 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %shr.i.i.i17.i = ashr i32 %41, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i.i16.i, i32 %shr.i.i.i17.i)
  %cmp.not.i.i18.i = icmp slt i32 %sub.i.i.i16.i, %shr.i.i.i17.i
  br i1 %cmp.not.i.i18.i, label %if.end4.i.mptcp_check_writeable.exit_crit_edge, label %land.rhs.i.i20.i

if.end4.i.mptcp_check_writeable.exit_crit_edge:   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_writeable.exit

land.rhs.i.i20.i:                                 ; preds = %if.end4.i
  %42 = ptrtoint ptr %sk_wmem_queued.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %sk_wmem_queued.i.i.i.i, align 8
  %44 = ptrtoint ptr %sk_sndbuf.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %sk_sndbuf.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %45)
  %cmp.not.i.i.i19.i = icmp slt i32 %43, %45
  br i1 %cmp.not.i.i.i19.i, label %if.end.i.i.i24.i, label %land.rhs.i.i20.i.mptcp_check_writeable.exit_crit_edge

land.rhs.i.i20.i.mptcp_check_writeable.exit_crit_edge: ; preds = %land.rhs.i.i20.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_writeable.exit

if.end.i.i.i24.i:                                 ; preds = %land.rhs.i.i20.i
  %skc_prot.i.i.i21.i = getelementptr inbounds %struct.sock_common, ptr %1, i32 0, i32 8
  %46 = ptrtoint ptr %skc_prot.i.i.i21.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %skc_prot.i.i.i21.i, align 8
  %stream_memory_free.i.i.i22.i = getelementptr inbounds %struct.proto, ptr %47, i32 0, i32 28
  %48 = ptrtoint ptr %stream_memory_free.i.i.i22.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %stream_memory_free.i.i.i22.i, align 4
  %tobool.not.i.i.i23.i = icmp eq ptr %49, null
  br i1 %tobool.not.i.i.i23.i, label %if.end.i.i.i24.i.sk_stream_is_writeable.exit27.thread29.i_crit_edge, label %sk_stream_is_writeable.exit27.i

if.end.i.i.i24.i.sk_stream_is_writeable.exit27.thread29.i_crit_edge: ; preds = %if.end.i.i.i24.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_is_writeable.exit27.thread29.i

sk_stream_is_writeable.exit27.i:                  ; preds = %if.end.i.i.i24.i
  %call.i.i.i25.i = tail call zeroext i1 %49(ptr noundef %1, i32 noundef 0) #17
  br i1 %call.i.i.i25.i, label %sk_stream_is_writeable.exit27.i.sk_stream_is_writeable.exit27.thread29.i_crit_edge, label %sk_stream_is_writeable.exit27.i.mptcp_check_writeable.exit_crit_edge

sk_stream_is_writeable.exit27.i.mptcp_check_writeable.exit_crit_edge: ; preds = %sk_stream_is_writeable.exit27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_check_writeable.exit

sk_stream_is_writeable.exit27.i.sk_stream_is_writeable.exit27.thread29.i_crit_edge: ; preds = %sk_stream_is_writeable.exit27.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %sk_stream_is_writeable.exit27.thread29.i

sk_stream_is_writeable.exit27.thread29.i:         ; preds = %sk_stream_is_writeable.exit27.i.sk_stream_is_writeable.exit27.thread29.i_crit_edge, %if.end.i.i.i24.i.sk_stream_is_writeable.exit27.thread29.i_crit_edge
  br label %mptcp_check_writeable.exit

mptcp_check_writeable.exit:                       ; preds = %sk_stream_is_writeable.exit27.thread29.i, %sk_stream_is_writeable.exit27.i.mptcp_check_writeable.exit_crit_edge, %land.rhs.i.i20.i.mptcp_check_writeable.exit_crit_edge, %if.end4.i.mptcp_check_writeable.exit_crit_edge, %sk_stream_is_writeable.exit.i.mptcp_check_writeable.exit_crit_edge, %if.end.i.i.i.i.mptcp_check_writeable.exit_crit_edge, %mptcp_check_readable.exit.mptcp_check_writeable.exit_crit_edge
  %retval.0.i130 = phi i32 [ 260, %mptcp_check_readable.exit.mptcp_check_writeable.exit_crit_edge ], [ 260, %sk_stream_is_writeable.exit.i.mptcp_check_writeable.exit_crit_edge ], [ 260, %sk_stream_is_writeable.exit27.thread29.i ], [ 0, %sk_stream_is_writeable.exit27.i.mptcp_check_writeable.exit_crit_edge ], [ 260, %if.end.i.i.i.i.mptcp_check_writeable.exit_crit_edge ], [ 0, %if.end4.i.mptcp_check_writeable.exit_crit_edge ], [ 0, %land.rhs.i.i20.i.mptcp_check_writeable.exit_crit_edge ]
  %or74 = or i32 %retval.0.i130, %retval.0.i128
  br label %if.end75

if.end75:                                         ; preds = %mptcp_check_writeable.exit, %do.end.if.end75_crit_edge, %do.end.if.end75_crit_edge132
  %mask.0 = phi i32 [ %or74, %mptcp_check_writeable.exit ], [ 0, %do.end.if.end75_crit_edge ], [ 0, %do.end.if.end75_crit_edge132 ]
  %sk_shutdown = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 66
  %50 = ptrtoint ptr %sk_shutdown to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %sk_shutdown, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %51)
  %cmp76 = icmp eq i8 %51, 3
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %5)
  %cmp78 = icmp eq i8 %5, 7
  %or.cond = select i1 %cmp76, i1 true, i1 %cmp78
  %or81 = or i32 %mask.0, 16
  %mask.1 = select i1 %or.cond, i32 %or81, i32 %mask.0
  %52 = and i8 %51, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool85.not = icmp eq i8 %52, 0
  %or87 = or i32 %mask.1, 8257
  %mask.2 = select i1 %tobool85.not, i32 %mask.1, i32 %or87
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !393
  %sk_err = getelementptr inbounds %struct.sock, ptr %1, i32 0, i32 51
  %53 = ptrtoint ptr %sk_err to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sk_err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool95.not = icmp eq i32 %54, 0
  %or97 = or i32 %mask.2, 8
  %mask.3 = select i1 %tobool95.not, i32 %mask.2, i32 %or97
  br label %cleanup

cleanup:                                          ; preds = %if.end75, %if.end64, %if.then28, %land.rhs.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond.i, %if.end64 ], [ %mask.3, %if.end75 ], [ 0, %if.then28 ], [ 0, %land.rhs.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_ioctl(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_gettstamp(ptr noundef, ptr noundef, i1 noundef zeroext, i1 noundef zeroext) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mptcp_listen(ptr nocapture noundef readonly %sock, i32 noundef %backlog) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #19
  call void @llvm.arm.gnu.eabi.mcount()
  %sk = getelementptr inbounds %struct.socket, ptr %sock, i32 0, i32 4
  %0 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sk, align 16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mptcp_listen.__UNIQUE_ID_ddebug792, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mptcp_listen, %if.then)) #17
          to label %do.end [label %if.then], !srcloc !350

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #19
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @mptcp_listen.__UNIQUE_ID_ddebug792, ptr noundef nonnull @.str.100, ptr noundef %1) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sk, align 16
  tail call void @lock_sock_nested(ptr noundef %3, i32 noundef 0) #17
  %subflow.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 38
  %4 = ptrtoint ptr %subflow.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %subflow.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %do.end.unlock_crit_edge, label %do.end.i

do.end.unlock_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

do.end.i:                                         ; preds = %do.end
  %can_ack.i = getelementptr inbounds %struct.mptcp_sock, ptr %1, i32 0, i32 22
  %6 = ptrtoint ptr %can_ack.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load volatile i8, ptr %can_ack.i, align 1, !range !344
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool1.not.i = icmp eq i8 %7, 0
  br i1 %tobool1.not.i, label %if.end8, label %do.end.i.unlock_crit_edge

do.end.i.unlock_crit_edge:                        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

if.end8:                                          ; preds = %do.end.i
  tail call void @mptcp_token_destroy(ptr noundef %1) #17
  %8 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sk, align 16
  tail call void @inet_sk_state_store(ptr noundef %9, i32 noundef 10) #17
  %10 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sk, align 16
  %12 = getelementptr inbounds %struct.sock_common, ptr %11, i32 0, i32 13
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %or.i.i = or i32 %14, 8388608
  store i32 %or.i.i, ptr %12, align 4
  %ops = getelementptr inbounds %struct.socket, ptr %5, i32 0, i32 5
  %15 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops, align 4
  %listen = getelementptr inbounds %struct.proto_ops, ptr %16, i32 0, i32 11
  %17 = ptrtoint ptr %listen to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %listen, align 4
  %call11 = tail call i32 %18(ptr noundef nonnull %5, i32 noundef %backlog) #17
  %19 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sk, align 16
  %sk13 = getelementptr inbounds %struct.socket, ptr %5, i32 0, i32 4
  %21 = ptrtoint ptr %sk13 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %sk13, align 16
  %skc_state.i = getelementptr inbounds %struct.sock_common, ptr %22, i32 0, i32 4
  %23 = ptrtoint ptr %skc_state.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load volatile i8, ptr %skc_state.i, align 2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #17, !srcloc !345
  %conv.i = zext i8 %24 to i32
  tail call void @inet_sk_state_store(ptr noundef %20, i32 noundef %conv.i) #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool15.not = icmp eq i32 %call11, 0
  br i1 %tobool15.not, label %if.then16, label %if.end8.unlock_crit_edge

if.end8.unlock_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #19
  br label %unlock

if.then16:                                        ; preds = %if.end8
  %25 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sk, align 16
  %27 = ptrtoint ptr %sk13 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sk13, align 16
  %skc_state.i.i.i = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 4
  %29 = ptrtoint ptr %skc_state.i.i.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load volatile i8, ptr %skc_state.i.i.i, align 2
  %conv.i.i.i = zext i8 %30 to i32
  %shl.i.i.i = shl nuw i32 1, %conv.i.i.i
  %and.i.i.i = and i32 %shl.i.i.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.then16.inet6_sk.exit.i_crit_edge, label %cond.true.i.i

if.then16.inet6_sk.exit.i_crit_edge:              ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit.i

cond.true.i.i:                                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i.i = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 1
  %31 = ptrtoint ptr %pinet6.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pinet6.i.i, align 8
  br label %inet6_sk.exit.i

inet6_sk.exit.i:                                  ; preds = %cond.true.i.i, %if.then16.inet6_sk.exit.i_crit_edge
  %cond.i.i = phi ptr [ %32, %cond.true.i.i ], [ null, %if.then16.inet6_sk.exit.i_crit_edge ]
  %skc_state.i.i63.i = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 4
  %33 = ptrtoint ptr %skc_state.i.i63.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load volatile i8, ptr %skc_state.i.i63.i, align 2
  %conv.i.i64.i = zext i8 %34 to i32
  %shl.i.i65.i = shl nuw i32 1, %conv.i.i64.i
  %and.i.i66.i = and i32 %shl.i.i65.i, -4161
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i66.i)
  %tobool.i.not.i67.i = icmp eq i32 %and.i.i66.i, 0
  br i1 %tobool.i.not.i67.i, label %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge, label %cond.true.i69.i

inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge:      ; preds = %inet6_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %inet6_sk.exit71.i

cond.true.i69.i:                                  ; preds = %inet6_sk.exit.i
  call void @__sanitizer_cov_trace_pc() #19
  %pinet6.i68.i = getelementptr inbounds %struct.inet_sock, ptr %26, i32 0, i32 1
  %35 = ptrtoint ptr %pinet6.i68.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pinet6.i68.i, align 8
  br label %inet6_sk.exit71.i

inet6_sk.exit71.i:                                ; preds = %cond.true.i69.i, %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge
  %cond.i70.i = phi ptr [ %36, %cond.true.i69.i ], [ null, %inet6_sk.exit.i.inet6_sk.exit71.i_crit_edge ]
  %skc_v6_daddr.i = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 10
  %skc_v6_daddr3.i = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 10
  %37 = call ptr @memcpy(ptr %skc_v6_daddr.i, ptr %skc_v6_daddr3.i, i32 16)
  %skc_v6_rcv_saddr.i = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 11
  %skc_v6_rcv_saddr6.i = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 11
  %38 = call ptr @memcpy(ptr %skc_v6_rcv_saddr.i, ptr %skc_v6_rcv_saddr6.i, i32 16)
  %tobool.not.i35 = icmp eq ptr %cond.i70.i, null
  %tobool7.not.i = icmp eq ptr %cond.i.i, null
  %or.cond.i = select i1 %tobool.not.i35, i1 true, i1 %tobool7.not.i
  br i1 %or.cond.i, label %inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge, label %if.then.i

inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge: ; preds = %inet6_sk.exit71.i
  call void @__sanitizer_cov_trace_pc() #19
  br label %mptcp_copy_inaddrs.exit

if.then.i:                                        ; preds = %inet6_sk.exit71.i
  call void @__sanitizer_cov_trace_pc() #19
  %39 = call ptr @memcpy(ptr %cond.i70.i, ptr %cond.i.i, i32 16)
  %flow_label.i = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i.i, i32 0, i32 4
  %40 = ptrtoint ptr %flow_label.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flow_label.i, align 4
  %flow_label9.i = getelementptr inbounds %struct.ipv6_pinfo, ptr %cond.i70.i, i32 0, i32 4
  %42 = ptrtoint ptr %flow_label9.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %flow_label9.i, align 4
  br label %mptcp_copy_inaddrs.exit

mptcp_copy_inaddrs.exit:                          ; preds = %if.then.i, %inet6_sk.exit71.i.mptcp_copy_inaddrs.exit_crit_edge
  %43 = getelementptr inbounds %struct.sock_common, ptr %28, i32 0, i32 2
  %skc_num.i = getelementptr inbounds %struct.anon.6, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %skc_num.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %skc_num.i, align 2
  %46 = getelementptr inbounds %struct.sock_common, ptr %26, i32 0, i32 2
  %skc_num15.i = getelementptr inbounds %struct.anon.6, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %skc_num15.i to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 %45, ptr %skc_num15.i, align 2
  %48 = ptrtoint ptr %43 to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %43, align 4
  %50 = ptrtoint ptr %46 to i32
  call void @__asan_store2_noabort(i32 %50)
  store i16 %49, ptr %46, align 4
  %inet_sport.i = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 6
  %51 = ptrtoint ptr %inet_sport.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %inet_sport.i, align 8
  %inet_sport25.i = getelementptr inbounds %struct.inet_sock, ptr %26, i32 0, i32 6
  %53 = ptrtoint ptr %inet_sport25.i to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 %52, ptr %inet_sport25.i, align 8
  %54 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %28, align 8
  %56 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %26, align 8
  %inet_saddr.i = getelementptr inbounds %struct.inet_sock, ptr %28, i32 0, i32 2
  %57 = ptrtoint ptr %inet_saddr.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %inet_saddr.i, align 4
  %inet_saddr35.i = getelementptr inbounds %struct.inet_sock, ptr %26, i32 0, i32 2
  %59 = ptrtoint ptr %inet_saddr35.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %inet_saddr35.i, align 4
  %skc_rcv_saddr.i = getelementptr inbounds %struct.anon.3, ptr %28, i32 0, i32 1
  %60 = ptrtoint ptr %skc_rcv_saddr.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %skc_rcv_saddr.i, align 4
  %skc_rcv_saddr42.i = getelementptr inbounds %struct.anon.3, ptr %26, i32 0, i32 1
  %62 = ptrtoint ptr %skc_rcv_saddr42.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %skc_rcv_saddr42.i, align 4
  br label %unlock

unlock:                                           ; preds = %mptcp_copy_inaddrs.exit, %if.end8.unlock_crit_edge, %do.end.i.unlock_crit_edge, %do.end.unlock_crit_edge
  %err.0 = phi i32 [ %call11, %if.end8.unlock_crit_edge ], [ 0, %mptcp_copy_inaddrs.exit ], [ -22, %do.end.unlock_crit_edge ], [ -22, %do.end.i.unlock_crit_edge ]
  %63 = ptrtoint ptr %sk to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sk, align 16
  tail call void @release_sock(ptr noundef %64) #17
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_shutdown(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_common_setsockopt(ptr noundef, i32 noundef, i32 noundef, [2 x i32], i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_common_getsockopt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_sendmsg(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_recvmsg(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_no_mmap(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet_sendpage(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mptcp_token_new_connect(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mptcp_pm_fully_established(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @inet6_destroy_sock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet6_release(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet6_getname(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet6_ioctl(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet6_sendmsg(ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inet6_recvmsg(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umin.i8(i8, i8) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.umax.i16(i16, i16) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #16

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #16

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #17

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #18 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 154)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #18 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 154)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { cold noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nounwind readonly }
attributes #12 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #13 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #14 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #17 = { nounwind }
attributes #18 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #19 = { nomerge }
attributes #20 = { nounwind readnone }
attributes #21 = { cold noreturn nounwind }
attributes #22 = { nounwind readonly willreturn }
attributes #23 = { cold nounwind }
attributes #24 = { nobuiltin nounwind }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !17, !18, !19, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !35, !36, !37, !38, !39, !40, !42, !43, !44, !46, !47, !48, !49, !51, !52, !53, !54, !56, !58, !60, !62, !64, !66, !68, !69, !70, !72, !74, !75, !76, !77, !78, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !137, !138, !139, !140, !142, !144, !146, !147, !148, !149, !151, !152, !153, !154, !156, !157, !158, !160, !161, !162, !163, !165, !166, !167, !169, !170, !171, !172, !173, !174, !176, !177, !179, !180, !181, !182, !184, !186, !188, !190, !191, !192, !194, !196, !198, !200, !201, !202, !203, !205, !207, !208, !209, !211, !212, !214, !215, !217, !218, !220, !221, !223, !225, !226, !227, !228, !230, !232, !234, !236, !238, !240, !242, !244, !246, !247, !249, !251, !253, !254, !255, !256, !258, !260, !261, !262, !263, !265, !267, !268, !269, !270, !272, !273, !274, !276, !278, !279, !280, !281, !283, !284, !285, !286, !288, !290, !291, !292, !293, !295, !296, !297, !299, !301, !302, !304, !306, !308, !310, !311, !312, !313, !315, !316, !318, !319, !320, !321, !323, !325, !326, !328}
!llvm.named.register.sp = !{!330}
!llvm.module.flags = !{!331, !332, !333, !334, !335, !336, !337, !338}
!llvm.ident = !{!339}

!0 = !{ptr @__tracepoint_mptcp_subflow_get_send, !1, !"__tracepoint_mptcp_subflow_get_send", i1 false, i1 false}
!1 = !{!"../include/trace/events/mptcp.h", i32 18, i32 1}
!2 = !{ptr @__tracepoint_ptr_mptcp_subflow_get_send, !1, !"__tracepoint_ptr_mptcp_subflow_get_send", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_mptcp_subflow_get_send, !1, !"__SCK__tp_func_mptcp_subflow_get_send", i1 false, i1 false}
!4 = !{ptr @__tracepoint_get_mapping_status, !5, !"__tracepoint_get_mapping_status", i1 false, i1 false}
!5 = !{!"../include/trace/events/mptcp.h", i32 118, i32 1}
!6 = !{ptr @__tracepoint_ptr_get_mapping_status, !5, !"__tracepoint_ptr_get_mapping_status", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_get_mapping_status, !5, !"__SCK__tp_func_get_mapping_status", i1 false, i1 false}
!8 = !{ptr @__tracepoint_ack_update_msk, !9, !"__tracepoint_ack_update_msk", i1 false, i1 false}
!9 = !{!"../include/trace/events/mptcp.h", i32 122, i32 1}
!10 = !{ptr @__tracepoint_ptr_ack_update_msk, !9, !"__tracepoint_ptr_ack_update_msk", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_ack_update_msk, !9, !"__SCK__tp_func_ack_update_msk", i1 false, i1 false}
!12 = !{ptr @__tracepoint_subflow_check_data_avail, !13, !"__tracepoint_subflow_check_data_avail", i1 false, i1 false}
!13 = !{!"../include/trace/events/mptcp.h", i32 154, i32 1}
!14 = !{ptr @__tracepoint_ptr_subflow_check_data_avail, !13, !"__tracepoint_ptr_subflow_check_data_avail", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_subflow_check_data_avail, !13, !"__SCK__tp_func_subflow_check_data_avail", i1 false, i1 false}
!16 = !{ptr @event_class_mptcp_subflow_get_send, !1, !"event_class_mptcp_subflow_get_send", i1 false, i1 false}
!17 = !{ptr @event_mptcp_subflow_get_send, !1, !"event_mptcp_subflow_get_send", i1 false, i1 false}
!18 = !{ptr @__event_mptcp_subflow_get_send, !1, !"__event_mptcp_subflow_get_send", i1 false, i1 false}
!19 = !{ptr @event_class_mptcp_dump_mpext, !20, !"event_class_mptcp_dump_mpext", i1 false, i1 false}
!20 = !{!"../include/trace/events/mptcp.h", i32 65, i32 1}
!21 = !{ptr @event_get_mapping_status, !5, !"event_get_mapping_status", i1 false, i1 false}
!22 = !{ptr @__event_get_mapping_status, !5, !"__event_get_mapping_status", i1 false, i1 false}
!23 = !{ptr @event_class_ack_update_msk, !9, !"event_class_ack_update_msk", i1 false, i1 false}
!24 = !{ptr @event_ack_update_msk, !9, !"event_ack_update_msk", i1 false, i1 false}
!25 = !{ptr @__event_ack_update_msk, !9, !"__event_ack_update_msk", i1 false, i1 false}
!26 = !{ptr @event_class_subflow_check_data_avail, !13, !"event_class_subflow_check_data_avail", i1 false, i1 false}
!27 = !{ptr @event_subflow_check_data_avail, !13, !"event_subflow_check_data_avail", i1 false, i1 false}
!28 = !{ptr @__event_subflow_check_data_avail, !13, !"__event_subflow_check_data_avail", i1 false, i1 false}
!29 = !{ptr @__bpf_trace_tp_map_mptcp_subflow_get_send, !1, !"__bpf_trace_tp_map_mptcp_subflow_get_send", i1 false, i1 false}
!30 = !{ptr @__bpf_trace_tp_map_get_mapping_status, !5, !"__bpf_trace_tp_map_get_mapping_status", i1 false, i1 false}
!31 = !{ptr @__bpf_trace_tp_map_ack_update_msk, !9, !"__bpf_trace_tp_map_ack_update_msk", i1 false, i1 false}
!32 = !{ptr @__bpf_trace_tp_map_subflow_check_data_avail, !13, !"__bpf_trace_tp_map_subflow_check_data_avail", i1 false, i1 false}
!33 = !{ptr @.str, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../net/mptcp/protocol.c", i32 2623, i32 4}
!35 = !{ptr @.str.1, !34, !"<string literal>", i1 false, i1 false}
!36 = !{ptr @.str.2, !34, !"<string literal>", i1 false, i1 false}
!37 = !{ptr @.str.3, !34, !"<string literal>", i1 false, i1 false}
!38 = !{ptr @mptcp_subflow_shutdown.__UNIQUE_ID_ddebug751, !34, !"__UNIQUE_ID_ddebug751", i1 false, i1 false}
!39 = !{ptr @.str.4, !34, !"<string literal>", i1 false, i1 false}
!40 = !{ptr @.str.5, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../net/mptcp/protocol.c", i32 2627, i32 4}
!42 = !{ptr @mptcp_subflow_shutdown.__UNIQUE_ID_ddebug752, !41, !"__UNIQUE_ID_ddebug752", i1 false, i1 false}
!43 = !{ptr @.str.6, !41, !"<string literal>", i1 false, i1 false}
!44 = !{ptr @.str.7, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../net/mptcp/protocol.c", i32 3187, i32 2}
!46 = !{ptr @.str.8, !45, !"<string literal>", i1 false, i1 false}
!47 = !{ptr @mptcp_finish_connect.__UNIQUE_ID_ddebug773, !45, !"__UNIQUE_ID_ddebug773", i1 false, i1 false}
!48 = !{ptr @.str.9, !45, !"<string literal>", i1 false, i1 false}
!49 = !{ptr @.str.10, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../net/mptcp/protocol.c", i32 3227, i32 2}
!51 = !{ptr @.str.11, !50, !"<string literal>", i1 false, i1 false}
!52 = !{ptr @mptcp_finish_join.__UNIQUE_ID_ddebug785, !50, !"__UNIQUE_ID_ddebug785", i1 false, i1 false}
!53 = !{ptr @.str.12, !50, !"<string literal>", i1 false, i1 false}
!54 = distinct !{null, !55, !"__already_done", i1 false, i1 false}
!55 = !{!"../net/mptcp/protocol.c", i32 3241, i32 6}
!56 = !{ptr @mptcp_proto_init.__key, !57, !"__key", i1 false, i1 false}
!57 = !{!"../net/mptcp/protocol.c", i32 3694, i32 6}
!58 = !{ptr @.str.13, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../net/mptcp/protocol.c", i32 3695, i32 9}
!60 = !{ptr @.str.14, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../net/mptcp/protocol.c", i32 3711, i32 9}
!62 = distinct !{null, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../net/mptcp/protocol.c", i32 3765, i32 29}
!64 = !{ptr @mptcp_sockets_allocated, !65, !"mptcp_sockets_allocated", i1 false, i1 false}
!65 = !{!"../net/mptcp/protocol.c", i32 53, i32 30}
!66 = !{ptr @__pcpu_scope_mptcp_delegated_actions, !67, !"__pcpu_scope_mptcp_delegated_actions", i1 false, i1 false}
!67 = !{!"../net/mptcp/protocol.c", i32 58, i32 1}
!68 = !{ptr @__pcpu_unique_mptcp_delegated_actions, !67, !"__pcpu_unique_mptcp_delegated_actions", i1 false, i1 false}
!69 = !{ptr @mptcp_delegated_actions, !67, !"mptcp_delegated_actions", i1 false, i1 false}
!70 = !{ptr @mptcp_napi_dev, !71, !"mptcp_napi_dev", i1 false, i1 false}
!71 = !{!"../net/mptcp/protocol.c", i32 59, i32 26}
!72 = !{ptr @mptcp_v6_prot, !73, !"mptcp_v6_prot", i1 false, i1 false}
!73 = !{!"../net/mptcp/protocol.c", i32 3744, i32 21}
!74 = !{ptr @__tpstrtab_mptcp_subflow_get_send, !1, !"__tpstrtab_mptcp_subflow_get_send", i1 false, i1 false}
!75 = !{ptr @__tpstrtab_get_mapping_status, !5, !"__tpstrtab_get_mapping_status", i1 false, i1 false}
!76 = !{ptr @__tpstrtab_ack_update_msk, !9, !"__tpstrtab_ack_update_msk", i1 false, i1 false}
!77 = !{ptr @__tpstrtab_subflow_check_data_avail, !13, !"__tpstrtab_subflow_check_data_avail", i1 false, i1 false}
!78 = !{ptr @str__mptcp__trace_system_name, !79, !"str__mptcp__trace_system_name", i1 false, i1 false}
!79 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!80 = !{ptr @.str.16, !1, !"<string literal>", i1 false, i1 false}
!81 = !{ptr @.str.17, !1, !"<string literal>", i1 false, i1 false}
!82 = !{ptr @.str.18, !1, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @.str.19, !1, !"<string literal>", i1 false, i1 false}
!84 = !{ptr @.str.20, !1, !"<string literal>", i1 false, i1 false}
!85 = !{ptr @.str.21, !1, !"<string literal>", i1 false, i1 false}
!86 = !{ptr @.str.22, !1, !"<string literal>", i1 false, i1 false}
!87 = !{ptr @.str.23, !1, !"<string literal>", i1 false, i1 false}
!88 = !{ptr @.str.24, !1, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @.str.25, !1, !"<string literal>", i1 false, i1 false}
!90 = !{ptr @trace_event_fields_mptcp_subflow_get_send, !1, !"trace_event_fields_mptcp_subflow_get_send", i1 false, i1 false}
!91 = !{ptr @trace_event_type_funcs_mptcp_subflow_get_send, !1, !"trace_event_type_funcs_mptcp_subflow_get_send", i1 false, i1 false}
!92 = !{ptr @.str.26, !1, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @print_fmt_mptcp_subflow_get_send, !1, !"print_fmt_mptcp_subflow_get_send", i1 false, i1 false}
!94 = !{ptr @.str.27, !20, !"<string literal>", i1 false, i1 false}
!95 = !{ptr @.str.28, !20, !"<string literal>", i1 false, i1 false}
!96 = !{ptr @.str.29, !20, !"<string literal>", i1 false, i1 false}
!97 = !{ptr @.str.30, !20, !"<string literal>", i1 false, i1 false}
!98 = !{ptr @.str.31, !20, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @.str.32, !20, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @.str.33, !20, !"<string literal>", i1 false, i1 false}
!101 = !{ptr @.str.34, !20, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @.str.35, !20, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @.str.36, !20, !"<string literal>", i1 false, i1 false}
!104 = !{ptr @.str.37, !20, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @.str.38, !20, !"<string literal>", i1 false, i1 false}
!106 = !{ptr @.str.39, !20, !"<string literal>", i1 false, i1 false}
!107 = !{ptr @.str.40, !20, !"<string literal>", i1 false, i1 false}
!108 = !{ptr @.str.41, !20, !"<string literal>", i1 false, i1 false}
!109 = !{ptr @.str.42, !20, !"<string literal>", i1 false, i1 false}
!110 = !{ptr @trace_event_fields_mptcp_dump_mpext, !20, !"trace_event_fields_mptcp_dump_mpext", i1 false, i1 false}
!111 = !{ptr @trace_event_type_funcs_mptcp_dump_mpext, !20, !"trace_event_type_funcs_mptcp_dump_mpext", i1 false, i1 false}
!112 = !{ptr @.str.43, !20, !"<string literal>", i1 false, i1 false}
!113 = !{ptr @print_fmt_mptcp_dump_mpext, !20, !"print_fmt_mptcp_dump_mpext", i1 false, i1 false}
!114 = !{ptr @.str.44, !9, !"<string literal>", i1 false, i1 false}
!115 = !{ptr @.str.45, !9, !"<string literal>", i1 false, i1 false}
!116 = !{ptr @.str.46, !9, !"<string literal>", i1 false, i1 false}
!117 = !{ptr @.str.47, !9, !"<string literal>", i1 false, i1 false}
!118 = !{ptr @trace_event_fields_ack_update_msk, !9, !"trace_event_fields_ack_update_msk", i1 false, i1 false}
!119 = !{ptr @trace_event_type_funcs_ack_update_msk, !9, !"trace_event_type_funcs_ack_update_msk", i1 false, i1 false}
!120 = !{ptr @.str.48, !9, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @print_fmt_ack_update_msk, !9, !"print_fmt_ack_update_msk", i1 false, i1 false}
!122 = !{ptr @.str.49, !13, !"<string literal>", i1 false, i1 false}
!123 = !{ptr @.str.50, !13, !"<string literal>", i1 false, i1 false}
!124 = !{ptr @.str.51, !13, !"<string literal>", i1 false, i1 false}
!125 = !{ptr @trace_event_fields_subflow_check_data_avail, !13, !"trace_event_fields_subflow_check_data_avail", i1 false, i1 false}
!126 = !{ptr @trace_event_type_funcs_subflow_check_data_avail, !13, !"trace_event_type_funcs_subflow_check_data_avail", i1 false, i1 false}
!127 = !{ptr @.str.52, !13, !"<string literal>", i1 false, i1 false}
!128 = !{ptr @.str.53, !13, !"<string literal>", i1 false, i1 false}
!129 = !{ptr @.str.54, !13, !"<string literal>", i1 false, i1 false}
!130 = !{ptr @.str.55, !13, !"<string literal>", i1 false, i1 false}
!131 = !{ptr @.str.56, !13, !"<string literal>", i1 false, i1 false}
!132 = !{ptr @.str.57, !13, !"<string literal>", i1 false, i1 false}
!133 = !{ptr @trace_raw_output_subflow_check_data_avail.symbols, !13, !"symbols", i1 false, i1 false}
!134 = !{ptr @print_fmt_subflow_check_data_avail, !13, !"print_fmt_subflow_check_data_avail", i1 false, i1 false}
!135 = !{ptr @.str.58, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../net/mptcp/protocol.c", i32 641, i32 2}
!137 = !{ptr @.str.59, !136, !"<string literal>", i1 false, i1 false}
!138 = !{ptr @__mptcp_move_skbs_from_subflow.__UNIQUE_ID_ddebug684, !136, !"__UNIQUE_ID_ddebug684", i1 false, i1 false}
!139 = !{ptr @.str.60, !136, !"<string literal>", i1 false, i1 false}
!140 = distinct !{null, !141, !"__already_done", i1 false, i1 false}
!141 = !{!"../net/mptcp/protocol.c", i32 690, i32 8}
!142 = distinct !{null, !143, !"__already_done", i1 false, i1 false}
!143 = !{!"../net/mptcp/protocol.c", i32 693, i32 4}
!144 = !{ptr @.str.62, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../net/mptcp/protocol.c", i32 146, i32 2}
!146 = !{ptr @.str.63, !145, !"<string literal>", i1 false, i1 false}
!147 = !{ptr @mptcp_try_coalesce.__UNIQUE_ID_ddebug659, !145, !"__UNIQUE_ID_ddebug659", i1 false, i1 false}
!148 = !{ptr @.str.64, !145, !"<string literal>", i1 false, i1 false}
!149 = !{ptr @.str.65, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../net/mptcp/protocol.c", i32 218, i32 2}
!151 = !{ptr @.str.66, !150, !"<string literal>", i1 false, i1 false}
!152 = !{ptr @mptcp_data_queue_ofo.__UNIQUE_ID_ddebug661, !150, !"__UNIQUE_ID_ddebug661", i1 false, i1 false}
!153 = !{ptr @.str.67, !150, !"<string literal>", i1 false, i1 false}
!154 = !{ptr @.str.68, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../net/mptcp/protocol.c", i32 223, i32 3}
!156 = !{ptr @mptcp_data_queue_ofo.__UNIQUE_ID_ddebug663, !155, !"__UNIQUE_ID_ddebug663", i1 false, i1 false}
!157 = !{ptr @.str.69, !155, !"<string literal>", i1 false, i1 false}
!158 = !{ptr @.str.70, !159, !"<string literal>", i1 false, i1 false}
!159 = !{!"../net/mptcp/protocol.c", i32 720, i32 2}
!160 = !{ptr @.str.71, !159, !"<string literal>", i1 false, i1 false}
!161 = !{ptr @__mptcp_ofo_queue.__UNIQUE_ID_ddebug686, !159, !"__UNIQUE_ID_ddebug686", i1 false, i1 false}
!162 = !{ptr @.str.72, !159, !"<string literal>", i1 false, i1 false}
!163 = !{ptr @.str.73, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../net/mptcp/protocol.c", i32 742, i32 4}
!165 = !{ptr @__mptcp_ofo_queue.__UNIQUE_ID_ddebug688, !164, !"__UNIQUE_ID_ddebug688", i1 false, i1 false}
!166 = !{ptr @.str.74, !164, !"<string literal>", i1 false, i1 false}
!167 = distinct !{null, !168, !"__already_done", i1 false, i1 false}
!168 = !{!"../include/net/sock.h", i32 1750, i32 2}
!169 = !{ptr @.str.75, !168, !"<string literal>", i1 false, i1 false}
!170 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!171 = !{ptr @.str.76, !1, !"<string literal>", i1 false, i1 false}
!172 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!173 = !{ptr @.str.77, !1, !"<string literal>", i1 false, i1 false}
!174 = distinct !{null, !175, !"__already_done", i1 false, i1 false}
!175 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!176 = !{ptr @.str.78, !175, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @.str.79, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../net/mptcp/protocol.c", i32 1243, i32 2}
!179 = !{ptr @.str.80, !178, !"<string literal>", i1 false, i1 false}
!180 = !{ptr @mptcp_sendmsg_frag.__UNIQUE_ID_ddebug698, !178, !"__UNIQUE_ID_ddebug698", i1 false, i1 false}
!181 = !{ptr @.str.81, !178, !"<string literal>", i1 false, i1 false}
!182 = distinct !{null, !183, !"__already_done", i1 false, i1 false}
!183 = !{!"../net/mptcp/protocol.c", i32 1246, i32 6}
!184 = distinct !{null, !185, !"__already_done", i1 false, i1 false}
!185 = !{!"../net/mptcp/protocol.c", i32 1304, i32 3}
!186 = distinct !{null, !187, !"__already_done", i1 false, i1 false}
!187 = !{!"../net/mptcp/protocol.c", i32 1333, i32 3}
!188 = !{ptr @.str.84, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../net/mptcp/protocol.c", i32 1344, i32 2}
!190 = !{ptr @mptcp_sendmsg_frag.__UNIQUE_ID_ddebug703, !189, !"__UNIQUE_ID_ddebug703", i1 false, i1 false}
!191 = !{ptr @.str.85, !189, !"<string literal>", i1 false, i1 false}
!192 = distinct !{null, !193, !"__already_done", i1 false, i1 false}
!193 = !{!"../net/mptcp/protocol.c", i32 970, i32 2}
!194 = !{ptr @.str.86, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../include/linux/mm.h", i32 1160, i32 2}
!196 = distinct !{null, !197, !"__already_done", i1 false, i1 false}
!197 = !{!"../net/mptcp/protocol.c", i32 1071, i32 2}
!198 = !{ptr @.str.87, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../net/mptcp/protocol.c", i32 2670, i32 2}
!200 = !{ptr @.str.88, !199, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @__mptcp_check_send_data_fin.__UNIQUE_ID_ddebug753, !199, !"__UNIQUE_ID_ddebug753", i1 false, i1 false}
!202 = !{ptr @.str.89, !199, !"<string literal>", i1 false, i1 false}
!203 = distinct !{null, !204, !"__warned", i1 false, i1 false}
!204 = !{!"../include/net/sock.h", i32 2444, i32 19}
!205 = distinct !{null, !206, !"__warned", i1 false, i1 false}
!206 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!207 = !{ptr @.str.90, !206, !"<string literal>", i1 false, i1 false}
!208 = !{ptr @.str.91, !206, !"<string literal>", i1 false, i1 false}
!209 = distinct !{null, !210, !"__warned", i1 false, i1 false}
!210 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!211 = !{ptr @.str.92, !210, !"<string literal>", i1 false, i1 false}
!212 = !{ptr @__mptcp_init_sock.__key, !213, !"__key", i1 false, i1 false}
!213 = !{!"../net/mptcp/protocol.c", i32 2526, i32 2}
!214 = !{ptr @.str.93, !213, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @__mptcp_init_sock.__key.94, !216, !"__key", i1 false, i1 false}
!216 = !{!"../net/mptcp/protocol.c", i32 2542, i32 2}
!217 = !{ptr @.str.95, !216, !"<string literal>", i1 false, i1 false}
!218 = !{ptr @__mptcp_init_sock.__key.96, !219, !"__key", i1 false, i1 false}
!219 = !{!"../net/mptcp/protocol.c", i32 2543, i32 2}
!220 = !{ptr @.str.97, !219, !"<string literal>", i1 false, i1 false}
!221 = distinct !{null, !222, !"__already_done", i1 false, i1 false}
!222 = !{!"../net/mptcp/protocol.c", i32 607, i32 4}
!223 = !{ptr @.str.98, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../net/mptcp/protocol.c", i32 2724, i32 2}
!225 = !{ptr @.str.99, !224, !"<string literal>", i1 false, i1 false}
!226 = !{ptr @__mptcp_destroy_sock.__UNIQUE_ID_ddebug759, !224, !"__UNIQUE_ID_ddebug759", i1 false, i1 false}
!227 = !{ptr @.str.100, !224, !"<string literal>", i1 false, i1 false}
!228 = distinct !{null, !229, !"__already_done", i1 false, i1 false}
!229 = !{!"../net/mptcp/protocol.c", i32 2746, i32 2}
!230 = distinct !{null, !231, !"__already_done", i1 false, i1 false}
!231 = !{!"../net/mptcp/protocol.c", i32 2747, i32 2}
!232 = distinct !{null, !233, !"__warned", i1 false, i1 false}
!233 = !{!"../include/net/xfrm.h", i32 1207, i32 8}
!234 = distinct !{null, !235, !"__warned", i1 false, i1 false}
!235 = !{!"../include/net/xfrm.h", i32 1212, i32 8}
!236 = !{ptr @.str.103, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../include/linux/mm.h", i32 717, i32 2}
!238 = distinct !{null, !239, !"__already_done", i1 false, i1 false}
!239 = !{!"../net/mptcp/protocol.c", i32 1020, i32 8}
!240 = distinct !{null, !241, !"__already_done", i1 false, i1 false}
!241 = !{!"../net/mptcp/protocol.c", i32 1036, i32 8}
!242 = distinct !{null, !243, !"__already_done", i1 false, i1 false}
!243 = !{!"../net/mptcp/protocol.c", i32 1038, i32 8}
!244 = distinct !{null, !245, !"__already_done", i1 false, i1 false}
!245 = !{!"../net/mptcp/protocol.h", i32 523, i32 2}
!246 = !{ptr @.str.106, !245, !"<string literal>", i1 false, i1 false}
!247 = distinct !{null, !248, !"__already_done", i1 false, i1 false}
!248 = !{!"../net/mptcp/protocol.c", i32 3123, i32 2}
!249 = !{ptr @mptcp_prot, !250, !"mptcp_prot", i1 false, i1 false}
!250 = !{!"../net/mptcp/protocol.c", i32 3350, i32 21}
!251 = !{ptr @.str.107, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../net/mptcp/protocol.c", i32 2786, i32 2}
!253 = !{ptr @.str.108, !252, !"<string literal>", i1 false, i1 false}
!254 = !{ptr @mptcp_close.__UNIQUE_ID_ddebug760, !252, !"__UNIQUE_ID_ddebug760", i1 false, i1 false}
!255 = !{ptr @.str.109, !252, !"<string literal>", i1 false, i1 false}
!256 = !{ptr @new_state, !257, !"new_state", i1 false, i1 false}
!257 = !{!"../net/mptcp/protocol.c", i32 2638, i32 28}
!258 = !{ptr @.str.110, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../net/mptcp/protocol.c", i32 2707, i32 2}
!260 = !{ptr @.str.111, !259, !"<string literal>", i1 false, i1 false}
!261 = !{ptr @__mptcp_wr_shutdown.__UNIQUE_ID_ddebug756, !259, !"__UNIQUE_ID_ddebug756", i1 false, i1 false}
!262 = !{ptr @.str.112, !259, !"<string literal>", i1 false, i1 false}
!263 = distinct !{null, !264, !"__already_done", i1 false, i1 false}
!264 = !{!"../net/mptcp/protocol.c", i32 2955, i32 6}
!265 = !{ptr @.str.113, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../net/mptcp/protocol.c", i32 2960, i32 2}
!267 = !{ptr @.str.114, !266, !"<string literal>", i1 false, i1 false}
!268 = !{ptr @mptcp_accept.__UNIQUE_ID_ddebug770, !266, !"__UNIQUE_ID_ddebug770", i1 false, i1 false}
!269 = !{ptr @.str.115, !266, !"<string literal>", i1 false, i1 false}
!270 = !{ptr @.str.116, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../net/mptcp/protocol.c", i32 2965, i32 2}
!272 = !{ptr @mptcp_accept.__UNIQUE_ID_ddebug771, !271, !"__UNIQUE_ID_ddebug771", i1 false, i1 false}
!273 = !{ptr @.str.117, !271, !"<string literal>", i1 false, i1 false}
!274 = distinct !{null, !275, !"__already_done", i1 false, i1 false}
!275 = !{!"../net/mptcp/protocol.c", i32 2976, i32 7}
!276 = !{ptr @.str.119, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../net/mptcp/protocol.c", i32 3277, i32 2}
!278 = !{ptr @.str.120, !277, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @mptcp_shutdown.__UNIQUE_ID_ddebug787, !277, !"__UNIQUE_ID_ddebug787", i1 false, i1 false}
!280 = !{ptr @.str.121, !277, !"<string literal>", i1 false, i1 false}
!281 = !{ptr @.str.122, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../net/mptcp/protocol.c", i32 1752, i32 3}
!283 = !{ptr @.str.123, !282, !"<string literal>", i1 false, i1 false}
!284 = !{ptr @mptcp_sendmsg.__UNIQUE_ID_ddebug721, !282, !"__UNIQUE_ID_ddebug721", i1 false, i1 false}
!285 = !{ptr @.str.124, !282, !"<string literal>", i1 false, i1 false}
!286 = distinct !{null, !287, !"__already_done", i1 false, i1 false}
!287 = !{!"../net/mptcp/protocol.h", i32 343, i32 6}
!288 = !{ptr @.str.125, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../net/mptcp/protocol.c", i32 2101, i32 3}
!290 = !{ptr @.str.126, !289, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @mptcp_recvmsg.__UNIQUE_ID_ddebug739, !289, !"__UNIQUE_ID_ddebug739", i1 false, i1 false}
!292 = !{ptr @.str.127, !289, !"<string literal>", i1 false, i1 false}
!293 = !{ptr @.str.128, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../net/mptcp/protocol.c", i32 2117, i32 2}
!295 = !{ptr @mptcp_recvmsg.__UNIQUE_ID_ddebug740, !294, !"__UNIQUE_ID_ddebug740", i1 false, i1 false}
!296 = !{ptr @.str.129, !294, !"<string literal>", i1 false, i1 false}
!297 = distinct !{null, !298, !"__already_done", i1 false, i1 false}
!298 = !{!"../net/mptcp/protocol.c", i32 3154, i32 2}
!299 = !{ptr @.str.130, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../net/mptcp/protocol.c", i32 3169, i32 2}
!301 = !{ptr @mptcp_get_port.__UNIQUE_ID_ddebug772, !300, !"__UNIQUE_ID_ddebug772", i1 false, i1 false}
!302 = distinct !{null, !303, !"__already_done", i1 false, i1 false}
!303 = !{!"../net/mptcp/protocol.c", i32 3170, i32 6}
!304 = !{ptr @mptcp_protosw, !305, !"mptcp_protosw", i1 false, i1 false}
!305 = !{!"../net/mptcp/protocol.c", i32 3646, i32 28}
!306 = !{ptr @mptcp_stream_ops, !307, !"mptcp_stream_ops", i1 false, i1 false}
!307 = !{!"../net/mptcp/protocol.c", i32 3624, i32 31}
!308 = !{ptr @.str.131, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../net/mptcp/protocol.h", i32 864, i32 3}
!310 = !{ptr @.str.132, !309, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @__mptcp_do_fallback.__UNIQUE_ID_ddebug629, !309, !"__UNIQUE_ID_ddebug629", i1 false, i1 false}
!312 = !{ptr @.str.133, !309, !"<string literal>", i1 false, i1 false}
!313 = !{ptr @.str.134, !314, !"<string literal>", i1 false, i1 false}
!314 = !{!"../net/mptcp/protocol.c", i32 3511, i32 2}
!315 = !{ptr @mptcp_stream_accept.__UNIQUE_ID_ddebug793, !314, !"__UNIQUE_ID_ddebug793", i1 false, i1 false}
!316 = !{ptr @.str.135, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../net/mptcp/protocol.c", i32 3599, i32 2}
!318 = !{ptr @.str.136, !317, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @mptcp_poll.__UNIQUE_ID_ddebug794, !317, !"__UNIQUE_ID_ddebug794", i1 false, i1 false}
!320 = !{ptr @.str.137, !317, !"<string literal>", i1 false, i1 false}
!321 = distinct !{null, !322, !"__already_done", i1 false, i1 false}
!322 = !{!"../net/mptcp/protocol.c", i32 3601, i32 7}
!323 = !{ptr @.str.138, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../net/mptcp/protocol.c", i32 3481, i32 2}
!325 = !{ptr @mptcp_listen.__UNIQUE_ID_ddebug792, !324, !"__UNIQUE_ID_ddebug792", i1 false, i1 false}
!326 = !{ptr @mptcp_v6_protosw, !327, !"mptcp_v6_protosw", i1 false, i1 false}
!327 = !{!"../net/mptcp/protocol.c", i32 3752, i32 28}
!328 = !{ptr @mptcp_v6_stream_ops, !329, !"mptcp_v6_stream_ops", i1 false, i1 false}
!329 = !{!"../net/mptcp/protocol.c", i32 3719, i32 31}
!330 = !{!"sp"}
!331 = !{i32 1, !"wchar_size", i32 2}
!332 = !{i32 1, !"min_enum_size", i32 4}
!333 = !{i32 8, !"branch-target-enforcement", i32 0}
!334 = !{i32 8, !"sign-return-address", i32 0}
!335 = !{i32 8, !"sign-return-address-all", i32 0}
!336 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!337 = !{i32 7, !"uwtable", i32 1}
!338 = !{i32 7, !"frame-pointer", i32 2}
!339 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!340 = !{!"branch_weights", i32 2000, i32 1}
!341 = !{!"branch_weights", i32 1, i32 2000}
!342 = !{i64 2148694578, i64 2148694858, i64 2148695192, i64 2148695526}
!343 = !{!"auto-init"}
!344 = !{i8 0, i8 2}
!345 = !{i64 2157013034}
!346 = !{i64 696525, i64 696586}
!347 = !{i64 699257}
!348 = !{i64 699542}
!349 = !{i64 2148305574, i64 2148305606, i64 2148305635, i64 2148305669, i64 2148305700, i64 2148305723}
!350 = !{i64 2148785859, i64 2148785864, i64 2148785877, i64 2148785921, i64 2148785955, i64 2148785976}
!351 = !{i64 2154088175, i64 2154088659, i64 2154088212, i64 2154088268, i64 2154088302, i64 2154088326, i64 2154088367, i64 2154088388, i64 2154088416, i64 2154088450}
!352 = !{i64 2148304044, i64 2148304070, i64 2148304099, i64 2148304133, i64 2148304164, i64 2148304187}
!353 = !{i64 7105709}
!354 = !{i64 2159203900}
!355 = !{i64 2148393575}
!356 = !{i64 2148308039, i64 2148308071, i64 2148308100, i64 2148308134, i64 2148308165, i64 2148308188}
!357 = !{i64 2149400023}
!358 = !{i64 2159155982}
!359 = !{i64 2159160916}
!360 = !{i64 2159180534}
!361 = !{i64 2160677313}
!362 = !{i64 2155049551, i64 2155050039, i64 2155049588, i64 2155049644, i64 2155049678, i64 2155049702, i64 2155049743, i64 2155049764, i64 2155049792, i64 2155049826}
!363 = !{i64 2148306509, i64 2148306535, i64 2148306564, i64 2148306598, i64 2148306629, i64 2148306652}
!364 = !{i64 2159322208}
!365 = !{i64 2159322429}
!366 = !{i64 2149459072}
!367 = !{i64 2149460108}
!368 = !{!"branch_weights", i32 2146410443, i32 1073205}
!369 = !{!"branch_weights", i32 1073205, i32 2146410443}
!370 = distinct !{!370, !371}
!371 = !{!"llvm.loop.peeled.count", i32 1}
!372 = !{i64 2149450513}
!373 = !{i64 2149450779}
!374 = !{i64 2160554714}
!375 = !{i64 2160365260}
!376 = !{i64 2160324589}
!377 = !{i64 2154064202, i64 2154064685, i64 2154064239, i64 2154064295, i64 2154064329, i64 2154064353, i64 2154064394, i64 2154064415, i64 2154064443, i64 2154064477}
!378 = !{i64 2148392496}
!379 = !{i64 2148307229, i64 2148307261, i64 2148307290, i64 2148307324, i64 2148307355, i64 2148307378}
!380 = !{i64 2148392725}
!381 = !{i64 5645791}
!382 = !{i64 5645988}
!383 = !{i64 2153131221}
!384 = !{i64 2160699945, i64 2160700225, i64 2160700559, i64 2160700893}
!385 = !{i64 2149171389, i64 2149171412, i64 2149171444, i64 2149171476, i64 2149171514, i64 2149171544}
!386 = !{i64 2156841056}
!387 = !{i64 810812, i64 810829, i64 810853, i64 810879, i64 810897}
!388 = !{i64 2156841399}
!389 = !{i64 1209034, i64 1209061, i64 1209083, i64 1209111}
!390 = !{i64 1209442, i64 1209469, i64 1209502, i64 1209523, i64 1209550, i64 1209576}
!391 = !{i64 2156834806}
!392 = !{i64 2160715585}
!393 = !{i64 2160719290}
